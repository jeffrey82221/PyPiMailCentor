ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiQWxsZW4gQmFya2VyIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiQWxsZW4uTC5CYXJrZXJAZ21haWwuY29tIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA0IC0gQmV0YSIs
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogTWljcm9zb2Z0IDo6IFdpbmRvd3MiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVgiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogVW5peCIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiBJbXBsZW1lbnRhdGlvbiA6OiBDUHl0aG9uIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiBJbXBsZW1lbnRhdGlvbiA6OiBQeVB5Iiw=
ICAgICAgIlRvcGljIDo6IFV0aWxpdGllcyI=
ICAgIF0s

ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAiIiw=
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2FiYXJrZXIvcmVjZHJvaWR2aWQiLA==
ICAgICJrZXl3b3JkcyI6ICJhbmRyb2lkLGxpbnV4LHVzYixyZW1vdGUsYWRiLHZpZGVvLG1vdmllLHJlY29yZCxtb25pdG9yIiw=
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInJlY2Ryb2lkdmlkIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVjZHJvaWR2aWQvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVjZHJvaWR2aWQvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9hYmFya2VyL3JlY2Ryb2lkdmlkIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVjZHJvaWR2aWQvMC4xLjAvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgIndoZWVsIg==
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjYiLA==
ICAgICJzdW1tYXJ5IjogIlJlY29yZCBhbmQgbW9uaXRvciB2aWRlbyBvbiBhbmRyb2lkIGRldmljZXMgZnJvbSBjb21wdXRlciAoY3VycmVudGx5IExpbnV4IHZpYSBVU0IpLiIs
ICAgICJ2ZXJzaW9uIjogIjAuMS4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNTQ0NDAxMCw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjEuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0MDIwODAyMjYzOTIzNTlhMzBjMDc0Y2Q5MjMxNzQxZTQ3ODNjOWNiZWRkZGE4ZDY0MmY4MjVjOTgxYjVhMzJkIiw=
ICAgICAgICAgICJtZDUiOiAiNGZkZGQzMmZkMzdlNGQ2YzJlYmFlZGRlYzdlM2U3YTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzkwYzUxMTk2ZjJkNDFmNGJjYTUxZWY4YWI5ZDU3YmQ3OTE2ZGM1ZGI5N2ZiMWM4YWU0OWQ0MmQ0OGIwNWE2NiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicmVjZHJvaWR2aWQtMC4xLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0ZmRkZDMyZmQzN2U0ZDZjMmViYWVkZGVjN2UzZTdhNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDIwNzM5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0xMC0xOFQwMjo0NDowMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0xMC0xOFQwMjo0NDowMi4wNDgwNzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80MC8yMC84MDIyNjM5MjM1OWEzMGMwNzRjZDkyMzE3NDFlNDc4M2M5Y2JlZGRkYThkNjQyZjgyNWM5ODFiNWEzMmQvcmVjZHJvaWR2aWQtMC4xLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNDAyMDgwMjI2MzkyMzU5YTMwYzA3NGNkOTIzMTc0MWU0NzgzYzljYmVkZGRhOGQ2NDJmODI1Yzk4MWI1YTMyZCIs
ICAgICAgICAibWQ1IjogIjRmZGRkMzJmZDM3ZTRkNmMyZWJhZWRkZWM3ZTNlN2E3Iiw=
ICAgICAgICAic2hhMjU2IjogIjc5MGM1MTE5NmYyZDQxZjRiY2E1MWVmOGFiOWQ1N2JkNzkxNmRjNWRiOTdmYjFjOGFlNDlkNDJkNDhiMDVhNjYi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInJlY2Ryb2lkdmlkLTAuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNGZkZGQzMmZkMzdlNGQ2YzJlYmFlZGRlYzdlM2U3YTciLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiAyMDczOSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMTAtMThUMDI6NDQ6MDIiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMTAtMThUMDI6NDQ6MDIuMDQ4MDc2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNDAvMjAvODAyMjYzOTIzNTlhMzBjMDc0Y2Q5MjMxNzQxZTQ3ODNjOWNiZWRkZGE4ZDY0MmY4MjVjOTgxYjVhMzJkL3JlY2Ryb2lkdmlkLTAuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
