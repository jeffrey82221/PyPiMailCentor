ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiQW5uZW1hcmllIFdpdHRpZyA8d2l0dGlnYW5tYXJpZUBnbWFpbC5jb20+Iiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIjIEF1dG9tYXRpb24gU2VydmljZSBcblxuVGhlIEF1dG9tYXRpb24gU2VydmljZSBvZmZlcnMgdGhlIHBvc3NpYmlsaXR5IHRvIGhhdmUgYW4gYXV0b21hdGljYWxseVxuZ2VuZXJhdGVkIG1vZGVsIGJhc2VkIG9uIGl0cyBnaXZlbiBkYXRhIGFuZCBlbmRwb2ludHMgdG8gaW50ZXJhY3Qgd2l0aFxuaXQuIEluIHRoaXMgZmlsZSwgdGhlIGV4YW1wbGVzIGdpdmVuIHdpbGwgZm9sbG93IGEgTkVSIGNvbmNlcm5pbmcgbmFtZXMsXG5zLnQuLCBpdCB0cmllcyB0byBpZGVudGlmeSAqRmlyc3RuYW1lcyosICpNaWRkbGVuYW1lcyosIGFuZCAqTGFzdG5hbWVzKi5cbkhvd2V2ZXIsIHlvdSBtYXkgZGVmaW5lIGFueSBlbnRpdGllcyB0byByZWNvZ25pemUgdGhhdCB5b3Ugd2FudC4gQSBkZW1vXG5vZiB0aGUgc2VydmljZSBjYW4gYmUgYWNjZXNzZWQgYXQgPGh0dHA6Ly9kZW1vcy5zd2UuaHR3ay1sZWlwemlnLmRlPi5cblxuVGhlIHNlcnZpY2UgY2FuIGJlIHJ1biBhcyBzdGFuZGFsb25lIG9yIHdpdGhpbiBhIFtRYW5hcnktZHJpdmVuIFF1ZXN0aW9uXG5BbnN3ZXJpbmcgc3lzdGVtXShodHRwczovL2dpdGh1Yi5jb20vV0RBcXVhL1FhbmFyeSkuXG5cblN0YXJ0aW5nIENvbmRpdGlvbnNcbj09PT09PT09PT09PT09PT09PT1cblxuVGhlcmUgYXJlIHR3byBvcHRpb25zIChyZXF1aXJlbWVudHMpIGZvciBzdGFydGluZyB0aGUgc2VydmljZTpcblxuLSAgIG9wdGlvbiAxOiBhIHByZS10cmFpbmVkIG1vZGVsLCBvclxuXG4tICAgb3B0aW9uIDI6IHRoZXJlIG11c3QgYmUgZWl0aGVyIGNvbXBhdGlibGUgZGF0YXNldHMgZm9yIHRyYWluaW5nIGFuZFxuICAgIHRlc3RpbmcuXG5cbk9wdGlvbiAxXG4tLS0tLS0tLVxuXG5JZiBhIHByZS10cmFpbmVkIG1vZGVsIGlzIGludGVuZGVkIHRvIGJlIHByb3ZpZGVkLCBpdCBtdXN0IGJlIGF2YWlsYWJsZVxuaW4gdGhlIGZvbGRlclxuW0F1dG9tYXRpb25TZXJ2aWNlL0F1dG9tYXRpb25TZXJ2aWNlQmFja2VuZC9kYXRhL21vZGVsXSguL0F1dG9tYXRpb25TZXJ2aWNlL0F1dG9tYXRpb25TZXJ2aWNlQmFja2VuZC9kYXRhL21vZGVsKVxuKGRlZmF1bHQgY29uZmlndXJhdGlvbikuIFRoZSBzZXJ2aWNlIHdvcmtzIG9ubHkgd2l0aFxuW3NwYUN5XShodHRwczovL3NwYWN5LmlvKSBtb2RlbHMuIEhlbmNlLCB5b3VyIG1vZGVsIG5lZWRzIHRvIGZvbGxvdyB0aGVcbnNwYUN5IHN0YW5kYXJkcyAob3Igc2hvdWxkIGJlIHRyYWluZWQgdXNpbmcgc3BhQ3kpLiBJbiBhIG5ldGNvbnNvbGUsXG5qdXN0IGNvcHkgdGhlIGNvbnRlbnRzIG9mIGEgdHJhaW5lZCBtb2RlbCAodXN1YWxseSBpbiB0aGUgZm9sZGVyXG5gbW9kZWwtYmVzdGAgb3IgYG1vZGVsLWxhc3RgKSBpbnRvIHRoZSBtZW50aW9uZWQgZm9sZGVyLlxuXG5PcHRpb24gMlxuLS0tLS0tLS1cblxuSWYgbm8gcHJlLXRyYWluZWQgbW9kZWwgaXMgcHJvdmlkZWQsIHRyYWluaW5nIGFuZCB0ZXN0aW5nIGRhdGEgbXVzdCBiZVxucHJvdmlkZWQgdG8gdGhlIHN5c3RlbS4gT3RoZXJ3aXNlLCB0aGUgd2ViIHNlcnZpY2Ugd2lsbCBub3Qgc3RhcnQuIEJvdGhcbmZpbGVzIG11c3QgYmUgcHJvdmlkZWQgaW4gdGhlIGZvbGRlclxuW0F1dG9tYXRpb25TZXJ2aWNlL0F1dG9tYXRpb25TZXJ2aWNlQmFja2VuZC9kYXRhL3RyYWluaW5nZGF0YV0oLi9BdXRvbWF0aW9uU2VydmljZS9BdXRvbWF0aW9uU2VydmljZUJhY2tlbmQvZGF0YS90cmFpbmluZ2RhdGEpLlxuQWRkaXRpb25hbGx5LCB0aGUgZmlsZSBuYW1lcyBtdXN0IGJlIGRlZmluZWQgaW4gdGhlXG5bLmVudl0oLi9BdXRvbWF0aW9uU2VydmljZS8uZW52KSBmaWxlLiBCb3RoIGRhdGFzZXRzIG11c3QgYWx3YXlzIGJlIGluXG5DU1YgZmlsZSBmb3JtYXQgYW5kIG1lZXQgdGhlIGZvbGxvd2luZyByZXF1aXJlbWVudHM6XG5cbi0gICBFYWNoIGZpbGUgY29udGFpbnMgY29sdW1ucyBmb3IgdGhlIGlucHV0LXRleHQgKGZpcnN0IGNvbHVtbikgYW5kXG4gICAgZWFjaCBlbnRpdHkgdGhlIG1vZGVsIHNob3VsZCBiZSBhYmxlIHRvIGlkZW50aWZ5LlxuXG4tICAgVGhlbiwgZWFjaCBkYXRhLXRleHQgaXMgd3JpdHRlbiBpbnRvIHRoZSB0ZXh0LWNvbHVtbiBhbmRcbiAgICBhZGRpdGlvbmFsbHksIHRoZSB2YWx1ZXMgZm9yIGVhY2ggZW50aXR5IGluc2lkZSB0aGUgdGV4dCBhcmUgZGVmaW5lZFxuICAgIHNlcGFyYXRlbHkgaW4gdGhlIHJlc3BlY3RpdmUgY29sdW1uLlxuXG4tICAgSWYgYSB0ZXh0IGRvZXMgbm90IGNvbnRhaW4gYSB2YWx1ZSBmb3IgYSBkZWZpbmVkIGVudGl0eSwgdGhlXG4gICAgY29ycmVzcG9uZGluZyBjZWxsIG11c3QgYmUgZW1wdHkuXG5cbkFuIGV4YW1wbGUgZm9yIGFuIFtleGVtcGxhcnkgQ1NWLWZvcm1hdHRlZCBkYXRhc2V0IGZvciByZWNvZ25pemluZyBuYW1lc1xub2YgcGVvcGxlXSguL0F1dG9tYXRpb25TZXJ2aWNlL0V4YW1wbGVCb2RpZXMvbmFtZSkgd291bGQgYmUgc29tZXRoaW5nXG5saWtlIHRoaXM6XG5cbjx0YWJsZT5cbjxjb2xncm91cD5cbjxjb2wgc3R5bGU9XCJ3aWR0aDogMjUlXCIgLz5cbjxjb2wgc3R5bGU9XCJ3aWR0aDogMjUlXCIgLz5cbjxjb2wgc3R5bGU9XCJ3aWR0aDogMjUlXCIgLz5cbjxjb2wgc3R5bGU9XCJ3aWR0aDogMjUlXCIgLz5cbjwvY29sZ3JvdXA+XG48dGhlYWQ+XG48dHIgY2xhc3M9XCJoZWFkZXJcIj5cbjx0aD5OYW1lPC90aD5cbjx0aD5GaXJzdF9OYW1lPC90aD5cbjx0aD5NaWRkbGVfTmFtZTwvdGg+XG48dGg+TGFzdF9OYW1lPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyIGNsYXNzPVwib2RkXCI+XG48dGQ+PHA+SSBhbSBNcyBXYWx0ZXJzPC9wPjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD48L3RkPlxuPHRkPjxwPldhbHRlcnM8L3A+PC90ZD5cbjwvdHI+XG48dHIgY2xhc3M9XCJldmVuXCI+XG48dGQ+PHA+RG8geW91IHRoaW5rIFNpbGtlIHdpbGwgY29tZT88L3A+PC90ZD5cbjx0ZD48cD5TaWxrZTwvcD48L3RkPlxuPHRkPjwvdGQ+XG48dGQ+PHA+c3RhcnRxdWVzdGlvbmFuc3dlcmluZ3dpdGh0ZXh0cXVlc3Rpb248L3A+PC90ZD5cbjwvdHI+XG48dHIgY2xhc3M9XCJvZGRcIj5cbjx0ZD48cD5JIGRvIGhhdmUgYSBtaWRkbGVuYW1lLCBpdOKAmXMgSGVpbnotV2lsaGVsbTwvcD48L3RkPlxuPHRkPjwvdGQ+XG48dGQ+PHA+SGVpbnotV2lsaGVsbTwvcD48L3RkPlxuPHRkPjwvdGQ+XG48L3RyPlxuPHRyIGNsYXNzPVwiZXZlblwiPlxuPHRkPjxwPllvdSBjYW4gc2VuZCB0aGUgZGF0YSB0byBJbmdldHJhdXQgUmVuejwvcD48L3RkPlxuPHRkPjxwPkluZ2V0cmF1dDwvcD48L3RkPlxuPHRkPjwvdGQ+XG48dGQ+PHA+UmVuejwvcD48L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG5UcmFpbmluZyBhbmQgdGVzdGluZyBkYXRhIG11c3QgZm9sbG93IHRoZSBzYW1lIGJhc2ljIHN0cnVjdHVyZSAoaS5lLixcbnRoZXkgbXVzdCBoYXZlIHRoZSBzYW1lIGNvbHVtbiBuYW1lKS5cblxuVGhlcmUgYXJlIHR3byBleGFtcGxlIGVudmlyb25tZW50cyBmaWxlcyBnaXZlbiBmb3IgaW5pdGlhbCB0cmFpbmluZyB3aXRoXG5bbmFtZV0oLi8uZW52LnRlbXBsYXRlLW5hbWUtdHJhaW5pbmcpIG9yXG5bYWRkcmVzc10oLi8uZW52LnRlbXBsYXRlLWFkZHJlc3MtdHJhaW5pbmcpIGRhdGEuXG5cblN0YXJ0aW5nIHRoZSBTZXJ2aWNlXG49PT09PT09PT09PT09PT09PT09PVxuXG5UbyBzdGFydCB0aGUgc2VydmljZSwgZG9ja2VyLWNvbXBvc2UgZmlsZXMgYXJlIHByb3ZpZGVkLiBUaGVyZWZvcmUsIHlvdVxubmVlZCB0byBoYXZlIGRvY2tlciBhbmQgZG9ja2VyLWNvbXBvc2UgaW5zdGFsbGVkLiBBZGRpdGlvbmFsbHksIGlmIHlvdVxud2FudCB0byB1c2UgYSBHUFUgdG8gdHJhaW4gdGhlIG1vZGVscywgeW91IG1pZ2h0IG5lZWQgYWRkaXRpb25hbFxucmVxdWlyZW1lbnRzIGJhc2VkIG9uIHlvdXIgZHJpdmVycyAvIGhhcmR3YXJlLCBpZiBub3QgeW91IG5lZWQgdG8gcmVtb3ZlXG50aGUgbGluZXMgZnJvbSB0aGUgZG9ja2VyLWNvbXBvc2UuIFJlZmVyIHRvIHRoZSBkb2N1bWVudGF0aW9uIG5lZWRlZCBmb3JcbnRoZXNlLiBOb3RoaW5nIGVsc2UgaXMgbmVlZGVkLlxuXG5TdGFydGluZyBhcyBhIHN0YW5kYWxvbmUgU2VydmljZVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuSWYgeW91IHdhbnQgdG8gcnVuIHRoZSBzZXJ2aWNlIGFzIGEgc3RhbmRhbG9uZSwgaW4gdGhlIHJvb3QgZGlyZWN0b3J5XG5idWlsZCB0aGUgaW1hZ2VzLiBQbGVhc2Ugbm90ZSB0aGF0IGlmIHRoZSBzZXJ2aWNlIHJ1bnMgYXMgYSBzdGFuZGFsb25lLFxuaXQgd2lsbCBiZSBydW5uaW5nIG9uIHRoZSBwb3J0ICo4MDAyKiBwZXIgZGVmYXVsdCBhcyBvcHBvc2VkIHRvIDgwODAgYW5kXG44MDgxLlxuXG4gICAgZG9ja2VyLWNvbXBvc2UgLWYgZG9ja2VyLWNvbXBvc2Vfc3RhbmRhbG9uZS55bWwgYnVpbGRcblxuWW91IGNhbiB0aGVuIHJ1biB0aGUgc2VydmljZSB2aWE6XG5cbiAgICBkb2NrZXItY29tcG9zZSAtZiBkb2NrZXItY29tcG9zZV9zdGFuZGFsb25lLnltbCB1cFxuXG5BZGQgYC1kYCB0byB0aGUgY2FsbCB0byBoYXZlIGl0IHJ1biBpbiB0aGUgYmFja2dyb3VuZCBhbmQgbm90IGJlIGJvdW5kXG5ieSB0aGUgcnVubmluZyBjb25zb2xlLlxuXG5TdGFydGluZyBhIFFhbmFyeSBFbnZpcm9ubWVudFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuIyMjIFN0YXJ0aW5nIGEgY29tcGxldGUgUWFuYXJ5IGVudmlyb25tZW50XG5cbklmIHlvdSB3YW50IHRvIHJ1biB0aGUgc2VydmljZSBhcyBhIFFhbmFyeSBjb21wb25lbnQsIGluIHRoZSByb290XG5kaXJlY3RvcnkgYnVpbGQgdGhlIGltYWdlcyBmb3IgaXQuIFRoZSBzZXR1cCBpbiB0aGUgZG9ja2VyLWNvbXBvc2VcbmF1dG9tYXRpY2FsbHkgY3JlYXRlcyBhIFFhbmFyeSBpbnN0YW5jZSBhcyB3ZWxsIGFzIGEgU3RhcmRvZyBzZXJ2ZXIgdG9cbmludGVyYWN0IHdpdGguXG5cbiAgICBkb2NrZXItY29tcG9zZSAtZiBkb2NrZXItY29tcG9zZV9RYW5hcnlDb21wb25lbnQueW1sIGJ1aWxkXG5cbllvdSBjYW4gdGhlbiBydW4gaXQgdmlhOlxuXG4gICAgZG9ja2VyLWNvbXBvc2UgLWYgZG9ja2VyLWNvbXBvc2VfUWFuYXJ5Q29tcG9uZW50LnltbCB1cFxuXG5BZGQgYC1kYCB0byB0aGUgY2FsbCB0byBoYXZlIGl0IHJ1biBpbiB0aGUgYmFja2dyb3VuZCBhbmQgbm90IGJlIGJvdW5kXG5ieSB0aGUgcnVubmluZyBjb25zb2xlLlxuXG5Vc2luZyB0aGUgZmlsZSBgZG9ja2VyLWNvbXBvc2UtZnVsbC1leGFtcGxlLnltbGAgd2lsbCBjb25uZWN0IHRoZVxucGlwZWxpbmUgYXV0b21hdGljYWxseSB0byB0aGUgSFRXSyBTdGFyZG9nIHNlcnZlci5cblxuIyMjIEhvdyB0byBzdGFydCB0aGUgc2VydmljZSBhbmQgY29ubmVjdCBpdCB0byBhbiBleGlzdGluZyBRYW5hcnkgUXVlc3Rpb24gQW5zd2VyaW5nIFN5c3RlbVxuXG5JZiB5b3UgYWxyZWFkeSBoYXZlIGEgUWFuYXJ5IHBpcGVsaW5lLCB5b3UgbWlnaHQganVzdCB3YW50IHRvIGFkZCB0aGVcbmNvbXBvbmVudCB0byBpdC4gSW4gdGhpcyBjYXNlLCB5b3UgY2FuIGJ1aWxkIGFuZCBzdGFydCBvbmx5IHRoZSByZXF1aXJlZFxuY29tcG9uZW50LiBUbyBkbyB0aGlzLCB0aGUgZm9sbG93aW5nIGNvbW1hbmVkIGlzIHVzZWQ6XG5cbiAgICBkb2NrZXItY29tcG9zZSAtZiBkb2NrZXItY29tcG9zZV9RYW5hcnlDb21wb25lbnQueW1sIGJ1aWxkIGF1dG9tYXRpb25fY29tcG9uZW50XG5cbllvdSBjYW4gdGhlbiBydW4gaXQgdmlhOlxuXG4gICAgZG9ja2VyLWNvbXBvc2UgLWYgZG9ja2VyLWNvbXBvc2VfUWFuYXJ5Q29tcG9uZW50LnltbCB1cCBhdXRvbWF0aW9uX2NvbXBvbmVudFxuXG5BZGQgYC1kYCB0byB0aGUgY2FsbCB0byBoYXZlIGl0IHJ1biBpbiB0aGUgYmFja2dyb3VuZCBhbmQgbm90IGJlIGJvdW5kXG5ieSB0aGUgcnVubmluZyBjb25zb2xlLlxuXG5Ib3dldmVyLCBpbiB0aGF0IGNhc2UgYWRkaXRpb25hbCBjb25maWd1cmF0aW9ucyBhcmUgbmVlZGVkIHRvIGJlIGRvbmUuXG5UbyBjb25uZWN0IHRoZSBzZXJ2aWNlIHRvIGFuIGV4aXN0aW5nIFFhbmFyeSBwaXBlbGluZSwgdGhlIGZvbGxvd2luZ1xuc3RlcHMgbXVzdCBiZSB0YWtlbjpcblxuLSAgIEluIHRoZSBoaWdoZXN0IFsuZW52XSguL0F1dG9tYXRpb25TZXJ2aWNlLy5lbnYpIGZpbGUsIHRoZSBmb2xsb3dpbmdcbiAgICB2YWx1ZXMgaGF2ZSB0byBiZSBhZGp1c3RlZDpcblxuICAgIC0gICBgU1BSSU5HX0JPT1RfQURNSU5fVVJMYFxuXG4gICAgLSAgIGBTUFJJTkdfQk9PVF9BRE1JTl9VU0VSTkFNRWBcblxuICAgIC0gICBgU1BSSU5HX0JPT1RfQURNSU5fUEFTU1dPUkRgXG5cbi0gICBJbiB0aGUgc2FtZSBmaWxlLCB0aGUgY29tcG9uZW50IGNvbm5lY3Rpb24gc2V0dGluZ3MgaGF2ZSB0byBiZVxuICAgIGFkanVzdGVkOlxuXG4gICAgLSAgIGBTRVJWSUNFX0hPU1RgXG5cbiAgICAtICAgYFNFUlZJQ0VfUE9SVGBcblxuLSAgIFlvdSBjYW4gYWxzbyBmaW5kIHRoZSBjb21wb25lbnQgbmFtZSBhbmQgZGVzY3JpcHRpb24gaW4gdGhpcyBmaWxlXG5cblRvIGNvbm5lY3QgdGhlIHNlcnZpY2Ugd2l0aCBhbiBhbHJlYWR5IGV4aXN0aW5nIE1MIEZsb3cgTG9nZ2VyLCB0aGVcbmZvbGxvd2luZyBzdGVwcyBtdXN0IGJlIHRha2VuOlxuXG4tICAgSW4gdGhlIFsuZW52XSguL0F1dG9tYXRpb25TZXJ2aWNlL0F1dG9tYXRpb25TZXJ2aWNlQmFja2VuZC9hcHAvLmVudilcbiAgICBmaWxlIG9mIHRoZSBjb21wb25lbnQsIHRoZSBmb2xsb3dpbmcgdmFsdWVzIGhhdmUgdG8gYmUgYWRqdXN0ZWQ6XG5cbiAgICAtICAgYE1MRkxPV19VUklgXG5cbi0gICBJbiB0aGUgc2FtZSBmaWxlLCBpZiBTRlRQIGlzIHVzZWQsIHRoZSBmb2xsb3dpbmcgdmFsdWVzIGhhdmUgdG8gYmVcbiAgICBhZGp1c3RlZDpcblxuICAgIC0gICBgVVNFX1NGVFAgPSBUcnVlYFxuXG4gICAgLSAgIGBNTEZMT1dfSE9TVGBcblxuICAgIC0gICBgTUxGTE9XX1BPUlRgXG5cbi0gICBJbiB0aGUgaGlnaGVzdCBbLmVudl0oLi9BdXRvbWF0aW9uU2VydmljZS8uZW52KSBmaWxlLCB0aGUgTUwgRkxPV1xuICAgIExvZ2dlciB2YWx1ZXMgYXJlIG9ubHkgcmVsZXZhbnQgZm9yIHRoZSBjb21wbGV0ZSBzeXN0ZW0gYW5kIGRvIG5vdFxuICAgIG5lZWQgdG8gYmUgcGFpZCBhdHRlbnRpb24gdG8gZm9yIHRoZSBzdGFuZGFsb25lIGNvbXBvbmVudFxuXG5Qb3NzaWJsZSBlcnJvcnNcbi0tLS0tLS0tLS0tLS0tLVxuXG4jIyMgYEFkZGl0aW9uYWwgcHJvcGVydGllcyBhcmUgbm90IGFsbG93ZWQgKCdkZXZpY2VzJyB3YXMgdW5leHBlY3RlZClgXG5cblRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgbWlnaHQgbG9vayBsaWtlIHRoaXM6XG5cbiAgICBFUlJPUjogVGhlIENvbXBvc2UgZmlsZSAnLi9kb2NrZXItY29tcG9zZV9RYW5hcnlDb21wb25lbnQueW1sJyBpcyBpbnZhbGlkIGJlY2F1c2U6IHNlcnZpY2VzLmF1dG9tYXRpb25fY29tcG9uZW50LmRlcGxveS5yZXNvdXJjZXMucmVzZXJ2YXRpb25zIHZhbHVlIEFkZGl0aW9uYWwgcHJvcGVydGllcyBhcmUgbm90IGFsbG93ZWQgKCdkZXZpY2VzJyB3YXMgdW5leHBlY3RlZClcblxuUmVhc29uOiBUaGUgcHJlcGFyZWQgZG9ja2VyLWNvbXBvc2UgZmlsZSBpcyBpbnRlZ3JhdGluZyBHUFVcbmNhcGFiaWxpdGllcy4gRm9sbG93aW5nIHRoZSBbRG9ja2VyXG5kb2N1bWVudGF0aW9uXShodHRwczovL2RvY3MuZG9ja2VyLmNvbS9jb21wb3NlL2dwdS1zdXBwb3J0LyNlbmFibGluZy1ncHUtYWNjZXNzLXRvLXNlcnZpY2UtY29udGFpbmVycyksXG50byB0YWtlIGFkdmFudGFnZSBvZiB0aGlzIGZ1bmN0aW9uYWxpdHkgeW91IG5lZWQgYXQgbGVhc3QgZG9ja2VyLWNvbXBvc2VcbnZlcnNpb24gdjEuMjguMCsgKGNoZWNrIGJ5IHJ1bm5pbmcgdGhlIGNvbW1hbmQ6XG5gZG9ja2VyLWNvbXBvc2UgLS12ZXJzaW9uYCkuXG5cbllvdSBtaWdodCBpbnN0YWxsIHRoZSBtb3N0IHJlY2VudCB2ZXJzaW9uIHVzaW5nIHBpcDpcblxuICAgIHBpcCBpbnN0YWxsIGRvY2tlci1jb21wb3NlIC0tdXBncmFkZVxuXG4jIyMgYFBhcmFtZXRlcnMgbm90IHN1cHBvcnRlZCBpbiBBUEkgdmVyc2lvbnMgPCBYYFxuXG5UaGUgZnVsbCBlcnJvciBtZXNzYWdlIG1pZ2h0IGxvb2sgbGlrZSB0aGlzOlxuXG4gICAgRVJST1I6IGZvciBhdXRvbWF0aW9uX2NvbXBvbmVudCAgZGV2aWNlX3JlcXVlc3RzIHBhcmFtIGlzIG5vdCBzdXBwb3J0ZWQgaW4gQVBJIHZlcnNpb25zIDwgMS40MFxuXG5SZWFzb246IHRoZSBkb2NrZXItY29tcG9zZSB2ZXJzaW9uIHVzZWQgaXMgdG9vIG91dGRhdGVkLiBJbiBidWlsZGluZ1xudGhpcyBzZXJ2aWNlLCB0aGUgbG93ZXN0IHVzZWQgdmVyc2lvbiB3YXMgYDIuMTIuMmAgd2hpY2ggd29ya2VkIGZpbmUuIElGXG50aGUgZXJyb3Igb2NjdXJzLCB5b3UgbWlnaHQgaW5zdGFsbCB0aGUgbmV3ZXN0IGRvY2tlci1jb21wb3NlIHZlcnNpb25cbnVzaW5nIHlvdXIgcHJlZmVycmVkIGluc3RhbGxhdGlvbiBtZXRob2QuXG5cbk9uIEFyY2ggTGludXgsIHRoZSBjYWxsIHRvIGluc3RhbGwgLyB1cGRhdGUgZG9ja2VyIGNvbXBvc2Ugd291bGQgYmU6XG5cbiAgICBzdWRvIHBhY21hbiAtUyBkb2NrZXItY29tcG9zZVxuXG5Gb3IgVWJ1bnR1IGFuZCBEZWJhaW4geW91IGNhbiBydW46XG5cbiAgICBzdWRvIGFwdC1nZXQgaW5zdGFsbCBkb2NrZXItY29tcG9zZS1wbHVnaW5cblxuSW50ZXJhY3Rpb24gd2l0aCB0aGUgU2VydmljZVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5PbmNlIGEgUWFuYXJ5IHNlcnZpY2UgaXMgc3RhcnRlZCwgeW91IG1heSBpbnRlcmFjdCB3aXRoIGl0IHRocm91Z2ggYVxuaGFuZGZ1bCBvZiBlbmRwb2ludHMgb2ZmZXJlZCBhcyBBUElzIHRoYXQgd2lsbCBlaXRoZXIgcHJvdmlkZSBhY2Nlc3MgdG9cbnNvbWUgd2F5IG9mIGluZm9ybWF0aW9uIGV4dHJhY3Rpb24gZnJvbSB0aGUgZ2l2ZW4gZGF0YSBvciBlbmFibGUgeW91IHRvXG5yZXRyYWluIChpLmUuLCBleGNoYW5nZSkgdGhlIG1vZGVsIG9uIHJ1bnRpbWUuXG5cblFhbmFyeSBlbmRwb2ludFxuLS0tLS0tLS0tLS0tLS0tXG5cblRvIGludGVyYWN0IHdpdGggdGhlIFFhbmFyeSBpbnRlcmZhY2UsIHlvdSBjYW4gYWNjZXNzIGl0IHVzaW5nIHRoZVxuZm9sbG93aW5nIHdlYnBhZ2U6XG5cbiAgICBodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo0MDExMS9zdGFydHF1ZXN0aW9uYW5zd2VyaW5nd2l0aHRleHRxdWVzdGlvblxuXG5JdCBhbGxvd3MgeW91IHRvIGFzayBxdWVzdGlvbnMgYW5kIHRoZSByZWNvZ25pemVkIGVudGl0aWVzIHdpbGwgYmUgc2F2ZWRcbmluIHRoZSBTdGFyZG9nIHNlcnZlci4gVGhlIHBhZ2UgYWxzbyBhbGxvd3MgeW91IHRvIGludGVyYWN0IHdpdGhcblN0YXJkb2cuXG5cbklmIHlvdSBlbnRlciBhIHF1ZXN0aW9uIHN1Y2ggYXMgXCJNeSBuYW1lIGlzIEFubmVtYXJpZSBXaXR0aWcuXCIgd2l0aCB0aGVcbmRlZmF1bHQgbW9kZWwsIHRoZXJlIHdpbGwgYmUgdHdvIGFubm90YXRpb25zIGNyZWF0ZWQsIG9uZSBmb3IgdGhlIGZpcnN0LVxuYW5kIG9uZSBmb3IgdGhlIGxhc3QgbmFtZS4gVGhlIGdlbmVyYXRlZCBxdWVyeSB3aWxsIGJlIHNvbWV0aGluZyBsaWtlXG50aGlzOlxuXG4gICAgUFJFRklYIGRicjogPGh0dHA6Ly9kYnBlZGlhLm9yZy9yZXNvdXJjZS9cbiAgICBQUkVGSVggZGJvOiA8aHR0cDovL2RicGVkaWEub3JnL29udG9sb2d5L1xuICAgIFBSRUZJWCBxYTogPGh0dHA6Ly93d3cud2RhcXVhLmV1L3FhI1xuICAgIFBSRUZJWCBvYTogPGh0dHA6Ly93d3cudzMub3JnL25zL29wZW5hbm5vdGF0aW9uL2NvcmUvXG4gICAgUFJFRklYIHJkZjogPGh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyNcbiAgICBQUkVGSVggeHNkOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjXG4gICAgSU5TRVJUIHtcbiAgICBHUkFQSCA8dXJuOmdyYXBoOjZkZGFjNGMzLWZiYzEtNDAxNi1hMTA3LWQ5MTI2YjgwNmI2NSAge1xuICAgICAgICA/ZW50aXR5QW5ub3RhdGlvbjAgYSBxYTpBbm5vdGF0aW9uT2ZJbnN0YW5jZSAuXG4gICAgICAgID9lbnRpdHlBbm5vdGF0aW9uMCBvYTpoYXNUYXJnZXQgW1xuICAgICAgICAgICAgYSAgIG9hOlNwZWNpZmljUmVzb3VyY2U7XG4gICAgICAgICAgICAgICAgb2E6aGFzU291cmNlICAgIDxodHRwOi8vbG9jYWxob3N0OjgwODAvcXVlc3Rpb24vc3RvcmVkLXF1ZXN0aW9uX190ZXh0X2RjMDNlODQzLWEyYmYtNGRlMC1hZWMwLTI4MGZjOGQ0YWRiMSAgO1xuICAgICAgICAgICAgICAgIG9hOmhhc1NlbGVjdG9yICBbXG4gICAgICAgICAgICAgICAgICAgIGEgb2E6VGV4dFBvc2l0aW9uU2VsZWN0b3IgO1xuICAgICAgICAgICAgICAgICAgICBvYTpzdGFydCBcIjExXCJeXnhzZDpub25OZWdhdGl2ZUludGVnZXIgO1xuICAgICAgICAgICAgICAgICAgICBvYTplbmQgIFwiMjBcIl5eeHNkOm5vbk5lZ2F0aXZlSW50ZWdlclxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIF0gLlxuICAgICAgICA/ZW50aXR5QW5ub3RhdGlvbjAgb2E6aGFzQm9keSBcIkZJUlNUX05BTUVcIl5eeHNkOnN0cmluZyA7XG4gICAgICAgICAgICBvYTphbm5vdGF0ZWRCeSA8dXJuOnFhbmFyeTpBdXRvbWF0aW9uU2VydmljZUNvbXBvbmVudCAgO1xuICAgICAgICAgICAgb2E6YW5ub3RhdGVkQXQgP3RpbWUgO1xuICAgICAgICAgICAgcWE6c2NvcmUgXCIwLjVcIl5eeHNkOmRlY2ltYWwgLlxuXG4gICAgICAgID9lbnRpdHlBbm5vdGF0aW9uMSBhIHFhOkFubm90YXRpb25PZkluc3RhbmNlIC5cbiAgICAgICAgP2VudGl0eUFubm90YXRpb24xIG9hOmhhc1RhcmdldCBbXG4gICAgICAgICAgICBhICAgb2E6U3BlY2lmaWNSZXNvdXJjZTtcbiAgICAgICAgICAgICAgICBvYTpoYXNTb3VyY2UgICAgPGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9xdWVzdGlvbi9zdG9yZWQtcXVlc3Rpb25fX3RleHRfZGMwM2U4NDMtYTJiZi00ZGUwLWFlYzAtMjgwZmM4ZDRhZGIxICA7XG4gICAgICAgICAgICAgICAgb2E6aGFzU2VsZWN0b3IgIFtcbiAgICAgICAgICAgICAgICAgICAgYSBvYTpUZXh0UG9zaXRpb25TZWxlY3RvciA7XG4gICAgICAgICAgICAgICAgICAgIG9hOnN0YXJ0IFwiMjFcIl5eeHNkOm5vbk5lZ2F0aXZlSW50ZWdlciA7XG4gICAgICAgICAgICAgICAgICAgIG9hOmVuZCAgXCIyN1wiXl54c2Q6bm9uTmVnYXRpdmVJbnRlZ2VyXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXSAuXG4gICAgICAgID9lbnRpdHlBbm5vdGF0aW9uMSBvYTpoYXNCb2R5IFwiTUlERExFX05BTUVcIl5eeHNkOnN0cmluZyA7XG4gICAgICAgICAgICBvYTphbm5vdGF0ZWRCeSA8dXJuOnFhbmFyeTpBdXRvbWF0aW9uU2VydmljZUNvbXBvbmVudCAgO1xuICAgICAgICAgICAgb2E6YW5ub3RhdGVkQXQgP3RpbWUgO1xuICAgICAgICAgICAgcWE6c2NvcmUgXCIwLjVcIl5eeHNkOmRlY2ltYWwgLlxuICAgICAgICB9XG4gICAgfVxuICAgIFdIRVJFIHtcbiAgICAgICAgQklORCAoSVJJKHN0cihSQU5EKCkpKSBBUyA/ZW50aXR5QW5ub3RhdGlvbjApIC5cbiAgICAgICAgQklORCAoSVJJKHN0cihSQU5EKCkpKSBBUyA/ZW50aXR5QW5ub3RhdGlvbjEpIC5cbiAgICAgICAgQklORCAobm93KCkgYXMgP3RpbWUpXG4gICAgfVxuXG5RdWVyeWluZyBkYXRhIGZyb20gdGhlIFFhbmFyeSB0cmlwbGVzdG9yZSB3aXRoIGEgcXVlcnkgbGlrZSB0aGVcbmZvbGxvd2luZywgd2lsbCByZXR1cm4gdGhlIE5FUiBwYXJ0cyBvZiB0aGUgYW5ub3RhdGlvbjpcblxuICAgIFBSRUZJWCByZGY6IDxodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjXG4gICAgUFJFRklYIG9hOiA8aHR0cDovL3d3dy53My5vcmcvbnMvb3BlbmFubm90YXRpb24vY29yZS9cbiAgICBQUkVGSVggcWE6IDxodHRwOi8vd3d3LndkYXF1YS5ldS9xYSNcbiAgICBTRUxFQ1QgKlxuICAgIEZST00gPHVybjpncmFwaDo2ZGRhYzRjMy1mYmMxLTQwMTYtYTEwNy1kOTEyNmI4MDZiNjVcbiAgICBXSEVSRSB7XG4gICAgICAgID9hbm5vdGF0aW9uSWQgcmRmOnR5cGUgP3R5cGUuXG4gICAgICAgID9hbm5vdGF0aW9uSWQgb2E6aGFzQm9keSA/Ym9keS5cbiAgICAgICAgP2Fubm90YXRpb25JZCBvYTpoYXNUYXJnZXQgP3RhcmdldC5cbiAgICAgICAgP3RhcmdldCBvYTpoYXNTZWxlY3RvciA/c2VsZWN0b3IgLlxuICAgICAgICA/c2VsZWN0b3Igb2E6c3RhcnQgP3N0YXJ0IC5cbiAgICAgICAgP3NlbGVjdG9yIG9hOmVuZCA/ZW5kIC5cbiAgICB9XG5cblRoZSByZXN1bHQgdGhlbiBsb29rcyBsaWtlIHRoaXM6XG5cbiFbRXhhbXBsZVxuUmVzdWx0XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS81OTAxMzMzMi8xOTcwMTMxOTYtNmNjZTRjOGItMDdkOS00NDI2LWFhYTctNTNmZTc1MzkwNWM2LnBuZylcblxuQWx0ZXJuYXRpdmVseSwgeW91IGNhbiBjdXJsIGFnYWluc3QgdGhlIHBpcGVsaW5lIGRpcmVjdGx5IHVzaW5nIGEgY3VybFxuY29tbWFuZCBzdWNoIGFzOlxuXG4gICAgY3VybCAtLWxvY2F0aW9uIC0tcmVxdWVzdCBQT1NUICdodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL3F1ZXN0aW9uYW5zd2VyaW5nP3RleHRxdWVzdGlvbj1XaG8gaXMgQmFyYWNrIE9iYW1hPyZsYW5ndWFnZT1lbiZjb21wb25lbnRsaXN0JTVCJTVEPUF1dG9tYXRpb25TZXJ2aWNlQ29tcG9uZW50J1xuXG5ORVIgRW5kcG9pbnRcbi0tLS0tLS0tLS0tLVxuXG4jIyMgL2FwaVxuXG5UaGUgL2FwaSBlbmRwb2ludCBvZmZlcnMgdHdvIGludGVyZmFjZXMgZm9yIGludGVyYWN0aW9uLlxuXG4jIyMjIEdFVFxuXG5UaGUgR0VUIGludGVyZmFjZSBvZmZlcnMgdGhlIHBvc3NpYmlsaXR5IHRvIHJldHJpZXZlIHRoZSBORVIgb2YgYSBzaW5nbGVcbnRleHQgYnkgeW91ciBtb2RlbC4gVGhpcyBpcyBvbmx5IGFuIGVuZHBvaW50IGZvciBxdWljayByZXN1bHQgY2hlY2tzIGFuZFxuZG9lcyBub3QgYWxsb3cgbWxmbG93IGxvZ2dpbmcuIFlvdSBjYW4gaW50ZXJhY3Qgd2l0aCBpdCBieSB1c2luZyBhIGNhbGxcbmxpa2U6XG5cbiAgICBjdXJsIC1YICdHRVQnICdodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL2FwaT90ZXh0PVRFWFQnXG5cblJlbWVtYmVyIHRvIHJlcGxhY2Ugc3BhY2VzIHdpdGggKiUqLiBUaGUgcmVzdWx0IHdpbGwgYmUgdGhlIG9yaWdpbmFsXG50ZXh0LCByZWNvZ25pemVkIGVudGl0aWVzIHdpdGggdGhlaXIgbGFiZWxzIGFuZCBjb250ZW50OlxuXG4gICAge1xuICAgICAgICBcInRleHRcIjogXCJ0ZXh0XCIsXG4gICAgICAgIFwiRW50aXR5LUxhYmVsMVwiOiBcInZhbHVlMVwiLFxuICAgICAgICBcIkVudGl0eS1MYWJlbDJcIjogXCJ2YWx1ZTJcIlxuICAgIH1cblxuIyMjIyBQT1NUXG5cblRoZSBQT1NUIGludGVyZmFjZSBvZmZlcnMgYSBORVIgZm9yIG11bHRpcGxlIGlucHV0IHBvc3NpYmlsaXRpZXM6XG5cbjEuICB1cGxvYWQgYSBDU1YgZmlsZSxcblxuMi4gIHVwbG9hZCBhIEpTT04gZmlsZSwgb3JcblxuMy4gIHVwbG9hZCByYXcgSlNPTiBkYXRhIHdpdGhpbiB0aGUgYm9keSBvZiB5b3VyIHJlcXVlc3QuXG5cbkluIGFsbCBjYXNlcyB0aGUgbWF0Y2hpbmdcbltcImFjY2VwdFwiLWhlYWRlcl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2VwdClcbm11c3QgYmUgc2V0IHdpdGhpbiB0aGUgSFRUUCByZXF1ZXN0LiBJdCB3aWxsIGRlZmluZSB3aGV0aGVyIHRoZSBvdXRwdXRcbmlzIG9mIHRoZSB0eXBlIGBhcHBsaWNhdGlvbi9qc29uYCBvciBgdGV4dC9jc3ZgLiBJZiBhbm90aGVyIG9yIGFuXG5pbnZhbGlkIFwiYWNjZXB0XCItaGVhZGVyIGlzIGdpdmVuLCB0aGUgc2VydmljZSB3aWxsIGVpdGhlciB1c2UgdGhlXG5bXCJDb250ZW50LVR5cGVcIi1oZWFkZXJdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9Db250ZW50LVR5cGUpXG5vZiB0aGUgdXBsb2FkZWQgZmlsZSBvciwgaWYgbm8gZmlsZSB3YXMgdXBsb2FkZWQsIGl0IHdpbGwgdXNlIGl0IGZyb21cbnRoZSByZXF1ZXN0LiBJZiBub25lIG9mIHRoZXNlIGFyZSB2YWxpZCwgdGhlIHJlcXVlc3Qgd2lsbCBmYWlsLiBIZW5jZSxcbmlmIHlvdSBjb25zaWRlciBwcm9ibGVtcywgdGhlbiBhZGQgb3IgY2hlY2sgdGhlIGhlYWRlcnMgdGhhdCBhcmUgZGVmaW5lZFxuaW4geW91ciBXZWIgc2VydmljZSByZXF1ZXN0LlxuXG5Zb3UgY2FuIGFsc28gc2VuZCB0aGUgcGFyYW1ldGVyIGB1c2VfbWxfbG9nZ2VyYCB3aXRoIHRoZSB2YWx1ZSBgVHJ1ZWBcbndpdGggdGhlc2UgcmVxdWVzdCB0byBhY3RpdmF0ZSBsb2dnaW5nIHVzaW5nIG1sZmxvdy4gVGhpcyBpc1xuKnJlY29tbWVuZGVkKiB3aGlsZSB1c2luZyB0aGUgY29tcG9uZW50IGluIGEgcmVhbCBRdWVzdGlvbiBBbnN3ZXJpbmdcbnN5c3RlbSB0byBlc3RhYmxpc2ggYSB0cmFja2luZyBvZiB0aGUgY29tcG9uZW504oCZcyBiZWhhdmlvciAoaS5lLiwgdGhlXG5xdWFsaXR5KS5cblxuPT09PT09IENTViBVcGxvYWRcblxuWW91IGNhbiB1cGxvYWQgYSBDU1YgZmlsZSwgY29udGFpbmluZyB0ZXh0cyB0aGF0IGFyZSBzdXBwb3NlZCB0byBiZSBydW5cbnRocm91Z2ggTkVSIGluIHRoZSBmaXJzdCBjb2x1bW4sIHRvIHRoZSBXZWIgc2VydmljZS4gVGhlcmUgY2FuIGJlIGFueVxub3RoZXIgY29sdW1ucyBhZGRlZCBpZiByZXF1aXJlZC4gRm9yIGV4YW1wbGUsIHRoZSBleHBlY3RlZCBlbnRpdGllc1xuY291bGQgYmUgYWRkZWQgdG8gY29tcGFyZSBleHBlY3RlZCBhbmQgYWN0dWFsIHJlc3VsdHMuIFRoZSBzZXJ2aWNlIHdpbGxcbnRoZW4gYW5ub3RhdGUgdGhlIENTViBmaWxlIHdpdGggY29sdW1ucyBmb3IgYWxsIGl0cyByZWNvZ25pemFibGVcbmVudGl0aWVzIGFuZCBmaWxsIHRoZXNlIHVwIHdpdGggdGhlIGVudGl0aWVzIGNvbnRhaW5lZCBpbiBlYWNoIHJvdy4gVGhlXG5gY3VybGAgY29tbWFuZCB3b3VsZCBiZTpcblxuICAgIGN1cmwgLVggUE9TVCAtSCAnYWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uJyAtRiBcImZpbGVfdG9faWRlbnRpZnk9QHtZT1VSIENTViBGSUxFIFBBVEh9O3R5cGU9dGV4dC9jc3ZcIiBodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL2FwaVxuXG5UaGUgc2VydmljZSB3aWxsIGFuc3dlciB3aXRoIHRoZSBhbm5vdGF0ZWQgQ1NWIGZpbGUuIEFkZGl0aW9uYWxseSwgdGhlXG5yZXNwb25zZSBmaWxlIHdpbGwgYWxzbyBiZSBzYXZlZCBsb2NhbGx5IGluIHRoZSBjb250YWluZXIgaW4gdGhlIGZvbGRlclxuYC9jb2RlL2FwcC9zcGFjeV9tb2RlbC9pbnRlcm1lZGlhdGUvcmVzdWx0cy9gLlxuXG5BcyBhbiBleGFtcGxlLCBpZiB5b3Ugd2FudCB0byB1cGxvYWQgYSBmaWxlIHN1Y2ggYXM6XG5cbjx0YWJsZSBzdHlsZT1cIndpZHRoOjEwMCU7XCI+XG48Y29sZ3JvdXA+XG48Y29sIHN0eWxlPVwid2lkdGg6IDUxJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDE2JVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDE2JVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDE2JVwiIC8+XG48L2NvbGdyb3VwPlxuPHRoZWFkPlxuPHRyIGNsYXNzPVwiaGVhZGVyXCI+XG48dGg+VGV4dDwvdGg+XG48dGg+Rmlyc3RfTmFtZTwvdGg+XG48dGg+TWlkZGxlX05hbWU8L3RoPlxuPHRoPkxhc3RfTmFtZTwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0ciBjbGFzcz1cIm9kZFwiPlxuPHRkPjxwPlBlb3BsZSBjYWxsIG1lIElkYSBDbGF5dG9uIEhlbmRlcnNvbjwvcD48L3RkPlxuPHRkPjxwPklkYTwvcD48L3RkPlxuPHRkPjxwPkNsYXl0b248L3A+PC90ZD5cbjx0ZD48cD5IZW5kZXJzb248L3A+PC90ZD5cbjwvdHI+XG48dHIgY2xhc3M9XCJldmVuXCI+XG48dGQ+PHA+SSBhbSBoYXBweSB0byBtZWV0IHlvdSwgdG9vLiBZb3UgY2FuIGNhbGwgbWUgS2lyYS48L3A+PC90ZD5cbjx0ZD48cD5LaXJhPC9wPjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD48L3RkPlxuPC90cj5cbjx0ciBjbGFzcz1cIm9kZFwiPlxuPHRkPjxwPllvdSBjYW4gc2VuZCB0aGUgZGF0YSB0byBFYmVyaGFyZCBSdW1wPC9wPjwvdGQ+XG48dGQ+PHA+RWJlcmhhcmQ8L3A+PC90ZD5cbjx0ZD48L3RkPlxuPHRkPjxwPlJ1bXA8L3A+PC90ZD5cbjwvdHI+XG48dHIgY2xhc3M9XCJldmVuXCI+XG48dGQ+PHA+UGxlYXNlIHNlbmQgYWxsIGJ1c2luZXNzIGlucXVpcmllcyB0byBKZXNzaWUgRWR3aW4gRm93bGVyPC9wPjwvdGQ+XG48dGQ+PHA+SmVzc2llPC9wPjwvdGQ+XG48dGQ+PHA+RWR3aW48L3A+PC90ZD5cbjx0ZD48cD5Gb3dsZXI8L3A+PC90ZD5cbjwvdHI+XG48dHIgY2xhc3M9XCJvZGRcIj5cbjx0ZD48cD5PaCwgSSBhY3R1YWxseSBnbyBieSBMaW9iYSBBbGV4YW5kcmEuPC9wPjwvdGQ+XG48dGQ+PHA+TGlvYmE8L3A+PC90ZD5cbjx0ZD48cD5BbGV4YW5kcmE8L3A+PC90ZD5cbjx0ZD48L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG53aXRoIGB0ZXh0L2NzdmAgYXMgYW4gXCJhY2NlcHRcIi1oZWFkZXIsIGl0IHdvdWxkIHJlc3VsdCBpbiBzb21ldGhpbmdcbmxpa2U6XG5cbjx0YWJsZSBzdHlsZT1cIndpZHRoOjEwMCU7XCI+XG48Y29sZ3JvdXA+XG48Y29sIHN0eWxlPVwid2lkdGg6IDMzJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDExJVwiIC8+XG48L2NvbGdyb3VwPlxuPHRoZWFkPlxuPHRyIGNsYXNzPVwiaGVhZGVyXCI+XG48dGg+VGV4dDwvdGg+XG48dGg+Rmlyc3RfTmFtZTwvdGg+XG48dGg+TWlkZGxlX05hbWU8L3RoPlxuPHRoPkxhc3RfTmFtZTwvdGg+XG48dGg+RklSU1RfTkFNRTwvdGg+XG48dGg+TEFTVF9OQU1FPC90aD5cbjx0aD5NSURETEVfTkFNRTwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0ciBjbGFzcz1cIm9kZFwiPlxuPHRkPjxwPlBlb3BsZSBjYWxsIG1lIElkYSBDbGF5dG9uIEhlbmRlcnNvbjwvcD48L3RkPlxuPHRkPjxwPklkYTwvcD48L3RkPlxuPHRkPjxwPkNsYXl0b248L3A+PC90ZD5cbjx0ZD48cD5IZW5kZXJzb248L3A+PC90ZD5cbjx0ZD48cD5JZGE8L3A+PC90ZD5cbjx0ZD48cD5IZW5kZXJzb248L3A+PC90ZD5cbjx0ZD48cD5DbGF5dG9uPC9wPjwvdGQ+XG48L3RyPlxuPHRyIGNsYXNzPVwiZXZlblwiPlxuPHRkPjxwPkkgYW0gaGFwcHkgdG8gbWVldCB5b3UsIHRvby4gWW91IGNhbiBjYWxsIG1lIEtpcmEuPC9wPjwvdGQ+XG48dGQ+PHA+S2lyYTwvcD48L3RkPlxuPHRkPjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD48cD5LaXJhPC9wPjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD48L3RkPlxuPC90cj5cbjx0ciBjbGFzcz1cIm9kZFwiPlxuPHRkPjxwPllvdSBjYW4gc2VuZCB0aGUgZGF0YSB0byBFYmVyaGFyZCBSdW1wPC9wPjwvdGQ+XG48dGQ+PHA+RWJlcmhhcmQ8L3A+PC90ZD5cbjx0ZD48L3RkPlxuPHRkPjxwPlJ1bXA8L3A+PC90ZD5cbjx0ZD48cD5FYmVyaGFyZDwvcD48L3RkPlxuPHRkPjxwPlJ1bXA8L3A+PC90ZD5cbjx0ZD48L3RkPlxuPC90cj5cbjx0ciBjbGFzcz1cImV2ZW5cIj5cbjx0ZD48cD5QbGVhc2Ugc2VuZCBhbGwgYnVzaW5lc3MgaW5xdWlyaWVzIHRvIEplc3NpZSBFZHdpbiBGb3dsZXI8L3A+PC90ZD5cbjx0ZD48cD5KZXNzaWU8L3A+PC90ZD5cbjx0ZD48cD5FZHdpbjwvcD48L3RkPlxuPHRkPjxwPkZvd2xlcjwvcD48L3RkPlxuPHRkPjxwPkplc3NpZTwvcD48L3RkPlxuPHRkPjxwPkZvd2xlcjwvcD48L3RkPlxuPHRkPjxwPkVkd2luPC9wPjwvdGQ+XG48L3RyPlxuPHRyIGNsYXNzPVwib2RkXCI+XG48dGQ+PHA+T2gsIEkgYWN0dWFsbHkgZ28gYnkgTGlvYmEgQWxleGFuZHJhLjwvcD48L3RkPlxuPHRkPjxwPkxpb2JhPC9wPjwvdGQ+XG48dGQ+PHA+QWxleGFuZHJhPC9wPjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD48cD5MaW9iYTwvcD48L3RkPlxuPHRkPjwvdGQ+XG48dGQ+PHA+QWxleGFuZHJhPC9wPjwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG5cbkhvd2V2ZXIsIGhhdmluZyBkZWZpbmVkIHRoZSBgYWNjZXB0YC1oZWFkZXIgYXMgYGFwcGxpY2F0aW9uL2pzb25gLiBUaGVcbnJlc3BvbnNlIG9mIHRoZSBXZWIgc2VydmljZSB3b3VsZCBiZTpcblxuICAgIFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJUZXh0XCI6IFwiUGVvcGxlIGNhbGwgbWUgSWRhIENsYXl0b24gSGVuZGVyc29uXCIsXG4gICAgICAgICAgICBcIkZpcnN0X05hbWVcIjogXCJJZGFcIixcbiAgICAgICAgICAgIFwiTWlkZGxlX05hbWVcIjogXCJDbGF5dG9uXCIsXG4gICAgICAgICAgICBcIkxhc3RfTmFtZVwiOiBcIkhlbmRlcnNvblwiLFxuICAgICAgICAgICAgXCJGSVJTVF9OQU1FXCI6IFwiSWRhXCIsXG4gICAgICAgICAgICBcIkxBU1RfTkFNRVwiOiBcIkhlbmRlcnNvblwiLFxuICAgICAgICAgICAgXCJNSURETEVfTkFNRVwiOiBcIkNsYXl0b25cIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBcIlRleHRcIjogXCJJIGFtIGhhcHB5IHRvIG1lZXQgeW91LCB0b28uIFlvdSBjYW4gY2FsbCBtZSBLaXJhLlwiLFxuICAgICAgICAgICAgXCJGaXJzdF9OYW1lXCI6IFwiS2lyYVwiLFxuICAgICAgICAgICAgXCJNaWRkbGVfTmFtZVwiOiBudWxsLFxuICAgICAgICAgICAgXCJMYXN0X05hbWVcIjogXCIgICAgICAgICBcIixcbiAgICAgICAgICAgIFwiRklSU1RfTkFNRVwiOiBcIktpcmFcIixcbiAgICAgICAgICAgIFwiTEFTVF9OQU1FXCI6IFwiXCIsXG4gICAgICAgICAgICBcIk1JRERMRV9OQU1FXCI6IFwiXCJcbiAgICAgICAgfSxcbiAgICAgICAgLi4uXG4gICAgXVxuXG49PT09PT0gSlNPTiBGaWxlIFVwbG9hZFxuXG5BZGRpdGlvbmFsbHksIHRoZSBlbmRwb2ludCBhbGxvd3MgYXBwbHlpbmcgTkVSIHRvIGFsbCB0ZXh0cyBnaXZlbiBpbiBhXG5KU09OIGZpbGUgbXVjaCBsaWtlIHRoZSBbQ1NWIFVwbG9hZF0oI2Nzdi11cGxvYWQpLiBUaGUgSlNPTiBmaWxlIG11c3RcbmZvbGxvdyB0aGlzIHN0cnVjdHVyZTpcblxuICAgIFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0ZXh0XCI6IFwie1RFWFQgVE8gQ0xBU1NJRll9XCIsXG4gICAgICAgICAgICBcImxhbmd1YWdlXCI6IFwie0xBTkdVQUdFfVwiLFxuICAgICAgICAgICAgXCJlbnRpdGllc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJ7RU5USVRZMX1cIjogXCJ7VkFMVUUxfVwiLFxuICAgICAgICAgICAgICAgIFwie0VOVElUWTJ9XCI6IFwie1ZBTFVFMn1cIixcbiAgICAgICAgICAgICAgICAuLi5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF1cblxuSG93ZXZlciwgYm90aCB0aGUgbGFuZ3VhZ2UgYW5kIHRoZSBlbnRpdHkgdGFncyBjYW4gYmUgbGVmdCBvdXQgKHRoZXlcbmRlZmF1bHQgdG8gbnVsbCksIGlmIHdhbnRlZC4gVGhlIE5FUiB2aWEgdXBsb2FkaW5nIGEgSlNPTiBmaWxlLCBtdWNoXG5saWtlIHRoZSBDU1YgZmlsZSB1cGxvYWQsIGFsbG93cyB0aGUgZnJlZWRvbSB0byBhZGQgYW55IGFkZGl0aW9uYWxcbmluZm9ybWF0aW9uIHRoYXQgaXMgd2FudGVkLCBhcyBsb25nIGFzIGVhY2ggb2JqZWN0IGhhcyB0aGUgXCJhdHRyaWJ1dGVcbnRleHRcIi4gSGVuY2UsIHJlcXVlc3QgZGF0YSBvZiBzZW5kaW5nIHR3byBlbGVtZW50IG1pZ2h0IGxvb2sgbGlrZTpcblxuICAgIFtcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0ZXh0XCI6IFwie1RFWFQgVE8gQ0xBU1NJRll9XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJ0ZXh0XCI6IFwie1RFWFQgVE8gQ0xBU1NJRll9XCJcbiAgICAgICAgfVxuICAgIF1cblxuRXhhbXBsZSBmaWxlcyB0byB1cGxvYWQgYXJlIHRoZSB0ZXh0cy5qc29uIGZpbGVzIGZvdW5kIGluIHRoZSBmb2xkZXJcblsuL0F1dG9tYXRpb25TZXJ2aWNlL0V4YW1wbGVCb2RpZXMvbmFtZV0oLi9BdXRvbWF0aW9uU2VydmljZS9FeGFtcGxlQm9kaWVzL25hbWUpXG5hbmRcblsuL0F1dG9tYXRpb25TZXJ2aWNlL0V4YW1wbGVCb2RpZXMvYWRkcmVzc10oLi9BdXRvbWF0aW9uU2VydmljZS9FeGFtcGxlQm9kaWVzL2FkZHJlc3MpXG5kaXJlY3Rvcmllcy5cblxuQSBjb3JyZXNwb25kaW5nIGBjdXJsYCBjYWxsIHdvdWxkIGJlOlxuXG4gICAgY3VybCAtWCBQT1NUIC1IICdhY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIC1GIFwiZmlsZV90b19pZGVudGlmeT1Ae1lPVVIgSlNPTiBGSUxFIFBBVEh9O3R5cGU9YXBwbGljYXRpb24vanNvblwiIGh0dHA6Ly9kZW1vcy5zd2UuaHR3ay1sZWlwemlnLmRlOjgwODEvYXBpXG5cblRoZSByZXNwb25zZSB3aWxsIGJlIHRoZSBhbm5vdGF0ZWQgSlNPTiwgYnV0IGl0IHdpbGwgYWxzbyBiZSBzdG9yZWRcbmxvY2FsbHkgaW4gdGhlIGNvbnRhaW5lci4gSXQgY2FuIGJlIGZvdW5kIGFzXG5gL2NvZGUvYXBwL3NwYWN5X21vZGVsL2ludGVybWVkaWF0ZS9yZXN1bHRzL2AuIFRoZSBORVIgcmVzdWx0cyBjYW4gYmVcbmZvdW5kIGluIHRoZSBgcmVzdWx0c2AgYXJyYXkuIEFuIGV4YW1wbGUgcmVzcG9uc2Ugb2JqZWN0IGxvb2tzIGxpa2VcbnRoaXM6XG5cbiAgICBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwidGV4dFwiOiBcIkkgYW0gY2FsbGVkIE1hcmlseW4gTW9ucm9lLlwiLFxuICAgICAgICAgICAgXCJsYW5ndWFnZVwiOiBcImVuXCIsXG4gICAgICAgICAgICBcImVudGl0aWVzXCI6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwiRmlyc3RfTmFtZVwiOiBcIk1hcmlseW5cIixcbiAgICAgICAgICAgICAgICAgICAgXCJMYXN0X05hbWVcIjogXCJNb25yb2VcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBcInJlc3VsdHNcIjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgXCJGSVJTVF9OQU1FXCI6IFwiTWFyaWx5blwiLFxuICAgICAgICAgICAgICAgICAgICBcIkxBU1RfTkFNRVwiOiBcIk1vbnJvZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgXVxuXG5JZiB0aGlzIHdhcyBlbnRlcmVkIHdpdGggYHRleHQvY3N2YCBhcyBgYWNjZXB0YC1oZWFkZXIsIHRoZSByZXN1bHQgd291bGRcbmJlOlxuXG48dGFibGU+XG48Y29sZ3JvdXA+XG48Y29sIHN0eWxlPVwid2lkdGg6IDM4JVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDEyJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDEyJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDEyJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDEyJVwiIC8+XG48Y29sIHN0eWxlPVwid2lkdGg6IDEyJVwiIC8+XG48L2NvbGdyb3VwPlxuPHRoZWFkPlxuPHRyIGNsYXNzPVwiaGVhZGVyXCI+XG48dGg+dGV4dDwvdGg+XG48dGg+bGFuZ3VhZ2U8L3RoPlxuPHRoPmVudGl0aWVzX0ZpcnN0X05hbWU8L3RoPlxuPHRoPmVudGl0aWVzX0xhc3RfTmFtZTwvdGg+XG48dGg+cmVzdWx0c19GSVJTVF9OQU1FPC90aD5cbjx0aD5yZXN1bHRzX0xBU1RfTkFNRTwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0ciBjbGFzcz1cIm9kZFwiPlxuPHRkPjxwPkkgYW0gY2FsbGVkIE1hcmlseW4gTW9ucm9lLjwvcD48L3RkPlxuPHRkPjxwPmVuPC9wPjwvdGQ+XG48dGQ+PHA+TWFyaWx5bjwvcD48L3RkPlxuPHRkPjxwPk1vbnJvZTwvcD48L3RkPlxuPHRkPjxwPk1hcmlseW48L3A+PC90ZD5cbjx0ZD48cD5Nb25yb2U8L3A+PC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cblxuPT09PT09IFJhdyBKU09OIFVwbG9hZFxuXG5UaGUgZGlyZWN0IHVwbG9hZCB3b3JrcyBleGFjdGx5IGFzIHRoZSBbSlNPTiBGaWxlXG5VcGxvYWRdKCNqc29uLWZpbGUtdXBsb2FkKSB3aXRoIHRoZSBkaWZmZXJlbmNlLCB0aGF0IHRoZSByZXF1ZXN0IGJvZHkgaXNcbm5vdCBhIGZpbGUgYnV0IHRoZSBKU09OIGRhdGEgYXMgYSBzdHJpbmcuIEl0IGhhcyB0aGUgc2FtZSBzdHJ1Y3R1cmUgYW5kXG5yZXNwb25zZSBhcyBpbiB0aGUgSlNPTiBGaWxlIFVwbG9hZCBhbmQgYWxsIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gY2FuXG5iZSByZWZlcmVuY2VkIHRoZXJlLiBUaGUgb25seSBkaWZmZXJlbmNlIGlzIHRoZSBgY3VybGAgY29tbWFuZCwgd2hpY2hcbndpbGwgbG9vayBzb21ldGhpbmcgbGlrZSB0aGlzOlxuXG4gICAgY3VybCAtWCBQT1NUIC1IICdhY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIC1IIFwiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXCIgLWQgJ3t7WU9VUiBKU09OfX0nIGh0dHA6Ly9kZW1vcy5zd2UuaHR3ay1sZWlwemlnLmRlOjgwODEvYXBpXG5cbk9yIGFuIGV4YW1wbGUgb2YgYSBgY3VybGAgd2l0aCBjb250ZW50OlxuXG4gICAgY3VybCAtWCAnUE9TVCcgXFxcbiAgICAgICdodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL2FwaScgXFxcbiAgICAgIC1IICdhY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24nIFxcXG4gICAgICAtSCAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyBcXFxuICAgICAgLWQgJ1tcbiAgICAgIHtcbiAgICAgICAgXCJ0ZXh0XCI6IFwiSSBhbSBjYWxsZWQgTWFyaWx5biBNb25yb2UuXCIsXG4gICAgICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgICAgICBcImVudGl0aWVzXCI6IHtcbiAgICAgICAgICBcIkZpcnN0X05hbWVcIjogXCJNYXJpbHluXCIsXG4gICAgICAgICAgXCJMYXN0X05hbWVcIjogXCJNb25yb2VcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSdcblxuQWx0ZXJuYXRpdmVseSwgdGhlIGBhY2NlcHRgLWhlYWRlciBjYW4gYmUgc2V0IHRvIENTViwgdG9vLlxuXG5SZXRyYWluIEVuZHBvaW50XG4tLS0tLS0tLS0tLS0tLS0tXG5cblRoZSByZXRyYWluaW5nIGVuZHBvaW50IHVzZXMgdGhlIGRhdGEgeW91IHByb3ZpZGVkIHRvIHRyYWluIGEgbmV3IE5FUlxubW9kZWwgd2hpY2ggd2lsbCBpZiBhbGwgaXMgc3VjY2Vzc2Z1bCwgcmVwbGFjZSB0aGUgb3JpZ2luYWwgbW9kZWwuIEFsbFxuZm9sbG93aW5nIGludGVyYWN0aW9ucyB3aWxsIHRoZW4gYmUgd2l0aCB0aGUgbmV3IG1vZGVsLiAqKlRoZSBvcmlnaW5hbFxubW9kZWwgd2lsbCBiZSBkZWxldGVkLioqIFwiYWNjZXB0XCItaGVhZGVycyB3aWxsIG5vdCBiZSByZWxldmFudCwgYXMgdGhlXG5vbmx5IHJldHVybiB2YWx1ZSBpcyBhIHN1Y2Nlc3MgbWVzc2FnZSBpbiBKU09OIGZvcm1hdC5cblxuVGhlIHJldHJhaW5pbmcgd2lsbCwgYWZ0ZXIgZm9ybWF0dGluZyB0aGUgaW5wdXQgaWYgbmVlZGVkLCBnbyB0aHJvdWdoXG50aGUgW2RhdGFcbnByZXBhcmF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vQW5uZW1hcmllV2l0dGlnL1JlY29nbml0aW9uU2VydmljZS9ibG9iL21haW4vRG9jdW1lbnRhdGlvbi9TcGFDeVRyYWluaW5nUHJvY2Vzcy5tZClcbmFzIGl0IGlzIGRlc2NyaWJlZCBpbiB0aGUgZG9jdW1lbnRhdGlvbiwgc2F2ZSB0aGUgY3JlYXRlZCBpbnRlcm1lZGlhdGVcbmZpbGVzIHdpdGhpbiB0aGUgY29udGFpbmVyIGFuZCB3aWxsIHRoZW4gdXNlIHRoZSBjcmVhdGVkIGRvY2JpbnMgdG9cbnRyYWluIGEgbmV3IG1vZGVsLiBBbGwgb2YgdGhpcyBoYXBwZW5zIGluIGEgZm9sZGVyIGxvY2F0ZWQgaW4gdGhlXG5jb250YWluZXIgYXMgYC9jb2RlL2FwcC9zcGFjeV9tb2RlbC9pbnRlcm1lZGlhdGUvYC4gT25jZSB0aGUgdHJhaW5pbmdcbmNvbmNsdWRlcyBzdWNjZXNzZnVsbHksIHRoZSBmaWxlcyBhcmUgbW92ZWQgaW50byB0aGUgc3lzdGVtIGFuZFxub3ZlcndyaXRlIG90aGVyIGV4aXN0aW5nIGZpbGVzLCBlaXRoZXIgb2YgdGhlIG9yaWdpbmFsIG1vZGVsIG9yIHRoZVxub3JpZ2luYWwgaW50ZXJtZWRpYXRlIGZpbGVzLiBCb3RoLCB0aGUgKGZvcm1hdHRlZCkgdHJhaW5pbmctIGFuZFxudGVzdGluZ2RhdGEgYXMgd2VsbCBhcyB0aGUgZ2VuZXJhdGVkIGRvY2JpbnMgd2lsbCBiZSBzYXZlZCBpbiB0aGVcbmNvbnRhaW5lciAodW50aWwgb3ZlcndyaXR0ZW4gYWdhaW4pLiBUaGUgdXNlZCBtb2RlbCB3aWxsIGFsd2F5cyBiZSB0aGVcbmBtb2RlbC1iZXN0YCBnZW5lcmF0ZWQgYnkgU3BhQ3kuXG5cbkFmdGVyIHRoZSB0cmFpbmluZywgeW91IGNhbiBmaW5kIHlvdXIgZmlsZXMgaGVyZTogXFwqIFRyYWluaW5nZGF0YSBpc1xuc2F2ZWQgYXMgYHRyYWluLmNzdmAgaW4gYC9jb2RlL2FwcC9zcGFjeV9tb2RlbC9jb3JwdXMvdHJhaW5pbmdkYXRhL2AgXFwqXG5UZXN0aW5nZGF0YSBpcyBzYXZlZCBhcyBgdGVzdC5jc3ZgIGluXG5gL2NvZGUvYXBwL3NwYWN5X21vZGVsL2NvcnB1cy90cmFpbmluZ2RhdGEvYCBcXCogVGhlIGdlbmVyYXRlZCBkb2NiaW5zXG5hcmUgc2F2ZWQgYXMgYHRyYWluLnNwYWN5YCBhbmQgYHRlc3Quc3BhY3lgIGluXG5gL2NvZGUvYXBwL3NwYWN5X21vZGVsL2NvcnB1cy9zcGFjeS1kb2NiaW5zL2AgXFwqIFRoZSBtb2RlbCAob25seSB0aGVcbmNvbnRlbnRzIG9mIHRoZSBtb2RlbC1iZXN0KSB3aWxsIGJlIGZvdW5kIGluXG5gL2NvZGUvYXBwL3NwYWN5X21vZGVsL291dHB1dC9tb2RlbC1iZXN0L2BcblxuRXZlcnl0aGluZyBlbHNlIHN1Y2ggYXMgdGhlIG90aGVyIHRyYWluZWQgbW9kZWwgd2lsbCBiZSBkZWxldGVkLlxuXG5QbGVhc2Ugbm90ZSB0aGF0IHRoZSBwcm9jZXNzIG9mIHJldHJhaW5pbmcgY2FuLCBhbmQgd2lsbCwgdGFrZSBzb21lIHRpbWVcbnRvIGZpbmlzaC4gVGhlIGNsYXNzaWZpY2F0aW9uIEFQSXMgY2FuIHN0aWxsIGJlIHVzZWQgd2l0aCB0aGUgb3JpZ2luYWxcbm1vZGVsIHdoaWxlIHRoZSB0cmFpbmluZyBydW5zLlxuXG5Zb3UgY2FuIGFsc28gc2VuZCB0aGUgcGFyYW1ldGVyIGB1c2VfbWxfbG9nZ2VyYCB3aXRoIHRoZSB2YWx1ZSBgVHJ1ZWBcbndpdGggdGhlc2UgcmVxdWVzdCB0byBhY3RpdmF0ZSBsb2dnaW5nIHVzaW5nIG1sZmxvdy4gVGhpcyBpcyByZWNvbW1lbmRlZFxud2hlbiB5b3UgdXNlIFFhbmFyeS5cblxuIyMjIENTViBVcGxvYWRcblxuVGhlIGVuZHBvaW50IGFsbG93cyB0byB1cGxvYWQgdHdvIENTViBmaWxlcywgdGhlIGB0cmFpbmluZ2RhdGFgIGFuZCB0aGVcbmB0ZXN0aW5nZGF0YWAsIGFzIENTViBmaWxlcy4gWW91IGNhbiBuYW1lIHRoZW0gaG93ZXZlciB5b3UgbGlrZSwgYXMgbG9uZ1xuYXMgdGhlIGZpbGVzIGhhdmUgdGhlIGV4YWN0IHN0cnVjdHVyZSBhcyB0aGUgb25lcyBuZWVkZWQgaW4gdGhlXG5bU3RhcnRpbmcgQ29uZGl0aW9uc10oI3N0YXJ0aW5nLWNvbmRpdGlvbnMpLlxuXG5UaGUgY29ycmVzcG9uZGluZyBgY3VybGAgY2FsbCB3b3VsZCBiZTpcblxuICAgIGN1cmwgLVggUE9TVCAtRiAndHJhaW5pbmdkYXRhPUB7WU9VUiBUUkFJTklOR0RBVEEgQ1NWfTt0eXBlPXRleHQvY3N2JyAtRiAndGVzdGluZ2RhdGE9QHtZT1VSIFZBTElEQVRJT04gQ1NWfTt0eXBlPXRleHQvY3N2JyBodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL3JldHJhaW5cblxuIyMjIEpTT04gRmlsZSBVcGxvYWRcblxuVGhlIGVuZHBvaW50IGFsbG93cyB0aGUgdXBsb2FkIG9mIHRyYWluaW5nZmlsZXMgaW4gSlNPTiBmb3JtYXQuIFRoZXJlXG5hcmUgdGhyZWUgZmlsZXMgbmVlZGVkIGluIHRvdGFsLiBUaGUgdHJhaW5pbmcgZGF0YSBpcyBzdHJ1Y3R1cmVkIGxpa2VcbnRoaXM6XG5cbiAgICB7XG4gICAgICAgIFwidHJhaW5pbmdkYXRhXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcInRleHRcIjogXCJ7VFJBSU5JTkdURVhUfVwiLFxuICAgICAgICAgICAgICAgIFwibGFuZ3VhZ2VcIjogXCJ7TEFOR1VBR0VURVhUIChub3QgcmVsZXZhbnQgZm9yIHRyYWluaW5nIGFuZCBjYW4gYmUgaWdub3JlZCwgbGFuZ3VhZ2UgaXMgc2V0IGluIHRoZSBtb2RlbCBjb25maWcpfVwiLFxuICAgICAgICAgICAgICAgIFwiZW50aXRpZXNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcIntFTlRJVFkxfVwiOiBcIntWQUxVRTF9XCIsXG4gICAgICAgICAgICAgICAgICAgIFwie0VOVElUWTJ9XCI6IFwie1ZBTFVFMn1cIixcbiAgICAgICAgICAgICAgICAgICAgLi4uXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfVxuXG5UaGUgZGF0YSBmb3IgdGVzdHMgZm9sbG93cyB0aGUgc2FtZSBzdHJ1Y3R1cmUuIEJ1dCwgaW5zaWRlIHRoZSBmaWxlLCB0aGVcbmluaXRpYWwga2V5IGlzIG5hbWVkIGB0ZXN0aW5nZGF0YWAgKGluc3RlYWQgb2YgYHRyYWluaW5nc2RhdGFgKS5cblxuRm9yIHRoZSBKU09OIHVwbG9hZCwgYSB0aGlyZCBmaWxlIGlzIG5lZWRlZC4gSXQgaXMgY2FsbGVkIG9wdGlvbnMgYW5kXG5jb250YWlucyBhIGxpc3Qgb2YgYWxsIHBvc3NpYmxlIGBlbnRpdGllc2AgdGhlIE5FUiBpcyBzdXBwb3NlZCB0b1xucmVjb2duaXplIGFzIHdlbGwgYXMgdGhlIG1vZGVsIGBsYW5ndWFnZWAgYW5kIGBtb2RlbHR5cGVgLiBJdCBoYXMgdGhlXG5mb2xsb3dpbmcgc3RydWN0dXJlOlxuXG4gICAge1xuICAgICAgICBcImVudGl0aWVzXCI6IFtcIntFTlRJVFkxfVwiLCBcIntFTlRJVFkyfVwiLCAuLi5dLFxuICAgICAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICAgICAgXCJtb2RlbHR5cGVcIjogXCJzcGFjeVwiXG4gICAgfVxuXG5FeGFtcGxlIGZpbGVzIGZvciBgY3VybGAgY29tbWFuZHMgY2FuIGJlIGZvdW5kIGluIHRoZVxuW0V4YW1wbGVCb2RpZXMvbmFtZV0oLi9BdXRvbWF0aW9uU2VydmljZS9FeGFtcGxlQm9kaWVzL25hbWUpIGFuZFxuW0V4YW1wbGVCb2RpZXMvYWRkcmVzc10oLi9BdXRvbWF0aW9uU2VydmljZS9FeGFtcGxlQm9kaWVzL2FkZHJlc3MpXG5kaXJlY3Rvcmllcy5cblxuV2FybmluZzogUGxlYXNlIG5vdGUgdGhhdCB0aG9zZSBhcmUgbWluaW1hbCBleGFtcGxlcyBhbmQgd2lsbCBub3RcbmdlbmVyYXRlIGEgd2VsbC13b3JraW5nIE5FUiBtb2RlbC5cblxuVGhlIGZvbGxvd2luZyBgY3VybGAgY29tbWFuZCB3b3VsZCBzdGFydCB0aGUgcmV0cmFpbmluZyBvZiB0aGVcbmNvbXBvbmVudOKAmXMgbW9kZWw6XG5cbiAgICBjdXJsIC1YIFBPU1QgLUYgJ3RyYWluaW5nZGF0YT1Ae1lPVVIgVFJBSU5JTkdEQVRBIEpTT059O3R5cGU9YXBwbGljYXRpb24vanNvbicgLUYgJ3Rlc3RpbmdkYXRhPUB7WU9VUiBWQUxJREFUSU9OIEpTT059O3R5cGU9YXBwbGljYXRpb24vanNvbicgLUYgJ29wdGlvbnM9QHtZT1VSIE9QVElPTlMgSlNPTn07dHlwZT1hcHBsaWNhdGlvbi9qc29uJyBodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL3JldHJhaW5cblxuIyMjIEpTT04gUmF3IFVwbG9hZFxuXG5UaGUgYGpzb24vdXBsb2FkLWRpcmVjdGAgZW5kcG9pbnQgYWxsb3dzIHRoZSBkYXRhIG5lZWRlZCB0byBiZSByZXRyYWluZWRcbnJhdyB3aXRoaW4gdGhlIGJvZHkgb2YgdGhlIHJlcXVlc3QuIFRoZSBkYXRhIGl0c2VsZiBpcyBzdHJ1Y3R1cmVkIGFzIGlzXG5mb3IgdGhlIFtKU09OIEZpbGUgVXBsb2FkXSgjanNvbi1maWxlLXVwbG9hZC0xKSwgYnV0IGFsbCBwdXQgaW4gb25lIGZpbGVcbmxpa2UgdGhlIGZvbGxvd2luZzpcblxuICAgIHtcbiAgICAgICAgXCJ0cmFpbmluZ2RhdGFcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwidGV4dFwiOiBcIntUUkFJTklOR1RFWFR9XCIsXG4gICAgICAgICAgICAgICAgXCJsYW5ndWFnZVwiOiBcIntMQU5HVUFHRVRFWFQgKG5vdCByZWxldmFudCBmb3IgdHJhaW5pbmcgYW5kIGNhbiBiZSBpZ25vcmVkLCBsYW5ndWFnZSBpcyBzZXQgaW4gdGhlIG1vZGVsIGNvbmZpZyl9XCIsXG4gICAgICAgICAgICAgICAgXCJlbnRpdGllc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwie0VOVElUWTF9XCI6IFwie1ZBTFVFMX1cIixcbiAgICAgICAgICAgICAgICAgICAgXCJ7RU5USVRZMn1cIjogXCJ7VkFMVUUyfVwiLFxuICAgICAgICAgICAgICAgICAgICAuLi5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwidGVzdGluZ2RhdGFcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwidGV4dFwiOiBcIntUUkFJTklOR1RFWFR9XCIsXG4gICAgICAgICAgICAgICAgXCJsYW5ndWFnZVwiOiBcIntMQU5HVUFHRVRFWFQgKG5vdCByZWxldmFudCBmb3IgdHJhaW5pbmcgYW5kIGNhbiBiZSBpZ25vcmVkLCBsYW5ndWFnZSBpcyBzZXQgaW4gdGhlIG1vZGVsIGNvbmZpZyl9XCIsXG4gICAgICAgICAgICAgICAgXCJlbnRpdGllc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwie0VOVElUWTF9XCI6IFwie1ZBTFVFMX1cIixcbiAgICAgICAgICAgICAgICAgICAgXCJ7RU5USVRZMn1cIjogXCJ7VkFMVUUyfVwiLFxuICAgICAgICAgICAgICAgICAgICAuLi5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiZW50aXRpZXNcIjogW1wie0VOVElUWTF9XCIsIFwie0VOVElUWTJ9XCIsIC4uLl0sXG4gICAgICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiLFxuICAgICAgICBcIm1vZGVsdHlwZVwiOiBcInNwYWN5XCJcbiAgICB9XG5cbkl0IGlzIGdlbmVyYWxseSBub3QgcmVjb21tZW5kZWQgdXNpbmcgdGhpcyBlbmRwb2ludCBmb3IgYGN1cmxgIGNvbW1hbmRzLFxuYXMgaXQgZWFzaWx5IGdldHMgY2hhb3RpYyBhbmQgaXMgZmFpcmx5IGxvbmcsIGJ1dCB0aGUgZ2VuZXJhbCBgY3VybGBcbmNvbW1hbmQgd291bGQgYmU6XG5cbiAgICBjdXJsIC1YIFBPU1QgLUggXCJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cIiAtZCAne1lPVVIgSlNPTiBPQkpFQ1R9JyBodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL3JldHJhaW5cblxuYW5kIGEgd29ya2luZyBleGFtcGxlIGlzOlxuXG4gICAgY3VybCAtWCAnUE9TVCcgXFxcbiAgICAgICdodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTo4MDgxL3JldHJhaW4nIFxcXG4gICAgICAtSCAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyBcXFxuICAgICAgLWQgJ3tcbiAgICAgIFwidGVzdGluZ2RhdGFcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiSSBhbSBjYWxsZWQgTWFyaWx5biBNb25yb2UuXCIsXG4gICAgICAgICAgXCJsYW5ndWFnZVwiOiBcImVuXCIsXG4gICAgICAgICAgXCJlbnRpdGllc1wiOiB7XG4gICAgICAgICAgICBcIkZpcnN0X05hbWVcIjogXCJNYXJpbHluXCIsXG4gICAgICAgICAgICBcIkxhc3RfTmFtZVwiOiBcIk1vbnJvZVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgXCJ0cmFpbmluZ2RhdGFcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiSSBhbSBjYWxsZWQgTWFyaWx5biBNb25yb2UuXCIsXG4gICAgICAgICAgXCJsYW5ndWFnZVwiOiBcImVuXCIsXG4gICAgICAgICAgXCJlbnRpdGllc1wiOiB7XG4gICAgICAgICAgICBcIkZpcnN0X05hbWVcIjogXCJNYXJpbHluXCIsXG4gICAgICAgICAgICBcIkxhc3RfTmFtZVwiOiBcIk1vbnJvZVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgXCJlbnRpdGllc1wiOiBbXG4gICAgICAgIFwiRmlyc3RfTmFtZVwiLFxuICAgICAgICBcIk1pZGRsZV9OYW1lXCIsXG4gICAgICAgIFwiTGFzdF9OYW1lXCJcbiAgICAgIF0sXG4gICAgICBcImxhbmd1YWdlXCI6IFwiZW5cIixcbiAgICAgIFwibW9kZWx0eXBlXCI6IFwic3BhY3lcIlxuICAgIH0nXG5cbiMjIyBIZWFsdGggZW5kcG9pbnRcblxuVG8gY2hlY2sgaWYgdGhlIHNlcnZpY2UgaXMgYWN0aXZlLCBqdXN0IHJ1bjpcbjxodHRwOi8vZGVtb3Muc3dlLmh0d2stbGVpcHppZy5kZTgwODEvaGVhbHRoPlxuXG5NTCBGbG93IExvZ2dpbmdcbi0tLS0tLS0tLS0tLS0tLVxuXG5Zb3UgY2FuIHVzZSBNTCBGbG93IExvZ2dpbmcgd2l0aCB0aGlzIHNlcnZpY2UuIEZvciBpbmZvcm1hdGlvbiBvbiB0aGVcbnNldHVwIGFuZCB1c2FnZSBvZiBhbiBNTCBGbG93IFNlcnZlciwgcGxlYXNlIHJlZmVyIHRvIGl0c1xuW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vd3d3Lm1sZmxvdy5vcmcvZG9jcy9sYXRlc3QvdHJhY2tpbmcuaHRtbCkuIE1MXG5GbG93IExvZ2dpbmcgaXMgYWx3YXlzIGFjdGl2YXRlZCBmb3IgaW50ZXJhY3Rpb25zIHdpdGggdGhlIHNlcnZpY2UgZnJvbVxudGhlIFFhbmFyeSBpbnRlcmZhY2UsIHRyaWdnZXJpbmcgdGhlIChbTkVSIExvZ2dpbmddKCNuZXItbG9nZ2luZykpLiBJdFxubWlnaHQgYXMgd2VsbCBiZSB1c2VkIGZvciBpbnRlcmFjdGlvbnMgd2l0aCB0aGVcblsvcmV0cmFpbl0oI3JldHJhaW4tZW5kcG9pbnQpIChbVHJhaW5pbmcgTG9nZ2luZ10oI3RyYWluaW5nLWxvZ2dpbmcpKVxuYW5kIHRoZSBbL2FwaV0oI2FwaS1lbmRwb2ludCkgKFtORVIgTG9nZ2luZ10oI25lci1sb2dnaW5nKSkgZW5kcG9pbnQgYnlcbnNldHRpbmcgdGhlIHBhcmFtZXRlciBgTUxGTE9XX0FDVElWQVRFRGAgdG8gYFRydWVgLiBUaGUgcGFyYW1ldGVyIGlzXG5mb3VuZCBpbiB0aGUgW2lubmVyIC5lbnZcbmZpbGVdKC4vQXV0b21hdGlvblNlcnZpY2UvQXV0b21hdGlvblNlcnZpY2VCYWNrZW5kL2FwcC8uZW52KS5cblxuIyMjIFRyYWluaW5nIExvZ2dpbmdcblxuV2hlbiBzdGFydGluZyBhIHRyYWluaW5nIHByb2Nlc3MgdmlhIHRoZSBgXFxyZXRyYWluYC1lbmRwb2ludCB3aXRoIHRoZVxuYHVzZV9tbF9sb2dnZXJgIHBhcmFtZXRlciBzZXQgdG8gYFRydWVgLCB0aGUgdHJhaW5pbmcgd2lsbCBiZSBsb2dnZWRcbm9uY2UgaXRzIGNvbmNsdWRlZC4gVGhlIGxvZ3MgY2FuIGJlIGZvdW5kIGluIHRoZSBgQXV0b01MIE1vZGVsIFRyYWluaW5nYFxudGFiLiBUaGUgbG9nZ2VkIGRhdGEgY29udGFpbnMgdGhlIGF0dHJpYnV0ZXM6XG5cbi0gICBgY29tcG9uZW50X25hbWVgOiBUaGUgbmFtZSBvZiB0aGUgY29tcG9uZW50IHRoYXQgdHJpZ2dlcmVkIHRoaXMgbG9nXG5cbi0gICBgY29tcG9uZW50X3R5cGVgOiBUaGUgdHlwZSBvZiB0aGUgY29tcG9uZW50LCBpbiB0aGlzIGNhc2UgYWx3YXlzIE5FUlxuXG4tICAgYGVudGl0aWVzYDogVGhlIGVudGl0aWVzIHRoaXMgdHJhaW5lZCBtb2RlbCBjb3VsZCByZWNvZ25pemVcblxuLSAgIGBoYXJkd2FyZWA6IFRoZSBoYXJkd2FyZSB0aGUgbW9kZWwgd2FzIHRyYWluZWQgb25cblxuLSAgIGBsYW5ndWFnZWA6IFRoZSBsYW5ndWFnZSBvZiB0aGUgbW9kZWwsIHNwZWNpZmllZCBieSB0aGUgdXNlclxuXG4tICAgYG1vZGVsYDogVGhlIG1vZGVsIHRoYXQgd2FzIHVzZWQuIFNwYUN5IHJldHVybnMgbXVsdGlwbGUgbW9kZWxzICh0aGVcbiAgICBsYXN0IGFuZCB0aGUgYmVzdCksIGJ1dCB0aGUgY29tcG9uZW50IGFsd2F5cyB0YWtlcyBcIm1vZGVsLWJlc3RcIixcbiAgICB3aGljaCB3YXMgdGhlIGJlc3QgcGVyZm9ybWluZy5cblxuLSAgIGBtb2RlbF91dWlkYDogVGhlIFVVSUQgdGhhdOKAmXMgYXNzaWduZWQgdG8gdGhpcyB0cmFpbmluZyBydW4uXG5cbi0gICBgbW9kZWx0eXBlYDogVGhlIG1vZGVsIHR5cGUgZW50ZXJlZCB3aXRoIHRoZSB0cmFpbmluZyBvcHRpb25zXG5cbi0gICBgdGltZWA6IFRoZSB0aW1lIG5lZWRlZCB0byBjb25jbHVkZSB0aGUgdHJhaW5pbmdcblxuV2l0aGluIHRoZSBcIkFydGlmYWN0c1wiLCB0aGVyZSBhcmUgc29tZSBmaWxlcyBsb2dnZWQ6XG5cbi0gICBgRGF0YXNldHNgOiBJbiB0aGlzIGRpcmVjdG9yeSwgdGV4dCBmaWxlcyBhcmUgc3RvcmVkIHRoYXQgY29udGFpblxuICAgIHRoZSB0cmFpbmluZyBhbmQgdGVzdGluZyBkYXRhIGdpdmVuXG5cbi0gICBgY29uZmlnLmpzb25gOiBUaGUgY29uZmlndXJhdGlvbiB1c2VkIHRvIHRyYWluIHRoZSBtb2RlbFxuXG4tICAgYG1vZGVsX21ldHJpY3MuanNvbmA6IFRoaXMgZmlsZSBpcyB0aGUgbWV0YS5qc29uIG9mIHRoZSBtb2RlbCwgaXRcbiAgICBjb250YWlucyBhbGwga2luZHMgb2YgaW5mb3JtYXRpb24gc3VjaCBhcyB0aGUgcGVyZm9ybWFuY2Ugd2hpbGVcbiAgICB0cmFpbmluZy5cblxuV2hlbiB0aGUgdHJhaW5pbmcgaXMgY29uY2x1ZGVkLCB0aGUgdGVzdGRhdGEgaXMgdXNlZCB0byB0cmlnZ2VyIHRoZSBORVJcbnByb2Nlc3MgYW5kIGxvZyB0aGUgcmVzdWx0cyBmb3IgZWFjaCBnaXZlbiBpbnB1dC4gVGhpcyBsb2dnaW5nIGhhcHBlbnNcbndpdGhpbiB0aGUgW05FUiBMb2dnaW5nXSgjbmVyLWxvZ2dpbmcpIGFuZCB0aGUgVVVJRCB3aWxsIGJlIHRoZSBzYW1lIGZvclxudGhlIHRyYWluaW5nLWxvZ3MgYXMgd2VsbCBhcyB0aGUgTkVSIGxvZ3MuXG5cbiMjIyBORVIgTG9nZ2luZ1xuXG5XaGVuIGEgUE9TVCByZXF1ZXN0IGlzIHNlbnQgdG8gdGhlIGAvYXBpYCBlbmRwb2ludCAoZm91bmQgaW4gdGhlXG5gQXV0b01MIE1vZGVsIFRlc3RpbmdgIHRhYiksIHdpdGggdGhlIGB1c2VfbWxfbG9nZ2VyYCBwYXJhbWV0ZXIgc2V0IHRvXG5gVHJ1ZWAsIHRoZSBORVIgcmVzdWx0cyB3aWxsIGJlIGxvZ2dlZCBmb3IgZWFjaCBvZiB0aGUgZ2l2ZW4gaW5wdXRcbnRleHRzLiBGaWxlcyB3aWxsIG5vdCBiZSBsb2dnZWQgYXMgb25lIGJ1dCBlYWNoIGlucHV0IGxpbmUgYnkgaXRzZWxmLlxuVGhlIGxvZ2dlZCB2YWx1ZXMgYXJlOlxuXG4tICAgYGlucHV0YDogVGhlIGdpdmVuIGlucHV0IHRleHRcblxuLSAgIGBtb2RlbF91dWlkYDogVGhlIFVVSUQgb2YgdGhpcyBjYWxsOyBJdCB3aWxsIGJlIHRoZSBzYW1lIGZvciBhbGxcbiAgICBpbnB1dCB0ZXh0cyBvZiB0aGUgc2FtZSBmaWxlIGFuZCBpZiB0aGUgcHJvY2VzcyBpcyB0cmlnZ2VyZWQgdGhyb3VnaFxuICAgIHRoZSB0cmFpbmluZywgaXQgd2lsbCBiZSB0aGUgc2FtZSBhcyB0aGUgdHJhaW5pbmcgcHJvY2VzcywgdG9vLlxuXG4tICAgYHJ1bnRpbWVgOiBUaGUgdGltZSBuZWVkZWQgZm9yIHRoZSByZXN1bHQgZm9yIHRoaXMgdGV4dC5cblxuV2l0aGluIHRoZSBgQXJ0aWZhY3RzYCwgdGhlcmUgYXJlIHR3byBmaWxlcyBsb2dnZWQ6XG5cbi0gICBgcHJlZGljdGVkX3RhcmdldC5qc29uYDogVGhlIHJlc3VsdCBvZiB0aGUgTkVSXG5cbi0gICBgdHJ1ZV90YXJnZXQuanNvbmA6IFRoZSBleHBlY3RlZCByZXN1bHQsIGlmIHByb3ZpZGVkIHdpdGggdGhlIGlucHV0XG5cbiMjIyBBbm5vdGF0aW9uIExvZ2dpbmdcblxuV2hlbiBhIHRleHQgaXMgZW50ZXJlZCBpbiB0aGUgUWFuYXJ5IGludGVyZmFjZSAoZm91bmQgaW4gdGhlXG5gQXV0b01MIENvbXBvbmVudCBBbm5vdGF0aW9uc2AgdGFiKSwgdGhlIGNyZWF0ZWQgYW5ub3RhdGlvbnMgYXJlIGxvZ2dlZCxcbnRvby4gVGhlcmUgYXJlIG5vIGFkZGl0aW9uYWwgcGFyYW1ldGVycyB0byBiZSBzZXQgYXMgdGhpcyBpcyBhXG5yZXF1aXJlbWVudC4gVGhlIGxvZ2dlZCBkYXRhIGlzOlxuXG4tICAgYGlucHV0YDogVGhlIGdpdmVuIGlucHV0IHRleHRcblxuLSAgIGBtb2RlbF91dWlkYDogVGhlIFVVSUQgb2YgdGhpcyBjYWxsXG5cbi0gICBgcHJlZGljdGVkX3RhcmdldGA6IFRoZSByZXN1bHQgb2YgdGhlIE5FUiwgY29udGFpbmluZyB0aGUgcmVjb2duaXplZFxuICAgIGVudGl0aWVzIGFuZCB0aGVpciBwb3NpdGlvbnMgd2l0aGluIHRoZSBpbnB1dFxuXG4tICAgYHFhbmFyeV9ncmFwaF9pZGA6IFRoZSBncmFwaCB0aGUgYW5ub3RhdGlvbnMgd2FzIHNhdmVkIHRvXG5cblBsZWFzZSBub3RlIHRoYXQgdGhlIHByb2Nlc3Mgb2YgbG9nZ2luZyBORVIgdXBsb2FkcyBjYW4gdGFrZSB1cCBzb21lXG50aW1lIGlmIGJpZ2dlciBkYXRhc2V0cyBhcmUgcHJvdmlkZWQuXG5cblJlYWR5IHRvIGdvIERvY2tlciBJbWFnZXNcbj09PT09PT09PT09PT09PT09PT09PT09PT1cblxuVGhlcmUgYXJlIERvY2tlciBpbWFnZXMgYXZhaWxhYmxlIHRoYXQgaGF2ZSBwcmUtdHJhaW5lZCBtb2RlbHMgZm9yIG5hbWVcbmFuZCBhZGRyZXNzIHJlY29nbml0aW9uIC0gb25lIHVzaW5nIGEgc3BhY3kgbW9kZWwgYXMgYSBiYXNlIGFuZCBvbmVcbnVzaW5nIG5vIGJhc2UgYXQgYWxsLiBUaGV5IGNhbiBiZSBmb3VuZCBpbiB0aGUgW1FhbmFyeVxuRG9ja2VyaHViXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3UvcWFuYXJ5KSwgbmFtZWRcbmBxYW5hcnkvcWFuYXJ5LWNvbXBvbmVudC1uZXItYXV0b21sLXByZXRyYWluZWQte3RoZSBtb2RlbCB5b3Ugd2FudH1gLlxuXG4tICAgW1RoZSBpbWFnZSB3aXRoIGEgc3BhY3kgYmFzZWQgbW9kZWwgZm9yIG5hbWUgKGZpcnN0LCBtaWRkbGUgYW5kIGxhc3RcbiAgICBuYW1lKSByZWNvZ25pdGlvbiBpblxuICAgIEdFUl0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3FhbmFyeS9xYW5hcnktY29tcG9uZW50LW5lci1hdXRvbWwtcHJldHJhaW5lZC1uYW1lLXNwYWN5LWRlKVxuXG4tICAgW1RoZSBpbWFnZSB3aXRoIGEgc3BhY3kgYmFzZWQgbW9kZWwgZm9yIG5hbWUgKGZpcnN0LCBtaWRkbGUgYW5kIGxhc3RcbiAgICBuYW1lKSByZWNvZ25pdGlvbiBpblxuICAgIEVOXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvcWFuYXJ5L3FhbmFyeS1jb21wb25lbnQtbmVyLWF1dG9tbC1wcmV0cmFpbmVkLW5hbWUtc3BhY3ktZW4pXG5cbi0gICBbVGhlIGltYWdlIHdpdGhvdXQgYSBiYXNlIG1vZGVsIGZvciBuYW1lIChmaXJzdCwgbWlkZGxlIGFuZCBsYXN0XG4gICAgbmFtZSkgcmVjb2duaXRpb24gaW5cbiAgICBHRVJdKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9xYW5hcnkvcWFuYXJ5LWNvbXBvbmVudC1uZXItYXV0b21sLXByZXRyYWluZWQtbmFtZS1ub2Jhc2UtZGUpXG5cbi0gICBbVGhlIGltYWdlIHdpdGhvdXQgYSBiYXNlIG1vZGVsIGZvciBuYW1lIChmaXJzdCwgbWlkZGxlIGFuZCBsYXN0XG4gICAgbmFtZSkgcmVjb2duaXRpb24gaW5cbiAgICBFTl0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3FhbmFyeS9xYW5hcnktY29tcG9uZW50LW5lci1hdXRvbWwtcHJldHJhaW5lZC1uYW1lLW5vYmFzZS1lbilcblxuLSAgIFtUaGUgaW1hZ2Ugd2l0aCBhIHNwYWN5IGJhc2VkIG1vZGVsIGZvciBhZGRyZXNzIChzdHJlZXQsIGhvdXNlXG4gICAgbnVtYmVyLCBwb3N0YWwgY29kZSBhbmQgY2l0eSkgcmVjb2duaXRpb24gaW5cbiAgICBHRVJdKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9xYW5hcnkvcWFuYXJ5LWNvbXBvbmVudC1uZXItYXV0b21sLXByZXRyYWluZWQtYWRkcmVzcy1zcGFjeS1kZSlcblxuLSAgIFtUaGUgaW1hZ2Ugd2l0aCBhIHNwYWN5IGJhc2VkIG1vZGVsIGZvciBhZGRyZXNzIChzdHJlZXQsIGhvdXNlXG4gICAgbnVtYmVyLCBwb3N0YWwgY29kZSBhbmQgY2l0eSkgcmVjb2duaXRpb24gaW5cbiAgICBFTl0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL3FhbmFyeS9xYW5hcnktY29tcG9uZW50LW5lci1hdXRvbWwtcHJldHJhaW5lZC1hZGRyZXNzLXNwYWN5LWVuKVxuXG4tICAgW1RoZSBpbWFnZSB3aXRob3V0IGEgYmFzZSBtb2RlbCBmb3IgYWRkcmVzcyAoc3RyZWV0LCBob3VzZSBudW1iZXIsXG4gICAgcG9zdGFsIGNvZGUgYW5kIGNpdHkpIHJlY29nbml0aW9uIGluXG4gICAgR0VSXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvcWFuYXJ5L3FhbmFyeS1jb21wb25lbnQtbmVyLWF1dG9tbC1wcmV0cmFpbmVkLWFkZHJlc3Mtbm9iYXNlLWRlKVxuXG4tICAgW1RoZSBpbWFnZSB3aXRob3V0IGEgYmFzZSBtb2RlbCBmb3IgYWRkcmVzcyAoc3RyZWV0LCBob3VzZSBudW1iZXIsXG4gICAgcG9zdGFsIGNvZGUgYW5kIGNpdHkpIHJlY29nbml0aW9uIGluXG4gICAgRU5dKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9xYW5hcnkvcWFuYXJ5LWNvbXBvbmVudC1uZXItYXV0b21sLXByZXRyYWluZWQtYWRkcmVzcy1ub2Jhc2UtZW4pXG5cbi0gICBCZXJ0IG1vZGVscyBUQkRcbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIlFhbmFyeS1ORVItQXV0b01MLWNvbXBvbmVudCIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUWFuYXJ5LU5FUi1BdXRvTUwtY29tcG9uZW50LyIs
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUWFuYXJ5LU5FUi1BdXRvTUwtY29tcG9uZW50LyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS9XU0UtcmVzZWFyY2gvUWFuYXJ5LU5FUi1hdXRvbWwtY29tcG9uZW50L2lzc3VlcyIs
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9XU0UtcmVzZWFyY2gvUWFuYXJ5LU5FUi1hdXRvbWwtY29tcG9uZW50Iiw=
ICAgICAgIlJFQURNRSI6ICJodHRwczovL2dpdGh1Yi5jb20vV1NFLXJlc2VhcmNoL1FhbmFyeS1ORVItYXV0b21sLWNvbXBvbmVudCNyZWFkbWUi
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUWFuYXJ5LU5FUi1BdXRvTUwtY29tcG9uZW50LzAuMS4xLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjgiLA==
ICAgICJzdW1tYXJ5IjogIkEgcHl0aG9uIHByb2plY3QgYWxsb3dpbmcgdG8gcnVuIGEgZmFzdGFwaSBzZXJ2ZXIgdGhhdCBjYW4gdHJhaW4gYW5kIGlkZW50aWZ5IE5FUiBtb2RlbHMgaW4gcnVudGltZSBhbmQgY2FuIGJlIGluY2x1ZGVkIGluIGEgcWFuYXJ5IGVudmlyb25tZW50IGlmIHdpc2hlZC4iLA==
ICAgICJ2ZXJzaW9uIjogIjAuMS4xIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNzM3NjgxOCw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjEuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkODU0OWFjYzhkNWZkN2ExOTY2ZjUzNDJkNDAwOWI2ZTg5MThmNDg3NTdlYzFmNjQyYzk2MTFjN2VhMjE4NzE0Iiw=
ICAgICAgICAgICJtZDUiOiAiMDY3YzEzZGJhZDFiOGMyYzc1ZDNkY2YyZjI2NzY2YjQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2EyODRmNmIyMWFmMzdmOGU2NjIyOTg1YWVjODc1ZWQ4YmUwZjhkYWVhMTFjNjhhZWFiMmVlNDJjZGRkNTMxOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwNjdjMTNkYmFkMWI4YzJjNzVkM2RjZjJmMjY3NjZiNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDMyNTgyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMi0wOFQxNTo0MzowOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMi0wOFQxNTo0MzowOS44NzUzNDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kOC81NC85YWNjOGQ1ZmQ3YTE5NjZmNTM0MmQ0MDA5YjZlODkxOGY0ODc1N2VjMWY2NDJjOTYxMWM3ZWEyMTg3MTQvcWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZTY0Nzc2ZjliODg3Y2E3OGU2NGU4NmU1YjQxYTYyNDgwOGM5MzExYzJmZjg5MTc4ZTRjYmU3NWVkYjMzZDM2Iiw=
ICAgICAgICAgICJtZDUiOiAiZGNkMDk0YzM2NGY5NDUyMzBkZDM0ZjAzNGJlNWUyMjIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNmM4OGRiMWM3ODhlZGZmMDA0ZDQ3NWM1MDdhMzlmN2IxZTYxNTNmMmRjMjIxY2FlMWVmNjhhZTczM2RjODk0NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4wLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkY2QwOTRjMzY0Zjk0NTIzMGRkMzRmMDM0YmU1ZTIyMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwNzU4OTk5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMi0wOFQxNTo0MzoxNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMi0wOFQxNTo0MzoxNC45MTYwNjhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZS82NC83NzZmOWI4ODdjYTc4ZTY0ZTg2ZTViNDFhNjI0ODA4YzkzMTFjMmZmODkxNzhlNGNiZTc1ZWRiMzNkMzYvcWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4wLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjEuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0MjRiNDUyMTUxODIwZDRiOTc2ZGE4ZWNkNjg2ZTdmZjYxYTQ4MmMwZDFlYzAwOGE5MDVmYmE2Zjk1YWU3NmQwIiw=
ICAgICAgICAgICJtZDUiOiAiYWU2YjYxN2Y3YzIxYTkwODI3M2VlMzk0YjQwYzI3MzUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2NhNGYzYzFhNWUyMmEwMDE2MzAyNzFlM2QyMjkyYmM3MTg3ZDE2Mjk3ZDZiMWMwZTVkMDg4Y2JjNzBmOGIwYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4xLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhZTZiNjE3ZjdjMjFhOTA4MjczZWUzOTRiNDBjMjczNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDM2NjU4LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yMVQwOTozMDoxMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yMVQwOTozMDoxMC41MDQ5OTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80Mi80Yi80NTIxNTE4MjBkNGI5NzZkYThlY2Q2ODZlN2ZmNjFhNDgyYzBkMWVjMDA4YTkwNWZiYTZmOTVhZTc2ZDAvcWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4xLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhNDg1ZDgzNDIyZGQ4OGJhMDEyMTkwODg5YWU4YjliOTE3Njc5ZmViZmQzNmM1OWE2MDBjMzMwYjM0OGE3YzU5Iiw=
ICAgICAgICAgICJtZDUiOiAiNWY1NmNmM2RiODNlY2EwZWUzN2Q2ODRjZDE5NjZjZDAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGU0NWZjZjE3ZmYwNDgwMWE2ZGMyYTI2NDE1YmEzNjdmNWI1ZWZiMWZlYmJiMWM4NTc2ZTRkY2Q5ZjU1YzJiOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4xLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1ZjU2Y2YzZGI4M2VjYTBlZTM3ZDY4NGNkMTk2NmNkMCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDY5Njc2MjIzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yMVQwOTozMDoyOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yMVQwOTozMDoyOC4zNDEwMzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hNC84NS9kODM0MjJkZDg4YmEwMTIxOTA4ODlhZThiOWI5MTc2NzlmZWJmZDM2YzU5YTYwMGMzMzBiMzQ4YTdjNTkvcWFuYXJ5X25lcl9hdXRvbWxfY29tcG9uZW50LTAuMS4xLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNDI0YjQ1MjE1MTgyMGQ0Yjk3NmRhOGVjZDY4NmU3ZmY2MWE0ODJjMGQxZWMwMDhhOTA1ZmJhNmY5NWFlNzZkMCIs
ICAgICAgICAibWQ1IjogImFlNmI2MTdmN2MyMWE5MDgyNzNlZTM5NGI0MGMyNzM1Iiw=
ICAgICAgICAic2hhMjU2IjogImNjYTRmM2MxYTVlMjJhMDAxNjMwMjcxZTNkMjI5MmJjNzE4N2QxNjI5N2Q2YjFjMGU1ZDA4OGNiYzcwZjhiMGIi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInFhbmFyeV9uZXJfYXV0b21sX2NvbXBvbmVudC0wLjEuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYWU2YjYxN2Y3YzIxYTkwODI3M2VlMzk0YjQwYzI3MzUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiAzNjY1OCw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDMtMjFUMDk6MzA6MTAiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDMtMjFUMDk6MzA6MTAuNTA0OTk0WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNDIvNGIvNDUyMTUxODIwZDRiOTc2ZGE4ZWNkNjg2ZTdmZjYxYTQ4MmMwZDFlYzAwOGE5MDVmYmE2Zjk1YWU3NmQwL3FhbmFyeV9uZXJfYXV0b21sX2NvbXBvbmVudC0wLjEuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYTQ4NWQ4MzQyMmRkODhiYTAxMjE5MDg4OWFlOGI5YjkxNzY3OWZlYmZkMzZjNTlhNjAwYzMzMGIzNDhhN2M1OSIs
ICAgICAgICAibWQ1IjogIjVmNTZjZjNkYjgzZWNhMGVlMzdkNjg0Y2QxOTY2Y2QwIiw=
ICAgICAgICAic2hhMjU2IjogIjBlNDVmY2YxN2ZmMDQ4MDFhNmRjMmEyNjQxNWJhMzY3ZjViNWVmYjFmZWJiYjFjODU3NmU0ZGNkOWY1NWMyYjki
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInFhbmFyeV9uZXJfYXV0b21sX2NvbXBvbmVudC0wLjEuMS50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNWY1NmNmM2RiODNlY2EwZWUzN2Q2ODRjZDE5NjZjZDAiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiA2OTY3NjIyMyw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDMtMjFUMDk6MzA6MjgiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDMtMjFUMDk6MzA6MjguMzQxMDM2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYTQvODUvZDgzNDIyZGQ4OGJhMDEyMTkwODg5YWU4YjliOTE3Njc5ZmViZmQzNmM1OWE2MDBjMzMwYjM0OGE3YzU5L3FhbmFyeV9uZXJfYXV0b21sX2NvbXBvbmVudC0wLjEuMS50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
