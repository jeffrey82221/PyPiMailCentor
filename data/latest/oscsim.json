ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiV2lsbCBGcmVpdGFnIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiV2lsaGVsbS5GcmVpdGFnQG9tcC5kZSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIkVudmlyb25tZW50IDo6IENvbnNvbGUiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IEVuZCBVc2Vycy9EZXNrdG9wIiw=
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IFN5c3RlbSBBZG1pbmlzdHJhdG9ycyIs
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIhW0dpdEh1YiBXb3JrZmxvdyBTdGF0dXNdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZ2l0aHViL3dvcmtmbG93L3N0YXR1cy9IWVBFUlRFR1JJVFktQUcvT3BlblNpbS9hbGwtbGludHMpXG5cbiMgT3BlbiBTbWFydCBDaXR5IC0gU2ltXG5cbkNvcHlyaWdodCAoYykgMjAyMSBXaWxsIEZyZWl0YWcsIFZlcnNpb246IDEuMS4yXG5cbiMjIFRMO0RSXG5fb3Njc2ltXyBpcyBhIGxpZ2h0d2VpZ2h0IHRvb2wgdG8gc2VuZCB0ZXN0IGRhdGEgdG8gYW4gT3Jpb24gQ29udGV4dCBCcm9rZXIgb3IgRlJPU1QtU2VydmVyIHJlc3BlY3RpdmVseS4gXFxcbkl0IGNhbiBiZSB1c2VkIHRvIHNlbmQganVzdCBhIHNpbmdsZSBtZXNzYWdlIHRvIHRlc3QgeW91ciBpbnN0YWxsYXRpb24gYW5kIGFsc28gdG8gc2VuZCB0aG91c2FuZHMgb2YgbWVzc2FnZXMgaW4gbXVsdGlwbGUgdGhyZWFkcyBpbiBvcmRlciB0byBzdHJlc3MgeW91ciBpbnN0YWxsYXRpb24uIFxcXG5DcmVhdGlvbiBvZiB0ZXN0LWRhdGEgdy9vIGludGVncmF0aW5nIGFueSBzZW5zb3JzIGlzIGFub3RoZXIgYXNwZWN0IHRoYXQgY2FuIGJlIGhhbmRsZWQgd2l0aCB0aGlzIHRvb2wuIFxcXG5Gb3IgdGhpcyB0byBlbmQsIG5vdCB0aGUgY29tcGxldGUgQVBJcyBvZiBib3RoLCBPcmlvbiBhbmQgRlJPU1QgYXJlIGltcGxlbWVudGVkIChpdCdzIG5vdCBhbiBPcmlvbi0gb3IgRlJPU1QtQ2xpZW50ISksIGJ1dCB0aGUgQVBJIG5lZWRlZCB0byBzZW5kIERhdGEgKENvbnRleHRzIGFuZCBUaGluZ3MvRGF0YXN0cmVhbXMvT2JzZXJ2YXRpb25zIHJlc3AuKSBpcyBpbiBwbGFjZS4gIFxuXG5BIHNpbXBsZSBjYWxsIG9mIHRoaXMgdG9vbCBsaWtlLi4uXG5gYGBjb21tYW5kbGluZVxuJCBvc2NzaW0gLXMgaHR0cDovL215c2VydmVyLmNvbSAtcCBOR1NJLVYyIC1hZCBkYXRlT2JzZXJ2ZWQgLWFuIHRlbXBlcmF0dXJlLGYsMjAuNVxuYGBgXG4uLi53aWxsIHNlbmQgb25lIGNvbnRleHQgdG8gYW4gT3Jpb24gQ29udGV4dCBCcm9rZXIgYXQgbXlzZXJ2ZXIuY29tIHdpdGggYSBwYXlsb2FkIGRlZmluaW5nIGEgd2VhdGhlciBvYnNlcnZhdGlvbiAoZGF0ZSBhbmQgdGVtcGVyYXR1cmUpLiAgXG5BbmQgaWYgeW91IGRvbid0IHdhbnQgdG8gcmVhZCB0aGlzIGRvY3VtZW50YXRpb24gYXQgYWxsOiBSZW1lbWJlciB0aGF0IHlvdSBjYW4gdXNlIC0taGVscCBhdCBhbnkgdGltZSEgOi0pXG5gYGBjb21tYW5kbGluZVxuJCBvc2NzaW0gLWhcbk9wZW4gU21hcnQgQ2l0eS1TaW0sIENvcHlyaWdodCAoYykgMjAyMSBXaWxsIEZyZWl0YWcsIFZlcnNpb24gMS4xLjJcbnVzYWdlOiBvc2NzaW0gWy1oXSAtcyBbcHJvdG9jb2xdaG9zdC1uYW1lIFstcCB7TkdTSS1WMixOR1NJLUxELFNlbnNvclRoaW5ncy1NUVRULFNlbnNvclRoaW5ncy1IVFRQfV0gWy1pXVxuICAgICAgICAgICAgICBbLWEgaWRdIFstSCBrZXkgdmFsdWVdIFstZiBpZF0gWy1lIFBSRUZJWF0gWy1vIFBPU1RGSVhdIFstY10gWy1uIG51bV0gWy1tIG51bV0gWy11XVxuICAgICAgICAgICAgICBbLXEgbWlsbGlzZWNvbmRzXSBbLWwgc2Vjb25kc10gWy15IG5hbWVdIFstYW4gbmFtZSx0eXBlLG51bWJlclssbWF4LW51bWJlcl1dIFstYXMgbmFtZSB2YWx1ZV1cbiAgICAgICAgICAgICAgWy1hZCBuYW1lXSBbLWFsIG5hbWUsbGF0LGxvbmdbLG1heC1sYXQsbWF4LWxvbmddXSBbLWFiIG5hbWUgdmFsdWVdIFstYWkgaW5kZW50XSBbLXJdIFstdl1cbiAgICAgICAgICAgICAgWy1kIGZyb20gdG9dXG5Ub29sIHRvIGNyZWF0ZSBzb21lIGxvYWQgb24gT3Jpb24gQ29udGV4dCBCcm9rZXIvRlJPU1QtU2VydmVyLlxuXG5vcHRpb25hbCBhcmd1bWVudHM6XG4gIC1oLCAtLWhlbHAgICAgICAgICAgICBzaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0XG4gIC1zIFtwcm90b2NvbF1ob3N0LW5hbWUsIC0tc2VydmVyIFtwcm90b2NvbF1ob3N0LW5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgaG9zdC1uYW1lIHdpbGwgYmUgcHJlcGVuZGVkIGJ5IFwiaHR0cHM6Ly9cIiwgaWYgcHJvdG9jb2wgaXMgb21pdHRlZCBhbmQgYXBwZW5kZWQgd2l0aFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIvdjIvXCIgKE5HU0ktVjIpLCBcIi9uZ3NpLWxkL3YxXCIgKE5HU0ktTEQpIG9yIFwiL3YxLjEvXCIgKFNlbnNvclRoaW5ncykgcmVzcC4gZGVwZW5kaW5nIG9uXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGUgc2VydmVyLXR5cGUgKHNlZSAtcC8tLXByb3RvY29sKS5cbiAgLXAge05HU0ktVjIsTkdTSS1MRCxTZW5zb3JUaGluZ3MtTVFUVCxTZW5zb3JUaGluZ3MtSFRUUH0sIC0tcHJvdG9jb2wge05HU0ktVjIsTkdTSS1MRCxTZW5zb3JUaGluZ3MtTVFUVCxTZW5zb3JUaGluZ3MtSFRUUH1cbiAgICAgICAgICAgICAgICAgICAgICAgIERlZmluZSB0aGUgdHlwZSBvZiBzZXJ2ZXIuIFtEZWZhdWx0OiBOR1NJLVYyXVxuICAtaSwgLS1pbnNlcnQtYWx3YXlzICAgW09ubHkgTkdTSS1WMiBhbmQgTkdTSS1MRCFdIElmIHNldCwgdGhlIGNvbnRleHRzIHdpbGwgYWx3YXlzIGJlIGluc2VydGVkICh2aWEgUE9TVCB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb24gJ3Vwc2VydCcpIGluc3RlYWQgb2YgdHJ5aW5nIHRvIHVwZGF0ZSBmaXJzdCAodmlhIFBBVENIKSBhbmQgaW5zZXJ0ICh2aWEgUE9TVCksIGlmXG4gICAgICAgICAgICAgICAgICAgICAgICBub3QgZXhpc3RpbmcgKGkuZS4gUEFUQ0ggcmV0dXJucyAnNDA0IE5vdCBGb3VuZCcpLlxuICAtYSBpZCwgLS1kYXRhc3RyZWFtLWlkIGlkXG4gICAgICAgICAgICAgICAgICAgICAgICBbT25seSBTZW5zb3JUaGluZ3MhXSBJZiBzZXQsIHRoaXMgRGF0YXN0cmVhbS1JZCB3aWxsIGJlIHVzZWQgZm9yIEFMTCBPYnNlcnZhdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0ZWFkIG9mIGZpcnN0IHNlYXJjaGluZyBmb3IgdGhlIFRoaW5nIGJ5IGl0J3MgbmFtZSBhbmQgdGhlIGNvcnJlY3QgRGF0YXN0cmVhbS1JZFxuICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJ3YXJkcy5cbiAgLUgga2V5IHZhbHVlLCAtLWhlYWRlciBrZXkgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIERlZmluZSBhIGhlYWRlciBieSBrZXkgYW5kIHZhbHVlLlxuICAtZiBpZCwgLS1maXJzdC1pZCBpZCAgRGVmaW5lIHRoZSBmaXJzdCBpZCB0byBiZSB1c2VkIG9yIHRoZSBvbmUgdG8gYmUgdXNlZCBpZiAnLWMvLS1zdGF0aWMtaWQnIGlzIHNldC5cbiAgICAgICAgICAgICAgICAgICAgICAgIFtEZWZhdWx0OiAxXVxuICAtZSBQUkVGSVgsIC0tcHJlZml4IFBSRUZJWFxuICAgICAgICAgICAgICAgICAgICAgICAgSWYgc2V0LCB0aGUgcHJlZml4IHdpbGwgYmUgcHJlcGVuZGVkIHRvIHRoZSBnZW5lcmF0ZWQgaWQuXG4gIC1vIFBPU1RGSVgsIC0tcG9zdGZpeCBQT1NURklYXG4gICAgICAgICAgICAgICAgICAgICAgICBJZiBzZXQsIHRoZSBwb3N0Zml4IHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhlIGdlbmVyYXRlZCBpZC5cbiAgLWMsIC0tc3RhdGljLWlkICAgICAgIElmIHNldCwgdGhlIGlkIHdpbGwgbm90IGluY3JlbWVudCAoaS5lLiAtbiB0aW1lcyAtbSBtZXNzYWdlcyB3aWxsIGJlIHNlbnQgd2l0aCB0aGUgc2FtZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWQgWyctZi8tLWZpcnN0LWlkJyBvciAnMScgaWYgb21pdHRlZF0pLlxuICAtbiBudW0sIC0tbnVtLXRocmVhZHMgbnVtXG4gICAgICAgICAgICAgICAgICAgICAgICBEZWZpbmUsIGhvdyBtYW55IHRocmVhZHMgc2hhbGwgYmUgdXNlZC4gW0RlZmF1bHQ6IDFdXG4gIC1tIG51bSwgLS1tZXNzYWdlcyBudW1cbiAgICAgICAgICAgICAgICAgICAgICAgIERlZmluZSwgaG93IG1hbnkgbWVzc2FnZXMgcGVyIHRocmVhZCBzaGFsbCBiZSBzZW50IChpZ25vcmVkLCBpZiAnLXUvLS11bmxpbWl0ZWQnIGlzdFxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0KS4gW0RlZmF1bHQ6IDFdXG4gIC11LCAtLXVubGltaXRlZCAgICAgICBJZiBzZXQsICctbS8tLW1lc3NhZ2VzJyBpcyBpZ25vcmVkIGFuZCBpbmZpbml0ZSBtZXNzYWdlcyB3aWxsIGJlIHNlbmQgKGluICctbi8tLW51bS1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRocmVhZHMnIHRocmVhZHMpLiBIaXQgJ0N0cmwtQycgdG8gaW50ZXJydXB0IG9yIHNldCAnLWwvLS1saW1pdC10aW1lJy5cbiAgLXEgbWlsbGlzZWNvbmRzLCAtLWZyZXF1ZW5jeSBtaWxsaXNlY29uZHNcbiAgICAgICAgICAgICAgICAgICAgICAgIElmIHNldCwgbGltaXRzIHRoZSBmcmVxdWVuY3kgb2YgdGhlIG1lc3NhZ2VzIHNlbnQgdG8gdGhlIGdpdmVuIG51bWJlciAocGVyIHRocmVhZCEpLlxuICAtbCBzZWNvbmRzLCAtLWxpbWl0LXRpbWUgc2Vjb25kc1xuICAgICAgICAgICAgICAgICAgICAgICAgT25seSBpbiBjb25qdW5jdGlvbiB3aXRoICctdS8tLXVubGltaXRlZCc6IFN0b3BzIGFmdGVyIHRoZSBnaXZlbiB0aW1lIGluIHNlY29uZHMuXG4gIC15IG5hbWUsIC0tdHlwZSBuYW1lICBbT25seSBOR1NJLVYyIGFuZCBOR1NJLUxEIV0gSWYgc2V0LCB0aGlzIHR5cGUtbmFtZSB3aWxsIGJlIHVzZWQgaW4gdGhlIHBheWxvYWQuXG4gIC1hbiBuYW1lLHR5cGUsbnVtYmVyWyxtYXgtbnVtYmVyXSwgLS1hdHRyaWJ1dGUtbnVtYmVyIG5hbWUsdHlwZSxudW1iZXJbLG1heC1udW1iZXJdXG4gICAgICAgICAgICAgICAgICAgICAgICBEZWZpbmUgYSBudW1iZXIgYXR0cmlidXRlIHVzZWQgZm9yIHRoZSBwYXlsb2FkIGJ5ICduYW1lJyAoVGhlIG5hbWUgb2YgdGhlIGF0dHJpYnV0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuZy46IHRlbXBlcmF0dXJlKSwgJ3R5cGUnIChPbmUgb2YgaSBbaW50ZWdlcl0gb3IgZiBbZmxvYXRpbmcgcG9pbnRdKWFuZCAnbnVtYmVyJyAoVGhlXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSB0byBiZSB1c2VkKS4gSWYgJ21heC1udW1iZXInIGlzIHNldCwgdGhlIG51bWJlciB3cml0dGVuIHdpbGwgYmUgcmFuZG9tbHkgYmV0d2VlblxuICAgICAgICAgICAgICAgICAgICAgICAgJ251bWJlcicgYW5kICdtYXgtbnVtYmVyJyAoZWFjaCBpbmNsdWRpbmcpLiBOb3RlOiBNdWx0aXBsZSBudW1iZXIgYXR0cmlidXRlcyBjYW4gYmVcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmluZWQgYnkgcmVwZWF0aW5nIC1hbi5cbiAgLWFzIG5hbWUgdmFsdWUsIC0tYXR0cmlidXRlLXN0cmluZyBuYW1lIHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBEZWZpbmUgYSBzdHJpbmcgYXR0cmlidXRlIHVzZWQgZm9yIHRoZSBwYXlsb2FkIGJ5ICduYW1lJyAoVGhlIG5hbWUgb2YgdGhlIGF0dHJpYnV0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuZy46IGluc3RydWN0aW9uKSBhbmQgJ3ZhbHVlJyAodGhlIGFjdHVhbCBzdHJpbmcpLiBOb3RlOiBNdWx0aXBsZSBzdHJpbmcgYXR0cmlidXRlcyBjYW5cbiAgICAgICAgICAgICAgICAgICAgICAgIGJlIGRlZmluZWQgYnkgcmVwZWF0aW5nIC1hcy5cbiAgLWFkIG5hbWUsIC0tYXR0cmlidXRlLWRhdGUgbmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgW09ubHkgTkdTSS1WMiFdIERlZmluZSBhIERhdGVUaW1lIGF0dHJpYnV0ZSB1c2VkIGZvciB0aGUgcGF5bG9hZCBieSAnbmFtZScgKFRoZSBuYW1lIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGUgYXR0cmlidXRlLCBlLmcuOiBkYXRlT2JzZXJ2ZWQpLiBOb3RlOiBUaGUgY3VycmVudCB0aW1lIGlzIHVzZWQgYXMgdmFsdWUuIE11bHRpcGxlXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlVGltZSBhdHRyaWJ1dGVzIGNhbiBiZSBkZWZpbmVkIGJ5IHJlcGVhdGluZyAtYWQuXG4gIC1hbCBuYW1lLGxhdCxsb25nWyxtYXgtbGF0LG1heC1sb25nXSwgLS1hdHRyaWJ1dGUtbG9jYXRpb24gbmFtZSxsYXQsbG9uZ1ssbWF4LWxhdCxtYXgtbG9uZ11cbiAgICAgICAgICAgICAgICAgICAgICAgIFtPbmx5IE5HU0ktVjIhXSBEZWZpbmUgYSBsb2NhdGlvbiBhdHRyaWJ1dGUgdXNlZCBmb3IgdGhlIHBheWxvYWQgYnkgJ25hbWUnIChUaGUgbmFtZSBvZlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGF0dHJpYnV0ZSwgZS5nLjogcG9zaXRpb24pLCAnbGF0JyAoVGhlIHZhbHVlIGZvciBsYXRpdHVkZSkgYW5kICdsb25nJyAoVGhlIHZhbHVlIGZvclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9uZ2l0dWRlKS4gSWYgJ21heC1sYXQnIGFuZCAnbWF4LWxvbmcnIGFyZSBzZXQsIHRoZSBsb2NhdGlvbiB3cml0dGVuIHdpbGwgYmUgcmFuZG9tbHlcbiAgICAgICAgICAgICAgICAgICAgICAgIGJldHdlZW4gJ2xhdCcgYW5kICdtYXgtbGF0JyBhbmQgJ2xvbmcnIGFuZCAnbWF4LWxvbmcnIHJlc3AuIChlYWNoIGluY2x1ZGluZykuIE5vdGU6XG4gICAgICAgICAgICAgICAgICAgICAgICBNdWx0aXBsZSBsb2NhdGlvbiBhdHRyaWJ1dGVzIGNhbiBiZSBkZWZpbmVkIGJ5IHJlcGVhdGluZyAtYWwuXG4gIC1hYiBuYW1lIHZhbHVlLCAtLWF0dHJpYnV0ZS1ib29sZWFuIG5hbWUgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIFtPbmx5IE5HU0ktVjIhXSBEZWZpbmUgYSBib29sZWFuIGF0dHJpYnV0ZSB1c2VkIGZvciB0aGUgcGF5bG9hZCBieSAnbmFtZScgKFRoZSBuYW1lIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGUgYXR0cmlidXRlLCBlLmcuOiBwdWJsaWMpIGFuZCAndmFsdWUnIChPbmUgb2YgJ3RydWUnLCAnZmFsc2UnIG9yICd0b2dnbGUnIFtpZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbWx5IHN3aXRjaCBiZXR3ZWVuIHRydWUgYW5kIGZhbHNlXSkuIE5vdGU6IE11bHRpcGxlIGJvb2xlYW4gYXR0cmlidXRlcyBjYW4gYmVcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmluZWQgYnkgcmVwZWF0aW5nIC1hYi5cbiAgLWFpIGluZGVudCwgLS1hdHRyaWJ1dGUtaW5kZW50IGluZGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgRGVmaW5lIHRoZSBudW1iZXIgb2YgY2hhcmFjdGVycyBmb3IgaW5kZW50aW5nIHRoZSBjcmVhdGVkIHBheWxvYWQuIFtEZWZhdWx0OiAwXVxuICAtciwgLS1kcnktcnVuICAgICAgICAgRG8gYSBkcnkgcnVuIG9ubHkgLSBnaXZpbmcgdGhlIGNoYW5jZSB0byByZXZpZXcgd2hhdCBXT1VMRCBiZSBkb25lIGluY2wuIHNlZWluZyB3aGF0IHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgcGF5bG9hZCB3aWxsIGxvb2sgbGlrZS5cbiAgLXYsIC0tdmVyYm9zZSAgICAgICAgIEdlbmVyYXRlIHZlcmJvc2Ugb3V0cHV0LlxuICAtZCBmcm9tIHRvLCAtLWRlbGV0ZSBmcm9tIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICBJZiBzZXQsIHRoZSBlbnRpdGllcyB3aXRoaW4gdGhlIGdpdmVuIHJhbmdlIChpbmNsdWRpbmcgXCJmcm9tXCIgYW5kIFwidG9cIikgd2lsbCBiZSBkZWxldGVkLlxuXG5FeGFtcGxlICMxOlxub3Njc2ltIC1zIG15LWhvc3QuY29tIC1IIEF1dGhvcml6YXRpb24gJ0JlYXJlciAwMzllYTZkNzJhMmYzMjIyN2MyMTEwYmQ4ZDc4YWFlMzNhY2Q2NzgyJyAtSCBGaXdhcmUtc2VydmljZVxuY3VybHRlc3Rcbk9uZSBtZXNzYWdlIGlzIHNlbnQgdXNpbmcgaWQgJzEnLlxuVGhlIHRlbmFudCAnY3VybHRlc3QnIHdpbGwgYmUgdXNlZCBhcyAnRml3YXJlLXNlcnZpY2UnIGluIHRoZSBoZWFkZXIgb2YgdGhlIHBvc3QuXG5cbkV4YW1wbGUgIzI6XG5vY3NzaW0gLXMgbXktaG9zdC5jb20gLW4gMiAtbSA1MCAuLi5naXQgY29tbWl0IC1hIC1tIFwicmVtb3ZlZCBteXB5IGZyb20gbGludGluZyAtIGl0IGhhcyBhIGJ1ZyByZXBvcnRpbmcgZmFsc2UgcG9zaXRpdmVcIlxuXG4xMDAgbWVzc2FnZXMgd2lsbCBiZSBzZW50ICgyIHRocmVhZHMgYXJlIHNlbmRpbmcgNTAgbWVzc2FnZXMgZWFjaCkuVGhlIGlkIHdpbGwgYmUgbG9vcGVkIGZyb20gJzEnIHRvICcxMDAnLlxuXG5FeGFtcGxlICMzOlxub3Njc2ltIC1zIG15LWhvc3QuY29tIC1uIDUgLW0gMTAwIC1mIDEyMyAtYyAuLi5cbjUwMCBtZXNzYWdlcyB3aWxsIGJlIHNlbnQgKDUgdGhyZWFkcyBhcmUgc2VuZGluZyAxMDAgbWVzc2FnZXMgZWFjaCkuVGhlIGlkICcxMjMnICgtZiBpcyBmaXJzdCBpZCkgd2lsbCBiZSB1c2VkXG5mb3IgYWxsIG1lc3NhZ2VzICgtYyBpcyBzdGF0aWMgaWQpLlxuXG5FeGFtcGxlICM0OlxuVGhlIHBheWxvYWQgdGhhdCB3aWxsIGJlIHNlbnQgaXMgY29uc3RydWN0ZWQgZnJvbSB0aGUgLXkgYW5kIHRoZSAtYVggcGFyYW1ldGVycy4gRXhhbXBsZTpcbm9zY3NpbSAteSBXZWF0aGVyT2JzZXJ2ZWQgLWFuIHRlbXBlcmF0dXJlLGYsLTIwLDUwIC1hbiBwcmVjaXBpdGF0aW9uLGksMSwyMCAuLi5cbndpbGwgZ2VuZXJhdGUgYSBwYXlsb2FkIGxvb2tpbmcgbGlrZTpcbntcbiAgXCJpZFwiOlwiMVwiLFxuICBcInR5cGVcIjpcIldlYXRoZXJPYnNlcnZlZFwiLFxuICBcInRlbXBlcmF0dXJlXCI6IHtcbiAgICBcInR5cGVcIjogXCJOdW1iZXJcIixcbiAgICBcInZhbHVlXCI6IC0yLjNcbiAgfSxcbiAgXCJwcmVjaXBpdGF0aW9uXCI6IHtcbiAgICBcInR5cGVcIjogXCJOdW1iZXJcIixcbiAgICBcInZhbHVlXCI6IDEzXG4gIH0sXG59XG5cbkV4YW1wbGUgIzU6XG5vc2NzaW0gLWQgMTAwIDIwMCAtcyBteS1ob3N0LmNvbSAtSCBBdXRob3JpemF0aW9uICdCZWFyZXIgMDM5ZWE2ZDcyYTJmMzIyMjdjMjExMGJkOGQ3OGFhZTMzYWNkNjc4MidcblxuVGhpcyB3aWxsIGRlbGV0ZSBhbGwgSURzIHN0YXJ0aW5nIGZyb20gMTAwIHRvIDIwMCAoaW5jbHVzaXZlKS5cbmBgYFxuIyMgV2h5IE5vdCBTaW1wbHkgVXNlIFwiY3VybFwiIG9yIFwiUG9zdG1hbi9OZXdtYW5cIj9cbldoaWxlIGl0J3MgZWFzeSB0byB0aGluayBhYm91dCBhIHNoZWxsIHNjcmlwdCwgdGhhdCBydW5zIGN1cmwgaW4gYSBsb29wIGFkZGluZyBkYXRhIHZpYSB0aGUgYmFja2VuZCdzIFJFU1QtQXBpLCBvbmUgaW1wb3J0YW50IGRyYXdiYWNrIGlzLCB0aGF0IGlmIHlvdXIgc2VydmVyIGlzIFRMUy1zZWN1cmVkICgnaHR0cHM6Ly8uLi4pLCBjdXJsIGlzbid0IGFibGUgdG8gY2FjaGUgdGhhdCBUTFMtaGFuZHNoYWtlLiBUaGF0IG1lYW5zLCB0aGF0IEVWRVJZIGNhbGwgd2lsbCBkbyB0aGlzIGhhbmRzaGFrZSBlbmRpbmcgdXAgaW4gcmVzcG9uc2UgdGltZXMgbGlrZSBvbmUgb3IgbW9yZSBzZWNvbmRzLiBJdCdzIGhhcmQgdG8gZ2VuZXJhdGUgbG9hZCB0aGlzIHdheSB3aXRoIGh1bmRyZWRzIG9mIG1lc3NhZ2VzIHBlciBzZWNvbmQuIFB1dHRpbmcgbW9yZSB0aGFuIG9uZSBVUkwgaW4gYSBzaW5nbGUgY3VybCBpcyBhIHNvbHV0aW9uIGZvciB0aGlzLCBidXQgaXQncyBoYXJkIHRvIGFnZ3JlZ2F0ZSB0aGUgcmVzdWx0cyBhbmQgd2hhdCwgaWYgdGhlcmUgaXMgbW9yZSBsb2dpYyBuZWVkZWQgKGUuZy4gQ2FsbCB0aGlzIFVSTCBhZnRlciB0aGF0IFVSTCwgYnV0IG9ubHkgaWYgdGhlIGZpcnN0IGNhbGwgZ2F2ZSB5b3UgYW4gNDA0Li4uKSAgXG5cblBvc3RtYW4gaXMgYSBuaWNlIFwiYWx0ZXJuYXRpdmVcIiBmb3IgY3VybCAtIG5vdCBvbmx5IGJlY2F1c2Ugb2YgaXRzIG5pY2UgVUkgYW5kIHRvbnMgb2YgdXNlZnVsIGZlYXR1cmVzLiBCZXNpZGUgYWxsIG9mIHRoYXQsIGl0IGlzIGFibGUgdG8gcnVuIGluIGEgYmF0Y2ggbW9kZSAodG9nZXRoZXIgd2l0aCBOZXdtYW4pLCBBTkQgaXQgY2FjaGVzIFRMUy1oYW5kc2hha2VzIGFzIHdlbGwhIEJ1dCBzdGlsbCBpdCdzIGhhcmQgdG8gZ2VuZXJhdGUgbG9hZCwgc2luY2UgUG9zdG1hbiBpcyByZXNvdXJjZSBjb25zdW1pbmcgYW5kIHdoZW4geW91IHJ1biBtb3JlIHRoYW4gb25lIGluc3RhbmNlIHNpbXVsdGFuZW91c2x5LCB5b3UnbGwgc29vbiBmaW5kIG91dCB5b3VyIHRlc3QtbWFjaGluZSBpcyB0aGUgYm90dGxlbmVjay4gXG5cbiMgU3VwcG9ydGVkIEJhY2tlbmRzXG5UaGlzIHNjcmlwdCBpcyB0ZXN0ZWQgd2l0aDpcbiogT3Jpb24gQ29udGV4dCBCcm9rZXIsIDIuNS4wXG4qIE9yaW9uLUxELCBwb3N0LXYwLjcgKGV4cGVyaW1lbnRhbClcbiogRlJPU1QtU2VydmVyLCAxLjEzLjAtU05BUFNIT1QgIFxuXG5PdGhlciB2ZXJzaW9ucyBtYXkgYmUgY29tcGF0aWJsZSwgYnV0IHdlIGRvIG5vdCBjdXJyZW50bHkgcnVuIHRlc3RzIGFnYWluc3QgdGhvc2UuXG4gIFxuIyBTdXBwb3J0ZWQgUHl0aG9uIFZlcnNpb25zXG5QeXRob24gMy42IGFuZCAzLjcgYXJlIGZ1bGx5IHN1cHBvcnRlZCBhbmQgdGVzdGVkIChMaW51eCBhbmQgV2luZG93cykuICBcblRoaXMgc2NyaXB0IG1heSB3b3JrIG9uIGxhdGVyIHZlcnNpb25zIG9mIDMsIGJ1dCB3ZSBkbyBub3QgY3VycmVudGx5IHJ1biB0ZXN0cyBhZ2FpbnN0IHRob3NlIHZlcnNpb25zLlxuXG4jIEluc3RhbGxhdGlvblxuIyMgRnJvbSBQYWNrYWdlXG4jIyMgSW5zdGFsbFxuUnVuIGBwaXBbM10gaW5zdGFsbCBvY3NzaW1gLlxuIyMjIFJ1biBPcGVuIFNtYXJ0IENpdHktU2ltXG5TaW1wbHkgcnVuIGBvc2NzaW1gLlxuIyMgRnJvbSBTb3VyY2VcbiMjIyBHZXQgUmVwb3NpdG9yeVxuQ2xvbmUgb3IgZG93bmxvYWQgcmVwb3NpdG9yeSBmcm9tIFtHaXRodWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9IWVBFUlRFR1JJVFktQUcvT3BlblNpbSkuXG4jIyMgUHJlcmVxdWlzaXRlc1xuQnkgcnVubmluZzogYHBpcFszXSBpbnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHQgWy0tdXNlcl1gIHRoZSByZXF1aXJlZCBsaWJyYXJpZXMgY2FuIGJlIGluc3RhbGxlZCBhdCBvbmNlLiAgXG5BbHRlcm5hdGl2ZWx5LCB0aGUgcmVxdWlyZWQgbGlicmFyaWVzIGNhbiBiZSBpbnN0YWxsZWQgbWFudWFsbHkuICBcbkZvbGxvd2luZyBsaWJyYXJpZXMgbmVlZCB0byBiZSBpbnN0YWxsZWQ6XG4qICoqUmVxdWVzdHMqKiAgXFxcbldlYi1zaXRlOiBodHRwczovL2dpdGh1Yi5jb20vcHNmL3JlcXVlc3RzIFxcXG5JbnN0YWxsIHdpdGg6IGAkIHBpcCBpbnN0YWxsIHJlcXVlc3RzYFxuKiAqKkVjbGlwc2UgUGFob+KEoiBNUVRUIFB5dGhvbiBDbGllbnQqKiBcXFxuV2ViLXNpdGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9lY2xpcHNlL3BhaG8ubXF0dC5weXRob24gXFxcbkluc3RhbGwgd2l0aDogYCQgcGlwIGluc3RhbGwgcGFoby1tcXR0YFxuIyMjIFJ1biBPcGVuIFNtYXJ0IENpdHktU2ltXG5Gcm9tIHRoZSBgc3JjYCBkaXJlY3RvcnkgcnVuIGBweXRob25bM10gLW0gb3Njc2ltYC5cbiMjIFdoYXQncyB0aGF0IFwiSURcIj9cbkluIE9yaW9uIENvbnRleHQgQnJva2VyIChOR1NJLVhYKSwgQ29udGV4dHMgYXJlIHN0b3JlZCBhcyBlbnRpdGllcywgYW5kIHRoZXNlIGVudGl0aWVzIGFyZSByZWZlcnJlZCBieSB0aGVpciAqKlwiaWRcIioqIChlLmcuIFwidXJuOm5nc2ktdjI6QWlyUXVhbGl0eU9ic2VydmVkOlJaOk9ic3Y0NTY3XCIpLiBTdWNoIGFuIGVudGl0eSB3aWxsIHRoZW4gaGF2ZSBzb21lIG1ldGEtZGF0YSBhbmQgb25lIG9yIG1vcmUgYXR0cmlidXRlcy4gXFxcbkluIEZST1NUIChTZW5zb3JUaGluZ3MpLCBJdCBhbGwgc3RhcnRzIHdpdGggYSBcIlRoaW5nXCIgdGhhdCBoYXMgYSAqKlwibmFtZVwiKiogYW5kIGFuIGludGVybmFsIChudW1lcmljKSBpZC4gRGVwZW5kZW5jaWVzIChEYXRhc3RyZWFtcywgT2JzZXJ2YXRpb25zKSBhcmUgcmVsYXRlZCB0byB0aGF0IGludGVybmFsIGlkIHRoYXQgaXMgZ2VuZXJhdGVkIGJ5IEZST1NULiBcXFxub3Njc2ltIHVzZXMgYSBudW1lcmljIFwiaWRcIiAoc3RhcnRpbmcgd2l0aCBzaW1wbHkgJzEnKSB0aGF0IGNhbiBlYXNpbHkgYmUgbG9vcGVkLiBcblRoaXMgaWQgaXMgdGhlbiB1c2VkIGFzIHRoZSBlbnRpdHkncyBcImlkXCIgKE9yaW9uKSBhbmQgXCJuYW1lXCIgKEZST1NUKSByZXNwZWN0aXZlbHkuICAgIFxuUGxlYXNlIG5vdGU6IFRoaXMgbnVtZXJpYyBpZCBjYW4gYmUgcHJlcGVuZGVkL2FwcGVuZGVkIHdpdGggc3RyaW5ncywgbGV0dGluZyBpdCBsb29rIG1vcmUgbGlrZSBhIFwicmVhbFwiIGVudGl0eS90aGluZywgaWYgd2FudGVkLlxuXG4jIyBXaGF0IGlzIGEgXCJNZXNzYWdlXCI/XG5BIFwibWVzc2FnZVwiIGlzIHRoZSBhdHRlbXB0LCB0byBzdG9yZSBhIHNpbmdsZSBhdHRyaWJ1dGUgKFNlbnNvclRoaW5ncykgb3Igb25lIG9yIG1vcmUgYXR0cmlidXRlcyBhdCBvbmNlIChOR1NJLVhYKS4gRm9yIHRoaXMgYXR0ZW1wdCwgb25lIG9yIG1vcmUgY2FsbHMgdG8gdGhlIHNlcnZlcidzIEFQSSBhcmUgbmVlZGVkLCBkZXBlbmRpbmcgb24gdGhlIHR5cGUgb2Ygc2VydmVyIChOR1NJIG9yIFNlcnZlclRoaW5ncyksIHRoZSBzY2hlbWUgdGhhdCBpcyB1c2VkIChOR1NJKSwgYSBsb29waW5nIG9yIHN0YXRpYyBpZCAoU2Vuc29yVGhpbmdzKSBhbmQgZXZlbiB0aGUgbnVtYmVyIG9mIG1lc3NhZ2VzIGFuZCBhdHRyaWJ1dGVzIChTZW5zb3JUaGluZ3MpLiAgXG5cbnwgIyB8IEJhY2tlbmQgfCBTY2hlbWUgfCBQcm90b2NvbCB8IFN0YXRpYy1JZCB8ICMgb2YgTWVzc2FnZXMgfCAjIG9mIEF0dHJpYnV0ZXMgfCBBUEktQWNjZXNzIHwgU3VtbWFyeSB8ICAgXG58IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8IC0tLSB8ICBcbnwgMS4xIHwgTkdTSS1YWCB8IFBPU1QtQWx3YXlzIHwgLSB8IHllcy9ubyB8IDEtbiB8IDEtbiB8IDEgUE9TVCB3aXRoICd1cHNlcnQnIHwgMSBhY2Nlc3MgfCAgXG58IDEuMiB8ICB8IFBBVENIL1BPU1QgfCAtIHwgeWVzL25vIHwgMS1uIHwgMS1uIHwgMSBQQVRDSCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1QgYWZ0ZXJ3YXJkcyAoYnV0IG9ubHkgb25jZSBwZXIgZW50aXR5KSB8IDEgYWNjZXNzIGZvciBrbm93biBlbnRpdGllcywgPGJyPjIgYWNjZXNzZXMgZm9yIG5ldyBlbnRpdGllcyB8ICBcbnwgMi4xIHwgU2VydmVyVGhpbmdzIHwgLSB8IEhUVFAgfCB5ZXMgfCAxIHwgMSB8IDEgR0VUIG9uIF9UaGluZ3NfIHRvIGdldCB0aGUgdGhpbmctaWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9UaGluZ3NfIHRvIGNyZWF0ZSB0aGluZyBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfVGhpbmdzXy4gMSBHRVQgb24gRGF0YXN0cmVhbXMgdG8gZ2V0IGRhdGFzdHJlYW0taWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9EYXRhc3RyZWFtc18gdG8gY3JlYXRlIGRhdGFzdHJlYW0gYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX0RhdGFzdHJlYW1zXy4gMSBQT1NUIG9uIF9PYnNlcnZhdGlvbnNfLiB8IDcgYWNjZXNzZXMgZm9yIGEgbmV3IFRoaW5nLCA8YnI+NSBhY2Nlc3NlcyBmb3IgYSBrbm93biBUaGluZyBhbmQgbmV3IERhdGFzdHJlYW0sIDxicj4zIGFjY2Vzc2VzIGZvciBrbm93biBUaGluZyBhbmQga25vd24gRGF0YXN0cmVhbSB8ICBcbnwgMi4yIHwgICAgICAgICAgICAgIHwgLSB8ICAgICAgfCB5ZXMgfCBuIHwgMSB8IDEgR0VUIG9uIF9UaGluZ3NfIHRvIGdldCB0aGUgdGhpbmctaWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9UaGluZ3NfIHRvIGNyZWF0ZSB0aGluZyBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfVGhpbmdzXy4gMSBHRVQgb24gRGF0YXN0cmVhbXMgdG8gZ2V0IGRhdGFzdHJlYW0taWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9EYXRhc3RyZWFtc18gdG8gY3JlYXRlIGRhdGFzdHJlYW0gYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX0RhdGFzdHJlYW1zXy4gMSBQT1NUIG9uIF9PYnNlcnZhdGlvbnNfLiB8IExpa2UgMi4xIGZvciB0aGUgZmlyc3QgbWVzc2FnZSwgMyBhY2Nlc3NlcyBmb3IgYWxsIG90aGVycyB8ICBcbnwgMi4zIHwgICAgICAgICAgICAgIHwgLSB8ICAgICAgfCB5ZXMgfCAxIHwgbiB8IDEgR0VUIG9uIF9UaGluZ3NfIHRvIGdldCB0aGUgdGhpbmctaWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9UaGluZ3NfIHRvIGNyZWF0ZSB0aGluZyBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfVGhpbmdzXy4gRm9yIGVhY2ggYXR0cmlidXRlOiAxIEdFVCBvbiBEYXRhc3RyZWFtcyB0byBnZXQgZGF0YXN0cmVhbS1pZCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1Qgb24gX0RhdGFzdHJlYW1zXyB0byBjcmVhdGUgZGF0YXN0cmVhbSBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfRGF0YXN0cmVhbXNfLiAxIFBPU1Qgb24gX09ic2VydmF0aW9uc18uIHwgTGlrZSAyLjEgZm9yIHRoZSBUaGluZywgYnV0IHVwIHRvIDMgYWNjZXNzZXMgZm9yIGVhY2ggYXR0cmlidXRlIGFuZCAxIGZvciB0aGUgT2JzZXJ2YXRpb24gfCAgXG58IDIuNCB8ICAgICAgICAgICAgICB8IC0gfCAgICAgIHwgeWVzIHwgbiB8IG4gfCAxIEdFVCBvbiBfVGhpbmdzXyB0byBnZXQgdGhlIHRoaW5nLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfVGhpbmdzXyB0byBjcmVhdGUgdGhpbmcgYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX1RoaW5nc18uIEZvciBlYWNoIGF0dHJpYnV0ZTogMSBHRVQgb24gRGF0YXN0cmVhbXMgdG8gZ2V0IGRhdGFzdHJlYW0taWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9EYXRhc3RyZWFtc18gdG8gY3JlYXRlIGRhdGFzdHJlYW0gYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX0RhdGFzdHJlYW1zXy4gMSBQT1NUIG9uIF9PYnNlcnZhdGlvbnNfLiB8IExpa2UgMi4xIGZvciB0aGUgVGhpbmcsIGJ1dCB1cCB0byAzIGFjY2Vzc2VzIGZvciBlYWNoIGF0dHJpYnV0ZSBhbmQgMSBmb3IgdGhlIE9ic2VydmF0aW9uIHwgIFxufCAyLjUgfCAgICAgICAgICAgICAgfCAtIHwgICAgICB8IG5vIHwgbiB8IG4gfCAxIEdFVCBvbiBfVGhpbmdzXyB0byBnZXQgdGhlIHRoaW5nLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfVGhpbmdzXyB0byBjcmVhdGUgdGhpbmcgYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX1RoaW5nc18uIEZvciBlYWNoIGF0dHJpYnV0ZTogMSBHRVQgb24gRGF0YXN0cmVhbXMgdG8gZ2V0IGRhdGFzdHJlYW0taWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9EYXRhc3RyZWFtc18gdG8gY3JlYXRlIGRhdGFzdHJlYW0gYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX0RhdGFzdHJlYW1zXy4gMSBQT1NUIG9uIF9PYnNlcnZhdGlvbnNfLiB8IExpa2UgMi4xIGZvciBFVkVSWSBUaGluZywgYW5kIHVwIHRvIDMgYWNjZXNzZXMgZm9yIGVhY2ggYXR0cmlidXRlIGFuZCAxIGZvciB0aGUgT2JzZXJ2YXRpb24gfCAgXG58IDIuNiB8ICAgICAgICAgICAgICB8IC0gfCBNUVRUIHwgeWVzIHwgMSB8IDEgfCAxIEdFVCBvbiBfVGhpbmdzXyB0byBnZXQgdGhlIHRoaW5nLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfVGhpbmdzXyB0byBjcmVhdGUgdGhpbmcgYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX1RoaW5nc18uIDEgR0VUIG9uIERhdGFzdHJlYW1zIHRvIGdldCBkYXRhc3RyZWFtLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfRGF0YXN0cmVhbXNfIHRvIGNyZWF0ZSBkYXRhc3RyZWFtIGFuZCAxIG1vcmUgR0VUIHRvIGdldCB0aGluZy1pZCBmcm9tIF9EYXRhc3RyZWFtc18uIDEgUFVCTElTSCB2aWEgTVFUVCBvbiB0aGF0IF9PYnNlcnZhdGlvbl8uIHwgNyBhY2Nlc3NlcyBmb3IgYSBuZXcgVGhpbmcsIDxicj41IGFjY2Vzc2VzIGZvciBhIGtub3duIFRoaW5nIGFuZCBuZXcgRGF0YXN0cmVhbSwgPGJyPjMgYWNjZXNzZXMgZm9yIGtub3duIFRoaW5nIGFuZCBrbm93biBEYXRhc3RyZWFtIHwgIFxufCAyLjcgfCAgICAgICAgICAgICAgfCAtIHwgICAgICB8IHllcyB8IG4gfCAxIHwgMSBHRVQgb24gX1RoaW5nc18gdG8gZ2V0IHRoZSB0aGluZy1pZCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1Qgb24gX1RoaW5nc18gdG8gY3JlYXRlIHRoaW5nIGFuZCAxIG1vcmUgR0VUIHRvIGdldCB0aGluZy1pZCBmcm9tIF9UaGluZ3NfLiAxIEdFVCBvbiBEYXRhc3RyZWFtcyB0byBnZXQgZGF0YXN0cmVhbS1pZCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1Qgb24gX0RhdGFzdHJlYW1zXyB0byBjcmVhdGUgZGF0YXN0cmVhbSBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfRGF0YXN0cmVhbXNfLiAxIFBVQkxJU0ggdmlhIE1RVFQgb24gdGhhdCBfT2JzZXJ2YXRpb25fLiB8IExpa2UgMi42IGZvciB0aGUgZmlyc3QgbWVzc2FnZSwgMyBhY2Nlc3NlcyBmb3IgYWxsIG90aGVycyB8ICBcbnwgMi44IHwgICAgICAgICAgICAgIHwgLSB8ICAgICAgfCB5ZXMgfCAxIHwgbiB8IDEgR0VUIG9uIF9UaGluZ3NfIHRvIGdldCB0aGUgdGhpbmctaWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9UaGluZ3NfIHRvIGNyZWF0ZSB0aGluZyBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfVGhpbmdzXy4gRm9yIGVhY2ggYXR0cmlidXRlOiAxIEdFVCBvbiBEYXRhc3RyZWFtcyB0byBnZXQgZGF0YXN0cmVhbS1pZCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1Qgb24gX0RhdGFzdHJlYW1zXyB0byBjcmVhdGUgZGF0YXN0cmVhbSBhbmQgMSBtb3JlIEdFVCB0byBnZXQgdGhpbmctaWQgZnJvbSBfRGF0YXN0cmVhbXNfLiAxIFBVQkxJU0ggdmlhIE1RVFQgb24gdGhhdCBfT2JzZXJ2YXRpb25fLiB8IExpa2UgMi42IGZvciB0aGUgVGhpbmcsIGJ1dCB1cCB0byAzIGFjY2Vzc2VzIGZvciBlYWNoIGF0dHJpYnV0ZSBhbmQgMSBmb3IgdGhlIE9ic2VydmF0aW9uIHwgIFxufCAyLjkgfCAgICAgICAgICAgICAgfCAtIHwgICAgICB8IHllcyB8IG4gfCBuIHwgMSBHRVQgb24gX1RoaW5nc18gdG8gZ2V0IHRoZSB0aGluZy1pZCBhbmQgaWYgbm90IGZvdW5kLCAxIFBPU1Qgb24gX1RoaW5nc18gdG8gY3JlYXRlIHRoaW5nIGFuZCAxIG1vcmUgR0VUIHRvIGdldCB0aGluZy1pZCBmcm9tIF9UaGluZ3NfLiBGb3IgZWFjaCBhdHRyaWJ1dGU6IDEgR0VUIG9uIERhdGFzdHJlYW1zIHRvIGdldCBkYXRhc3RyZWFtLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfRGF0YXN0cmVhbXNfIHRvIGNyZWF0ZSBkYXRhc3RyZWFtIGFuZCAxIG1vcmUgR0VUIHRvIGdldCB0aGluZy1pZCBmcm9tIF9EYXRhc3RyZWFtc18uIDEgUFVCTElTSCB2aWEgTVFUVCBvbiB0aGF0IF9PYnNlcnZhdGlvbl8uIHwgTGlrZSAyLjYgZm9yIHRoZSBUaGluZywgYnV0IHVwIHRvIDMgYWNjZXNzZXMgZm9yIGVhY2ggYXR0cmlidXRlIGFuZCAxIGZvciB0aGUgT2JzZXJ2YXRpb24gfCAgXG58IDIuMTAgfCAgICAgICAgICAgICAgfCAtIHwgICAgICB8IG5vIHwgbiB8IG4gfCAxIEdFVCBvbiBfVGhpbmdzXyB0byBnZXQgdGhlIHRoaW5nLWlkIGFuZCBpZiBub3QgZm91bmQsIDEgUE9TVCBvbiBfVGhpbmdzXyB0byBjcmVhdGUgdGhpbmcgYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX1RoaW5nc18uIEZvciBlYWNoIGF0dHJpYnV0ZTogMSBHRVQgb24gRGF0YXN0cmVhbXMgdG8gZ2V0IGRhdGFzdHJlYW0taWQgYW5kIGlmIG5vdCBmb3VuZCwgMSBQT1NUIG9uIF9EYXRhc3RyZWFtc18gdG8gY3JlYXRlIGRhdGFzdHJlYW0gYW5kIDEgbW9yZSBHRVQgdG8gZ2V0IHRoaW5nLWlkIGZyb20gX0RhdGFzdHJlYW1zXy4gMSBQVUJMSVNIIHZpYSBNUVRUIG9uIHRoYXQgX09ic2VydmF0aW9uXy4gfCBMaWtlIDIuNiBmb3IgRVZFUlkgVGhpbmcsIGFuZCB1cCB0byAzIGFjY2Vzc2VzIGZvciBlYWNoIGF0dHJpYnV0ZSBhbmQgMSBmb3IgdGhlIE9ic2VydmF0aW9uIHwgIFxuXG5XaXRoIHRoaXMgaW4gbWluZCwgeW91IHNob3VsZCBiZSBhYmxlIHRvIGZpbmQgb3V0IHRoZSBtZWFuaW5nIG9mIF9tc2cvc2VjXyBhbmQgaG93IHRvIGNvbXBhcmUgdGhyb3VnaHB1dC4gIFxuQW5kIHJlbWVtYmVyOiBGb3IgT3Jpb24gQ29udGV4dCBCcm9rZXIgdGhlIG92ZXJhbGwgbnVtYmVyIG9mIG1lc3NhZ2VzIGlzIHNpbXBseSAoX1wiLS1udW0tdGhyZWFkc1wiXyB4IF9cIi0tbnVtLW1lc3NhZ2VzXCJfKSB3aGlsZSBmb3IgRlJPU1QgdGhlIGNhbGN1bGF0aW9uIGlzIChfXCItLW51bS10aHJlYWRzXCJfIHggX1wiLS1udW0tbWVzc2FnZXNcIl8geCBfXCJudW1iZXIgb2YgYXR0cmlidXRlc1wiXykuIFxuXG4jIyBVcGRhdGUgb3IgSW5zZXJ0P1xuV2hlbiBzZW5kaW5nIGEgbWVzc2FnZS4uLmRvIEkgaW5zZXJ0IGEgbmV3IENvbnRleHQvRW50aXR5L1RoaW5nL3doYXRldmVyIG9yIGFtIEkgdXBkYXRpbmcgYW4gZXhpc3Rpbmcgb25lPyAgXG5JbiBzaG9ydDogSXQgZGVwZW5kcyBvbiB0aGUgY3VycmVudCBkYXRhLWJhc2lzLiBJZiB0aGUgZW50aXR5IGRvZXNuJ3QgZXhpc3QgeWV0LCBpdCB3aWxsIGJlIGNyZWF0ZWQsIGlmIGl0IGFscmVhZHkgZXhpc3RzLCBpdCB3aWxsIGJlIHVwZGF0ZWQuIFRoYXQgbWVhbnM6IE9uIGFuIGVtcHR5IGRhdGFiYXNlIHRoZSB2ZXJ5IGZpcnN0IGNhbGwgb2YgX29zY3NpbV8gd2l0aCBvbmUgaWQsIGFuZCBhbiBvdmVyYWxsIG51bWJlciBvZiBtZXNzYWdlcyBvZiBvbmUsIHdpbGwgY3JlYXRlIGEgbmV3IGVudGl0eSB3aGlsZSBleGFjdCB0aGUgc2FtZSBjYWxsIHdpbGwgdXBkYXRlIHRoZSBleGlzdGluZyBvbmUgaWYgcnVubmluZyBhZ2Fpbi4gU28gaXQncyBhIGdvb2QgaWRlYSB0byBrZWVwIHRyYWNrIG9mIHRoZSBkYXRhIHlvdSBjcmVhdGVkIGFuZCBqdXN0IGtlZXAgaW4gbWluZDogX29zY3NpbV8ga25vd3MgaG93IHRvIGRlbGV0ZSBkYXRhIVxuXG4jIFVzYWdlXG5cbiMjIERlZmluZSB0aGUgVGFyZ2V0XG5MZXQncyBzdGFydCB3aXRoIHRoZSBXSEVSRSBhbmQgV0hBVCAtIHdoZXJlIGRvIGFsbCB0aG9zZSBtZXNzYWdlIGdvIGFuZCB3aGF0IGtpbmQgb2Ygc2VydmVyIGlzIHRoYXQuIFxuKiAqKi0tc2VydmVyIF9bcHJvdG9jb2xdaG9zdC1uYW1lXyoqIFxcXG5UaGUgc2VydmVyIC0geW91IGFyZSBydW5uaW5nIHlvdXIgdGVzdCBhZ2FpbnN0IC0gd2lsbCBsb29rIGxpa2UgX2RhdGEubXktZG9tYWluLmNvbV8gb3IgbWF5YmUgXzEyNy4wLjAuMV8uIFNvbWV0aW1lcyB5b3UgbmVlZCBhIHNwZWNpYWwgcG9ydCAoX2RvbWFpbi5jb206OTk5N18pIGFuZC9vciBzdWItZGlyZWN0b3J5IChfZG9tYWluLmNvbToxMjM0L3NlcnZlcl8pLiBJZiB5b3Ugb21pdCB0aGUgcHJvdG9jb2wsIF8naHR0cHM6Ly8nXyB3aWxsIGJlIHByZXBlbmRlZCwgc28gaWYgeW91IHdhbnQgdG8gYWNjZXNzIHRoZSBzZXJ2ZXIgdW5zZWN1cmVkLCB5b3VyIHNlcnZlci1wYXJhbWV0ZXIgd2lsbCBsb29rIGxpa2UgX2h0dHA6Ly9kb21haW4uLi5fIFxuKiAqKi0tcHJvdG9jb2wgX05HU0ktVjJ8U2Vuc29yVGhpbmdzLU1RVFR8U2Vuc29yVGhpbmdzLUhUVFBfKiogXFxcbkNob29zZSBiZXR3ZWVuIF9OR1NJLVYyXyAodGhlIHNlcnZlciBpcyBPcmlvbiBDb250ZXh0IEJyb2tlciwgVjIpIGFuZCBfU2Vuc29yVGhpbmdzXyAoaGVyZSB5b3UgaGF2ZSB0byBjaG9vc2UgYmV0d2VlbiBfSFRUUF8gYW5kIF9NUVRUXykuIElmIG9taXR0ZWQsIF9OR1NJXyBpcyBhc3N1bWVkLiAgXG5QbGVhc2Ugbm90ZTogRXZlbiB3aXRoIF9TZW5zb3JUaGluZ3MtTVFUVF8sIHRoZSBIVFRQLXBvcnQgb2YgRlJPU1Qgd2lsbCBiZSB1c2VkIGZvciBmaW5kaW5nIG91dCB0aGUgVGhpbmctIGFuZCBEYXRhU3RyZWFtLWlkLiAgXG5cbiMjIERlZmluZSBIZWFkZXJzXG5IZWFkZXJzIGFyZSBlYXNpbHkgZGVmaW5lZCBieSBrZXkgYW5kIHZhbHVlLlxuKiAqKi0taGVhZGVyIGtleSB2YWx1ZSoqIFxcXG5UaGlzIHdpbGwgY3JlYXRlIGEgSGVhZGVyLCB0aGF0IGxvb2tzIGxpa2U6XG4gIGBgYFxuICAna2V5JzondmFsdWUnXG4gIGBgYFxuICBFeGFtcGxlczpcbiAgYGBgaHRtbFxuICAtLWhlYWRlciBYLUdyYXZpdGVlLUFwaS1LZXkgWU9VUi1BUEktS0VZLUdPRVMtSEVSRVxuICBDcmVhdGVzIGhlYWRlcjpcbiAgJ1gtR3Jhdml0ZWUtQXBpLUtleSc6J1lPVVItQVBJLUtFWS1HT0VTLUhFUkUnXG4gIFxuICAtLWhlYWRlciBBdXRob3JpemF0aW9uIFwiQmVhcmVyIFlPVVItVE9LRU4tR09FUy1IRVJFXCJcbiAgQ3JlYXRlcyBoZWFkZXI6XG4gICdBdXRob3JpemF0aW9uJzonQmVhcmVyIFlPVVItVE9LRU4tR09FUy1IRVJFJ1xuICBcbiAgLS1oZWFkZXIgRml3YXJlLXNlcnZpY2UgTVlfVEVOQU5UXG4gIENyZWF0ZXMgaGVhZGVyOlxuICAnRml3YXJlLXNlcnZpY2UnOidNWV9URU5BTlQnXG4gIGBgYFxuXG4jIyBEZWZpbmUgdGhlIFNjaGVtZSB0byBiZSBVc2VkXG4qICoqLS1pbnNlcnQtYWx3YXlzKiogXFxcbltOR1NJLVYyIGFuZCBOR1NJLUxEIG9ubHldIFN0b3JpbmcgQ29udGV4dHMgaW4gT3Jpb24gQ29udGV4dCBCcm9rZXIgY2FuIGJlIGRvbmUgaW4gZGlmZmVyZW50IHdheXMuIFR3byBvZiB0aGVtIGFyZSB1c2VkIGhlcmU6IFxuICAqIFRyeSB0byB1cGRhdGUgYW4gRW50aXR5IGJ5IFBBVENIaW5nIHRoZSBkYXRhIGludG8gYSBnaXZlbiBfaWRfLiAgXG4gICAgSWYgdGhpcyBmYWlscywgYmVjYXVzZSB0aGUgZW50aXR5IGRvZXMgbm90IGV4aXN0IHlldCwgUE9TVCB0aGUgZGF0YSBpbiBvcmRlciB0byBjcmVhdGUgbmV3IGVudGl0eS4gTmV4dCB0aW1lLCBhIFBBVENIIG9uIHRoYXQgX2lkXyB3aWxsIHN1Y2NlZWQuICBcbiAgICBUaGUgZ3JlYXQgYWR2YW50YWdlIG9mIHRoaXMgc2NoZW1lIGlzLCB0aGF0IGl0IGdpdmVzIHlvdSBhIFwibGFzdCBjaGFuY2VcIiB0byBwZXJmb3JtIHNvbWUgYWN0aW9uIChlLmcuIHlvdSBjYW4gY3JlYXRlIGEgc3Vic2NyaXB0aW9uIG9uIHRoYXQgX2lkXykgaW4gY2FzZSwgYSBuZXcgZW50aXR5IGlzIGludHJvZHVjZWQgdG8gdGhlIHN5c3RlbS5cbiAgKiBBbHdheXMgUE9TVCB5b3VyIGRhdGEgdG8gT3Jpb24gQ29udGV4dCBCcm9rZXIgd2l0aCAnb3B0aW9ucz11cHNlcnQnIGFuZCBsZXQgdGhlIHN5c3RlbSBkZWNpZGUgaWYgYW4gaW5zZXJ0IG9yIHVwZGF0ZSBoYXMgdG8gdGFrZSBwbGFjZS4gVGhpcyBtaWdodCBiZSBzbGlnaHRseSBmYXN0ZXIgdGhhbiB0aGUgZmlyc3QgYXBwcm9hY2gsIGJ1dCB5b3Ugd2lsbCBub3QgYmUgYXdhcmUgb2YgbmV3bHkgY3JlYXRlZCBlbnRpdGllcy4gICAgXG5UaGUgZmlyc3QgYXBwcm9hY2ggaXMgZGVmYXVsdCwgdGhlIGxhdHRlciBpcyBlbmFibGVkIHdoZW4gXy0taW5zZXJ0LWFsd2F5c18gaXMgc2V0LiAgICBcbiogKiotLWRhdGFzdHJlYW0taWQgX2lkXyoqIFxcXG5bU2Vuc29yVGhpbmdzIG9ubHldIFVubGlrZSBPcmlvbiBDb250ZXh0IEJyb2tlciAod2l0aCBhIGZsYXQgbm9uLVNRTC1EYXRhYmFzZSksIEZST1NUIGlzIGJhc2VkIG9uIGFuIFJEQk1TIGJlaGluZCBhIHJlc291cmNlLWJhc2VkIFJFU1QtQXBpIHRoYXQgZG9lc24ndCBsZXQgeW91IHVwZGF0ZSBtdWx0aXBsZSB0YWJsZXMgYXQgb25jZS4gVGhpcyBpcywgd2h5IHlvdSBoYXZlIHRvIGRlYWwgZmlyc3Qgd2l0aCBfVGhpbmdzXywgYmFzZWQgb24gYSBzcGVjaWZpYyBfVGhpbmdfIHlvdSBoYXZlIHRvIGRlYWwgd2l0aCBpdHMgX0RhdGFzdHJlYW1zXyBhbmQgb25jZSB5b3UgZ2F0aGVyZWQgYWxsIHRoZSBpbmZvcm1hdGlvbiwgeW91IGNhbiBwbGFjZSB5b3VyIF9PYnNlcnZhdGlvbnNfIGxpbmtlZCB0byBhIHNwZWNpZmljIF9EYXRhc3RyZWFtXyAoaWRlbnRpZmllZCBieSBpdHMgdW5pcXVlIF9pZF8pLiAgXG4gIEluIG9yZGVyIHRvIGdldCByaWQgb2YgYWxsIHRoZSBwcmVwYXJpbmcgc3R1ZmYsIHlvdSBjYW4gZmlndXJlIG91dCB0aGUgbmVlZGVkIF9EYXRhc3RyZWFtLWlkXyBieSBoYW5kICh1c2luZyBQb3N0bWFuIG9yIGEgZGF0YWJhc2UtY2xpZW50IG9mIHlvdXIgY2hvaWNlKSBhbmQgc2V0IHRoYXQgX2lkXyB3aXRoIF8tLWRhdGFzdHJlYW0taWRfIGRpcmVjdGx5LiBPcGVuIFNtYXJ0IENpdHktU2ltIHdpbGwgTk9UIGxvb2sgZm9yIGEgX1RoaW5nXyB0aGVuIG9yIGZpbmQgdGhlIGNvcnJlY3QgX0RhdGFzdHJlYW1fIChieSB0aGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlKSwgYnV0IHN0b3JlIHRoZSBhdHRyaWJ1dGVzIHZhbHVlcyBpbW1lZGlhdGVseS4gIFxuICBCZSBhd2FyZSB0aGF0IHRob3NlIF9PYnNlcnZhdGlvbnNfIG1heSBjb3JydXB0IChsb2dpY2FsIG9ubHksIG5vdCB0ZWNobmljYWwpIHlvdXIgZGF0YS5cblxuIyMgRGVmaW5lIHRoZSBMb2FkXG5Ob3cgdGhhdCB3ZSBrbm93IGhvdyAoaW4gZ2VuZXJhbCkgYW5kIHdoZXJlIHdlIHdhbnQgdG8gc2VuZCBvdXIgZGF0YSwgaXQncyB0aW1lIHRvIHRhbGsgYWJvdXQgdGhlIGFtb3VudCBvZiBkYXRhLCB3ZSB3aWxsIHNlbmQgYW5kIGhvdyB0aGUgX2lkXyAodGhlIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgZW50aXRpZXMgYW5kIFRoaW5ncyByZXNwZWN0aXZlbHkpIGlzIHVzZWQuXG4qICoqLS1maXJzdC1pZCBfaWRfKiogXFxcblNpbmNlIHRoZSBfaWRfIG1pZ2h0IGJlIGxvb3BlZCwgaXQncyBhIG51bWVyaWMgdmFsdWUgc3RhcnRpbmcgd2l0aCAnMScuIFdpdGggZXZlcnkgbWVzc2FnZSBzZW50LCB0aGlzIGlkIHdpbGwgYmUgaW5jcmVhc2VkIGJ5IG9uZS4gSWYgeW91IHNlbmQgMTAwMCBtZXNzYWdlcywgaWRzIGZyb20gMSB0byAxMDAwIGFyZSB1c2VkLiBfLS1maXJzdC1pZF8gY2FuIGJlIHVzZWQgdG8gc2V0IGEgc3RhcnRpbmcgaWQgZGlmZmVyZW50IGZyb20gJzEnLlxuKiAqKi0tcHJlZml4IF9QUkVGSVhfKiogYW5kICAqKi0tcG9zdGZpeCBfUE9TVEZJWF8qKiBcXFxuVGhlc2Ugc3RyaW5ncyBjYW4gYmUgdXNlZCB0byBsZXQgeW91ciBpZHMgbG9vayBhIGxpdHRsZSBtb3JlIFwicmVhbGlzdGljXCIuIFNvIHRoZSBudW1lcmljIGlkICoqMTAyNyoqIGNhbiBsb29rIGxpa2UgXCJQUkVGSVgqKjEwMjcqKlBPU1RGSVhcIiBvciBcInVybjpuZ3NpLXYyOkFpclF1YWxpdHlPYnNlcnZlZDpSWjpPYnN2KioxMDI3KioudmVyc2lvbi4xLjEyLjAwNFwiIFxuKiAqKi0tc3RhdGljLWlkKiogXFxcbklmIHNldCwgdGhlIGlkIGlzIE5PVCBpbmNyZWFzZWQgd2l0aCBldmVyeSBtZXNzYWdlIHNlbnQsIGJ1dCB3aWxsIGJlICcxJyBmb3IgYWxsIG1lc3NhZ2VzIChvciBfLS1maXJzdC1pZF8sIGlmIHNldCkuXG4qICoqLS1udW0tdGhyZWFkcyBfbnVtXyoqIFxcXG5CeSBkZWZhdWx0LCBhbGwgeW91ciBtZXNzYWdlcyBhcmUgc2VudCBmcm9tIHdpdGhpbiBvbmUgdGhyZWFkLiBUaGlzIGlzIHN1ZmZpY2llbnQgaWYgeW91IG9ubHkgd2FudCB0byB0ZXN0IHlvdXIgc3lzdGVtLiBJZiB5b3UgYXJlIGFib3V0IHRvIHN0cmVzcy10ZXN0IHlvdXIgc2VydmVyLCB0cnkgdG8gaW5jcmVhc2UgdGhlIG51bWJlciBvZiB0aHJlYWRzIHRvIGJlIHVzZWQuXG4qICoqLS1tZXNzYWdlcyBfbnVtXyoqIFxcXG5UaGUgYW1vdW50IG9mIG1lc3NhZ2VzIHNlbnQgKHBlciB0aHJlYWQpLlxuKiAqKi0tdW5saW1pdGVkKiogXFxcbktlZXBzIHNlbmRpbmcgbWVzc2FnZXMgdW50aWwgeW91IHByZXNzICdDdHJsLUMnIG9yIHRpbWUgaXMgdXAuXG4qICoqLS1saW1pdC10aW1lIF9zZWNvbmRzXyoqIFxcXG5XaGVuIHVzZWQgd2l0aCBfLS11bmxpbWl0ZWRfLCBzZXRzIHRoZSB0aW1lb3V0LlxuKiAqKi0tZnJlcXVlbmN5IF9taWxsaXNlY29uZHNfKiogXFxcbkxpbWl0cyB0aGUgc2VuZGluZyBvZiBtZXNzYWdlcyB0byB0aGUgZ2l2ZW4gZnJlcXVlbmN5LlxuXG4jIyBEZWZpbmUgdGhlIFBheWxvYWRcbldlIGFyZSBhbG1vc3QgcmVhZHkgdG8gc2VuZCBvdXIgZmlyc3QgbWVzc2FnZS4uLi5idXQgd2hhdCdzIHRoZSB1c2Ugb2YgZW1wdHkgbWVzc2FnZXMgd2l0aG91dCBhbnkgY29udGVudD8gVGhleSB3aWxsIHByb2JhYmx5IGdldCB0YWdnZWQgXCJSZXR1cm4gdG8gU2VuZGVyXCIuICBcbkFmdGVyIGEgc2hvcnQgZGlzY3Vzc2lvbiBvbiBob3cgdG8gc2V0IHVwIHlvdXIgcGF5bG9hZCwgd2Ugd2lsbCBzZW5kIG91ciBmaXJzdCBtZXNzYWdlIC0gSSBwcm9taXNlIVxuKiAqKi0tdHlwZSBfbmFtZV8qKiBcXFxuW05HU0ktVjIgYW5kIE5HU0ktTEQgb25seV0gVHlwZSB3aWxsIGJlIHN0b3JlZCB3aXRoaW4gdGhlIHBheWxvYWQgYW5kIChpZiBzZXQpIGlzIHRoZSB1bmlxdWUgaWRlbnRpZmllciAodG9nZXRoZXIgd2l0aCB0aGUgaWQpIG9mIGFuIGVudGl0eSB3aXRoaW4gT3Jpb24gQ29udGV4dCBCcm9rZXIuIFRoYXQgbWVhbnM6IFlvdSBjYW4gaGF2ZSB0aGUgc2FtZSBfaWRfIHdpdGggZGlmZmVyZW50IF90eXBlc186ICBcbiAgYGBganNvblxuICB7XG4gICAgXCJpZFwiOlwiMVwiLFxuICAgIFwidHlwZVwiOlwiV2VhdGhlck9ic2VydmVkXCIsXG4gICAgXCJ0ZW1wZXJhdHVyZVwiOiB7XG4gICAgICBcInR5cGVcIjogXCJOdW1iZXJcIixcbiAgICAgIFwidmFsdWVcIjogLTIuM1xuICAgIH0sXG4gICAgXCIuLi5cIlxuICB9ICBcbiAgYGBgXG4gIC4uLmFuZC4uLlxuICBgYGBqc29uXG4gIHtcbiAgICBcImlkXCI6XCIxXCIsXG4gICAgXCJ0eXBlXCI6XCJPcGVuMzExU2VydmljZVR5cGVcIixcbiAgICBcIi4uLlwiXG4gIH0gIFxuICBgYGBcbiAgLi4uY2FuIGV4aXN0IGF0IHRoZSBzYW1lIHRpbWUuICBcbiAgQmUgYXdhcmUgdGhhdCB3aXRoIHRoZSBhYm92ZSBkYXRhLWJhc2lzIGFueSBhdHRlbXB0IHRvIHNlbmQgYSBtZXNzYWdlIHRvIGlkIFwiMVwiIHcvbyBfLS10eXBlXyB3aWxsIGZhaWwgd2l0aCBhbiBcImFtYmlndWl0eSBlcnJvclwiLlxuKiAqKi0tYXR0cmlidXRlLW51bWJlciBfbmFtZSx0eXBlLG51bWJlclssbWF4LW51bWJlcl1fKiogXFxcbkRlZmluZSBhIG51bWVyaWMgKGVpdGhlciBpbnRlZ2VyIG9yIGZsb2F0aW5nLXBvaW50KSBhdHRyaWJ1dGUuIFdpdGggX21heC1udW1iZXJfIHNldCwgdGhlIHJlc3VsdGluZyB2YWx1ZSAoYXQgcnVudGltZSkgd2lsbCBiZSBhIHJhbmRvbSBudW1iZXIgaW4gdGhlIHJhbmdlIFtudW1iZXIgLSBtYXgtbnVtYmVyXSAoZWFjaCBpbmNsdWRpbmcpLiAgXG5BcyB3aXRoIGFsbCBvdGhlciBhdHRyaWJ1dGVzOiBUaGUgX25hbWVfIG9mIHRoZSBhdHRyaWJ1dGUgaXMgc3RvcmVkIHdpdGhpbiB0aGUgcGF5bG9hZCBmb3IgT3Jpb24gQ29udGV4dCBCcm9rZXIgd2hpbGUgaXQgaXMgdXNlZCB0byByZWZlciB0byBhIF9EYXRhc3RyZWFtXyBpbiBGUk9TVC5cbiogKiotLWF0dHJpYnV0ZS1zdHJpbmcgX25hbWUgdmFsdWVfKiogXFxcblNpbXBsZSBlbm91Z2guLi5hIHN0cmluZy1saXRlcmFsIHdpbGwgYmUgc3RvcmVkLlxuKiAqKi0tYXR0cmlidXRlLWRhdGUgX25hbWVfKiogXFxcbltOR1NJLVYyIG9ubHldIFNhbWUgaGVyZTogVGhlIGN1cnJlbnQgRGF0ZS1UaW1lIChsb2NhbCB0aW1lIG9mIHRoZSBtYWNoaW5lLCBvc2NzaW0gaXMgZXhlY3V0ZWQgb24gaW4gJ0lTTyA4NjAxJy1mb3JtYXQpIHdpbGwgYmUgc3RvcmVkLlxuKiAqKi0tYXR0cmlidXRlLWxvY2F0aW9uIF9uYW1lLGxhdCxsb25nWyxtYXgtbGF0LG1heC1sb25nXV8qKiBcXFxuW05HU0ktVjIgb25seV0gU3RvcmVzIGEgbG9jYXRpb24gKGluICdnZW86anNvbictZm9ybWF0KS4gTGlrZSB3aXRoIG51bWJlciwgc2V0dGluZyBtYXgtbGF0IGFuZCBtYXgtbG9uZyB3aWxsIHJlc3VsdCBpbiBhIHJhbmRvbSBsb2NhdGlvbiB3aXRoaW4gdGhlIGdpdmVuIHJhbmdlLlxuKiAqKi0tYXR0cmlidXRlLWJvb2xlYW4gX25hbWUgdmFsdWVfKiogXFxcbltOR1NJLVYyIG9ubHldIE5vdGhpbmcgaW50ZXJlc3RpbmcgaGVyZS5cblxuIyMgVXNlZnVsXG4qICoqLS1kcnktcnVuKiogXFxcbldoZW4gb3Njc2ltIHN0YXJ0cywgaXQgd2lsbCBnaXZlIGEgc2hvcnQgb3ZlcnZpZXcgb2Ygd2hhdCB3aWxsIGhhcHBlbiAoXCJXaWxsIHNlbmQgMTAwMCBtZXNzYWdlcyBpbiAxMCB0aHJlYWRzLi4uKGFuZCBJIG1pZ2h0IGNyZWF0ZSAxMDAwIG5ldyBlbnRpdGllcyEpXCIpLiAgXG5XaXRoIF8tLWRyeS1ydW5fIHNldCwgdGhlIHNjcmlwdCB3aWxsIHN0b3AgcmlnaHQgYmVmb3JlIHRoZSBtZXNzYWdlcyB3aWxsIGJlIHNlbnQuIFRoaXMgZ2l2ZXMgeW91IHRoZSBjaGFuY2UgdG8gZGV0ZXJtaW5lLCBpZiB0aGUgc2hvd24gYWN0aW9uIGlzIHdoYXQgeW91IHJlYWxseSB3YW50ISAgXG5CZXNpZGVzIHRoYXQsIHRoZSBwYXlsb2FkIGlzIHByaW50ZWQgb3V0IGdpdmluZyB5b3UgYW4gb3ZlcnZpZXcgb2YgdGhlIGRhdGEtbW9kZWwgdGhhdCB3aWxsIGJlIGNyZWF0ZWQuICBcbiogKiotLWF0dHJpYnV0ZS1pbmRlbnQgX2luZGVudF8qKiBcXFxuQSBwcmludC1vdXQgb2YgdGhlIHBheWxvYWQgaXMgbmljZSBidXQgc29tZXdoYXQgaGFyZCB0byByZWFkIGlmIHRoZSBqc29uIGlzIHByaW50ZWQgaW4gYSBzaW5nbGUgbGluZS4gRGVmaW5pbmcgaW5kZW50aW9uIG1ha2VzIHlvdXIgcGF5bG9hZCBtb3JlIHJlYWRhYmxlIGJ1dCBpbmNyZWFzZXMgdGhlIHBheWxvYWQgc2xpZ2h0bHkuIERvbid0IGZvcmdldCB0byByZW1vdmUgaW5kZW50aW9uIHdoZW4geW91IGFyZSBzdXJlIGFib3V0IHlvdXIgcGF5bG9hZCBhbmQgcmVhZHkgdG8gcnVuLlxuKiAqKi0tdmVyYm9zZSoqIFxcXG5JbiB2ZXJib3NlLW1vZGUsIG5vdCBvbmx5IGEgc2luZ2xlIGxpbmUgd2l0aCB0aGUgY3VycmVudCBwcm9ncmVzcyBpcyBkaXNwbGF5ZWQsIGJ1dCBFVkVSWSByZXNwb25zZSBpcyBwcmludGVkIG91dCB3aXRoIHRoZSBpZCB1c2VkLCB0aGUgcmV0dXJuIGNvZGUgKGhvcGVmdWxseSBzb21lIDJ4eCksIHRoZSByZXNwb25zZS10aW1lIGluIG1pbGxpc2Vjb25kcyBhbmQgdGhlIGZpcnN0IDEyMCBjaGFyYWN0ZXJzIG9mIHRoZSByZXNwb25zZXMgYm9keSAtIG1vc3RseSBpbnRlcmVzdGluZyBpbiBjYXNlIG9mIGFuIGVycm9yLlxuXG4jIyBJZiBZb3UgV2FudCB0byBSb2xsYmFjayBZb3VyIERhdGEuLi5cbiogKiotLWRlbGV0ZSBfZnJvbSB0b18qKiBcXFxuSWYgeW91IGtlZXAgdHJhY2sgb2YgdGhlIGRhdGEsIHlvdSBjcmVhdGVkIGR1cmluZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSBzY3JpcHQsIGl0IHdpbGwgYmUgYW4gZWFzeSB0YXNrIHRvIGRlbGV0ZSB0aGlzIGRhdGEuICBcblNvLCBpZiB5b3UgcnVuIHRoZSBzY3JpcHQgd2l0aCBgLi4uLW4gMSAtbSAxMDAwIC1mIDEwMDBgIG9uIGFuIGVtcHR5IGRhdGFiYXNlLCB5b3Ugd2lsbCBjcmVhdGUgZW50aXRpZXMgZnJvbSBcIjEwMDBcIiB0byBcIjE5OTlcIi4gIFxuVG8gZGVsZXRlIGV4YWN0bHkgdGhvc2UgZW50aXRpZXMsIHNpbXBseSB1c2UgYC4uLi1kIDEwMDAgMTk5OWAuIElmIHlvdSB1c2VkIHByZS0gb3IgcG9zdGZpeGVzIGZvciBjcmVhdGlvbiBbLWUsIC1vXSB1c2UgdGhlIHNhbWUsIHdoZW4gZGVsZXRpbmcgZGF0YS4gRWFzeS4gXG5cbiMjIFdoYXQgQWJvdXQgTW9yZSBSZWFsaXN0aWMgRGF0YT9cbldpdGggYC4uLiAtLXR5cGUgV2VhdGhlck9ic2VydmVkIC0tYXR0cmlidXRlLW51bWJlciB0ZW1wZXJhdHVyZSxmLDIxLjUgLS11bmxpbWl0ZWQgLS1mcmVxdWVuY3kgNjAwMDBgIHlvdSBjYW4gZGVmaW5lLCB0aGF0IGV2ZXJ5IG1pbnV0ZSBhIG1lc3NhZ2UgaXMgc2VudCB3aXRoIGEgdGVtcGVyYXR1cmUgb2YgMjEuNSDCsEMuICBcbldoaWxlIHRoZSB0aW1lLXNwYW4gaXMgcmVhbGlzdGljIGVub3VnaCwgaGF2aW5nIHRoZSBzYW1lIHRlbXBlcmF0dXJlIGFsbCB0aGUgdGltZSBpcyBib3JpbmcgYW5kIHdhdGNoaW5nIHRoZSBoaXN0b3JpY2FsIGRhdGEgaW4gc29tZSB0aW1lLXNlcmllcy1kYXRhYmFzZSBldmVuIG1vcmUuIENoYW5naW5nIHRvIGAuLi4gLS1hdHRyaWJ1dGUtbnVtYmVyIHRlbXBlcmF0dXJlLGYsMjAuMCwzNS4wYCB3aWxsIGdpdmUgYSBuaWNlciBwaWN0dXJlLCBidXQgaGF2aW5nIHRoZSB0ZW1wZXJhdHVyZSBqdW1waW5nIGJldHdlZW4gMjAuMCBhbmQgMzUuMCDCsEMgaW4gYSBtaW51dGUgaXMgZnVubnksIGJ1dCBub3QgcmVhbGlzdGljLiAgXG5UaGUgbWlzc2luZyBsb2dpYyBjYW4gZWFzaWx5IGJlIGJ1aWxkIHVwIHdpdGggc29tZSBiYXNoLSBvciBjbWQtc2NyaXB0aW5nLiBUaGUgZm9sbG93aW5nIGV4YW1wbGVzIHNob3VsZCBiZSBzZWxmLWV4cGxhaW5pbmc6ICBcblxuTGludXg6XG5gYGBzaGVsbFxuIyEvYmluL2Jhc2hcblxubGltaXQ9MTBcbnRlbXBlcmF0dXJlPTIwXG5pPTE7IHdoaWxlIFsgJGkgLWxlICRsaW1pdCBdOyBkb1xuICBlY2hvIFwiVGhlIGN1cnJlbnQgdGVtcGVyYXR1cmUgaXMgXCIkdGVtcGVyYXR1cmVcbiAgb3Njc2ltIC1zIHNlcnZlci5jb20gLXkgV2VhdGhlck9ic2VydmVkIC1hZCBkYXRlT2JzZXJ2ZWQgLWFuIHRlbXBlcmF0dXJlLGYsJHRlbXBlcmF0dXJlXG4gIHRlbXBlcmF0dXJlPSQoKHRlbXBlcmF0dXJlKzEpKVxuaT0kKChpKzEpKVxuc2xlZXAgNjA7XG5kb25lXG5gYGBcbldpbmRvd3M6XG5gYGBjb21tYW5kbGluZVxuQGVjaG8gb2ZmXG5TRVQgL0EgXCJpID0gMVwiXG5TRVQgL0EgXCJsaW1pdCA9IDEwXCJcblNFVCAvQSBcInRlbXBlcmF0dXJlID0gMjBcIlxuOndoaWxlXG5pZiAlaSUgbGVxICVsaW1pdCUgKFxuICAgZWNobyBUaGUgY3VycmVudCB0ZW1wZXJhdHVyZSBpcyAldGVtcGVyYXR1cmUlXG4gICBvc2NzaW0gLXMgc2VydmVyLmNvbSAteSBXZWF0aGVyT2JzZXJ2ZWQgLWFkIGRhdGVPYnNlcnZlZCAtYW4gdGVtcGVyYXR1cmUsZiwldGVtcGVyYXR1cmUlXG4gICBTRVQgL0EgXCJ0ZW1wZXJhdHVyZSA9IHRlbXBlcmF0dXJlICsgMVwiXG4gICBTRVQgL0EgXCJpID0gaSArIDFcIlxuICAgdGltZW91dCAvVCA2MCAvbm9icmVhayA+IG51bFxuICAgZ290byA6d2hpbGVcbilcbmBgYFxuSXQncyB1cCB0byB5b3VyIGZhbnRhc3kgdG8gY3JlYXRlIGEgc2NyaXB0IHRoYXQgaW5jcmVhc2VzIHRoZSB0ZW1wZXJhdHVyZSBzbGlnaHRseSBvdmVyIHRoZSBkYXkgYW5kIGNvb2xzIGRvd24gYnkgbmlnaHQgb3IgZXZlbiBoYXZlIGhpZ2hlciBhaXIgcG9sdXRpb24gZnJvbSBNb25kYXkgdG8gRnJpZGF5IGFuZCBhIGNsZWFuIHdlZWtlbmQuXG5cbkluIHRoZSBIb3dUb3MtZm9sZGVyIHlvdSdsbCBmaW5kIHNvbWUgaW50ZXJlc3RpbmcgdXNlIGNhc2VzIG9uOlxuKiBbVXNpbmcgbWluLmlvLXNlcnZlciB0byBzdG9yZSBpbWFnZXMgYW5kIHNlbmQgdGhlIFVSSS5dKC4vSG93VG9zL1VzZSUyMG1pbi5pby1TZXJ2ZXIubWQpXG4qIFtQYXJzaW5nIGEgZ3B4LWZpbGUgYW5kIHNlbmQgdGhlIHBvc2l0aW9ucyBpbiBhIHRpbWVkIG1hbm5lci5dKC4vSG93VG9zL1NlbmQlMjBSb3V0ZSUyMChncHgpLm1kKVxuXG5cbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL0hZUEVSVEVHUklUWS1BRy9PcGVuU2ltIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIk1JVCBMaWNlbnNlIiw=
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIm9zY3NpbSIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvb3Njc2ltLyIs
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvb3Njc2ltLyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS9IWVBFUlRFR1JJVFktQUcvT3BlblNpbS9wcm9qZWN0cy8xIiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9IWVBFUlRFR1JJVFktQUcvT3BlblNpbSI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvb3Njc2ltLzEuMS4yLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgInJlcXVlc3RzICg+PTIuMjIuMCkiLA==
ICAgICAgInBhaG8tbXF0dCAoPj0xLjUuMSki
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjYiLA==
ICAgICJzdW1tYXJ5IjogIk9wZW4gU21hcnQgQ2l0eS1TaW0gaXMgYSBsaWdodHdlaWdodCB0b29sIHRvIHNlbmQgdGVzdCBkYXRhIHRvIGFuIE9yaW9uIENvbnRleHQgQnJva2VyIG9yIEZST1NULVNlcnZlciByZXNwZWN0aXZlbHkuIiw=
ICAgICJ2ZXJzaW9uIjogIjEuMS4yIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxMDgyMDYxNSw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjEuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiMzBjMGY4YWU2YTljNWQ3MzkyOGY2NDE4OWQ3MzkxMWU0MDU4YzM3MDAyMTdlYmZjYjJkZjQxYTU4NDhiMWQwIiw=
ICAgICAgICAgICJtZDUiOiAiODRlZDU3MzVhNGQ3ODZhMDUyYjQyNmM4ZDNhNmIwZGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDlkZDNlMmFhYzhiNTVhODk3NDZhNWJhMDFlYTFiY2YzYzNjZTZiYzdhYjFmMTZlYzI0NzE4YzBlMDQwNzEwOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAib3Njc2ltLTEuMS4xLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4NGVkNTczNWE0ZDc4NmEwNTJiNDI2YzhkM2E2YjBkZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDQzNjgwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wNy0wM1QxNjowMzoxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wNy0wM1QxNjowMzoxOS44MjY0NjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iMy8wYy8wZjhhZTZhOWM1ZDczOTI4ZjY0MTg5ZDczOTExZTQwNThjMzcwMDIxN2ViZmNiMmRmNDFhNTg0OGIxZDAvb3Njc2ltLTEuMS4xLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjMzhiNjNjNDdjNTVkODhkZTJiMWYxYmE5ZDE3M2U3NWZhY2Y5MjBlNDk2ZTE5NGQwYzg4ZDcyMGVlNzkyZjA0Iiw=
ICAgICAgICAgICJtZDUiOiAiYzViYTljYWE1MGJhYTAyZTBkZmYyMDQ5ODA2OGQ1N2IiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzc0NzcwOWExMzYwMDk5NjA3NzE4NWIxNzJmZGJjNGVhMzI1YzJjOGJlNzU4YjkxYTYwNmYzN2FhOGFlZmFjNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAib3Njc2ltLTEuMS4xLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjNWJhOWNhYTUwYmFhMDJlMGRmZjIwNDk4MDY4ZDU3YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU0NDM2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wNy0wM1QxNjowMzoyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wNy0wM1QxNjowMzoyMy4xMTUxMjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jMy84Yi82M2M0N2M1NWQ4OGRlMmIxZjFiYTlkMTczZTc1ZmFjZjkyMGU0OTZlMTk0ZDBjODhkNzIwZWU3OTJmMDQvb3Njc2ltLTEuMS4xLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5NmE4NjY2MDBiMzc2ZWRjZDljMGI1YjdlNjM3NjBlYjg3ZGNjMzQ0NWRhNmE3M2ZjMzhiNTQyNjI2MTAyODIwIiw=
ICAgICAgICAgICJtZDUiOiAiODcxM2Q5MDFlYjE3NjhlZDcxYjNiNWJlZjJiMzJlOTAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTI0MGFiZmYxYTlmZGVkMzA2NDkzZjMzM2VjM2M2ZTdmMGJlYTM2NDI1YjE5MDZjNDg4MWRmMGFkNjk5MGNkYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAib3Njc2ltLTEuMS4yLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4NzEzZDkwMWViMTc2OGVkNzFiM2I1YmVmMmIzMmU5MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDQzNjc3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wNy0wNFQxODowMDoxMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wNy0wNFQxODowMDoxMS45NjA3MDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Ni9hOC82NjYwMGIzNzZlZGNkOWMwYjViN2U2Mzc2MGViODdkY2MzNDQ1ZGE2YTczZmMzOGI1NDI2MjYxMDI4MjAvb3Njc2ltLTEuMS4yLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOTZhODY2NjAwYjM3NmVkY2Q5YzBiNWI3ZTYzNzYwZWI4N2RjYzM0NDVkYTZhNzNmYzM4YjU0MjYyNjEwMjgyMCIs
ICAgICAgICAibWQ1IjogIjg3MTNkOTAxZWIxNzY4ZWQ3MWIzYjViZWYyYjMyZTkwIiw=
ICAgICAgICAic2hhMjU2IjogImEyNDBhYmZmMWE5ZmRlZDMwNjQ5M2YzMzNlYzNjNmU3ZjBiZWEzNjQyNWIxOTA2YzQ4ODFkZjBhZDY5OTBjZGIi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIm9zY3NpbS0xLjEuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiODcxM2Q5MDFlYjE3NjhlZDcxYjNiNWJlZjJiMzJlOTAiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiA0MzY3Nyw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDctMDRUMTg6MDA6MTEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDctMDRUMTg6MDA6MTEuOTYwNzAzWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOTYvYTgvNjY2MDBiMzc2ZWRjZDljMGI1YjdlNjM3NjBlYjg3ZGNjMzQ0NWRhNmE3M2ZjMzhiNTQyNjI2MTAyODIwL29zY3NpbS0xLjEuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
