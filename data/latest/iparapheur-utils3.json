ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTGlicmljaWVsIFNDT1AiLA==
ICAgICJhdXRob3JfZW1haWwiOiAiY29udGFjdEBsaWJyaWNpZWwuZnIiLA==
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFtdLA==
ICAgICJkZXNjcmlwdGlvbiI6ICJpLVBhcmFwaGV1ciBVdGlsc1xuPT09PT09PT09PT09PT09PT1cblxuWyFbUHlQaV0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9weXBpL3YvaXBhcmFwaGV1ci11dGlscy5zdmcpXShodHRwczovL3B5cGkub3JnL3Byb2plY3QvaXBhcmFwaGV1ci11dGlscylcblxuXG4jIEludHJvZHVjdGlvblxuXG5DJ2VzdCBwcmluY2lwYWxlbWVudCB1bmUgbGlicmFpcmllIMOpY3JpdGUgZW4gUHl0aG9uIHBlcm1ldHRhbnQgbGEgY29tbXVuaWNhdGlvbiBhdmVjIGxlIFtpLVBhcmFwaGV1cl0oaHR0cHM6Ly93d3cubGlicmljaWVsLmZyL2lwYXJhcGhldXIvKSBlbiB2ZXJzaW9uIDQuMissIGF1IHRyYXZlcnMgZGUgbCdBUEkgUkVTVCBvdSB2aWEgd2Vic2VydmljZSBTT0FQLlxuXG5FbGxlIG9mZnJlIGRlcyBjb21tYW5kZXMgYWNjZXNzaWJsZXMgZGVwdWlzIHVuIHNoZWxsIHN0YW5kYXJkLCBwb3VyIGZhY2lsaXRlciBjZXJ0YWluZXMgb3DDqXJhdGlvbnMgZCdleHBsb2l0YXRpb24uXG5cbiMgSW5zdGFsbGF0aW9uXG5cblN1ciB1bmUgZGlzdHJpYnV0aW9uIFVidW50dSAxOC4wNCBMVFMgOlxuXG4qIHVuZSBpbnN0YW5jZSBpLVBhcmFwaGV1ciBhY2Nlc3NpYmxlIGVuIHY0LjQuMCBvdSBwbHVzXG4qIHVuIGVudmlyb25uZW1lbnQgUHl0aG9uIGZvbmN0aW9ubmVsICFcbiogYWpvdXQgZGUgbCdvdXRpbCBgIHBpcCBgIGRlcHVpcyB1biB0ZXJtaW5hbCBCQVNIIDpcblxuYGBgYmFzaFxuc3VkbyBiYXNoXG5jdXJsIGh0dHBzOi8vYm9vdHN0cmFwLnB5cGEuaW8vZ2V0LXBpcC5weSB8IHB5dGhvblxuYGBgXG5cbiogaW5zdGFsbGF0aW9uIGR1IHBhcXVldCBweXRob24gYGlwYXJhcGhldXItdXRpbHNgLCBkZXB1aXMgdW4gdGVybWluYWwgQkFTSCA6XG5cbmBgYGJhc2hcbnN1ZG8gcGlwIGluc3RhbGwgaXBhcmFwaGV1ci11dGlsc1xuYGBgXG5cbiMjIFByb2Jsw6htZXMgY29ubnVzIGV0IHNvbHV0aW9uc1xuXG4jIyMgcHl0aG9uMiBldCBweXRob24zIGNvZXhpc3RlbnQgc3VyIGxhIG1hY2hpbmVcblxuTGFuY2VyIGxlcyBjb21tYW5kZXMgcG91ciBweXRob24yLCBzcMOpY2lmaXF1ZW1lbnQgKHBhcnRhbnQgZHUgcHJpbmNpcGUgcXVlIGBweXRob24yYCBwb2ludGUgc3VyIGwnZXjDqWN1dGFibGUgcHl0aG9uIDIpXG5cbmBgYGJhc2hcbmN1cmwgaHR0cHM6Ly9ib290c3RyYXAucHlwYS5pby9nZXQtcGlwLnB5IHwgcHl0aG9uMlxuc3VkbyBweXRob24yIC1tIHBpcCBpbnN0YWxsIGlwYXJhcGhldXItdXRpbHNcbmBgYFxuXG4jIyMgRXJyZXVyIHVybGxpYjMgOiBcIk5vIG1vZHVsZSBuYW1lZCBvcmRlcmVkX2RpY3RcIlxuXG5VbmUgZMOpcGVuZGFuY2UgZGUgaXBhcmFwaGV1ci11dGlscyBlc3QgaW5zdGFsbMOpZSBkYW5zIHVuZSBtYXV2YWlzZSB2ZXJzaW9uLCBub24gc3VwcG9ydMOpZSAoZWcgdXJsbGliMyB2IDEuMjQpLlxuSWwgZmF1dCBsYSBkw6lzaW5zdGFsbGVyIGV0IGxhIHLDqWluc3RhbGxlciBkYW5zIGxhIGJvbm5lIHZlcnNpb24gKHYgMS4yMykuXG5cbmBgYGJhc2hcbnN1ZG8gcGlwIHVuaW5zdGFsbCB1cmxsaWIzXG5zdWRvIHBpcCBpbnN0YWxsIHVybGxpYjM9PTEuMjNcbmBgYFxuXG4jIyBDYXMgZCdlbnZpcm9ubmVtZW50IGF2ZWMgTWl0TVxuXG5DZXJ0YWlucyBlbnZpcm9ubmVtZW50cyByw6lzZWF1IGJsb3F1ZW50IGwnYWNjw6hzIMOgIHB5cGkub3JnLCBhdmVjIHVuIG1lc3NhZ2UgXCJTU0wgRXJyb3I6IENlcnRpZmljYXRlX1ZlcmlmeV9GYWlsZWRcIi5cblxuPiBDb3VsZCBub3QgZmV0Y2ggVVJMIGh0dHBzOi8vcHlwaS5vcmcv4oCmLzogVGhlcmUgd2FzIGEgcHJvYmxlbSBjb25maXJtaW5nIHRoZSBzc2wgY2VydGlmaWNhdGU6IEhUVFBTQ29ubmVjdGlvblBvb2woaG9zdD3igJlweXBpLm9yZ+KAmSwgcG9ydD00NDMpOiBNYXggcmV0cmllcyBleGNlZWRlZCB3aXRoIHVybDogL+KApi8gKENhdXNlZCBieSBTU0xFcnJvcihTU0xDZXJ0VmVyaWZpY2F0aW9uRXJyb3IoMSwg4oCYWyBTU0w6IENFUlRJRklDQVRFX1ZFUklGWV9GQUlMRURdIGNlcnRpZmljYXRlIHZlcmlmeSBmYWlsZWQ6IOKAplxuXG5JbCBlc3QgcG9zc2libGUgZGUgcGFzc2VyIG91dHJlLCBhdSBwcml4IGQndW5lIHLDqWR1Y3Rpb24gZGUgbGEgY29uZmlhbmNlLCBhdmVjIGwnYXJndW1lbnQgYC0tdHJ1c3RlZC1ob3N0YFxuXG5gYGBiYXNoXG5zdWRvIHBpcCBpbnN0YWxsIC0tdHJ1c3RlZC1ob3N0IHB5cGkub3JnICBpcGFyYXBoZXVyLXV0aWxzXG5gYGBcblxuXG4jIyBTdXBwb3J0IENlbnRPUyAvIFJIRUwgOlxuXG4qIFZlcnNpb24gNiA6IENldHRlIHZlcnNpb24gbidlc3QgcGx1cyBzdXBwb3J0w6llLCBlbiBjYXVzZSB1bmUgdmVyc2lvbiBkZSBweXRob24gdHJvcCBhbmNpZW5uZSAoMi42KVxuKiBWZXJzaW9uIDcgOiBDZXR0ZSB2ZXJzaW9uIHJlcXVpZXJ0IGwnaW5zdGFsbGF0aW9uIGRlIHBhcXVldHMgc3VwcGzDqW1lbnRhaXJlcyA6ICBcbiAgYHl1bSBpbnN0YWxsIGxpYmZmaS1kZXZlbCBnY2Mgb3BlbnNzbC1kZXZlbGBcblxuIyBVc2FnZVxuXG5DZXMgY29tbWFuZGVzIHNvbnQgYWN0dWVsbGVtZW50IGRpc3BvbmlibGVzIDpcblxuLSBbYHBoLWluaXRgXSgjcGgtaW5pdClcbi0gW2BwaC1jaGVja2BdKCNwaC1jaGVjaylcbi0gW2BwaC1lY2hvYF0oI3BoLWVjaG8pXG4tIFtgcGgtcmVjdXBBcmNoaXZlc2BdKCNwaC1yZWN1cGFyY2hpdmVzKVxuLSBbYHBoLWV4cG9ydGBdKCNwaC1leHBvcnQpXG4tIFtgcGgtaW1wb3J0YF0oI3BoLWltcG9ydClcbi0gW2BwaC1yZW5hbWVgXSgjcGgtcmVuYW1lKVxuLSBbYHBoLXJlbW92ZWxkYXBgXSgjcGgtcmVtb3ZlbGRhcClcbi0gW2BwaC1wdXNoZG9jYF0oI3BoLXB1c2hkb2MpXG4tIFtgcGgtaXBjbGVhbmBdKCNwaC1pcGNsZWFuKVxuLSBbYHBoLWxkYXBzZWFyY2hgXSgjcGgtbGRhcHNlYXJjaClcbi0gW2BwaC1jb3VudF9maWxlc2BdKCNwaC1jb3VudF9maWxlcylcbi0gW2BwaC1yZXNldF9hZG1pbl9wYXNzd29yZGBdKCNwaC1yZXNldF9hZG1pbl9wYXNzd29yZClcbi0gW2BwaC1wYXRjaGBdKCNwaC1wYXRjaClcbi0gW2BwaC1yZWN1cGZ1bGxgXSgjcGgtcmVjdXBmdWxsKVxuLSBbYHBoLW9ycGhhbmBdKCNwaC1vcnBoYW4pXG5cbj4gUmVtYXJxdWVzIDogRWxsZXMgc29udCBjb27Dp3VlcyBwb3VyIMOqdHJlIGV4w6ljdXTDqWVzIGVuIGVudmlyb25uZW1lbnQgYmFzaCBzdGFuZGFyZDogbGlnbmUgZGUgY29tbWFuZGUsIG91IHNjcmlwdCBCQVNILiAgXG5BdWN1bmUgcXVhbGlmaWNhdGlvbiDDoCBjZSBzdGFkZSBwb3VyIGwndXNhZ2UgZGUgY2VzIGNvbW1hbmRlcyBkYW5zIHVuIGludGVycHLDqXRldXIgUHl0aG9uLlxuXG4jIyBgcGgtaW5pdGBcblxuQ2V0dGUgY29tbWFuZGUgcGVybWV0IGxhIGfDqW7DqXJhdGlvbiBkJ3VuIGZpY2hpZXIgZGUgY29uZmlndXJhdGlvbiBcInBhciBkw6lmYXV0XCIsIHF1J2lsIGZhdXQgYmllbiBzw7tyIGFkYXB0ZXIgYXUgc2VydmV1ci5cblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLWluaXQgWy1oXSBbLXAgUF0gWy1jIHtyZWN1cGFyY2hpdmVzLGV4cG9ydCxpbXBvcnR9XVxuXG5Hw6luw6hyZSB1biBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gcGFyIGTDqWZhdXQgZGFucyBsZSByw6lwZXJ0b2lyZSBjb3VyYW50XG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgICAgICAgICAgIEFmZmljaGUgY2UgbWVzc2FnZSBldCBxdWl0dGVcbiAgLXAgUCAgICAgICAgICAgICAgICAgIENoZW1pbiBkdSBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb25cbiAgLWMge3JlY3VwYXJjaGl2ZXMsZXhwb3J0LGltcG9ydH1cbiAgICAgICAgICAgICAgICAgICAgICAgIENvbW1hbmRlIHBvdXIgbGFxdWVsbGUgZ8OpbsOpcmVyIGxlIGZpY2hpZXIgZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYXRpb25cbmBgYFxuXG5MZSBsYW5jZW1lbnQgZGUgbGEgY29tbWFuZGUgZ8OpbsOocmUgdW4gZmljaGllciBgaXBhcmFwaGV1ci11dGlscy5jZmdgLCBsdSBwYXIgZMOpZmF1dCBsb3JzIGRlIGwnYXBwZWwgZGVzIGF1dHJlcyBmb25jdGlvbnNcblxuIyMgYHBoLWNoZWNrYFxuXG5MYW5jZSBsZSBzY3JpcHQgZGUgY2hlY2sgZCdpbnN0YWxsYXRpb24uIFBhcyBkZSBwcsOpLXJlcXVpcyBwYXJ0aWN1bGllci5cblxuIyMgYHBoLWVjaG9gXG5cbkxhbmNlIGxhIGZvbmN0aW9uIGBlY2hvYCB2ZXJzIGxlIGktUGFyYXBoZXVyIGTDqXNpZ27DqSBkYW5zIGxlIGZpY2hpZXIgZGUgY29uZmlndXJhdGlvbi5cblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxucGgtZWNobyAtaFxuLS0tXG51c2FnZTogcGgtZWNobyBbLWhdIFstcyBTXSBbLWMgQ10gWy11IFVdIFstcCBQXVxuXG5MYW5jZSB1biBlY2hvIHZpYSB3ZWJzZXJ2aWNlIHN1ciB1biBpUGFyYXBoZXVyXG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuICAtcyBTICAgICAgICBVUkwgZHUgc2VydmV1ciBpUGFyYXBoZXVyXG4gIC1jIEMgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtdSBVICAgICAgICBVdGlsaXNhdGV1clxuICAtcCBQICAgICAgICBNb3QgZGUgcGFzc2VcbmBgYFxuXG4jIyBgcGgtcmVjdXBBcmNoaXZlc2BcblxuTGFuY2UgbGEgZm9uY3Rpb24gZGUgcsOpY3Vww6lyYXRpb24gb3UvZXQgZGUgcHVyZ2UgZGVzIGFyY2hpdmVzLlxuSWwgZXN0IHZpdmVtZW50IGNvbnNlaWxsw6kgZCd1dGlsaXNlciBsYSBjb21tYW5kZSBgcGgtaW5pdCAtYyByZWN1cGFyY2hpdmVzYCBhZmluIGRlIGfDqW7DqXJlciB1biBzcXVlbGV0dGUgZGUgZmljaGllciBkZSBjb25maWd1cmF0aW9uIGNvbXBsZXQuXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5gYGBcbnBoLXJlY3VwQXJjaGl2ZXMgLWhcbi0tLVxudXNhZ2U6IHBoLXJlY3VwQXJjaGl2ZXMgWy1oXSBbLXMgU10gWy1jIENdIFstdSBVXSBbLXAgUF0gWy1mIEZdIFstcHMgUFNdXG4gICAgICAgICAgICAgICAgICAgICAgICBbLXIge3RydWUsZmFsc2V9XSBbLWkge3RydWUsZmFsc2V9XSBbLXB1IHt0cnVlLGZhbHNlfV1cbiAgICAgICAgICAgICAgICAgICAgICAgIFstZCB7dHJ1ZSxmYWxzZX1dIFstdCBUXSBbLXN0IFNUXSBbLXcgV11cblxuTGFuY2UgdW5lIHLDqWN1cMOpcmF0aW9uIC8gcHVyZ2UgZGVzIGFyY2hpdmVzXG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgICAgICAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuICAtcyBTICAgICAgICAgICAgICBVUkwgZHUgc2VydmV1ciBpUGFyYXBoZXVyXG4gIC1jIEMgICAgICAgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtdSBVICAgICAgICAgICAgICBVdGlsaXNhdGV1clxuICAtcCBQICAgICAgICAgICAgICBNb3QgZGUgcGFzc2VcbiAgLWYgRiAgICAgICAgICAgICAgUsOpcGVydG9pcmUgZGUgZGVzdGluYXRpb25cbiAgLXBzIFBTICAgICAgICAgICAgVGFpbGxlIGRlcyBwYWdlcyDDoCByw6ljdXDDqXJlclxuICAtciB7dHJ1ZSxmYWxzZX0gICBDaGVtaW5zIHLDqWR1aXMgZGVzIHTDqWzDqWNoYXJnZW1lbnRzXG4gIC1pIHt0cnVlLGZhbHNlfSAgIEFqb3V0IGlkZW50aWZpYW50IGFsZnJlc2NvIGRhbnMgbGUgY2hlbWluIGNvbXBsZXQgKHRydWUgcGFyIGRlZmF1dClcbiAgLXB1IHt0cnVlLGZhbHNlfSAgQWN0aXZlIGxhIHB1cmdlIGxlcyBkb25uw6llc1xuICAtZCB7dHJ1ZSxmYWxzZX0gICBUw6lsw6ljaGFyZ2UgbGVzIGRvbm7DqWVzXG4gIC10IFQgICAgICAgICAgICAgIEZpbHRyZSBzdXIgdHlwZVxuICAtc3QgU1QgICAgICAgICAgICBGaWx0cmUgc3VyIHNvdXMtdHlwZVxuICAtdyBXICAgICAgICAgICAgICBEw6lsYWkgZGUgY29uc2VydmF0aW9uIGRlcyBkb25uw6llc1xuYGBgXG5cbiMjIGBwaC1leHBvcnRgXG5cbkxhbmNlIGxhIGZvbmN0aW9uIGQnZXhwb3JhdGlvbiBkZSBsYSBjb25maWd1cmF0aW9uIGR1IHBhcmFwaGV1ciB2ZXJzIHVuIGRvc3NpZXIuXG5JbCBlc3Qgdml2ZW1lbnQgY29uc2VpbGzDqSBkJ3V0aWxpc2VyIGxhIGNvbW1hbmRlIGBwaC1pbml0IC1jIGV4cG9ydGAgYWZpbiBkZSBnw6luw6lyZXIgdW4gc3F1ZWxldHRlIGRlIGZpY2hpZXIgZGUgY29uZmlndXJhdGlvbiBjb21wbGV0LlxuTGEgbGlzdGUgZGVzIMOpbMOpbWVudHMgw6AgZXhwb3J0ZXIgcGV1dCDDqnRyZSBtb2RpZmnDqWUgZGFucyBjZSBmaWNoaWVyLlxuXG4qKkFUVEVOVElPTioqIDogU2V1bGUgbGEgKipjb25maWd1cmF0aW9uKiogZHUgcGFyYXBoZXVyIGVzdCBleHBvcnTDqWUuIENvbXByZW5kcmUgcXUnYXVjdW4gZG9zc2llciwgYXJjaGl2ZSwgc3RhdGlzdGlxdWUgb3UgaGlzdG9yaXF1ZSBuJ2VzdCBjb25zZXJ2w6kuXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5gYGBcbnVzYWdlOiBwaC1leHBvcnQgWy1oXSBbLXMgU10gWy1jIENdIFstdSBVXSBbLXAgUF0gWy1pIEldIFstZGggREhdIFstZHAgRFBdXG4gICAgICAgICAgICAgICAgIFstZHUgRFVdIFstZHB3IERQV10gWy1kZCBERF0gWy1vdSBPVV0gWy1vZyBPR10gWy1vYiBPQl0gWy1vYyBPQ10gWy1vdCBPVF0gWy1vbSBPTV0gWy1vcSBPUV0gWy1vYSBPQV1cblxuRXhwb3J0ZSBsYSBjb25maWd1cmF0aW9uIGR1IHBhcmFwaGV1ciBjaWJsw6kgdmVycyB1biBkb3NzaWVyXG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuICAtcyBTICAgICAgICBVUkwgZHUgc2VydmV1ciBpUGFyYXBoZXVyXG4gIC1jIEMgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtdSBVICAgICAgICBVdGlsaXNhdGV1ciBhZG1pbmlzdHJhdGV1clxuICAtcCBQICAgICAgICBNb3QgZGUgcGFzc2VcbiAgLWkgSSAgICAgICAgUsOpcGVydG9pcmUgZGUgZGVzdGluYXRpb25cbiAgLWRoIERIICAgICAgSVAgZHUgc2VydmV1ciBteXNxbFxuICAtZHAgRFAgICAgICBQb3J0IGR1IHNlcnZldXIgbXlzcWxcbiAgLWR1IERVICAgICAgVXRpbGlzYXRldXIgYWxmcmVzY28gZGUgbXlzcWxcbiAgLWRwdyBEUFcgICAgTW90IGRlIHBhc3NlIHV0aWxpc2F0ZXVyIGFsZnJlc2NvIGRlIG15c3FsXG4gIC1kZCBERCAgICAgIE5vbSBkZSBsYSBiYXNlIG15c3FsXG4gIC1vdSB7dHJ1ZSxmYWxzZX0gICAgICBCb29sZWFuIGltcG9ydGUgbGVzIHV0aWxpc2F0ZXVyc1xuICAtb2cge3RydWUsZmFsc2V9ICAgICAgQm9vbGVhbiBpbXBvcnRlIGxlcyBncm91cGVzXG4gIC1vYiB7dHJ1ZSxmYWxzZX0gICAgICBCb29sZWFuIGltcG9ydGUgbGVzIGJ1cmVhdXhcbiAgLW9jIHt0cnVlLGZhbHNlfSAgICAgIEJvb2xlYW4gaW1wb3J0ZSBsZXMgY2lyY3VpdHNcbiAgLW90IHt0cnVlLGZhbHNlfSAgICAgIEJvb2xlYW4gaW1wb3J0ZSBsZXMgdHlwZXMgZXQgc291cy10eXBlc1xuICAtb20ge3RydWUsZmFsc2V9ICAgICAgQm9vbGVhbiBpbXBvcnRlIGxlcyBtZXRhZGF0YXNcbiAgLW9xIHt0cnVlLGZhbHNlfSAgICAgIEJvb2xlYW4gaW1wb3J0ZSBsZXMgY2FscXVlc1xuICAtb2Ege3RydWUsZmFsc2V9ICAgICAgQm9vbGVhbiBpbXBvcnRlIGxlcyBhZHZhbmNlZFxuXG5gYGBcblxuIyMgYHBoLWltcG9ydGBcblxuTGFuY2UgbGEgZm9uY3Rpb24gZCdpbXBvcnRhdGlvbiBkZSBsYSBjb25maWd1cmF0aW9uIGR1IHBhcmFwaGV1ciDDoCBwYXJ0aXIgZCd1biBkb3NzaWVyLlxuSWwgZXN0IHZpdmVtZW50IGNvbnNlaWxsw6kgZCd1dGlsaXNlciBsYSBjb21tYW5kZSBgcGgtaW5pdCAtYyBpbXBvcnRgIGFmaW4gZGUgZ8OpbsOpcmVyIHVuIHNxdWVsZXR0ZSBkZSBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gY29tcGxldC5cblxuKipBVFRFTlRJT04qKiA6IFNldWxlIGxhICoqY29uZmlndXJhdGlvbioqIGR1IHBhcmFwaGV1ciBlc3QgaW1wb3J0w6llLiBDb21wcmVuZHJlIHF1J2F1Y3VuIGRvc3NpZXIsIGFyY2hpdmUsIHN0YXRpc3RpcXVlIG91IGhpc3RvcmlxdWUgbidlc3QgY29uc2VydsOpLlxuXG5FeGVtcGxlIGQndXRpbGlzYXRpb24gOlxuYGBgXG51c2FnZTogcGgtaW1wb3J0IFstaF0gWy1zIFNdIFstYyBDXSBbLXUgVV0gWy1wIFBdIFstaSBJXSBbLWRoIERIXSBbLWRwIERQXVxuICAgICAgICAgICAgICAgICBbLWR1IERVXSBbLWRwdyBEUFddIFstZGQgRERdXG5cbkltcG9ydGUgbGEgY29uZmlndXJhdGlvbiBjaWJsw6llIGRhbnMgdW4gcGFyYXBoZXVyIHZpZXJnZVxuXG5Bcmd1bWVudHM6XG4gIC1oLCAtLWhlbHAgIEFmZmljaGUgY2UgbWVzc2FnZSBldCBxdWl0dGVcbiAgLXMgUyAgICAgICAgVVJMIGR1IHNlcnZldXIgaVBhcmFwaGV1clxuICAtYyBDICAgICAgICBGaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb25cbiAgLXUgVSAgICAgICAgVXRpbGlzYXRldXIgYWRtaW5pc3RyYXRldXJcbiAgLXAgUCAgICAgICAgTW90IGRlIHBhc3NlXG4gIC1pIEkgICAgICAgIFLDqXBlcnRvaXJlIMOgIGltcG9ydGVyXG4gIC1kaCBESCAgICAgIElQIGR1IHNlcnZldXIgbXlzcWxcbiAgLWRwIERQICAgICAgUG9ydCBkdSBzZXJ2ZXVyIG15c3FsXG4gIC1kdSBEVSAgICAgIFV0aWxpc2F0ZXVyIGFsZnJlc2NvIGRlIG15c3FsXG4gIC1kcHcgRFBXICAgIE1vdCBkZSBwYXNzZSB1dGlsaXNhdGV1ciBhbGZyZXNjbyBkZSBteXNxbFxuICAtZGQgREQgICAgICBOb20gZGUgbGEgYmFzZSBteXNxbFxuYGBgXG5cbiMjIGBwaC1yZW5hbWVgXG5cbkNldHRlIGNvbW1hbmRlIHBlcm1ldCBkZSBjaGFuZ2VyIGwnVVJMIGQnYWNjw6hzIGF1IGktUGFyYXBoZXVyXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5gYGBcbnVzYWdlOiBwaC1yZW5hbWUgWy1oXSAtbiBOXG5cbkNoYW5nZSBsJ1VSTCBkJ2FjY8OocyBkdSBpLVBhcmFwaGV1clxuXG5Bcmd1bWVudHM6XG4gIC1oLCAtLWhlbHAgIEFmZmljaGUgY2UgbWVzc2FnZSBldCBxdWl0dGVcbiAgLW4gTiAgICAgICAgTm91dmVsbGUgVVJMIGR1IHNlcnZldXIgaVBhcmFwaGV1clxuXG5gYGBcblxuTGUgbGFuY2VtZW50IGRlIGxhIGNvbW1hbmRlIG1vZGlmaWUgbCdVUkwgZCdhY2PDqHMgYXUgaS1QYXJhcGhldXIgbWFpcyBuZSBjaGFuZ2UgcGFzIGxhIGNvbmZpZ3VyYXRpb24gZHUgY2VydGlmaWNhdCBzZXJ2ZXVyLlxuXG5JbCBlc3QgaW1wb3J0YW50IGRlIHN1aXZyZSBsYSBwcm9jw6lkdXJlIGRlIGNoYW5nZW1lbnQgZGUgY2VydGlmaWNhdCBzZXJ2ZXVyIGRvbm7DqWUgYXByw6hzIGxlIGxhbmNlbWVudCBkZSBsYSBjb21tYW5kZS5cblxuYGBgXG5BVFRFTlRJT04gISBMZSBjZXJ0aWZpY2F0IGNvbmZpZ3Vyw6kgZGFucyBsZSBmaWNoaWVyIC9ldGMvbmdpbngvY29uZi5kL3BhcmFwaGV1cl9zc2wuY29uZlxubmUgY29ycmVzcG9uZCBwb3RlbnRpZWxsZW1lbnQgcGx1cyBhdmVjIGxlIG5vdXZlYXUgbm9tIGR1IHBhcmFwaGV1ci5cbklsIGNvbnZpZW50IGRlIHJlbXBsYWNlciBjZSBjZXJ0aWZpY2F0IChsb2NhbGlzw6kgZGFucyBsZSBkb3NzaWVyIC9ldGMvbmdpbngvc3NsLylcbnBvdXIgcXVlIGxlIHBhcmFwaGV1ciBzb2l0IHRvdGFsZW1lbnQgZm9uY3Rpb25uZWwuXG5cblByb3ByacOpdMOpcyDDoCBtb2RpZmllciBkYW5zIGxlIGZpY2hpZXIgZGUgY29uZmlndXJhdGlvbiAvZXRjL25naW54L2NvbmYuZC9wYXJhcGhldXJfc3NsLmNvbmYgOlxuLSBzc2xfY2VydGZpY2lhdGUgL2V0Yy9uZ2lueC9zc2wvdGVzdC5wZW07ICAgICAjIFBhcnRpZSBwdWJsaXF1ZVxuLSBzc2xfY2VydGZpY2lhdGVfa2V5IC9ldGMvbmdpbngvc3NsL3Rlc3Qua2V5OyAjIFBhcnRpZSBwcml2w6llXG5cblVuZSBmb2lzIGxlcyBtb2RpZmljYXRpb25zIGRlIGNlcnRpZmljYXQgZWZmZWN0dcOpZXMsIHJlbGFuY2VyIGxlIHNlcnZpY2UgTmdpblggOlxuc2VydmljZSBuZ2lueCByZXN0YXJ0XG5gYGBcblxuIyMgYHBoLXJlbW92ZWxkYXBgXG5cbkNldHRlIGNvbW1hbmRlIHBlcm1ldCBkZSBzdXBwcmltZXIgbGVzIHV0aWxpc2F0ZXVycyBzeW5jaHJvbmlzw6lzIGF2ZWMgdW4gTERBUCBuJ2F5YW50IGF1Y3VuIGJ1cmVhdSBsacOpcy5cblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLXJlbW92ZWxkYXAgWy1oXVxuXG5TdXBwcmltZSBsZXMgdXRpbGlzYXRldXJzIHN5bmNocm9uaXPDqXMgTERBUCBuJ2F5YW50IGF1Y3VuZSBsaWFpc29uIGF2ZWMgdW4gYnVyZWF1XG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuXG5gYGBcblxuIyMgYHBoLXB1c2hkb2NgXG5cbkxhbmNlIGxhIGZvbmN0aW9uIGQnaW1wb3J0YXRpb24gZGUgZG9zc2llciB2aWEgbGUgY29ubmVjdGV1ciBnw6luw6lyaXF1ZSBQdXNoZG9jLlxuSWwgZXN0IHZpdmVtZW50IGNvbnNlaWxsw6kgZCd1dGlsaXNlciBsYSBjb21tYW5kZSBgIHBoLWluaXQgLWMgcHVzaGRvYyBgIGFmaW4gZGUgZ8OpbsOpcmVyIHVuIHNxdWVsZXR0ZSBkZSBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gY29tcGxldC5cblxuKipBVFRFTlRJT04qKiA6IERlcyBwcsOpLXJlcXVpcyBzb250IG7DqWPDqXNzYWlyZXMgYXZhbnQgbCd1dGlsaXNhdGlvbiBkZSBjZXR0ZSBjb21tYW5kZSA6XG4tIFVuIGphciBwdXNoZG9jIGVuIGRlcm5pw6hyZSB2ZXJzaW9uIGRhbnMgbGUgbcOqbWUgZG9zc2llciBxdWUgY2Ugc2NyaXB0XG4tIFRvdXQgbGUgbsOpY8Opc3NhaXJlIHBvdXIgZmFpcmUgZm9uY3Rpb25uZXIgcHVzaGRvYyAod3NkbCwgY29uZi5jZiwga2V5c3RvcmUsIHRydXN0c3RvcmUpXG4tIExlIGZpY2hpZXIgcGFyIGTDqWZhdXQgcG91ciBsZSB2aXN1ZWwgcGRmIGRlcyBmbHV4IFBFUyAodGVtcGxhdGUtdmlzdWVsUERGLnBkZilcblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLXB1c2hkb2MgWy1oXSBbLWMgQ10gWy1qIEpdIFstaSBJXSBbLWUgRV0gWy14IFhdIFstdiBWXVxuXG5JbXBvcnRlIGxhIGNvbmZpZ3VyYXRpb24gY2libMOpZSBkYW5zIHVuIHBhcmFwaGV1ciB2aWVyZ2VcblxuQXJndW1lbnRzOlxuICAtaCwgLS1oZWxwICBBZmZpY2hlIGNlIG1lc3NhZ2UgZXQgcXVpdHRlXG4gIC1jIEMgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtaiBKICAgICAgICBGaWNoaWVyIEpBUiBkdSBwdXNoZG9jXG4gIC1pIEkgICAgICAgIFLDqXBlcnRvaXJlIMOgIHRyYWl0ZXJcbiAgLWUgRSAgICAgICAgQ291cnJpZWwgZGUgbCd1dGlsaXNhdGV1ciB3ZWJzZXJ2aWNlXG4gIC14IFggICAgICAgIHhQYXRoIHBhciBkw6lmYXV0IGRhbnMgbGUgY2FzIGQndW4gZW52b2kgZGUgZmx1eCBQRVNcbiAgLXYgViAgICAgICAgVmlzdWVsIFBERiDDoCB1dGlsaXNlciBkYW5zIGxlIGNhcyBkJ3VuIGVudm9pIGRlIGZsdXggUEVTXG5gYGBcblxuIyMgYHBoLWlwY2xlYW5gXG5cbkNldHRlIGNvbW1hbmRlIHBlcm1ldCBkZSBnw6luw6lyZXIgbGVzIGluZGV4IGF1dG9tYXRpcXVlbWVudCBlbiBzdXBwcmltYW50IGxlcyBub2V1ZHMgZGFucyBsYSBiYXNlIGRlIGRvbm7DqWVzLCBlbiBsYW7Dp2FudFxubGEgcHJvY8OpZHVyZSBkb0lQY2xlYW50cmFuc2FjdGlvbi5zcWwsIGVuIHN1cHByaW1hbnQgbGVzIGRvc3NpZXJzIGFsZl9kYXRhL2x1Y2VuZS1pbmRleGVzIGV0XG5hbGZfZGF0YS9iYWNrdXAtbHVjZW5lLWluZGV4ZXMgZXQgZW4gY291cGFudCBldCByZWxhbsOnYW50IGwnYXBwbGljYXRpb24uXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5gYGBcbnVzYWdlOiBwaC1pcGNsZWFuIFstaF1cblxuR8OpbsOocmUgbGVzIGluZGV4XG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuXG5gYGBcblxuIyMgYHBoLWxkYXBzZWFyY2hgXG5cbkNldHRlIGNvbW1hbmRlIHbDqXJpZmllIHF1ZSBsZSBmaWNoaWVyIGRlIGNvbmYgTERBUCBlc3QgYmllbiBwcsOpc2VudCwgcXVlIGxhIHN5bmNocm9uaXNhdGlvbiBlc3QgYmllbiBkZW1hbmTDqWUsIHF1ZSBsZSBzZXJ2ZXVyIGVzdCBhY2Nlc3NpYmxlLlxuUHVpcyBhZmZpY2hlIGxhIHJlcXXDqnRlIExEQVAgY29tcGzDqHRlIGV0IGVuZmluIHJldG91cm5lIGxhIGxpc3RlIGRlcyB1dGlsaXNhdGV1cnMgY29ycmVzcG9uZGFudHMuXG5JbCBlc3Qgdml2ZW1lbnQgY29uc2VpbGzDqSBkJ3V0aWxpc2VyIGxhIGNvbW1hbmRlIGBwaC1pbml0IC1jIGxkYXBzZWFyY2hgIGFmaW4gZGUgZ8OpbsOpcmVyIHVuIHNxdWVsZXR0ZSBkZSBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gY29tcGxldC5cblxuXG5FeGVtcGxlIGQndXRpbGlzYXRpb24gOlxuYGBgXG51c2FnZTogcGgtbGRhcHNlYXJjaCBbLWhdXG5cbkfDqW7DqHJlIGRlcyB2w6lyaWZpY2F0aW9ucyBkZSBwcm9wcmnDqXTDqXMgZHUgZmljaGllciBjb25mLCBsYSByZXF1w6p0ZSBMREFQLCBsYSBsaXN0ZSBkZXMgdXRpbGlzYXRldXJzIHJldG91cm7DqXMgcGFyIGNlbGxlLWNpLlxuXG5Bcmd1bWVudHM6XG4gIC1oLCAtLWhlbHAgIEFmZmljaGUgY2UgbWVzc2FnZSBldCBxdWl0dGVcblxuYGBgXG5cblxuIyMgYHBoLWNvdW50X2ZpbGVzYFxuXG5DZXR0ZSBjb21tYW5kZSBhZmZpY2hlIHVuIHRhYmxlYXUgcsOpY2FwaXR1bGF0aWYgZHUgbm9tYnJlIGRlIGRvc3NpZXIgZXQgZCdhcmNoaXZlcyBwYXIgdGVuYW50LiBMZXMgZG9zc2llcnMgc29udCBjbGFzc8OpcyBwYXIgYnVyZWF1IGV0IGJhbmV0dGUuXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5gYGBcbnVzYWdlOiBwaC1jb3VudF9maWxlcyBbLWhdXG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuXG5gYGBcblxuXG4jIyBgcGgtcmVzZXRfYWRtaW5fcGFzc3dvcmRgXG5cbkNldHRlIGNvbW1hbmRlIHBhc3NlIGxlIG1vdCBkZSBwYXNzZSBkZSBsJ3V0aWxpc2F0ZXVyIMOgIFwiYWRtaW5cIi5cbklsIGVzdCB2aXZlbWVudCBjb25zZWlsbMOpIGQndXRpbGlzZXIgbGEgY29tbWFuZGUgYHBoLWluaXQgLWMgcmVzZXRfYWRtaW5fcGFzc3dvcmRgIGFmaW4gZGUgZ8OpbsOpcmVyIHVuIHNxdWVsZXR0ZSBkZSBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gY29tcGxldC5cblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLXJlc2V0X2FkbWluX3Bhc3N3b3JkIFstaF0gWy1jIENdIFstZGggREhdIFstZHAgRFBdIFstZHUgRFVdIFstZHB3IERQV10gWy1kZCBERF1cblxuQXJndW1lbnRzOlxuICAtaCwgLS1oZWxwICBBZmZpY2hlIGNlIG1lc3NhZ2UgZXQgcXVpdHRlXG4gIC1jIEMgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtZGggREggICAgICBJUCBkdSBzZXJ2ZXVyIG15c3FsXG4gIC1kcCBEUCAgICAgIFBvcnQgZHUgc2VydmV1ciBteXNxbFxuICAtZHUgRFUgICAgICBVdGlsaXNhdGV1ciBhbGZyZXNjbyBkZSBteXNxbFxuICAtZHB3IERQVyAgICBNb3QgZGUgcGFzc2UgdXRpbGlzYXRldXIgYWxmcmVzY28gZGUgbXlzcWxcbiAgLWRkIEREICAgICAgTm9tIGRlIGxhIGJhc2UgbXlzcWxcblxuYGBgXG5cbiMjIGBwaC1wYXRjaGBcblxuQ2V0dGUgY29tbWFuZGUgZMOpcGxvaWUgbGUgcGF0Y2guXG5cbklsIGZhdXQgYXUgcHLDqWFsYWJsZSBjcsOpZXIgdW4gZG9zc2llciBjb250ZW5hbnQgbCdhcmNoaXZlIHRhci5neiBkdSBwYXRjaCxcbmV0IGNvbXBsw6l0ZXIgbGUgaXBhcmFwaGV1ci11dGlscy5jZmcgKGVuIGxhbsOnYW50IGxhIGNvbW1hbmRlIGBwaC1pbml0IC1jIHBhdGNoYClcblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLXBhdGNoIFstaF0gWy1jIENdIFstdSBVXSBbLWQgRF1cblxuQXJndW1lbnRzOlxuICAtaCwgLS1oZWxwICBBZmZpY2hlIGNlIG1lc3NhZ2UgZXQgcXVpdHRlXG4gIC1jIEMgICAgICAgIEZpY2hpZXIgZGUgY29uZmlndXJhdGlvblxuICAtdSBVICAgICAgICBVUkwgd2Vic2VydmljZSBzYW5zIGxlIFwic2VjdXJlLVwiXG4gIC1kIEQgICAgICAgIGRvc3NpZXIgZHUgcGFyYXBoZXVyIChwYXIgZMOpZmF1dCAvb3B0L2lQYXJhcGhldXIpXG5gYGBcblxuIyMgYHBoLXJlY3VwZnVsbGBcblxuQ2V0dGUgY29tbWFuZGUgZXN0IHVuZSBub3V2ZWxsZSB2ZXJzaW9uIGRlIGBwaC1yZWN1cGFyY2hpdmVzYCwgcGx1cyBjb21wbMOodGUuXG5cbkxhIHByaW5jaXBhbGUgbm91dmVhdXTDqSA6IHByaXNlIGVuIGNvbXB0ZSBkZXMgbcOpdGFkb25uw6llcyBkYW5zIGwnb3DDqXJhdGlvbiBkZSByw6ljdXDDqXJhdGlvbi5cblxuSWwgeSBhIDQgbm91dmVsbGVzIGZvbmN0aW9ubmFsaXTDqXMgOlxuXG4tIHLDqWN1cMOpcmVyIGxlcyBhcmNoaXZlcyBzb3VzIGZvcm1lIGQnYXJib3Jlc2NlbmNlIHBlcnNvbm5hbGlzw6llLFxuLSBham91dCBkJ3VuIGZpY2hpZXIgZGUgcHJvcHJpw6l0w6kgWE1MIHBvdXIgY2hhcXVlIGFyY2hpdmUsIFxuLSAxIHJhcHBvcnQgZCdleMOpY3V0aW9uIGF1IGZvcm1hdCBDU1YgXG4tIGV0IDEgbG9nIGF1IGZvcm1hdCBDU1YuXG5cbklsIGZhdXQgYXUgcHLDqWFsYWJsZSBjb21wbMOpdGVyIGxlIGBpcGFyYXBoZXVyLXV0aWxzLmNmZ2AgKGVuIGxhbsOnYW50IGxhIGNvbW1hbmRlIGBwaC1pbml0IC1jIHJlY3VwZnVsbGApXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5cbmBgYFxucGgtcmVjdXBmdWxsIC1oXG4tLS1cbnVzYWdlOiBwaC1yZWN1cEFyY2hpdmVzIFstaF0gWy1zIFNdIFstYyBDXSBbLXUgVV0gWy1wIFBdIFstZiBGXSBbLXBzIFBTXVxuICAgICAgICAgICAgICAgICAgICAgICAgWy1yIHt0cnVlLGZhbHNlfV0gWy1pIHt0cnVlLGZhbHNlfV0gWy1wdSB7dHJ1ZSxmYWxzZX1dXG4gICAgICAgICAgICAgICAgICAgICAgICBbLWQge3RydWUsZmFsc2V9XSBbLXQgVF0gWy1zdCBTVF0gWy13IFddXG5cbkxhbmNlIHVuZSByw6ljdXDDqXJhdGlvbiAvIHB1cmdlIGRlcyBhcmNoaXZlc1xuXG5Bcmd1bWVudHM6XG4gIC1oLCAtLWhlbHAgICAgICAgIEFmZmljaGUgY2UgbWVzc2FnZSBldCBxdWl0dGVcbiAgLWMgQyAgICAgICAgICAgICAgRmljaGllciBkZSBjb25maWd1cmF0aW9uXG4gIFxuICAtdSBVICAgICAgICAgICAgICBVdGlsaXNhdGV1clxuICAtcCBQICAgICAgICAgICAgICBNb3QgZGUgcGFzc2VcbiAgLXMgUyAgICAgICAgICAgICAgVVJMIGR1IHNlcnZldXIgaVBhcmFwaGV1clxuICBcbiAgLWYgRiAgICAgICAgICAgICAgUsOpcGVydG9pcmUgZGUgZGVzdGluYXRpb25cbiAgLXBzIFBTICAgICAgICAgICAgVGFpbGxlIGRlcyBwYWdlcyDDoCByw6ljdXDDqXJlclxuICAtcHUge3RydWUsZmFsc2V9ICBBY3RpdmUgbGEgcHVyZ2UgbGVzIGRvbm7DqWVzXG4gIC1kIHt0cnVlLGZhbHNlfSAgIFTDqWzDqWNoYXJnZSBsZXMgZG9ubsOpZXNcbiAgLW14IHt0cnVlLGZhbHNlfSAgQWpvdXQgZCB1biBmaWNoaWVyIGRlIHByb3ByacOpdMOpIGF1IGZvcm1hdCBYTUwgcG91ciBjaGFxdWUgYXJjaGl2ZVxuICAtdCBUICAgICAgICAgICAgICBGaWx0cmUgc3VyIHR5cGVcbiAgLXN0IFNUICAgICAgICAgICAgRmlsdHJlIHN1ciBzb3VzLXR5cGVcbiAgLXcgVyAgICAgICAgICAgICAgRMOpbGFpIGRlIGNvbnNlcnZhdGlvbiBkZXMgZG9ubsOpZXNcbiAgXG4gIC1tbCBtbCAgICAgICAgICAgIExpc3RlIGRlcyBtw6l0YWRvbm7DqWVzIGEgZXhwbG9pdGVyIGF1IGZvcm1hdCBDU1ZcbiAgLW1kdiBtZHYgICAgICAgICAgTGlzdGUgZGVzIHZhbGV1cnMgcGFyIGTDqWZhdXQgZGVzIG3DqXRhZG9ubsOpZXMgw6AgZXhwbG9pdGVyIGF1IGZvcm1hdCBDU1ZcbiAgLW10IG10ICAgICAgICAgICAgYXJib3Jlc2NlbmNlIHBhciBtw6l0YWRvbm7DqWVzIG91IG1vdHMgY2zDqXNcbiAgLWNkciBjZHIge3RydWUsZmFsc2V9IENTViBnw6luw6lyw6kgbG9ycyBkZSBjaGFxdWUgZXjDqWN1dGlvbiA6IHRvdXMgbGVzIHLDqXBlcnRvaXJlcyBjcsOpw6lzXG4gIC1jbHIgY2xyIHt0cnVlLGZhbHNlfSBsb2cgYXUgZm9ybWF0IENTViA6IHRvdXMgbGVzIGRvc3NpZXJzIGNyw6nDqXMgXG5gYGBcblxuIyMgYHBoLXRlbXBsYXRlYFxuXG5DZXR0ZSBjb21tYW5kZSBwZXJtZXQgZGUgOlxuLSBzYXV2ZWdhcmRlciBsZXMgdGVtcGxhdGVzIGV0IGJvcmRlcmVhdSBkYW5zIHVuIGZpY2hpZXIgWklQIGRhdMOpXG4tIHbDqXJpZmllIHBvdXIgY2hhcXVlIG1vZMOobGUgc2kgaWwgbidlc3QgcGFzIMOgIGpvdXIgb3Ugc2kgaWwgYSDDqXTDqSBtb2RpZmnDqVxuLSBzaSByZWxvYWQgPSB0cnVlLCBsZXMgbW9kw6hsZXMgc29udCByZWNoYXJnw6lzIFxuXG5JbCBmYXV0IGF1IHByw6lhbGFibGUgY29tcGzDqXRlciBsZSBgaXBhcmFwaGV1ci11dGlscy5jZmdgIChlbiBsYW7Dp2FudCBsYSBjb21tYW5kZSBgcGgtaW5pdCAtYyB0ZW1wbGF0ZWApXG5cbkV4ZW1wbGUgZCd1dGlsaXNhdGlvbiA6XG5cbmBgYFxucGgtdGVtcGxhdGUgLWhcbi0tLVxudXNhZ2U6IHBoLXRlbXBsYXRlIFstaF0gWy1jIENdIFstdSBVXSBbLXAgUF0gWy1zIFMgWy1yIHt0cnVlLGZhbHNlfV0gXG5cbkFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgICAgICAgQWZmaWNoZSBjZSBtZXNzYWdlIGV0IHF1aXR0ZVxuICAtYyBDICAgICAgICAgICAgICBGaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb25cbiAgXG4gIC11IFUgICAgICAgICAgICAgIFV0aWxpc2F0ZXVyXG4gIC1wIFAgICAgICAgICAgICAgIE1vdCBkZSBwYXNzZVxuICAtcyBTICAgICAgICAgICAgICBVUkwgZHUgc2VydmV1ciBpUGFyYXBoZXVyXG4gIC1yIHt0cnVlLGZhbHNlfSAgIFJlY2hhcmdlbWVudCBkZXMgbW9kw6hsZXNcbmBgYFxuXG5cbiMjIGBwaC1vcnBoYW5gXG5cbkNldHRlIGNvbW1hbmRlIGluZGlxdWUgc2kgaWwgeSBhIGRlcyBub2V1ZHMgb3JwaGVsaW5zIGF2ZWMgdW4gbWVzc2FnZSBldCB1biBjb2RlIHJldG91ci5cbjAgPSBpbCBuJ3kgYSBwYXMgZGUgbm9ldWQgb3JwaGVsaW5cbjEgPSBpbCB5IGEgZGVzIG5vZXVkcyBvcnBoZWxpbnNcblxuRXhlbXBsZSBkJ3V0aWxpc2F0aW9uIDpcbmBgYFxudXNhZ2U6IHBoLW9ycGhhbiBcbmBgYFxuXG4jIFV0aWxpc2F0aW9uIGVuIGxpYnJhaXJpZVxuXG5Ew6lmaW5pciB1biBmaWNoaWVyIGRlIGNvbmZpZ3VyYXRpb24gYHNjcmlwdC5jZmdgIGRhbnMgbGUgcsOpcGVydG9pcmUgcmFjaW5lIHZpYSBsYSBjb21tYW5kZSBgcGgtaW5pdGAsIHF1aSBhdXJhIGxhIGZvcm1lIHN1aXZhbnRlIDpcblxuYGBgaW5pXG5bUGFyYXBoZXVyXVxudXNlcm5hbWUgPSBhZG1pblxucGFzc3dvcmQgPSBhZG1pblxuc2VydmVyID0gc2VjdXJlLWlwYXJhcGhldXIuZG9tLmxvY2FsXG5gYGBcblxuUHVpcywgY3LDqWVyIHVuIHNjcmlwdCBweXRob24gYXZlYyB1dGlsaXNhdGlvbiBkZSBsJ0FQSSBSRVNUIDpcblxuYGBgcHl0aG9uXG4jIS91c3IvYmluL2VudiBweXRob25cbiMgY29kaW5nPXV0Zi04XG5cbmltcG9ydCBwYXJhcGhldXJcblxuIyBJbml0IFJFU1QgQVBJIGNsaWVudFxuY2xpZW50ID0gcGFyYXBoZXVyLmdldHJlc3RjbGllbnQoKVxuXG5pZiBjbGllbnQuaXNsb2dnZWQ6XG4gICAgIyBEbyBhIGxvdCBvZiB0aGluZ3MuLi5cbmBgYFxuXG5PdSwgcG91ciB1bmUgdXRpbGlzYXRpb24gYXZlYyBsJ0FQSSBTT0FQIDpcblxuYGBgcHl0aG9uXG4jIS91c3IvYmluL2VudiBweXRob25cbiMgY29kaW5nPXV0Zi04XG5cbmltcG9ydCBwYXJhcGhldXJcblxuIyBJbml0IFNPQVAgQVBJIGNsaWVudFxud2Vic2VydmljZSA9IHBhcmFwaGV1ci5nZXRzb2FwY2xpZW50KClcblxud2Vic2VydmljZS5jYWxsKCkuZWNobygnQ291Y291LCBpY2kgcHl0aG9uICEnKVxuYGBgXG5cbkxlIHJlbmRyZSDDqXhlY3V0YWJsZSwgcHVpcyBsZSBsYW5jZXIgZGVwdWlzIHVuZSBjb25zb2xlIGJhc2ggOlxuXG5gYGBiYXNoXG5jaG1vZCAreCAuL3NjcmlwdC5weVxuLi9zY3JpcHQucHlcbmBgYFxuXG4jIENhcyBzcMOpY2lmaXF1ZXNcblxuIyMgUHJveHlcblxuSWwgZXN0IHBvc3NpYmxlIGRlIGNvbnRvdXJuZXIgbCd1c2FnZSBkJ3VuIHByb3h5IHBvdXIgbGVzIGFwcGVscyBXZWJzZXJ2aWNlcyBvdSBBUEkgUkVTVCxcbnNpIGxlIHNjcmlwdCDDoCBsYW5jZXIgZG9pdCBjb21tdW5pcXVlciBkaXJlY3RlbWVudCBhdmVjIGxlIHNlcnZldXIgaS1QYXJhcGhldXJcbnNhbnMgcGFzc2VyIHBhciB1biDDqXZlbnR1ZWwgcHJveHkgZMOpZmluaSBzdXIgbGUgc3lzdMOobWUuXG5cblBvdXIgY2VsYSwgaWwgc3VmZml0IGQnYWpvdXRlciBsYSB2YXJpYWJsZSAqKk5PX1BST1hZKiogYXZhbnQgbCdhcHBlbCBkJ3VuZSBmb25jdGlvbiBvdSBkJ3VuIHNjcmlwdC5cblBhciBleGVtcGxlLCBwb3VyIHVuIGFwcGVsIGRlIGBwaC1lY2hvYCB2ZXJzIGBzZWN1cmUtaXBhcmFwaGV1ci5kb20ubG9jYWxgLCBsYSBjb21tYW5kZSBzZXJhIDpcblxuYGBgYmFzaFxuTk9fUFJPWFk9XCJzZWN1cmUtaXBhcmFwaGV1ci5kb20ubG9jYWxcIiBwaC1lY2hvXG5gYGBcbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRsYWIubGlicmljaWVsLmZyL2ktcGFyYXBoZXVyL2NsaWVudC1weXRob24iLA==
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIkFHUEx2MyIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImlwYXJhcGhldXItdXRpbHMzIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvaXBhcmFwaGV1ci11dGlsczMvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvaXBhcmFwaGV1ci11dGlsczMvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0bGFiLmxpYnJpY2llbC5mci9pLXBhcmFwaGV1ci9jbGllbnQtcHl0aG9uIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvaXBhcmFwaGV1ci11dGlsczMvMS4wLjAvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIkNsaWVudCBweXRob24gcG91ciBpLVBhcmFwaGV1ciIs
ICAgICJ2ZXJzaW9uIjogIjEuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODIxMDIwNiw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2MzRmMzIyYWQzYTg1MDQ5ZjA5M2E3OGE0OTAyMDE2ZDk4ZWIxYzc0NjMxMzFlMzZmZmZmOTVkMGQ1Y2JlZmI5Iiw=
ICAgICAgICAgICJtZDUiOiAiZjEzZGEyZjIwZDZkNDJmZWU2YzY4ZDA5ZGY3NzU1OWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzA2NTI2YzJkZDM3NmY4Y2MxM2RiNDBjNjgzNTNmNmVmMjRlZTNkODM0N2MyOGQ1ZjYxOTY4MDdkM2FlMzY4OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiaXBhcmFwaGV1ci11dGlsczMtMS4wLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMTNkYTJmMjBkNmQ0MmZlZTZjNjhkMDlkZjc3NTU5YyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDg4NTUwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wOS0yMVQwNzo1NToyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wOS0yMVQwNzo1NToyMS45MjgxMDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82My80Zi8zMjJhZDNhODUwNDlmMDkzYTc4YTQ5MDIwMTZkOThlYjFjNzQ2MzEzMWUzNmZmZmY5NWQwZDVjYmVmYjkvaXBhcmFwaGV1ci11dGlsczMtMS4wLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNjM0ZjMyMmFkM2E4NTA0OWYwOTNhNzhhNDkwMjAxNmQ5OGViMWM3NDYzMTMxZTM2ZmZmZjk1ZDBkNWNiZWZiOSIs
ICAgICAgICAibWQ1IjogImYxM2RhMmYyMGQ2ZDQyZmVlNmM2OGQwOWRmNzc1NTljIiw=
ICAgICAgICAic2hhMjU2IjogIjMwNjUyNmMyZGQzNzZmOGNjMTNkYjQwYzY4MzUzZjZlZjI0ZWUzZDgzNDdjMjhkNWY2MTk2ODA3ZDNhZTM2ODgi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImlwYXJhcGhldXItdXRpbHMzLTEuMC4wLnRhci5neiIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZjEzZGEyZjIwZDZkNDJmZWU2YzY4ZDA5ZGY3NzU1OWMiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiA4ODU1MCw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDktMjFUMDc6NTU6MjEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDktMjFUMDc6NTU6MjEuOTI4MTAyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNjMvNGYvMzIyYWQzYTg1MDQ5ZjA5M2E3OGE0OTAyMDE2ZDk4ZWIxYzc0NjMxMzFlMzZmZmZmOTVkMGQ1Y2JlZmI5L2lwYXJhcGhldXItdXRpbHMzLTEuMC4wLnRhci5neiIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
