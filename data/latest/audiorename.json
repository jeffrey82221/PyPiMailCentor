ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiSm9zZWYgRnJpZWRyaWNoIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiam9zZWZAZnJpZWRyaWNoLnJvY2tzIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjki
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBpbWFnZTo6IGh0dHA6Ly9pbWcuc2hpZWxkcy5pby9weXBpL3YvYXVkaW9yZW5hbWUuc3ZnXG4gICAgOnRhcmdldDogaHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaS9hdWRpb3JlbmFtZVxuICAgIDphbHQ6IFRoaXMgcGFja2FnZSBvbiB0aGUgUHl0aG9uIFBhY2thZ2UgSW5kZXhcblxuLi4gaW1hZ2U6OiBodHRwczovL2dpdGh1Yi5jb20vSm9zZWYtRnJpZWRyaWNoL2F1ZGlvcmVuYW1lL2FjdGlvbnMvd29ya2Zsb3dzL3Rlc3QueW1sL2JhZGdlLnN2Z1xuICAgIDp0YXJnZXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9Kb3NlZi1GcmllZHJpY2gvYXVkaW9yZW5hbWUvYWN0aW9ucy93b3JrZmxvd3MvdGVzdC55bWxcbiAgICA6YWx0OiBUZXN0c1xuXG4uLiBpbWFnZTo6IGh0dHBzOi8vcmVhZHRoZWRvY3Mub3JnL3Byb2plY3RzL2F1ZGlvcmVuYW1lL2JhZGdlLz92ZXJzaW9uPWxhdGVzdFxuICAgIDp0YXJnZXQ6IGh0dHBzOi8vYXVkaW9yZW5hbWUucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0Lz9iYWRnZT1sYXRlc3RcbiAgICA6YWx0OiBEb2N1bWVudGF0aW9uIFN0YXR1c1xuXG4qKioqKioqKioqKlxuYXVkaW9yZW5hbWVcbioqKioqKioqKioqXG5cblJlbmFtZSBhdWRpbyBmaWxlcyBmcm9tIG1ldGFkYXRhIHRhZ3MuXG5cbkluc3RhbGxhdGlvblxuPT09PT09PT09PT09XG5cbkZyb20gR2l0aHViXG4tLS0tLS0tLS0tLVxuXG4uLiBjb2RlOjogU2hlbGxcblxuICAgIGdpdCBjbG9uZSBnaXRAZ2l0aHViLmNvbTpKb3NlZi1GcmllZHJpY2gvYXVkaW9yZW5hbWUuZ2l0XG4gICAgY2QgYXVkaW9yZW5hbWVcbiAgICBweXRob24gc2V0dXAucHkgaW5zdGFsbFxuXG5Gcm9tIFB5UElcbi0tLS0tLS0tLVxuXG4uLiBjb2RlOjogU2hlbGxcblxuICAgIHBpcCBpbnN0YWxsIGF1ZGlvcmVuYW1lXG4gICAgZWFzeV9pbnN0YWxsIGF1ZGlvcmVuYW1lXG5cbkV4YW1wbGVzXG49PT09PT09PVxuXG5QbGVhc2UgdXNlIHRoZSBgYC1kYGAgKGBgLS1kcnktcnVuYGApIG9wdGlvbiBmaXJzdFxuXG5CYXNpYyBleGFtcGxlOlxuXG4uLiBjb2RlOjogU2hlbGxcblxuICAgIGNkIG15LWNoYW90aWMtbXVzaWMtY29sbGVjdGlvblxuICAgIGF1ZGlvcmVuYW1lciAtZCAuXG5cblxuTW9yZSBhZHZhbmNlZCBleGFtcGxlOlxuXG4uLiBjb2RlOjogU2hlbGxcblxuICAgIGF1ZGlvcmVuYW1lciAtZCAtZiAnJGFydGlzdC8kYWxidW0vJHRyYWNrICR0aXRsZScgLS10YXJnZXQgL21udC9oZC9teS1vcmdhbml6ZWQtbXVzaWMtY29sbGVjdGlvbiAuXG5cblZlcnkgYWR2YW5jZWQgZXhhbXBsZTpcblxuLi4gY29kZTo6IFNoZWxsXG5cbiAgICBhdWRpb3JlbmFtZXIgLWQgLWYgJyRhcl9pbml0aWFsX2FydGlzdC8lc2hvcnRlbnskYXJfY29tYmluZWRfYXJ0aXN0X3NvcnR9LyVzaG9ydGVueyRhcl9jb21iaW5lZF9hbGJ1bX0laWZkZWZub3RlbXB0eXthcl9jb21iaW5lZF95ZWFyLF8ke2FyX2NvbWJpbmVkX3llYXJ9fS8ke2FyX2NvbWJpbmVkX2Rpc2N0cmFja31fJXNob3J0ZW57JHRpdGxlfScgLlxuXG5Vc2FnZVxuPT09PT1cblxuLi4gY29kZS1ibG9jazo6IHRleHRcblxuICAgIHVzYWdlOiBhdWRpb3JlbmFtZXIgWy1oXSBbLS1jb25maWcgQ09ORklHXSBbLXZdIFstdCBUQVJHRVRdIFstYV1cbiAgICAgICAgICAgICAgICAgICAgICAgIFstcCBCQUNLVVBfRk9MREVSXSBbLUJdIFstZF0gWy1DIHwgLU0gfCAtbl0gWy1BIHwgLURdIFstRl1cbiAgICAgICAgICAgICAgICAgICAgICAgIFstbSBBTEJVTV9NSU5dIFstZSBFWFRFTlNJT05dXG4gICAgICAgICAgICAgICAgICAgICAgICBbLS1nZW5yZS1jbGFzc2ljYWwgR0VOUkVfQ0xBU1NJQ0FMXSBbLXMgRklFTERfU0tJUF0gWy1rXVxuICAgICAgICAgICAgICAgICAgICAgICAgWy1TXSBbLS1uby1zb3VuZHRyYWNrXSBbLWYgUEFUSF9URU1QTEFURV1cbiAgICAgICAgICAgICAgICAgICAgICAgIFstYyBQQVRIX1RFTVBMQVRFXSBbLS1zb3VuZHRyYWNrIFBBVEhfVEVNUExBVEVdXG4gICAgICAgICAgICAgICAgICAgICAgICBbLS1mb3JtYXQtY2xhc3NpY2FsIFBBVEhfVEVNUExBVEVdIFstSyB8IC0tbm8tY29sb3JdIFstYl1cbiAgICAgICAgICAgICAgICAgICAgICAgIFstal0gWy1sXSBbLW9dIFstVF0gWy1WXSBbLUVdIFstcl1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZVxuICAgIFxuICAgICAgICBSZW5hbWUgYXVkaW8gZmlsZXMgZnJvbSBtZXRhZGF0YSB0YWdzLlxuICAgIFxuICAgICAgICBIb3cgdG8gc3BlY2lmeSB0aGUgdGFyZ2V0IGRpcmVjdG9yeT9cbiAgICBcbiAgICAgICAgMS4gQnkgdGhlIGRlZmF1bHQgdGhlIGF1ZGlvIGZpbGVzIGFyZSBtb3ZlZCBvciByZW5hbWVkIHRvIHRoZSBwYXJlbnRcbiAgICAgICAgICAgd29ya2luZyBkaXJlY3RvcnkuXG4gICAgICAgIDIuIFVzZSB0aGUgb3B0aW9uIGBgLXQgPGZvbGRlcj5gYCBvciBgYC0tdGFyZ2V0IDxmb2xkZXI+YGAgdG8gc3BlY2lmaXlcbiAgICAgICAgICAgYSB0YXJnZXQgZGlyZWN0b3J5LlxuICAgICAgICAzLiBVc2UgdGhlIG9wdGlvbiBgYC1hYGAgb3IgYGAtLXNvdXJjZS1hcy10YXJnZXRgYCB0byBjb3B5IG9yIHJlbmFtZVxuICAgICAgICAgICB5b3VyIGF1ZGlvIGZpbGVzIHdpdGhpbiB0aGUgc291cmNlIGRpcmVjdG9yeS5cbiAgICBcbiAgICBNZXRhZGF0YSBmaWVsZHNcbiAgICA9PT09PT09PT09PT09PT1cbiAgICBcbiAgICAgICAgJGFjb3VzdGlkX2ZpbmdlcnByaW50OiAgICAgICBBY291c3RpYyBJRCBmaW5nZXJwcmludFxuICAgIFxuICAgICAgICAkYWNvdXN0aWRfaWQ6ICAgICAgICAgICAgICAgIEFjb3VzdGljIElEXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnODZlMjE3YjctZDNhZC00NDkzLWE5ZjItY2Y3MTI1NmFjZTA3J11cbiAgICBcbiAgICAgICAgJGFsYnVtOiAgICAgICAgICAgICAgICAgICAgICBhbGJ1bVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0hlbHAhJ11cbiAgICBcbiAgICAgICAgJGFsYnVtYXJ0aXN0OiAgICAgICAgICAgICAgICBUaGUgYXJ0aXN0IGZvciB0aGUgZW50aXJlIGFsYnVtLCB3aGljaCBtYXkgYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWZmZXJlbnQgZnJvbSB0aGUgYXJ0aXN0cyBmb3IgdGhlIGluZGl2aWR1YWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFja3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydUaGUgQmVhdGxlcyddXG4gICAgXG4gICAgICAgICRhbGJ1bWFydGlzdF9jcmVkaXQ6ICAgICAgICAgYWxidW1hcnRpc3RfY3JlZGl0XG4gICAgXG4gICAgICAgICRhbGJ1bWFydGlzdF9zb3J0OiAgICAgICAgICAgYWxidW1hcnRpc3Rfc29ydFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0JlYXRsZXMsIFRoZSddXG4gICAgXG4gICAgICAgICRhbGJ1bWFydGlzdHM6ICAgICAgICAgICAgICAgYWxidW1hcnRpc3RzXG4gICAgXG4gICAgICAgICRhbGJ1bWRpc2FtYmlnOiAgICAgICAgICAgICAgVGhlIGRpc2FtYmlndWF0aW9uIGFsYnVtIGZpZWxkIGhlbHBzIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdGluZ3Vpc2ggYmV0d2VlbiBpZGVudGljYWxseSBuYW1lZCBhbGJ1bXMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIGFsYnVtIOKAnFdlZXplcuKAnSBmb3IgZXhhbXBsZSBoYXMgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYW1iaWd1YXRpb24gY29tbWVudHMg4oCcUmVkIEFsYnVt4oCdIGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKAnEdyZWVuIEFsYnVt4oCdLlxuICAgIFxuICAgICAgICAkYWxidW1zdGF0dXM6ICAgICAgICAgICAgICAgIFRoZSBzdGF0dXMgZGVzY3JpYmVzIGhvdyBcIm9mZmljaWFsXCIgYSByZWxlYXNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnb2ZmaWNpYWwnLCAncHJvbW90aW9uYWwnLCAnYm9vdGxlZycsICdwc2V1ZG8tcmVsZWFzZSddXG4gICAgXG4gICAgICAgICRhbGJ1bXR5cGU6ICAgICAgICAgICAgICAgICAgVGhlIE11c2ljQnJhaW56IGFsYnVtIHR5cGU7IHRoZSBNdXNpY0JyYWluelxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpa2kgaGFzIGEgbGlzdCBvZiB0eXBlIG5hbWVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnYWxidW0vc291bmR0cmFjayddXG4gICAgXG4gICAgICAgICRhcl9jbGFzc2ljYWxfYWxidW06ICAgICAgICAgVGhlIGZpZWxkIOKAnHdvcmvigJ0gd2l0aG91dCB0aGUgbW92ZW1lbnQgc3VmZml4LlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvciBleGFtcGxlOiDigJxIb3JuIENvbmNlcnRvOiBJLiBBbGxlZ3Jv4oCdIC0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oCcSG9ybiBDb25jZXJ0b+KAnVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0hvcm4gQ29uY2VydG8nLCAnRGllIE1laXN0ZXJzaW5nZXIgdm9uIE7DvHJuYmVyZyddXG4gICAgXG4gICAgICAgICRhcl9jbGFzc2ljYWxfcGVyZm9ybWVyOiAgICAg4oCcYXJfcGVyZm9ybWVyX3Nob3J04oCdIG9yIOKAnGFsYnVtYXJ0aXN04oCdIHdpdGhvdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY29tcG9zZXIgcHJlZml4OiDigJxCZWV0aG92ZW47IEthcmFqYW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXV0dGVy4oCdIC0+IOKAnEthcmFqYW4sIE11dHRlcuKAnVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0thcmFqYW4sIE11dHRlcicsICdLYXJhamFuLCBTdGFEcmUnXVxuICAgIFxuICAgICAgICAkYXJfY2xhc3NpY2FsX3RpdGxlOiAgICAgICAgIFRoZSBtb3ZlbWVudCB0aXRsZSB3aXRob3V0IHRoZSBwYXJlbnQgd29ya1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZpeC4gRm9yIGV4YW1wbGUg4oCcSG9ybiBDb25jZXJ0bzogSS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbGxlZ3Jv4oCdIC0+IOKAnEkuIEFsbGVncm/igJ1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydJLiBBbGxlZ3JvJywgJ0FrdCBJSUksIFN6ZW5lIFYuIFwiTW9yZ2VuZGxpY2ggbGV1Y2h0ZW5kIGltIHJvc2lnZW4gU2NoZWluXCIgKFdhbHRoZXIsIFZvbGssIE1laXN0ZXIsIFNhY2hzLCBQb2duZXIsIEV2YSknXVxuICAgIFxuICAgICAgICAkYXJfY2xhc3NpY2FsX3RyYWNrOiAgICAgICAgIElmIHRoZSB0aXRsZSBjb250YWlucyBSb21hbiBudW1iZXJzLCB0aGVuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlc2UgYXJlIGNvbnZlcnRlZCB0byBhcmFiaWMgbnVtYmVycyB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZGluZyB6ZXJvcy4gSWYgbm8gUm9tYW4gbnVtYmVycyBjb3VsZCBiZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kLCB0aGVuIHRoZSBmaWVsZCDigJxhcl9jb21iaW5lZF9kaXNjdHJhY2vigJ1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcyB1c2VkLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJzAxJywgJzQtMDgnXVxuICAgIFxuICAgICAgICAkYXJfY29tYmluZWRfYWxidW06ICAgICAgICAgIOKAnGFsYnVt4oCdIHdpdGhvdXQg4oCdIChEaXNjIFgp4oCdLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0hlYWRsaW5lcyBhbmQgRGVhZGxpbmVzOiBUaGUgSGl0cyBvZiBhLWhhJywgJ0RpZSBNZWlzdGVyc2luZ2VyIHZvbiBOw7xybmJlcmcnXVxuICAgIFxuICAgICAgICAkYXJfY29tYmluZWRfYXJ0aXN0OiAgICAgICAgIFRoZSBmaXJzdCBub24tZW1wdHkgdmFsdWUgb2YgdGhlIGZvbGxvd2luZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Qgb2YgZmllbGRzOiDigJxhbGJ1bWFydGlzdOKAnSAtPiDigJxhcnRpc3TigJ0gLT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxhbGJ1bWFydGlzdF9jcmVkaXTigJ0gLT4g4oCcYXJ0aXN0X2NyZWRpdOKAnSAtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKAnGFsYnVtYXJ0aXN0X3NvcnTigJ0gLT4g4oCcYXJ0aXN0X3NvcnTigJ0uIElmIG5vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgY291bGQgYmUgZGV0ZXJtaW5lZCwgdGhlbiDigJxVbmtub3du4oCdIGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNzaWduZWQuIFRoZSBzZWNvbmQgYXJ0aXN0IGFmdGVyIOKAnGZlYXQu4oCdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKAnGZ0LuKAnSBvciDigJx2cy7igJ0gaXMgcmVtb3ZlZC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydhLWhhJywgJ1JpY2hhcmQgV2FnbmVyOyBSZW7DqSBLb2xsbywgSGVsZW4gRG9uYXRoLCAuLi4nXVxuICAgIFxuICAgICAgICAkYXJfY29tYmluZWRfYXJ0aXN0X3NvcnQ6ICAgIFRoZSBmaXJzdCBub24tZW1wdHkgdmFsdWUgb2YgdGhlIGZvbGxvd2luZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Qgb2YgZmllbGRzOiDigJxhbGJ1bWFydGlzdF9zb3J04oCdIC0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oCcYXJ0aXN0X3NvcnTigJ0gLT4g4oCcYWxidW1hcnRpc3TigJ0gLT4g4oCcYXJ0aXN04oCdIC0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oCcYWxidW1hcnRpc3RfY3JlZGl04oCdIC0+IOKAnGFydGlzdF9jcmVkaXTigJ0uIElmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm8gdmFsdWUgY291bGQgYmUgZGV0ZXJtaW5lZCwgdGhlbiDigJxVbmtub3du4oCdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMgYXNzaWduZWQuIFRoZSBzZWNvbmQgYXJ0aXN0IGFmdGVyIOKAnGZlYXQu4oCdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKAnGZ0LuKAnSBvciDigJx2cy7igJ0gaXMgcmVtb3ZlZC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydhLWhhJywgJ1dhZ25lciwgUmljaGFyZDsgS29sbG8sIFJlbsOpLCBEb25hdGgsIEhlbGVuLi4uJ11cbiAgICBcbiAgICAgICAgJGFyX2NvbWJpbmVkX2NvbXBvc2VyOiAgICAgICBUaGUgZmlyc3Qgbm90IGVtcHR5IGZpZWxkIG9mIHRoaXMgZmllbGQgbGlzdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxjb21wb3Nlcl9zb3J04oCdLCDigJxjb21wb3NlcuKAnSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxhcl9jb21iaW5lZF9hcnRpc3TigJ1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydCZWV0aG92ZW4sIEx1ZHdpZy12YW4nLCAnV2FnbmVyLCBSaWNoYXJkJ11cbiAgICBcbiAgICAgICAgJGFyX2NvbWJpbmVkX2Rpc2N0cmFjazogICAgICBDb21iaW5hdGlvbiBvZiBkaXNjIGFuZCB0cmFjayBpbiB0aGUgZm9ybWF0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2stdHJhY2tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWycxLTAxJywgJzMtMDk5J11cbiAgICBcbiAgICAgICAgJGFyX2NvbWJpbmVkX3NvdW5kdHJhY2s6ICAgICBCb29sZWFuIGZsYWcgd2hpY2ggaW5kaWNhdGVzIGlmIHRoZSBhdWRpb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUgaXMgYSBzb3VuZHRyYWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFtUcnVlLCBGYWxzZV1cbiAgICBcbiAgICAgICAgJGFyX2NvbWJpbmVkX3dvcmtfdG9wOiAgICAgICBUaGUgd29yayBvbiB0aGUgdG9wIGxldmVsIG9mIGEgd29ya1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZXJhcmNoeS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydIb3JuIENvbmNlcnRvOiBJLiBBbGxlZ3JvJywgJ0RpZSBNZWlzdGVyc2luZ2VyIHZvbiBOw7xybmJlcmcnXVxuICAgIFxuICAgICAgICAkYXJfY29tYmluZWRfeWVhcjogICAgICAgICAgIEZpcnN0IOKAnG9yaWdpbmFsX3llYXLigJ0gdGhlbiDigJx5ZWFy4oCdLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMTk3OF1cbiAgICBcbiAgICAgICAgJGFyX2luaXRpYWxfYWxidW06ICAgICAgICAgICBGaXJzdCBjaGFyYWN0ZXIgaW4gbG93ZXJjYXNlIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oCcYXJfY29tYmluZWRfYWxidW3igJ0uIEFsbG93ZWQgY2hhcmFjdGVyczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYS16LCAwLCBfXSwgMC05IC0+IDAsID8gLT4gXy4gRm9yIGV4YW1wbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxIZWxwIeKAnSAtPiDigJxo4oCdLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ2gnXVxuICAgIFxuICAgICAgICAkYXJfaW5pdGlhbF9hcnRpc3Q6ICAgICAgICAgIEZpcnN0IGNoYXJhY3RlciBpbiBsb3dlcmNhc2Ugb2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxhcl9jb21iaW5lZF9hcnRpc3Rfc29ydOKAnS4gQWxsb3dlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJhY3RlcnM6IFthLXosIDAsIF9dLCAwLTkgLT4gMCwgPyAtPiBfLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvciBleGFtcGxlIOKAnEJyZW5kZWwsIEFsZnJlZOKAnSAtPiDigJxi4oCdLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ2InXVxuICAgIFxuICAgICAgICAkYXJfaW5pdGlhbF9jb21wb3NlcjogICAgICAgIEZpcnN0IGNoYXJhY3RlciBpbiBsb3dlcmNhc2Ugb2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxhcl9jb21iaW5lZF9jb21wb3NlcuKAnS4gQWxsb3dlZCBjaGFyYWN0ZXJzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFthLXosIDAsIF9dLCAwLTkgLT4gMCwgPyAtPiBfLiBGb3IgZXhhbXBsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKAnEx1ZHdpZyB2YW4gQmVldGhvdmVu4oCdIC0+IOKAnGzigJ0uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnbCddXG4gICAgXG4gICAgICAgICRhcl9wZXJmb3JtZXI6ICAgICAgICAgICAgICAgUGVyZm9ybWVyIG5hbWVzLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0hlcmJlcnQgdm9uIEthcmFqYW4sIFN0YWF0c2thcGVsbGUgRHJlc2RlbiddXG4gICAgXG4gICAgICAgICRhcl9wZXJmb3JtZXJfcmF3OiAgICAgICAgICAgUmF3IHBlcmZvcm1lciBuYW1lcy5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogW1tbJ2NvbmR1Y3RvcicsICdIZXJiZXJ0IHZvbiBLYXJhamFuJ10sIFsnb3JjaGVzdHJhJywgJ1N0YWF0c2thcGVsbGUgRHJlc2RlbiddXV1cbiAgICBcbiAgICAgICAgJGFyX3BlcmZvcm1lcl9zaG9ydDogICAgICAgICBBYmJyZXZpYXRlZCBwZXJmb3JtZXIgbmFtZXMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnS2FyYWphbiwgU3RhRHJlJ11cbiAgICBcbiAgICAgICAgJGFycmFuZ2VyOiAgICAgICAgICAgICAgICAgICBBIG11c2ljaWFuIHdobyBjcmVhdGVzIGFycmFuZ2VtZW50cy5cbiAgICBcbiAgICAgICAgJGFydDogICAgICAgICAgICAgICAgICAgICAgICBMZWdhY3kgYWxidW0gYXJ0IGZpZWxkLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbYidcXHhmZlxceGQ4XFx4ZmZcXHhlMFxceDAwJ11cbiAgICBcbiAgICAgICAgJGFydGlzdDogICAgICAgICAgICAgICAgICAgICBhcnRpc3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydUaGUgQmVhdGxlcyddXG4gICAgXG4gICAgICAgICRhcnRpc3RfY3JlZGl0OiAgICAgICAgICAgICAgVGhlIHRyYWNrLXNwZWNpZmljIGFydGlzdCBjcmVkaXQgbmFtZSwgd2hpY2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXkgYmUgYSB2YXJpYXRpb24gb2YgdGhlIGFydGlzdOKAmXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxjYW5vbmljYWzigJ0gbmFtZVxuICAgIFxuICAgICAgICAkYXJ0aXN0X3NvcnQ6ICAgICAgICAgICAgICAgIFRoZSDigJxzb3J0IG5hbWXigJ0gb2YgdGhlIHRyYWNrIGFydGlzdC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydCZWF0bGVzLCBUaGUnLCAnV2hpdGUsIEphY2snXVxuICAgIFxuICAgICAgICAkYXJ0aXN0czogICAgICAgICAgICAgICAgICAgIGFydGlzdHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogW1snYS1oYSddXVxuICAgIFxuICAgICAgICAkYXNpbjogICAgICAgICAgICAgICAgICAgICAgIEFtYXpvbiBTdGFuZGFyZCBJZGVudGlmaWNhdGlvbiBOdW1iZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydCMDAwMDAyVUFMJ11cbiAgICBcbiAgICAgICAgJGJhcmNvZGU6ICAgICAgICAgICAgICAgICAgICBUaGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2YgYmFyY29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXQgdGhlIG9uZXMgdXN1YWxseSBmb3VuZCBvbiBtdXNpYyByZWxlYXNlc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZSB0d286IDEuIFVuaXZlcnNhbCBQcm9kdWN0IENvZGUgKFVQQyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpY2ggaXMgdGhlIG9yaWdpbmFsIGJhcmNvZGUgdXNlZCBpbiBOb3J0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFtZXJpY2EuIDIuIEV1cm9wZWFuIEFydGljbGUgTnVtYmVyIChFQU4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnNTAyODQyMTkzMTgzOCcsICcwMzYwMDAyOTE0NTInXVxuICAgIFxuICAgICAgICAkYml0ZGVwdGg6ICAgICAgICAgICAgICAgICAgIG9ubHkgYXZhaWxhYmxlIGZvciBzb21lIGZvcm1hdHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWzE2XVxuICAgIFxuICAgICAgICAkYml0cmF0ZTogICAgICAgICAgICAgICAgICAgIGluIGtpbG9iaXRzIHBlciBzZWNvbmQsIHdpdGggdW5pdHM6IGUuZy4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oCcMTkya2Jwc+KAnVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbNDM2NTIzLCAyNTYwMDBdXG4gICAgXG4gICAgICAgICRiaXRyYXRlX21vZGU6ICAgICAgICAgICAgICAgYml0cmF0ZV9tb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnQ0JSJ11cbiAgICBcbiAgICAgICAgJGJwbTogICAgICAgICAgICAgICAgICAgICAgICBCZWF0cyBwZXIgTWludXRlXG4gICAgXG4gICAgICAgICRjYXRhbG9nbnVtOiAgICAgICAgICAgICAgICAgVGhpcyBpcyBhIG51bWJlciBhc3NpZ25lZCB0byB0aGUgcmVsZWFzZSBieVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBsYWJlbCB3aGljaCBjYW4gb2Z0ZW4gYmUgZm91bmQgb24gdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BpbmUgb3IgbmVhciB0aGUgYmFyY29kZS4gVGhlcmUgbWF5IGJlIG1vcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGFuIG9uZSwgZXNwZWNpYWxseSB3aGVuIG11bHRpcGxlIGxhYmVscyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZvbHZlZC4gVGhpcyBpcyBub3QgdGhlIEFTSU4g4oCUIHRoZXJlIGlzIGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGlvbnNoaXAgZm9yIHRoYXQg4oCUIG5vciB0aGUgbGFiZWwgY29kZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydDRFAgNyA0NjQzOSAyJ11cbiAgICBcbiAgICAgICAgJGNoYW5uZWxzOiAgICAgICAgICAgICAgICAgICBjaGFubmVsc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMSwgMl1cbiAgICBcbiAgICAgICAgJGNvbW1lbnRzOiAgICAgICAgICAgICAgICAgICBjb21tZW50c1xuICAgIFxuICAgICAgICAkY29tcDogICAgICAgICAgICAgICAgICAgICAgIENvbXBpbGF0aW9uIGZsYWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogW1RydWUsIEZhbHNlXVxuICAgIFxuICAgICAgICAkY29tcG9zZXI6ICAgICAgICAgICAgICAgICAgIFRoZSBuYW1lIG9mIHRoZSBjb21wb3Nlci5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydMdWR3aWcgdmFuIEJlZXRob3ZlbiddXG4gICAgXG4gICAgICAgICRjb21wb3Nlcl9zb3J0OiAgICAgICAgICAgICAgVGhlIGNvbXBvc2VyIG5hbWUgZm9yIHNvcnRpbmcuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnQmVldGhvdmVuLCBMdWR3aWcgdmFuJ11cbiAgICBcbiAgICAgICAgJGNvcHlyaWdodDogICAgICAgICAgICAgICAgICBjb3B5cmlnaHRcbiAgICBcbiAgICAgICAgJGNvdW50cnk6ICAgICAgICAgICAgICAgICAgICBUaGUgY291bnRyeSB0aGUgcmVsZWFzZSB3YXMgaXNzdWVkIGluLlxuICAgIFxuICAgICAgICAkZGF0ZTogICAgICAgICAgICAgICAgICAgICAgIFRoZSByZWxlYXNlIGRhdGEgb2YgdGhlIHNwZWNpZmljIHJlbGVhc2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnMTk5Ni0wMS0wMSddXG4gICAgXG4gICAgICAgICRkYXk6ICAgICAgICAgICAgICAgICAgICAgICAgVGhlIHJlbGVhc2UgZGF5IG9mIHRoZSBzcGVjaWZpYyByZWxlYXNlLlxuICAgIFxuICAgICAgICAkZGlzYzogICAgICAgICAgICAgICAgICAgICAgIGRpc2NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWzFdXG4gICAgXG4gICAgICAgICRkaXNjdGl0bGU6ICAgICAgICAgICAgICAgICAgZGlzY3RpdGxlXG4gICAgXG4gICAgICAgICRkaXNjdG90YWw6ICAgICAgICAgICAgICAgICAgZGlzY3RvdGFsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsxXVxuICAgIFxuICAgICAgICAkZW5jb2RlcjogICAgICAgICAgICAgICAgICAgIHRoZSBuYW1lIG9mIHRoZSBwZXJzb24gb3Igb3JnYW5pc2F0aW9uIHRoYXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGVkIHRoZSBhdWRpbyBmaWxlLiBUaGlzIGZpZWxkIG1heVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW4gYSBjb3B5cmlnaHQgbWVzc2FnZSwgaWYgdGhlIGF1ZGlvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSBhbHNvIGlzIGNvcHlyaWdodGVkIGJ5IHRoZSBlbmNvZGVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ2lUdW5lcyB2Ny42LjInXVxuICAgIFxuICAgICAgICAkZW5jb2Rlcl9pbmZvOiAgICAgICAgICAgICAgIGVuY29kZXJfaW5mb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0xBTUUgMy45Mi4wKyddXG4gICAgXG4gICAgICAgICRlbmNvZGVyX3NldHRpbmdzOiAgICAgICAgICAgZW5jb2Rlcl9zZXR0aW5nc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJy1iIDI1NSsnXVxuICAgIFxuICAgICAgICAkZm9ybWF0OiAgICAgICAgICAgICAgICAgICAgIGUuZy4sIOKAnE1QM+KAnSBvciDigJxGTEFD4oCdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnTVAzJywgJ0ZMQUMnXVxuICAgIFxuICAgICAgICAkZ2VucmU6ICAgICAgICAgICAgICAgICAgICAgIGdlbnJlXG4gICAgXG4gICAgICAgICRnZW5yZXM6ICAgICAgICAgICAgICAgICAgICAgZ2VucmVzXG4gICAgXG4gICAgICAgICRncm91cGluZzogICAgICAgICAgICAgICAgICAgQSBjb250ZW50IGdyb3VwLCB3aGljaCBpcyBhIGNvbGxlY3Rpb24gb2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZWRpYSBpdGVtcyBzdWNoIGFzIGEgQ0QgYm94ZWQgc2V0LlxuICAgIFxuICAgICAgICAkaW1hZ2VzOiAgICAgICAgICAgICAgICAgICAgIGltYWdlc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbWyc8bWVkaWFmaWxlLkltYWdlIG9iamVjdCBhdCAweDdmNTFmY2UyNmIyMD4nXV1cbiAgICBcbiAgICAgICAgJGluaXRpYWxfa2V5OiAgICAgICAgICAgICAgICBUaGUgSW5pdGlhbCBrZXkgZnJhbWUgY29udGFpbnMgdGhlIG11c2ljYWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXkgaW4gd2hpY2ggdGhlIHNvdW5kIHN0YXJ0cy4gSXQgaXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXByZXNlbnRlZCBhcyBhIHN0cmluZyB3aXRoIGEgbWF4aW11bSBsZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiB0aHJlZSBjaGFyYWN0ZXJzLiBUaGUgZ3JvdW5kIGtleXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwcmVzZW50ZWQgd2l0aCBcIkFcIixcIkJcIixcIkNcIixcIkRcIixcIkVcIiwgXCJGXCIgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJHXCIgYW5kIGhhbGZrZXlzIHJlcHJlc2VudGVkIHdpdGggXCJiXCIgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIjXCIuIE1pbm9yIGlzIHJlcHJlc2VudGVkIGFzIFwibVwiLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0RibSddXG4gICAgXG4gICAgICAgICRpc3JjOiAgICAgICAgICAgICAgICAgICAgICAgVGhlIEludGVybmF0aW9uYWwgU3RhbmRhcmQgUmVjb3JkaW5nIENvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJicmV2aWF0ZWQgdG8gSVNSQywgaXMgYSBzeXN0ZW0gb2YgY29kZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0IGlkZW50aWZ5IGF1ZGlvIGFuZCBtdXNpYyB2aWRlb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZGluZ3MuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnQ0FDMTE4OTg5MDAzJywgJ0lUTzEwMTExNzc0MCddXG4gICAgXG4gICAgICAgICRsYWJlbDogICAgICAgICAgICAgICAgICAgICAgVGhlIGxhYmVsIHdoaWNoIGlzc3VlZCB0aGUgcmVsZWFzZS4gVGhlcmUgbWF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgbW9yZSB0aGFuIG9uZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydCcmlsbGlhbnQgQ2xhc3NpY3MnLCAnd2VhJ11cbiAgICBcbiAgICAgICAgJGxhbmd1YWdlOiAgICAgICAgICAgICAgICAgICBUaGUgbGFuZ3VhZ2UgYSByZWxlYXNl4oCZcyB0cmFjayBsaXN0IGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdHRlbiBpbi4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgdGFrZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIHRoZSBJU08gNjM5LTMgc3RhbmRhcmQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnenh4JywgJ2VuZyddXG4gICAgXG4gICAgICAgICRsZW5ndGg6ICAgICAgICAgICAgICAgICAgICAgVGhlIGxlbmd0aCBvZiBhIHJlY29yZGluZyBpbiBzZWNvbmRzLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbNjc0LjQ2NjY2NjY2NjY2NjddXG4gICAgXG4gICAgICAgICRseXJpY2lzdDogICAgICAgICAgICAgICAgICAgVGhlIHdyaXRlciBvZiB0aGUgdGV4dCBvciBseXJpY3MgaW4gdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkaW5nLlxuICAgIFxuICAgICAgICAkbHlyaWNzOiAgICAgICAgICAgICAgICAgICAgIFRoZSBseXJpY3Mgb2YgdGhlIHNvbmcgb3IgYSB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNjcmlwdGlvbiBvZiBvdGhlciB2b2NhbCBhY3Rpdml0aWVzLlxuICAgIFxuICAgICAgICAkbWJfYWxidW1hcnRpc3RpZDogICAgICAgICAgIE11c2ljQnJhaW56IGFsYnVtIGFydGlzdCBJRC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWycxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzknLCAnYjk3MmY1ODktZmIwZS00NzRlLWI2NGEtODAzYjAzNjRmYTc1J11cbiAgICBcbiAgICAgICAgJG1iX2FsYnVtYXJ0aXN0aWRzOiAgICAgICAgICBNdXNpY0JyYWlueiBhbGJ1bSBhcnRpc3QgSURzIGFzIGEgbGlzdC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogW1snYjk3MmY1ODktZmIwZS00NzRlLWI2NGEtODAzYjAzNjRmYTc1JywgJ2RlYTI4YWE5LTEwODYtNGZmYS04NzM5LTBjY2M3NTlkZTFjZScsICdkMmNlZDJmMS02YjU4LTQ3Y2YtYWU4Ny01OTQzZTJhYjZkOTknXV1cbiAgICBcbiAgICAgICAgJG1iX2FsYnVtaWQ6ICAgICAgICAgICAgICAgICBNdXNpY0JyYWlueiBhbGJ1bSBJRC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydmZDZhZGM3Ny0xNDg5LTRhMTMtOWFhMC0zMjk1MTA2MWQ5MmInXVxuICAgIFxuICAgICAgICAkbWJfYXJ0aXN0aWQ6ICAgICAgICAgICAgICAgIE11c2ljQnJhaW56IGFydGlzdCBJRC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWycxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzknXVxuICAgIFxuICAgICAgICAkbWJfYXJ0aXN0aWRzOiAgICAgICAgICAgICAgIE11c2ljQnJhaW56IGFydGlzdCBJRHMgYXMgYSBsaXN0LlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbWycxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzknXV1cbiAgICBcbiAgICAgICAgJG1iX3JlbGVhc2Vncm91cGlkOiAgICAgICAgICBNdXNpY0JyYWlueiByZWxlYXNlZ3JvdXAgSUQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnZjcxNGZkNzAtYWFjYS00ODYzLTlkMGQtMjc2OGE1M2FjYWViJ11cbiAgICBcbiAgICAgICAgJG1iX3JlbGVhc2V0cmFja2lkOiAgICAgICAgICBNdXNpY0JyYWlueiByZWxlYXNlIHRyYWNrIElELlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJzM4YzhjMTE0LTVlM2ItNDg0Zi04YWYwLTc5YzQ3ZWY5YzE2OSddXG4gICAgXG4gICAgICAgICRtYl90cmFja2lkOiAgICAgICAgICAgICAgICAgTXVzaWNCcmFpbnogdHJhY2sgSUQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnYzM5MGIxMzItNGE0NC00ZTE2LWJlYzMtYmZmYmJjYWExOWFhJ11cbiAgICBcbiAgICAgICAgJG1iX3dvcmtoaWVyYXJjaHlfaWRzOiAgICAgICBBbGwgSURzIGluIHRoZSB3b3JrIGhpZXJhcmNoeS4gVGhpcyBmaWVsZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvcnJlc3BvbmRzIHRvIHRoZSBmaWVsZCBgd29ya19oaWVyYXJjaHlgLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSB0b3AgbGV2ZWwgd29yayBJRCBhcHBlYXJzIGZpcnN0LiBBIHNsYXNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKC8pIGlzIHVzZWQgYXMgc2VwYXJhdG9yLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ2UyMDhjNWY1LTVkMzctM2RmYy1hYzBiLTk5OWYyMDdjOWU0NiAvIDVhZGMyMTNmLTcwMGEtNDQzNS05ZTk1LTgzMWVkNzIwZjM0OCAvIGVhZmVjNTFmLTQ3YzUtM2M2Ni04YzM2LWE1MjQyNDZjODVmOCddXG4gICAgXG4gICAgICAgICRtYl93b3JraWQ6ICAgICAgICAgICAgICAgICAgTXVzaWNCcmFpbnogd29yayBJRC5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWyc1MDhlYzRiMS05NTQ5LTM4Y2QtYTYxZS0xZjBkMTIwYTYxMTgnXVxuICAgIFxuICAgICAgICAkbWVkaWE6ICAgICAgICAgICAgICAgICAgICAgIEEgcHJvdG90eXBpY2FsIG1lZGl1bSBpcyBvbmUgb2YgdGhlIHBoeXNpY2FsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcGFyYXRlIHRoaW5ncyB5b3Ugd291bGQgZ2V0IHdoZW4geW91IGJ1eVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvbWV0aGluZyBpbiBhIHJlY29yZCBzdG9yZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWydDRCddXG4gICAgXG4gICAgICAgICRtb250aDogICAgICAgICAgICAgICAgICAgICAgVGhlIHJlbGVhc2UgbW9udGggb2YgdGhlIHNwZWNpZmljIHJlbGVhc2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsxMV1cbiAgICBcbiAgICAgICAgJG9yaWdpbmFsX2RhdGU6ICAgICAgICAgICAgICBUaGUgcmVsZWFzZSBkYXRlIG9mIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGFsYnVtLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJzE5OTEtMTEtMDQnXVxuICAgIFxuICAgICAgICAkb3JpZ2luYWxfZGF5OiAgICAgICAgICAgICAgIFRoZSByZWxlYXNlIGRheSBvZiB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvZlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBhbGJ1bS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWzRdXG4gICAgXG4gICAgICAgICRvcmlnaW5hbF9tb250aDogICAgICAgICAgICAgVGhlIHJlbGVhc2UgbW9udGggb2YgdGhlIG9yaWdpbmFsIHZlcnNpb24gb2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgYWxidW0uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsxMV1cbiAgICBcbiAgICAgICAgJG9yaWdpbmFsX3llYXI6ICAgICAgICAgICAgICBUaGUgcmVsZWFzZSB5ZWFyIG9mIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGFsYnVtLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMTk5MV1cbiAgICBcbiAgICAgICAgJHIxMjhfYWxidW1fZ2FpbjogICAgICAgICAgICBBbiBvcHRpb25hbCBnYWluIGZvciBhbGJ1bSBub3JtYWxpemF0aW9uLiBFQlVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSIDEyOCBpcyBhIHJlY29tbWVuZGF0aW9uIGZvciBsb3VkbmVzc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vcm1hbGlzYXRpb24gYW5kIG1heGltdW0gbGV2ZWwgb2YgYXVkaW9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduYWxzLlxuICAgIFxuICAgICAgICAkcjEyOF90cmFja19nYWluOiAgICAgICAgICAgIEFuIG9wdGlvbmFsIGdhaW4gZm9yIHRyYWNrIG5vcm1hbGl6YXRpb24uIEVCVVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFIgMTI4IGlzIGEgcmVjb21tZW5kYXRpb24gZm9yIGxvdWRuZXNzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9ybWFsaXNhdGlvbiBhbmQgbWF4aW11bSBsZXZlbCBvZiBhdWRpb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbHMuXG4gICAgXG4gICAgICAgICRyZWxlYXNlZ3JvdXBfdHlwZXM6ICAgICAgICAgVGhpcyBmaWVsZCBjb2xsZWN0cyBhbGwgaXRlbXMgaW4gdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXVzaWNCcmFpbnrigJkgQVBJICByZWxhdGVkIHRvIHR5cGU6IGB0eXBlYCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgcHJpbWFyeS10eXBlIGFuZCBgc2Vjb25kYXJ5LXR5cGUtbGlzdGAuIE1haW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2FnZSBvZiB0aGlzIGZpZWxkIGlzIHRvIGRldGVybWluZSBpbiBhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdXJlIG1hbm5lciBpZiB0aGUgcmVsZWFzZSBpcyBhIHNvdW5kdHJhY2suXG4gICAgXG4gICAgICAgICRyZ19hbGJ1bV9nYWluOiAgICAgICAgICAgICAgUmVwbGF5R2FpbiBBbGJ1bSBHYWluLCBzZWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SZXBsYXlHYWluLlxuICAgIFxuICAgICAgICAkcmdfYWxidW1fcGVhazogICAgICAgICAgICAgIFJlcGxheUdhaW4gQWxidW0gUGVhaywgc2VlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUmVwbGF5R2Fpbi5cbiAgICBcbiAgICAgICAgJHJnX3RyYWNrX2dhaW46ICAgICAgICAgICAgICBSZXBsYXlHYWluIFRyYWNrIEdhaW4sIHNlZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JlcGxheUdhaW4uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFswLjBdXG4gICAgXG4gICAgICAgICRyZ190cmFja19wZWFrOiAgICAgICAgICAgICAgUmVwbGF5R2FpbiBUcmFjayBQZWFrLCBzZWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SZXBsYXlHYWluLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMC4wMDAyNDRdXG4gICAgXG4gICAgICAgICRzYW1wbGVyYXRlOiAgICAgICAgICAgICAgICAgVGhlIHNhbXBsZSByYXRlIGFzIGFuIGludGVnZXIgbnVtYmVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbNDQxMDBdXG4gICAgXG4gICAgICAgICRzY3JpcHQ6ICAgICAgICAgICAgICAgICAgICAgVGhlIHNjcmlwdCB1c2VkIHRvIHdyaXRlIHRoZSByZWxlYXNl4oCZcyB0cmFja1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QuIFRoZSBwb3NzaWJsZSB2YWx1ZXMgYXJlIHRha2VuIGZyb20gdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSVNPIDE1OTI0IHN0YW5kYXJkLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbJ0xhdG4nXVxuICAgIFxuICAgICAgICAkdGl0bGU6ICAgICAgICAgICAgICAgICAgICAgIFRoZSB0aXRsZSBvZiBhIGF1ZGlvIGZpbGUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnMzIgVmFyaWF0aW9ucyBmb3IgUGlhbm8gaW4gQyBtaW5vciBvbiBhbiBPcmlnaW5hbCBUaGVtZSwgV29PIDgwJ11cbiAgICBcbiAgICAgICAgJHRyYWNrOiAgICAgICAgICAgICAgICAgICAgICBUaGUgdHJhY2sgbnVtYmVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMV1cbiAgICBcbiAgICAgICAgJHRyYWNrdG90YWw6ICAgICAgICAgICAgICAgICBUaGUgdG90YWwgdHJhY2sgbnVtYmVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4YW1wbGVzOiBbMTJdXG4gICAgXG4gICAgICAgICR1cmw6ICAgICAgICAgICAgICAgICAgICAgICAgVW5pZm9ybSBSZXNvdXJjZSBMb2NhdG9yLlxuICAgIFxuICAgICAgICAkd29yazogICAgICAgICAgICAgICAgICAgICAgIFRoZSBNdXNpY2JyYWluenPigJkgd29yayBlbnRpdHkuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnMzIgVmFyaWF0aW9ucyBmb3IgUGlhbm8gaW4gQyBtaW5vciBvbiBhbiBPcmlnaW5hbCBUaGVtZSwgV29PIDgwJ11cbiAgICBcbiAgICAgICAgJHdvcmtfaGllcmFyY2h5OiAgICAgICAgICAgICBUaGUgaGllcmFyY2h5IG9mIHdvcmtzOiBUaGUgdG9wIGxldmVsIHdvcmtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBlYXJzIGZpcnN0LiBBcyBzZXBhcmF0b3IgaXMgdGhpcyBzdHJpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VkOiAtLT4uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhhbXBsZXM6IFsnRGllIFphdWJlcmZsw7Z0ZSwgSy4gNjIwIC0tPiBEaWUgWmF1YmVyZmzDtnRlLCBLLiA2MjA6IEFrdCBJIC0tPiBEaWUgWmF1YmVyZmzDtnRlLCBLLiA2MjA6IEFjdCBJLCBTY2VuZSBJSS4gTm8uIDIgQXJpYSBcIldhcyBow7ZyIC4uLiddXG4gICAgXG4gICAgICAgICR5ZWFyOiAgICAgICAgICAgICAgICAgICAgICAgVGhlIHJlbGVhc2UgeWVhciBvZiB0aGUgc3BlY2lmaWMgcmVsZWFzZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGFtcGxlczogWzIwMDFdXG4gICAgXG4gICAgRnVuY3Rpb25zXG4gICAgPT09PT09PT09XG4gICAgXG4gICAgICAgIGFscGhhXG4gICAgICAgIC0tLS0tXG4gICAgXG4gICAgICAgICVhbHBoYXt0ZXh0fVxuICAgICAgICAgICAgVGhpcyBmdW5jdGlvbiBmaXJzdCBBU0NJSWZpZXMgdGhlIGdpdmVuIHRleHQsIHRoZW4gYWxsIG5vbiBhbHBoYWJldFxuICAgICAgICAgICAgY2hhcmFjdGVycyBhcmUgcmVwbGFjZWQgd2l0aCB3aGl0ZXNwYWNlcy5cbiAgICBcbiAgICAgICAgYWxwaGFudW1cbiAgICAgICAgLS0tLS0tLS1cbiAgICBcbiAgICAgICAgJWFscGhhbnVte3RleHR9XG4gICAgICAgICAgICBUaGlzIGZ1bmN0aW9uIGZpcnN0IEFTQ0lJZmllcyB0aGUgZ2l2ZW4gdGV4dCwgdGhlbiBhbGwgbm9uIGFscGFudW1lcmljXG4gICAgICAgICAgICBjaGFyYWN0ZXJzIGFyZSByZXBsYWNlZCB3aXRoIHdoaXRlc3BhY2VzLlxuICAgIFxuICAgICAgICBhc2NpaWZ5XG4gICAgICAgIC0tLS0tLS1cbiAgICBcbiAgICAgICAgJWFzY2lpZnl7dGV4dH1cbiAgICAgICAgICAgIFRyYW5zbGF0ZSBub24tQVNDSUkgY2hhcmFjdGVycyB0byB0aGVpciBBU0NJSSBlcXVpdmFsZW50cy4gRm9yXG4gICAgICAgICAgICBleGFtcGxlLCDigJxjYWbDqeKAnSBiZWNvbWVzIOKAnGNhZmXigJ0uIFVzZXMgdGhlIG1hcHBpbmcgcHJvdmlkZWQgYnkgdGhlXG4gICAgICAgICAgICB1bmlkZWNvZGUgbW9kdWxlLlxuICAgIFxuICAgICAgICBkZWxjaGFyc1xuICAgICAgICAtLS0tLS0tLVxuICAgIFxuICAgICAgICAlZGVsY2hhcnN7dGV4dCxjaGFyc31cbiAgICAgICAgICAgIERlbGV0ZSBldmVyeSBzaW5nbGUgY2hhcmFjdGVyIG9mIOKAnGNoYXJz4oCcIGluIOKAnHRleHTigJ0uXG4gICAgXG4gICAgICAgIGRlbGR1cGNoYXJzXG4gICAgICAgIC0tLS0tLS0tLS0tXG4gICAgXG4gICAgICAgICVkZWxkdXBjaGFyc3t0ZXh0LGNoYXJzfVxuICAgICAgICAgICAgU2VhcmNoIGZvciBkdXBsaWNhdGUgY2hhcmFjdGVycyBhbmQgcmVwbGFjZSB3aXRoIG9ubHkgb25lIG9jY3VycmFuY2VcbiAgICAgICAgICAgIG9mIHRoaXMgY2hhcmFjdGVycy5cbiAgICBcbiAgICAgICAgZmlyc3RcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJWZpcnN0e3RleHR9IG9yICVmaXJzdHt0ZXh0LGNvdW50LHNraXB9IG9yXG4gICAgICAgICVmaXJzdHt0ZXh0LGNvdW50LHNraXAsc2VwLGpvaW59XG4gICAgICAgICAgICBSZXR1cm5zIHRoZSBmaXJzdCBpdGVtLCBzZXBhcmF0ZWQgYnkgOyAuIFlvdSBjYW4gdXNlXG4gICAgICAgICAgICAlZmlyc3R7dGV4dCxjb3VudCxza2lwfSwgd2hlcmUgY291bnQgaXMgdGhlIG51bWJlciBvZiBpdGVtcyAoZGVmYXVsdFxuICAgICAgICAgICAgMSkgYW5kIHNraXAgaXMgbnVtYmVyIHRvIHNraXAgKGRlZmF1bHQgMCkuIFlvdSBjYW4gYWxzbyB1c2VcbiAgICAgICAgICAgICVmaXJzdHt0ZXh0LGNvdW50LHNraXAsc2VwLGpvaW59IHdoZXJlIHNlcCBpcyB0aGUgc2VwYXJhdG9yLCBsaWtlIDsgb3JcbiAgICAgICAgICAgIC8gYW5kIGpvaW4gaXMgdGhlIHRleHQgdG8gY29uY2F0ZW5hdGUgdGhlIGl0ZW1zLlxuICAgIFxuICAgICAgICBpZlxuICAgICAgICAtLVxuICAgIFxuICAgICAgICAlaWZ7Y29uZGl0aW9uLHRydWV0ZXh0fSBvciAlaWZ7Y29uZGl0aW9uLHRydWV0ZXh0LGZhbHNldGV4dH1cbiAgICAgICAgICAgIElmIGNvbmRpdGlvbiBpcyBub25lbXB0eSAob3Igbm9uemVybywgaWYgaXTigJlzIGEgbnVtYmVyKSwgdGhlbiByZXR1cm5zXG4gICAgICAgICAgICB0aGUgc2Vjb25kIGFyZ3VtZW50LiBPdGhlcndpc2UsIHJldHVybnMgdGhlIHRoaXJkIGFyZ3VtZW50IGlmXG4gICAgICAgICAgICBzcGVjaWZpZWQgKG9yIG5vdGhpbmcgaWYgZmFsc2V0ZXh0IGlzIGxlZnQgb2ZmKS5cbiAgICBcbiAgICAgICAgaWZkZWZcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJWlmZGVme2ZpZWxkfSwgJWlmZGVme2ZpZWxkLHRleHR9IG9yICVpZmRlZntmaWVsZCx0ZXh0LGZhbHNldGV4dH1cbiAgICAgICAgICAgIElmIGZpZWxkIGV4aXN0cywgdGhlbiByZXR1cm4gdHJ1ZXRleHQgb3IgZmllbGQgKGRlZmF1bHQpLiBPdGhlcndpc2UsXG4gICAgICAgICAgICByZXR1cm5zIGZhbHNldGV4dC4gVGhlIGZpZWxkIHNob3VsZCBiZSBlbnRlcmVkIHdpdGhvdXQgJC5cbiAgICBcbiAgICAgICAgaWZkZWZlbXB0eVxuICAgICAgICAtLS0tLS0tLS0tXG4gICAgXG4gICAgICAgICVpZmRlZmVtcHR5e2ZpZWxkLHRleHR9IG9yICVpZmRlZmVtcHR5e2ZpZWxkLHRleHQsZmFsc2V0ZXh0fVxuICAgICAgICAgICAgSWYgZmllbGQgZXhpc3RzIGFuZCBpcyBlbXB0eSwgdGhlbiByZXR1cm4gdHJ1ZXRleHQuIE90aGVyd2lzZSwgcmV0dXJuc1xuICAgICAgICAgICAgZmFsc2V0ZXh0LiBUaGUgZmllbGQgc2hvdWxkIGJlIGVudGVyZWQgd2l0aG91dCAkLlxuICAgIFxuICAgICAgICBpZmRlZm5vdGVtcHR5XG4gICAgICAgIC0tLS0tLS0tLS0tLS1cbiAgICBcbiAgICAgICAgJWlmZGVmbm90ZW1wdHl7ZmllbGQsdGV4dH0gb3IgJWlmZGVmbm90ZW1wdHl7ZmllbGQsdGV4dCxmYWxzZXRleHR9XG4gICAgICAgICAgICBJZiBmaWVsZCBpcyBub3QgZW1wdHksIHRoZW4gcmV0dXJuIHRydWV0ZXh0LiBPdGhlcndpc2UsIHJldHVybnNcbiAgICAgICAgICAgIGZhbHNldGV4dC4gVGhlIGZpZWxkIHNob3VsZCBiZSBlbnRlcmVkIHdpdGhvdXQgJC5cbiAgICBcbiAgICAgICAgaW5pdGlhbFxuICAgICAgICAtLS0tLS0tXG4gICAgXG4gICAgICAgICVpbml0aWFse3RleHR9XG4gICAgICAgICAgICBHZXQgdGhlIGZpcnN0IGNoYXJhY3RlciBvZiBhIHRleHQgaW4gbG93ZXJjYXNlLiBUaGUgdGV4dCBpcyBjb252ZXJ0ZWRcbiAgICAgICAgICAgIHRvIEFTQ0lJLiBBbGwgbm9uIHdvcmQgY2hhcmFjdGVycyBhcmUgZXJhc2VkLlxuICAgIFxuICAgICAgICBsZWZ0XG4gICAgICAgIC0tLS1cbiAgICBcbiAgICAgICAgJWxlZnR7dGV4dCxufVxuICAgICAgICAgICAgUmV0dXJuIHRoZSBmaXJzdCDigJxu4oCdIGNoYXJhY3RlcnMgb2Yg4oCcdGV4dOKAnS5cbiAgICBcbiAgICAgICAgbG93ZXJcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJWxvd2Vye3RleHR9XG4gICAgICAgICAgICBDb252ZXJ0IOKAnHRleHTigJ0gdG8gbG93ZXJjYXNlLlxuICAgIFxuICAgICAgICBub3doaXRlc3BhY2VcbiAgICAgICAgLS0tLS0tLS0tLS0tXG4gICAgXG4gICAgICAgICVub3doaXRlc3BhY2V7dGV4dCxyZXBsYWNlfVxuICAgICAgICAgICAgUmVwbGFjZSBhbGwgd2hpdGVzcGFjZSBjaGFyYWN0ZXJzIHdpdGggcmVwbGFjZS4gQnkgZGVmYXVsdDogYSBkYXNoICgtKVxuICAgICAgICAgICAgJW5vd2hpdGVzcGFjZXskdHJhY2ssX31cbiAgICBcbiAgICAgICAgbnVtXG4gICAgICAgIC0tLVxuICAgIFxuICAgICAgICAlbnVte251bWJlcixjb3VudH1cbiAgICAgICAgICAgIFBhZCBkZWNpbWFsIG51bWJlciB3aXRoIGxlYWRpbmcgemVyb3MuXG4gICAgICAgICAgICAlbnVteyR0cmFjaywzfVxuICAgIFxuICAgICAgICByZXBsY2hhcnNcbiAgICAgICAgLS0tLS0tLS0tXG4gICAgXG4gICAgICAgICVyZXBsY2hhcnN7dGV4dCxjaGFycyxyZXBsYWNlfVxuICAgICAgICAgICAgUmVwbGFjZSB0aGUgY2hhcmFjdGVycyDigJxjaGFyc+KAnSBpbiDigJx0ZXh04oCdIHdpdGgg4oCccmVwbGFjZeKAnS5cbiAgICAgICAgICAgICVyZXBsY2hhcnN7dGV4dCxleCwtfSA+IHQtLXRcbiAgICBcbiAgICAgICAgcmlnaHRcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJXJpZ2h0e3RleHQsbn1cbiAgICAgICAgICAgIFJldHVybiB0aGUgbGFzdCDigJxu4oCdIGNoYXJhY3RlcnMgb2Yg4oCcdGV4dOKAnS5cbiAgICBcbiAgICAgICAgc2FuaXRpemVcbiAgICAgICAgLS0tLS0tLS1cbiAgICBcbiAgICAgICAgJXNhbml0aXple3RleHR9XG4gICAgICAgICAgICBEZWxldGUgaW4gbW9zdCBmaWxlIHN5c3RlbXMgbm90IGFsbG93ZWQgY2hhcmFjdGVycy5cbiAgICBcbiAgICAgICAgc2hvcnRlblxuICAgICAgICAtLS0tLS0tXG4gICAgXG4gICAgICAgICVzaG9ydGVue3RleHR9IG9yICVzaG9ydGVue3RleHQsbWF4X3NpemV9XG4gICAgICAgICAgICBTaG9ydGVuIOKAnHRleHTigJ0gb24gd29yZCBib3VuZGFyeXMuXG4gICAgICAgICAgICAlc2hvcnRlbnskdGl0bGUsMzJ9XG4gICAgXG4gICAgICAgIHRpbWVcbiAgICAgICAgLS0tLVxuICAgIFxuICAgICAgICAldGltZXtkYXRlX3RpbWUsZm9ybWF0LGN1cmZvcm1hdH1cbiAgICAgICAgICAgIFJldHVybiB0aGUgZGF0ZSBhbmQgdGltZSBpbiBhbnkgZm9ybWF0IGFjY2VwdGVkIGJ5IHN0cmZ0aW1lLiBGb3JcbiAgICAgICAgICAgIGV4YW1wbGUsIHRvIGdldCB0aGUgeWVhciBzb21lIG11c2ljIHdhcyBhZGRlZCB0byB5b3VyIGxpYnJhcnksIHVzZVxuICAgICAgICAgICAgJXRpbWV7JGFkZGVkLCVZfS5cbiAgICBcbiAgICAgICAgdGl0bGVcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJXRpdGxle3RleHR9XG4gICAgICAgICAgICBDb252ZXJ0IOKAnHRleHTigJ0gdG8gVGl0bGUgQ2FzZS5cbiAgICBcbiAgICAgICAgdXBwZXJcbiAgICAgICAgLS0tLS1cbiAgICBcbiAgICAgICAgJXVwcGVye3RleHR9XG4gICAgICAgICAgICBDb252ZXJ0IOKAnHRleHTigJ0gdG8gVVBQRVJDQVNFLlxuICAgIFxuICAgIENvbmZpZ3VyYXRpb24gZmlsZVxuICAgID09PT09PT09PT09PT09PT09PVxuICAgIFxuICAgICAgICBbc2VsZWN0aW9uXVxuICAgICAgICBzb3VyY2UgPSAvaG9tZS91c2VyL3NvdXJjZVxuICAgICAgICB0YXJnZXQgPSAvaG9tZS91c2VyL3RhcmdldFxuICAgICAgICBzb3VyY2VfYXNfdGFyZ2V0ID0gRmFsc2VcbiAgICAgICAgXG4gICAgICAgIFtyZW5hbWVdXG4gICAgICAgIGJhY2t1cF9mb2xkZXIgPSAvdG1wL2JhY2t1cFxuICAgICAgICBiZXN0X2Zvcm1hdCA9IFRydWVcbiAgICAgICAgZHJ5X3J1biA9IEZhbHNlXG4gICAgICAgIFxuICAgICAgICA7IHNlZSAtLW1vdmUsIC0tY29weSBvciAtLW5vLXJlbmFtZVxuICAgICAgICA7IOKAnG1vdmXigJ0sIOKAnGNvcHnigJ0gb3Ig4oCcbm9fcmVuYW1l4oCdXG4gICAgICAgIG1vdmVfYWN0aW9uID0gbW92ZVxuICAgICAgICBcbiAgICAgICAgOyBzZWUgLS1iYWNrdXAsIC0tZGVsZXRlXG4gICAgICAgIDsg4oCcYmFja3Vw4oCdLCDigJxkZWxldGXigJ0gb3Ig4oCcZG9fbm90aGluZ+KAnVxuICAgICAgICBjbGVhbmluZ19hY3Rpb24gPSBkb19ub3RoaW5nXG4gICAgICAgIFxuICAgICAgICBbZmlsdGVyc11cbiAgICAgICAgYWxidW1fY29tcGxldGUgPSBGYWxzZVxuICAgICAgICBhbGJ1bV9taW4gPSA3XG4gICAgICAgIGV4dGVuc2lvbiA9IG1wMyxtNGEsZmxhYyx3bWFcbiAgICAgICAgZ2VucmVfY2xhc3NpY2FsID0gQ2xhc3NpY2FsIG11c2ljLE9wZXJhLFN5bXBob255XG4gICAgICAgIGZpZWxkX3NraXAgPSB0aXRsZVxuICAgICAgICBcbiAgICAgICAgW3RlbXBsYXRlX3NldHRpbmdzXVxuICAgICAgICBjbGFzc2ljYWwgPSBGYWxzZVxuICAgICAgICBzaGVsbF9mcmllbmRseSA9IEZhbHNlXG4gICAgICAgIG5vX3NvdW5kdHJhY2sgPSBGYWxzZVxuICAgICAgICBcbiAgICAgICAgW3BhdGhfdGVtcGxhdGVzXVxuICAgICAgICBkZWZhdWx0X3RlbXBsYXRlID0gJGFyX2luaXRpYWxfYXJ0aXN0LyVzaG9ydGVueyRhcl9jb21iaW5lZF9hcnRpc3Rfc29ydH0vJXNob3J0ZW57JGFyX2NvbWJpbmVkX2FsYnVtfSVpZmRlZm5vdGVtcHR5e2FyX2NvbWJpbmVkX3llYXIsXyR7YXJfY29tYmluZWRfeWVhcn19LyR7YXJfY29tYmluZWRfZGlzY3RyYWNrfV8lc2hvcnRlbnskdGl0bGV9XG4gICAgICAgIGNvbXBpbGF0aW9uX3RlbXBsYXRlID0gX2NvbXBpbGF0aW9ucy8kYXJfaW5pdGlhbF9hbGJ1bS8lc2hvcnRlbnskYXJfY29tYmluZWRfYWxidW19JWlmZGVmbm90ZW1wdHl7YXJfY29tYmluZWRfeWVhcixfJHthcl9jb21iaW5lZF95ZWFyfX0vJHthcl9jb21iaW5lZF9kaXNjdHJhY2t9XyVzaG9ydGVueyR0aXRsZX1cbiAgICAgICAgc291bmR0cmFja190ZW1wbGF0ZSA9IF9zb3VuZHRyYWNrLyRhcl9pbml0aWFsX2FsYnVtLyVzaG9ydGVueyRhcl9jb21iaW5lZF9hbGJ1bX0laWZkZWZub3RlbXB0eXthcl9jb21iaW5lZF95ZWFyLF8ke2FyX2NvbWJpbmVkX3llYXJ9fS8ke2FyX2NvbWJpbmVkX2Rpc2N0cmFja31fJHthcnRpc3R9XyVzaG9ydGVueyR0aXRsZX1cbiAgICAgICAgY2xhc3NpY2FsX3RlbXBsYXRlID0gJGFyX2luaXRpYWxfY29tcG9zZXIvJGFyX2NvbWJpbmVkX2NvbXBvc2VyLyVzaG9ydGVueyRhcl9jb21iaW5lZF93b3JrX3RvcCw0OH1fWyVzaG9ydGVueyRhcl9jbGFzc2ljYWxfcGVyZm9ybWVyLDMyfV0vJHthcl9jb21iaW5lZF9kaXNjdHJhY2t9XyVzaG9ydGVueyRhcl9jbGFzc2ljYWxfdGl0bGUsNjR9JWlmZGVmbm90ZW1wdHl7YWNvdXN0aWRfaWQsXyVzaG9ydGVueyRhY291c3RpZF9pZCw4fX1cbiAgICAgICAgXG4gICAgICAgIFtjbGlfb3V0cHV0XVxuICAgICAgICA7IHNlZSAtLWNvbG9yIG9yIC0tbm8tY29sb3JcbiAgICAgICAgY29sb3IgPSBUcnVlXG4gICAgICAgIFxuICAgICAgICBkZWJ1ZyA9IEZhbHNlXG4gICAgICAgIGpvYl9pbmZvID0gRmFsc2VcbiAgICAgICAgbWJfdHJhY2tfbGlzdGluZyA9IEZhbHNlXG4gICAgICAgIG9uZV9saW5lID0gRmFsc2VcbiAgICAgICAgc3RhdHMgPSBUcnVlXG4gICAgICAgIHZlcmJvc2UgPSBGYWxzZVxuICAgICAgICBcbiAgICAgICAgW21ldGFkYXRhX2FjdGlvbnNdXG4gICAgICAgIGVucmljaF9tZXRhZGF0YSA9IEZhbHNlXG4gICAgICAgIHJlbWFwX2NsYXNzaWNhbCA9IEZhbHNlXG4gICAgICAgIFxuICAgIFxuICAgIG9wdGlvbmFsIGFyZ3VtZW50czpcbiAgICAgIC1oLCAtLWhlbHAgICAgICAgICAgICBzaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0XG4gICAgICAtLWNvbmZpZyBDT05GSUcgICAgICAgTG9hZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBpbiBJTkkgZm9ybWF0LlxuICAgICAgLXYsIC0tdmVyc2lvbiAgICAgICAgIHNob3cgcHJvZ3JhbSdzIHZlcnNpb24gbnVtYmVyIGFuZCBleGl0XG4gICAgXG4gICAgW3NlbGVjdGlvbl06XG4gICAgICBUaGUgZm9sbG93aW5nIGFyZ3VtZW50cyBhcmUgaW50ZW5kZWQgdG8gc2VsZWN0IHRoZSBhdWRpbyBmaWxlcy5cbiAgICBcbiAgICAgIHNvdXJjZSAgICAgICAgICAgICAgICBBIGZvbGRlciBjb250YWluaW5nIGF1ZGlvIGZpbGVzIG9yIGEgc2luZ2xlIGF1ZGlvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZS4gSWYgeW91IHNwZWNpZnkgYSBmb2xkZXIsIHRoZSBwcm9ncmFtIHdpbGwgc2VhcmNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGF1ZGlvIGZpbGVzIGluIGFsbCBzdWJmb2xkZXJzLiBJZiB5b3Ugd2FudCB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbmFtZSB0aGUgYXVkaW8gZmlsZXMgaW4gdGhlIGN1cnJlbnQgd29ya2luZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdG9yeSwgdGhlbiBzcGVjaWZ5IGEgZG90ICjigJwu4oCdKS5cbiAgICAgIC10IFRBUkdFVCwgLS10YXJnZXQgVEFSR0VUXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0IGRpcmVjdG9yeVxuICAgICAgLWEsIC0tc291cmNlLWFzLXRhcmdldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZSBzcGVjaWZpZWQgc291cmNlIGZvbGRlciBhcyB0YXJnZXQgZGlyZWN0b3J5XG4gICAgXG4gICAgW3JlbmFtZV06XG4gICAgICBUaGVzZSBvcHRpb25zIGNvbmZpZ3VyZSB0aGUgYWN0dWFsIHJlbmFtaW5nIHByb2Nlc3MuXG4gICAgXG4gICAgICAtcCBCQUNLVVBfRk9MREVSLCAtLWJhY2t1cC1mb2xkZXIgQkFDS1VQX0ZPTERFUlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvbGRlciB0byBzdG9yZSB0aGUgYmFja3VwIGZpbGVzIGluLlxuICAgICAgLUIsIC0tYmVzdC1mb3JtYXQgICAgIFVzZSB0aGUgYmVzdCBmb3JtYXQuIFRoaXMgb3B0aW9uIG9ubHkgdGFrZXMgZWZmZWN0IGlmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIHRhcmdldCBmaWxlIGFscmVhZHkgZXhpc3RzLiBgYXVkaW9yZW5hbWVgIG5vd1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrcyB0aGUgcXVhbHRpdHkgb2YgdGhlIHR3byBhdWRpbyBmaWxlcyAoc291cmNlIGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldCkuIFRoZSB0b29sIGZpcnN0IGV4YW1pbmVzIHRoZSBmb3JtYXQuIEZvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4YW1wbGUgYSBGTEFDIGZpbGUgd2lucyBvdmVyIGEgTVAzIGZpbGUuIFRoZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgYXVkaW9yZW5hbWVgIGNoZWNrcyB0aGUgYml0cmF0ZS5cbiAgICAgIC1kLCAtLWRyeS1ydW4gICAgICAgICBEb27igJl0IHJlbmFtZSBvciBjb3B5IHRoZSBhdWRpbyBmaWxlcy5cbiAgICBcbiAgICBtb3ZlIGFjdGlvbjpcbiAgICAgIC1DLCAtLWNvcHkgICAgICAgICAgICBDb3B5IGZpbGVzIGluc3RlYWQgb2YgcmVuYW1lIC8gbW92ZS5cbiAgICAgIC1NLCAtLW1vdmUgICAgICAgICAgICBNb3ZlIC8gcmVuYW1lIGEgZmlsZS4gVGhpcyBpcyB0aGUgZGVmYXVsdCBhY3Rpb24uIFRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbiBjYW4gYmUgb21pdHRlZC5cbiAgICAgIC1uLCAtLW5vLXJlbmFtZSAgICAgICBEb27igJl0IHJlbmFtZSwgbW92ZSwgY29weSBvciBwZXJmb3JtIGEgZHJ5IHJ1bi4gRG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RoaW5nLlxuICAgIFxuICAgIGNsZWFuaW5nIGFjdGlvbjpcbiAgICAgIFRoZSBjbGVhbmluZyBhY3Rpb25zIGFyZSBvbmx5IGV4ZWN1dGVkIGlmIHRoZSB0YXJnZXQgZmlsZSBhbHJlYWR5IGV4aXN0cy5cbiAgICBcbiAgICAgIC1BLCAtLWJhY2t1cCAgICAgICAgICBCYWNrdXAgdGhlIGF1ZGlvIGZpbGVzIGluc3RlYWQgb2YgZGVsZXRpbmcgdGhlbS4gVGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja3VwIGRpcmVjdG9yeSBjYW4gYmUgc3BlY2lmaWVkIHdpdGggdGhlIC0tYmFja3VwLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGRlciBvcHRpb24uXG4gICAgICAtRCwgLS1kZWxldGUgICAgICAgICAgRGVsZXRlIHRoZSBhdWRpbyBmaWxlcyBpbnN0ZWFkIG9mIGNyZWF0aW5nIGEgYmFja3VwLlxuICAgIFxuICAgIFtmaWx0ZXJzXTpcbiAgICAgIFRoZSBmb2xsb3dpbmcgb3B0aW9ucyBmaWx0ZXIgdGhlIG11c2ljIGZpbGVzIHRoYXQgYXJlIHJlbmFtZWQgYWNjb3JkaW5nIHRvIGNlcnRhaW4gcnVsZXMuXG4gICAgXG4gICAgICAtRiwgLS1hbGJ1bS1jb21wbGV0ZSAgUmVuYW1lIG9ubHkgY29tcGxldGUgYWxidW1zLlxuICAgICAgLW0gQUxCVU1fTUlOLCAtLWFsYnVtLW1pbiBBTEJVTV9NSU5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZW5hbWUgb25seSBhbGJ1bXMgY29udGFpbmluZyBhdCBsZWFzdCBYIGZpbGVzLlxuICAgICAgLWUgRVhURU5TSU9OLCAtLWV4dGVuc2lvbiBFWFRFTlNJT05cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeHRlbnNpb25zIHRvIHJlbmFtZS5cbiAgICAgIC0tZ2VucmUtY2xhc3NpY2FsIEdFTlJFX0NMQVNTSUNBTFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpc3Qgb2YgZ2VucmVzIHRvIGJlIGNsYXNzaWNhbC5cbiAgICAgIC1zIEZJRUxEX1NLSVAsIC0tZmllbGQtc2tpcCBGSUVMRF9TS0lQXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU2tpcCByZW5hbWluZyBpZiBmaWVsZCBpcyBlbXB0eS5cbiAgICBcbiAgICBbdGVtcGxhdGVfc2V0dGluZ3NdOlxuICAgICAgLWssIC0tY2xhc3NpY2FsICAgICAgIFVzZSB0aGUgZGVmYXVsdCBmb3JtYXQgZm9yIGNsYXNzaWNhbCBtdXNpYy4gSWYgeW91IHVzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgb3B0aW9uLCBib3RoIHBhcmFtZXRlcnMgKC0tZGVmYXVsdCBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLWNvbXBpbGF0aW9uKSBoYXZlIG5vIGVmZmVjdC4gQ2xhc3NpY2FsIG11c2ljIGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc29ydGVkIGJ5IHRoZSBsYXN0bmFtZSBvZiB0aGUgY29tcG9zZXIuXG4gICAgICAtUywgLS1zaGVsbC1mcmllbmRseSAgUmVuYW1lIGF1ZGlvIGZpbGVzIOKAnHNoZWxsIGZyaWVuZGx54oCdLCB0aGlzIG1lYW5zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aG91dCB3aGl0ZXNwYWNlcywgcGFyZW50aGVzZXMgZXRjLlxuICAgICAgLS1uby1zb3VuZHRyYWNrICAgICAgIERvIG5vdCB1c2UgdGhlIHBhdGggdGVtcGxhdGUgZm9yIHNvdW5kdHJhY2tzLiBVc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0ZWFkIHRoZSBkZWZhdWx0IHBhdGggdGVtcGxhdGUuXG4gICAgXG4gICAgW3BhdGhfdGVtcGxhdGVzXTpcbiAgICAgIGF1ZGlvcmVuYW1lIHByb3ZpZGVzIGRlZmF1bHQgcGF0aCB0ZW1wbGF0ZXMuIFlvdSBjYW4gc3BlY2lmeSB5b3VyIG93biBwYXRoIHRlbXBsYXRlcyB1c2luZyB0aGUgZm9sbG93aW5nIG9wdGlvbnMuXG4gICAgXG4gICAgICAtZiBQQVRIX1RFTVBMQVRFLCAtLWRlZmF1bHQgUEFUSF9URU1QTEFURSwgLS1mb3JtYXQgUEFUSF9URU1QTEFURVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBkZWZhdWx0IHBhdGggdGVtcGxhdGUgZm9yIGF1ZGlvIGZpbGVzIHRoYXQgYXJlIG5vdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBpbGF0aW9ucyBvciBjb21waWxhdGlvbnMuIFVzZSBtZXRhZGF0YSBmaWVsZHMgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb25zIHRvIGJ1aWxkIHRoZSBwYXRoIHRlbXBsYXRlLlxuICAgICAgLWMgUEFUSF9URU1QTEFURSwgLS1jb21waWxhdGlvbiBQQVRIX1RFTVBMQVRFXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUGF0aCB0ZW1wbGF0ZSBmb3IgY29tcGlsYXRpb25zLiBVc2UgbWV0YWRhdGEgZmllbGRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGZ1bmN0aW9ucyB0byBidWlsZCB0aGUgcGF0aCB0ZW1wbGF0ZS5cbiAgICAgIC0tc291bmR0cmFjayBQQVRIX1RFTVBMQVRFXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUGF0aCB0ZW1wbGF0ZSBmb3IgYSBzb3VuZHRyYWNrIGF1ZGlvIGZpbGUuIFVzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhIGZpZWxkcyBhbmQgZnVuY3Rpb25zIHRvIGJ1aWxkIHRoZSBwYXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUuXG4gICAgICAtLWZvcm1hdC1jbGFzc2ljYWwgUEFUSF9URU1QTEFURVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhdGggdGVtcGxhdGUgZm9yIGNsYXNzaWNhbCBhdWRpbyBmaWxlLiBVc2UgbWV0YWRhdGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZHMgYW5kIGZ1bmN0aW9ucyB0byBidWlsZCB0aGUgcGF0aCB0ZW1wbGF0ZS5cbiAgICBcbiAgICBbY2xpX291dHB1dF06XG4gICAgICBUaGlzIGdyb3VwIGNvbnRhaW5zIGFsbCBvcHRpb25zIHRoYXQgYWZmZWN0IHRoZSBvdXRwdXQgb24gdGhlIGNvbW1hbmQgbGluZSBpbnRlcmZhY2UgKGNsaSkuXG4gICAgXG4gICAgICAtSywgLS1jb2xvciAgICAgICAgICAgQ29sb3JpemUgdGhlIHN0YW5kYXJkIG91dHB1dCBvZiB0aGUgcHJvZ3JhbSB3aXRoIEFOU0lcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcnMuXG4gICAgICAtLW5vLWNvbG9yICAgICAgICAgICAgRG9u4oCZdCBjb2xvcml6ZSB0aGUgc3RhbmRhcmQgb3V0cHV0IG9mIHRoZSBwcm9ncmFtIHdpdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTlNJIGNvbG9ycy5cbiAgICAgIC1iLCAtLWRlYnVnICAgICAgICAgICBQcmludCBkZWJ1ZyBpbmZvcm1hdGlvbnMgYWJvdXQgdGhlIHNpbmdsZSBtZXRhZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkcy5cbiAgICAgIC1qLCAtLWpvYi1pbmZvICAgICAgICBEaXNwbGF5IGluZm9ybWF0aW9ucyBhYm91dCB0aGUgY3VycmVudCBqb2IuIFRoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmZvcm1hdGlvbnMgYXJlIHByaW50dGVkIG91dCBiZWZvcmUgYW55IGFjdGlvbnMgb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgYXVkaW8gZmlsZXMgYXJlIGV4ZWN1dGVkLlxuICAgICAgLWwsIC0tbWItdHJhY2stbGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFByaW50IHRyYWNrIGxpc3RpbmcgZm9yIE11c2ljYnJhaW56IHdlYnNpdGU6IEZvcm1hdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFjay4gdGl0bGUgKGR1cmF0aW9uKSwgZS4gZy46IDEuIEhlLCBaaWdldW5lciAoMTozMSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyLiBIb2NoZ2V0w7xybXRlIFJpbWFmbHV0ICgxOjIxKVxuICAgICAgLW8sIC0tb25lLWxpbmUgICAgICAgIERpc3BsYXkgdGhlIHJlbmFtZSAvIGNvcHkgYWN0aW9uIHN0YXR1cyBvbiBvbmUgbGluZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RlYWQgb2YgdHdvLlxuICAgICAgLVQsIC0tc3RhdHMgICAgICAgICAgIFNob3cgc3RhdGlzdGljcyBhdCB0aGUgZW5kIG9mIHRoZSBleGVjdXRpb24uXG4gICAgICAtViwgLS12ZXJib3NlICAgICAgICAgTWFrZSB0aGUgY29tbWFuZCBsaW5lIG91dHB1dCBtb3JlIHZlcmJvc2UuXG4gICAgXG4gICAgW21ldGFkYXRhX2FjdGlvbnNdOlxuICAgICAgLUUsIC0tZW5yaWNoLW1ldGFkYXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRmV0Y2ggdGhlIHRhZyBmaWVsZHMg4oCcd29ya+KAnSBhbmQg4oCcbWJfd29ya2lk4oCdIGZyb21cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBNdXNpY2JyYWlueiBhbmQgc2F2ZSB0aGlzIGZpZWxkcyBpbnRvIHRoZSBhdWRpbyBmaWxlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBhdWRpbyBmaWxlIG11c3QgaGF2ZSB0aGUgdGFnIGZpZWxkIOKAnG1iX3RyYWNraWTigJ0uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIGdpdmUgYXVkaW8gZmlsZSBpcyBub3QgcmVuYW1lZC5cbiAgICAgIC1yLCAtLXJlbWFwLWNsYXNzaWNhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlbWFwIHNvbWUgZmllbGRzIHRvIGZpdCBiZXR0ZXIgZm9yIGNsYXNzaWNhbCBtdXNpYzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJxjb21wb3NlcuKAnSBiZWNvbWVzIOKAnGFydGlzdOKAnSwg4oCcd29ya+KAnSBiZWNvbWVzIOKAnGFsYnVt4oCdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gdGhlIOKAnHRpdGxl4oCdIHRoZSB3b3JrIHByZWZpeCBpcyByZW1vdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKOKAnFN5bXBob25pZSBOby4gOTogSS4gQWxsZWdyb+KAnSAtPiDigJxJLiBBbGxlZ3Jv4oCdKSBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDigJx0cmFja+KAnSBiZWNvbWVzIHRoZSBtb3ZlbWVudCBudW1iZXIuIEFsbCBvdmVyd3JpdHRlblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkcyBhcmUgc2FmZWQgaW4gdGhlIOKAnGNvbW1lbnRz4oCdIGZpZWxkLlxuICAgIFxuXG5Db25maWd1cmF0aW9uIGZpbGVzXG49PT09PT09PT09PT09PT09PT09XG5cblVzZSB0aGUgYGAtLWNvbmZpZ2BgIG9wdGlvbiB0byBsb2FkIGEgY29uZmlndXJhdGlvbiBmaWxlLiBUaGUgY29tbWFuZFxubGluZSBhcmd1bWVudHMgb3ZlcndyaXRlIHRoZSBjb3JyZXNwb25kaW5nIG9wdGlvbnMgb2YgdGhlIGNvbmZpZ3VyYXRpb25cbmZpbGUuXG5cbi4uIGNvZGUtYmxvY2s6OiBTaGVsbFxuXG4gICAgYXVkaW9yZW5hbWVyIC0tY29uZmlnIC9ob21lL3VzZXIvbXktY29uZmlnLmluaVxuXG5JdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGxvYWQgc2V2ZXJhbCBjb25maWd1cmF0aW9uIGZpbGVzLiBWYWx1ZXMgb2YgdGhlXG5sYXR0ZXIgZmlsZSBvdmVyd3JpdGUgdGhlIHZhbHVlcyBvZiB0aGUgZmlyc3QgZmlsZXMuXG5cbi4uIGNvZGUtYmxvY2s6OiBTaGVsbFxuXG4gICAgYXVkaW9yZW5hbWVyIC0tY29uZmlnIGJhc2UuaW5pIC0tY29uZmlnIG92ZXJsb2FkLmluaVxuXG5BbG1vc3QgYWxsIGNvbW1hbmQgbGluZSBhcmd1bWVudHMgaGF2ZSBhIGNvcnJlc3BvbmRpbmcgb3B0aW9uIGluIHRoZVxuY29uZmlndXJhdGlvbiBmaWxlLiBgYGF1ZGlvcmVuYW1lYGAgaW1wbGVtZW50cyBhIGJhc2ljIGNvbmZpZ3VyYXRpb25cbmxhbmd1YWdlIHdoaWNoIHByb3ZpZGVzIGEgc3RydWN0dXJlIHNpbWlsYXIgdG8gd2hhdOKAmXMgZm91bmQgaW4gTWljcm9zb2Z0XG5XaW5kb3dzIGBJTklcbjxodHRwczovL2RvY3MucHl0aG9uLm9yZy8zL2xpYnJhcnkvY29uZmlncGFyc2VyLmh0bWwjc3VwcG9ydGVkLWluaS1maWxlLXN0cnVjdHVyZT5gX1xuZmlsZXM6XG5cbi4uIGNvZGUtYmxvY2s6OiBpbmlcblxuICAgIFtzZWxlY3Rpb25dXG4gICAgc291cmNlID0gL2hvbWUvdXNlci9zb3VyY2VcbiAgICB0YXJnZXQgPSAvaG9tZS91c2VyL3RhcmdldFxuICAgIHNvdXJjZV9hc190YXJnZXQgPSBGYWxzZVxuICAgIFxuICAgIFtyZW5hbWVdXG4gICAgYmFja3VwX2ZvbGRlciA9IC90bXAvYmFja3VwXG4gICAgYmVzdF9mb3JtYXQgPSBUcnVlXG4gICAgZHJ5X3J1biA9IEZhbHNlXG4gICAgXG4gICAgOyBzZWUgLS1tb3ZlLCAtLWNvcHkgb3IgLS1uby1yZW5hbWVcbiAgICA7IOKAnG1vdmXigJ0sIOKAnGNvcHnigJ0gb3Ig4oCcbm9fcmVuYW1l4oCdXG4gICAgbW92ZV9hY3Rpb24gPSBtb3ZlXG4gICAgXG4gICAgOyBzZWUgLS1iYWNrdXAsIC0tZGVsZXRlXG4gICAgOyDigJxiYWNrdXDigJ0sIOKAnGRlbGV0ZeKAnSBvciDigJxkb19ub3RoaW5n4oCdXG4gICAgY2xlYW5pbmdfYWN0aW9uID0gZG9fbm90aGluZ1xuICAgIFxuICAgIFtmaWx0ZXJzXVxuICAgIGFsYnVtX2NvbXBsZXRlID0gRmFsc2VcbiAgICBhbGJ1bV9taW4gPSA3XG4gICAgZXh0ZW5zaW9uID0gbXAzLG00YSxmbGFjLHdtYVxuICAgIGdlbnJlX2NsYXNzaWNhbCA9IENsYXNzaWNhbCBtdXNpYyxPcGVyYSxTeW1waG9ueVxuICAgIGZpZWxkX3NraXAgPSB0aXRsZVxuICAgIFxuICAgIFt0ZW1wbGF0ZV9zZXR0aW5nc11cbiAgICBjbGFzc2ljYWwgPSBGYWxzZVxuICAgIHNoZWxsX2ZyaWVuZGx5ID0gRmFsc2VcbiAgICBub19zb3VuZHRyYWNrID0gRmFsc2VcbiAgICBcbiAgICBbcGF0aF90ZW1wbGF0ZXNdXG4gICAgZGVmYXVsdF90ZW1wbGF0ZSA9ICRhcl9pbml0aWFsX2FydGlzdC8lc2hvcnRlbnskYXJfY29tYmluZWRfYXJ0aXN0X3NvcnR9LyVzaG9ydGVueyRhcl9jb21iaW5lZF9hbGJ1bX0laWZkZWZub3RlbXB0eXthcl9jb21iaW5lZF95ZWFyLF8ke2FyX2NvbWJpbmVkX3llYXJ9fS8ke2FyX2NvbWJpbmVkX2Rpc2N0cmFja31fJXNob3J0ZW57JHRpdGxlfVxuICAgIGNvbXBpbGF0aW9uX3RlbXBsYXRlID0gX2NvbXBpbGF0aW9ucy8kYXJfaW5pdGlhbF9hbGJ1bS8lc2hvcnRlbnskYXJfY29tYmluZWRfYWxidW19JWlmZGVmbm90ZW1wdHl7YXJfY29tYmluZWRfeWVhcixfJHthcl9jb21iaW5lZF95ZWFyfX0vJHthcl9jb21iaW5lZF9kaXNjdHJhY2t9XyVzaG9ydGVueyR0aXRsZX1cbiAgICBzb3VuZHRyYWNrX3RlbXBsYXRlID0gX3NvdW5kdHJhY2svJGFyX2luaXRpYWxfYWxidW0vJXNob3J0ZW57JGFyX2NvbWJpbmVkX2FsYnVtfSVpZmRlZm5vdGVtcHR5e2FyX2NvbWJpbmVkX3llYXIsXyR7YXJfY29tYmluZWRfeWVhcn19LyR7YXJfY29tYmluZWRfZGlzY3RyYWNrfV8ke2FydGlzdH1fJXNob3J0ZW57JHRpdGxlfVxuICAgIGNsYXNzaWNhbF90ZW1wbGF0ZSA9ICRhcl9pbml0aWFsX2NvbXBvc2VyLyRhcl9jb21iaW5lZF9jb21wb3Nlci8lc2hvcnRlbnskYXJfY29tYmluZWRfd29ya190b3AsNDh9X1slc2hvcnRlbnskYXJfY2xhc3NpY2FsX3BlcmZvcm1lciwzMn1dLyR7YXJfY29tYmluZWRfZGlzY3RyYWNrfV8lc2hvcnRlbnskYXJfY2xhc3NpY2FsX3RpdGxlLDY0fSVpZmRlZm5vdGVtcHR5e2Fjb3VzdGlkX2lkLF8lc2hvcnRlbnskYWNvdXN0aWRfaWQsOH19XG4gICAgXG4gICAgW2NsaV9vdXRwdXRdXG4gICAgOyBzZWUgLS1jb2xvciBvciAtLW5vLWNvbG9yXG4gICAgY29sb3IgPSBUcnVlXG4gICAgXG4gICAgZGVidWcgPSBGYWxzZVxuICAgIGpvYl9pbmZvID0gRmFsc2VcbiAgICBtYl90cmFja19saXN0aW5nID0gRmFsc2VcbiAgICBvbmVfbGluZSA9IEZhbHNlXG4gICAgc3RhdHMgPSBUcnVlXG4gICAgdmVyYm9zZSA9IEZhbHNlXG4gICAgXG4gICAgW21ldGFkYXRhX2FjdGlvbnNdXG4gICAgZW5yaWNoX21ldGFkYXRhID0gRmFsc2VcbiAgICByZW1hcF9jbGFzc2ljYWwgPSBGYWxzZVxuICAgIFxuXG5NZXRhZGF0YSBmaWVsZHNcbj09PT09PT09PT09PT09PVxuXG5cbi4uIGxpc3QtdGFibGU6OiBGaWVsZHMgZG9jdW1lbnRhdGlvblxuICAgOndpZHRoczogMjAgMTAgNTAgMjBcbiAgIDpoZWFkZXItcm93czogMVxuXG4gICAqIC0gRmllbGQgbmFtZVxuICAgICAtIENhdGVnb3J5XG4gICAgIC0gRGVzY3JpcHRpb25cbiAgICAgLSBFeGFtcGxlc1xuICAgKiAtIGFjb3VzdGlkX2ZpbmdlcnByaW50XG4gICAgIC0gbXVzaWNfYnJhaW56XG4gICAgIC0gQWNvdXN0aWMgSUQgZmluZ2VycHJpbnRcbiAgICAgLSBcbiAgICogLSBhY291c3RpZF9pZFxuICAgICAtIG11c2ljX2JyYWluelxuICAgICAtIEFjb3VzdGljIElEXG4gICAgIC0gYGA4NmUyMTdiNy1kM2FkLTQ0OTMtYTlmMi1jZjcxMjU2YWNlMDdgYFxuICAgKiAtIGFsYnVtXG4gICAgIC0gY29tbW9uXG4gICAgIC0gYWxidW1cbiAgICAgLSBgYEhlbHAhYGBcbiAgICogLSBhbGJ1bWFydGlzdFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBhcnRpc3QgZm9yIHRoZSBlbnRpcmUgYWxidW0sIHdoaWNoIG1heSBiZSBkaWZmZXJlbnQgZnJvbSB0aGUgYXJ0aXN0cyBmb3IgdGhlIGluZGl2aWR1YWwgdHJhY2tzXG4gICAgIC0gYGBUaGUgQmVhdGxlc2BgXG4gICAqIC0gYWxidW1hcnRpc3RfY3JlZGl0XG4gICAgIC0gY29tbW9uXG4gICAgIC0gYWxidW1hcnRpc3RfY3JlZGl0XG4gICAgIC0gXG4gICAqIC0gYWxidW1hcnRpc3Rfc29ydFxuICAgICAtIGNvbW1vblxuICAgICAtIGFsYnVtYXJ0aXN0X3NvcnRcbiAgICAgLSBgYEJlYXRsZXMsIFRoZWBgXG4gICAqIC0gYWxidW1hcnRpc3RzXG4gICAgIC0gY29tbW9uXG4gICAgIC0gYWxidW1hcnRpc3RzXG4gICAgIC0gXG4gICAqIC0gYWxidW1kaXNhbWJpZ1xuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBkaXNhbWJpZ3VhdGlvbiBhbGJ1bSBmaWVsZCBoZWxwcyB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIGlkZW50aWNhbGx5IG5hbWVkIGFsYnVtcy4gVGhlIGFsYnVtIOKAnFdlZXplcuKAnSBmb3IgZXhhbXBsZSBoYXMgdGhlIGRpc2FtYmlndWF0aW9uIGNvbW1lbnRzIOKAnFJlZCBBbGJ1beKAnSBhbmQg4oCcR3JlZW4gQWxidW3igJ0uXG4gICAgIC0gXG4gICAqIC0gYWxidW1zdGF0dXNcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgc3RhdHVzIGRlc2NyaWJlcyBob3cgXCJvZmZpY2lhbFwiIGEgcmVsZWFzZSBpcy5cbiAgICAgLSBgYG9mZmljaWFsYGAsIGBgcHJvbW90aW9uYWxgYCwgYGBib290bGVnYGAsIGBgcHNldWRvLXJlbGVhc2VgYFxuICAgKiAtIGFsYnVtdHlwZVxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBNdXNpY0JyYWlueiBhbGJ1bSB0eXBlOyB0aGUgTXVzaWNCcmFpbnogd2lraSBoYXMgYSBsaXN0IG9mIHR5cGUgbmFtZXNcbiAgICAgLSBgYGFsYnVtL3NvdW5kdHJhY2tgYFxuICAgKiAtIGFyX2NsYXNzaWNhbF9hbGJ1bVxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBmaWVsZCDigJx3b3Jr4oCdIHdpdGhvdXQgdGhlIG1vdmVtZW50IHN1ZmZpeC4gRm9yIGV4YW1wbGU6IOKAnEhvcm4gQ29uY2VydG86IEkuIEFsbGVncm/igJ0gLT4g4oCcSG9ybiBDb25jZXJ0b+KAnVxuICAgICAtIGBgSG9ybiBDb25jZXJ0b2BgLCBgYERpZSBNZWlzdGVyc2luZ2VyIHZvbiBOw7xybmJlcmdgYFxuICAgKiAtIGFyX2NsYXNzaWNhbF9wZXJmb3JtZXJcbiAgICAgLSBjb21tb25cbiAgICAgLSDigJxhcl9wZXJmb3JtZXJfc2hvcnTigJ0gb3Ig4oCcYWxidW1hcnRpc3TigJ0gd2l0aG91dCB0aGUgY29tcG9zZXIgcHJlZml4OiDigJxCZWV0aG92ZW47IEthcmFqYW4sIE11dHRlcuKAnSAtPiDigJxLYXJhamFuLCBNdXR0ZXLigJ1cbiAgICAgLSBgYEthcmFqYW4sIE11dHRlcmBgLCBgYEthcmFqYW4sIFN0YURyZWBgXG4gICAqIC0gYXJfY2xhc3NpY2FsX3RpdGxlXG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIG1vdmVtZW50IHRpdGxlIHdpdGhvdXQgdGhlIHBhcmVudCB3b3JrIHByZWZpeC4gRm9yIGV4YW1wbGUg4oCcSG9ybiBDb25jZXJ0bzogSS4gQWxsZWdyb+KAnSAtPiDigJxJLiBBbGxlZ3Jv4oCdXG4gICAgIC0gYGBJLiBBbGxlZ3JvYGAsIGBgQWt0IElJSSwgU3plbmUgVi4gXCJNb3JnZW5kbGljaCBsZXVjaHRlbmQgaW0gcm9zaWdlbiBTY2hlaW5cIiAoV2FsdGhlciwgVm9saywgTWVpc3RlciwgU2FjaHMsIFBvZ25lciwgRXZhKWBgXG4gICAqIC0gYXJfY2xhc3NpY2FsX3RyYWNrXG4gICAgIC0gY29tbW9uXG4gICAgIC0gSWYgdGhlIHRpdGxlIGNvbnRhaW5zIFJvbWFuIG51bWJlcnMsIHRoZW4gdGhlc2UgYXJlIGNvbnZlcnRlZCB0byBhcmFiaWMgbnVtYmVycyB3aXRoIGxlYWRpbmcgemVyb3MuIElmIG5vIFJvbWFuIG51bWJlcnMgY291bGQgYmUgZm91bmQsIHRoZW4gdGhlIGZpZWxkIOKAnGFyX2NvbWJpbmVkX2Rpc2N0cmFja+KAnSBpcyB1c2VkLlxuICAgICAtIGBgMDFgYCwgYGA0LTA4YGBcbiAgICogLSBhcl9jb21iaW5lZF9hbGJ1bVxuICAgICAtIGNvbW1vblxuICAgICAtIOKAnGFsYnVt4oCdIHdpdGhvdXQg4oCdIChEaXNjIFgp4oCdLlxuICAgICAtIGBgSGVhZGxpbmVzIGFuZCBEZWFkbGluZXM6IFRoZSBIaXRzIG9mIGEtaGFgYCwgYGBEaWUgTWVpc3RlcnNpbmdlciB2b24gTsO8cm5iZXJnYGBcbiAgICogLSBhcl9jb21iaW5lZF9hcnRpc3RcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgZmlyc3Qgbm9uLWVtcHR5IHZhbHVlIG9mIHRoZSBmb2xsb3dpbmcgbGlzdCBvZiBmaWVsZHM6IOKAnGFsYnVtYXJ0aXN04oCdIC0+IOKAnGFydGlzdOKAnSAtPiDigJxhbGJ1bWFydGlzdF9jcmVkaXTigJ0gLT4g4oCcYXJ0aXN0X2NyZWRpdOKAnSAtPiDigJxhbGJ1bWFydGlzdF9zb3J04oCdIC0+IOKAnGFydGlzdF9zb3J04oCdLiBJZiBubyB2YWx1ZSBjb3VsZCBiZSBkZXRlcm1pbmVkLCB0aGVuIOKAnFVua25vd27igJ0gaXMgYXNzaWduZWQuIFRoZSBzZWNvbmQgYXJ0aXN0IGFmdGVyIOKAnGZlYXQu4oCdLCDigJxmdC7igJ0gb3Ig4oCcdnMu4oCdIGlzIHJlbW92ZWQuXG4gICAgIC0gYGBhLWhhYGAsIGBgUmljaGFyZCBXYWduZXI7IFJlbsOpIEtvbGxvLCBIZWxlbiBEb25hdGgsIC4uLmBgXG4gICAqIC0gYXJfY29tYmluZWRfYXJ0aXN0X3NvcnRcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgZmlyc3Qgbm9uLWVtcHR5IHZhbHVlIG9mIHRoZSBmb2xsb3dpbmcgbGlzdCBvZiBmaWVsZHM6IOKAnGFsYnVtYXJ0aXN0X3NvcnTigJ0gLT4g4oCcYXJ0aXN0X3NvcnTigJ0gLT4g4oCcYWxidW1hcnRpc3TigJ0gLT4g4oCcYXJ0aXN04oCdIC0+IOKAnGFsYnVtYXJ0aXN0X2NyZWRpdOKAnSAtPiDigJxhcnRpc3RfY3JlZGl04oCdLiBJZiBubyB2YWx1ZSBjb3VsZCBiZSBkZXRlcm1pbmVkLCB0aGVuIOKAnFVua25vd27igJ0gaXMgYXNzaWduZWQuIFRoZSBzZWNvbmQgYXJ0aXN0IGFmdGVyIOKAnGZlYXQu4oCdLCDigJxmdC7igJ0gb3Ig4oCcdnMu4oCdIGlzIHJlbW92ZWQuXG4gICAgIC0gYGBhLWhhYGAsIGBgV2FnbmVyLCBSaWNoYXJkOyBLb2xsbywgUmVuw6ksIERvbmF0aCwgSGVsZW4uLi5gYFxuICAgKiAtIGFyX2NvbWJpbmVkX2NvbXBvc2VyXG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIGZpcnN0IG5vdCBlbXB0eSBmaWVsZCBvZiB0aGlzIGZpZWxkIGxpc3Q6IOKAnGNvbXBvc2VyX3NvcnTigJ0sIOKAnGNvbXBvc2Vy4oCdLCDigJxhcl9jb21iaW5lZF9hcnRpc3TigJ1cbiAgICAgLSBgYEJlZXRob3ZlbiwgTHVkd2lnLXZhbmBgLCBgYFdhZ25lciwgUmljaGFyZGBgXG4gICAqIC0gYXJfY29tYmluZWRfZGlzY3RyYWNrXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQ29tYmluYXRpb24gb2YgZGlzYyBhbmQgdHJhY2sgaW4gdGhlIGZvcm1hdDogZGlzay10cmFja1xuICAgICAtIGBgMS0wMWBgLCBgYDMtMDk5YGBcbiAgICogLSBhcl9jb21iaW5lZF9zb3VuZHRyYWNrXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQm9vbGVhbiBmbGFnIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgYXVkaW8gZmlsZSBpcyBhIHNvdW5kdHJhY2tcbiAgICAgLSBgYFRydWVgYCwgYGBGYWxzZWBgXG4gICAqIC0gYXJfY29tYmluZWRfd29ya190b3BcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgd29yayBvbiB0aGUgdG9wIGxldmVsIG9mIGEgd29yayBoaWVyYXJjaHkuXG4gICAgIC0gYGBIb3JuIENvbmNlcnRvOiBJLiBBbGxlZ3JvYGAsIGBgRGllIE1laXN0ZXJzaW5nZXIgdm9uIE7DvHJuYmVyZ2BgXG4gICAqIC0gYXJfY29tYmluZWRfeWVhclxuICAgICAtIGNvbW1vblxuICAgICAtIEZpcnN0IOKAnG9yaWdpbmFsX3llYXLigJ0gdGhlbiDigJx5ZWFy4oCdLlxuICAgICAtIGBgMTk3OGBgXG4gICAqIC0gYXJfaW5pdGlhbF9hbGJ1bVxuICAgICAtIGNvbW1vblxuICAgICAtIEZpcnN0IGNoYXJhY3RlciBpbiBsb3dlcmNhc2Ugb2Yg4oCcYXJfY29tYmluZWRfYWxidW3igJ0uIEFsbG93ZWQgY2hhcmFjdGVyczogW2EteiwgMCwgX10sIDAtOSAtPiAwLCA/IC0+IF8uIEZvciBleGFtcGxlIOKAnEhlbHAh4oCdIC0+IOKAnGjigJ0uXG4gICAgIC0gYGBoYGBcbiAgICogLSBhcl9pbml0aWFsX2FydGlzdFxuICAgICAtIGNvbW1vblxuICAgICAtIEZpcnN0IGNoYXJhY3RlciBpbiBsb3dlcmNhc2Ugb2Yg4oCcYXJfY29tYmluZWRfYXJ0aXN0X3NvcnTigJ0uIEFsbG93ZWQgY2hhcmFjdGVyczogW2EteiwgMCwgX10sIDAtOSAtPiAwLCA/IC0+IF8uIEZvciBleGFtcGxlIOKAnEJyZW5kZWwsIEFsZnJlZOKAnSAtPiDigJxi4oCdLlxuICAgICAtIGBgYmBgXG4gICAqIC0gYXJfaW5pdGlhbF9jb21wb3NlclxuICAgICAtIGNvbW1vblxuICAgICAtIEZpcnN0IGNoYXJhY3RlciBpbiBsb3dlcmNhc2Ugb2Yg4oCcYXJfY29tYmluZWRfY29tcG9zZXLigJ0uIEFsbG93ZWQgY2hhcmFjdGVyczogW2EteiwgMCwgX10sIDAtOSAtPiAwLCA/IC0+IF8uIEZvciBleGFtcGxlIOKAnEx1ZHdpZyB2YW4gQmVldGhvdmVu4oCdIC0+IOKAnGzigJ0uXG4gICAgIC0gYGBsYGBcbiAgICogLSBhcl9wZXJmb3JtZXJcbiAgICAgLSBjb21tb25cbiAgICAgLSBQZXJmb3JtZXIgbmFtZXMuXG4gICAgIC0gYGBIZXJiZXJ0IHZvbiBLYXJhamFuLCBTdGFhdHNrYXBlbGxlIERyZXNkZW5gYFxuICAgKiAtIGFyX3BlcmZvcm1lcl9yYXdcbiAgICAgLSBjb21tb25cbiAgICAgLSBSYXcgcGVyZm9ybWVyIG5hbWVzLlxuICAgICAtIGBgW1snY29uZHVjdG9yJywgJ0hlcmJlcnQgdm9uIEthcmFqYW4nXSwgWydvcmNoZXN0cmEnLCAnU3RhYXRza2FwZWxsZSBEcmVzZGVuJ11dYGBcbiAgICogLSBhcl9wZXJmb3JtZXJfc2hvcnRcbiAgICAgLSBjb21tb25cbiAgICAgLSBBYmJyZXZpYXRlZCBwZXJmb3JtZXIgbmFtZXMuXG4gICAgIC0gYGBLYXJhamFuLCBTdGFEcmVgYFxuICAgKiAtIGFycmFuZ2VyXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQSBtdXNpY2lhbiB3aG8gY3JlYXRlcyBhcnJhbmdlbWVudHMuXG4gICAgIC0gXG4gICAqIC0gYXJ0XG4gICAgIC0gY29tbW9uXG4gICAgIC0gTGVnYWN5IGFsYnVtIGFydCBmaWVsZC5cbiAgICAgLSBgYGInXFx4ZmZcXHhkOFxceGZmXFx4ZTBcXHgwMCdgYFxuICAgKiAtIGFydGlzdFxuICAgICAtIGNvbW1vblxuICAgICAtIGFydGlzdFxuICAgICAtIGBgVGhlIEJlYXRsZXNgYFxuICAgKiAtIGFydGlzdF9jcmVkaXRcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgdHJhY2stc3BlY2lmaWMgYXJ0aXN0IGNyZWRpdCBuYW1lLCB3aGljaCBtYXkgYmUgYSB2YXJpYXRpb24gb2YgdGhlIGFydGlzdOKAmXMg4oCcY2Fub25pY2Fs4oCdIG5hbWVcbiAgICAgLSBcbiAgICogLSBhcnRpc3Rfc29ydFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSDigJxzb3J0IG5hbWXigJ0gb2YgdGhlIHRyYWNrIGFydGlzdC5cbiAgICAgLSBgYEJlYXRsZXMsIFRoZWBgLCBgYFdoaXRlLCBKYWNrYGBcbiAgICogLSBhcnRpc3RzXG4gICAgIC0gY29tbW9uXG4gICAgIC0gYXJ0aXN0c1xuICAgICAtIGBgWydhLWhhJ11gYFxuICAgKiAtIGFzaW5cbiAgICAgLSBjb21tb25cbiAgICAgLSBBbWF6b24gU3RhbmRhcmQgSWRlbnRpZmljYXRpb24gTnVtYmVyXG4gICAgIC0gYGBCMDAwMDAyVUFMYGBcbiAgICogLSBiYXJjb2RlXG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IHR5cGVzIG9mIGJhcmNvZGUsIGJ1dCB0aGUgb25lcyB1c3VhbGx5IGZvdW5kIG9uIG11c2ljIHJlbGVhc2VzIGFyZSB0d286IDEuIFVuaXZlcnNhbCBQcm9kdWN0IENvZGUgKFVQQyksIHdoaWNoIGlzIHRoZSBvcmlnaW5hbCBiYXJjb2RlIHVzZWQgaW4gTm9ydGggQW1lcmljYS4gMi4gRXVyb3BlYW4gQXJ0aWNsZSBOdW1iZXIgKEVBTilcbiAgICAgLSBgYDUwMjg0MjE5MzE4MzhgYCwgYGAwMzYwMDAyOTE0NTJgYFxuICAgKiAtIGJpdGRlcHRoXG4gICAgIC0gYXVkaW9cbiAgICAgLSBvbmx5IGF2YWlsYWJsZSBmb3Igc29tZSBmb3JtYXRzXG4gICAgIC0gYGAxNmBgXG4gICAqIC0gYml0cmF0ZVxuICAgICAtIGF1ZGlvXG4gICAgIC0gaW4ga2lsb2JpdHMgcGVyIHNlY29uZCwgd2l0aCB1bml0czogZS5nLiwg4oCcMTkya2Jwc+KAnVxuICAgICAtIGBgNDM2NTIzYGAsIGBgMjU2MDAwYGBcbiAgICogLSBiaXRyYXRlX21vZGVcbiAgICAgLSBjb21tb25cbiAgICAgLSBiaXRyYXRlX21vZGVcbiAgICAgLSBgYENCUmBgXG4gICAqIC0gYnBtXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQmVhdHMgcGVyIE1pbnV0ZVxuICAgICAtIFxuICAgKiAtIGNhdGFsb2dudW1cbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGlzIGlzIGEgbnVtYmVyIGFzc2lnbmVkIHRvIHRoZSByZWxlYXNlIGJ5IHRoZSBsYWJlbCB3aGljaCBjYW4gb2Z0ZW4gYmUgZm91bmQgb24gdGhlIHNwaW5lIG9yIG5lYXIgdGhlIGJhcmNvZGUuIFRoZXJlIG1heSBiZSBtb3JlIHRoYW4gb25lLCBlc3BlY2lhbGx5IHdoZW4gbXVsdGlwbGUgbGFiZWxzIGFyZSBpbnZvbHZlZC4gVGhpcyBpcyBub3QgdGhlIEFTSU4g4oCUIHRoZXJlIGlzIGEgcmVsYXRpb25zaGlwIGZvciB0aGF0IOKAlCBub3IgdGhlIGxhYmVsIGNvZGUuXG4gICAgIC0gYGBDRFAgNyA0NjQzOSAyYGBcbiAgICogLSBjaGFubmVsc1xuICAgICAtIGF1ZGlvXG4gICAgIC0gY2hhbm5lbHNcbiAgICAgLSBgYDFgYCwgYGAyYGBcbiAgICogLSBjb21tZW50c1xuICAgICAtIGNvbW1vblxuICAgICAtIGNvbW1lbnRzXG4gICAgIC0gXG4gICAqIC0gY29tcFxuICAgICAtIGNvbW1vblxuICAgICAtIENvbXBpbGF0aW9uIGZsYWdcbiAgICAgLSBgYFRydWVgYCwgYGBGYWxzZWBgXG4gICAqIC0gY29tcG9zZXJcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgbmFtZSBvZiB0aGUgY29tcG9zZXIuXG4gICAgIC0gYGBMdWR3aWcgdmFuIEJlZXRob3ZlbmBgXG4gICAqIC0gY29tcG9zZXJfc29ydFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBjb21wb3NlciBuYW1lIGZvciBzb3J0aW5nLlxuICAgICAtIGBgQmVldGhvdmVuLCBMdWR3aWcgdmFuYGBcbiAgICogLSBjb3B5cmlnaHRcbiAgICAgLSBjb21tb25cbiAgICAgLSBjb3B5cmlnaHRcbiAgICAgLSBcbiAgICogLSBjb3VudHJ5XG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIGNvdW50cnkgdGhlIHJlbGVhc2Ugd2FzIGlzc3VlZCBpbi5cbiAgICAgLSBcbiAgICogLSBkYXRlXG4gICAgIC0gZGF0ZVxuICAgICAtIFRoZSByZWxlYXNlIGRhdGEgb2YgdGhlIHNwZWNpZmljIHJlbGVhc2UuXG4gICAgIC0gYGAxOTk2LTAxLTAxYGBcbiAgICogLSBkYXlcbiAgICAgLSBkYXRlXG4gICAgIC0gVGhlIHJlbGVhc2UgZGF5IG9mIHRoZSBzcGVjaWZpYyByZWxlYXNlLlxuICAgICAtIFxuICAgKiAtIGRpc2NcbiAgICAgLSBjb21tb25cbiAgICAgLSBkaXNjXG4gICAgIC0gYGAxYGBcbiAgICogLSBkaXNjdGl0bGVcbiAgICAgLSBjb21tb25cbiAgICAgLSBkaXNjdGl0bGVcbiAgICAgLSBcbiAgICogLSBkaXNjdG90YWxcbiAgICAgLSBjb21tb25cbiAgICAgLSBkaXNjdG90YWxcbiAgICAgLSBgYDFgYFxuICAgKiAtIGVuY29kZXJcbiAgICAgLSBjb21tb25cbiAgICAgLSB0aGUgbmFtZSBvZiB0aGUgcGVyc29uIG9yIG9yZ2FuaXNhdGlvbiB0aGF0IGVuY29kZWQgdGhlIGF1ZGlvIGZpbGUuIFRoaXMgZmllbGQgbWF5IGNvbnRhaW4gYSBjb3B5cmlnaHQgbWVzc2FnZSwgaWYgdGhlIGF1ZGlvIGZpbGUgYWxzbyBpcyBjb3B5cmlnaHRlZCBieSB0aGUgZW5jb2Rlci5cbiAgICAgLSBgYGlUdW5lcyB2Ny42LjJgYFxuICAgKiAtIGVuY29kZXJfaW5mb1xuICAgICAtIGNvbW1vblxuICAgICAtIGVuY29kZXJfaW5mb1xuICAgICAtIGBgTEFNRSAzLjkyLjArYGBcbiAgICogLSBlbmNvZGVyX3NldHRpbmdzXG4gICAgIC0gY29tbW9uXG4gICAgIC0gZW5jb2Rlcl9zZXR0aW5nc1xuICAgICAtIGBgLWIgMjU1K2BgXG4gICAqIC0gZm9ybWF0XG4gICAgIC0gYXVkaW9cbiAgICAgLSBlLmcuLCDigJxNUDPigJ0gb3Ig4oCcRkxBQ+KAnVxuICAgICAtIGBgTVAzYGAsIGBgRkxBQ2BgXG4gICAqIC0gZ2VucmVcbiAgICAgLSBjb21tb25cbiAgICAgLSBnZW5yZVxuICAgICAtIFxuICAgKiAtIGdlbnJlc1xuICAgICAtIGNvbW1vblxuICAgICAtIGdlbnJlc1xuICAgICAtIFxuICAgKiAtIGdyb3VwaW5nXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQSBjb250ZW50IGdyb3VwLCB3aGljaCBpcyBhIGNvbGxlY3Rpb24gb2YgbWVkaWEgaXRlbXMgc3VjaCBhcyBhIENEIGJveGVkIHNldC5cbiAgICAgLSBcbiAgICogLSBpbWFnZXNcbiAgICAgLSBjb21tb25cbiAgICAgLSBpbWFnZXNcbiAgICAgLSBgYFsnPG1lZGlhZmlsZS5JbWFnZSBvYmplY3QgYXQgMHg3ZjUxZmNlMjZiMjA+J11gYFxuICAgKiAtIGluaXRpYWxfa2V5XG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIEluaXRpYWwga2V5IGZyYW1lIGNvbnRhaW5zIHRoZSBtdXNpY2FsIGtleSBpbiB3aGljaCB0aGUgc291bmQgc3RhcnRzLiBJdCBpcyByZXByZXNlbnRlZCBhcyBhIHN0cmluZyB3aXRoIGEgbWF4aW11bSBsZW5ndGggb2YgdGhyZWUgY2hhcmFjdGVycy4gVGhlIGdyb3VuZCBrZXlzIGFyZSByZXByZXNlbnRlZCB3aXRoIFwiQVwiLFwiQlwiLFwiQ1wiLFwiRFwiLFwiRVwiLCBcIkZcIiBhbmQgXCJHXCIgYW5kIGhhbGZrZXlzIHJlcHJlc2VudGVkIHdpdGggXCJiXCIgYW5kIFwiI1wiLiBNaW5vciBpcyByZXByZXNlbnRlZCBhcyBcIm1cIi5cbiAgICAgLSBgYERibWBgXG4gICAqIC0gaXNyY1xuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBJbnRlcm5hdGlvbmFsIFN0YW5kYXJkIFJlY29yZGluZyBDb2RlLCBhYmJyZXZpYXRlZCB0byBJU1JDLCBpcyBhIHN5c3RlbSBvZiBjb2RlcyB0aGF0IGlkZW50aWZ5IGF1ZGlvIGFuZCBtdXNpYyB2aWRlbyByZWNvcmRpbmdzLlxuICAgICAtIGBgQ0FDMTE4OTg5MDAzYGAsIGBgSVRPMTAxMTE3NzQwYGBcbiAgICogLSBsYWJlbFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBsYWJlbCB3aGljaCBpc3N1ZWQgdGhlIHJlbGVhc2UuIFRoZXJlIG1heSBiZSBtb3JlIHRoYW4gb25lLlxuICAgICAtIGBgQnJpbGxpYW50IENsYXNzaWNzYGAsIGBgd2VhYGBcbiAgICogLSBsYW5ndWFnZVxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBsYW5ndWFnZSBhIHJlbGVhc2XigJlzIHRyYWNrIGxpc3QgaXMgd3JpdHRlbiBpbi4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgdGFrZW4gZnJvbSB0aGUgSVNPIDYzOS0zIHN0YW5kYXJkLlxuICAgICAtIGBgenh4YGAsIGBgZW5nYGBcbiAgICogLSBsZW5ndGhcbiAgICAgLSBhdWRpb1xuICAgICAtIFRoZSBsZW5ndGggb2YgYSByZWNvcmRpbmcgaW4gc2Vjb25kcy5cbiAgICAgLSBgYDY3NC40NjY2NjY2NjY2NjY3YGBcbiAgICogLSBseXJpY2lzdFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSB3cml0ZXIgb2YgdGhlIHRleHQgb3IgbHlyaWNzIGluIHRoZSByZWNvcmRpbmcuXG4gICAgIC0gXG4gICAqIC0gbHlyaWNzXG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIGx5cmljcyBvZiB0aGUgc29uZyBvciBhIHRleHQgdHJhbnNjcmlwdGlvbiBvZiBvdGhlciB2b2NhbCBhY3Rpdml0aWVzLlxuICAgICAtIFxuICAgKiAtIG1iX2FsYnVtYXJ0aXN0aWRcbiAgICAgLSBtdXNpY19icmFpbnpcbiAgICAgLSBNdXNpY0JyYWlueiBhbGJ1bSBhcnRpc3QgSUQuXG4gICAgIC0gYGAxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzlgYCwgYGBiOTcyZjU4OS1mYjBlLTQ3NGUtYjY0YS04MDNiMDM2NGZhNzVgYFxuICAgKiAtIG1iX2FsYnVtYXJ0aXN0aWRzXG4gICAgIC0gbXVzaWNfYnJhaW56XG4gICAgIC0gTXVzaWNCcmFpbnogYWxidW0gYXJ0aXN0IElEcyBhcyBhIGxpc3QuXG4gICAgIC0gYGBbJ2I5NzJmNTg5LWZiMGUtNDc0ZS1iNjRhLTgwM2IwMzY0ZmE3NScsICdkZWEyOGFhOS0xMDg2LTRmZmEtODczOS0wY2NjNzU5ZGUxY2UnLCAnZDJjZWQyZjEtNmI1OC00N2NmLWFlODctNTk0M2UyYWI2ZDk5J11gYFxuICAgKiAtIG1iX2FsYnVtaWRcbiAgICAgLSBtdXNpY19icmFpbnpcbiAgICAgLSBNdXNpY0JyYWlueiBhbGJ1bSBJRC5cbiAgICAgLSBgYGZkNmFkYzc3LTE0ODktNGExMy05YWEwLTMyOTUxMDYxZDkyYmBgXG4gICAqIC0gbWJfYXJ0aXN0aWRcbiAgICAgLSBtdXNpY19icmFpbnpcbiAgICAgLSBNdXNpY0JyYWlueiBhcnRpc3QgSUQuXG4gICAgIC0gYGAxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzlgYFxuICAgKiAtIG1iX2FydGlzdGlkc1xuICAgICAtIG11c2ljX2JyYWluelxuICAgICAtIE11c2ljQnJhaW56IGFydGlzdCBJRHMgYXMgYSBsaXN0LlxuICAgICAtIGBgWycxZjlkZjE5Mi1hNjIxLTRmNTQtODg1MC0yYzUzNzNiN2VhYzknXWBgXG4gICAqIC0gbWJfcmVsZWFzZWdyb3VwaWRcbiAgICAgLSBtdXNpY19icmFpbnpcbiAgICAgLSBNdXNpY0JyYWlueiByZWxlYXNlZ3JvdXAgSUQuXG4gICAgIC0gYGBmNzE0ZmQ3MC1hYWNhLTQ4NjMtOWQwZC0yNzY4YTUzYWNhZWJgYFxuICAgKiAtIG1iX3JlbGVhc2V0cmFja2lkXG4gICAgIC0gbXVzaWNfYnJhaW56XG4gICAgIC0gTXVzaWNCcmFpbnogcmVsZWFzZSB0cmFjayBJRC5cbiAgICAgLSBgYDM4YzhjMTE0LTVlM2ItNDg0Zi04YWYwLTc5YzQ3ZWY5YzE2OWBgXG4gICAqIC0gbWJfdHJhY2tpZFxuICAgICAtIG11c2ljX2JyYWluelxuICAgICAtIE11c2ljQnJhaW56IHRyYWNrIElELlxuICAgICAtIGBgYzM5MGIxMzItNGE0NC00ZTE2LWJlYzMtYmZmYmJjYWExOWFhYGBcbiAgICogLSBtYl93b3JraGllcmFyY2h5X2lkc1xuICAgICAtIG11c2ljX2JyYWluelxuICAgICAtIEFsbCBJRHMgaW4gdGhlIHdvcmsgaGllcmFyY2h5LiBUaGlzIGZpZWxkIGNvcnJlc3BvbmRzIHRvIHRoZSBmaWVsZCBgd29ya19oaWVyYXJjaHlgLiBUaGUgdG9wIGxldmVsIHdvcmsgSUQgYXBwZWFycyBmaXJzdC4gQSBzbGFzaCAoLykgaXMgdXNlZCBhcyBzZXBhcmF0b3IuXG4gICAgIC0gYGBlMjA4YzVmNS01ZDM3LTNkZmMtYWMwYi05OTlmMjA3YzllNDYgLyA1YWRjMjEzZi03MDBhLTQ0MzUtOWU5NS04MzFlZDcyMGYzNDggLyBlYWZlYzUxZi00N2M1LTNjNjYtOGMzNi1hNTI0MjQ2Yzg1ZjhgYFxuICAgKiAtIG1iX3dvcmtpZFxuICAgICAtIG11c2ljX2JyYWluelxuICAgICAtIE11c2ljQnJhaW56IHdvcmsgSUQuXG4gICAgIC0gYGA1MDhlYzRiMS05NTQ5LTM4Y2QtYTYxZS0xZjBkMTIwYTYxMThgYFxuICAgKiAtIG1lZGlhXG4gICAgIC0gY29tbW9uXG4gICAgIC0gQSBwcm90b3R5cGljYWwgbWVkaXVtIGlzIG9uZSBvZiB0aGUgcGh5c2ljYWwsIHNlcGFyYXRlIHRoaW5ncyB5b3Ugd291bGQgZ2V0IHdoZW4geW91IGJ1eSBzb21ldGhpbmcgaW4gYSByZWNvcmQgc3RvcmUuXG4gICAgIC0gYGBDRGBgXG4gICAqIC0gbW9udGhcbiAgICAgLSBkYXRlXG4gICAgIC0gVGhlIHJlbGVhc2UgbW9udGggb2YgdGhlIHNwZWNpZmljIHJlbGVhc2UuXG4gICAgIC0gYGAxMWBgXG4gICAqIC0gb3JpZ2luYWxfZGF0ZVxuICAgICAtIGRhdGVcbiAgICAgLSBUaGUgcmVsZWFzZSBkYXRlIG9mIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mIHRoZSBhbGJ1bS5cbiAgICAgLSBgYDE5OTEtMTEtMDRgYFxuICAgKiAtIG9yaWdpbmFsX2RheVxuICAgICAtIGRhdGVcbiAgICAgLSBUaGUgcmVsZWFzZSBkYXkgb2YgdGhlIG9yaWdpbmFsIHZlcnNpb24gb2YgdGhlIGFsYnVtLlxuICAgICAtIGBgNGBgXG4gICAqIC0gb3JpZ2luYWxfbW9udGhcbiAgICAgLSBkYXRlXG4gICAgIC0gVGhlIHJlbGVhc2UgbW9udGggb2YgdGhlIG9yaWdpbmFsIHZlcnNpb24gb2YgdGhlIGFsYnVtLlxuICAgICAtIGBgMTFgYFxuICAgKiAtIG9yaWdpbmFsX3llYXJcbiAgICAgLSBkYXRlXG4gICAgIC0gVGhlIHJlbGVhc2UgeWVhciBvZiB0aGUgb3JpZ2luYWwgdmVyc2lvbiBvZiB0aGUgYWxidW0uXG4gICAgIC0gYGAxOTkxYGBcbiAgICogLSByMTI4X2FsYnVtX2dhaW5cbiAgICAgLSByMTI4XG4gICAgIC0gQW4gb3B0aW9uYWwgZ2FpbiBmb3IgYWxidW0gbm9ybWFsaXphdGlvbi4gRUJVIFIgMTI4IGlzIGEgcmVjb21tZW5kYXRpb24gZm9yIGxvdWRuZXNzIG5vcm1hbGlzYXRpb24gYW5kIG1heGltdW0gbGV2ZWwgb2YgYXVkaW8gc2lnbmFscy5cbiAgICAgLSBcbiAgICogLSByMTI4X3RyYWNrX2dhaW5cbiAgICAgLSByMTI4XG4gICAgIC0gQW4gb3B0aW9uYWwgZ2FpbiBmb3IgdHJhY2sgbm9ybWFsaXphdGlvbi4gRUJVIFIgMTI4IGlzIGEgcmVjb21tZW5kYXRpb24gZm9yIGxvdWRuZXNzIG5vcm1hbGlzYXRpb24gYW5kIG1heGltdW0gbGV2ZWwgb2YgYXVkaW8gc2lnbmFscy5cbiAgICAgLSBcbiAgICogLSByZWxlYXNlZ3JvdXBfdHlwZXNcbiAgICAgLSBtdXNpY19icmFpbnpcbiAgICAgLSBUaGlzIGZpZWxkIGNvbGxlY3RzIGFsbCBpdGVtcyBpbiB0aGUgTXVzaWNCcmFpbnrigJkgQVBJICByZWxhdGVkIHRvIHR5cGU6IGB0eXBlYCwgYHByaW1hcnktdHlwZSBhbmQgYHNlY29uZGFyeS10eXBlLWxpc3RgLiBNYWluIHVzYWdlIG9mIHRoaXMgZmllbGQgaXMgdG8gZGV0ZXJtaW5lIGluIGEgc2VjdXJlIG1hbm5lciBpZiB0aGUgcmVsZWFzZSBpcyBhIHNvdW5kdHJhY2suXG4gICAgIC0gXG4gICAqIC0gcmdfYWxidW1fZ2FpblxuICAgICAtIHJnXG4gICAgIC0gUmVwbGF5R2FpbiBBbGJ1bSBHYWluLCBzZWUgaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUmVwbGF5R2Fpbi5cbiAgICAgLSBcbiAgICogLSByZ19hbGJ1bV9wZWFrXG4gICAgIC0gcmdcbiAgICAgLSBSZXBsYXlHYWluIEFsYnVtIFBlYWssIHNlZSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SZXBsYXlHYWluLlxuICAgICAtIFxuICAgKiAtIHJnX3RyYWNrX2dhaW5cbiAgICAgLSByZ1xuICAgICAtIFJlcGxheUdhaW4gVHJhY2sgR2Fpbiwgc2VlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JlcGxheUdhaW4uXG4gICAgIC0gYGAwLjBgYFxuICAgKiAtIHJnX3RyYWNrX3BlYWtcbiAgICAgLSByZ1xuICAgICAtIFJlcGxheUdhaW4gVHJhY2sgUGVhaywgc2VlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JlcGxheUdhaW4uXG4gICAgIC0gYGAwLjAwMDI0NGBgXG4gICAqIC0gc2FtcGxlcmF0ZVxuICAgICAtIGF1ZGlvXG4gICAgIC0gVGhlIHNhbXBsZSByYXRlIGFzIGFuIGludGVnZXIgbnVtYmVyLlxuICAgICAtIGBgNDQxMDBgYFxuICAgKiAtIHNjcmlwdFxuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBzY3JpcHQgdXNlZCB0byB3cml0ZSB0aGUgcmVsZWFzZeKAmXMgdHJhY2sgbGlzdC4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgdGFrZW4gZnJvbSB0aGUgSVNPIDE1OTI0IHN0YW5kYXJkLlxuICAgICAtIGBgTGF0bmBgXG4gICAqIC0gdGl0bGVcbiAgICAgLSBjb21tb25cbiAgICAgLSBUaGUgdGl0bGUgb2YgYSBhdWRpbyBmaWxlLlxuICAgICAtIGBgMzIgVmFyaWF0aW9ucyBmb3IgUGlhbm8gaW4gQyBtaW5vciBvbiBhbiBPcmlnaW5hbCBUaGVtZSwgV29PIDgwYGBcbiAgICogLSB0cmFja1xuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSB0cmFjayBudW1iZXIuXG4gICAgIC0gYGAxYGBcbiAgICogLSB0cmFja3RvdGFsXG4gICAgIC0gY29tbW9uXG4gICAgIC0gVGhlIHRvdGFsIHRyYWNrIG51bWJlci5cbiAgICAgLSBgYDEyYGBcbiAgICogLSB1cmxcbiAgICAgLSBjb21tb25cbiAgICAgLSBVbmlmb3JtIFJlc291cmNlIExvY2F0b3IuXG4gICAgIC0gXG4gICAqIC0gd29ya1xuICAgICAtIGNvbW1vblxuICAgICAtIFRoZSBNdXNpY2JyYWluenPigJkgd29yayBlbnRpdHkuXG4gICAgIC0gYGAzMiBWYXJpYXRpb25zIGZvciBQaWFubyBpbiBDIG1pbm9yIG9uIGFuIE9yaWdpbmFsIFRoZW1lLCBXb08gODBgYFxuICAgKiAtIHdvcmtfaGllcmFyY2h5XG4gICAgIC0gbXVzaWNfYnJhaW56XG4gICAgIC0gVGhlIGhpZXJhcmNoeSBvZiB3b3JrczogVGhlIHRvcCBsZXZlbCB3b3JrIGFwcGVhcnMgZmlyc3QuIEFzIHNlcGFyYXRvciBpcyB0aGlzIHN0cmluZyB1c2VkOiAtLT4uXG4gICAgIC0gYGBEaWUgWmF1YmVyZmzDtnRlLCBLLiA2MjAgLS0+IERpZSBaYXViZXJmbMO2dGUsIEsuIDYyMDogQWt0IEkgLS0+IERpZSBaYXViZXJmbMO2dGUsIEsuIDYyMDogQWN0IEksIFNjZW5lIElJLiBOby4gMiBBcmlhIFwiV2FzIGjDtnIgLi4uYGBcbiAgICogLSB5ZWFyXG4gICAgIC0gZGF0ZVxuICAgICAtIFRoZSByZWxlYXNlIHllYXIgb2YgdGhlIHNwZWNpZmljIHJlbGVhc2UuXG4gICAgIC0gYGAyMDAxYGBcblxuXG5EZXZlbG9wbWVudFxuPT09PT09PT09PT1cblxuVGVzdFxuLS0tLVxuXG46OlxuXG4gICAgcHllbnYgbG9jYWwgMy42LjEzIDMuNy4xMCAzLjkuMlxuICAgIHBpcCBpbnN0YWxsIHRveCB0b3gtcHllbnZcbiAgICB0b3hcblxuUnVuIGEgc2luZ2xlIHRlc3RcblxuOjpcblxuICAgIHRveCAtZSBxdWljayAtLSAtcyB0ZXN0IHRlc3Rfam9iLlRlc3RKb2JXaXRoQ29uZmlnUGFyc2VyLnRlc3Rfc291cmNlXG5cblxuUHVibGlzaCBhIG5ldyB2ZXJzaW9uXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuOjpcblxuICAgIGdpdCB0YWcgMS4xLjFcbiAgICBnaXQgcHVzaCAtLXRhZ3NcbiAgICBweXRob24gc2V0dXAucHkgc2Rpc3QgdXBsb2FkXG5cblxuUGFja2FnZSBkb2N1bWVudGF0aW9uXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuVGhlIHBhY2thZ2UgZG9jdW1lbnRhdGlvbiBpcyBob3N0ZWQgb25cbmByZWFkdGhlZG9jcyA8aHR0cDovL2F1ZGlvcmVuYW1lLnJlYWR0aGVkb2NzLmlvPmBfLlxuXG5HZW5lcmF0ZSB0aGUgcGFja2FnZSBkb2N1bWVudGF0aW9uOlxuXG46OlxuXG4gICAgcHl0aG9uIHNldHVwLnB5IGJ1aWxkX3NwaGlueCIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAiIiw=
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL0pvc2VmLUZyaWVkcmljaC9hdWRpb3JlbmFtZSIs
ICAgICJrZXl3b3JkcyI6ICJhdWRpbyIs
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImF1ZGlvcmVuYW1lIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvYXVkaW9yZW5hbWUvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvYXVkaW9yZW5hbWUvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9Kb3NlZi1GcmllZHJpY2gvYXVkaW9yZW5hbWUi
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvYXVkaW9yZW5hbWUvMy4zLjAvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIlJlbmFtZSBhdWRpbyBmaWxlcyBmcm9tIG1ldGFkYXRhIHRhZ3MuIiw=
ICAgICJ2ZXJzaW9uIjogIjMuMy4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNDE2NTEzMCw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjIuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhN2UzZTljYTE0NDU5NDU2YjE5MDIxOTk0YjUzZjQzOGJkMjgyMTMyNjYzZGRkOWU0OTBhYzc3YmE4M2U0YzhkIiw=
ICAgICAgICAgICJtZDUiOiAiNDJhZWJiZWNlMTA2MjBjYzFlZjUyYTM2ZmFkOGQ5ZDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTJhOTU5YTNiNjU2MWI4ZTZmN2NkZmRmY2ZlOWI1NTg3YTBhZjJlNDEzYTk5NmUzZTJjODk0NWIxNzg0MjAzYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMS4yLjQudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0MmFlYmJlY2UxMDYyMGNjMWVmNTJhMzZmYWQ4ZDlkOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDYyOTE1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMS0wMVQxNzoxNjoxOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMS0wMVQxNzoxNjoxOC4wNDMwODFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hNy9lMy9lOWNhMTQ0NTk0NTZiMTkwMjE5OTRiNTNmNDM4YmQyODIxMzI2NjNkZGQ5ZTQ5MGFjNzdiYTgzZTRjOGQvYXVkaW9yZW5hbWUtMS4yLjQudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuNSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxZWJlNWZkZTE0ZTY0NTZiZTczZjFmYmViYmI4MGU1NDliN2M0ZmViMjVlNzMxMDhkZDU2MGU3NTZlYzEyOTNiIiw=
ICAgICAgICAgICJtZDUiOiAiMGU1OWE1NDk5MzUyMDdlYzRkZDg5MjI3MTUwNjNhZGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTFhNjRlYjhiZjAxYjEzZDZlMjUzM2Q5MWY5MDhlMjMwOTI3ZWJjNzEwNWM0N2E5MjI2Mjk1YmJhNTk4MmE0YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMS4yLjUudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwZTU5YTU0OTkzNTIwN2VjNGRkODkyMjcxNTA2M2FkZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDUwMjAzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMS0wNFQxMDoyMDoxNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMS0wNFQxMDoyMDoxNy44ODUzMjJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xZS9iZS81ZmRlMTRlNjQ1NmJlNzNmMWZiZWJiYjgwZTU0OWI3YzRmZWIyNWU3MzEwOGRkNTYwZTc1NmVjMTI5M2IvYXVkaW9yZW5hbWUtMS4yLjUudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuNiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNjE3YzBiZTYxN2FhMzQxZDE2ODBmMTI3M2JmZTFjMWE2M2QyNzgwYzkwNjU2YjhmZWRmMWM3YTcyY2NmZmRiIiw=
ICAgICAgICAgICJtZDUiOiAiOTg2MDc5MmMxYWNmYTY4ZWY0MDhhOTczY2QxZDFhZjMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzM2ZjA4ZWVkNTI5NzM0ZDRjZDllOGVlYjgyM2E5MWFiMGYwN2UxZDA4MWFlZmQ0MmRkNjIxZTVmYWY5MjVhMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMS4yLjYudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ODYwNzkyYzFhY2ZhNjhlZjQwOGE5NzNjZDFkMWFmMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDU4ODQzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMS0xMVQxMDowMDozMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMS0xMVQxMDowMDozMy4yODMzMDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNi8xNy9jMGJlNjE3YWEzNDFkMTY4MGYxMjczYmZlMWMxYTYzZDI3ODBjOTA2NTZiOGZlZGYxYzdhNzJjY2ZmZGIvYXVkaW9yZW5hbWUtMS4yLjYudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkZDg5YzhkMmJlMTQxZTI2OWVlYzg2ZWUyYTMzOTI4NTAyZmY5Mzc3ZmY4YjQyMjZhMDY3Y2Q3YzE2ZTdmNzhiIiw=
ICAgICAgICAgICJtZDUiOiAiNDAzNDkwZmQ1Njg4OGYwZjM0YzQ2ZjcxNzEzYzE3ZTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDFhMWZmYjhhNDgyOTkzNDVkYTExNzkwYTI0OWI0MDA4ZjYyN2VkNDYyMzBmYjQ0YmJjNmYzYzY0Yzg0MTg0OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMS4zLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0MDM0OTBmZDU2ODg4ZjBmMzRjNDZmNzE3MTNjMTdlNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDYxOTY2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMi0wMVQxNjoyOTowMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMi0wMVQxNjoyOTowMy4wNTY5NDdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kZC84OS9jOGQyYmUxNDFlMjY5ZWVjODZlZTJhMzM5Mjg1MDJmZjkzNzdmZjhiNDIyNmEwNjdjZDdjMTZlN2Y3OGIvYXVkaW9yZW5hbWUtMS4zLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjAuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZTQ0Y2FiMGZlMTE1OTc5MjUyNTVmZjNmOTA5MWQ3YTE5OGQ1MGU3YzAzZmUzYzk1NGQxZDVhZTJhYmQyZjI0Iiw=
ICAgICAgICAgICJtZDUiOiAiODIyMDVjOTQ4NjNkMzBkMjkyZDIyZWI5ZmVhMzA0ZWUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTgyOTJmNGMxZTI0ZmMxNzk1ZGNmMTY1ZThkYmMxMWNkOTQ3MGJlMGQyNjZmNDJhZDEzYzFmNzYwYjZiMzIxMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMi4wLjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4MjIwNWM5NDg2M2QzMGQyOTJkMjJlYjlmZWEzMDRlZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDQ2NTYxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMy0yN1QwNzowOTo0MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMy0yN1QwNzowOTo0MS42NzEyMDlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZS80NC9jYWIwZmUxMTU5NzkyNTI1NWZmM2Y5MDkxZDdhMTk4ZDUwZTdjMDNmZTNjOTU0ZDFkNWFlMmFiZDJmMjQvYXVkaW9yZW5hbWUtMi4wLjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjEuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlMGEwNDhiMjM1ODQzNmJmZTk4NzdjZjBlY2Q4NGJkZGFiMGUxMjM1NzM0YzE2MTI0NjQwYmMyYTdhM2FkMDk0Iiw=
ICAgICAgICAgICJtZDUiOiAiNDY3NGExY2U4ZmQwM2U4MWVkMzBjYjE5M2U1YmU0OGYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWM1ZTI1OTllNTY5ODU0NjhkOGVlNDUyMmU4YWZjOGQwNTg1MTdhMmMzNzg4MDVmMjRlMWEwNzkwYjc1MWU3MCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMi4xLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0Njc0YTFjZThmZDAzZTgxZWQzMGNiMTkzZTViZTQ4ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDQ2NzU2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMC0wMi0xMVQxNzozMDowMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMC0wMi0xMVQxNzozMDowMi40NzI2ODJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lMC9hMC80OGIyMzU4NDM2YmZlOTg3N2NmMGVjZDg0YmRkYWIwZTEyMzU3MzRjMTYxMjQ2NDBiYzJhN2EzYWQwOTQvYXVkaW9yZW5hbWUtMi4xLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjEuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5NzA5YWUzNzMyYjk4Y2RmYmFlNTliOWM5YjNkYWU2NmNhOTY1MmJmZGE3NjE1NTExNTBmZTYwYWNiNzk5NWQ2Iiw=
ICAgICAgICAgICJtZDUiOiAiMjYwZmFkY2Y2NjNkY2JkYTY1N2ZhOTgzNTdjZDc2ZTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjg5ZmEzOGMxNDk2OGRmOWMyYTkzMGEyYTEyY2EyZmU0ZWMwNmI4OGE4ZDM5ZjYxNGVmMTI0NjdiZjYxZDZlMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMi4xLjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyNjBmYWRjZjY2M2RjYmRhNjU3ZmE5ODM1N2NkNzZlMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDQ2NzQ0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wMS0yNFQxNjo1Mzo0OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wMS0yNFQxNjo1Mzo0OC42MDE4MDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Ny8wOS9hZTM3MzJiOThjZGZiYWU1OWI5YzliM2RhZTY2Y2E5NjUyYmZkYTc2MTU1MTE1MGZlNjBhY2I3OTk1ZDYvYXVkaW9yZW5hbWUtMi4xLjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMGY3MWViYjcyYjZlMjA4ODgyNGUyODNhODcxNmI5OGE4ZTc4YzQwM2Y3ZjhlMjEyY2MzYjM5MmQwYmJmODNhIiw=
ICAgICAgICAgICJtZDUiOiAiZGY2YzM2MDEzNzhlMjNhNWM5MzU4OWM2MzdlY2ViNDYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDRlMGFhNzA4OGUzODg1YzJhMWM3YTE5Y2Y0MDJkZDg5NjMyYjQxNDAyZjVhYWQyZmZiOTMwMjcxMzI4YmQyOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4wLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkZjZjMzYwMTM3OGUyM2E1YzkzNTg5YzYzN2VjZWI0NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDY1MzYzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNS0wN1QwNTo1Nzo0MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNS0wN1QwNTo1Nzo0MC40Nzk2OThaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMC9mNy8xZWJiNzJiNmUyMDg4ODI0ZTI4M2E4NzE2Yjk4YThlNzhjNDAzZjdmOGUyMTJjYzNiMzkyZDBiYmY4M2EvYXVkaW9yZW5hbWUtMy4wLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjAuMGExIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ZjFiNDM1ODkyMjdiZGIxOTQyYjVlYTgyNTIwM2MyOWU0ZThkNDhiZTA5MTdkZjdlYTNkY2NjYzkxZTk2NWFjIiw=
ICAgICAgICAgICJtZDUiOiAiMWM0N2VmNDc5NjZlZmY1MzczNzg2YmM5MGJmMTViNTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWFjYWY2NzczY2ViZjdlY2YxNmE4YzUzZGZmOGZmNWFiODJlMWY4MTc0MTZjM2RjZDAwNzg5M2FiZmM3MjZhNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4wLjBhMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxYzQ3ZWY0Nzk2NmVmZjUzNzM3ODZiYzkwYmYxNWI1NyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDU1Njg1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNC0xMlQxNToyODozNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNC0xMlQxNToyODozNi41OTMwNDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Zi8xYi80MzU4OTIyN2JkYjE5NDJiNWVhODI1MjAzYzI5ZTRlOGQ0OGJlMDkxN2RmN2VhM2RjY2NjOTFlOTY1YWMvYXVkaW9yZW5hbWUtMy4wLjBhMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjAuMGEyIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5OWNkNDJhZGNmMDI5NjQxMWMzMTZiNGZiYTg4NjY5YmY4NzUyNWIyMDc4NmFmMTAyZTQ5NGU2YTU3YjNmOTgxIiw=
ICAgICAgICAgICJtZDUiOiAiNDgxMGI1YjI1MTVhNTMyNjZjNTIxNTg3OGUxYjM2MjgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTQ1NjM5ODNmYjNkZDE5OWFjOWVmNzkyMWMwZWM1ZmZhY2Q2OTUwNTY3MmFjYjkwZWY0YzBlNWNjY2QwNGI2YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4wLjBhMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0ODEwYjViMjUxNWE1MzI2NmM1MjE1ODc4ZTFiMzYyOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDYxNTcxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNC0xM1QxMToyNTo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNC0xM1QxMToyNTo0Ny4wMTgxNzRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85OS9jZC80MmFkY2YwMjk2NDExYzMxNmI0ZmJhODg2NjliZjg3NTI1YjIwNzg2YWYxMDJlNDk0ZTZhNTdiM2Y5ODEvYXVkaW9yZW5hbWUtMy4wLjBhMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjAuMGEzIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxYmFhYTMyY2Q0ODM3ZmE1MWEwMTk0Nzc4NTMyY2UxYjQ2MDcyMzkzNDU2MDUwNGYzN2RjNGQzYjA2OTdkZjQ1Iiw=
ICAgICAgICAgICJtZDUiOiAiNTE4MzQxODQ4OGYyODZkY2UwZmMyOGNmZTdjNDM1YjMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODBkMGUzYmI3ZDkxZDllYTA3NWQzOTJiM2E0NWU2NDlkYjFjZGI5OTkzYTAxM2UxZmIxZmQwZjI4MjJlOTBjNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4wLjBhMy50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1MTgzNDE4NDg4ZjI4NmRjZTBmYzI4Y2ZlN2M0MzViMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDY1Mzc3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNC0xM1QxODowNDoyOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNC0xM1QxODowNDoyOS4zODg3MTdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xYi9hYS9hMzJjZDQ4MzdmYTUxYTAxOTQ3Nzg1MzJjZTFiNDYwNzIzOTM0NTYwNTA0ZjM3ZGM0ZDNiMDY5N2RmNDUvYXVkaW9yZW5hbWUtMy4wLjBhMy50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjEuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZTQ5ZDM2MWQ5MjA1ZWI1ZjA0NDJhNWViOTQyZmNmZDA5ODg1ZjRhODljNDk3OWE4MDQ1MjQ1NWQ4MzAyZTYwIiw=
ICAgICAgICAgICJtZDUiOiAiYjQ1MDAwZDI0ZGNmNDlmNmZkODBlNWZiN2JmMmIwMDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjk4YzU1MzJmN2ZjNWJmNTZjNTNiMThiMTUzNDA5NmRjNjY4NTMxMjkxMWUyMGU1MmViNjQzNzA5M2E2ODQ3NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4xLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiNDUwMDBkMjRkY2Y0OWY2ZmQ4MGU1ZmI3YmYyYjAwOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDY2NTY0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNi0xMVQxMzoyMTo1NCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNi0xMVQxMzoyMTo1NC4wNTkzMTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZS80OS9kMzYxZDkyMDVlYjVmMDQ0MmE1ZWI5NDJmY2ZkMDk4ODVmNGE4OWM0OTc5YTgwNDUyNDU1ZDgzMDJlNjAvYXVkaW9yZW5hbWUtMy4xLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjIuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhNTQxNjRlYmUxZjRmZDM0NGJlYWVkMDE4NTljMWJiNzk3ZjBmMTg3ODQ5MzUwYWE4N2Q0YmFiNWJhZDBkODRlIiw=
ICAgICAgICAgICJtZDUiOiAiMjFmOTA5ZDY5MzcxZDJhMDZlNTZlNGE0YTAxNWZlMzgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzFhN2Q4NTZjNGU0ODkwZDI3OWYwNDE4NjgwODk2N2YzYjVkYzA3ZmQ5OTgxNjFiOGRhMDhmNmE5YTkyMmFkZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4yLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyMWY5MDlkNjkzNzFkMmEwNmU1NmU0YTRhMDE1ZmUzOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDc3MTg2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNi0xN1QwODowMzo1MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNi0xN1QwODowMzo1Mi40NTE1MzFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hNS80MS82NGViZTFmNGZkMzQ0YmVhZWQwMTg1OWMxYmI3OTdmMGYxODc4NDkzNTBhYTg3ZDRiYWI1YmFkMGQ4NGUvYXVkaW9yZW5hbWUtMy4yLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjIuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjYmMxNjYyYzY0ZjdlZmQ3MGVmNzgzY2I3YmZhNDBkYTZlMmRhYTgyYzhlZDliMzgxZjZmNjJlNzk4N2YwYjUzIiw=
ICAgICAgICAgICJtZDUiOiAiMDJhOTI4NDllYmY0NjE5NWFmZWI2YmFhNzMyNDc3ZTkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOGM5OTNjN2FkNDY0MTY5ZGYxMDEzYzk0OWM4MmNjYjhmNDAxNTUwMzJlODgzY2Y0MjA5ODhlZDlhZGNmYjEzOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4yLjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwMmE5Mjg0OWViZjQ2MTk1YWZlYjZiYWE3MzI0NzdlOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDc3MTk5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNi0xN1QwODo1Mjo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNi0xN1QwODo1Mjo1NS4yMDI1MTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jYi9jMS82NjJjNjRmN2VmZDcwZWY3ODNjYjdiZmE0MGRhNmUyZGFhODJjOGVkOWIzODFmNmY2MmU3OTg3ZjBiNTMvYXVkaW9yZW5hbWUtMy4yLjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjMuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmYjEyNGU2ZDlmZDUyZTVmYTcyN2M4YjA1ODA1OGFkYmRhNTFjNDEzMzc0NGVjNzY0NDdiZGE4OGNjZmYzZWFmIiw=
ICAgICAgICAgICJtZDUiOiAiZTA5NGJjYjk0NWQ5YzhmOTJmYTc5ZTEyNDM1Mjg1NDAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODVlMGVmNDU4YjUzNzhlYTk4YzhlMzEyNzBlYjVjMTE1ODA1OGQyMDQxNjA2YzY2YzVjMjZkNjhjNTQ0ZDYwMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiYXVkaW9yZW5hbWUtMy4zLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlMDk0YmNiOTQ1ZDljOGY5MmZhNzllMTI0MzUyODU0MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDc4MzY5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wNi0xN1QxNzowMToxMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wNi0xN1QxNzowMToxMy4xMTY5MDBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mYi8xMi80ZTZkOWZkNTJlNWZhNzI3YzhiMDU4MDU4YWRiZGE1MWM0MTMzNzQ0ZWM3NjQ0N2JkYTg4Y2NmZjNlYWYvYXVkaW9yZW5hbWUtMy4zLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZmIxMjRlNmQ5ZmQ1MmU1ZmE3MjdjOGIwNTgwNThhZGJkYTUxYzQxMzM3NDRlYzc2NDQ3YmRhODhjY2ZmM2VhZiIs
ICAgICAgICAibWQ1IjogImUwOTRiY2I5NDVkOWM4ZjkyZmE3OWUxMjQzNTI4NTQwIiw=
ICAgICAgICAic2hhMjU2IjogIjg1ZTBlZjQ1OGI1Mzc4ZWE5OGM4ZTMxMjcwZWI1YzExNTgwNThkMjA0MTYwNmM2NmM1YzI2ZDY4YzU0NGQ2MDIi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImF1ZGlvcmVuYW1lLTMuMy4wLnRhci5neiIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZTA5NGJjYjk0NWQ5YzhmOTJmYTc5ZTEyNDM1Mjg1NDAiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiA3ODM2OSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDYtMTdUMTc6MDE6MTMiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDYtMTdUMTc6MDE6MTMuMTE2OTAwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZmIvMTIvNGU2ZDlmZDUyZTVmYTcyN2M4YjA1ODA1OGFkYmRhNTFjNDEzMzc0NGVjNzY0NDdiZGE4OGNjZmYzZWFmL2F1ZGlvcmVuYW1lLTMuMy4wLnRhci5neiIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
