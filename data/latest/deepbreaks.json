ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTWFoZGkgQmFnaGJhbnphZGVoIiw=
ICAgICJhdXRob3JfZW1haWwiOiAibWJhZ2hAZ3d1LmVkdSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIkVudmlyb25tZW50IDo6IENvbnNvbGUiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogTWFjT1MiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogTWljcm9zb2Z0IDo6IFdpbmRvd3MiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogVW5peCIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjkiLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogQmlvLUluZm9ybWF0aWNzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIjIGRlZXBCcmVha3MgI1xuIVtdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzL2Jsb2IvbWFzdGVyL2ltZy9maWcxX292ZXJ2aWV3LnBuZz9yYXc9VHJ1ZSlcbi0tLVxuXG4qKipkZWVwQnJlYWtzKioqICwgYSBjb21wdXRhdGlvbmFsIG1ldGhvZCwgYWltcyB0byBpZGVudGlmeSBpbXBvcnRhbnRcbmNoYW5nZXMgaW4gYXNzb2NpYXRpb24gd2l0aCB0aGUgcGhlbm90eXBlIG9mIGludGVyZXN0XG51c2luZyBtdWx0aS1hbGlnbm1lbnQgc2VxdWVuY2luZyBkYXRhIGZyb20gYSBwb3B1bGF0aW9uLlxuXG4qKktleSBmZWF0dXJlczoqKlxuXG4qICoqR2VuZXJhbGl0eToqKiAqZGVlcEJyZWFrcyogaXMgYSBuZXcgY29tcHV0YXRpb25hbCB0b29sIGZvciBpZGVudGlmeWluZyBnZW5vbWljIHJlZ2lvbnMgYW5kIGdlbmV0aWMgdmFyaWFudHNcbnNpZ25pZmljYW50bHkgYXNzb2NpYXRlZCB3aXRoIHBoZW5vdHlwZXMgb2YgaW50ZXJlc3QuXG4qICoqVmFsaWRhdGlvbjoqKiBBIGNvbXByZWhlbnNpdmUgZXZhbHVhdGlvbiBvZiBkZWVwQnJlYWtzIHBlcmZvcm1hbmNlIHVzaW5nIHN5bnRoZXRpYyBcbmRhdGEgZ2VuZXJhdGlvbiB3aXRoIGtub3duIGdyb3VuZCB0cnV0aCBmb3IgZ2Vub3R5cGUtcGhlbm90eXBlIGFzc29jaWF0aW9uIHRlc3RpbmcuXG4qICoqSW50ZXJwcmV0YXRpb246KiogUmF0aGVyIHRoYW4gY2hlY2tpbmcgYWxsIHBvc3NpYmxlIG11dGF0aW9ucyAoYnJlYWtzKSwgX2RlZXBCcmVha3NfIHByaW9yaXRpemVzIG9ubHkgc3RhdGlzdGljYWxseVxuICBwcm9taXNpbmcgY2FuZGlkYXRlIG11dGF0aW9ucy5cbiogKipFbGVnYW5jZToqKiBVc2VyLWZyaWVuZGx5LCBvcGVuLXNvdXJjZSBzb2Z0d2FyZSBhbGxvd2luZyBmb3IgaGlnaC1xdWFsaXR5IHZpc3VhbGl6YXRpb25cbmFuZCBzdGF0aXN0aWNhbCB0ZXN0cy4gXG4qICoqT3B0aW1pemF0aW9uOioqIFNpbmNlIHNlcXVlbmNlIGRhdGEgYXJlIG9mdGVuIHZlcnkgaGlnaCB2b2x1bWUgKG5leHQtZ2VuZXJhdGlvbiBETkEgc2VxdWVuY2luZyByZWFkcyB0eXBpY2FsbHkgXG5pbiB0aGUgbWlsbGlvbnMpLCBhbGwgbW9kdWxlcyBoYXZlIGJlZW4gd3JpdHRlbiBhbmQgYmVuY2htYXJrZWQgZm9yIGNvbXB1dGluZyB0aW1lLlxuKiAqKkRvY3VtZW50YXRpb246KiogT3Blbi1zb3VyY2UgR2l0SHViIHJlcG9zaXRvcnkgb2YgY29kZSBjb21wbGV0ZSB3aXRoIHR1dG9yaWFscyBhbmQgYSB3aWRlIHJhbmdlIG9mXG5yZWFsLXdvcmxkIGFwcGxpY2F0aW9ucy5cblxuLS0tXG4qKkNpdGF0aW9uOioqXG5cbk1haGRpIEJhZ2hiYW56YWRlaCwgVHlzb24gRGF3c29uLCBCYWhhciBTYXlvbGRpbiwgVG9kZCBILiBPYWtsZXksIEtlaXRoIEEuIENyYW5kYWxsLCBBbGkgUmFobmF2YXJkICgyMDIzKS5cbioqX2RlZXBCcmVha3NfOiBhIG1hY2hpbmUgbGVhcm5pbmcgdG9vbCBmb3IgaWRlbnRpZnlpbmcgYW5kIHByaW9yaXRpemluZyBnZW5vdHlwZS1waGVub3R5cGUgYXNzb2NpYXRpb25zKipcbiwgaHR0cHM6Ly9naXRodWIuY29tL29taWNzRXllL2RlZUJyZWFrcy8uXG5cbi0tLVxuXG4jIGRlZXBCcmVha3MgdXNlciBtYW51YWwgI1xuXG4jIyBDb250ZW50cyAjI1xuXG4qIFtGZWF0dXJlc10oI2ZlYXR1cmVzKVxuKiBbZGVlcEJyZWFrc10oI2RlZXBCcmVha3MpXG4gICAgKiBbSW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0aW9uKVxuICAgICAgKiBbV2luZG93cyBMaW51eCBNYWNdKCNXaW5kb3dzLUxpbnV4LU1hYylcbiAgICAgICogW0FwcGxlIE0xL00yIE1BQ10oI2FwcGxlLW0xbTItbWFjKVxuKiBbR2V0dGluZyBTdGFydGVkIHdpdGggZGVlcEJyZWFrc10oI2dldHRpbmctc3RhcnRlZC13aXRoLWRlZXBCcmVha3MpXG4gICAgKiBbVGVzdCBkZWVwQnJlYWtzXSgjdGVzdC1vbWVDbHVzdClcbiAgICAqIFtPcHRpb25zXSgjb3B0aW9ucykgXG4gICAgKiBbSW5wdXRdKCNpbnB1dClcbiAgICAqIFtPdXRwdXRdKCNvdXRwdXQpXG4gICAgKiBbRGVtb10oI2RlbW8pXG4gICAgKiBbVHV0b3JpYWxdKCN0dXRvcmlhbClcbiogW0FwcGxpY2F0aW9uc10oI2FwcGxpY2F0aW9ucylcbiAgKiBbKmRlZXBCcmVha3MqIGlkZW50aWZpZXMgYW1pbm8gYWNpZHMgYXNzb2NpYXRlZCB3aXRoIGNvbG9yIHNlbnNpdGl2aXR5XSgjb3BzaW4pXG4gICogW05vdmVsIGluc2lnaHRzIG9mIG5pY2hlIGFzc29jaWF0aW9ucyBpbiB0aGUgb3JhbCBtaWNyb2Jpb21lXSgjaG1wKVxuICAqIFsqZGVlcEJyZWFrcyogcmV2ZWFscyBpbXBvcnRhbnQgU0FSUy1Db1YtMiByZWdpb25zIGFzc29jaWF0ZWQgd2l0aCBBbHBoYSBhbmQgRGVsdGEgdmFyaWFudHNdKCNjb3ZpZClcbiAgKiBbKmRlZXBCcmVha3MqIGlkZW50aWZpZXMgSElWIHJlZ2lvbnMgd2l0aCBwb3RlbnRpYWxseSBpbXBvcnRhbnQgZnVuY3Rpb25zXSgjaGl2KVxuKiBbU3VwcG9ydF0oI3N1cHBvcnQpXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiMgRmVhdHVyZXMgI1xuMS4gR2VuZXJpYyBzb2Z0d2FyZSB0aGF0IGNhbiBoYW5kbGUgYW55IGtpbmQgb2Ygc2VxdWVuY2luZyBkYXRhIGFuZCBwaGVub3R5cGVzXG4yLiBPbmUgcGxhY2UgdG8gZG8gYWxsIGFuYWx5c2lzIGFuZCBwcm9kdWNpbmcgaGlnaC1xdWFsaXR5IHZpc3VhbGl6YXRpb25zXG4zLiBPcHRpbWl6ZWQgY29tcHV0YXRpb25cbjQuIFVzZXItZnJpZW5kbHkgc29mdHdhcmVcbjUuIFByb3ZpZGVzIGEgcHJlZGljdGl2ZSBwb3dlciBvZiBtb3N0IGRpc2NyaW1pbmF0aXZlIHBvc2l0aW9ucyBpbiBhIHNlcXVlbmNpbmcgZGF0YVxuIyBEZWVwQnJlYWtzICNcblxuIyMgSW5zdGFsbGF0aW9uICMjXG4qIEZpcnN0IGluc3RhbGwgKmNvbmRhKiAgXG5HbyB0byB0aGUgW0FuYWNvbmRhIHdlYnNpdGVdKGh0dHBzOi8vd3d3LmFuYWNvbmRhLmNvbS8pIGFuZCBkb3dubG9hZCB0aGUgbGF0ZXN0IHZlcnNpb24gZm9yIHlvdXIgb3BlcmF0aW5nIHN5c3RlbS4gIFxuKiBGb3IgV2luZG93cyB1c2VyczogZG8gbm90IGZvcmdldCB0byBhZGQgYGNvbmRhYCB0byB5b3VyIHN5c3RlbSBgcGF0aGBcbiogU2Vjb25kIGlzIHRvIGNoZWNrIGZvciBjb25kYSBhdmFpbGFiaWxpdHkgIFxub3BlbiBhIHRlcm1pbmFsIChvciBjb21tYW5kIGxpbmUgZm9yIFdpbmRvd3MgdXNlcnMpIGFuZCBydW46XG5gYGBcbmNvbmRhIC0tdmVyc2lvblxuYGBgXG5pdCBzaG91bGQgb3V0IHB1dCBzb21ldGhpbmcgbGlrZTpcbmBgYFxuY29uZGEgNC45LjJcbmBgYFxuaWYgbm90LCB5b3UgbXVzdCBtYWtlICpjb25kYSogYXZhaWxhYmxlIHRvIHlvdXIgc3lzdGVtIGZvciBmdXJ0aGVyIHN0ZXBzLlxuaWYgeW91IGhhdmUgcHJvYmxlbXMgYWRkaW5nIGNvbmRhIHRvIFBBVEgsIHlvdSBjYW4gZmluZCBpbnN0cnVjdGlvbnNcbltoZXJlXShodHRwczovL2RvY3MuYW5hY29uZGEuY29tL2FuYWNvbmRhL3VzZXItZ3VpZGUvZmFxLykuICBcblxuIyMjIFdpbmRvd3MgTGludXggTWFjICMjI1xuSWYgeW91IGFyZSB1c2luZyBhbiAqKkFwcGxlIE0xL00yIE1BQyoqIHBsZWFzZSBnbyB0byB0aGUgW0FwcGxlIE0xL00yIE1BQ10oI2FwcGxlLW0xbTItbWFjKSBmb3IgaW5zdGFsbGF0aW9uXG5pbnN0cnVjdGlvbnMuICBcbklmIHlvdSBoYXZlIGEgd29ya2luZyBjb25kYSBvbiB5b3VyIHN5c3RlbSwgeW91IGNhbiBzYWZlbHkgc2tpcCB0byBzdGVwIHRocmVlLiAgXG5JZiB5b3UgYXJlIHVzaW5nIHdpbmRvd3MsIHBsZWFzZSBtYWtlIHN1cmUgeW91IGhhdmUgYm90aCBnaXQgYW5kIE1pY3Jvc29mdCBWaXN1YWwgQysrIDE0LjAgb3IgZ3JlYXRlciBpbnN0YWxsZWQuXG5pbnN0YWxsIFtnaXRdKGh0dHBzOi8vZ2l0Zm9yd2luZG93cy5vcmcvKVxuW01pY3Jvc29mdCBDKysgYnVpbGQgdG9vbHNdKGh0dHBzOi8vdmlzdWFsc3R1ZGlvLm1pY3Jvc29mdC5jb20vdmlzdWFsLWNwcC1idWlsZC10b29scy8pXG5JbiBjYXNlIHlvdSBmYWNlIGlzc3VlcyB3aXRoIHRoaXMgc3RlcCwgW3RoaXMgbGlua10oaHR0cHM6Ly9naXRodWIuY29tL3B5Y2FyZXQvcHljYXJldC9pc3N1ZXMvMTI1NCkgbWF5IGhlbHAgeW91LlxuMSkgQ3JlYXRlIGEgbmV3IGNvbmRhIGVudmlyb25tZW50IChsZXQncyBjYWxsIGl0IGRlZXBCcmVha3NfZW52KSB3aXRoIHRoZSBmb2xsb3dpbmcgY29tbWFuZDpcbmBgYFxuY29uZGEgY3JlYXRlIC0tbmFtZSBkZWVwQnJlYWtzX2VudiBweXRob249My45XG5gYGBcbjIpIEFjdGl2YXRlIHlvdXIgY29uZGEgZW52aXJvbm1lbnQ6XG5gYGBjb21tYW5kbGluZVxuY29uZGEgYWN0aXZhdGUgZGVlcEJyZWFrc19lbnYgXG5gYGBcbjMpIEluc3RhbGwgKmRlZXBCcmVha3MqOlxuaW5zdGFsbCB3aXRoIHBpcDpcbmBgYGNvbW1hbmRsaW5lXG5waXAgaW5zdGFsbCBkZWVwQnJlYWtzXG5gYGBcbm9yIHlvdSBjYW4gZGlyZWN0bHkgaW5zdGFsbCBpZiBmcm9tIEdpdEh1YjpcbmBgYGNvbW1hbmRsaW5lXG5weXRob24gLW0gcGlwIGluc3RhbGwgZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzXG5gYGBcbiMjIyBBcHBsZSBNMS9NMiBNQUMgIyMjXG4xKSBVcGRhdGUvaW5zdGFsbCBYY29kZSBDb21tYW5kIExpbmUgVG9vbHNcbiAgYGBgY29tbWFuZGxpbmVcbiAgeGNvZGUtc2VsZWN0IC0taW5zdGFsbFxuICBgYGBcbjIpIEluc3RhbGwgW0JyZXddKGh0dHBzOi8vYnJldy5zaC9pbmRleF9mcilcbiAgYGBgY29tbWFuZGxpbmVcbiAgL2Jpbi9iYXNoIC1jIFwiJChjdXJsIC1mc1NMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Ib21lYnJldy9pbnN0YWxsL0hFQUQvaW5zdGFsbC5zaClcIlxuICBgYGBcbjMpIEluc3RhbGwgbGlicmFyaWVzIGZvciBicmV3XG4gIGBgYGNvbW1hbmRsaW5lXG4gIGJyZXcgaW5zdGFsbCBjbWFrZSBsaWJvbXBcbiAgYGBgXG40KSBJbnN0YWxsIG1pbmlmb3JnZVxuICBgYGBjb21tYW5kbGluZVxuICBicmV3IGluc3RhbGwgbWluaWZvcmdlXG4gIGBgYFxuNSkgQ2xvc2UgdGhlIGN1cnJlbnQgdGVybWluYWwgYW5kIG9wZW4gYSBuZXcgdGVybWluYWxcbjYpIENyZWF0ZSBhIG5ldyBjb25kYSBlbnZpcm9ubWVudCAobGV0J3MgY2FsbCBpdCBkZWVwQnJlYWtzX2Vudikgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6XG4gIGBgYGNvbW1hbmRsaW5lXG4gIGNvbmRhIGNyZWF0ZSAtLW5hbWUgZGVlcEJyZWFrc19lbnYgcHl0aG9uPTMuOVxuICBgYGBcbjcpIEFjdGl2YXRlIHRoZSBjb25kYSBlbnZpcm9ubWVudFxuICBgYGBjb21tYW5kbGluZVxuICBjb25kYSBhY3RpdmF0ZSBkZWVwQnJlYWtzX2VudlxuICBgYGBcbjgpIEluc3RhbGwgcGFja2FnZXMgZnJvbSBDb25kYVxuICBgYGBjb21tYW5kbGluZVxuICBjb25kYSBpbnN0YWxsIGxpZ2h0Z2JtXG4gIHBpcCBpbnN0YWxsIHhnYm9vc3RcbiAgYGBgXG45KSBGaW5hbGx5LCBpbnN0YWxsICpkZWVwQnJlYWtzKjpcbmluc3RhbGwgd2l0aCBwaXA6XG5gYGBjb21tYW5kbGluZVxucGlwIGluc3RhbGwgZGVlcEJyZWFrc1xuYGBgXG5vciB5b3UgY2FuIGRpcmVjdGx5IGluc3RhbGwgaWYgZnJvbSBHaXRIdWI6XG5gYGBjb21tYW5kbGluZVxucHl0aG9uIC1tIHBpcCBpbnN0YWxsIGdpdCtodHRwczovL2dpdGh1Yi5jb20vb21pY3NFeWUvZGVlcGJyZWFrc1xuYGBgXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4jIEdldHRpbmcgU3RhcnRlZCB3aXRoIGRlZXBCcmVha3MgI1xuXG4jIyBUZXN0IGRlZXBCcmVha3MgIyNcblxuVG8gdGVzdCBpZiBkZWVwQnJlYWtzIGlzIGluc3RhbGxlZCBjb3JyZWN0bHksIHlvdSBtYXkgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBpbiB0aGUgdGVybWluYWw6XG5cbmBgYCMhY21kXG5kZWVwQnJlYWtzIC1oXG5gYGBcbldoaWNoIHlpZWxkcyBkZWVwQnJlYWtzIGNvbW1hbmQgbGluZSBvcHRpb25zLlxuYGBgY29tbWFuZGxpbmVcbnVzYWdlOiBkZWVwQnJlYWtzIFstaF0gLS1zZXFmaWxlIFNFUUZJTEUgLS1zZXF0eXBlIFNFUVRZUEUgLS1tZXRhX2RhdGEgTUVUQV9EQVRBIC0tbWV0YXZhclxuICAgICAgICAgICAgICAgICAgTUVUQVZBUiBbLS1nYXAgR0FQXSAtLWFuYXR5cGUge3JlZyxjbH1cbiAgICAgICAgICAgICAgICAgIFstLWRpc3RhbmNlX21ldHJpYyB7Y29ycmVsYXRpb24saGFtbWluZyxqYWNjYXJkLG5vcm1hbGl6ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfcmFuZF9zY29yZX1dXG4gICAgICAgICAgICAgICAgICBbLS1mcmFjdGlvbiBGUkFDVElPTl0gWy0tcmVkdW5kYW50X3RocmVzaG9sZCBSRURVTkRBTlRfVEhSRVNIT0xEXVxuICAgICAgICAgICAgICAgICAgWy0tZGlzdGFuY2VfdGhyZXNob2xkIERJU1RBTkNFX1RIUkVTSE9MRF0gWy0tdG9wX21vZGVscyBUT1BfTU9ERUxTXSBbLS1wbG90XVxuICAgICAgICAgICAgICAgICAgWy0td3JpdGVdXG5cbm9wdGlvbmFsIGFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgICAgICAgICAgIHNob3cgdGhpcyBoZWxwIG1lc3NhZ2UgYW5kIGV4aXRcbiAgLS1zZXFmaWxlIFNFUUZJTEUsIC1zZiBTRVFGSUxFXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlcyBjb250YWlucyB0aGUgc2VxdWVuY2VzXG4gIC0tc2VxdHlwZSBTRVFUWVBFLCAtc3QgU0VRVFlQRVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSBvZiBzZXF1ZW5jZTogJ251JyBmb3IgbnVjbGVvdGlkZXMgb3IgJ2FhJyBmb3IgYW1pbm8tYWNpZFxuICAtLW1ldGFfZGF0YSBNRVRBX0RBVEEsIC1tZCBNRVRBX0RBVEFcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVzIGNvbnRhaW5zIHRoZSBtZXRhIGRhdGFcbiAgLS1tZXRhdmFyIE1FVEFWQVIsIC1tdiBNRVRBVkFSXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lIG9mIHRoZSBtZXRhIHZhciAocmVzcG9uc2UgdmFyaWFibGUpXG4gIC0tZ2FwIEdBUCwgLWdwIEdBUCAgICBUaHJlc2hvbGQgdG8gZHJvcCBwb3NpdGlvbnMgdGhhdCBoYXZlIEdBUHMgYWJvdmUgdGhpcyBwcm9wb3J0aW9uLlxuICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdCB2YWx1ZSBpcyAwLjcgYW5kIGl0IG1lYW5zIHRoYXQgdGhlIHBvc2l0aW9ucyB0aGF0IDcwJSBvciBtb3JlXG4gICAgICAgICAgICAgICAgICAgICAgICBHQVBzIHdpbGwgYmUgZHJvcHBlZCBmcm9tIHRoZSBhbmFseXNpcy5cbiAgLS1hbmF0eXBlIHtyZWcsY2x9LCAtYSB7cmVnLGNsfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSBvZiBhbmFseXNpc1xuICAtLWRpc3RhbmNlX21ldHJpYyB7Y29ycmVsYXRpb24saGFtbWluZyxqYWNjYXJkLG5vcm1hbGl6ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfcmFuZF9zY29yZX0sIC1kbSB7Y29ycmVsYXRpb24saGFtbWluZyxqYWNjYXJkLG5vcm1hbGl6ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfbXV0dWFsX2luZm9fc2NvcmUsYWRqdXN0ZWRfcmFuZF9zY29yZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RhbmNlIG1ldHJpYy4gRGVmYXVsdCBpcyBjb3JyZWxhdGlvbi5cbiAgLS1mcmFjdGlvbiBGUkFDVElPTiwgLWZyIEZSQUNUSU9OXG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFjdGlvbiBvZiBtYWluIGRhdGEgdG8gcnVuXG4gIC0tcmVkdW5kYW50X3RocmVzaG9sZCBSRURVTkRBTlRfVEhSRVNIT0xELCAtcnQgUkVEVU5EQU5UX1RIUkVTSE9MRFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyZXNob2xkIGZvciB0aGUgcC12YWx1ZSBvZiB0aGUgc3RhdGlzdGljYWwgdGVzdHMgdG8gZHJvcCByZWR1bmRhbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVzLiBEZWZhdWx0dmFsdWUgaXMgMC4yNVxuICAtLWRpc3RhbmNlX3RocmVzaG9sZCBESVNUQU5DRV9USFJFU0hPTEQsIC1kdGggRElTVEFOQ0VfVEhSRVNIT0xEXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQgZm9yIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHBvc2l0aW9ucyB0byBwdXQgdGhlbSBpbiBjbHVzdGVycy5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVzIHdpdGggZGlzdGFuY2VzIDw9IHRoYW4gdGhlIHRocmVzaG9sZCB3aWxsIGJlIGdyb3VwZWQgdG9nZXRoZXIuXG4gICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0IHZhbHVlcyBpcyAwLjNcbiAgLS10b3BfbW9kZWxzIFRPUF9NT0RFTFMsIC10bSBUT1BfTU9ERUxTXG4gICAgICAgICAgICAgICAgICAgICAgICBudW1iZXIgb2YgdG9wIG1vZGVscyB0byBjb25zaWRlciBmb3IgbWVyZ2luZyB0aGUgcmVzdWx0cy4gRGVmYXVsdCB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgaXMgNVxuICAtLXBsb3QgICAgICAgICAgICAgICAgcGxvdCBhbGwgdGhlIGluZGl2aWR1YWwgcG9zaXRpb25zIHRoYXQgYXJlIHN0YXRpc3RpY2FsbHlcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25pZmljYW50LkRlcGVuZGluZyBvbiB5b3VyIGRhdGEsIHRoaXMgcHJvY2VzcyBtYXkgcHJvZHVjZSBtYW55XG4gICAgICAgICAgICAgICAgICAgICAgICBwbG90cy5cbiAgLS13cml0ZSAgICAgICAgICAgICAgIER1cmluZyByZWFkaW5nIHRoZSBmYXN0YSBmaWxlIHdlIGRlbGV0ZSB0aGUgcG9zaXRpb25zIHRoYXQgaGF2ZSBHQVBzXG4gICAgICAgICAgICAgICAgICAgICAgICBvdmVyIGEgY2VydGFpbiB0aHJlc2hvbGQgdGhhdCBjYW4gYmUgY2hhbmdlZCBpbiB0aGUgYGdhcF90aHJlc2hvbGRgXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmd1bWVudGluIHRoZSBgcmVhZF9kYXRhYCBmdW5jdGlvbi4gQXMgdGhpcyBtYXkgY2hhbmdlIHRoZSB3aG9sZSBGQVNUQVxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSwgeW91IG1heXdhbnQgdG8gc2F2ZSB0aGUgRkFTVEEgZmlsZSBhZnRlciB0aGlzIGNsZWFuaW5nIHN0ZXAuXG5gYGBcblxuXG4jIyBPcHRpb25zICMjXG5cbmBgYFxuJCBkZWVwQnJlYWtzIC1oXG5gYGBcbiMjIElucHV0ICMjXG4xLiBgLS1zZXFmaWxlYCBvciBgLXNmYCBQQVRIIHRvIGEgc2VxdWVuY2UgZGF0YSBmaWxlXG4yLiBgLS1zZXF0eXBlYCBvciBgLXN0YCBzZXF1ZW5jZSB0eXBlLCB2YWx1ZXMgYXJlIGBhbWluby1hY2lkYCBhbmQgYG51YCBmb3IgbnVjbGVvdGlkZXNcbjMuIGAtLW1ldGFfZGF0YWAgb3IgYC1tZGAgUEFUSCB0byBtZXRhZGF0YSBmaWxlXG40LiBgLS1tZXRhdmFyYCBvciBgLW12YCBuYW1lIG9mIHRoZSBtZXRhIHZhcmlhYmxlXG41LiBgLS1hbmF0eXBlYCBvciBgLWFgIGFuYWx5c2lzIHR5cGUsIG9wdGlvbnMgYXJlIGByZWdgIGZvciByZWdyZXNzaW9uIGFuZCBgY2xgIGZvciBjbGFzc2lmaWNhdGlvblxuNi4gYC0tZnJhY3Rpb25gIG9yIGAtZnJgIGZyYWN0aW9uIG9mIHRoZSBtYWluIGRhdGEgKHNlcXVlbmNlIHBvc2l0aW9ucykgdG8gcnVuLiBpdCBpcyBvcHRpb25hbCwgXG5idXQgeW91IGNhbiBlbnRlciBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMSB0byBzYW1wbGUgZnJvbSB0aGUgbWFpbiBkYXRhIHNldC5cbjcuIGAtLXJlZHVuZGFudF90aHJlc2hvbGRgIG9yIGAtcnRgIHRocmVzaG9sZCBmb3IgdGhlIHAtdmFsdWUgb2YgdGhlIHN0YXRpc3RpY2FsIFxudGVzdHMgdG8gZHJvcCByZWR1bmRhbnQgZmVhdHVyZXMuIERlZmF1bHQgdmFsdWUgaXMgMC4yNS5cbjguIGAtLWRpc3RhbmNlX3RocmVzaG9sZGAgb3IgYC1kdGhgIHRocmVzaG9sZCBmb3IgdGhlIGRpc3RhbmNlIGJldHdlZW4gcG9zaXRpb25zIHRvIHB1dCB0aGVtIGluIGNsdXN0ZXJzLiBcbmZlYXR1cmVzIHdpdGggZGlzdGFuY2VzIDw9IHRoYW4gdGhlIHRocmVzaG9sZCB3aWxsIGJlIGdyb3VwZWQgdG9nZXRoZXIuIERlZmF1bHQgdmFsdWVzIGlzIDAuMy5cbjkuIGAtLXRvcF9tb2RlbHNgIG9yIGAtdG1gIG51bWJlciBvZiB0b3AgbW9kZWxzIHRvIGNvbnNpZGVyIGZvciBtZXJnaW5nIHRoZSByZXN1bHRzLiBEZWZhdWx0IHZhbHVlIGlzIDNcbjEwLiBgLS1wbG90YCBwbG90IGFsbCB0aGUgaW5kaXZpZHVhbCBwb3NpdGlvbnMgdGhhdCBhcmUgc3RhdGlzdGljYWxseSBzaWduaWZpY2FudC4gXG5EZXBlbmRpbmcgb24geW91ciBkYXRhLCB0aGlzIHByb2Nlc3MgbWF5IHByb2R1Y2UgbWFueSBwbG90cy5cbjExLiBgLS1nYXBgIG9yIGAtZ3BgIFRocmVzaG9sZCB0byBkcm9wIHBvc2l0aW9ucyB0aGF0IGhhdmUgR0FQcyBhYm92ZSB0aGlzIHByb3BvcnRpb24uIFxuRGVmYXVsdCB2YWx1ZSBpcyAwLjcsIGFuZCBpdCBtZWFucyB0aGF0IHRoZSBwb3NpdGlvbnMgdGhhdCA3MCUgb3IgbW9yZSBHQVBzIHdpbGwgYmUgZHJvcHBlZCBmcm9tIHRoZSBhbmFseXNpcy5cbjEyLiBgLS13cml0ZWAgRHVyaW5nIHJlYWRpbmcgdGhlIGZhc3RhIGZpbGUgd2UgZGVsZXRlIHRoZSBwb3NpdGlvbnMgdGhhdCBoYXZlIEdBUHMgb3ZlciBhICBjZXJ0YWluIHRocmVzaG9sZCB0aGF0IGNhbiBcbmJlIGNoYW5nZWQgaW4gdGhlIGBnYXBfdGhyZXNob2xkYCBhcmd1bWVudCBpbiB0aGUgYHJlYWRfZGF0YWAgZnVuY3Rpb24uIEFzIHRoaXMgbWF5IGNoYW5nZSB0aGUgd2hvbGUgRkFTVEEgZmlsZSxcbnlvdSBtYXkgd2FudCB0byBzYXZlIHRoZSBGQVNUQSBmaWxlIGFmdGVyIHRoaXMgY2xlYW5pbmcgc3RlcC5cblxuIyMgT3V0cHV0ICMjICBcbjEuIGNvcnJlbGF0ZWQgcG9zaXRpb25zLiBXZSBncm91cCBhbGwgdGhlIGNvbGluZWFyIHBvc2l0aW9ucyB0b2dldGhlci5cbjIuIG1vZGVscyBzdW1tYXJ5LiBsaXN0IG9mIG1vZGVscyBhbmQgdGhlaXIgcGVyZm9ybWFuY2UgbWV0cmljcy5cbjMuIHBsb3Qgb2YgdGhlIGZlYXR1cmUgaW1wb3J0YW5jZSBvZiB0aGUgdG9wIG1vZGVscyBpbiAqbW9kZWxOYW1lX2RwaS5wbmcqIGZvcm1hdC5cbjQuIGNzdiBmaWxlcyBvZiBmZWF0dXJlIGltcG9ydGFuY2UgYmFzZWQgb24gdG9wIG1vZGVscyBjb250YWluaW5nLCBmZWF0dXJlLCBpbXBvcnRhbmNlLCByZWxhdGl2ZSBpbXBvcnRhbmNlLCBcbmdyb3VwIG9mIHRoZSBwb3NpdGlvbiAod2UgZ3JvdXAgYWxsIHRoZSBjb2xpbmVhciBwb3NpdGlvbnMgdG9nZXRoZXIpXG41LiBwbG90cyBhbmQgY3N2IGZpbGUgb2YgYXZlcmFnZSBvZiBmZWF0dXJlIGltcG9ydGFuY2Ugb2YgdG9wIG1vZGVscy5cbjYuIGJveCBwbG90IChyZWdyZXNzaW9uKSBvciBzdGFja2VkIGJhciBwbG90IChjbGFzc2lmaWNhdGlvbikgZm9yIHRvcCBwb3NpdGlvbnMgb2YgZWFjaCBtb2RlbC5cbjcuIHBpY2tsZSBmaWxlcyBvZiB0aGUgcGxvdHNcblxuIyMgRGVtbyAjI1xuYGBgY29tbWFuZGxpbmVcbmRlZXBCcmVha3MgLXNmIFBBVEhfVE9fU0VRVUVOQ0UuRkFTVEEgLXN0IGFhIC1tZCBQQVRIX1RPX01FVEFfREFUQS50c3YgLW12XG4gTUVUQV9WQVJJQUJMRV9OQU1FIC1hIHJlZyAgLWR0aCAwLjE1IC0tcGxvdCAtLXdyaXRlXG5gYGBcblxuIyMgVHV0b3JpYWwgIyNcbk11bHRpcGxlIGRldGFpbGVkIGp1cHl0ZXIgbm90ZWJvb2sgb2YgX2RlZXBCcmVha3NfIGltcGxlbWVudGF0aW9uIGFyZSBhdmFpbGFibGUgaW4gdGhlXG5bZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKSBhbmQgdGhlXG5yZXF1aXJlZCBkYXRhIGZvciB0aGUgZXhhbXBsZXMgYXJlIGFsc28gYXZhaWxhYmxlIGluIHRoZVxuW2RhdGFdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzL3RyZWUvbWFzdGVyL2RhdGEpIGRpcmVjdG9yeS4gIFxuXG5Gb3IgdGhlIGBkZWVwQnJlYWtzLm1vZGVscy5tb2RlbF9jb21wYXJlYCBmdW5jdGlvbiwgdGhlc2UgYXJlIHRoZSBhdmFpbGFibGUgbW9kZWxzIGJ5IGRlZmF1bHQ6XG4qIFJlZ3Jlc3Npb246XG5gYGBweXRob25cbm1vZGVscyA9IHtcbiAgICAgICAgICAgICdyZic6IFJhbmRvbUZvcmVzdFJlZ3Jlc3NvcihuX2pvYnM9LTEsIHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ0FkYWJvb3N0JzogQWRhQm9vc3RSZWdyZXNzb3IocmFuZG9tX3N0YXRlPTEyMyksXG4gICAgICAgICAgICAnZXQnOiBFeHRyYVRyZWVzUmVncmVzc29yKG5fam9icz0tMSwgcmFuZG9tX3N0YXRlPTEyMyksXG4gICAgICAgICAgICAnZ2JjJzogR3JhZGllbnRCb29zdGluZ1JlZ3Jlc3NvcihyYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAgICdkdCc6IERlY2lzaW9uVHJlZVJlZ3Jlc3NvcihyYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAgICdscic6IExpbmVhclJlZ3Jlc3Npb24obl9qb2JzPS0xKSxcbiAgICAgICAgICAgICdMYXNzbyc6IExhc3NvKHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ0xhc3NvTGFycyc6IExhc3NvTGFycyhyYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAgICdCYXllc2lhblJpZGdlJzogQmF5ZXNpYW5SaWRnZSgpLFxuICAgICAgICAgICAgJ0h1YlInOiBIdWJlclJlZ3Jlc3NvcigpLFxuICAgICAgICAgICAgJ3hnYic6IFhHQlJlZ3Jlc3NvcihuX2pvYnM9LTEsIHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ2xnYm0nOiBMR0JNUmVncmVzc29yKG5fam9icz0tMSwgcmFuZG9tX3N0YXRlPTEyMylcbiAgICAgICAgfVxuYGBgXG4gKiBDbGFzc2lmaWNhdGlvbjpcbmBgYHB5dGhvblxubW9kZWxzID0ge1xuICAgICAgICAgICAgJ3JmJzogUmFuZG9tRm9yZXN0Q2xhc3NpZmllcihuX2pvYnM9LTEsIHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ0FkYWJvb3N0JzogQWRhQm9vc3RDbGFzc2lmaWVyKHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ2V0JzogRXh0cmFUcmVlc0NsYXNzaWZpZXIobl9qb2JzPS0xLCByYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAgICdsZyc6IExvZ2lzdGljUmVncmVzc2lvbihuX2pvYnM9LTEsIHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ2diYyc6IEdyYWRpZW50Qm9vc3RpbmdDbGFzc2lmaWVyKHJhbmRvbV9zdGF0ZT0xMjMpLFxuICAgICAgICAgICAgJ2R0JzogRGVjaXNpb25UcmVlQ2xhc3NpZmllcihyYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAgICd4Z2InOiBYR0JDbGFzc2lmaWVyKG5fam9icz0tMSwgcmFuZG9tX3N0YXRlPTEyMyksXG4gICAgICAgICAgICAnbGdibSc6IExHQk1DbGFzc2lmaWVyKG5fam9icz0tMSwgcmFuZG9tX3N0YXRlPTEyMylcbiAgICAgICAgfVxuYGBgXG5UaGUgZGVmYXVsdCBtZXRyaWNzIGZvciBldmFsdWF0aW9uIGFyZTpcbiogUmVncmVzc2lvbjpcbmBgYHB5dGhvblxuc2NvcmVzID0geydSMic6ICdyMicsXG4gICAgICAgICAgJ01BRSc6ICduZWdfbWVhbl9hYnNvbHV0ZV9lcnJvcicsXG4gICAgICAgICAgJ01TRSc6ICduZWdfbWVhbl9zcXVhcmVkX2Vycm9yJyxcbiAgICAgICAgICAnUk1TRSc6ICduZWdfcm9vdF9tZWFuX3NxdWFyZWRfZXJyb3InLFxuICAgICAgICAgICdNQVBFJzogJ25lZ19tZWFuX2Fic29sdXRlX3BlcmNlbnRhZ2VfZXJyb3InXG4gICAgICAgICAgfVxuYGBgXG4gKiBDbGFzc2lmaWNhdGlvbjpcbmBgYHB5dGhvblxuc2NvcmVzID0geydBY2N1cmFjeSc6ICdhY2N1cmFjeScsXG4gICAgICAgICAgJ0FVQyc6ICdyb2NfYXVjX292cicsXG4gICAgICAgICAgJ0YxJzogJ2YxX21hY3JvJyxcbiAgICAgICAgICAnUmVjYWxsJzogJ3JlY2FsbF9tYWNybycsXG4gICAgICAgICAgJ1ByZWNpc2lvbic6ICdwcmVjaXNpb25fbWFjcm8nXG4gICAgICAgICAgfVxuYGBgXG5UbyBnZXQgdGhlIGZ1bCBsaXN0IG9mIGF2YWlsYWJsZSBtZXRyaWNzLCB5b3UgY2FuIHVzZTpcbmBgYHB5dGhvblxuZnJvbSBza2xlYXJuIGltcG9ydCBtZXRyaWNzXG5wcmludChtZXRyaWNzLlNDT1JFUlMua2V5cygpKVxuYGBgXG5UaGUgZGVmYXVsdCBzZWFyY2ggcGFyYW1ldGVycyBmb3IgdGhlIG1vZGVscyBhcmU6XG5gYGBweXRob25cbnBhcmFtcyA9IHtcbiAgICAgICAgJ3JmJzoge1xuICAgICAgICAgICAgJ21heF9kZXB0aCc6IFs0LCA2LCA4XSxcbiAgICAgICAgICAgICduX2VzdGltYXRvcnMnOiBbNTAwLCAxMDAwXVxuICAgICAgICB9LFxuICAgICAgICAnQWRhYm9vc3QnOiB7XG4gICAgICAgICAgICAnbGVhcm5pbmdfcmF0ZSc6IFswLjAxLCAwLjA1XSxcbiAgICAgICAgICAgICduX2VzdGltYXRvcnMnOiBbNTAsIDEwMF1cbiAgICAgICAgfSxcbiAgICAgICAgJ2V0Jzoge1xuICAgICAgICAgICAgJ21heF9kZXB0aCc6IFs0LCA2LCA4XSxcbiAgICAgICAgICAgICduX2VzdGltYXRvcnMnOiBbNTAwLCAxMDAwXVxuICAgICAgICB9LFxuICAgICAgICAnZHQnOiB7XG4gICAgICAgICAgICAnbWF4X2RlcHRoJzogWzQsIDYsIDhdXG4gICAgICAgIH0sXG4gICAgICAgICdMYXNzbyc6IHtcbiAgICAgICAgICAgICdhbHBoYSc6IFswLjUsIDEsIDNdXG4gICAgICAgIH0sXG4gICAgICAgICdMYXNzb0xhcnMnOiB7XG4gICAgICAgICAgICAnYWxwaGEnOiBbMC41LCAxLCAzXVxuICAgICAgICB9XG4gICAgfVxuYGBgXG4qKkF0dGVudGlvbjoqKiBUaGUgbmFtZXMgb2YgbW9kZWxzIGluIHRoZSBwcm92aWRlZCBgZGljdGAgYXJlIHRoZSBzYW1lIHdpdGggdGhlIG5hbWVzIGluIHRoZSBgZGljdGAgcHJvdmlkZWQgXG5mb3IgdGhlIGBwYXJhbXNgLiBJZiB0aGUgbmFtZSBmcm9tIHRoZSBtb2RlbHMgYGRpY3RgIGRvZXMgbm90IG1hdGNoLCB0aGUgZGVmYXVsdCBgc2tsZWFybmAgcGFyYW1ldGVycyBmb3IgdGhhdCBtb2RlbFxuaXMgdGhlbiB1c2VkLiAgRm9yIGV4YW1wbGUsIGBtb2RlbF9jb21wYXJlYCB1c2VzIHRoZSBgeGdib29zdGAgd2l0aCBkZWZhdWx0IGh5cGVycGFyYW1ldGVycy4gIFxuXG5UbyB1c2UgdGhlIGBkZWVwQnJlYWtzLm1vZGVscy5tb2RlbF9jb21wYXJlYCBmdW5jdGlvbiB3aXRoIGRlZmF1bHQgcGFyYW1ldGVyczpcbmBgYHB5dGhvblxuaW1wb3J0IGRlZXBCcmVha3MubW9kZWxzIGFzIG1sXG5hbmFfdHlwZSA9ICdyZWcnICAjIGFzc3VtZSB0aGF0IHdlIGFyZSBydW5uaW5nIGEgcmVncmVzc2lvbiBhbmFseXNpc1xudHJhaW5lZF9tb2RlbHMgPSBtbC5tb2RlbF9jb21wYXJlKFhfdHJhaW4sIHlfdHJhaW4sIGFuYV90eXBlLFxuICAgICAgICAgICAgICAgICAgY3Y9MTAsIHNlbGVjdF90b3A9NSxcbiAgICAgICAgICAgICAgICAgIG1vZGVscz1Ob25lLCBzY29yZXM9Tm9uZSxcbiAgICAgICAgICAgICAgICAgIHBhcmFtcz1Ob25lLCBzb3J0X2J5PU5vbmUsXG4gICAgICAgICAgICAgICAgICBuX3Bvc2l0aW9ucz1Ob25lLFxuICAgICAgICAgICAgICAgICAgZ3JvdXBlZF9mZWF0dXJlcz1Ob25lLFxuICAgICAgICAgICAgICAgICAgcmVwb3J0X2Rpcj0nLicpXG5gYGBcblRvIHVzZSBhIG5ldyBzZXQgb2YgYG1vZGVsc2AsIGBwYXJhbXNgLCBvciBgbWV0cmljc2AgeW91IGNhbiBkZWZpbmUgdGhlbSBpbiBhIGBkaWN0YDpcbmBgYHB5dGhvblxuaW1wb3J0IGRlZXBCcmVha3MubW9kZWxzIGFzIG1sXG5mcm9tIHNrbGVhcm4uZW5zZW1ibGUgaW1wb3J0IFJhbmRvbUZvcmVzdFJlZ3Jlc3NvciwgQWRhQm9vc3RSZWdyZXNzb3JcbmZyb20gc2tsZWFybi5lbnNlbWJsZSBpbXBvcnQgRXh0cmFUcmVlc1JlZ3Jlc3NvclxuICAgICAgICBcbmFuYV90eXBlID0gJ3JlZycgICMgYXNzdW1lIHRoYXQgd2UgYXJlIHJ1bm5pbmcgYSByZWdyZXNzaW9uIGFuYWx5c2lzXG5cbiMgZGVmaW5lIGEgbmV3IHNldCBvZiBtb2RlbHNcbm1vZGVscyA9IHsncmYnOiBSYW5kb21Gb3Jlc3RSZWdyZXNzb3Iobl9qb2JzPS0xLCByYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAnQWRhYm9vc3QnOiBBZGFCb29zdFJlZ3Jlc3NvcihyYW5kb21fc3RhdGU9MTIzKSxcbiAgICAgICAgICAnZXQnOiBFeHRyYVRyZWVzUmVncmVzc29yKG5fam9icz0tMSwgcmFuZG9tX3N0YXRlPTEyMylcbiAgICAgICAgICB9XG5cbiMgZGVmaW5lIGEgbmV3IHNldCBvZiBwYXJhbXMuXG5wYXJhbXMgPSB7XG4gICAgICAgICdyZic6IHtcbiAgICAgICAgICAgICdtYXhfZGVwdGgnOiBbMywgNV0sXG4gICAgICAgICAgICAnbl9lc3RpbWF0b3JzJzogWzEwMF1cbiAgICAgICAgfSxcbiAgICAgICAgJ0FkYWJvb3N0Jzoge1xuICAgICAgICAgICAgJ2xlYXJuaW5nX3JhdGUnOiBbMC4wMSwgMC4wNSwgMC4xXSxcbiAgICAgICAgICAgICduX2VzdGltYXRvcnMnOiBbNTBdXG4gICAgICAgIH1cbiAgICB9XG5cbicnJ1xuU2luY2Ugd2UgZG8gbm90IGRlZmluZSBhIHNldCBvZiBwYXJhbWV0ZXJzIGZvciB0aGUgbW9kZWwgXCJldFwiLCBpdCB3aWxsIGZpdCB3aXRoXG5kZWZhdWx0IHBhcmFtZXRlcnNcbicnJ1xuIyBjaGFuZ2UgdGhlIHNldCBvZiBtZXRyaWNzXG5zY29yZXMgPSB7J1IyJzogJ3IyJyxcbiAgICAgICAgICAnTUFFJzogJ25lZ19tZWFuX2Fic29sdXRlX2Vycm9yJyxcbiAgICAgICAgICAnTVNFJzogJ25lZ19tZWFuX3NxdWFyZWRfZXJyb3InXG4gICAgICAgICAgfVxuXG50cmFpbmVkX21vZGVscyA9IG1sLm1vZGVsX2NvbXBhcmUoWF90cmFpbiwgeV90cmFpbiwgYW5hX3R5cGUsXG4gICAgICAgICAgICAgICAgICBjdj0xMCwgc2VsZWN0X3RvcD01LFxuICAgICAgICAgICAgICAgICAgbW9kZWxzPW1vZGVscywgc2NvcmVzPXNjb3JlcyxcbiAgICAgICAgICAgICAgICAgIHBhcmFtcz1wYXJhbXMsIHNvcnRfYnk9J01BRScsICMgc29ydCB0aGUgbW9kZWxzIGJ5IFwiTUFFXCIgdmFsdWVzXG4gICAgICAgICAgICAgICAgICBuX3Bvc2l0aW9ucz1Ob25lLFxuICAgICAgICAgICAgICAgICAgZ3JvdXBlZF9mZWF0dXJlcz1Ob25lLFxuICAgICAgICAgICAgICAgICAgcmVwb3J0X2Rpcj0nLicpXG5gYGBcblxuIyBBcHBsaWNhdGlvbnMgI1xuSGVyZSB3ZSB0cnkgdG8gdXNlIHRoZSAqKl9kZWVwQnJlYWtzXyoqIG9uIGRpZmZlcmVudCBkYXRhc2V0cyBhbmQgZWxhYm9yYXRlIG9uIHRoZSByZXN1bHRzLlxuXG48aDIgaWQ9XCJvcHNpblwiPlxuPGk+ZGVlcEJyZWFrczwvaT4gaWRlbnRpZmllcyBhbWlubyBhY2lkcyBhc3NvY2lhdGVkIHdpdGggY29sb3Igc2Vuc2l0aXZpdHlcbjwvaDI+XG5cbiFbT3BzaW5zXShodHRwczovL2dpdGh1Yi5jb20vb21pY3NFeWUvZGVlcGJyZWFrcy9ibG9iL21hc3Rlci9pbWcvbGl0ZV9tYXIvZmlndXJlLnBuZz9yYXc9VHJ1ZSkgIFxuXG5PcHNpbnMgYXJlIGdlbmVzIGludm9sdmVkIGluIGxpZ2h0IHNlbnNpdGl2aXR5IGFuZCB2aXNpb24sIGFuZCB3aGVuIGNvdXBsZWQgd2l0aCBhIGxpZ2h0LXJlYWN0aXZlIGNocm9tb3Bob3JlLCB0aGVcbmFic29yYmFuY2Ugb2YgdGhlIHJlc3VsdGluZyBwaG90b3BpZ21lbnQgZGljdGF0ZXMgcGh5c2lvbG9naWNhbCBwaGVub3R5cGVzIGxpa2UgY29sb3Igc2Vuc2l0aXZpdHkuIFdlIGFuYWx5emVkIHRoZSBcbmFtaW5vIGFjaWQgc2VxdWVuY2Ugb2Ygcm9kIG9wc2lucyBiZWNhdXNlIHByZXZpb3VzbHkgcHVibGlzaGVkIG11dGFnZW5lc2lzIHdvcmsgZXN0YWJsaXNoZWQgbWVjaGFuaXN0aWMgY29ubmVjdGlvbnNcbmJldHdlZW4gMTIgc3BlY2lmaWMgYW1pbm8gYWNpZCBzaXRlcyBhbmQgcGhlbm90eXBlcyBbWW9rb3lhbWEgZXQgYWwuICgyMDA4KV0oaHR0cHM6Ly9kb2kub3JnLzEwLjEwNzMvcG5hcy4wODAyNDI2MTA1KS4gXG5UaGVyZWZvcmUsIHdlIGh5cG90aGVzaXplZCB0aGF0IG1hY2hpbmUgbGVhcm5pbmcgYXBwcm9hY2hlcyBjb3VsZCBwcmVkaWN0IGtub3duIGFzc29jaWF0aW9ucyBiZXR3ZWVuIGFtaW5vIGFjaWQgc2l0ZXMgXG5hbmQgYWJzb3JiYW5jZSBwaGVub3R5cGVzLiBXZSBpZGVudGlmaWVkIG9wc2lucyBleHByZXNzZWQgaW5cbnJvZCBjZWxscyBvZiB2ZXJ0ZWJyYXRlcyAobWFpbmx5IG1hcmluZSBmaXNoZXMpIHdpdGggYWJzb3JwdGlvbiBzcGVjdHJhIG1lYXN1cmVtZW50cyAozrttYXgsIHRoZSB3YXZlbGVuZ3RoIHdpdGggdGhlXG5oaWdoZXN0IGFic29ycHRpb24pLiBUaGUgZGF0YXNldCBjb250YWlucyAxNzUgc2FtcGxlcyBvZiBvcHNpbiBzZXF1ZW5jZXMuIFdlIG5leHQgYXBwbGllZCBkZWVwQnJlYWtzIG9uIHRoaXNcbmRhdGFzZXQgdG8gZmluZCB0aGUgbW9zdCBpbXBvcnRhbnQgc2l0ZXMgY29udHJpYnV0aW5nIHRvIHRoZSB2YXJpYXRpb25zIG9mIM67bWF4LiBcblRoaXMgW0p1cHl0ZXIgTm90ZWJvb2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzL2Jsb2IvbWFzdGVyL2V4YW1wbGVzL2NvbnRpbnVvdXNfcGhlbm90eXBlLmlweW5iKSBcbmlsbHVzdHJhdGVzIHRoZSBzdGVwcy5cblxuXG48aDIgaWQ9XCJobXBcIj5cbk5vdmVsIGluc2lnaHRzIG9mIG5pY2hlIGFzc29jaWF0aW9ucyBpbiB0aGUgb3JhbCBtaWNyb2Jpb21lXG48L2gyPlxuXG4hW2htcF0oaHR0cHM6Ly9naXRodWIuY29tL29taWNzRXllL2RlZXBicmVha3MvYmxvYi9tYXN0ZXIvaW1nL2htcC9obXAucG5nP3Jhdz1UcnVlKSAgXG5NaWNyb2JpYWwgc3BlY2llcyB0ZW5kIHRvIGFkYXB0IGF0IHRoZSBnZW5vbWUgbGV2ZWwgdG8gdGhlIG5pY2hlIGluIHdoaWNoIHRoZXkgbGl2ZS4gV2UgaHlwb3RoZXNpemUgXG50aGF0IGdlbmVzIHdpdGggZXNzZW50aWFsIGZ1bmN0aW9ucyBjaGFuZ2UgYmFzZWQgb24gd2hlcmUgbWljcm9iaWFsIHNwZWNpZXMgbGl2ZS4gSGVyZSB3ZSB1c2UgbWljcm9iaWFsIHN0cmFpbiBcbnJlcHJlc2VudGF0aXZlcyBmcm9tIHN0b29sIG1ldGFnZW5vbWljcyBkYXRhIG9mIGhlYWx0aHkgYWR1bHRzIGZyb20gdGhlXG5bSHVtYW4gTWljcm9iaW9tZSBQcm9qZWN0XShodHRwczovL2RvaS5vcmcvMTAuMTAzOC9uYXR1cmUxMTIzNCkuIFRoZSBpbnB1dCBmb3IgZGVlcEJyZWFrcyBjb25zaXN0cyBvZiAxKSBhbiBNU0EgZmlsZVxud2l0aCAxMDA2IHJvd3MsIGVhY2ggYSByZXByZXNlbnRhdGl2ZSBzdHJhaW4gb2YgYSBzcGVjaWZpYyBtaWNyb2JpYWwgc3BlY2llcywgaGVyZSBIYWVtb3BoaWx1cyBwYXJhaW5mbHVlbnphZSwgd2l0aFxuNDk4MzkgbGVuZ3RoczsgYW5kIDIpIGxhYmVscyBmb3IgZGVlcEJyZWFrcyBwcmVkaWN0aW9uIGFyZSBib2R5IHNpdGVzIGZyb20gd2hpY2ggc2FtcGxlcyB3ZXJlIGNvbGxlY3RlZC4gXG5UaGlzIFtKdXB5dGVyIE5vdGVib29rXShodHRwczovL2dpdGh1Yi5jb20vb21pY3NFeWUvZGVlcGJyZWFrcy9ibG9iL21hc3Rlci9leGFtcGxlcy9kaXNjcmV0ZV9waGVub3R5cGUuaXB5bmIpXG5pbGx1c3RyYXRlcyB0aGUgc3RlcHMuXG5cblxuPGgyIGlkPVwiY292aWRcIj5cbjxpPmRlZXBCcmVha3M8L2k+IHJldmVhbHMgaW1wb3J0YW50IFNBUlMtQ29WLTIgcmVnaW9ucyBhc3NvY2lhdGVkIHdpdGggQWxwaGEgYW5kIERlbHRhIHZhcmlhbnRzXG48L2gyPlxuXG4hW3NhcnNjb3YyXShodHRwczovL2dpdGh1Yi5jb20vb21pY3NFeWUvZGVlcGJyZWFrcy9ibG9iL21hc3Rlci9pbWcvc2Fyc19jb3YyL3NhcnNjb3YyLnBuZz9yYXc9VHJ1ZSlcblZhcmlhbnRzIG9jY3VyIHdpdGggbmV3IG11dGF0aW9ucyBpbiB0aGUgdmlydXMgZ2Vub21lLiBNb3N0IG11dGF0aW9ucyBpbiB0aGUgU0FSUy1Db1YtMiBnZW5vbWUgZG8gbm90IGFmZmVjdCB0aGVcbmZ1bmN0aW9uaW5nIG9mIHRoZSB2aXJ1cy4gSG93ZXZlciwgbXV0YXRpb25zIGluIHRoZSBzcGlrZSBwcm90ZWluIG9mIFNBUlMtQ29WLTIsIHdoaWNoIGJpbmRzIHRvIHJlY2VwdG9ycyBvbiBjZWxscyBcbmxpbmluZyB0aGUgaW5zaWRlIG9mIHRoZSBodW1hbiBub3NlLCBtYXkgbWFrZSB0aGUgdmlydXMgZWFzaWVyIHRvIHNwcmVhZCBvciBhZmZlY3QgaG93IHdlbGwgdmFjY2luZXMgcHJvdGVjdCBwZW9wbGUuIFxuV2UgYXJlIGdvaW5nIHRvIHN0dWR5IHRoZSBtdXRhdGlvbnMgaW4gdGhlIHNwaWtlIHByb3RlaW4gb2YgdGhlIHNlcXVlbmNlcyBvZiBBbHBoYSAoQi4xLjEuNyk6IHRoZSBmaXJzdCB2YXJpYW50IG9mIFxuY29uY2VybiBkZXNjcmliZWQgaW4gdGhlIFVuaXRlZCBLaW5nZG9tIChVSykgaW4gbGF0ZSBEZWNlbWJlciAyMDIwIGFuZCBEZWx0YSAoQi4xLjYxNy4yKTogZmlyc3QgcmVwb3J0ZWQgaW4gSW5kaWEgaW5cbkRlY2VtYmVyIDIwMjAuIFdlIHVzZWQgdGhlIHB1YmxpY2x5IGF2YWlsYWJsZSBkYXRhIGZyb20gdGhlIFtHU0FJRF0oaHR0cHM6Ly9naXNhaWQub3JnLykgYW5kIG9idGFpbmVkIDkwMCBzZXF1ZW5jZXNcbm9mIHNwaWtlIHByb3RlaW4gcmVnaW9uIG9mIEFscGhhICg0NTAgc2FtcGxlcykgYW5kIERlbHRhICg0NTAgc2FtcGxlcykgdmFyaWFudHMuIFRoZW4sIHdlIHVzZWQgZGVlcEJyZWFrcyB0byBhbmFseXplIFxudGhlIGRhdGEgYW5kIGZpbmQgdGhlIG1vc3QgaW1wb3J0YW50IChwcmVkaWN0aXZlKSBwb3NpdGlvbnMgaW4gdGhlc2Ugc2VxdWVuY2VzIGluIHRlcm1zIG9mIGNsYXNzaWZ5aW5nIHRoZSB2YXJpYW50cy4gXG5UaGlzXG5bSnVweXRlciBOb3RlYm9va10oaHR0cHM6Ly9naXRodWIuY29tL29taWNzRXllL2RlZXBicmVha3MvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvZGlzY3JldGVfcGhlbm90eXBlX1NBUlNfQ292Ml92YXJpYW50cy5pcHluYikgXG5pbGx1c3RyYXRlcyB0aGUgc3RlcHMuXG5cblxuPGgyIGlkPVwiaGl2XCI+XG48aT5kZWVwQnJlYWtzPC9pPiBpZGVudGlmaWVzIEhJViByZWdpb25zIHdpdGggcG90ZW50aWFsbHkgaW1wb3J0YW50IGZ1bmN0aW9uc1xuPC9oMj5cblxuIVtzYXJzY292Ml0oaHR0cHM6Ly9naXRodWIuY29tL29taWNzRXllL2RlZXBicmVha3MvYmxvYi9tYXN0ZXIvaW1nL0hJVi9ISVYzLnBuZz9yYXc9VHJ1ZSlcblN1YnR5cGVzIG9mIHRoZSBodW1hbiBpbW11bm9kZWZpY2llbmN5IHZpcnVzIHR5cGUgMSAoSElWLTEpIGdyb3VwIE0gYXJlIGRpZmZlcmVudCBpbiB0aGUgZW52ZWxvcGUgKEVudikgZ2x5Y29wcm90ZWlucyBcbm9mIHRoZSB2aXJ1cy4gVGhlc2UgcGFydHMgb2YgdGhlIHZpcnVzIGFyZSBkaXNwbGF5ZWQgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIHZpcmlvbiBhbmQgYXJlIHRhcmdldHMgZm9yIGJvdGggbmV1dHJhbGl6aW5nXG5hbnRpYm9keSBhbmQgY2VsbC1tZWRpYXRlZCBpbW11bmUgcmVzcG9uc2VzLiBUaGUgdGhpcmQgaHlwZXJ2YXJpYWJsZSBkb21haW4gKFYzKSBvZiBISVYtMSBncDEyMCBpcyBhIGN5c3RlaW5lLWJvdW5kZWRcbmxvb3Agc3RydWN0dXJlIHVzdWFsbHkgY29tcG9zZWQgb2YgMTA1IG51Y2xlb3RpZGVzIGFuZCBsYWJlbGVkIGFzIHRoZSBiYXNlIChudSAxOjI2IGFuZCA3NToxMDUpLCBzdGVtXG4obnUgMjc6NDQgYW5kIDU0Ojc0KSwgYW5kIHR1cm4gKG51IDQ1OjUzKSByZWdpb25zIFtMeW5jaCBldCBhbC4gKDIwMDkpXShodHRwczovL2RvaS5vcmcvMTAuMTA4OSUyRmFpZC4yMDA4LjAyMTkpIC5cbkFtb25nIGFsbCBvZiB0aGUgaHlwZXItdmFyaWFibGUgcmVnaW9ucyBpbiBncDEyMCAoVjEtVjUpLCBWMyBpcyBwbGF5aW5nIHRoZSBtYWluIHJvbGUgaW4gdGhlIHZpcnVzIGluZmVjdGl2aXR5XG5bRmVsc8O2dsOhbHlpIGV0IGFsLiAoMjAwNildKGh0dHBzOi8vZG9pLm9yZy8xMC4xMDg5JTJGYWlkLjIwMDYuMjIuNzAzKS4gXG5IZXJlIHdlIHVzZWFyZSB1c2luZyBkZWVwQnJlYWtzIHRvIGlkZW50aWZ5IGltcG9ydGFudCByZWdpb25zIGluIHRoZSBWMyBsb29wIHRoYXQgYXJlIGltcG9ydGFudCBpbiB0ZXJtcyBvZiBhc3NvY2lhdGluZ1xudGhlIFYzIHNlcXVlbmNlcyBWMyB0byBzdWJ0eXBlcyBCIGFuZCBDLiBXZSB1c2VkIHRoZSBbTG9zIEFsYW1vcyBISVYgRGF0YWJhc2VdKHd3dy5oaXYubGFubC5nb3YpIHRvIGdhdGhlciB0aGUgXG5udWNsZW90aWRlIHNlcXVlbmNlcyBvZiB0aGUgVjMgbG9vcCBvZiBzdWJ0eXBlcyBCIGFuZCBDLiBcblRoaXMgW0p1cHl0ZXIgTm90ZWJvb2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwYnJlYWtzL2Jsb2IvbWFzdGVyL2V4YW1wbGVzL2Rpc2NyZXRlX3BoZW5vdHlwZV9ISVYuaXB5bmIpIFxuaWxsdXN0cmF0ZXMgdGhlIHN0ZXBzLlxuXG4jIFN1cHBvcnQgI1xuXG4qIFBsZWFzZSBzdWJtaXQgeW91ciBxdWVzdGlvbnMgb3IgaXNzdWVzIHdpdGggdGhlIHNvZnR3YXJlIGF0XG5bSXNzdWVzIHRyYWNrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9vbWljc0V5ZS9kZWVwQnJlYWtzL2lzc3VlcykuXG5cblxuIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL2dpdGh1Yi5jb20vb21pY3NFeWUvZGVlcEJyZWFrcyIs
ICAgICJrZXl3b3JkcyI6ICJtYWNoaW5lIGxlYXJuaW5nLGdlbm9taWNzLHNlcXVlbmNpbmcgZGF0YSIs
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImRlZXBCcmVha3MiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGVlcEJyZWFrcy8iLA==
ICAgICJwbGF0Zm9ybSI6ICJMaW51eCIs
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGVlcEJyZWFrcy8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9naXRodWIuY29tL29taWNzRXllL2RlZXBCcmVha3Mi
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGVlcEJyZWFrcy8xLjAuMS8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogImRlZXBCcmVha3M6IGEgbWFjaGluZSBsZWFybmluZyB0b29sIGZvciBpZGVudGlmeWluZyBhbmQgcHJpb3JpdGl6aW5nIGdlbm90eXBlLXBoZW5vdHlwZSBhc3NvY2lhdGlvbnMiLA==
ICAgICJ2ZXJzaW9uIjogIjEuMC4xIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNjYzNjk1Myw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjAuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjMGUxMjVhNjFiOTgyZWIyNTUwNTJhY2FiNGRlZWM4NmYxMTJiYTAzMWNkODVkODE0Y2Y4MjkyNDAwNDhlZGYyIiw=
ICAgICAgICAgICJtZDUiOiAiZDRiNTExNzk1Y2VhMjIwNmYwMjg1Mjg2NWY0YmYwZmMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjUwNDUyZjRkZDYyOGQ0Y2EwOTZjNjdlMmQyN2Y5ODUyZDY2YTg2YjhjMmE2NjIwMjA5OTYyNTE5MDcwNTk4MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZGVlcEJyZWFrcy0xLjAuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkNGI1MTE3OTVjZWEyMjA2ZjAyODUyODY1ZjRiZjBmYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDMwNjUwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMS0zMVQxNjozOToyMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMS0zMVQxNjozOToyMC43Mjc5OTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jMC9lMS8yNWE2MWI5ODJlYjI1NTA1MmFjYWI0ZGVlYzg2ZjExMmJhMDMxY2Q4NWQ4MTRjZjgyOTI0MDA0OGVkZjIvZGVlcEJyZWFrcy0xLjAuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYzBlMTI1YTYxYjk4MmViMjU1MDUyYWNhYjRkZWVjODZmMTEyYmEwMzFjZDg1ZDgxNGNmODI5MjQwMDQ4ZWRmMiIs
ICAgICAgICAibWQ1IjogImQ0YjUxMTc5NWNlYTIyMDZmMDI4NTI4NjVmNGJmMGZjIiw=
ICAgICAgICAic2hhMjU2IjogIjY1MDQ1MmY0ZGQ2MjhkNGNhMDk2YzY3ZTJkMjdmOTg1MmQ2NmE4NmI4YzJhNjYyMDIwOTk2MjUxOTA3MDU5ODIi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImRlZXBCcmVha3MtMS4wLjEudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZDRiNTExNzk1Y2VhMjIwNmYwMjg1Mjg2NWY0YmYwZmMiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAzMDY1MCw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDEtMzFUMTY6Mzk6MjAiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDEtMzFUMTY6Mzk6MjAuNzI3OTk1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYzAvZTEvMjVhNjFiOTgyZWIyNTUwNTJhY2FiNGRlZWM4NmYxMTJiYTAzMWNkODVkODE0Y2Y4MjkyNDAwNDhlZGYyL2RlZXBCcmVha3MtMS4wLjEudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
