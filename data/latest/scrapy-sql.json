ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTmljaG9sYXMgTWlzY2hrZSIs
ICAgICJhdXRob3JfZW1haWwiOiAiIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjExIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJcbiMgU2NyYXB5IFNRTFxuXG5TY3JhcHkgU1FMIGlzIGN1cnJlbnRseSBpbiBCZXRhLlxuXG5UaGlzIHByb2plY3QgaW50ZWdyYXRlcyBbU1FMQWxjaGVteV0oaHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L1NRTEFsY2hlbXkvKSB3aXRoIFtTY3JhcHldKGh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9TY3JhcHkvKSwgcHJvdmlkaW5nIGFuIFtpdGVtYWRhcHRlcl0oaHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2l0ZW1hZGFwdGVyLykgZm9yIFNRTEFsY2hlbXkgbW9kZWxzLiBJdCBhbHNvIGludHJvZHVjZXMgYSBzdWJjbGFzcyBvZiB0aGUgc3FsYWxjaGVteS5vcm0uU2Vzc2lvbiBjbGFzcyB0aGF0IGVuYWJsZXMgYnVsayBzYXZlcy4gVGhpcyBwYWNrYWdlIGVtcGxveXMgdGhlIEZlZWRFeHBvcnQgZXh0ZW5zaW9uLCBkaXN0aW5ndWlzaGluZyBpdHNlbGYgZnJvbSBvdGhlciBTY3JhcHkgU1FMIGludGVncmF0aW9ucyB0aGF0IHVzZSBwaXBlbGluZXMuIEZpbmQgYSB0dXRvcmlhbCBhdCB0aGUgZW5kIG9mIHRoaXMgUkVBRE1FIG9uIHVzaW5nIHRoaXMgcGFja2FnZSB0byBzY3JhcGUgZGF0YSBmcm9tIGh0dHBzOi8vcXVvdGVzLnRvc2NyYXBlLmNvbS8gYW5kIHNhdmUgaXQgaW4gYSBTUUxpdGUgZGF0YWJhc2UuXG5cbiMjIFJlcG9zaXRvcmllc1xuW1B5UEldKGh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9zY3JhcHktc3FsLylcblxuW0dpdEh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL25pY2hvbGFzLW1pc2Noa2Uvc2NyYXB5LXNxbClcblxuIyMgSW5zdGFsbGF0aW9uXG5TY3JhcHlTUUwgY2FuIGJlIGluc3RhbGxlZCB3aXRoIHBpcC5cblxuYGBgXG4kIHBpcCBpbnN0YWxsIHNjcmFweS1zcWxcbmBgYFxuXG4jIyBTZXR0aW5nc1xuQ29uZmlndXJlIFNjcmFweSBTUUwgYnkgdXNpbmcgdGhlIHNldHRpbmdzIGJlbG93IGluIHlvdXIgc2V0dGluZ3MucHkgZmlsZS5cblxuU2V0dGluZ3MgZm9sbG93IGEgcHJpb3JpdHkgaGllcmFyY2h5OiBmZWVkX29wdGlvbnNbJ2l0ZW1fZXhwb3J0X2t3YXJncyddIChpZiBhcHBsaWNhYmxlKSwgZmVlZF9vcHRpb25zLCBhbmQgdGhlbiBjcmF3bGVyLnNldHRpbmdzLlxuXG5gYGBcbiMgc2V0dGluZ3MucHlcbiMgQmVsb3cgaXMgdGhlIGZ1bGwgbGlzdCBvZiBwb3NzaWJsZSBzZXR0aW5ncyB0aGF0IGNhbiBiZSB1c2VkIHRvIGNvbmZpZ3VyZSBzY3JhcHkgU1FMLlxuXG4jIGNyYXdsZXIuc2V0dGluZ3NcblNRTEFMQ0hFTVlfREVDTEFSQVRJVkVfQkFTRSA9ICdwcm9qZWN0Lml0ZW1zLkJhc2UnICAjIE5vIGRlZmF1bHQgdmFsdWVcblNRTEFMQ0hFTVlfRU5HSU5FX0VDSE8gPSBUcnVlICAjIERlZmF1bHQ6IEZhbHNlIFxuU1FMQUxDSEVNWV9TRVNTSU9OTUFLRVJfS1dBUkdTID0ge30gICMgRGVmYXVsdDogeydjbGFzc18nOiAnc2NyYXB5X3NxbC5zZXNzaW9uLlNjcmFweUJ1bGtTZXNzaW9uJ31cblNRTEFMQ0hFTVlfREVGQVVMVF9PUk1fU1RNVCA9ICdzY3JhcHlfc3FsLnN0bXRzLmluc2VydF9pZ25vcmUnICAjIERlZmF1bHQ6ICdzY3JhcHlfc3FsLnN0bXRzLmluc2VydCdcblNRTEFMQ0hFTVlfQUREID0gJ3BhdGhfdG9fY3VzdG9tX2Z1bmMnICAjIERlZmF1bHQ6IHNlc3Npb24uYWRkKGluc3RhbmNlKVxuU1FMQUxDSEVNWV9DT01NSVQgPSAncGF0aF90b19jdXN0b21fZnVuYycgICMgRGVmYXVsdDogc2Vzc2lvbi5jb21taXQoKVxuXG4jIEFsbG93cyBmb3IgdGhlIEZlZWRFeHBvcnQgZXh0ZW5zaW9uIHRvIGJlIGFkanVzdGVkIGZvciB1c2Ugd2l0aCBzY3JhcHktc3FsXG5GRUVEX1NUT1JBR0VTID0ge1xuICAgICdteXNxbCc6ICAgICdzY3JhcHlfc3FsLmZlZWRleHBvcnQuU1FMQWxjaGVteUZlZWRTdG9yYWdlJyxcbiAgICAncG9zdGdyZXMnOiAnc2NyYXB5X3NxbC5mZWVkZXhwb3J0LlNRTEFsY2hlbXlGZWVkU3RvcmFnZScsXG4gICAgJ3NxbGl0ZSc6ICAgJ3NjcmFweV9zcWwuZmVlZGV4cG9ydC5TUUxBbGNoZW15RmVlZFN0b3JhZ2UnXG59XG5GRUVEX0VYUE9SVEVSUyA9IHtcbiAgICAnc3FsJzogJ3NjcmFweV9zcWwuZXhwb3J0ZXJzLlNRTEFsY2hlbXlJbnN0YW5jZUV4cG9ydGVyJ1xufVxuXG5cbiMgQW55IHNldHRpbmcgZ2l2ZW4gaW4gdGhlIGZlZWRfb3B0aW9ucyBkaWN0IG92ZXJyaWRlcyB0aGUgY29ycmVzcG9uZGluZyBnbG9iYWwgc2V0dGluZy4gVGhlIFVSSSB1c2VkIGFzIHRoZSBcbiMgRkVFRFMga2V5IG1pcnJvcnMgdGhlIGNvbm5lY3Rpb24gc3RyaW5nIGZvciBTUUxBbGNoZW15LlxuIyBGRUVEUyBpcyBvZiBmb3JtYXQgeyd1cmknOiBmZWVkX29wdGlvbl9kaWN0fVxuRkVFRFMgPSB7XG4gICAgJ3NxbGl0ZTovLy9zY3JhcHkuZGInOiB7XG4gICAgICAgICdmb3JtYXQnOiAnc3FsJywgICMgRm9ybWF0IG11c3QgYmUgJ3NxbCdcbiAgICAgICAgJ2RlY2xhcmF0aXZlX2Jhc2UnOiAncXVvdGVzLml0ZW1zLm1vZGVscy5RdW90ZXNCYXNlJywgICMgT3ZlcnJpZGVzIFNRTEFMQ0hFTVlfREVDTEFSQVRJVkVfQkFTRVxuICAgICAgICAnaXRlbV9maWx0ZXInOiAnc2NyYXB5X3NxbC5mZWVkZXhwb3J0LlNRTEFsY2hlbXlJbnN0YW5jZUZpbHRlcicsICAjIE9wdGlvbmFsLCBidXQgcmVjb21tZW5kZWRcbiAgICAgICAgJ2VuZ2luZV9lY2hvJzogVHJ1ZSwgICMgT3ZlcnJpZGVzIFNRTEFMQ0hFTVlfRU5HSU5FX0VDSE9cbiAgICAgICAgJ3Nlc3Npb25tYWtlcl9rd2FyZ3MnOiB7fSwgICMgT3ZlcnJpZGVzIFNRTEFMQ0hFTVlfU0VTU0lPTk1BS0VSX0tXQVJHU1xuICAgICAgICAnb3JtX3N0bXRzJzogeyAgIyBPdmVycmlkZXMgU1FMQUxDSEVNWV9ERUZBVUxUX09STV9TVE1ULCBhbGxvd3MgZGlmZmVyZW50IHN0bXQgZm9yIGVhY2ggbW9kZWwgb3IgdGFibGVcbiAgICAgICAgICAgICdxdW90ZXMuaXRlbXMubW9kZWxzLkF1dGhvcic6ICdzY3JhcHlfc3FsLnN0bXRzLnJlcGxhY2UnLFxuICAgICAgICAgICAgJ3F1b3Rlcy5pdGVtcy5tb2RlbHMuVGFnJzogJ3NjcmFweV9zcWwuc3RtdHMuaW5zZXJ0X2lnbm9yZScsXG4gICAgICAgICAgICAncXVvdGVzLml0ZW1zLm1vZGVscy5RdW90ZSc6ICdzY3JhcHlfc3FsLnN0bXRzLmluc2VydCcsXG4gICAgICAgICAgICAncXVvdGVzLml0ZW1zLm1vZGVscy5xdW90ZV90YWdfYXNzb2NpYXRpb25fdGFibGUnOiAnc2NyYXB5X3NxbC5zdG10cy5pbnNlcnRfaWdub3JlJ1xuICAgICAgICB9LFxuICAgICAgICAnY29tbWl0JzogJ3BhdGhfdG9fY3VzdG9tX2Z1bmMnLCAgIyBPdmVycmlkZXMgU1FMQUxDSEVNWV9DT01NSVRcbiAgICAgICAgJ2FkZCc6ICdwYXRoX3RvX2N1c3RvbV9mdW5jJywgICMgT3ZlcnJpZGVzIFNRTEFMQ0hFTVlfQUREXG4gICAgICAgICdpdGVtX2V4cG9ydF9rd2FyZ3MnOiB7XG4gICAgICAgICAgICAnYWRkJzogJ3BhdGhfdG9fY3VzdG9tX2Z1bmMnICAjIE92ZXJyaWRlcyBib3RoIFNRTEFMQ0hFTVlfQUREIGFuZCAnYWRkJyBpbiBmZWVkX29wdGlvbnNcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbmBgYFxuXG4jIyBPcGVuaW5nIGFuIElzc3VlXG5cbklmIHlvdSBlbmNvdW50ZXIgYSBwcm9ibGVtIHdpdGggdGhlIHByb2plY3Qgb3IgaGF2ZSBhIGZlYXR1cmUgcmVxdWVzdCwgeW91IGNhbiBvcGVuIGFuIGlzc3VlIHRvIGxldCB1cyBrbm93LlxuXG5UbyBvcGVuIGFuIGlzc3VlLCBwbGVhc2UgZm9sbG93IHRoZXNlIHN0ZXBzOlxuXG4xLiBHbyB0byB0aGUgW0lzc3Vlc10oaHR0cHM6Ly9naXRodWIuY29tL25pY2hvbGFzLW1pc2Noa2Uvc2NyYXB5LXNxbC9pc3N1ZXMpIHRhYiBvbiB0aGUgZ2l0aHViIHJlcG9zaXRvcnkgcGFnZS5cbjIuIENsaWNrIG9uIHRoZSBcIk5ldyBJc3N1ZVwiIGJ1dHRvbi5cbjMuIFByb3ZpZGUgYSBkZXNjcmlwdGl2ZSB0aXRsZSBmb3IgdGhlIGlzc3VlLlxuNC4gSW4gdGhlIGlzc3VlIGRlc2NyaXB0aW9uLCBwcm92aWRlIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBwcm9ibGVtIHlvdSBhcmUgZXhwZXJpZW5jaW5nIG9yIHRoZSBmZWF0dXJlIHlvdSBhcmUgcmVxdWVzdGluZy5cbjUuIElmIGFwcGxpY2FibGUsIGluY2x1ZGUgc3RlcHMgdG8gcmVwcm9kdWNlIHRoZSBwcm9ibGVtIG9yIGFueSByZWxldmFudCBjb2RlIGV4YW1wbGVzLlxuNi4gQWRkIGFwcHJvcHJpYXRlIGxhYmVscyB0byBjYXRlZ29yaXplIHRoZSBpc3N1ZSAoZS5nLiwgYnVnLCBlbmhhbmNlbWVudCwgZG9jdW1lbnRhdGlvbikuXG43LiBDbGljayBvbiB0aGUgXCJTdWJtaXQgbmV3IGlzc3VlXCIgYnV0dG9uIHRvIGNyZWF0ZSB0aGUgaXNzdWUuXG5cbk9uY2UgeW91IGhhdmUgb3BlbmVkIGFuIGlzc3VlLCBvdXIgdGVhbSB3aWxsIHJldmlldyBpdCBhbmQgcHJvdmlkZSBhc3Npc3RhbmNlIG9yIGRpc2N1c3MgdGhlIHJlcXVlc3RlZCBmZWF0dXJlLlxuXG5Ob3RlOiBCZWZvcmUgb3BlbmluZyBhIG5ldyBpc3N1ZSwgcGxlYXNlIHNlYXJjaCB0aGUgZXhpc3RpbmcgaXNzdWVzIHRvIHNlZSBpZiBhIHNpbWlsYXIgaXNzdWUgaGFzIGFscmVhZHkgYmVlbiByZXBvcnRlZC4gVGhpcyBoZWxwcyBhdm9pZCBkdXBsaWNhdGVzIGFuZCBhbGxvd3MgdXMgdG8gZm9jdXMgb24gcmVzb2x2aW5nIGV4aXN0aW5nIHByb2JsZW1zLlxuXG4jIyBDb250cmlidXRpbmdcblxuVGhhbmsgeW91IGZvciBjb25zaWRlcmluZyBjb250cmlidXRpbmcgdG8gdGhpcyBwcm9qZWN0ISBXZSB3ZWxjb21lIHlvdXIgY29udHJpYnV0aW9ucyB0byBoZWxwIG1ha2UgdGhpcyBwcm9qZWN0IGJldHRlci5cblxuVG8gY29udHJpYnV0ZSB0byB0aGlzIHByb2plY3QsIHBsZWFzZSBmb2xsb3cgdGhlc2Ugc3RlcHM6XG5cbjEuIEZvcmsgdGhlIHJlcG9zaXRvcnkgYnkgY2xpY2tpbmcgb24gdGhlIFwiRm9ya1wiIGJ1dHRvbiBhdCB0aGUgdG9wIG9mIHRoZSByZXBvc2l0b3J5IHBhZ2UuIFRoaXMgd2lsbCBjcmVhdGUgYSBjb3B5IG9mIHRoZSByZXBvc2l0b3J5IGluIHlvdXIgR2l0SHViIGFjY291bnQuXG4yLiBDbG9uZSB0aGUgZm9ya2VkIHJlcG9zaXRvcnkgdG8geW91ciBsb2NhbCBtYWNoaW5lIHVzaW5nIEdpdDpcblxuICAgIGBgYFxuICAgICQgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS95b3VyLXVzZXJuYW1lL3NjcmFweS1zcWwuZ2l0XG4gICAgYGBgXG5cbjMuIENyZWF0ZSBhIG5ldyBicmFuY2ggZm9yIHlvdXIgY2hhbmdlczpcblxuICAgIGBgYFxuICAgICQgZ2l0IGNoZWNrb3V0IC1iIGZlYXR1cmVcbiAgICBgYGBcblxuNC4gTWFrZSB5b3VyIGRlc2lyZWQgY2hhbmdlcyB0byB0aGUgY29kZWJhc2UuXG41LiBDb21taXQgeW91ciBjaGFuZ2VzIHdpdGggZGVzY3JpcHRpdmUgY29tbWl0IG1lc3NhZ2VzOlxuXG4gICAgYGBgXG4gICAgJCBnaXQgY29tbWl0IC1tIFwiQWRkIG5ldyBmZWF0dXJlXCJcbiAgICBgYGBcblxuNi4gUHVzaCB5b3VyIGNoYW5nZXMgdG8geW91ciBmb3JrZWQgcmVwb3NpdG9yeTpcblxuICAgIGBgYFxuICAgICQgZ2l0IHB1c2ggb3JpZ2luIGZlYXR1cmVcbiAgICBgYGBcblxuNy4gT3BlbiBhIHB1bGwgcmVxdWVzdCAoUFIpIGZyb20geW91ciBmb3JrZWQgcmVwb3NpdG9yeSB0byB0aGUgb3JpZ2luYWwgcmVwb3NpdG9yeSdzIGBtYXN0ZXJgIGJyYW5jaC5cbjguIFByb3ZpZGUgYSBjbGVhciBhbmQgZGVzY3JpcHRpdmUgdGl0bGUgZm9yIHlvdXIgUFIgYW5kIGV4cGxhaW4gdGhlIGNoYW5nZXMgeW91IGhhdmUgbWFkZS5cbjkuIFdhaXQgZm9yIHRoZSBwcm9qZWN0IG1haW50YWluZXJzIHRvIHJldmlldyB5b3VyIFBSLiBZb3UgbWF5IG5lZWQgdG8gbWFrZSBhZGRpdGlvbmFsIGNoYW5nZXMgYmFzZWQgb24gdGhlaXIgZmVlZGJhY2suXG4xMC4gT25jZSB5b3VyIFBSIGlzIGFwcHJvdmVkLCBpdCB3aWxsIGJlIG1lcmdlZCBpbnRvIHRoZSBtYWluIGNvZGViYXNlLiBDb25ncmF0dWxhdGlvbnMgb24geW91ciBjb250cmlidXRpb24hXG5cbklmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgb3IgbmVlZCBmdXJ0aGVyIGFzc2lzdGFuY2UsIGZlZWwgZnJlZSB0byBvcGVuIGFuIGlzc3VlIG9yIHJlYWNoIG91dCB0byB0aGUgcHJvamVjdCBtYWludGFpbmVycy5cblxuSGFwcHkgY29udHJpYnV0aW5nIVxuXG4jIyBMaWNlbnNlXG5UaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4jIyBUdXRvcmlhbFxuTGV0J3MgZXhwbG9yZSBob3cgdGhpcyBwYWNrYWdlIGZ1bmN0aW9ucyBieSBzY3JhcGluZyB0aGUgZmlyc3QgcGFnZSBvZiBodHRwczovL3F1b3Rlcy50b3NjcmFwZS5jb20vLiBXZSdsbCBleHRyYWN0IGFsbCBxdW90ZXMsIGF1dGhvcnMsIGFuZCB0YWdzIGFuZCBzYXZlIHRoZW0gaW50byBhIFNRTGl0ZSBkYXRhYmFzZS5cblxuU3RhcnQgYnkgc2V0dGluZyB1cCB0aGUgcHJvamVjdC5cblxuV2UnbGwgaW5zdGFsbCBzY3JhcHkgJiBzY3JhcHktc3FsIGFzIHdlbGwgYXMgW3NjcmFweSBwcm9jZXNzb3JzXShodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NyYXB5LXByb2Nlc3NvcnMvKSAsIGEgcGFja2FnZSBwcm92aWRpbmcgYmFzaWMgcHJvY2Vzc29ycyBmb3IgaXRlbSBsb2FkZXJzLiBUaGlzIHR1dG9yaWFsIHdvbid0IGNvdmVyIGl0cyB1c2UsIGJ1dCBpZiB5b3UncmUgZmFtaWxpYXIgd2l0aCBpdGVtIGxvYWRlcnMsIHlvdSBzaG91bGQgZmluZCBpdHMgYXBwbGljYXRpb24gaW50dWl0aXZlLlxuYGBgXG4kIG1rZGlyIHNjcmFweV90dXRvcmlhbFxuJCBjZCBzY3JhcHlfdHV0b3JpYWxcbiQgcGlwZW52IHNoZWxsXG4kIHBpcGVudiBpbnN0YWxsIHNjcmFweSBzY3JhcHktcHJvY2Vzc29ycyBzY3JhcHktc3FsXG5cbmBgYFxuV2l0aCBldmVyeXRoaW5nIGluc3RhbGxlZCwgd2UgY2FuIGluaXRpYXRlIG91ciBwcm9qZWN0LiBUaGUgcGVyaW9kIGF0IHRoZSBlbmQgb2YgdGhlIHN0YXJ0cHJvamVjdCBjb21tYW5kIHByZXZlbnRzIFNjcmFweSBmcm9tIGNyZWF0aW5nIGEgbmVzdGVkIHBhY2thZ2Ugc3RydWN0dXJlLlxuYGBgXG4kIHNjcmFweSBzdGFydHByb2plY3Qgc2NyYXB5X3R1dG9yaWFsIC4gXG4kIHNjcmFweSBnZW5zcGlkZXIgcXVvdGVzIGh0dHBzOi8vcXVvdGVzLnRvc2NyYXBlLmNvbS9cbmBgYFxuXG5XZSB3b24ndCBuZWVkIG1pZGRsZXdhcmVzIG9yIHBpcGVsaW5lcyBmb3IgdGhpcyB0dXRvcmlhbCwgc28gbGV0J3MgcmVtb3ZlIHRoZW0uIFdlJ2xsIGFsc28gYWRkIGFuIGl0ZW1sb2FkZXJzLnB5IGZpbGUuIFxuYGBgXG4kIGNkIHNjcmFweV90dXRvcmlhbFxuJCBybSBtaWRkbGV3YXJlcy5weVxuJCBybSBwaXBlbGluZXMucHlcbiQgdG91Y2ggaXRlbWxvYWRlcnMucHlcbiQgY2QgLi5cbmBgYFxuXG5PdXIgcHJvamVjdCBmb2xkZXIgc2hvdWxkIG5vdyBsb29rIGxpa2UgdGhpczpcbmBgYFxuJCB0cmVlXG4uXG7ilJzilIDilIAgUGlwZmlsZVxu4pSc4pSA4pSAIFBpcGZpbGUubG9ja1xu4pSc4pSA4pSAIHNjcmFweS5jZmdcbuKUlOKUgOKUgCBzY3JhcHlfdHV0b3JpYWxcbiAgICDilJzilIDilIAgX19pbml0X18ucHlcbiAgICDilJzilIDilIAgaXRlbWxvYWRlcnMucHlcbiAgICDilJzilIDilIAgaXRlbXMucHlcbiAgICDilJzilIDilIAgc2V0dGluZ3MucHlcbiAgICDilJTilIDilIAgc3BpZGVyc1xuICAgICAgICDilJzilIDilIAgX19pbml0X18ucHlcbiAgICAgICAg4pSU4pSA4pSAIHF1b3Rlcy5weVxuYGBgXG5OZXh0LCBsZXQncyBkZWNsYXJlIG91ciBtb2RlbHMgaW4gaXRlbXMucHkuXG5cbkl0J3MgaW1wb3J0YW50IHRvIG5vdGUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBkZWNsYXJpbmcgeW91ciBCYXNlIGNsYXNzIGluIFNjcmFweSBTUUwgdnMgdmFuaWxsYSBTUUxBbGNoZW15LlxuU2NyYXB5IFNRTCB1c2VzIGR1YWwgaW5oZXJpdGVuY2Ugd2l0aCBEZWNsYXJhdGl2ZUJhc2UgJiBTY3JhcHlEZWNsYXJhdGl2ZUJhc2UuIFNjcmFweURlY2xhcmF0aXZlQmFzZSAgcHJvdmlkZXMgbWFueSBoZWxwZXIgcHJvcGVydGllcyBhbmQgbWV0aG9kcyB1c2VkIGJ5IFNjcmFweUJ1bGtTZXNzaW9uIGZvciBidWxrIGluc2VydHMuXG5cbmBgYFxuZnJvbSBzcWxhbGNoZW15Lm9ybSBpbXBvcnQgRGVjbGFyYXRpdmVCYXNlXG5mcm9tIHNjcmFweV9zcWwgaW1wb3J0IFNjcmFweURlY2xhcmF0aXZlQmFzZVxuXG5jbGFzcyBCYXNlKERlY2xhcmF0aXZlQmFzZSwgU2NyYXB5RGVjbGFyYXRpdmVCYXNlKTpcbiAgICBwYXNzXG5cbmBgYFxuXG5gYGBcbiMgaXRlbXMucHlcblxuZnJvbSBzY3JhcHlfc3FsIGltcG9ydCBTY3JhcHlEZWNsYXJhdGl2ZUJhc2VcblxuZnJvbSBzcWxhbGNoZW15IGltcG9ydCBDb2x1bW4sIERhdGUsIEZvcmVpZ25LZXksIEludGVnZXIsIFN0cmluZywgVGFibGUsIFRleHRcbmZyb20gc3FsYWxjaGVteS5vcm0gaW1wb3J0IERlY2xhcmF0aXZlQmFzZSwgcmVsYXRpb25zaGlwXG5cblxuY2xhc3MgUXVvdGVzQmFzZShEZWNsYXJhdGl2ZUJhc2UsIFNjcmFweURlY2xhcmF0aXZlQmFzZSk6XG4gICAgcGFzc1xuXG5cbmNsYXNzIEF1dGhvcihCYXNlKTpcbiAgICBfX3RhYmxlbmFtZV9fID0gJ2F1dGhvcidcblxuICAgIGlkID0gQ29sdW1uKEludGVnZXIsIHByaW1hcnlfa2V5PVRydWUpXG5cbiAgICBuYW1lID0gQ29sdW1uKFN0cmluZyg1MCksIHVuaXF1ZT1UcnVlLCBudWxsYWJsZT1GYWxzZSlcbiAgICBiaXJ0aGRheSA9IENvbHVtbihEYXRlLCBudWxsYWJsZT1GYWxzZSlcbiAgICBiaW8gPSBDb2x1bW4oVGV4dCwgbnVsbGFibGU9RmFsc2UpXG5cblxuY2xhc3MgVGFnKEJhc2UpOlxuICAgIF9fdGFibGVuYW1lX18gPSAndGFnJ1xuXG4gICAgaWQgPSBDb2x1bW4oSW50ZWdlciwgcHJpbWFyeV9rZXk9VHJ1ZSlcbiAgICBuYW1lID0gQ29sdW1uKFN0cmluZygzMSksIHVuaXF1ZT1UcnVlLCBudWxsYWJsZT1GYWxzZSlcblxuXG5jbGFzcyBRdW90ZShCYXNlKTpcbiAgICBfX3RhYmxlbmFtZV9fID0gJ3F1b3RlJ1xuXG4gICAgaWQgPSBDb2x1bW4oSW50ZWdlciwgcHJpbWFyeV9rZXk9VHJ1ZSlcbiAgICBhdXRob3JfaWQgPSBDb2x1bW4oRm9yZWlnbktleSgnYXV0aG9yLmlkJyksIG51bGxhYmxlPUZhbHNlKVxuXG4gICAgcXVvdGUgPSBDb2x1bW4oVGV4dCwgdW5pcXVlPVRydWUsIG51bGxhYmxlPUZhbHNlKVxuXG4gICAgYXV0aG9yID0gcmVsYXRpb25zaGlwKCdBdXRob3InKVxuICAgIHRhZ3MgPSByZWxhdGlvbnNoaXAoJ1RhZycsIHNlY29uZGFyeT0ncXVvdGVfdGFnJylcblxuXG5xdW90ZV90YWdfYXNzb2NpYXRpb25fdGFibGUgPSBUYWJsZShcbiAgICAncXVvdGVfdGFnJywgQmFzZS5tZXRhZGF0YSxcbiAgICBDb2x1bW4oJ3F1b3RlX2lkJywgRm9yZWlnbktleSgncXVvdGUuaWQnKSwgcHJpbWFyeV9rZXk9VHJ1ZSksXG4gICAgQ29sdW1uKCd0YWdfaWQnLCAgIEZvcmVpZ25LZXkoJ3RhZy5pZCcpLCAgIHByaW1hcnlfa2V5PVRydWUpXG4pXG5gYGBcblxuTmV4dCwgd2UnbGwgd29yayBvbiBpdGVtbG9hZGVycy5weS5cblxuYGBgXG4jIGl0ZW1sb2FkZXJzLnB5XG5cbmZyb20gc2NyYXB5X3R1dG9yaWFsLml0ZW1zIGltcG9ydCBBdXRob3IsIFRhZywgUXVvdGVcblxuZnJvbSBpdGVtbG9hZGVycyBpbXBvcnQgSXRlbUxvYWRlclxuZnJvbSBpdGVtbG9hZGVycy5wcm9jZXNzb3JzIGltcG9ydCBUYWtlRmlyc3RcblxuZnJvbSBzY3JhcHlfcHJvY2Vzc29ycyBpbXBvcnQgKFxuICAgIEVuc3VyZUVuY29kaW5nLFxuICAgIE1hcENvbXBvc2UsXG4gICAgTm9ybWFsaXplV2hpdGVzcGFjZSxcbiAgICBTdHJpbmdUb0RhdGUsXG4gICAgU3RyaXBRdW90ZXMsXG4pXG5cblxuY2xlYW5fdGV4dCA9IE1hcENvbXBvc2UoXG4gICAgRW5zdXJlRW5jb2RpbmcoJ3V0Zi04JyksXG4gICAgTm9ybWFsaXplV2hpdGVzcGFjZSgpLFxuICAgIFN0cmlwUXVvdGVzKClcbilcblxuXG5jbGFzcyBBdXRob3JMb2FkZXIoSXRlbUxvYWRlcik6XG4gICAgZGVmYXVsdF9pdGVtX2NsYXNzID0gQXV0aG9yXG4gICAgXG4gICAgZGVmYXVsdF9pbnB1dF9wcm9jZXNzb3IgPSBjbGVhbl90ZXh0XG4gICAgZGVmYXVsdF9vdXRwdXRfcHJvY2Vzc29yID0gVGFrZUZpcnN0KClcblxuICAgIG5hbWVfaW4gPSBjbGVhbl90ZXh0ICsgc3RyLnRpdGxlXG4gICAgYmlydGhkYXlfaW4gPSBjbGVhbl90ZXh0ICsgU3RyaW5nVG9EYXRlKFwiJUIgJWQsICVZXCIpXG5cblxuY2xhc3MgVGFnTG9hZGVyKEl0ZW1Mb2FkZXIpOlxuICAgIGRlZmF1bHRfaXRlbV9jbGFzcyA9IFRhZ1xuICAgIFxuICAgIGRlZmF1bHRfaW5wdXRfcHJvY2Vzc29yID0gY2xlYW5fdGV4dFxuICAgIGRlZmF1bHRfb3V0cHV0X3Byb2Nlc3NvciA9IFRha2VGaXJzdCgpXG5cbiAgICBuYW1lX2luID0gY2xlYW5fdGV4dCArIHN0ci5sb3dlclxuXG5cbmNsYXNzIFF1b3RlTG9hZGVyKEl0ZW1Mb2FkZXIpOlxuICAgIGRlZmF1bHRfaXRlbV9jbGFzcyA9IFF1b3RlXG4gICAgXG4gICAgZGVmYXVsdF9pbnB1dF9wcm9jZXNzb3IgPSBjbGVhbl90ZXh0XG4gICAgZGVmYXVsdF9vdXRwdXRfcHJvY2Vzc29yID0gVGFrZUZpcnN0KClcbmBgYFxuXG5Ob3csIGxldCdzIGVkaXQgc2V0dGluZ3MucHkgdG8gZW5hYmxlIHRoZSBGZWVkRXhwb3J0IGV4dGVuc2lvbiB0byB3b3JrIHdpdGggU1FMQWxjaGVteS5cblxuV2UgcGxhbiB0byBzYXZlIG91ciBkYXRhIHdpdGhpbiB0aGUgcHJvamVjdCBmb2xkZXIgKGNvbnRhaW5pbmcgc2NyYXB5LmNmZykgdG8gYSBmaWxlIG5hbWVkIHNjcmFweV90dXRvcmlhbC5kYi4gT3VyIGxvZyBmaWxlIGRpZmZlcnMgb25seSBieSBleHRlbnNpb24gKC5sb2cgdnMgLmRiKS5cblxuTm90ZSB0aGF0IHRoZSBmZWVkX2V4cG9ydF9vcHRpb24gZGljdGlvbmFyeSBmb3Igb3VyIFVSSSByZXF1aXJlcyBhbiBhZGRpdGlvbmFsIGtleSBgZGVjbGFyYXRpdmVfYmFzZWAgd2l0aCB0aGUgdmFsdWUgYmVpbmcgdGhlIEJhc2UgZGVmaW5lZCBpbiBvdXIgaXRlbXMucHkgZmlsZS5cblxuYGBgXG4jIHNldHRpbmdzLnB5XG5cbmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aFxuXG5MT0dfRklMRSA9IFBhdGgoX19maWxlX18pLnBhcmVudC5wYXJlbnQgLyBcInNjcmFweV90dXRvcmlhbC5sb2dcIlxuXG5CT1RfTkFNRSA9IFwic2NyYXB5X3R1dG9yaWFsXCJcblxuU1BJREVSX01PRFVMRVMgPSBbXCJzY3JhcHlfdHV0b3JpYWwuc3BpZGVyc1wiXVxuTkVXU1BJREVSX01PRFVMRSA9IFwic2NyYXB5X3R1dG9yaWFsLnNwaWRlcnNcIlxuXG5GRUVEX1NUT1JBR0VTID0ge1xuICAgICdzcWxpdGUnOiAnc2NyYXB5X3NxbC5mZWVkZXhwb3J0LlNRTEFsY2hlbXlGZWVkU3RvcmFnZSdcbn1cbkZFRURfRVhQT1JURVJTID0ge1xuICAgICdzcWwnOiAnc2NyYXB5X3NxbC5leHBvcnRlcnMuU1FMQWxjaGVteUluc3RhbmNlRXhwb3J0ZXInXG59XG5GRUVEUyA9IHtcbiAgICBmJ3NxbGl0ZTovLy9zY3JhcHlfdHV0b3JpYWwuZGInOiB7XG4gICAgICAgICdmb3JtYXQnOiAnc3FsJyxcbiAgICAgICAgJ2RlY2xhcmF0aXZlX2Jhc2UnOiAnc2NyYXB5X3R1dG9yaWFsLml0ZW1zLkJhc2UnXG4gICAgfVxufVxuXG4jIFNldCBzZXR0aW5ncyB3aG9zZSBkZWZhdWx0IHZhbHVlIGlzIGRlcHJlY2F0ZWQgdG8gYSBmdXR1cmUtcHJvb2YgdmFsdWVcblJFUVVFU1RfRklOR0VSUFJJTlRFUl9JTVBMRU1FTlRBVElPTiA9IFwiMi43XCJcblRXSVNURURfUkVBQ1RPUiA9IFwidHdpc3RlZC5pbnRlcm5ldC5hc3luY2lvcmVhY3Rvci5Bc3luY2lvU2VsZWN0b3JSZWFjdG9yXCJcbkZFRURfRVhQT1JUX0VOQ09ESU5HID0gXCJ1dGYtOFwiXG5gYGBcbkZpbmFsbHkgd2UnbGwgY3JlYXRlIG91ciBzcGlkZXIuIFRoaXMgc3BpZGVyIGhhcyBhIG51bWJlciBvZiBzaG9ydGNvbWluZ3MgZm9yIG5vdywgdGhhdCdsbFxuYmUgYWRkcmVzc2VkIHNob3J0bHkuIFxuXG5gYGBcbiMgc3BpZGVycy9xdW90ZXMucHlcblxuaW1wb3J0IHNjcmFweVxuZnJvbSBzY3JhcHlfdHV0b3JpYWwuaXRlbWxvYWRlcnMgaW1wb3J0IEF1dGhvckxvYWRlciwgVGFnTG9hZGVyLCBRdW90ZUxvYWRlclxuXG5cbmNsYXNzIFF1b3Rlc1NwaWRlcihzY3JhcHkuU3BpZGVyKTpcbiAgICBuYW1lID0gJ3F1b3RlcydcbiAgICBzdGFydF91cmxzID0gWydodHRwOi8vcXVvdGVzLnRvc2NyYXBlLmNvbS8nXVxuICAgIFxuICAgICMgcGFyc2VfcXVvdGVzXG4gICAgZGVmIHBhcnNlKHNlbGYsIHJlc3BvbnNlKTpcbiAgICAgICAgIyBTY3JhcGVzIG9ubHkgdGhlIGZpcnN0IHBhZ2Ugb2YgcXVvdGVzXG4gICAgICAgIFxuICAgICAgICBmb3IgcXVvdGUgaW4gcmVzcG9uc2UueHBhdGgoJy8vZGl2W0BjbGFzcz1cInF1b3RlXCJdJyk6XG4gICAgICAgICAgICBxdW90ZV9sb2FkZXIgPSBRdW90ZUxvYWRlcihzZWxlY3Rvcj1xdW90ZSlcbiAgICAgICAgICAgIHF1b3RlX2xvYWRlci5hZGRfeHBhdGgoJ3F1b3RlJywgJy4vL3NwYW5bQGNsYXNzPVwidGV4dFwiXS90ZXh0KCknKVxuICAgICAgICAgICAgcXVvdGVfaW5zdGFuY2UgPSBxdW90ZV9sb2FkZXIubG9hZF9pdGVtKClcblxuICAgICAgICAgICAgZm9yIHRhZyBpbiBxdW90ZS54cGF0aCgnLi8vYVtAY2xhc3M9XCJ0YWdcIl0vdGV4dCgpJykuZ2V0YWxsKCk6XG4gICAgICAgICAgICAgICAgdGFnX2xvYWRlciA9IFRhZ0xvYWRlcigpXG4gICAgICAgICAgICAgICAgdGFnX2xvYWRlci5hZGRfdmFsdWUoJ25hbWUnLCB0YWcpXG4gICAgICAgICAgICAgICAgcXVvdGVfaW5zdGFuY2UudGFncy5hcHBlbmQodGFnX2xvYWRlci5sb2FkX2l0ZW0oKSlcblxuICAgICAgICAgICAgeWllbGQgcXVvdGVfaW5zdGFuY2VcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgIyBBdXRob3IgY29udGFpbmVyXG4gICAgICAgICAgICBhdXRob3Jfc3BhbiA9IHF1b3RlLnhwYXRoKCcuLy9zcGFuW2NvbnRhaW5zKHRleHQoKSwgXCJieVwiKV0nKVxuICAgICAgICAgICAgYXV0aG9yX25hbWUgPSBhdXRob3Jfc3Bhbi54cGF0aCgnLi8vc21hbGxbQGNsYXNzPVwiYXV0aG9yXCJdL3RleHQoKScpLmdldCgpXG4gICAgICAgICAgICBhdXRob3JfbGluayA9IGF1dGhvcl9zcGFuLnhwYXRoKCcuL2EvQGhyZWYnKS5nZXQoKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB5aWVsZCByZXNwb25zZS5mb2xsb3coYXV0aG9yX2xpbmssIGNhbGxiYWNrPXNlbGYucGFyc2VfYXV0aG9yKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICBkZWYgcGFyc2VfYXV0aG9yKHNlbGYsIHJlc3BvbnNlKTpcbiAgICAgICAgbG9hZGVyID0gQXV0aG9yTG9hZGVyKHNlbGVjdG9yPXJlc3BvbnNlKVxuXG4gICAgICAgIGxvYWRlci5hZGRfeHBhdGgoJ25hbWUnLCAnLy9oM1tAY2xhc3M9XCJhdXRob3ItdGl0bGVcIl0vdGV4dCgpJylcbiAgICAgICAgbG9hZGVyLmFkZF94cGF0aCgnYmlydGhkYXknLCAnLy9zcGFuW0BjbGFzcz1cImF1dGhvci1ib3JuLWRhdGVcIl0vdGV4dCgpJylcbiAgICAgICAgbG9hZGVyLmFkZF94cGF0aCgnYmlvJywgJy8vZGl2W0BjbGFzcz1cImF1dGhvci1kZXNjcmlwdGlvblwiXS90ZXh0KCknKVxuXG4gICAgICAgIHlpZWxkIGxvYWRlci5sb2FkX2l0ZW0oKVxuYGBgXG5FdmVuIHRob3VnaCB3ZSdyZSBleHBlY3RpbmcgcHJvYmxlbXMsIGxldCdzIHJ1biB0aGUgc3BpZGVyIGFuZCBjaGVjayB0aGUgTG9nLlxuYGBgXG4kIHNjcmFweSBjcmF3bCBxdW90ZXNcbmBgYFxuV2l0aGluIHRoZSBsb2cgZmlsZSB5b3UnbGwgZmluZCB0aGUgZm9sbG93aW5nIGVycm9yLiBcbmBgYFxuIyBzY3JhcHlfdHV0b3JpYWwubG9nXG5zcWxhbGNoZW15LmV4Yy5JbnRlZ3JpdHlFcnJvcjogKHNxbGl0ZTMuSW50ZWdyaXR5RXJyb3IpIFVOSVFVRSBjb25zdHJhaW50IGZhaWxlZDogdGFnLm5hbWVcbltTUUw6IElOU0VSVCBJTlRPIHRhZyAobmFtZSkgVkFMVUVTICg/KV1cbltwYXJhbWV0ZXJzOiBbKCdjaGFuZ2UnLCksICgnZGVlcC10aG91Z2h0cycsKSwgKCd0aGlua2luZycsKSwgKCd3b3JsZCcsKSwgKCdhYmlsaXRpZXMnLCksICgnY2hvaWNlcycsKSwgKCdpbnNwaXJhdGlvbmFsJywpLCAoJ2xpZmUnLCkgIC4uLiBkaXNwbGF5aW5nIDEwIG9mIDMwIHRvdGFsIGJvdW5kIHBhcmFtZXRlciBzZXRzIC4uLiAgKCdvYnZpb3VzJywpLCAoJ3NpbWlsZScsKV1dXG4oQmFja2dyb3VuZCBvbiB0aGlzIGVycm9yIGF0OiBodHRwczovL3NxbGFsY2hlLm1lL2UvMjAvZ2twailcbmBgYFxuXG5JZiB5b3UgZXhhbWluZSB0aGUgc2NyYXB5X3R1dG9yaWFsLmRiIGZpbGUsIHlvdSdsbCBvYnNlcnZlIHRoYXQgb25seSB0aGUgYXV0aG9yIHRhYmxlIGhhcyBiZWVuIHBvcHVsYXRlZC5cblxuVGhlIGF1dGhvciB0YWJsZSB3YXMgYnVsayBJTlNFUlRlZCBhbmQgdGhlIHRhZyB0YWJsZSB3YXMgbmV4dCAoYmFzZWQgb24gQmFzZS5tZXRhZGF0YS5zb3J0ZWRfdGFibGVzKSxcbmJ1dCB0aGVyZSBhcmUgZHVwbGljYXRlIHRhZyBuYW1lcy4gVGhpcyBpcyBiZWNhdXNlIGVhY2ggcXVvdGUgb24gdGhlIHBhZ2UgaXMgdW5pcXVlLCBidXQgc29tZSBxdW90ZXNcbnNoYXJlIHRhZ3MuIFRoZSBzb2x1dGlvbiBoZXJlIGlzIHRvIHVzZSBhbiBJTlNFUlQgT1IgSUdOT1JFIHN0YXRlbWVudC4gVGhpcyB3YXksIGR1cGxpY2F0ZSB0YWdzIHdvbid0IGxlYWQgdG8gdGhlIGFib3J0aW9uIG9mIHRoZSByZXN0IG9mIHRoZSBJTlNFUlRzLlxuXG5UbyBhY2hpZXZlIHRoaXMsIHdlIG5lZWQgdG8gcmV0dXJuIHRvIHNldHRpbmdzLnB5IGFuZCBtb2RpZnkgaXQuIE5vdGUgdGhlIGFkZGl0aW9uIG9mIGFuIG9ybV9zdG10cyBrZXkgdG8gdGhlIGZlZWRfb3B0aW9ucyBkaWN0IGluIHRoZSBlZGl0ZWQgY29kZS4gQnkgZGVmYXVsdCwgd2hlbiB0aGUgU2NyYXB5QnVsa1Nlc3Npb24gY2FycmllcyBvdXQgYnVsayBpbnNlcnRzLCBpdCB1c2VzIGEgc3RyYWlnaHRmb3J3YXJkIElOU0VSVCBzdGF0ZW1lbnQuIEhvd2V2ZXIsIGJ5IG1vZGlmeWluZyB0aGlzIGtleSwgd2UgY2FuIGNoYW5nZSB0aGUgaW5zZXJ0aW9uIG9mIFRhZ3MgdG8gSU5TRVJUIE9SIElHTk9SRS5cblxuXG5gYGBcbiMgc2V0dGluZ3MucHlcblxuXG5mcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGhcblxuTE9HX0ZJTEUgPSBQYXRoKF9fZmlsZV9fKS5wYXJlbnQucGFyZW50IC8gXCJzY3JhcHlfdHV0b3JpYWwubG9nXCJcblxuQk9UX05BTUUgPSBcInNjcmFweV90dXRvcmlhbFwiXG5cblNQSURFUl9NT0RVTEVTID0gW1wic2NyYXB5X3R1dG9yaWFsLnNwaWRlcnNcIl1cbk5FV1NQSURFUl9NT0RVTEUgPSBcInNjcmFweV90dXRvcmlhbC5zcGlkZXJzXCJcblxuRkVFRF9TVE9SQUdFUyA9IHtcbiAgICAnc3FsaXRlJzogJ3NjcmFweV9zcWwuZmVlZGV4cG9ydC5TUUxBbGNoZW15RmVlZFN0b3JhZ2UnXG59XG5GRUVEX0VYUE9SVEVSUyA9IHtcbiAgICAnc3FsJzogJ3NjcmFweV9zcWwuZXhwb3J0ZXJzLlNRTEFsY2hlbXlJbnN0YW5jZUV4cG9ydGVyJ1xufVxuRkVFRFMgPSB7XG4gICAgZidzcWxpdGU6Ly8vc2NyYXB5X3R1dG9yaWFsLmRiJzoge1xuICAgICAgICAnZm9ybWF0JzogJ3NxbCcsXG4gICAgICAgICdkZWNsYXJhdGl2ZV9iYXNlJzogJ3NjcmFweV90dXRvcmlhbC5pdGVtcy5CYXNlJyxcbiAgICAgICAgIyBuZXdcbiAgICAgICAgJ29ybV9zdG10cyc6IHtcbiAgICAgICAgICAgICdzY3JhcHlfdHV0b3JpYWwuaXRlbXMuVGFnJzogJ3NjcmFweV9zcWwuc3RtdHMuaW5zZXJ0X2lnbm9yZSdcbiAgICAgICAgfVxuICAgIH1cbn1cblxuIyBTZXQgc2V0dGluZ3Mgd2hvc2UgZGVmYXVsdCB2YWx1ZSBpcyBkZXByZWNhdGVkIHRvIGEgZnV0dXJlLXByb29mIHZhbHVlXG5SRVFVRVNUX0ZJTkdFUlBSSU5URVJfSU1QTEVNRU5UQVRJT04gPSBcIjIuN1wiXG5UV0lTVEVEX1JFQUNUT1IgPSBcInR3aXN0ZWQuaW50ZXJuZXQuYXN5bmNpb3JlYWN0b3IuQXN5bmNpb1NlbGVjdG9yUmVhY3RvclwiXG5GRUVEX0VYUE9SVF9FTkNPRElORyA9IFwidXRmLThcIlxuYGBgXG5MZXQncyBzYXZlIG91ciBuZXcgc2V0dGluZ3MucHkgZmlsZSwgZGVsZXRlIHRoZSAubG9nIGFuZCAuZGIgZmlsZSBhbmQgY3Jhd2wgYWdhaW4gdG8gc2VlIHRoZSByZXN1bHRzLlxuXG5gYGBcbiQgc2NyYXB5IGNyYXdsIHF1b3Rlc1xuYGBgXG5cbklmIHdlIG5vdyByZXZpZXcgb3VyIHNjcmFweV90dXRvcmlhbC5kYiBmaWxlIHdlJ2xsIHNlZSB0aGF0IHdlJ3ZlIHBvcHVsYXRlZCBib3RoIHRoZSBhdXRob3IgYW5kIHRhZyB0YWJsZXMsIGJ1dCBub3QgdGhlIHF1b3RlIG9yIHF1b3RlX3RhZyB0YWJsZS4gSW4gdGhlIHNjcmFweV90dXRvcmlhbC5sb2csIHRoZSBlcnJvciBtZXNzYWdlIGluZGljYXRlcyBhIHByb2JsZW0gd2l0aCB0aGUgYXV0aG9yX2lkIG9mIHRoZSBxdW90ZTpcblxuYGBgXG4jIHNjcmFweV90dXRvcmlhbC5sb2dcblxuc3FsYWxjaGVteS5leGMuSW50ZWdyaXR5RXJyb3I6IChzcWxpdGUzLkludGVncml0eUVycm9yKSBOT1QgTlVMTCBjb25zdHJhaW50IGZhaWxlZDogcXVvdGUuYXV0aG9yX2lkXG5bU1FMOiBJTlNFUlQgSU5UTyBxdW90ZSAocXVvdGUpIFZBTFVFUyAoPyldXG5bcGFyYW1ldGVyczogWygnVGhlIHdvcmxkIGFzIHdlIGhhdmUgY3JlYXRlZCBpdCBpcyBhIHByb2Nlc3Mgb2Ygb3VyIHRoaW5raW5nLiBJdCBjYW5ub3QgYmUgY2hhbmdlZCB3aXRob3V0IGNoYW5naW5nIG91ciB0aGlua2luZy4nLCksICgnSXQgaXMgb3VyIGNob2ljZXMsIEhhcnJ5LCB0aGF0IHNob3cgd2hhdCB3ZSB0cnVseSBhcmUsIGZhciBtb3JlIHRoYW4gb3VyIGFiaWxpdGllcy4nLCksICgnVGhlcmUgYXJlIG9ubHkgdHdvIHdheXMgdG8gbGl2ZSB5b3VyIGxpZmUuIE9uZSBpcyBhcyB0aG91Z2ggbm90aGluZyBpcyBhIG1pcmFjbGUuIFRoZSBvdGhlciBpcyBhcyB0aG91Z2ggZXZlcnl0aGluZyBpcyBhIG1pcmFjbGUuJywpLCAoJ1RoZSBwZXJzb24sIGJlIGl0IGdlbnRsZW1hbiBvciBsYWR5LCB3aG8gaGFzIG5vdCBwbGVhc3VyZSBpbiBhIGdvb2Qgbm92ZWwsIG11c3QgYmUgaW50b2xlcmFibHkgc3R1cGlkLicsKSwgKFwiSW1wZXJmZWN0aW9uIGlzIGJlYXV0eSwgbWFkbmVzcyBpcyBnZW5pdXMgYW5kIGl0J3MgYmV0dGVyIHRvIGJlIGFic29sdXRlbHkgcmlkaWN1bG91cyB0aGFuIGFic29sdXRlbHkgYm9yaW5nLlwiLCksICgnVHJ5IG5vdCB0byBiZWNvbWUgYSBtYW4gb2Ygc3VjY2Vzcy4gUmF0aGVyIGJlY29tZSBhIG1hbiBvZiB2YWx1ZS4nLCksICgnSXQgaXMgYmV0dGVyIHRvIGJlIGhhdGVkIGZvciB3aGF0IHlvdSBhcmUgdGhhbiB0byBiZSBsb3ZlZCBmb3Igd2hhdCB5b3UgYXJlIG5vdC4nLCksIChcIkkgaGF2ZSBub3QgZmFpbGVkLiBJJ3ZlIGp1c3QgZm91bmQgMTAsMDAwIHdheXMgdGhhdCB3b24ndCB3b3JrLlwiLCksIChcIkEgd29tYW4gaXMgbGlrZSBhIHRlYSBiYWc7IHlvdSBuZXZlciBrbm93IGhvdyBzdHJvbmcgaXQgaXMgdW50aWwgaXQncyBpbiBob3Qgd2F0ZXIuXCIsKSwgKCdBIGRheSB3aXRob3V0IHN1bnNoaW5lIGlzIGxpa2UsIHlvdSBrbm93LCBuaWdodC4nLCldXVxuKEJhY2tncm91bmQgb24gdGhpcyBlcnJvciBhdDogaHR0cHM6Ly9zcWxhbGNoZS5tZS9lLzIwL2drcGopXG5cbmBgYFxuXG5UaGlzIGVycm9yIGFyaXNlcyBiZWNhdXNlIHRoZXJlIGlzbid0IGEgY29ycmVsYXRpb24gYmV0d2VlbiB0aGUgcXVvdGUgYW5kIHRoZSBhdXRob3IgaW4gdGhlIGN1cnJlbnQgc3BpZGVyIGNvbmZpZ3VyYXRpb24uIFRoZXJlIGFyZSB0d28gd2F5cyB0byBzb2x2ZSB0aGlzOlxuXG5QYXNzaW5nIHRoZSBxdW90ZV9pbnN0YW5jZSBpbiB0aGUgbWV0YSB0YWcgb2YgdGhlIHJlc3BvbnNlLmZvbGxvdywgb3JcbkxvYWRpbmcgdGhlIHF1b3RlX2luc3RhbmNlLmF1dGhvcl9pZCBhdHRyaWJ1dGUgd2l0aCBhIHN1YnF1ZXJ5IHRoYXQgb2J0YWlucyB0aGUgYXV0aG9yX2lkIGZyb20gdGhlIGF1dGhvcidzIG5hbWUgZHVyaW5nIHRoZSBJTlNFUlQgb3BlcmF0aW9uLlxuR2l2ZW4gdGhhdCB0aGUgZmlyc3QgbWV0aG9kIHdvdWxkIG5lY2Vzc2l0YXRlIHNldHRpbmcgdXAgYW4gSFRUUCBjYWNoZSB0byBhdm9pZCByZS1jcmF3bGluZyB0aGUgc2FtZSBwYWdlcyBkdWUgdG8gU2NyYXB5J3MgRHVwZUZpbHRlciwgdGhlIHNlY29uZCBvcHRpb24gbWlnaHQgYmUgcHJlZmVyYWJsZSBpbiB0aGlzIGNhc2UuIFRoaXMgaXMgd2hlcmUgc2NyYXB5X3NxbC5zdWJxdWVyeV9pdGVtLlN1YnF1ZXJ5SXRlbSBjb21lcyBpbnRvIHBsYXksIGFsbG93aW5nIHVzIHRvIGdlbmVyYXRlIGEgc3VicXVlcnkgZWFzaWx5LlxuXG5MZXQncyBzdGFydCBieSBkZWNsYXJpbmcgdGhlIFN1YnF1ZXJ5SXRlbSBpbiBpdGVtcy5weS4gSGVyZSdzIGhvdyB5b3UgY291bGQgZGVmaW5lIGl0OlxuXG5gYGBcbiMgaXRlbXMucHlcbmZyb20gc2NyYXB5X3NxbCBpbXBvcnQgU2NyYXB5RGVjbGFyYXRpdmVCYXNlXG5mcm9tIHNjcmFweV9zcWwuc3VicXVlcnlfaXRlbSBpbXBvcnQgU3VicXVlcnlJdGVtLCBGaWVsZCAjIG5ld1xuXG5mcm9tIHNxbGFsY2hlbXkgaW1wb3J0IENvbHVtbiwgRGF0ZSwgRm9yZWlnbktleSwgSW50ZWdlciwgU3RyaW5nLCBUYWJsZSwgVGV4dFxuZnJvbSBzcWxhbGNoZW15Lm9ybSBpbXBvcnQgRGVjbGFyYXRpdmVCYXNlLCByZWxhdGlvbnNoaXBcblxuXG5jbGFzcyBCYXNlKERlY2xhcmF0aXZlQmFzZSwgU2NyYXB5RGVjbGFyYXRpdmVCYXNlKTpcbiAgICBwYXNzXG5cblxuY2xhc3MgQXV0aG9yKEJhc2UpOlxuICAgIF9fdGFibGVuYW1lX18gPSAnYXV0aG9yJ1xuXG4gICAgaWQgPSBDb2x1bW4oSW50ZWdlciwgcHJpbWFyeV9rZXk9VHJ1ZSlcblxuICAgIG5hbWUgPSBDb2x1bW4oU3RyaW5nKDUwKSwgdW5pcXVlPVRydWUsIG51bGxhYmxlPUZhbHNlKVxuICAgIGJpcnRoZGF5ID0gQ29sdW1uKERhdGUsIG51bGxhYmxlPUZhbHNlKVxuICAgIGJpbyA9IENvbHVtbihUZXh0LCBudWxsYWJsZT1GYWxzZSlcblxuXG5jbGFzcyBUYWcoQmFzZSk6XG4gICAgX190YWJsZW5hbWVfXyA9ICd0YWcnXG5cbiAgICBpZCA9IENvbHVtbihJbnRlZ2VyLCBwcmltYXJ5X2tleT1UcnVlKVxuICAgIG5hbWUgPSBDb2x1bW4oU3RyaW5nKDMxKSwgdW5pcXVlPVRydWUsIG51bGxhYmxlPUZhbHNlKVxuXG5cbmNsYXNzIFF1b3RlKEJhc2UpOlxuICAgIF9fdGFibGVuYW1lX18gPSAncXVvdGUnXG5cbiAgICBpZCA9IENvbHVtbihJbnRlZ2VyLCBwcmltYXJ5X2tleT1UcnVlKVxuICAgIGF1dGhvcl9pZCA9IENvbHVtbihGb3JlaWduS2V5KCdhdXRob3IuaWQnKSwgbnVsbGFibGU9RmFsc2UpXG5cbiAgICBxdW90ZSA9IENvbHVtbihUZXh0LCB1bmlxdWU9VHJ1ZSwgbnVsbGFibGU9RmFsc2UpXG5cbiAgICBhdXRob3IgPSByZWxhdGlvbnNoaXAoJ0F1dGhvcicpXG4gICAgdGFncyA9IHJlbGF0aW9uc2hpcCgnVGFnJywgc2Vjb25kYXJ5PSdxdW90ZV90YWcnKVxuXG5cbnF1b3RlX3RhZ19hc3NvY2lhdGlvbl90YWJsZSA9IFRhYmxlKFxuICAgICdxdW90ZV90YWcnLCBCYXNlLm1ldGFkYXRhLFxuICAgIENvbHVtbigncXVvdGVfaWQnLCBGb3JlaWduS2V5KCdxdW90ZS5pZCcpLCBwcmltYXJ5X2tleT1UcnVlKSxcbiAgICBDb2x1bW4oJ3RhZ19pZCcsICAgRm9yZWlnbktleSgndGFnLmlkJyksICAgcHJpbWFyeV9rZXk9VHJ1ZSlcbilcblxuIyBuZXdcbmNsYXNzIEF1dGhvclN1YnF1ZXJ5SXRlbShTdWJxdWVyeUl0ZW0pOlxuICAgIG9ybV9lbnRpdHkgPSBBdXRob3JcbiAgICByZXR1cm5fY29sdW1ucyA9ICgnaWQnLCApICMgZGVmYXVsdHMgdG8gcHJpbWFyeV9rZXksIGJ1dCBleHBsaWNpdCBpcyBiZXR0ZXIgdGhhbiBpbXBsaWNpdFxuICAgIFxuICAgIG5hbWUgPSBGaWVsZCgpXG5cbiAgICAjIFRoZSBzdWJxdWVyeSBwcm9wZXJ0eSBvZiBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzIHdpbGwgYmUgYSBzdWJxdWVyeSB3aXRoIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZlxuICAgICMgU0VMRUNUIGF1dGhvci5pZCBGUk9NIGF1dGhvciBXSEVSRSBhdXRob3IubmFtZSA9IFwiQWxiZXJ0IEVpbnN0ZWluXCIgXG5cbmBgYFxuXG5MZXQncyBjaGFuZ2Ugb3VyIGl0ZW1sb2FkZXJzLnB5IGZpbGUgbmV4dC4gWW91J2xsIHNlZSB0aGF0IHRoZSBTdWJRdWVyeUl0ZW0gY2FuIGJlXG5sb2FkZWQgYW5kIHVzZSBwcm9jZXNzb3JzIGp1c3QgbGlrZSBhbnkgb3RoZXIgc2NyYXB5IEl0ZW1cbmBgYFxuIyBpdGVtbG9hZGVycy5weVxuXG5mcm9tIHNjcmFweV90dXRvcmlhbC5pdGVtcyBpbXBvcnQgQXV0aG9yLCBUYWcsIFF1b3RlLCBBdXRob3JTdWJxdWVyeUl0ZW0gIyBuZXdcblxuZnJvbSBpdGVtbG9hZGVycyBpbXBvcnQgSXRlbUxvYWRlclxuZnJvbSBpdGVtbG9hZGVycy5wcm9jZXNzb3JzIGltcG9ydCBUYWtlRmlyc3RcblxuZnJvbSBzY3JhcHlfcHJvY2Vzc29ycyBpbXBvcnQgKFxuICAgIEVuc3VyZUVuY29kaW5nLFxuICAgIE1hcENvbXBvc2UsXG4gICAgTm9ybWFsaXplV2hpdGVzcGFjZSxcbiAgICBTdHJpbmdUb0RhdGUsXG4gICAgU3RyaXBRdW90ZXMsXG4pXG5cblxuY2xlYW5fdGV4dCA9IE1hcENvbXBvc2UoXG4gICAgRW5zdXJlRW5jb2RpbmcoJ3V0Zi04JyksXG4gICAgTm9ybWFsaXplV2hpdGVzcGFjZSgpLFxuICAgIFN0cmlwUXVvdGVzKClcbilcblxuXG5jbGFzcyBBdXRob3JMb2FkZXIoSXRlbUxvYWRlcik6XG4gICAgZGVmYXVsdF9pdGVtX2NsYXNzID0gQXV0aG9yXG4gICAgXG4gICAgZGVmYXVsdF9pbnB1dF9wcm9jZXNzb3IgPSBjbGVhbl90ZXh0XG4gICAgZGVmYXVsdF9vdXRwdXRfcHJvY2Vzc29yID0gVGFrZUZpcnN0KClcblxuICAgIG5hbWVfaW4gPSBjbGVhbl90ZXh0ICsgc3RyLnRpdGxlXG4gICAgYmlydGhkYXlfaW4gPSBjbGVhbl90ZXh0ICsgU3RyaW5nVG9EYXRlKFwiJUIgJWQsICVZXCIpXG5cblxuY2xhc3MgVGFnTG9hZGVyKEl0ZW1Mb2FkZXIpOlxuICAgIGRlZmF1bHRfaXRlbV9jbGFzcyA9IFRhZ1xuICAgIFxuICAgIGRlZmF1bHRfaW5wdXRfcHJvY2Vzc29yID0gY2xlYW5fdGV4dFxuICAgIGRlZmF1bHRfb3V0cHV0X3Byb2Nlc3NvciA9IFRha2VGaXJzdCgpXG5cbiAgICBuYW1lX2luID0gY2xlYW5fdGV4dCArIHN0ci5sb3dlclxuXG5cbmNsYXNzIFF1b3RlTG9hZGVyKEl0ZW1Mb2FkZXIpOlxuICAgIGRlZmF1bHRfaXRlbV9jbGFzcyA9IFF1b3RlXG4gICAgXG4gICAgZGVmYXVsdF9pbnB1dF9wcm9jZXNzb3IgPSBjbGVhbl90ZXh0XG4gICAgZGVmYXVsdF9vdXRwdXRfcHJvY2Vzc29yID0gVGFrZUZpcnN0KClcblxuIyBuZXdcbmNsYXNzIEF1dGhvclN1YnF1ZXJ5TG9hZGVyKEl0ZW1Mb2FkZXIpOlxuICAgIGRlZmF1bHRfaXRlbV9jbGFzcyA9IEF1dGhvclN1YnF1ZXJ5SXRlbVxuICAgIFxuICAgIGRlZmF1bHRfaW5wdXRfcHJvY2Vzc29yID0gY2xlYW5fdGV4dCArIHN0ci50aXRsZVxuICAgIGRlZmF1bHRfb3V0cHV0X3Byb2Nlc3NvciA9IFRha2VGaXJzdCgpXG5cbmBgYFxuXG5GaW5hbGx5LCBsZXQncyBtb2RpZnkgb3VyIHNwaWRlci5cbmBgYFxuIyBzcGlkZXJzL3F1b3Rlcy5weVxuXG5pbXBvcnQgc2NyYXB5XG5mcm9tIHNjcmFweV90dXRvcmlhbC5pdGVtbG9hZGVycyBpbXBvcnQgQXV0aG9yTG9hZGVyLCBUYWdMb2FkZXIsIFF1b3RlTG9hZGVyLCBBdXRob3JTdWJxdWVyeUxvYWRlciAjIG5ld1xuXG5cbmNsYXNzIFF1b3Rlc1NwaWRlcihzY3JhcHkuU3BpZGVyKTpcbiAgICBuYW1lID0gJ3F1b3RlcydcbiAgICBzdGFydF91cmxzID0gWydodHRwOi8vcXVvdGVzLnRvc2NyYXBlLmNvbS8nXVxuICAgIFxuICAgICMgcGFyc2VfcXVvdGVzXG4gICAgZGVmIHBhcnNlKHNlbGYsIHJlc3BvbnNlKTpcbiAgICAgICAgIyBTY3JhcGVzIG9ubHkgdGhlIGZpcnN0IHBhZ2Ugb2YgcXVvdGVzLCBmb3Igbm93Li4uIFxuICAgICAgICBcbiAgICAgICAgZm9yIHF1b3RlIGluIHJlc3BvbnNlLnhwYXRoKCcvL2RpdltAY2xhc3M9XCJxdW90ZVwiXScpOlxuICAgICAgICAgICAgcXVvdGVfbG9hZGVyID0gUXVvdGVMb2FkZXIoc2VsZWN0b3I9cXVvdGUpXG4gICAgICAgICAgICBxdW90ZV9sb2FkZXIuYWRkX3hwYXRoKCdxdW90ZScsICcuLy9zcGFuW0BjbGFzcz1cInRleHRcIl0vdGV4dCgpJylcbiAgICAgICAgICAgIHF1b3RlX2luc3RhbmNlID0gcXVvdGVfbG9hZGVyLmxvYWRfaXRlbSgpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGZvciB0YWcgaW4gcXVvdGUueHBhdGgoJy4vL2FbQGNsYXNzPVwidGFnXCJdL3RleHQoKScpLmdldGFsbCgpOlxuICAgICAgICAgICAgICAgIHRhZ19sb2FkZXIgPSBUYWdMb2FkZXIoKVxuICAgICAgICAgICAgICAgIHRhZ19sb2FkZXIuYWRkX3ZhbHVlKCduYW1lJywgdGFnKVxuICAgICAgICAgICAgICAgIHF1b3RlX2luc3RhbmNlLnRhZ3MuYXBwZW5kKHRhZ19sb2FkZXIubG9hZF9pdGVtKCkpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGF1dGhvcl9zcGFuID0gcXVvdGUueHBhdGgoJy4vL3NwYW5bY29udGFpbnModGV4dCgpLCBcImJ5XCIpXScpXG4gICAgICAgICAgICBhdXRob3JfbmFtZSA9IGF1dGhvcl9zcGFuLnhwYXRoKCcuLy9zbWFsbFtAY2xhc3M9XCJhdXRob3JcIl0vdGV4dCgpJykuZ2V0KClcbiAgICAgICAgICAgIGF1dGhvcl9saW5rID0gYXV0aG9yX3NwYW4ueHBhdGgoJy4vYS9AaHJlZicpLmdldCgpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICMgbmV3XG4gICAgICAgICAgICBhdXRob3JfbG9hZGVyID0gQXV0aG9yU3VicXVlcnlMb2FkZXIoKVxuICAgICAgICAgICAgYXV0aG9yX2xvYWRlci5hZGRfdmFsdWUoJ25hbWUnLCBhdXRob3JfbmFtZSlcbiAgICAgICAgICAgICMgY29uc3RydWN0cyBhIHN1YnF1ZXJ5IGZvciB0aGUgYXV0aG9yX2lkIGZyb20gZnJvbSBhdXRob3IncyBuYW1lXG4gICAgICAgICAgICAjIFRoZW4gYXNzaWduIHRoZSByZXN1bHQgdG8gdGhlIHF1b3RlIGluc3RhbmNlXG4gICAgICAgICAgICBhdXRob3Jfc3VicXVlcnkgPSBhdXRob3JfbG9hZGVyLmxvYWRfaXRlbSgpLnN1YnF1ZXJ5XG4gICAgICAgICAgICBxdW90ZV9pbnN0YW5jZS5hdXRob3JfaWQgPSBhdXRob3Jfc3VicXVlcnlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgeWllbGQgcXVvdGVfaW5zdGFuY2VcbiAgICAgICAgICAgIHlpZWxkIHJlc3BvbnNlLmZvbGxvdyhhdXRob3JfbGluaywgY2FsbGJhY2s9c2VsZi5wYXJzZV9hdXRob3IpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgIGRlZiBwYXJzZV9hdXRob3Ioc2VsZiwgcmVzcG9uc2UpOlxuICAgICAgICBsb2FkZXIgPSBBdXRob3JMb2FkZXIoc2VsZWN0b3I9cmVzcG9uc2UpXG5cbiAgICAgICAgbG9hZGVyLmFkZF94cGF0aCgnbmFtZScsICcvL2gzW0BjbGFzcz1cImF1dGhvci10aXRsZVwiXS90ZXh0KCknKVxuICAgICAgICBsb2FkZXIuYWRkX3hwYXRoKCdiaXJ0aGRheScsICcvL3NwYW5bQGNsYXNzPVwiYXV0aG9yLWJvcm4tZGF0ZVwiXS90ZXh0KCknKVxuICAgICAgICBsb2FkZXIuYWRkX3hwYXRoKCdiaW8nLCAnLy9kaXZbQGNsYXNzPVwiYXV0aG9yLWRlc2NyaXB0aW9uXCJdL3RleHQoKScpXG5cbiAgICAgICAgeWllbGQgbG9hZGVyLmxvYWRfaXRlbSgpXG5gYGBcblxuTGV0J3MgY3Jhd2wgYWdhaW4sIHRoaXMgdGltZSB3ZSBzaG91bGRuJ3Qgc2VlIGFueSBlcnJvcnMuXG5gYGBcbiQgc2NyYXB5IGNyYXdsIHF1b3Rlc1xuYGBgXG5cbkNoZWNraW5nIHRoZSBsb2cgZmlsZSwgd2Ugc2VlIG5vIGVycm9ycy4gQ2hlY2tpbmcgdGhlIFNRTGl0ZSBmaWxlIGFsbCB0YWJsZXMsIGluY2x1ZGluZyB0aGUgYXNzb2NpYXRpb24gdGFibGUgYmV0d2VlbiBxdW90ZXMgYW5kIHRhZ3MsIGFyZSBmdWxseSBwb3B1bGF0ZWQuIFN1YnF1ZXJpZXMgYWxsb3dlZCB5b3UgdG8gcGVyZm9ybSB0aGVzZSBvcGVyYXRpb25zIHdpdGhvdXQgZGlyZWN0IHJlYWQgb3BlcmF0aW9ucyBmcm9tIHRoZSBkYXRhYmFzZS5cblxuVGhpcyBhYmlsaXR5IHRvIHdyaXRlIHRvIHlvdXIgZGF0YWJhc2UgZWZmaWNpZW50bHksIHVzaW5nIHN1YnF1ZXJpZXMgYW5kIGF2b2lkaW5nIHVubmVjZXNzYXJ5IHJlYWRzLCBpcyBvbmUgb2YgdGhlIHNpZ25pZmljYW50IGFkdmFudGFnZXMgb2YgdXNpbmcgU2NyYXB5IHdpdGggU1FMQWxjaGVteSBhbmQgdGhlIFNjcmFweSBTUUwgbGlicmFyeS5cblxuVGhlIGxvZ2dpbmcgZmlsZSBmcm9tIFNjcmFweSBhbHNvIHByb3ZpZGVzIHlvdSB3aXRoIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBvcGVyYXRpb25zIHBlcmZvcm1lZCBkdXJpbmcgdGhlIHNwaWRlciBydW4sIHdoaWNoIGlzIGV4dHJlbWVseSB1c2VmdWwgZm9yIGRlYnVnZ2luZyBhbmQgb3B0aW1pemF0aW9uLlxuXG5LZWVwIGluIG1pbmQgdGhhdCBmb3IgbW9yZSBjb21wbGV4IHNjcmFwZXJzLCB5b3UgbWlnaHQgZW5jb3VudGVyIG90aGVyIGNoYWxsZW5nZXMgcmVsYXRlZCB0byBoYW5kbGluZyByZWxhdGlvbnNoaXBzLCBkZWFsaW5nIHdpdGggZHVwbGljYXRlZCBlbnRyaWVzLCBvciBtYW5hZ2luZyBtb3JlIGNvbXBsZXggZGF0YSB0eXBlcy4gQWx3YXlzIGNvbnNpZGVyIHRoZSBzcGVjaWZpYyByZXF1aXJlbWVudHMgb2YgeW91ciBwcm9qZWN0IHdoZW4gZGVzaWduaW5nIHlvdXIgU2NyYXB5IHNwaWRlcnMgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGRhdGEgbW9kZWxzLlxuXG5BdCB0aGlzIHBvaW50LCB5b3UgaGF2ZSBzdWNjZXNzZnVsbHkgY3JlYXRlZCBhIFNjcmFweSBwcm9qZWN0IHRoYXQgc2NyYXBlcyBkYXRhIGZyb20gYSB3ZWJzaXRlIGFuZCBzdG9yZXMgaXQgaW4gYSBTUUxpdGUgZGF0YWJhc2UgdXNpbmcgU1FMQWxjaGVteSBtb2RlbHMuIFlvdSBoYXZlIGFsc28gZW5jb3VudGVyZWQgYW5kIHNvbHZlZCBzb21lIGNvbW1vbiBwcm9ibGVtcyByZWxhdGVkIHRvIGhhbmRsaW5nIHJlbGF0aW9uc2hpcHMgYW5kIHVuaXF1ZSBjb25zdHJhaW50cyBpbiBTUUwgZGF0YWJhc2VzLiBUaGlzIGdpdmVzIHlvdSBhIGdvb2QgZm91bmRhdGlvbiBmb3IgZGV2ZWxvcGluZyBtb3JlIGNvbXBsZXggd2ViIHNjcmFwaW5nIHByb2plY3RzIGluIHRoZSBmdXR1cmUuIENvbmdyYXR1bGF0aW9ucyEiLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInNjcmFweS1zcWwiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NyYXB5LXNxbC8iLA==
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NyYXB5LXNxbC8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiBudWxsLA==
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NyYXB5LXNxbC8xLjAuMC8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgInNjcmFweSAoPj0yLjkuMCw8My4wLjApIiw=
ICAgICAgInNxbGFsY2hlbXkgKD49Mi4wLjEzLDwzLjAuMCkiLA==
ICAgICAgImRlc2NyaXB0b3JzICg+PTAuMS4wLDwwLjIuMCkiLA==
ICAgICAgInB5dGVzdCAoPj03LjMuMSw8OC4wLjApIiw=
ICAgICAgImRqYW5nbyAoPj00LjIuMSw8NS4wLjApIg==
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjEwLDw0LjAiLA==
ICAgICJzdW1tYXJ5IjogIkNvbWJpbmUgU1FMQWxjaGVteSB3aXRoIFNjcmFweSIs
ICAgICJ2ZXJzaW9uIjogIjEuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODE3MTY5NSw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzZTVlYjRhNTY3MDU3NzJiY2MzM2U0NjNjYTczOGY0OTQ2ODBhZWE2MjMzNzk2NDViODJlN2ZiNTg3NzhkZTlkIiw=
ICAgICAgICAgICJtZDUiOiAiZTI0OTc3MDExMDM0ZDgxMTIwOGJlZGJkMmNmZGQ3OGQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjRkYTI4MDVjNTYyMzY5MDczYmM0YWNhZTE5Njc1OWFjZDBhODkwMTNmNWEyNjg2OGFmM2QzOTVhYTY5YjY3ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NyYXB5X3NxbC0xLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlMjQ5NzcwMTEwMzRkODExMjA4YmVkYmQyY2ZkZDc4ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMCw8NC4wIiw=
ICAgICAgICAic2l6ZSI6IDIxNDI0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxNToyMTozNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxNToyMTozNy40MTQyMjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zZS81ZS9iNGE1NjcwNTc3MmJjYzMzZTQ2M2NhNzM4ZjQ5NDY4MGFlYTYyMzM3OTY0NWI4MmU3ZmI1ODc3OGRlOWQvc2NyYXB5X3NxbC0xLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3OTMwYjI2MGNhZDM3NDU2YjE1OGVjMDZhYzMxMTk1NjlmZDAwY2Y3NzE0OTc4ZTA2OGFlMzUzZTAxNWVjNzdiIiw=
ICAgICAgICAgICJtZDUiOiAiZjFiOWRlZWVkMDI5YzQxYTZkNzkwYjcxM2IxNDRlZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZGE4MTdjYWVjNDFlMDE0MDE0NGYyYzQ0ODEwY2Y4ZTFkNjZhMTkyNjIxMWFkOTE1YWNjMjIzZDMyODlhYmY2OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NyYXB5X3NxbC0xLjAuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMWI5ZGVlZWQwMjljNDFhNmQ3OTBiNzEzYjE0NGVlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMCw8NC4wIiw=
ICAgICAgICAic2l6ZSI6IDI0ODIxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxNToyMTozOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxNToyMTozOS43NTM0MjFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83OS8zMC9iMjYwY2FkMzc0NTZiMTU4ZWMwNmFjMzExOTU2OWZkMDBjZjc3MTQ5NzhlMDY4YWUzNTNlMDE1ZWM3N2Ivc2NyYXB5X3NxbC0xLjAuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiM2U1ZWI0YTU2NzA1NzcyYmNjMzNlNDYzY2E3MzhmNDk0NjgwYWVhNjIzMzc5NjQ1YjgyZTdmYjU4Nzc4ZGU5ZCIs
ICAgICAgICAibWQ1IjogImUyNDk3NzAxMTAzNGQ4MTEyMDhiZWRiZDJjZmRkNzhkIiw=
ICAgICAgICAic2hhMjU2IjogIjI0ZGEyODA1YzU2MjM2OTA3M2JjNGFjYWUxOTY3NTlhY2QwYTg5MDEzZjVhMjY4NjhhZjNkMzk1YWE2OWI2N2Yi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInNjcmFweV9zcWwtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZTI0OTc3MDExMDM0ZDgxMTIwOGJlZGJkMmNmZGQ3OGQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTAsPDQuMCIs
ICAgICAgInNpemUiOiAyMTQyNCw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDUtMTlUMTU6MjE6MzciLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDUtMTlUMTU6MjE6MzcuNDE0MjIwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvM2UvNWUvYjRhNTY3MDU3NzJiY2MzM2U0NjNjYTczOGY0OTQ2ODBhZWE2MjMzNzk2NDViODJlN2ZiNTg3NzhkZTlkL3NjcmFweV9zcWwtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNzkzMGIyNjBjYWQzNzQ1NmIxNThlYzA2YWMzMTE5NTY5ZmQwMGNmNzcxNDk3OGUwNjhhZTM1M2UwMTVlYzc3YiIs
ICAgICAgICAibWQ1IjogImYxYjlkZWVlZDAyOWM0MWE2ZDc5MGI3MTNiMTQ0ZWU2Iiw=
ICAgICAgICAic2hhMjU2IjogImRhODE3Y2FlYzQxZTAxNDAxNDRmMmM0NDgxMGNmOGUxZDY2YTE5MjYyMTFhZDkxNWFjYzIyM2QzMjg5YWJmNjki
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInNjcmFweV9zcWwtMS4wLjAudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZjFiOWRlZWVkMDI5YzQxYTZkNzkwYjcxM2IxNDRlZTYiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTAsPDQuMCIs
ICAgICAgInNpemUiOiAyNDgyMSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDUtMTlUMTU6MjE6MzkiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDUtMTlUMTU6MjE6MzkuNzUzNDIxWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNzkvMzAvYjI2MGNhZDM3NDU2YjE1OGVjMDZhYzMxMTk1NjlmZDAwY2Y3NzE0OTc4ZTA2OGFlMzUzZTAxNWVjNzdiL3NjcmFweV9zcWwtMS4wLjAudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
