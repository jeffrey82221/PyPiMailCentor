ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiVGhvbWFzIFdlaG9sdCIs
ICAgICJhdXRob3JfZW1haWwiOiAidGhvbWFzQHdlaG9sdC5vcmciLA==
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiAyIC0gUHJlLUFscGhhIiw=
ICAgICAgIkVudmlyb25tZW50IDo6IFdlYiBFbnZpcm9ubWVudCIs
ICAgICAgIkZyYW1ld29yayA6OiBEamFuZ28iLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEJTRCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlRvcGljIDo6IFV0aWxpdGllcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJEamFuZ28ta29saWJyaVxyXG49PT09PT09PT09PT09PVxyXG5cclxuVmVyc2lvbiA6IDAuMi4wXHJcbkF1dGhvciA6IFRob21hcyBXZWhvbHQgPHRob21hc0B3ZWhvbHQub3JnPlxyXG5MaWNlbnNlIDogTW9kaWZpZWQgQlNEXHJcblN0YXR1cyA6IHByZS1hbHBoYVxyXG5VcmwgOiBodHRwczovL2JpdGJ1Y2tldC5vcmcvd2Vob2x0L2RqYW5nby1rb2xpYnJpXHJcblxyXG5cclxuQmFja2dyb3VuZFxyXG4tLS0tLS0tLS0tXHJcblxyXG5Lb2xpYnJpIGlzIGEgcmV1c2FibGUgZGphbmdvIGFwcCBmb3IgZGVzaWduaW5nIGFuZCBleGVjdXRpbmcgYXN5bmNocm9ub3VzIHByb2Nlc3Nlc1xyXG5hbmQgd29ya2Zsb3dzLiBBIHdvcmtmbG93IGlzIGEgY29sbGVjdGlvbnMgb2Ygc3RlcHMgaW4gYSBkZWZpbmVkIG9yZGVyLFxyXG5wcm9jZXNzaW5nIGRhdGEgaW4gZWFjaCBzdGVwLiBBIHN0ZXAgY2FuIGJyZWFrIHRoZSBmbG93IGlmIGFuIGV4Y2VwdGlvbiBpc1xyXG5yYWlzZWQgYW5kL29yIGEgc3BlY2lmaWVkIHN0ZXAgY2FuIGJlIGV4ZWN1dGVkIHRvIGhhbmRsZSBhIHNwZWNpZmljIGV4Y2VwdGlvbi5cclxuS29saWJyaSB1c2VzIGNlbGVyeSB0byBoYW5kbGUgcHJvY2Vzc2luZyBpbiB0aGUgYmFja2dyb3VuZC4gQWxsIHByb2Nlc3NvcnNcclxuYW5kIHdvcmtmbG93cyBjYW4gb25seSBiZSBzdGFydGVkIGJ5IHN0YWZmIG1lbWJlcnMsIGJ1dCBtb3JlIGZpbmUgZ3JhaW5lZCBhY2Nlc3NcclxuY29udHJvbCBtaWdodCBiZSBpbXBsZW1lbnRlZCBpbiBmdXR1cmUgdmVyc2lvbnMuXHJcblxyXG5UaGUgcHJvamVjdCBnb3Qgc3RhcnRlZCBiZWNhdXNlIEkgbmVlZGVkIHRvIGNvbnRyb2wgaG93IEkgYWRkZWQgY29udGVudCB0byBhXHJcbnBob3RvIHByb2plY3QgSSdtIGRldmVsb3BpbmcgaW4gZGphbmdvLiBUaGUgcHJvamVjdCBpbnZvbHZlZCBsb3RzIG9mIGhlYXZ5IHByb2Nlc3Nlc1xyXG5saWtlIHRodW1ibmFpbCBnZW5lcmF0aW9uIGFuZCBtZXRhZGF0YSBwcm9jZXNzaW5nLiBBZGRpbmcgY29udGVudCBjb25zaXN0cyBvZiBzdGVwcyB0aGF0XHJcbm5lZWRzIHRvIGJlIGRvbmUgaW4gYSBzcGVjaWZpYyBvcmRlciwgYW5kIEkgbmVlZCB0byBjb250cm9sIHdoYXQgYWN0aW9uIHRvIHRha2VcclxuaWYgb25lIHN0ZXAgdGhyb3dzIGFuIGV4Y2VwdGlvbi4gSSB3YXMgdXNpbmcgY2VsZXJ5LCBidXQgYWRkaW5nIGEgbmV3IHN0ZXAgb3JcclxucHJvY2VzcyB3YXMgdGVkaW91cyBhbmQgSSB3YW50ZWQgbW9yZSBkeW5hbWljIHdheSBvZiBkZWZpbmluZyBhbmQgbWFuYWdpbmcgcHJvY2Vzc29ycy5cclxuXHJcblRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9uIGlzIG5vdCBzdGFibGUgYW5kIGEgcHJvb2Ygb2YgY29uY2VwdC4gQ29tbWVudHMgdmVyeVxyXG53ZWxjb21lLCBlc3BlY2lhbGx5IG9uIGhvdyB0byBtb25pdG9yIHN0YXR1cyBvZiBjZWxlcnkgcHJvY2Vzc2VzIGFuZCBwcm92aWRlXHJcbmZlZWRiYWNrIHRvIHRoZSB1c2VyLlxyXG5cclxuXHJcbkZlYXR1cmVzXHJcbi0tLS0tLS0tXHJcblxyXG4qIGFzeW5jaHJvbm91cyBwcm9jZXNzZXMsIHdoaWNoIGNhbiBwcm9jZXNzIGl0ZW1zL3F1ZXJ5c2V0cyBvciBleGVjdXRlIHByb2Nlc3NlcyBub3QgcmVsYXRlZCB0byBzcGVjaWZpYyBtb2RlbHMgb3IgaW5zdGFuY2VzIChzZW5kaW5nIGVtYWlsLCBzY2FubmluZyBmaWxlc3lzdGVtcyBldGMpXHJcblxyXG4qIGNvbm5lY3Qgc2V2ZXJhbCBwcm9jZXNzb3JzIGludG8gd29ya2Zsb3dzLCB3aXRoIGV4Y2VwdGlvbiBoYW5kbGluZywgY2xlYW4tdXAgc3RlcHMgYW5kIGFuIG9wdGlvbmFsIGZsdWVudCBpbnRlcmZhY2VcclxuXHJcbiogdGVtcGxhdGUgdGFncyB0byBoYW5kbGUgZXhlY3V0aW9uIG9mIHByb2Nlc3NvcnMvd29ya2Zsb3dzIGZvciBhbiBpdGVtIG9yIHF1ZXJ5c2V0IGluIHlvdXIgdGVtcGxhdGVzXHJcblxyXG4qIGFkbWluIGFjdGlvbiBpbnRlZ3JhdGlvbiBmb3IgeW91ciBtb2RlbHNcclxuXHJcbiogZGFzaGJvYXJkIGxpc3RpbmcgcnVubmluZyBwcm9jZXNzb3JzXHJcblxyXG4qIGEgY29uY2VwdCBvZiBwZW5kaW5nIHByb2Nlc3NvcnMgYW5kIGEgaGlzdG9yeSBvZiB3aGF0IGhhcyBiZWVuIHByb2Nlc3NlZCBzbyB5b3UgZG9uJ3QgZXhlY3V0ZSB1bm5lY2Vzc2FyeSBwcm9jZXNzZXNvcnMgb3Igd29ya2Zsb3dzXHJcblxyXG4qIHVzZXIgZXhjbHVzaXZlIHByb2Nlc3NvcnMgc28gdHdvIHVzZXJzIGNhbiBleGVjdXRlIHRoZSBzYW1lIHByb2Nlc3NvciBhdCB0aGUgc2FtZSB0aW1lIHdpdGhvdXQgdG91Y2hpbmcgdGhlIHNhbWUgZGF0YVxyXG5cclxuKiBsb2dnaW5nIGFuZCBoaXN0b3J5LCB3aXRoIGRpcmVjdCBsaW5rIHRvIHByb2Nlc3NlZCBpbnN0YW5jZXNcclxuXHJcbiogYWpheCBpbnRlZ3JhdGlvbiB1c2luZyBqcXVlcnlcclxuXHJcblxyXG5QbGFubmVkIGZlYXR1cmVzXHJcbi0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiogYmV0dGVyIGV4YW1wbGVzLCBtb3JlIGRldGFpbGVkIHR1dG9yaWFsIGFuZCBhY3R1YWwgZG9jdW1lbnRhdGlvbiBpbiB0aGUgc291cmNlXHJcblxyXG4qIGZ1bGwtYmxvd24gZGFzaGJvYXJkIHdpdGggZmVlZGJhY2sgYW5kIHByb2dyZXNzIGZyb20gcnVubmluZyBwcm9jZXNzZXMgYW5kIHNvbWUgd2F5IG9mIGtpbGxpbmcgcHJvY2Vzc2VzXHJcblxyXG4qIG5pY2VseSBmb3JtYXR0ZWQgbG9ncyBhbmQgaGlzdG9yeSBmb3IgcHJvY2Vzc2VkIGl0ZW1zXHJcblxyXG4qIGEgd2F5IG9mIHRlbGxpbmcgdXNlcnMgdGhhdCBzb21ldGhpbmcgaXMgZ29pbmcgb24gd2l0aCB0aGUgaXRlbSB0aGV5J3JlIGxvb2tpbmcgYXQgKHByb2dyZXNzYmFyLCBncm93bCBub3RpZmljYXRpb24gZXRjLilcclxuXHJcblxyXG5JbnN0YWxsYXRpb25cclxuLS0tLS0tLS0tLS0tXHJcblxyXG5waXAgaW5zdGFsbCBkamFuZ28ta29saWJyaVxyXG5cclxub3JcclxuXHJcbmhnIGNsb25lIGh0dHBzOi8vYml0YnVja2V0Lm9yZy93ZWhvbHQvZGphbmdvLWtvbGlicmlcclxucHl0aG9uIHNldHVwLnB5IGluc3RhbGxcclxuXHJcbiogc2V0IFNUQVRJQ19ST09UIGFuZCBTVEFUSUNfVVJMIGluIHNldHRpbmdzLnB5XHJcbiogYWRkICdrb2xpYnJpJyB0byB5b3VyIGluc3RhbGxlZCBhcHBzXHJcbiogYWRkIHVybChyJ15rb2xpYnJpLycsIGluY2x1ZGUoJ2tvbGlicmkudXJscycpKSwgdG8geW91ciB1cmxzLnB5XHJcblxyXG5JdCB3b3VsZCBiZSBzbWFydCB0byByZWFkIHRocm91Z2ggdXNhZ2UudHh0IGZpcnN0IGZvciBhIG1vcmUgZGV0YWlsZWQgdHV0b3JpYWwgb3IgZXhwZXJpbWVudCB3aXRoXHJcbnRoZSB3b3JraW5nIGV4YW1wbGUgcHJvamVjdCBwcm92aWRlZCBpbiB0aGUgc291cmNlLCBhdmFpbGFibGUgYXQgYml0YnVja2V0LlxyXG5cclxuXHJcblJlcXVpcmVtZW50c1xyXG4tLS0tLS0tLS0tLS1cclxuXHJcbiogRGphbmdvXHJcbiogQ2VsZXJ5IC8gZGphbmdvLWNlbGVyeVxyXG5cclxuXHJcbkV4YW1wbGUgdXNhZ2VcclxuLS0tLS0tLS0tLS0tLVxyXG5cclxuVGhlIHNpbXBsZXN0IHByb2Nlc3NvciB5b3UgY2FuIGRlZmluZSBsb29rcyBzb21ldGhpbmcgbGlrZTo6XHJcblxyXG4gICAgZnJvbSBrb2xpYnJpLmNvcmUgaW1wb3J0ICpcclxuICAgIGZyb20gbW9kZWxzIGltcG9ydCAqXHJcblxyXG4gICAgZGlydHlfd29yZHMgPSAoJ2ZvbycsICdmdWRnZScsICdiYXInLClcclxuXHJcbiAgICBjbGFzcyBSZW1vdmVQcm9mYW5pdHkoUHJvY2Vzc29yKTpcclxuICAgICAgICBtb2RlbCA9IEFydGljbGVcclxuXHJcbiAgICAgICAgZGVmIHByb2Nlc3Moc2VsZiwgdXNlciwgYXJ0aWNsZSwgKiprd2FyZ3MpOlxyXG4gICAgICAgICAgICBmb3IgZGlydHlfd29yZCBpbiBkaXJ0eV93b3JkczpcclxuICAgICAgICAgICAgICAgIGFydGljbGUudGV4dCA9IGFydGljbGUudGV4dC5yZXBsYWNlKGRpcnR5X3dvcmQsJyonKmxlbihkaXJ0eV93b3JkKSlcclxuICAgICAgICAgICAgYXJ0aWNsZS5zYXZlKClcclxuXHJcbiAgICBtYW5hZ2VyLnJlZ2lzdGVyLnByb2Nlc3NvcihSZW1vdmVQcm9mYW5pdHkoKSlcclxuXHJcbkl0J3MgYSB2ZXJ5IHNpbXBsZSBwcm9jZXNzb3Igd2hpY2ggcmVwbGFjZXMgYWxsIGRpcnR5IHdvcmRzLCBkZWZpbmVkIGluXHJcbmRpcnR5X3dvcmRzLCB3aXRoICogZnJvbSBpbnN0YW5jZXMgb2YgYSBtb2RlbCBjYWxsZWQgQXJ0aWNsZS5cclxuXHJcblRvIGNyZWF0ZSBhIHdvcmtmbG93LCBjb25uZWN0aW5nIGEgc2VyaWVzIG9mIHByb2Nlc3NvcnM6OlxyXG5cclxuICAgIGZyb20ga29saWJyaS5jb3JlIGltcG9ydCBtYW5hZ2VyXHJcbiAgICBmcm9tIGtvbGlicmkuY29yZS53b3JrZmxvdyBpbXBvcnQgV29ya2Zsb3dcclxuXHJcbiAgICB3b3JrZmxvdyA9IFdvcmtmbG93KCdQdWJsaXNoIGFydGljbGUnLCBtb2RlbD1BcnRpY2xlKVxyXG4gICAgd29ya2Zsb3cuZmlyc3QoUmVtb3ZlUHJvZmFuaXR5KCkpLm9uX2V4Y2VwdGlvbihWYWx1ZUVycm9yLCBEaXJ0eVdvcmRSZW1vdmVyKCkpLlxcXHJcbiAgICAgICAgdGhlbihQdWJsaXNoQXJ0aWNsZSgpKS50aGVuKEFyY2hpdmVBcnRpY2xlKCkpXHJcblxyXG4gICAgbWFuYWdlci5yZWdpc3Rlci53b3JrZmxvdyh3b3JrZmxvdylcclxuXHJcbkhlcmUgd2UgY3JlYXRlIGEgd29ya2Zsb3cgY2FsbGVkIFwiUHVibGlzaCBhcnRpY2xlXCIgZm9yIHRoZSBBcnRpY2xlLW1vZGVsLiBGaXJzdFxyXG53ZSByZW1vdmUgYWxsIHByb2Zhbml0eSB1c2luZyB0aGUgUmVtb3ZlUHJvZmFuaXR5LCBpZiBSZW1vdmVQcm9mYW5pdHkgcmFpc2VzXHJcbmFuIFZhbHVlRXJyb3Igd2UgcnVuIHRoZSBEaXJ0eVdvcmRSZW1vdmVyLXByb2Nlc3NvciwgdGhlbiB3ZSBwdWJsaXNoXHJcbnRoZSBhcnRpY2xlIHVzaW5nIGEgcHJvY2Vzc29yIGNhbGxlZCBQdWJsaXNoQXJ0aWNsZSBhbmQgZmluYWxseSB3ZSBhcmNoaXZlIGl0LlxyXG5cclxuU2VlIHRoZSB1c2FnZS50eHQgZG9jdW1lbnQgaW4gdGhlIHNvdXJjZSBmb3IgbW9yZSBleGFtcGxlcyBhbmQgaW4tZGVwdGhcclxuZXhwbGFuYXRpb24gb2YgZmVhdHVyZXMuXHJcblxyXG5cclxuUmVsZWFzZSBub3Rlc1xyXG4tLS0tLS0tLS0tLS0tXHJcblxyXG4qIDAuMi4wIC0gc3VwcG9ydCBmb3IgdXNlciBpbnB1dC4gU2VlIGJvdHRvbSBvZiB1c2FnZSBkZXNjcmlwdGlvbiBmb3IgbW9yZSBpbmZvLlxyXG4qIDAuMS4xIC0gQWRkZWQgc3VwcG9ydCBmb3Igb25seSBydW5uaW5nIGEgcHJvY2Vzc29yIG9uY2UgZm9yIGFuIGluc3RhbmNlLlxyXG4qIDAuMS4wIC0gSW5pdGlhbCByZWxlYXNlLiBQcmUtYWxwaGEgc3RhdGUuXHJcblxyXG5Lb2xpYnJpIHVzYWdlXHJcbi0tLS0tLS0tLS0tLS1cclxuXHJcblRoaXMgZG9jdW1lbnRhdGlvbiBpcyByZWxhdGVkIHRvIHRoZSAwLjEuMC1yZWxlYXNlIG9mIGtvbGlicmkgYW5kIHN5bnRheCBhbmQgZnVuY3Rpb25hbGl0eSBXSUxMIGNoYW5nZVxyXG5pbiBmdXR1cmUgcmVsZWFzZXMgYXMgbG9uZyBhcyBpdCBpcyBsYWJlbGVkIGFzIHByZS1hbHBoYS9hbHBoYS4gUmVhY2hpbmcgQmV0YS1zdGF0dXMgb25seSBzbWFsbCBjaGFuZ2VzIGluIGNvZGVcclxud2lsbCBiZSBpbnRyb2R1Y2VkLlxyXG5cclxuTkIhIFRoZSBmb2xsb3dpbmcgYXNzdW1lcyB0byBoYXZlIGluc3RhbGxlZCBjZWxlcnkvZGphbmdvLWNlbGVyeSBhbmQgY29uZmlndXJlZCBpdCB0byBydW4gYXNcclxuc3RhdGVkIGluIHRoZSBjZWxlcnkgZG9jdW1lbnRhdGlvbi4gVGhlIGV4YW1wbGUgcHJvamVjdCBpbiB0aGUgc291cmNlIGlzIHVzaW5nIGRqa29tYnUsIHdoaWNoIG1ha2VzIGl0IGFsb3QgZWFzaWVyIHRvIGdldCB1cCBhbmQgcnVubmluZy5cclxuXHJcbkEgc2ltcGxlIGFwcCBjYWxsZWQgYXJ0aWNsZSBkZWZpbmVzIGEgbW9kZWw6OlxyXG5cclxuICAgIGNsYXNzIEFydGljbGUobW9kZWxzLk1vZGVsKTpcclxuICAgICAgICB0aXRsZSA9IG1vZGVscy5DaGFyRmllbGQobWF4X2xlbmd0aD0xMjgpXHJcbiAgICAgICAgdGV4dCA9IG1vZGVscy5UZXh0RmllbGQoKVxyXG4gICAgICAgIHBhcmVudGFsX2Fkdmlzb3J5ID0gbW9kZWxzLkJvb2xlYW5GaWVsZChkZWZhdWx0PUZhbHNlKVxyXG4gICAgICAgIGF1dGhvciA9IG1vZGVscy5Gb3JlaWduS2V5KFVzZXIsIHJlbGF0ZWRfbmFtZT0nYXJ0aWNsZXMnKVxyXG4gICAgICAgIHB1Ymxpc2ggPSBtb2RlbHMuQm9vbGVhbkZpZWxkKGRlZmF1bHQ9RmFsc2UpXHJcbiAgICAgICAgYXJjaGl2ZWQgPSBtb2RlbHMuQm9vbGVhbkZpZWxkKGRlZmF1bHQ9RmFsc2UpXHJcblxyXG4gICAgICAgIGRlZiBfX3VuaWNvZGVfXyhzZWxmKTpcclxuICAgICAgICAgICAgcmV0dXJuIHNlbGYudGl0bGVcclxuXHJcbldlIGRlZmluZSBhIHByb2Nlc3NvciB0byByZW1vdmUgZGlydHkgd29yZHMgaW4gYSBmaWxlIGNhbGxlZCBwcm9jZXNzb3JzLnB5IGluIHRoZVxyXG5zYW1lIGFwcC1mb2xkZXIuIFRoZSBuYW1lIG9mIHRoZSBmaWxlIGRvZXNuJ3QgbWF0dGVyIGFzIGxvbmcgYXMgdGhlIHByb2Nlc3NvciBpc1xyXG5yZWdpc3RlcmVkIHVzaW5nIHRoZSBtYW5hZ2VyLCBhcyBzaG93biBhdCB0aGUgYm90dG9tIG9mIHRoaXMgc25pcHBldCBvZiBjb2RlOjpcclxuXHJcbiAgICBmcm9tIGtvbGlicmkuY29yZSBpbXBvcnQgKlxyXG4gICAgZnJvbSBtb2RlbHMgaW1wb3J0ICpcclxuXHJcbiAgICBkaXJ0eV93b3JkcyA9ICgnZm9vJywgJ2JhcicsICdmdWRnZScsKVxyXG5cclxuICAgIGNsYXNzIFJlbW92ZVByb2Zhbml0eShQcm9jZXNzb3IpOlxyXG4gICAgICAgIG1vZGVsID0gQXJ0aWNsZVxyXG5cclxuICAgICAgICBkZWYgcHJvY2VzcyhzZWxmLCB1c2VyLCBpdGVtLCAqKmt3YXJncyk6XHJcbiAgICAgICAgICAgIGZvciBkaXJ0eV93b3JkIGluIGRpcnR5X3dvcmRzOlxyXG4gICAgICAgICAgICAgICAgaXRlbS50ZXh0ID0gaXRlbS50ZXh0LnJlcGxhY2UoZGlydHlfd29yZCwgJyonKmxlbihkaXJ0eV93b3JkKSlcclxuICAgICAgICAgICAgaXRlbS5zYXZlKClcclxuXHJcbiAgICBtYW5hZ2VyLnJlZ2lzdGVyLnByb2Nlc3NvcihSZW1vdmVQcm9mYW5pdHkoKSlcclxuXHJcbk5vdGU6XHJcblxyXG4xLiBZb3UgbXVzdCBzdWJjbGFzcyBQcm9jZXNzb3IgZnJvbSBrb2xpYnJpLmNvcmVcclxuXHJcbjIuIFRoZSBuYW1lIG9mIHlvdXIgcHJvY2Vzc29yIHdpbGwgYmUgdXNlZCBpbiB0aGUgYWRtaW4uIFVzaW5nIENhbWVsQ2FzZSAoaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DYW1lbENhc2UpXHJcbnRoZSBuYW1lIHdpbGwgYmUgdHJhbnNmb3JtZWQgaW50byBhIHRleHQgbW9yZSBzdWl0YWJsZSBmb3IgcmVhZGluZy4gSW4gb3VyIGV4YW1wbGUgaGVyZSBSZW1vdmVQcm9mYW5pdHkgd2lsbCBiZWNvbWVcclxuXCJSZW1vdmUgcHJvZmFuaXR5XCIgaW4gdGhlIGFkbWluLlxyXG5cclxuMy4gQWxsIHByb2Nlc3NvcnMgeW91IHdhbnQgdG8gc2hvdyB1cCBpbiB0aGUgYWRtaW4gbXVzdCBzcGVjaWZ5IGEgbW9kZWwgdGhleSdyZSByZWxhdGVkIHRvLlxyXG5cclxuNC4gQWxsIHByb2Nlc3NvcnMgTVVTVCBpbXBsZW1lbnQgdGhlIHByb2Nlc3Nvci1tZXRob2QgYW5kIHRoZSBzaWduYXR1cmUgb2YgdGhlIG1ldGhvZCBNVVNUIGxvb2sgbGlrZSB0aGVcclxub25lIGluIHRoZSBleGFtcGxlIGFib3ZlLCB3aXRoIHRoZSBleGNlcHRpb24gaWYgdGhlIGl0ZW0gcGFyYW1ldGVyLCB3aGljaCBjYW4gYmUgY2FsbGVkIHdoYXRldmVyIHlvdSBsaWtlLiBJblxyXG50aGlzIGV4YW1wbGUgaXQgd291bGQgYmUgbmljZXIgdG8gY2FsbCBpdCBhcnRpY2xlIHNvIGdvIGFoZWFkLlxyXG5cclxuNS4gVGhlIHByb2Nlc3NvciBzaG91bGQgbm90IHRvdWNoIGFueSBvdGhlciBkYXRhIHRoYW4gdGhlIGl0ZW0gcHJvdmlkZWQuXHJcblxyXG5cclxuU2ltcGxlIHRlc3Rpbmc6OlxyXG5cclxuICAgICQgcHl0aG9uIG1hbmFnZS5weSBzaGVsbFxyXG4gICAgPj4+IGZyb20gZGphbmdvLmNvbnRyaWIuYXV0aC5tb2RlbHMgaW1wb3J0IFVzZXJcclxuICAgID4+PiB1c3IgPSBVc2VyLm9iamVjdHMuYWxsKClbMF0gIyBhbiBhbGxyZWFkeSByZWdpc3RlcmVkIHVzZXIgd2UgY2FuIHVzZSBmb3IgdGVzdGluZyBwdXJwb3Nlc1xyXG4gICAgPj4+IGZyb20gYXJ0aWNsZS5tb2RlbHMgaW1wb3J0IEFydGljbGVcclxuICAgID4+PiBhcnRpY2xlMSA9IEFydGljbGUub2JqZWN0cy5jcmVhdGUodGl0bGU9XCJEaXJ0eSB3b3Jkc1wiLCB0ZXh0PVwiU29tZSBkaXJ0eSB3b3JkczogZm9vIGJhciBmdWRnZS5cIiwgYXV0aG9yPXVzcilcclxuICAgID4+PiBmcm9tIGFydGljbGUucHJvY2Vzc29ycyBpbXBvcnQgUmVtb3ZlUHJvZmFuaXR5XHJcbiAgICA+Pj4gUmVtb3ZlUHJvZmFuaXR5KCkucHJvY2Vzcyh1c3IsIGFydGljbGUxKVxyXG4gICAgPj4+IGFydGljbGUxLnRleHRcclxuICAgICdTb21lIGRpcnR5IHdvcmRzOiAqKiogKioqICoqKioqLidcclxuXHJcblRvIG1ha2UgaXQgYXZhaWxhYmxlIGluIHRoZSBhZG1pbiwgYWRkIGFuIGFkbWluLnB5IGZpbGUgdG8geW91ciBhcHAtZm9sZGVyOjpcclxuXHJcbiAgICBmcm9tIGRqYW5nby5jb250cmliIGltcG9ydCBhZG1pblxyXG4gICAgZnJvbSBtb2RlbHMgaW1wb3J0ICpcclxuICAgIGZyb20ga29saWJyaS5jb3JlIGltcG9ydCBtYW5hZ2VyXHJcblxyXG4gICAgY2xhc3MgQXJ0aWNsZUFkbWluKGFkbWluLk1vZGVsQWRtaW4pOlxyXG4gICAgICAgIGZpZWxkcyA9ICgndGl0bGUnLCAndGV4dCcsICdwYXJlbnRhbF9hZHZpc29yeScsICdhdXRob3InLCAncHVibGlzaCcsICdhcmNoaXZlZCcsIClcclxuICAgICAgICBsaXN0X2Rpc3BsYXkgPSAoJ3RpdGxlJywgJ3BhcmVudGFsX2Fkdmlzb3J5JywgJ2F1dGhvcicsICdwdWJsaXNoJywgJ2FyY2hpdmVkJywgKVxyXG4gICAgICAgIGxpc3RfZmlsdGVyID0gKCdwYXJlbnRhbF9hZHZpc29yeScsICdhdXRob3InLCAncHVibGlzaCcsICdhcmNoaXZlZCcsIClcclxuICAgICAgICBhY3Rpb25zID0gbWFuYWdlci5hZG1pbi5hY3Rpb25zX2Zvcl9tb2RlbChBcnRpY2xlKVxyXG5cclxuICAgIGFkbWluLnNpdGUucmVnaXN0ZXIoQXJ0aWNsZSwgQXJ0aWNsZUFkbWluKVxyXG5cclxuVGhlIGltcG9ydGFudCBwYXJ0IGhlcmUgaXMgdGhlIFwiYWN0aW9ucyA9XCItbGluZS4gSXQgYXNzaWducyBhbGwgYXZhaWxhYmxlIHByb2Nlc3NvcnMgcmVsYXRlZCB0byB0aGUgYXJ0aWNsZS1tb2RlbC5cclxuTm93IHlvdSBjYW4gc2VsZWN0IHNldmVyYWwgYXJ0aWNsZXMgaW4gdGhlIGFkbWlucyBjaGFuZ2VfbGlzdCBhbmQgYXBwbHkgYSBwcm9jZXNzb3IgdG8gYWxsIG9mIHRoZW0uWW91IGNhbiBhbHNvXHJcbm1ha2UgdGhlIHByb2Nlc3NvcnMgYXZhaWxhYmxlIGluIHRoZSBjaGFuZ2VfZm9ybSBmb3IgYW4gaW5zdGFuY2UsIGJ1dCBleHRlbmRpbmcgdGhlIGNoYW5nZV9mb3JtIGluIHlvdXIgYXBwLiBDcmVhdGUgYVxyXG50ZW1wbGF0ZXMtZm9sZGVyIGluIHlvdXIgYXBwLWZvbGRlciwgd2l0aCBhIHN1YmZvbGRlciBjYWxsZWQgYWRtaW4sIHdpdGggYSBzdWJmb2xkZXIgYXJ0aWNsZSBhbmQgaW5zaWRlIGl0IHB1dCBhXHJcbmZpbGUgY2FsbGVkIGNoYW5nZV9mb3JtLmh0bWw6OlxyXG5cclxuICAgIHslIGV4dGVuZHMgXCJhZG1pbi9jaGFuZ2VfZm9ybS5odG1sXCIgJX1cclxuICAgIHslIGxvYWQga29saWJyaV90YWdzICV9XHJcblxyXG4gICAgeyUgYmxvY2sgZXh0cmFoZWFkICV9XHJcbiAgICAgICAgPHNjcmlwdCBzcmM9XCJodHRwOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS1sYXRlc3QuanNcIj48L3NjcmlwdD5cclxuICAgICAgICA8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBzcmM9XCJ7JSB2YWx1ZV9mcm9tX3NldHRpbmdzIFwiU1RBVElDX1VSTFwiICV9anMva29saWJyaS9rb2xpYnJpLmpzXCI+PC9zY3JpcHQ+XHJcbiAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCJ7JSB2YWx1ZV9mcm9tX3NldHRpbmdzIFwiU1RBVElDX1VSTFwiICV9Y3NzL2tvbGlicmkva29saWJyaS5jc3NcIiAvPlxyXG5cclxuICAgICAgICA8c2NyaXB0PlxyXG4gICAgICAgICAgICB1cmxfdG9fYWN0aXZlX3Byb2Nlc3Nvcl9saXN0ID0gXCJ7JSB1cmwgYWN0aXZlX3Byb2Nlc3NlcyAlfVwiO1xyXG4gICAgICAgICAgICB1cmxfdG9fcHJvY2Vzc29yX3N0YXR1cyA9IFwieyUgdXJsIHByb2Nlc3Nvcl9zdGF0dXMgICV9XCI7XHJcbiAgICAgICAgPC9zY3JpcHQ+XHJcbiAgICB7JSBlbmRibG9jayAlfVxyXG5cclxuICAgIHslIGJsb2NrIGZvb3RlciAlfVxyXG4gICAgPGRpdiBpZD1cImNoYW5nZV9mb3JtX2JveFwiPlxyXG4gICAgeyUga29saWJyaWZ5X2FkbWluIG9yaWdpbmFsICV9XHJcbiAgICA8L2Rpdj5cclxuICAgIHslIGVuZGJsb2NrICV9XHJcblxyXG5JdCB3aWxsIGxvYWQgdGhlIGtvbGlicmkgdGVtcGxhdGUgdGFncywgYWRkIHNvbWUgamF2YXNjcmlwdCByZWZlcmVuY2VzIHRvIGpxdWVyeSBhbmQgc29tZSBrb2xpYnJpIGpzLCBidXQgdGhlIG1hZ2ljXHJcbmhhcHBlbnMgd2hlbiB5b3UgY2FsbCB7JSBrb2xpYnJpZnlfYWRtaW4gb3JpZ2luYWwgJX0uIEl0IHdpbGwgaW5zZXJ0IGEgbGlzdCBvZiBhdmFpbGFibGUgcHJvY2Vzc29ycyBhbmQgd29ya2Zsb3dzIHlvdSBjYW5cclxuZXhlY3V0ZSBmb3IgdGhlIG9iamVjdCB5b3UncmUgbG9va2luZyBhdC5cclxuXHJcbk5CISBUaGUga29saWJyaWZ5LXRlbXBsYXRldGFnIGNoYW5nZWQgaW4gdmVyc2lvbiAwLjIuMC4gSW5zaWRlIHlvdSdsbCBoYXZlIHRvIHVzZSB0aGUga29saWJyaWZ5X2FkbWluIHRlbXBsYXRldGFnIHRvXHJcbnVzZSB0aGUgXCJhZG1pbi9iYXNlX3NpdGUuaHRtbFwiIHRlbXBsYXRlIHRvIHJlbmRlciB5b3VyIHBhZ2UuXHJcblxyXG5UbyBtYWtlIHRoZSBzYW1lIGxpc3Qgb2YgcHJvY2Vzc29ycyBhdmFpbGFibGUgb3V0c2lkZSB0aGUgYWRtaW4sIHlvdSBjYW4gZG8gc29tZXRoaW5nIGxpa2UgdGhpcyBmb3IgYSBsaXN0IG9mIG9iamVjdHM6OlxyXG5cclxuICAgIHslIGxvYWQga29saWJyaV90YWdzICV9XHJcbiAgICA8aHRtbD5cclxuICAgIDxoZWFkPlxyXG4gICAgICAgIHslIGtvbGlicmlfaW1wb3J0cyAlfVxyXG4gICAgICAgIDxzdHlsZT5cclxuICAgICAgICAgICAgYm9keSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAgMjBweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkx1Y2lkYSBHcmFuZGVcIixcIkRlamFWdSBTYW5zXCIsXCJCaXRzdHJlYW0gVmVyYSBTYW5zXCIsVmVyZGFuYSxBcmlhbCxzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgPC9zdHlsZT5cclxuXHJcbiAgICA8L2hlYWQ+XHJcbiAgICA8Ym9keT5cclxuXHJcbiAgICA8aDI+QXJ0aWNsZXM8L2gyPlxyXG5cclxuICAgIHslIGtvbGlicmlmeSBhcnRpY2xlcyBcImFydGljbGUvYXJ0aWNsZV9saXN0Lmh0bWxcIiAgJX1cclxuXHJcbiAgICA8L2JvZHk+XHJcbiAgICA8L2h0bWw+XHJcblxyXG5IZXJlIHdlIFwia29saWJyaWZpZXNcIiBhIHF1ZXJ5c2V0LCBhIGJ1bmNoIG9mIGFydGljbGVzLCB1c2luZyBhIHRlbXBsYXRlIGRlZmluZWQgaW4geW91ciBhcHBzIHRlbXBsYXRlIGZvbGRlciwgbGlrZSBzbzo6XHJcblxyXG4gICAgPHVsPlxyXG4gICAgeyUgZm9yIGFydGljbGUgaW4gb2JqZWN0X2xpc3QgJX1cclxuICAgICAgICA8bGk+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJwa19pZF97eyBhcnRpY2xlLmlkIH19XCIgdmFsdWU9XCJ7eyBhcnRpY2xlLmlkIH19XCIvPjxhIGhyZWY9XCJ7JSAgdXJsIGRldGFpbHMgYXJ0aWNsZS5pZCAlfVwiPnt7IGFydGljbGUgfX08L2E+PC9saT5cclxuICAgIHslICBlbmRmb3IgJX1cclxuICAgIDwvdWw+XHJcblxyXG5UaGUgb25seSByZXF1aXJlbWVudCBmb3IgdGhpcyB0byB3b3JrIGlzIHRoYXQgeW91IGhhdmUgYSB2YWx1ZSBuYW1lZCBwa19pZF9Tb21ldGhpbmdVbmlxdWVGb3JFYWNoSXRlbSB3aXRoIHZhbHVlIG9mXHJcbnRoZSBtb2RlbC5pZCB0byBhcHBseSB0aGUgcHJvY2Vzc29ycyB0by4gU29tZXRoaW5nIGxpa2UgdGhpcyBmb3IgYSBkZXRhaWxzLXBhZ2UgZm9yIGFuIGFydGljbGU6OlxyXG5cclxuICAgIHslIGxvYWQga29saWJyaV90YWdzICV9XHJcbiAgICA8aHRtbD5cclxuICAgIDxoZWFkPlxyXG4gICAgICAgIHslIGtvbGlicmlfaW1wb3J0cyAlfVxyXG4gICAgICAgIDxzdHlsZT5cclxuICAgICAgICAgICAgYm9keSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAgMjBweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkx1Y2lkYSBHcmFuZGVcIixcIkRlamFWdSBTYW5zXCIsXCJCaXRzdHJlYW0gVmVyYSBTYW5zXCIsVmVyZGFuYSxBcmlhbCxzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIDwvc3R5bGU+XHJcbiAgICA8L2hlYWQ+XHJcbiAgICA8Ym9keT5cclxuICAgIDxpPjwvaT48YSBocmVmPVwiL2luZGV4XCI+SW5kZXg8L2E+PC9pPlxyXG4gICAgPFAvPlxyXG4gICAgPGgyPnt7IGFydGljbGUudGl0bGUgfX08L2gyPlxyXG4gICAgPHNwYW4gc3R5bGU9XCJmb250LXNpemU6c21hbGw7XCI+Ynkge3sgYXJ0aWNsZS5hdXRob3IgfX0uIHslICBpZiBhcnRpY2xlLnBhcmVudGFsX2Fkdmlzb3J5ICV9PGI+V2FybmluZyE8L2I+IFRoaXMgYXJ0aWNsZSBjb250YWlucyBleHBsaWNpdCBsYW5ndWFnZS57JSBlbmRpZiAlfVxyXG4gICAgeyUgIGlmIGFydGljbGUucHVibGlzaCAlfSBUaGlzIGFydGljbGUgaGFzIGJlZW4gcHVibGlzaGVkLnslIGVuZGlmICV9PC9zcGFuPlxyXG5cclxuICAgIDxibG9ja3F1b3RlPnt7ICBhcnRpY2xlLnRleHQgfX08L2Jsb2NrcXVvdGU+XHJcblxyXG4gICAgeyUga29saWJyaWZ5IGFydGljbGUgJX1cclxuXHJcbiAgICA8L2JvZHk+XHJcbiAgICA8L2h0bWw+XHJcblxyXG5BbmQgc29tZXRpbWVzIHdlIHdhbnQgdG8gZG8gbW9yZSB0aGluZ3Mgd2l0aCBvdXIgZGF0YSwgYnV0IGluIGEgc3BlY2lmaWMgb3JkZXIuIFRoaXMgaXMgd2VyZSBXb3JrZmxvd3MgY29tZXMgaW46OlxyXG5cclxuICAgIHdvcmtmbG93ID0gV29ya2Zsb3coJ1B1Ymxpc2ggYXJ0aWNsZScsIG1vZGVsPUFydGljbGUpXHJcbiAgICB3b3JrZmxvdy5maXJzdChTZXRQYXJlbnRhbEFkdmlzb3J5KCkpLm9uX2V4Y2VwdGlvbihWYWx1ZUVycm9yLCBSZW1vdmVEaXJ0eVdvcmRzKCkpLlxcXHJcbiAgICAgICAgdGhlbihQdWJsaXNoQXJ0aWNsZSgpKS5hbmRfZmluYWxseShDbGVhblVwQWZ0ZXJQdWJsaXNoaW5nKCkpXHJcbiAgICBtYW5hZ2VyLnJlZ2lzdGVyLndvcmtmbG93KHdvcmtmbG93KVxyXG5cclxuVGhpcyB3b3JrZmxvdyBmaXJzdCBhdHRlbXB0cyB0byBtYXJrIGFsbCBhcnRpY2xlcyBjb250YWluaW5nIHByb2Zhbml0eSB3aXRoIGEgXCJQYXJlbnRhbCBBZHZpc29yeVwiIGZsYWcuIElmIHRoYXQgZmFpbHNcclxuYW5kIGEgVmFsdWVFcnJvci1leGNlcHRpb24gaXMgcmFpc2VkLCBSZW1vdmVEaXJ0eVdvcmRzIHdpbGwgcmVtb3ZlIGFsbCBkaXJ0eSB3b3Jkcy4gWW91IGNhbiBzcGVjaWZ5IHNldmVyYWwgcHJvY2Vzc29yc1xyXG50byBoYW5kbGUgZGlmZmVyZW50IGV4Y2VwdGlvbnMuIFRoZW4gdGhlIHdvcmtmbG93IHdpbGwgcHVibGlzaCB0aGUgYXJ0aWNsZSBhbmQgZmluYWxseSBpdCB3aWxsIGRvIHNvbWUgaG91c2UgY2xlYW5pbmdcclxudXNpbmcgdGhlIENsZWFuVXBBZnRlclB1Ymxpc2hpbmctcHJvY2Vzc29yLiBXaGVuIHVzaW5nIGFuZF9maW5hbGx5KFNvbWVQcm9jZXNzb3IpIHRoYXQgcHJvY2Vzc29yIGFsd2F5cyBiZSBjYWxsZWQgbGFzdFxyXG5pbiBhIHRyeS4uLmZpbmFsbHktYmxvY2sgc3Vycm91bmRpbmcgdGhlIG90aGVyIHN0ZXBzIGluIHlvdXIgd29ya2Zsb3cuXHJcblxyXG5JIGtub3cgLSBub3QgYSB2ZXJ5IGdvb2QgZXhhbXBsZS4gSG9wZWZ1bGx5IHRoZSBleGFtcGxlcyB3aWxsIGltcHJvdmUgd2l0aCBmdXR1cmUgcmVsZWFzZXMgYXMgd2VsbCA7LSkuXHJcblxyXG5Xb3JrZmxvd3MgYXJlIGF2YWlsYWJsZSBpbiB0aGUgYWRtaW4gYW5kIGluIHlvdXIgdGVtcGxhdGVzIHdoZW4geW91IFwia29saWJyaWZpZXNcIiBhbiBpbnN0YW5jZSBvciBxdWVyeXNldCwganVzdCBsaWtlXHJcbnByb2Nlc3NvcnMuXHJcblxyXG5GaW5hbGx5IGEgcHJvY2Vzc29yIGNhbiBiZSBleGVjdXRlZCBub3QgcmVsYXRlZCB0byBhIHNwZWNpZmljIG1vZGVsLCBmb3IgaW5zYW5jZSBzY2FubmluZyBhIGZpbGVzeXN0ZW0gbG9va2luZyBmb3JcclxubmV3IGltYWdlcyBvciBzZW5kaW5nIGFuIGVtYWlsICggZm9yIHNvbWUgcmVhc29uICkuIFRvIGJlIGFibGUgdG8gZG8gdGhpcyB3ZSBtdXN0IGltcGxlbWVudCBhIG5ldyBtZXRob2QgaW4gb3VyIHByb2Nlc3Nvcjo6XHJcblxyXG4gICAgaW1wb3J0IG9zXHJcblxyXG4gICAgY2xhc3MgSW1wb3J0QXJ0aWNsZUZyb21Ib21lRm9sZGVyKFByb2Nlc3Nvcik6XHJcbiAgICAgICAgbW9kZWwgPSBBcnRpY2xlXHJcbiAgICAgICAgdXNlcl9leGNsdXNpdmUgPSBUcnVlXHJcblxyXG4gICAgICAgIGRlZiBleGVjdXRlKHNlbGYsIHVzZXIsICoqa3dhcmdzKTpcclxuICAgICAgICAgICAgcGF0aCA9IG9zLnBhdGguam9pbignL2hvbWUnLCB1c2VyLnVzZXJuYW1lKVxyXG4gICAgICAgICAgICBmb3IgZmlsZW5hbWUgaW4gb3MubGlzdGRpcihwYXRoKTpcclxuICAgICAgICAgICAgICAgIGZuYW1lLCBleHQgPSBvcy5wYXRoLnNwbGl0ZXh0KGZpbGVuYW1lKVxyXG4gICAgICAgICAgICAgICAgaWYgZXh0ID09ICcudHh0JzpcclxuICAgICAgICAgICAgICAgICAgICBBcnRpY2xlLm9iamVjdHMuY3JlYXRlKHRpdGxlPWZuYW1lLCB0ZXh0PW9wZW4ob3MucGF0aC5qb2luKHBhdGgsIGZpbGVuYW1lKSkucmVhZCgpLCBhdXRob3I9dXNlcilcclxuXHJcblRoZSBleGVjdXRlLW1ldGhvZCB0YWtlcyBhIHVzZXItaW5zdGFuY2UgYW5kIG9wdGlvbmFsIGt3YXJncyBhcyBwYXJhbWV0ZXIuIFRoZSBwcm9jZXNzb3IgaXMgcXVpdGUgZHVtYlxyXG5hbmQgb25seSBzY2FucyB0aGUgdXNlcnMgaG9tZWZvbGRlciwgYWRkaW5nIGFsbCBmaWxlcyB3aXRoIGEgLnR4dC1leHRlbnNpb24gdG8gdGhlIGRhdGFiYXNlIHVzaW5nIHRoZSBmaWxlY29udGVudFxyXG5hcyB0ZXh0IGZvciBhbiBhcnRpY2xlIGFuZCB0aGUgZmlsZW5hbWUgYXMgYSB0aXRsZS5cclxuXHJcblRvIGV4ZWN1dGUgc3VjaCBwcm9jZXNzb3JzLCBjbGljayBvbiB0aGUgXCJLb2xpYnJpXCItbGluayBpbiB0aGUgYWRtaW4sIHRoZSBsaW5rIHRha2luZyB5b3UgdG8gdGhlIGFwcC1pbmRleCBwYWdlLiBUaGlzXHJcbnBhZ2UgY29udGFpbnMgd2hhdCB3aWxsIGhvcGVmdWxseSBiZWNvbWUgYSB1c2FibGUgZGFzaGJvYXJkIGZvciBrb2xpYnJpIGxhdGVyIG9uLiBGb3Igbm93IGl0IGxpc3RzIHJlZ2lzdGVyZWQgcHJvY2Vzc29yc1xyXG5hbmQgd29ya2Zsb3dzLCBzaG93cyBhIGxpc3Qgb2YgcGVuZGluZyBwcm9jZXNzb3JzIGFuZCBlYWNoIGxpc3RlZCBwcm9jZXNzb3IgY2FuIGJlIGNsaWNrIGZvciBtb3JlIGRldGFpbHMuIElmIHlvdSd2ZVxyXG5pbXBsZW1lbnRlZCB0aGUgZXhlY3V0ZS1tZXRob2QgYXMgc2hvd24gYWJvdmUgdGhlcmUgd2lsbCBiZSBhbiBcIkV4ZWN1dGVcIi1idXR0b24gYXZhaWxhYmxlLiBDbGljayBpdCBhbmQgeW91ciB0ZXN0XHJcbmRhdGFiYXNlIHdpbGwgaGF2ZSBzb21lIGFydGljbGVzIGluIGl0IChhc3N1bWluZyB5b3UgZ290IHNvbWUgdGV4dGZpbGVzIGluIHlvdXIgaG9tZSBmb2xkZXIgKS5cclxuXHJcblRoZSBwcm9jZXNzb3Igc2hvd24gYWJvdmUgYWxzbyBpbnRyb2R1Y2UgYW5vdGhlciBjb25jZXB0LCB1c2VyX2V4Y2x1c2l2ZS4gV2hlbiBzZXR0aW5nIHRoaXMgdG8gdHJ1ZSB5b3UgaW5kaWNhdGUgdGhhdFxyXG55b3VyIHByb2Nlc3NvciB3aWxsIG9ubHkgY2hhbmdlIGRhdGEgcmVsYXRlZCB0byB0aGUgdXNlciBwcm92aWRlZCBhcyBwYXJhbWV0ZXIgdG8gdGhlIGV4ZWN1dGUtbWV0aG9kICggb3IgdGhlXHJcbnByb2Nlc3MtbWV0aG9kKS4gVGhpcyBtYWtlcyBpdCBwb3NzaWJsZSB0byBsZXQgc2V2ZXJhbCB1c2VycyBleGVjdXRlIG9yIHByb2Nlc3MgZGF0YSB3aXRob3V0IHRoZSByaXNrIG9mIHVwZGF0aW5nIGRhdGFcclxucmVsYXRlZCB0byBhbm90aGVyIHVzZXIuXHJcblxyXG5cclxuLS1HZXR0aW5nIHVzaW5nIGlucHV0LS1cclxuXHJcbkludHJvZHVjZWQgaW4gdmVyc2lvbiAwLjIuMC4gVG8gZW5hYmxlIHlvdXIgcHJvY2Vzc29yIHRvIHRha2UgdXNlciBpbnB1dCB1c2luZyBhIGZvcm0sIGV4dGVuZCB5b3VyIHByb2Nlc3NvciBsaWtlIHNvOjpcclxuXHJcbiAgICBjbGFzcyBQdWJsaXNoQXJ0aWNsZShQcm9jZXNzb3IpOlxyXG4gICAgICAgIG1vZGVsID0gQXJ0aWNsZVxyXG4gICAgICAgIGhhc19mb3JtID0gVHJ1ZVxyXG4gICAgICAgIGZvcm1fY29tbWVudCA9IFwiVGhpcyBwcm9jZXNzb3Igd2lsbCBwdWJsaXNoIHlvdXIgYXJ0aWNsZSBvbiBDb29sTmV3c1NpdGUuY29tLlwiXHJcblxyXG4gICAgICAgIGRlZiBwcm9jZXNzKHNlbGYsIHVzZXIsIGFydGljbGUsKiprd2FyZ3MpOlxyXG4gICAgICAgICAgICBhcnRpY2xlLnB1Ymxpc2ggPSBUcnVlXHJcbiAgICAgICAgICAgIGFydGljbGUuc2F2ZSgpXHJcblxyXG4gICAgICAgIGRlZiBleGVjdXRlKHNlbGYsIHVzZXIsKiprd2FyZ3MpOlxyXG4gICAgICAgICAgICBmb3IgYXJ0aWNsZSBpbiBBcnRpY2xlLm9iamVjdHMuYWxsKCk6XHJcbiAgICAgICAgICAgICAgICBzZWxmLnByb2Nlc3ModXNlciwgYXJ0aWNsZSwgKiprd2FyZ3MpXHJcblxyXG4gICAgICAgIGRlZiBnZXRfZm9ybShzZWxmKTpcclxuICAgICAgICAgICAgY2xhc3MgUHVibGlzaEZvcm0oZm9ybXMuRm9ybSk6XHJcbiAgICAgICAgICAgICAgICB1c2VybmFtZSA9IGZvcm1zLkNoYXJGaWVsZCgpXHJcbiAgICAgICAgICAgICAgICBwYXNzd29yZCA9IGZvcm1zLkNoYXJGaWVsZCgpXHJcbiAgICAgICAgICAgIHJldHVybiBQdWJsaXNoRm9ybSwge31cclxuXHJcbk5vdGljZSB0aGUgaGFzX2Zvcm0gPSBUcnVlIGxpbmUgaW4gdGhlIGJlZ2lubmluZyBhbmQgdGhlIG5ldyBnZXRfZm9ybS1tZXRob2QuIFRoaXMgbWV0aG9kIHNob3VsZCByZXR1cm4gdHdvIHRoaW5ncztcclxuXHJcbiogdGhlIGZvcm0sIG5vdCBhbiBpbnN0YW5jZSwgYnV0IHRoZSBhY3R1YWwgY2xhc3NcclxuKiBhIGRpY3Rpb25hcnkgZm9yIGluaXRpYWwgdmFsdWVzIGZvciB5b3VyIGZvcm0sIGlmIGFueS4gSWYgbm8gaW5pdGlhbCBkYXRhIGlzIHNwZWNpZmllZCB5b3UnbGwgc3RpbGwgaGF2ZSB0byByZXR1cm4gYSBkaWN0XHJcblxyXG5Zb3UgY2FuIGFsc28gcHJvdmlkZSB0aGUgdXNlciB3aXRoIHNvbWUgYWRkaXRpb25hbCBpbmZvLCBwZXJoYXBzIGEgbW9yZSBkZXRhaWxlZCBleHBsYW5hdGlvbiBvZiB3aGF0IHlvdSBleHBlY3QgaGltL2hlclxyXG50byBlbnRlciBpbiB0aGUgZm9ybS4gVGhpcyBpcyBkb25lIGJ5IGFkZGluZyBhIGZvcm1fY29tbWVudCBhdHRyaWJ1dGUgbGlrZSBzaG93biBhYm92ZS4gVGhlIGZvcm0gdXNlZCBmb3IgZm9ybSByZW5kZXJpbmdcclxuZXh0ZW5kcyBiYXNlX3NpdGUuaHRtbCBzbyB5b3UnbGwgaGF2ZSB0byBkZWZpbmUgb25lIG9mIHRob3NlLlxyXG5cclxuQ2hhbmdlIHRvIHRoZSBrb2xpYnJpIHRlbXBsYXRldGFnczpcclxuXHJcbioga29saWJyaV9pbmRleCB3aWxsIG5vIHJlbmRlciBhbiBpbmRleCB3aGljaCBleHRlbmRzIGJhc2Vfc2l0ZS5odG1sLiBJZiB5b3Ugd2FudCB0byB1c2UgaXQgaW4gdGhlIGFkbWluLCBjYWxsIGtvbGlicmlfaW5kZXhfYWRtaW4gaW5zdGVhZC5cclxuKiBrb2xpYnJpZnkgaXMgbm93IG1lYW50IHRvIGJlIHVzZWQgb3V0c2lkZSB0aGUgYWRtaW4uIENhbGwga29saWJyaWZ5X2FkbWluIHdoZW4gaW5zaWRlIHRoZSBhZG1pbi4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiVU5LTk9XTiIs
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL2JpdGJ1Y2tldC5vcmcvd2Vob2x0L2RqYW5nby1rb2xpYnJpIiw=
ICAgICJrZXl3b3JkcyI6ICJkamFuZ28gY2VsZXJ5IGFzeW5jaHJvbm91cyBwcm9jZXNzaW5nIHdvcmtmbG93Iiw=
ICAgICJsaWNlbnNlIjogIk1vZGlmaWVkIEJTRCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIkRqYW5nby1Lb2xpYnJpIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvRGphbmdvLUtvbGlicmkvIiw=
ICAgICJwbGF0Zm9ybSI6ICJVTktOT1dOIiw=
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvRGphbmdvLUtvbGlicmkvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogIlVOS05PV04iLA==
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9iaXRidWNrZXQub3JnL3dlaG9sdC9kamFuZ28ta29saWJyaSI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvRGphbmdvLUtvbGlicmkvMC4yLjBhLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiBudWxsLA==
ICAgICJzdW1tYXJ5IjogIkFzeW5jaHJvbm91cyBQcm9jZXNzb3JzL1dvcmtmbG93IG1hbmFnZW1lbnQgZm9yIGRqYW5nby4iLA==
ICAgICJ2ZXJzaW9uIjogIjAuMi4wYSIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAyMTIyMDk1LA==
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjIuMGEiOiBbXQ==
ICB9LA==
ICAidXJscyI6IFtdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
