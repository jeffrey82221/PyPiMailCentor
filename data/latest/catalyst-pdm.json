ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiU2VyZ2V5IEtvbGVzbmlrb3YiLA==
ICAgICJhdXRob3JfZW1haWwiOiAic2NpdGF0b3JAZ21haWwuY29tIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA0IC0gQmV0YSIs
ICAgICAgIkVudmlyb25tZW50IDo6IENvbnNvbGUiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IFNjaWVuY2UvUmVzZWFyY2giLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEFwYWNoZSBTb2Z0d2FyZSBMaWNlbnNlIiw=
ICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogRW5nbGlzaCIs
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjkiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiBJbXBsZW1lbnRhdGlvbiA6OiBDUHl0aG9uIiw=
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UiLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogSW1hZ2UgUmVjb2duaXRpb24iLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogSW5mb3JtYXRpb24gQW5hbHlzaXMi
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJcbjxkaXYgYWxpZ249XCJjZW50ZXJcIj5cblxuWyFbQ2F0YWx5c3QgbG9nb10oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QtcGljcy9tYXN0ZXIvcGljcy9jYXRhbHlzdF9sb2dvLnBuZyldKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0KVxuXG4qKkFjY2VsZXJhdGVkIERlZXAgTGVhcm5pbmcgUiZEKipcblxuWyFbQ29kZUZhY3Rvcl0oaHR0cHM6Ly93d3cuY29kZWZhY3Rvci5pby9yZXBvc2l0b3J5L2dpdGh1Yi9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L2JhZGdlKV0oaHR0cHM6Ly93d3cuY29kZWZhY3Rvci5pby9yZXBvc2l0b3J5L2dpdGh1Yi9jYXRhbHlzdC10ZWFtL2NhdGFseXN0KVxuWyFbUGlwaSB2ZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRzLmlvL3B5cGkvdi9jYXRhbHlzdC5zdmcpXShodHRwczovL3B5cGkub3JnL3Byb2plY3QvY2F0YWx5c3QvKVxuWyFbRG9jc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9keW5hbWljL2pzb24uc3ZnP2xhYmVsPWRvY3MmdXJsPWh0dHBzJTNBJTJGJTJGcHlwaS5vcmclMkZweXBpJTJGY2F0YWx5c3QlMkZqc29uJnF1ZXJ5PSUyNC5pbmZvLnZlcnNpb24mY29sb3JCPWJyaWdodGdyZWVuJnByZWZpeD12KV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC9pbmRleC5odG1sKVxuWyFbRG9ja2VyXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL2RvY2tlci1odWItYmx1ZSldKGh0dHBzOi8vaHViLmRvY2tlci5jb20vci9jYXRhbHlzdHRlYW0vY2F0YWx5c3QvdGFncylcblshW1B5UEkgU3RhdHVzXShodHRwczovL3BlcHkudGVjaC9iYWRnZS9jYXRhbHlzdCldKGh0dHBzOi8vcGVweS50ZWNoL3Byb2plY3QvY2F0YWx5c3QpXG5cblshW1R3aXR0ZXJdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvbmV3cy10d2l0dGVyLTQ5OWZlYildKGh0dHBzOi8vdHdpdHRlci5jb20vQ2F0YWx5c3RUZWFtKVxuWyFbVGVsZWdyYW1dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvY2hhbm5lbC10ZWxlZ3JhbS1ibHVlKV0oaHR0cHM6Ly90Lm1lL2NhdGFseXN0X3RlYW0pXG5bIVtTbGFja10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9DYXRhbHlzdC1zbGFjay1zdWNjZXNzKV0oaHR0cHM6Ly9qb2luLnNsYWNrLmNvbS90L2NhdGFseXN0LXRlYW0tZGV2cy9zaGFyZWRfaW52aXRlL3p0LWQ5bWlpcm5uLXo4Nm9LRHpGTUtsTUc0ZmdGZFphZncpXG5bIVtHaXRodWIgY29udHJpYnV0b3JzXShodHRwczovL2ltZy5zaGllbGRzLmlvL2dpdGh1Yi9jb250cmlidXRvcnMvY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC5zdmc/bG9nbz1naXRodWImbG9nb0NvbG9yPXdoaXRlKV0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QvZ3JhcGhzL2NvbnRyaWJ1dG9ycylcblxuIVtjb2Rlc3R5bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L3dvcmtmbG93cy9jb2Rlc3R5bGUvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcbiFbZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3Qvd29ya2Zsb3dzL2RvY3MvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcbiFbY2F0YWx5c3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L3dvcmtmbG93cy9jYXRhbHlzdC9iYWRnZS5zdmc/YnJhbmNoPW1hc3RlciZldmVudD1wdXNoKVxuIVtpbnRlZ3JhdGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L3dvcmtmbG93cy9pbnRlZ3JhdGlvbnMvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcblxuWyFbcHl0aG9uXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL3B5dGhvbl8zLjYtcGFzc2luZy1zdWNjZXNzKV0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3Qvd29ya2Zsb3dzL2NhdGFseXN0L2JhZGdlLnN2Zz9icmFuY2g9bWFzdGVyJmV2ZW50PXB1c2gpXG5bIVtweXRob25dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvcHl0aG9uXzMuNy1wYXNzaW5nLXN1Y2Nlc3MpXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC93b3JrZmxvd3MvY2F0YWx5c3QvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcblshW3B5dGhvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9weXRob25fMy44LXBhc3Npbmctc3VjY2VzcyldKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L3dvcmtmbG93cy9jYXRhbHlzdC9iYWRnZS5zdmc/YnJhbmNoPW1hc3RlciZldmVudD1wdXNoKVxuXG5bIVtvc10oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9MaW51eC1wYXNzaW5nLXN1Y2Nlc3MpXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC93b3JrZmxvd3MvY2F0YWx5c3QvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcblshW29zXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL09TWC1wYXNzaW5nLXN1Y2Nlc3MpXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC93b3JrZmxvd3MvY2F0YWx5c3QvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcblshW29zXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1dTTC1wYXNzaW5nLXN1Y2Nlc3MpXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC93b3JrZmxvd3MvY2F0YWx5c3QvYmFkZ2Uuc3ZnP2JyYW5jaD1tYXN0ZXImZXZlbnQ9cHVzaClcbjwvZGl2PlxuXG5DYXRhbHlzdCBpcyBhIFB5VG9yY2ggZnJhbWV3b3JrIGZvciBEZWVwIExlYXJuaW5nIFJlc2VhcmNoIGFuZCBEZXZlbG9wbWVudC5cbkl0IGZvY3VzZXMgb24gcmVwcm9kdWNpYmlsaXR5LCByYXBpZCBleHBlcmltZW50YXRpb24sIGFuZCBjb2RlYmFzZSByZXVzZVxuc28geW91IGNhbiBjcmVhdGUgc29tZXRoaW5nIG5ldyByYXRoZXIgdGhhbiB3cml0ZSB5ZXQgYW5vdGhlciB0cmFpbiBsb29wLlxuPGJyLz4gQnJlYWsgdGhlIGN5Y2xlIOKAkyB1c2UgdGhlIENhdGFseXN0IVxuXG4tIFtQcm9qZWN0IE1hbmlmZXN0XShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC9ibG9iL21hc3Rlci9NQU5JRkVTVC5tZClcbi0gW0ZyYW1ld29yayBhcmNoaXRlY3R1cmVdKGh0dHBzOi8vbWlyby5jb20vYXBwL2JvYXJkL285Sl9seEJPLTJrPS8pXG4tIFtDYXRhbHlzdCBhdCBBSSBMYW5kc2NhcGVdKGh0dHBzOi8vbGFuZHNjYXBlLmxmYWkuZm91bmRhdGlvbi9zZWxlY3RlZD1jYXRhbHlzdClcbi0gUGFydCBvZiB0aGUgW1B5VG9yY2ggRWNvc3lzdGVtXShodHRwczovL3B5dG9yY2gub3JnL2Vjb3N5c3RlbS8pXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+Q2F0YWx5c3QgYXQgUHlUb3JjaCBFY29zeXN0ZW0gRGF5IDIwMjE8L3N1bW1hcnk+XG48cD5cblxuWyFbQ2F0YWx5c3QgcG9zdGVyXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdC1waWNzL21hc3Rlci9waWNzL0NhdGFseXN0LVBURUQyMS5wbmcpXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdClcblxuPC9wPlxuPC9kZXRhaWxzPlxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PkNhdGFseXN0IGF0IFB5VG9yY2ggRGV2ZWxvcGVyIERheSAyMDIxPC9zdW1tYXJ5PlxuPHA+XG5cblshW0NhdGFseXN0IHBvc3Rlcl0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QtcGljcy9tYXN0ZXIvcGljcy9DYXRhbHlzdC1QVEREMjEucG5nKV0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QpXG5cbjwvcD5cbjwvZGV0YWlscz5cblxuLS0tLVxuXG4jIyBHZXR0aW5nIHN0YXJ0ZWRcblxuYGBgYmFzaFxucGlwIGluc3RhbGwgLVUgY2F0YWx5c3RcbmBgYFxuXG5gYGBweXRob25cbmltcG9ydCBvc1xuZnJvbSB0b3JjaCBpbXBvcnQgbm4sIG9wdGltXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsLCB1dGlsc1xuZnJvbSBjYXRhbHlzdC5jb250cmliLmRhdGFzZXRzIGltcG9ydCBNTklTVFxuXG5tb2RlbCA9IG5uLlNlcXVlbnRpYWwobm4uRmxhdHRlbigpLCBubi5MaW5lYXIoMjggKiAyOCwgMTApKVxuY3JpdGVyaW9uID0gbm4uQ3Jvc3NFbnRyb3B5TG9zcygpXG5vcHRpbWl6ZXIgPSBvcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSwgbHI9MC4wMilcbmxvYWRlcnMgPSB7XG4gICAgXCJ0cmFpblwiOiBEYXRhTG9hZGVyKE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1UcnVlKSwgYmF0Y2hfc2l6ZT0zMiksXG4gICAgXCJ2YWxpZFwiOiBEYXRhTG9hZGVyKE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1GYWxzZSksIGJhdGNoX3NpemU9MzIpLFxufVxuXG5ydW5uZXIgPSBkbC5TdXBlcnZpc2VkUnVubmVyKFxuICAgIGlucHV0X2tleT1cImZlYXR1cmVzXCIsIG91dHB1dF9rZXk9XCJsb2dpdHNcIiwgdGFyZ2V0X2tleT1cInRhcmdldHNcIiwgbG9zc19rZXk9XCJsb3NzXCJcbilcblxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyLnRyYWluKFxuICAgIG1vZGVsPW1vZGVsLFxuICAgIGNyaXRlcmlvbj1jcml0ZXJpb24sXG4gICAgb3B0aW1pemVyPW9wdGltaXplcixcbiAgICBsb2FkZXJzPWxvYWRlcnMsXG4gICAgbnVtX2Vwb2Nocz0xLFxuICAgIGNhbGxiYWNrcz1bXG4gICAgICAgIGRsLkFjY3VyYWN5Q2FsbGJhY2soaW5wdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIHRvcGs9KDEsIDMsIDUpKSxcbiAgICAgICAgZGwuUHJlY2lzaW9uUmVjYWxsRjFTdXBwb3J0Q2FsbGJhY2soaW5wdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIpLFxuICAgIF0sXG4gICAgbG9nZGlyPVwiLi9sb2dzXCIsXG4gICAgdmFsaWRfbG9hZGVyPVwidmFsaWRcIixcbiAgICB2YWxpZF9tZXRyaWM9XCJsb3NzXCIsXG4gICAgbWluaW1pemVfdmFsaWRfbWV0cmljPVRydWUsXG4gICAgdmVyYm9zZT1UcnVlLFxuKVxuXG4jIG1vZGVsIGV2YWx1YXRpb25cbm1ldHJpY3MgPSBydW5uZXIuZXZhbHVhdGVfbG9hZGVyKFxuICAgIGxvYWRlcj1sb2FkZXJzW1widmFsaWRcIl0sXG4gICAgY2FsbGJhY2tzPVtkbC5BY2N1cmFjeUNhbGxiYWNrKGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCB0b3BrPSgxLCAzLCA1KSldLFxuKVxuXG4jIG1vZGVsIGluZmVyZW5jZVxuZm9yIHByZWRpY3Rpb24gaW4gcnVubmVyLnByZWRpY3RfbG9hZGVyKGxvYWRlcj1sb2FkZXJzW1widmFsaWRcIl0pOlxuICAgIGFzc2VydCBwcmVkaWN0aW9uW1wibG9naXRzXCJdLmRldGFjaCgpLmNwdSgpLm51bXB5KCkuc2hhcGVbLTFdID09IDEwXG5cbiMgbW9kZWwgcG9zdC1wcm9jZXNzaW5nXG5tb2RlbCA9IHJ1bm5lci5tb2RlbC5jcHUoKVxuYmF0Y2ggPSBuZXh0KGl0ZXIobG9hZGVyc1tcInZhbGlkXCJdKSlbMF1cbnV0aWxzLnRyYWNlX21vZGVsKG1vZGVsPW1vZGVsLCBiYXRjaD1iYXRjaClcbnV0aWxzLnF1YW50aXplX21vZGVsKG1vZGVsPW1vZGVsKVxudXRpbHMucHJ1bmVfbW9kZWwobW9kZWw9bW9kZWwsIHBydW5pbmdfZm49XCJsMV91bnN0cnVjdHVyZWRcIiwgYW1vdW50PTAuOClcbnV0aWxzLm9ubnhfZXhwb3J0KG1vZGVsPW1vZGVsLCBiYXRjaD1iYXRjaCwgZmlsZT1cIi4vbG9ncy9tbmlzdC5vbm54XCIsIHZlcmJvc2U9VHJ1ZSlcbmBgYFxuXG4jIyMgU3RlcC1ieS1zdGVwIEd1aWRlXG4xLiBTdGFydCB3aXRoIFtDYXRhbHlzdCDigJQgQSBQeVRvcmNoIEZyYW1ld29yayBmb3IgQWNjZWxlcmF0ZWQgRGVlcCBMZWFybmluZyBSJkRdKGh0dHBzOi8vbWVkaXVtLmNvbS9weXRvcmNoL2NhdGFseXN0LWEtcHl0b3JjaC1mcmFtZXdvcmstZm9yLWFjY2VsZXJhdGVkLWRlZXAtbGVhcm5pbmctci1kLWFkOTYyMWU0Y2E4OD9zb3VyY2U9ZnJpZW5kc19saW5rJnNrPTg4NWI0NDA5YWVjYWI1MDVkYjBhNjNiMDZmMTlkY2VmKSBpbnRyb2R1Y3Rpb24uXG4xLiBUcnkgW25vdGVib29rIHR1dG9yaWFsc10oI21pbmltYWwtZXhhbXBsZXMpIG9yIGNoZWNrIFttaW5pbWFsIGV4YW1wbGVzXSgjbWluaW1hbC1leGFtcGxlcykgZm9yIGZpcnN0IGRlZXAgZGl2ZS5cbjEuIFJlYWQgW2Jsb2cgcG9zdHNdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5jb20vcG9zdC8pIHdpdGggdXNlLWNhc2VzIGFuZCBndWlkZXMuXG4xLiBMZWFybiBtYWNoaW5lIGxlYXJuaW5nIHdpdGggb3VyIFtcIkRlZXAgTGVhcm5pbmcgd2l0aCBDYXRhbHlzdFwiIGNvdXJzZV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmNvbS8jY291cnNlKS5cbjEuIEFuZCBmaW5hbGx5LCBbam9pbiBvdXIgc2xhY2tdKGh0dHBzOi8vam9pbi5zbGFjay5jb20vdC9jYXRhbHlzdC10ZWFtLWNvcmUvc2hhcmVkX2ludml0ZS96dC1kOW1paXJubi16ODZvS0R6Rk1LbE1HNGZnRmRaYWZ3KSBpZiB5b3Ugd2FudCB0byBjaGF0IHdpdGggdGhlIHRlYW0gYW5kIGNvbnRyaWJ1dG9ycy5cblxuXG4jIyBUYWJsZSBvZiBDb250ZW50c1xuLSBbR2V0dGluZyBzdGFydGVkXSgjZ2V0dGluZy1zdGFydGVkKVxuICAtIFtTdGVwLWJ5LXN0ZXAgR3VpZGVdKCNzdGVwLWJ5LXN0ZXAtZ3VpZGUpXG4tIFtUYWJsZSBvZiBDb250ZW50c10oI3RhYmxlLW9mLWNvbnRlbnRzKVxuLSBbT3ZlcnZpZXddKCNvdmVydmlldylcbiAgLSBbSW5zdGFsbGF0aW9uXSgjaW5zdGFsbGF0aW9uKVxuICAtIFtEb2N1bWVudGF0aW9uXSgjZG9jdW1lbnRhdGlvbilcbiAgLSBbTWluaW1hbCBFeGFtcGxlc10oI21pbmltYWwtZXhhbXBsZXMpXG4gIC0gW1Rlc3RzXSgjdGVzdHMpXG4gIC0gW0Jsb2cgUG9zdHNdKCNibG9nLXBvc3RzKVxuICAtIFtUYWxrc10oI3RhbGtzKVxuLSBbQ29tbXVuaXR5XSgjY29tbXVuaXR5KVxuICAtIFtDb250cmlidXRpb24gR3VpZGVdKCNjb250cmlidXRpb24tZ3VpZGUpXG4gIC0gW1VzZXIgRmVlZGJhY2tdKCN1c2VyLWZlZWRiYWNrKVxuICAtIFtBY2tub3dsZWRnbWVudHNdKCNhY2tub3dsZWRnbWVudHMpXG4gIC0gW1RydXN0ZWQgYnldKCN0cnVzdGVkLWJ5KVxuICAtIFtDaXRhdGlvbl0oI2NpdGF0aW9uKVxuXG5cbiMjIE92ZXJ2aWV3XG5DYXRhbHlzdCBoZWxwcyB5b3UgaW1wbGVtZW50IGNvbXBhY3RcbmJ1dCBmdWxsLWZlYXR1cmVkIERlZXAgTGVhcm5pbmcgcGlwZWxpbmVzIHdpdGgganVzdCBhIGZldyBsaW5lcyBvZiBjb2RlLlxuWW91IGdldCBhIHRyYWluaW5nIGxvb3Agd2l0aCBtZXRyaWNzLCBlYXJseS1zdG9wcGluZywgbW9kZWwgY2hlY2twb2ludGluZyxcbmFuZCBvdGhlciBmZWF0dXJlcyB3aXRob3V0IHRoZSBib2lsZXJwbGF0ZS5cblxuXG4jIyMgSW5zdGFsbGF0aW9uXG5cbkdlbmVyaWMgaW5zdGFsbGF0aW9uOlxuYGBgYmFzaFxucGlwIGluc3RhbGwgLVUgY2F0YWx5c3RcbmBgYFxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PlNwZWNpYWxpemVkIHZlcnNpb25zLCBleHRyYSByZXF1aXJlbWVudHMgbWlnaHQgYXBwbHk8L3N1bW1hcnk+XG48cD5cblxuYGBgYmFzaFxucGlwIGluc3RhbGwgY2F0YWx5c3RbbWxdICAgICAgICAgIyBpbnN0YWxscyBNTC1iYXNlZCBDYXRhbHlzdFxucGlwIGluc3RhbGwgY2F0YWx5c3RbY3ZdICAgICAgICAgIyBpbnN0YWxscyBDVi1iYXNlZCBDYXRhbHlzdFxuIyBtYXN0ZXIgdmVyc2lvbiBpbnN0YWxsYXRpb25cbnBpcCBpbnN0YWxsIGdpdCtodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9jYXRhbHlzdEBtYXN0ZXIgLS11cGdyYWRlXG4jIGFsbCBhdmFpbGFibGUgZXh0ZW5zaW9ucyBhcmUgbGlzdGVkIGhlcmU6XG4jIGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L2Jsb2IvbWFzdGVyL3NldHVwLnB5XG5gYGBcbjwvcD5cbjwvZGV0YWlscz5cblxuQ2F0YWx5c3QgaXMgY29tcGF0aWJsZSB3aXRoOiBQeXRob24gMy43Ky4gUHlUb3JjaCAxLjQrLiA8YnIvPlxuVGVzdGVkIG9uIFVidW50dSAxNi4wNC8xOC4wNC8yMC4wNCwgbWFjT1MgMTAuMTUsIFdpbmRvd3MgMTAsIGFuZCBXaW5kb3dzIFN1YnN5c3RlbSBmb3IgTGludXguXG5cbiMjIyBEb2N1bWVudGF0aW9uXG4tIFttYXN0ZXJdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvKVxuLSBbMjIuMDJdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvdjIyLjAyL2luZGV4Lmh0bWwpXG5cbi0gPGRldGFpbHM+XG4gIDxzdW1tYXJ5PjIwMjEgZWRpdGlvbjwvc3VtbWFyeT5cbiAgPHA+XG5cbiAgICAtIFsyMS4xMl0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMTIvaW5kZXguaHRtbClcbiAgICAtIFsyMS4xMV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMTEvaW5kZXguaHRtbClcbiAgICAtIFsyMS4xMF0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMTAvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wOV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDkvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wOF0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDgvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wN10oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDcvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wNl0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDYvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wNV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDUvaW5kZXguaHRtbCkgKFtDYXRhbHlzdCDigJQgQSBQeVRvcmNoIEZyYW1ld29yayBmb3IgQWNjZWxlcmF0ZWQgRGVlcCBMZWFybmluZyBSJkRdKGh0dHBzOi8vbWVkaXVtLmNvbS9weXRvcmNoL2NhdGFseXN0LWEtcHl0b3JjaC1mcmFtZXdvcmstZm9yLWFjY2VsZXJhdGVkLWRlZXAtbGVhcm5pbmctci1kLWFkOTYyMWU0Y2E4OD9zb3VyY2U9ZnJpZW5kc19saW5rJnNrPTg4NWI0NDA5YWVjYWI1MDVkYjBhNjNiMDZmMTlkY2VmKSlcbiAgICAtIFsyMS4wNC8yMS4wNC4xXShodHRwczovL2NhdGFseXN0LXRlYW0uZ2l0aHViLmlvL2NhdGFseXN0L3YyMS4wNC9pbmRleC5odG1sKSwgWzIxLjA0LjJdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvdjIxLjA0LjIvaW5kZXguaHRtbClcbiAgICAtIFsyMS4wM10oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjEuMDMvaW5kZXguaHRtbCksIFsyMS4wMy4xLzIxLjAzLjJdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvdjIxLjAzLjEvaW5kZXguaHRtbClcblxuICA8L3A+XG4gIDwvZGV0YWlscz5cbi0gPGRldGFpbHM+XG4gIDxzdW1tYXJ5PjIwMjAgZWRpdGlvbjwvc3VtbWFyeT5cbiAgPHA+XG5cbiAgICAtIFsyMC4xMl0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMTIvaW5kZXguaHRtbClcbiAgICAtIFsyMC4xMV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMTEvaW5kZXguaHRtbClcbiAgICAtIFsyMC4xMF0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMTAvaW5kZXguaHRtbClcbiAgICAtIFsyMC4wOV0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMDkvaW5kZXguaHRtbClcbiAgICAtIFsyMC4wOC4yXShodHRwczovL2NhdGFseXN0LXRlYW0uZ2l0aHViLmlvL2NhdGFseXN0L3YyMC4wOC4yL2luZGV4Lmh0bWwpXG4gICAgLSBbMjAuMDddKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvdjIwLjA3L2luZGV4Lmh0bWwpIChbZGV2IGJsb2c6IDIwLjA3IHJlbGVhc2VdKGh0dHBzOi8vbWVkaXVtLmNvbS9weXRvcmNoL2NhdGFseXN0LWRldi1ibG9nLTIwLTA3LXJlbGVhc2UtZmI0ODljZDIzZTE0P3NvdXJjZT1mcmllbmRzX2xpbmsmc2s9N2FiOTIxNjk2NThmZTlhOWUxYzQ0MDY4ZjI4Y2MzNmMpKVxuICAgIC0gWzIwLjA2XShodHRwczovL2NhdGFseXN0LXRlYW0uZ2l0aHViLmlvL2NhdGFseXN0L3YyMC4wNi9pbmRleC5odG1sKVxuICAgIC0gWzIwLjA1XShodHRwczovL2NhdGFseXN0LXRlYW0uZ2l0aHViLmlvL2NhdGFseXN0L3YyMC4wNS9pbmRleC5odG1sKSwgWzIwLjA1LjFdKGh0dHBzOi8vY2F0YWx5c3QtdGVhbS5naXRodWIuaW8vY2F0YWx5c3QvdjIwLjA1LjEvaW5kZXguaHRtbClcbiAgICAtIFsyMC4wNF0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMDQvaW5kZXguaHRtbCksIFsyMC4wNC4xXShodHRwczovL2NhdGFseXN0LXRlYW0uZ2l0aHViLmlvL2NhdGFseXN0L3YyMC4wNC4xL2luZGV4Lmh0bWwpLCBbMjAuMDQuMl0oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdC92MjAuMDQuMi9pbmRleC5odG1sKVxuXG4gIDwvcD5cbiAgPC9kZXRhaWxzPlxuXG5cbiMjIyBNaW5pbWFsIEV4YW1wbGVzXG5cbi0gWyFbT3BlbiBJbiBDb2xhYl0oaHR0cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2Fzc2V0cy9jb2xhYi1iYWRnZS5zdmcpXShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZ2l0aHViL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvbm90ZWJvb2tzL2N1c3RvbWl6aW5nX3doYXRfaGFwcGVuc19pbl90cmFpbi5pcHluYikgSW50cm9kdWN0aW9uIHR1dG9yaWFsIFwiW0N1c3RvbWl6aW5nIHdoYXQgaGFwcGVucyBpbiBgdHJhaW5gXSguL2V4YW1wbGVzL25vdGVib29rcy9jdXN0b21pemluZ193aGF0X2hhcHBlbnNfaW5fdHJhaW4uaXB5bmIpXCJcbi0gWyFbT3BlbiBJbiBDb2xhYl0oaHR0cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2Fzc2V0cy9jb2xhYi1iYWRnZS5zdmcpXShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZ2l0aHViL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvbm90ZWJvb2tzL2N1c3RvbWl6YXRpb25fdHV0b3JpYWwuaXB5bmIpIERlbW8gd2l0aCBbY3VzdG9taXphdGlvbiBleGFtcGxlc10oLi9leGFtcGxlcy9ub3RlYm9va3MvY3VzdG9taXphdGlvbl90dXRvcmlhbC5pcHluYilcbi0gWyFbT3BlbiBJbiBDb2xhYl0oaHR0cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2Fzc2V0cy9jb2xhYi1iYWRnZS5zdmcpXShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZ2l0aHViL2NhdGFseXN0LXRlYW0vY2F0YWx5c3QvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvbm90ZWJvb2tzL3JlaW5mb3JjZW1lbnRfbGVhcm5pbmcuaXB5bmIpIFtSZWluZm9yY2VtZW50IExlYXJuaW5nIHdpdGggQ2F0YWx5c3RdKC4vZXhhbXBsZXMvbm90ZWJvb2tzL3JlaW5mb3JjZW1lbnRfbGVhcm5pbmcuaXB5bmIpXG4tIFtBbmQgbW9yZV0oLi9leGFtcGxlcy8pXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+Q3VzdG9tUnVubmVyIOKAkyBQeVRvcmNoIGZvci1sb29wIGRlY29tcG9zaXRpb248L3N1bW1hcnk+XG48cD5cblxuYGBgcHl0aG9uXG5pbXBvcnQgb3NcbmZyb20gdG9yY2ggaW1wb3J0IG5uLCBvcHRpbVxuZnJvbSB0b3JjaC5ubiBpbXBvcnQgZnVuY3Rpb25hbCBhcyBGXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsLCBtZXRyaWNzXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIuZGF0YXNldHMgaW1wb3J0IE1OSVNUXG5cbm1vZGVsID0gbm4uU2VxdWVudGlhbChubi5GbGF0dGVuKCksIG5uLkxpbmVhcigyOCAqIDI4LCAxMCkpXG5vcHRpbWl6ZXIgPSBvcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSwgbHI9MC4wMilcblxudHJhaW5fZGF0YSA9IE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1UcnVlKVxudmFsaWRfZGF0YSA9IE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1GYWxzZSlcbmxvYWRlcnMgPSB7XG4gICAgXCJ0cmFpblwiOiBEYXRhTG9hZGVyKHRyYWluX2RhdGEsIGJhdGNoX3NpemU9MzIpLFxuICAgIFwidmFsaWRcIjogRGF0YUxvYWRlcih2YWxpZF9kYXRhLCBiYXRjaF9zaXplPTMyKSxcbn1cblxuY2xhc3MgQ3VzdG9tUnVubmVyKGRsLlJ1bm5lcik6XG4gICAgZGVmIHByZWRpY3RfYmF0Y2goc2VsZiwgYmF0Y2gpOlxuICAgICAgICAjIG1vZGVsIGluZmVyZW5jZSBzdGVwXG4gICAgICAgIHJldHVybiBzZWxmLm1vZGVsKGJhdGNoWzBdLnRvKHNlbGYuZW5naW5lLmRldmljZSkpXG5cbiAgICBkZWYgb25fbG9hZGVyX3N0YXJ0KHNlbGYsIHJ1bm5lcik6XG4gICAgICAgIHN1cGVyKCkub25fbG9hZGVyX3N0YXJ0KHJ1bm5lcilcbiAgICAgICAgc2VsZi5tZXRlcnMgPSB7XG4gICAgICAgICAgICBrZXk6IG1ldHJpY3MuQWRkaXRpdmVNZXRyaWMoY29tcHV0ZV9vbl9jYWxsPUZhbHNlKVxuICAgICAgICAgICAgZm9yIGtleSBpbiBbXCJsb3NzXCIsIFwiYWNjdXJhY3kwMVwiLCBcImFjY3VyYWN5MDNcIl1cbiAgICAgICAgfVxuXG4gICAgZGVmIGhhbmRsZV9iYXRjaChzZWxmLCBiYXRjaCk6XG4gICAgICAgICMgbW9kZWwgdHJhaW4vdmFsaWQgc3RlcFxuICAgICAgICAjIHVucGFjayB0aGUgYmF0Y2hcbiAgICAgICAgeCwgeSA9IGJhdGNoXG4gICAgICAgICMgcnVuIG1vZGVsIGZvcndhcmQgcGFzc1xuICAgICAgICBsb2dpdHMgPSBzZWxmLm1vZGVsKHgpXG4gICAgICAgICMgY29tcHV0ZSB0aGUgbG9zc1xuICAgICAgICBsb3NzID0gRi5jcm9zc19lbnRyb3B5KGxvZ2l0cywgeSlcbiAgICAgICAgIyBjb21wdXRlIHRoZSBtZXRyaWNzXG4gICAgICAgIGFjY3VyYWN5MDEsIGFjY3VyYWN5MDMgPSBtZXRyaWNzLmFjY3VyYWN5KGxvZ2l0cywgeSwgdG9waz0oMSwgMykpXG4gICAgICAgICMgbG9nIG1ldHJpY3NcbiAgICAgICAgc2VsZi5iYXRjaF9tZXRyaWNzLnVwZGF0ZShcbiAgICAgICAgICAgIHtcImxvc3NcIjogbG9zcywgXCJhY2N1cmFjeTAxXCI6IGFjY3VyYWN5MDEsIFwiYWNjdXJhY3kwM1wiOiBhY2N1cmFjeTAzfVxuICAgICAgICApXG4gICAgICAgIGZvciBrZXkgaW4gW1wibG9zc1wiLCBcImFjY3VyYWN5MDFcIiwgXCJhY2N1cmFjeTAzXCJdOlxuICAgICAgICAgICAgc2VsZi5tZXRlcnNba2V5XS51cGRhdGUoc2VsZi5iYXRjaF9tZXRyaWNzW2tleV0uaXRlbSgpLCBzZWxmLmJhdGNoX3NpemUpXG4gICAgICAgICMgcnVuIG1vZGVsIGJhY2t3YXJkIHBhc3NcbiAgICAgICAgaWYgc2VsZi5pc190cmFpbl9sb2FkZXI6XG4gICAgICAgICAgICBzZWxmLmVuZ2luZS5iYWNrd2FyZChsb3NzKVxuICAgICAgICAgICAgc2VsZi5vcHRpbWl6ZXIuc3RlcCgpXG4gICAgICAgICAgICBzZWxmLm9wdGltaXplci56ZXJvX2dyYWQoKVxuXG4gICAgZGVmIG9uX2xvYWRlcl9lbmQoc2VsZiwgcnVubmVyKTpcbiAgICAgICAgZm9yIGtleSBpbiBbXCJsb3NzXCIsIFwiYWNjdXJhY3kwMVwiLCBcImFjY3VyYWN5MDNcIl06XG4gICAgICAgICAgICBzZWxmLmxvYWRlcl9tZXRyaWNzW2tleV0gPSBzZWxmLm1ldGVyc1trZXldLmNvbXB1dGUoKVswXVxuICAgICAgICBzdXBlcigpLm9uX2xvYWRlcl9lbmQocnVubmVyKVxuXG5ydW5uZXIgPSBDdXN0b21SdW5uZXIoKVxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyLnRyYWluKFxuICAgIG1vZGVsPW1vZGVsLFxuICAgIG9wdGltaXplcj1vcHRpbWl6ZXIsXG4gICAgbG9hZGVycz1sb2FkZXJzLFxuICAgIGxvZ2Rpcj1cIi4vbG9nc1wiLFxuICAgIG51bV9lcG9jaHM9NSxcbiAgICB2ZXJib3NlPVRydWUsXG4gICAgdmFsaWRfbG9hZGVyPVwidmFsaWRcIixcbiAgICB2YWxpZF9tZXRyaWM9XCJsb3NzXCIsXG4gICAgbWluaW1pemVfdmFsaWRfbWV0cmljPVRydWUsXG4pXG4jIG1vZGVsIGluZmVyZW5jZVxuZm9yIGxvZ2l0cyBpbiBydW5uZXIucHJlZGljdF9sb2FkZXIobG9hZGVyPWxvYWRlcnNbXCJ2YWxpZFwiXSk6XG4gICAgYXNzZXJ0IGxvZ2l0cy5kZXRhY2goKS5jcHUoKS5udW1weSgpLnNoYXBlWy0xXSA9PSAxMFxuYGBgXG48L3A+XG48L2RldGFpbHM+XG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+TUwgLSBsaW5lYXIgcmVncmVzc2lvbjwvc3VtbWFyeT5cbjxwPlxuXG5gYGBweXRob25cbmltcG9ydCB0b3JjaFxuZnJvbSB0b3JjaC51dGlscy5kYXRhIGltcG9ydCBEYXRhTG9hZGVyLCBUZW5zb3JEYXRhc2V0XG5mcm9tIGNhdGFseXN0IGltcG9ydCBkbFxuXG4jIGRhdGFcbm51bV9zYW1wbGVzLCBudW1fZmVhdHVyZXMgPSBpbnQoMWU0KSwgaW50KDFlMSlcblgsIHkgPSB0b3JjaC5yYW5kKG51bV9zYW1wbGVzLCBudW1fZmVhdHVyZXMpLCB0b3JjaC5yYW5kKG51bV9zYW1wbGVzKVxuZGF0YXNldCA9IFRlbnNvckRhdGFzZXQoWCwgeSlcbmxvYWRlciA9IERhdGFMb2FkZXIoZGF0YXNldCwgYmF0Y2hfc2l6ZT0zMiwgbnVtX3dvcmtlcnM9MSlcbmxvYWRlcnMgPSB7XCJ0cmFpblwiOiBsb2FkZXIsIFwidmFsaWRcIjogbG9hZGVyfVxuXG4jIG1vZGVsLCBjcml0ZXJpb24sIG9wdGltaXplciwgc2NoZWR1bGVyXG5tb2RlbCA9IHRvcmNoLm5uLkxpbmVhcihudW1fZmVhdHVyZXMsIDEpXG5jcml0ZXJpb24gPSB0b3JjaC5ubi5NU0VMb3NzKClcbm9wdGltaXplciA9IHRvcmNoLm9wdGltLkFkYW0obW9kZWwucGFyYW1ldGVycygpKVxuc2NoZWR1bGVyID0gdG9yY2gub3B0aW0ubHJfc2NoZWR1bGVyLk11bHRpU3RlcExSKG9wdGltaXplciwgWzMsIDZdKVxuXG4jIG1vZGVsIHRyYWluaW5nXG5ydW5uZXIgPSBkbC5TdXBlcnZpc2VkUnVubmVyKClcbnJ1bm5lci50cmFpbihcbiAgICBtb2RlbD1tb2RlbCxcbiAgICBjcml0ZXJpb249Y3JpdGVyaW9uLFxuICAgIG9wdGltaXplcj1vcHRpbWl6ZXIsXG4gICAgc2NoZWR1bGVyPXNjaGVkdWxlcixcbiAgICBsb2FkZXJzPWxvYWRlcnMsXG4gICAgbG9nZGlyPVwiLi9sb2dkaXJcIixcbiAgICB2YWxpZF9sb2FkZXI9XCJ2YWxpZFwiLFxuICAgIHZhbGlkX21ldHJpYz1cImxvc3NcIixcbiAgICBtaW5pbWl6ZV92YWxpZF9tZXRyaWM9VHJ1ZSxcbiAgICBudW1fZXBvY2hzPTgsXG4gICAgdmVyYm9zZT1UcnVlLFxuKVxuYGBgXG48L3A+XG48L2RldGFpbHM+XG5cblxuPGRldGFpbHM+XG48c3VtbWFyeT5NTCAtIG11bHRpY2xhc3MgY2xhc3NpZmljYXRpb248L3N1bW1hcnk+XG48cD5cblxuYGBgcHl0aG9uXG5pbXBvcnQgdG9yY2hcbmZyb20gdG9yY2gudXRpbHMuZGF0YSBpbXBvcnQgRGF0YUxvYWRlciwgVGVuc29yRGF0YXNldFxuZnJvbSBjYXRhbHlzdCBpbXBvcnQgZGxcblxuIyBzYW1wbGUgZGF0YVxubnVtX3NhbXBsZXMsIG51bV9mZWF0dXJlcywgbnVtX2NsYXNzZXMgPSBpbnQoMWU0KSwgaW50KDFlMSksIDRcblggPSB0b3JjaC5yYW5kKG51bV9zYW1wbGVzLCBudW1fZmVhdHVyZXMpXG55ID0gKHRvcmNoLnJhbmQobnVtX3NhbXBsZXMsKSAqIG51bV9jbGFzc2VzKS50byh0b3JjaC5pbnQ2NClcblxuIyBweXRvcmNoIGxvYWRlcnNcbmRhdGFzZXQgPSBUZW5zb3JEYXRhc2V0KFgsIHkpXG5sb2FkZXIgPSBEYXRhTG9hZGVyKGRhdGFzZXQsIGJhdGNoX3NpemU9MzIsIG51bV93b3JrZXJzPTEpXG5sb2FkZXJzID0ge1widHJhaW5cIjogbG9hZGVyLCBcInZhbGlkXCI6IGxvYWRlcn1cblxuIyBtb2RlbCwgY3JpdGVyaW9uLCBvcHRpbWl6ZXIsIHNjaGVkdWxlclxubW9kZWwgPSB0b3JjaC5ubi5MaW5lYXIobnVtX2ZlYXR1cmVzLCBudW1fY2xhc3NlcylcbmNyaXRlcmlvbiA9IHRvcmNoLm5uLkNyb3NzRW50cm9weUxvc3MoKVxub3B0aW1pemVyID0gdG9yY2gub3B0aW0uQWRhbShtb2RlbC5wYXJhbWV0ZXJzKCkpXG5zY2hlZHVsZXIgPSB0b3JjaC5vcHRpbS5scl9zY2hlZHVsZXIuTXVsdGlTdGVwTFIob3B0aW1pemVyLCBbMl0pXG5cbiMgbW9kZWwgdHJhaW5pbmdcbnJ1bm5lciA9IGRsLlN1cGVydmlzZWRSdW5uZXIoXG4gICAgaW5wdXRfa2V5PVwiZmVhdHVyZXNcIiwgb3V0cHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBsb3NzX2tleT1cImxvc3NcIlxuKVxucnVubmVyLnRyYWluKFxuICAgIG1vZGVsPW1vZGVsLFxuICAgIGNyaXRlcmlvbj1jcml0ZXJpb24sXG4gICAgb3B0aW1pemVyPW9wdGltaXplcixcbiAgICBzY2hlZHVsZXI9c2NoZWR1bGVyLFxuICAgIGxvYWRlcnM9bG9hZGVycyxcbiAgICBsb2dkaXI9XCIuL2xvZ2RpclwiLFxuICAgIG51bV9lcG9jaHM9MyxcbiAgICB2YWxpZF9sb2FkZXI9XCJ2YWxpZFwiLFxuICAgIHZhbGlkX21ldHJpYz1cImFjY3VyYWN5MDNcIixcbiAgICBtaW5pbWl6ZV92YWxpZF9tZXRyaWM9RmFsc2UsXG4gICAgdmVyYm9zZT1UcnVlLFxuICAgIGNhbGxiYWNrcz1bXG4gICAgICAgIGRsLkFjY3VyYWN5Q2FsbGJhY2soaW5wdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIG51bV9jbGFzc2VzPW51bV9jbGFzc2VzKSxcbiAgICAgICAgIyB1bmNvbW1lbnQgZm9yIGV4dHJhIG1ldHJpY3M6XG4gICAgICAgICMgZGwuUHJlY2lzaW9uUmVjYWxsRjFTdXBwb3J0Q2FsbGJhY2soXG4gICAgICAgICMgICAgIGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBudW1fY2xhc3Nlcz1udW1fY2xhc3Nlc1xuICAgICAgICAjICksXG4gICAgICAgICMgZGwuQVVDQ2FsbGJhY2soaW5wdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIpLFxuICAgICAgICAjIGNhdGFseXN0W21sXSByZXF1aXJlZCBgYHBpcCBpbnN0YWxsIGNhdGFseXN0W21sXWBgXG4gICAgICAgICMgZGwuQ29uZnVzaW9uTWF0cml4Q2FsbGJhY2soXG4gICAgICAgICMgICAgIGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBudW1fY2xhc3Nlcz1udW1fY2xhc3Nlc1xuICAgICAgICAjICksXG4gICAgXSxcbilcbmBgYFxuPC9wPlxuPC9kZXRhaWxzPlxuXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+TUwgLSBtdWx0aWxhYmVsIGNsYXNzaWZpY2F0aW9uPC9zdW1tYXJ5PlxuPHA+XG5cbmBgYHB5dGhvblxuaW1wb3J0IHRvcmNoXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXIsIFRlbnNvckRhdGFzZXRcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsXG5cbiMgc2FtcGxlIGRhdGFcbm51bV9zYW1wbGVzLCBudW1fZmVhdHVyZXMsIG51bV9jbGFzc2VzID0gaW50KDFlNCksIGludCgxZTEpLCA0XG5YID0gdG9yY2gucmFuZChudW1fc2FtcGxlcywgbnVtX2ZlYXR1cmVzKVxueSA9ICh0b3JjaC5yYW5kKG51bV9zYW1wbGVzLCBudW1fY2xhc3NlcykgPiAwLjUpLnRvKHRvcmNoLmZsb2F0MzIpXG5cbiMgcHl0b3JjaCBsb2FkZXJzXG5kYXRhc2V0ID0gVGVuc29yRGF0YXNldChYLCB5KVxubG9hZGVyID0gRGF0YUxvYWRlcihkYXRhc2V0LCBiYXRjaF9zaXplPTMyLCBudW1fd29ya2Vycz0xKVxubG9hZGVycyA9IHtcInRyYWluXCI6IGxvYWRlciwgXCJ2YWxpZFwiOiBsb2FkZXJ9XG5cbiMgbW9kZWwsIGNyaXRlcmlvbiwgb3B0aW1pemVyLCBzY2hlZHVsZXJcbm1vZGVsID0gdG9yY2gubm4uTGluZWFyKG51bV9mZWF0dXJlcywgbnVtX2NsYXNzZXMpXG5jcml0ZXJpb24gPSB0b3JjaC5ubi5CQ0VXaXRoTG9naXRzTG9zcygpXG5vcHRpbWl6ZXIgPSB0b3JjaC5vcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSlcbnNjaGVkdWxlciA9IHRvcmNoLm9wdGltLmxyX3NjaGVkdWxlci5NdWx0aVN0ZXBMUihvcHRpbWl6ZXIsIFsyXSlcblxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyID0gZGwuU3VwZXJ2aXNlZFJ1bm5lcihcbiAgICBpbnB1dF9rZXk9XCJmZWF0dXJlc1wiLCBvdXRwdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIGxvc3Nfa2V5PVwibG9zc1wiXG4pXG5ydW5uZXIudHJhaW4oXG4gICAgbW9kZWw9bW9kZWwsXG4gICAgY3JpdGVyaW9uPWNyaXRlcmlvbixcbiAgICBvcHRpbWl6ZXI9b3B0aW1pemVyLFxuICAgIHNjaGVkdWxlcj1zY2hlZHVsZXIsXG4gICAgbG9hZGVycz1sb2FkZXJzLFxuICAgIGxvZ2Rpcj1cIi4vbG9nZGlyXCIsXG4gICAgbnVtX2Vwb2Nocz0zLFxuICAgIHZhbGlkX2xvYWRlcj1cInZhbGlkXCIsXG4gICAgdmFsaWRfbWV0cmljPVwiYWNjdXJhY3kwMVwiLFxuICAgIG1pbmltaXplX3ZhbGlkX21ldHJpYz1GYWxzZSxcbiAgICB2ZXJib3NlPVRydWUsXG4gICAgY2FsbGJhY2tzPVtcbiAgICAgICAgZGwuQmF0Y2hUcmFuc2Zvcm1DYWxsYmFjayhcbiAgICAgICAgICAgIHRyYW5zZm9ybT10b3JjaC5zaWdtb2lkLFxuICAgICAgICAgICAgc2NvcGU9XCJvbl9iYXRjaF9lbmRcIixcbiAgICAgICAgICAgIGlucHV0X2tleT1cImxvZ2l0c1wiLFxuICAgICAgICAgICAgb3V0cHV0X2tleT1cInNjb3Jlc1wiXG4gICAgICAgICksXG4gICAgICAgIGRsLkFVQ0NhbGxiYWNrKGlucHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiKSxcbiAgICAgICAgIyB1bmNvbW1lbnQgZm9yIGV4dHJhIG1ldHJpY3M6XG4gICAgICAgICMgZGwuTXVsdGlsYWJlbEFjY3VyYWN5Q2FsbGJhY2soaW5wdXRfa2V5PVwic2NvcmVzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIHRocmVzaG9sZD0wLjUpLFxuICAgICAgICAjIGRsLk11bHRpbGFiZWxQcmVjaXNpb25SZWNhbGxGMVN1cHBvcnRDYWxsYmFjayhcbiAgICAgICAgIyAgICAgaW5wdXRfa2V5PVwic2NvcmVzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIHRocmVzaG9sZD0wLjVcbiAgICAgICAgIyApLFxuICAgIF1cbilcbmBgYFxuPC9wPlxuPC9kZXRhaWxzPlxuXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+TUwgLSBtdWx0aWhlYWQgY2xhc3NpZmljYXRpb248L3N1bW1hcnk+XG48cD5cblxuYGBgcHl0aG9uXG5pbXBvcnQgdG9yY2hcbmZyb20gdG9yY2ggaW1wb3J0IG5uLCBvcHRpbVxuZnJvbSB0b3JjaC51dGlscy5kYXRhIGltcG9ydCBEYXRhTG9hZGVyLCBUZW5zb3JEYXRhc2V0XG5mcm9tIGNhdGFseXN0IGltcG9ydCBkbFxuXG4jIHNhbXBsZSBkYXRhXG5udW1fc2FtcGxlcywgbnVtX2ZlYXR1cmVzLCBudW1fY2xhc3NlczEsIG51bV9jbGFzc2VzMiA9IGludCgxZTQpLCBpbnQoMWUxKSwgNCwgMTBcblggPSB0b3JjaC5yYW5kKG51bV9zYW1wbGVzLCBudW1fZmVhdHVyZXMpXG55MSA9ICh0b3JjaC5yYW5kKG51bV9zYW1wbGVzLCkgKiBudW1fY2xhc3NlczEpLnRvKHRvcmNoLmludDY0KVxueTIgPSAodG9yY2gucmFuZChudW1fc2FtcGxlcywpICogbnVtX2NsYXNzZXMyKS50byh0b3JjaC5pbnQ2NClcblxuIyBweXRvcmNoIGxvYWRlcnNcbmRhdGFzZXQgPSBUZW5zb3JEYXRhc2V0KFgsIHkxLCB5MilcbmxvYWRlciA9IERhdGFMb2FkZXIoZGF0YXNldCwgYmF0Y2hfc2l6ZT0zMiwgbnVtX3dvcmtlcnM9MSlcbmxvYWRlcnMgPSB7XCJ0cmFpblwiOiBsb2FkZXIsIFwidmFsaWRcIjogbG9hZGVyfVxuXG5jbGFzcyBDdXN0b21Nb2R1bGUobm4uTW9kdWxlKTpcbiAgICBkZWYgX19pbml0X18oc2VsZiwgaW5fZmVhdHVyZXM6IGludCwgb3V0X2ZlYXR1cmVzMTogaW50LCBvdXRfZmVhdHVyZXMyOiBpbnQpOlxuICAgICAgICBzdXBlcigpLl9faW5pdF9fKClcbiAgICAgICAgc2VsZi5zaGFyZWQgPSBubi5MaW5lYXIoaW5fZmVhdHVyZXMsIDEyOClcbiAgICAgICAgc2VsZi5oZWFkMSA9IG5uLkxpbmVhcigxMjgsIG91dF9mZWF0dXJlczEpXG4gICAgICAgIHNlbGYuaGVhZDIgPSBubi5MaW5lYXIoMTI4LCBvdXRfZmVhdHVyZXMyKVxuXG4gICAgZGVmIGZvcndhcmQoc2VsZiwgeCk6XG4gICAgICAgIHggPSBzZWxmLnNoYXJlZCh4KVxuICAgICAgICB5MSA9IHNlbGYuaGVhZDEoeClcbiAgICAgICAgeTIgPSBzZWxmLmhlYWQyKHgpXG4gICAgICAgIHJldHVybiB5MSwgeTJcblxuIyBtb2RlbCwgY3JpdGVyaW9uLCBvcHRpbWl6ZXIsIHNjaGVkdWxlclxubW9kZWwgPSBDdXN0b21Nb2R1bGUobnVtX2ZlYXR1cmVzLCBudW1fY2xhc3NlczEsIG51bV9jbGFzc2VzMilcbmNyaXRlcmlvbiA9IG5uLkNyb3NzRW50cm9weUxvc3MoKVxub3B0aW1pemVyID0gb3B0aW0uQWRhbShtb2RlbC5wYXJhbWV0ZXJzKCkpXG5zY2hlZHVsZXIgPSBvcHRpbS5scl9zY2hlZHVsZXIuTXVsdGlTdGVwTFIob3B0aW1pemVyLCBbMl0pXG5cbmNsYXNzIEN1c3RvbVJ1bm5lcihkbC5SdW5uZXIpOlxuICAgIGRlZiBoYW5kbGVfYmF0Y2goc2VsZiwgYmF0Y2gpOlxuICAgICAgICB4LCB5MSwgeTIgPSBiYXRjaFxuICAgICAgICB5MV9oYXQsIHkyX2hhdCA9IHNlbGYubW9kZWwoeClcbiAgICAgICAgc2VsZi5iYXRjaCA9IHtcbiAgICAgICAgICAgIFwiZmVhdHVyZXNcIjogeCxcbiAgICAgICAgICAgIFwibG9naXRzMVwiOiB5MV9oYXQsXG4gICAgICAgICAgICBcImxvZ2l0czJcIjogeTJfaGF0LFxuICAgICAgICAgICAgXCJ0YXJnZXRzMVwiOiB5MSxcbiAgICAgICAgICAgIFwidGFyZ2V0czJcIjogeTIsXG4gICAgICAgIH1cblxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyID0gQ3VzdG9tUnVubmVyKClcbnJ1bm5lci50cmFpbihcbiAgICBtb2RlbD1tb2RlbCxcbiAgICBjcml0ZXJpb249Y3JpdGVyaW9uLFxuICAgIG9wdGltaXplcj1vcHRpbWl6ZXIsXG4gICAgc2NoZWR1bGVyPXNjaGVkdWxlcixcbiAgICBsb2FkZXJzPWxvYWRlcnMsXG4gICAgbnVtX2Vwb2Nocz0zLFxuICAgIHZlcmJvc2U9VHJ1ZSxcbiAgICBjYWxsYmFja3M9W1xuICAgICAgICBkbC5Dcml0ZXJpb25DYWxsYmFjayhtZXRyaWNfa2V5PVwibG9zczFcIiwgaW5wdXRfa2V5PVwibG9naXRzMVwiLCB0YXJnZXRfa2V5PVwidGFyZ2V0czFcIiksXG4gICAgICAgIGRsLkNyaXRlcmlvbkNhbGxiYWNrKG1ldHJpY19rZXk9XCJsb3NzMlwiLCBpbnB1dF9rZXk9XCJsb2dpdHMyXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzMlwiKSxcbiAgICAgICAgZGwuTWV0cmljQWdncmVnYXRpb25DYWxsYmFjayhtZXRyaWNfa2V5PVwibG9zc1wiLCBtZXRyaWNzPVtcImxvc3MxXCIsIFwibG9zczJcIl0sIG1vZGU9XCJtZWFuXCIpLFxuICAgICAgICBkbC5CYWNrd2FyZENhbGxiYWNrKG1ldHJpY19rZXk9XCJsb3NzXCIpLFxuICAgICAgICBkbC5PcHRpbWl6ZXJDYWxsYmFjayhtZXRyaWNfa2V5PVwibG9zc1wiKSxcbiAgICAgICAgZGwuU2NoZWR1bGVyQ2FsbGJhY2soKSxcbiAgICAgICAgZGwuQWNjdXJhY3lDYWxsYmFjayhcbiAgICAgICAgICAgIGlucHV0X2tleT1cImxvZ2l0czFcIiwgdGFyZ2V0X2tleT1cInRhcmdldHMxXCIsIG51bV9jbGFzc2VzPW51bV9jbGFzc2VzMSwgcHJlZml4PVwib25lX1wiXG4gICAgICAgICksXG4gICAgICAgIGRsLkFjY3VyYWN5Q2FsbGJhY2soXG4gICAgICAgICAgICBpbnB1dF9rZXk9XCJsb2dpdHMyXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzMlwiLCBudW1fY2xhc3Nlcz1udW1fY2xhc3NlczIsIHByZWZpeD1cInR3b19cIlxuICAgICAgICApLFxuICAgICAgICAjIGNhdGFseXN0W21sXSByZXF1aXJlZCBgYHBpcCBpbnN0YWxsIGNhdGFseXN0W21sXWBgXG4gICAgICAgICMgZGwuQ29uZnVzaW9uTWF0cml4Q2FsbGJhY2soXG4gICAgICAgICMgICAgIGlucHV0X2tleT1cImxvZ2l0czFcIiwgdGFyZ2V0X2tleT1cInRhcmdldHMxXCIsIG51bV9jbGFzc2VzPW51bV9jbGFzc2VzMSwgcHJlZml4PVwib25lX2NtXCJcbiAgICAgICAgIyApLFxuICAgICAgICAjIGRsLkNvbmZ1c2lvbk1hdHJpeENhbGxiYWNrKFxuICAgICAgICAjICAgICBpbnB1dF9rZXk9XCJsb2dpdHMyXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzMlwiLCBudW1fY2xhc3Nlcz1udW1fY2xhc3NlczIsIHByZWZpeD1cInR3b19jbVwiXG4gICAgICAgICMgKSxcbiAgICAgICAgZGwuQ2hlY2twb2ludENhbGxiYWNrKFxuICAgICAgICAgICAgbG9nZGlyPVwiLi9sb2dzL29uZVwiLFxuICAgICAgICAgICAgbG9hZGVyX2tleT1cInZhbGlkXCIsIG1ldHJpY19rZXk9XCJvbmVfYWNjdXJhY3kwMVwiLCBtaW5pbWl6ZT1GYWxzZSwgdG9waz0xXG4gICAgICAgICksXG4gICAgICAgIGRsLkNoZWNrcG9pbnRDYWxsYmFjayhcbiAgICAgICAgICAgIGxvZ2Rpcj1cIi4vbG9ncy90d29cIixcbiAgICAgICAgICAgIGxvYWRlcl9rZXk9XCJ2YWxpZFwiLCBtZXRyaWNfa2V5PVwidHdvX2FjY3VyYWN5MDNcIiwgbWluaW1pemU9RmFsc2UsIHRvcGs9M1xuICAgICAgICApLFxuICAgIF0sXG4gICAgbG9nZ2Vycz17XCJjb25zb2xlXCI6IGRsLkNvbnNvbGVMb2dnZXIoKSwgXCJ0YlwiOiBkbC5UZW5zb3Jib2FyZExvZ2dlcihcIi4vbG9ncy90YlwiKX0sXG4pXG5gYGBcbjwvcD5cbjwvZGV0YWlscz5cblxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5Pk1MIOKAkyBSZWNTeXM8L3N1bW1hcnk+XG48cD5cblxuYGBgcHl0aG9uXG5pbXBvcnQgdG9yY2hcbmZyb20gdG9yY2gudXRpbHMuZGF0YSBpbXBvcnQgRGF0YUxvYWRlciwgVGVuc29yRGF0YXNldFxuZnJvbSBjYXRhbHlzdCBpbXBvcnQgZGxcblxuIyBzYW1wbGUgZGF0YVxubnVtX3VzZXJzLCBudW1fZmVhdHVyZXMsIG51bV9pdGVtcyA9IGludCgxZTQpLCBpbnQoMWUxKSwgMTBcblggPSB0b3JjaC5yYW5kKG51bV91c2VycywgbnVtX2ZlYXR1cmVzKVxueSA9ICh0b3JjaC5yYW5kKG51bV91c2VycywgbnVtX2l0ZW1zKSA+IDAuNSkudG8odG9yY2guZmxvYXQzMilcblxuIyBweXRvcmNoIGxvYWRlcnNcbmRhdGFzZXQgPSBUZW5zb3JEYXRhc2V0KFgsIHkpXG5sb2FkZXIgPSBEYXRhTG9hZGVyKGRhdGFzZXQsIGJhdGNoX3NpemU9MzIsIG51bV93b3JrZXJzPTEpXG5sb2FkZXJzID0ge1widHJhaW5cIjogbG9hZGVyLCBcInZhbGlkXCI6IGxvYWRlcn1cblxuIyBtb2RlbCwgY3JpdGVyaW9uLCBvcHRpbWl6ZXIsIHNjaGVkdWxlclxubW9kZWwgPSB0b3JjaC5ubi5MaW5lYXIobnVtX2ZlYXR1cmVzLCBudW1faXRlbXMpXG5jcml0ZXJpb24gPSB0b3JjaC5ubi5CQ0VXaXRoTG9naXRzTG9zcygpXG5vcHRpbWl6ZXIgPSB0b3JjaC5vcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSlcbnNjaGVkdWxlciA9IHRvcmNoLm9wdGltLmxyX3NjaGVkdWxlci5NdWx0aVN0ZXBMUihvcHRpbWl6ZXIsIFsyXSlcblxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyID0gZGwuU3VwZXJ2aXNlZFJ1bm5lcihcbiAgICBpbnB1dF9rZXk9XCJmZWF0dXJlc1wiLCBvdXRwdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIGxvc3Nfa2V5PVwibG9zc1wiXG4pXG5ydW5uZXIudHJhaW4oXG4gICAgbW9kZWw9bW9kZWwsXG4gICAgY3JpdGVyaW9uPWNyaXRlcmlvbixcbiAgICBvcHRpbWl6ZXI9b3B0aW1pemVyLFxuICAgIHNjaGVkdWxlcj1zY2hlZHVsZXIsXG4gICAgbG9hZGVycz1sb2FkZXJzLFxuICAgIG51bV9lcG9jaHM9MyxcbiAgICB2ZXJib3NlPVRydWUsXG4gICAgY2FsbGJhY2tzPVtcbiAgICAgICAgZGwuQmF0Y2hUcmFuc2Zvcm1DYWxsYmFjayhcbiAgICAgICAgICAgIHRyYW5zZm9ybT10b3JjaC5zaWdtb2lkLFxuICAgICAgICAgICAgc2NvcGU9XCJvbl9iYXRjaF9lbmRcIixcbiAgICAgICAgICAgIGlucHV0X2tleT1cImxvZ2l0c1wiLFxuICAgICAgICAgICAgb3V0cHV0X2tleT1cInNjb3Jlc1wiXG4gICAgICAgICksXG4gICAgICAgIGRsLkNyaXRlcmlvbkNhbGxiYWNrKGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBtZXRyaWNfa2V5PVwibG9zc1wiKSxcbiAgICAgICAgIyB1bmNvbW1lbnQgZm9yIGV4dHJhIG1ldHJpY3M6XG4gICAgICAgICMgZGwuQVVDQ2FsbGJhY2soaW5wdXRfa2V5PVwic2NvcmVzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIpLFxuICAgICAgICAjIGRsLkhpdHJhdGVDYWxsYmFjayhpbnB1dF9rZXk9XCJzY29yZXNcIiwgdGFyZ2V0X2tleT1cInRhcmdldHNcIiwgdG9waz0oMSwgMywgNSkpLFxuICAgICAgICAjIGRsLk1SUkNhbGxiYWNrKGlucHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCB0b3BrPSgxLCAzLCA1KSksXG4gICAgICAgICMgZGwuTUFQQ2FsbGJhY2soaW5wdXRfa2V5PVwic2NvcmVzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIHRvcGs9KDEsIDMsIDUpKSxcbiAgICAgICAgIyBkbC5ORENHQ2FsbGJhY2soaW5wdXRfa2V5PVwic2NvcmVzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIHRvcGs9KDEsIDMsIDUpKSxcbiAgICAgICAgZGwuQmFja3dhcmRDYWxsYmFjayhtZXRyaWNfa2V5PVwibG9zc1wiKSxcbiAgICAgICAgZGwuT3B0aW1pemVyQ2FsbGJhY2sobWV0cmljX2tleT1cImxvc3NcIiksXG4gICAgICAgIGRsLlNjaGVkdWxlckNhbGxiYWNrKCksXG4gICAgICAgIGRsLkNoZWNrcG9pbnRDYWxsYmFjayhcbiAgICAgICAgICAgIGxvZ2Rpcj1cIi4vbG9nc1wiLCBsb2FkZXJfa2V5PVwidmFsaWRcIiwgbWV0cmljX2tleT1cImxvc3NcIiwgbWluaW1pemU9VHJ1ZVxuICAgICAgICApLFxuICAgIF1cbilcbmBgYFxuPC9wPlxuPC9kZXRhaWxzPlxuXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+Q1YgLSBNTklTVCBjbGFzc2lmaWNhdGlvbjwvc3VtbWFyeT5cbjxwPlxuXG5gYGBweXRob25cbmltcG9ydCBvc1xuZnJvbSB0b3JjaCBpbXBvcnQgbm4sIG9wdGltXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIuZGF0YXNldHMgaW1wb3J0IE1OSVNUXG5cbm1vZGVsID0gbm4uU2VxdWVudGlhbChubi5GbGF0dGVuKCksIG5uLkxpbmVhcigyOCAqIDI4LCAxMCkpXG5jcml0ZXJpb24gPSBubi5Dcm9zc0VudHJvcHlMb3NzKClcbm9wdGltaXplciA9IG9wdGltLkFkYW0obW9kZWwucGFyYW1ldGVycygpLCBscj0wLjAyKVxuXG50cmFpbl9kYXRhID0gTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPVRydWUpXG52YWxpZF9kYXRhID0gTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPUZhbHNlKVxubG9hZGVycyA9IHtcbiAgICBcInRyYWluXCI6IERhdGFMb2FkZXIodHJhaW5fZGF0YSwgYmF0Y2hfc2l6ZT0zMiksXG4gICAgXCJ2YWxpZFwiOiBEYXRhTG9hZGVyKHZhbGlkX2RhdGEsIGJhdGNoX3NpemU9MzIpLFxufVxuXG5ydW5uZXIgPSBkbC5TdXBlcnZpc2VkUnVubmVyKClcbiMgbW9kZWwgdHJhaW5pbmdcbnJ1bm5lci50cmFpbihcbiAgICBtb2RlbD1tb2RlbCxcbiAgICBjcml0ZXJpb249Y3JpdGVyaW9uLFxuICAgIG9wdGltaXplcj1vcHRpbWl6ZXIsXG4gICAgbG9hZGVycz1sb2FkZXJzLFxuICAgIG51bV9lcG9jaHM9MSxcbiAgICBsb2dkaXI9XCIuL2xvZ3NcIixcbiAgICB2YWxpZF9sb2FkZXI9XCJ2YWxpZFwiLFxuICAgIHZhbGlkX21ldHJpYz1cImxvc3NcIixcbiAgICBtaW5pbWl6ZV92YWxpZF9tZXRyaWM9VHJ1ZSxcbiAgICB2ZXJib3NlPVRydWUsXG4jIHVuY29tbWVudCBmb3IgZXh0cmEgbWV0cmljczpcbiMgICAgIGNhbGxiYWNrcz1bXG4jICAgICAgICAgZGwuQWNjdXJhY3lDYWxsYmFjayhpbnB1dF9rZXk9XCJsb2dpdHNcIiwgdGFyZ2V0X2tleT1cInRhcmdldHNcIiwgbnVtX2NsYXNzZXM9MTApLFxuIyAgICAgICAgIGRsLlByZWNpc2lvblJlY2FsbEYxU3VwcG9ydENhbGxiYWNrKFxuIyAgICAgICAgICAgICBpbnB1dF9rZXk9XCJsb2dpdHNcIiwgdGFyZ2V0X2tleT1cInRhcmdldHNcIiwgbnVtX2NsYXNzZXM9MTBcbiMgICAgICAgICApLFxuIyAgICAgICAgIGRsLkFVQ0NhbGxiYWNrKGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiKSxcbiMgICAgICAgICAjIGNhdGFseXN0W21sXSByZXF1aXJlZCBgYHBpcCBpbnN0YWxsIGNhdGFseXN0W21sXWBgXG4jICAgICAgICAgZGwuQ29uZnVzaW9uTWF0cml4Q2FsbGJhY2soXG4jICAgICAgICAgICAgIGlucHV0X2tleT1cImxvZ2l0c1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBudW1fY2xhc3Nlcz1udW1fY2xhc3Nlc1xuIyAgICAgICAgICksXG4jICAgICBdXG4pXG5gYGBcbjwvcD5cbjwvZGV0YWlscz5cblxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PkNWIC0gTU5JU1Qgc2VnbWVudGF0aW9uPC9zdW1tYXJ5PlxuPHA+XG5cbmBgYHB5dGhvblxuaW1wb3J0IG9zXG5pbXBvcnQgdG9yY2hcbmZyb20gdG9yY2ggaW1wb3J0IG5uXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIuZGF0YXNldHMgaW1wb3J0IE1OSVNUXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIubG9zc2VzIGltcG9ydCBJb1VMb3NzXG5cblxubW9kZWwgPSBubi5TZXF1ZW50aWFsKFxuICAgIG5uLkNvbnYyZCgxLCAxLCAzLCAxLCAxKSwgbm4uUmVMVSgpLFxuICAgIG5uLkNvbnYyZCgxLCAxLCAzLCAxLCAxKSwgbm4uU2lnbW9pZCgpLFxuKVxuY3JpdGVyaW9uID0gSW9VTG9zcygpXG5vcHRpbWl6ZXIgPSB0b3JjaC5vcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSwgbHI9MC4wMilcblxudHJhaW5fZGF0YSA9IE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1UcnVlKVxudmFsaWRfZGF0YSA9IE1OSVNUKG9zLmdldGN3ZCgpLCB0cmFpbj1GYWxzZSlcbmxvYWRlcnMgPSB7XG4gICAgXCJ0cmFpblwiOiBEYXRhTG9hZGVyKHRyYWluX2RhdGEsIGJhdGNoX3NpemU9MzIpLFxuICAgIFwidmFsaWRcIjogRGF0YUxvYWRlcih2YWxpZF9kYXRhLCBiYXRjaF9zaXplPTMyKSxcbn1cblxuY2xhc3MgQ3VzdG9tUnVubmVyKGRsLlN1cGVydmlzZWRSdW5uZXIpOlxuICAgIGRlZiBoYW5kbGVfYmF0Y2goc2VsZiwgYmF0Y2gpOlxuICAgICAgICB4ID0gYmF0Y2hbc2VsZi5faW5wdXRfa2V5XVxuICAgICAgICB4X25vaXNlID0gKHggKyB0b3JjaC5yYW5kX2xpa2UoeCkpLmNsYW1wXygwLCAxKVxuICAgICAgICB4XyA9IHNlbGYubW9kZWwoeF9ub2lzZSlcbiAgICAgICAgc2VsZi5iYXRjaCA9IHtzZWxmLl9pbnB1dF9rZXk6IHgsIHNlbGYuX291dHB1dF9rZXk6IHhfLCBzZWxmLl90YXJnZXRfa2V5OiB4fVxuXG5ydW5uZXIgPSBDdXN0b21SdW5uZXIoXG4gICAgaW5wdXRfa2V5PVwiZmVhdHVyZXNcIiwgb3V0cHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBsb3NzX2tleT1cImxvc3NcIlxuKVxuIyBtb2RlbCB0cmFpbmluZ1xucnVubmVyLnRyYWluKFxuICAgIG1vZGVsPW1vZGVsLFxuICAgIGNyaXRlcmlvbj1jcml0ZXJpb24sXG4gICAgb3B0aW1pemVyPW9wdGltaXplcixcbiAgICBsb2FkZXJzPWxvYWRlcnMsXG4gICAgbnVtX2Vwb2Nocz0xLFxuICAgIGNhbGxiYWNrcz1bXG4gICAgICAgIGRsLklPVUNhbGxiYWNrKGlucHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiKSxcbiAgICAgICAgZGwuRGljZUNhbGxiYWNrKGlucHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiKSxcbiAgICAgICAgZGwuVHJldnNreUNhbGxiYWNrKGlucHV0X2tleT1cInNjb3Jlc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBhbHBoYT0wLjIpLFxuICAgIF0sXG4gICAgbG9nZGlyPVwiLi9sb2dkaXJcIixcbiAgICB2YWxpZF9sb2FkZXI9XCJ2YWxpZFwiLFxuICAgIHZhbGlkX21ldHJpYz1cImxvc3NcIixcbiAgICBtaW5pbWl6ZV92YWxpZF9tZXRyaWM9VHJ1ZSxcbiAgICB2ZXJib3NlPVRydWUsXG4pXG5gYGBcbjwvcD5cbjwvZGV0YWlscz5cblxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PkNWIC0gTU5JU1QgbWV0cmljIGxlYXJuaW5nPC9zdW1tYXJ5PlxuPHA+XG5cbmBgYHB5dGhvblxuaW1wb3J0IG9zXG5mcm9tIHRvcmNoLm9wdGltIGltcG9ydCBBZGFtXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIuZGF0YSBpbXBvcnQgSGFyZFRyaXBsZXRzU2FtcGxlclxuZnJvbSBjYXRhbHlzdC5jb250cmliLmRhdGFzZXRzIGltcG9ydCBNbmlzdE1MRGF0YXNldCwgTW5pc3RRR0RhdGFzZXRcbmZyb20gY2F0YWx5c3QuY29udHJpYi5sb3NzZXMgaW1wb3J0IFRyaXBsZXRNYXJnaW5Mb3NzV2l0aFNhbXBsZXJcbmZyb20gY2F0YWx5c3QuY29udHJpYi5tb2RlbHMgaW1wb3J0IE1uaXN0U2ltcGxlTmV0XG5mcm9tIGNhdGFseXN0LmRhdGEuc2FtcGxlciBpbXBvcnQgQmF0Y2hCYWxhbmNlQ2xhc3NTYW1wbGVyXG5cblxuIyAxLiB0cmFpbiBhbmQgdmFsaWQgbG9hZGVyc1xudHJhaW5fZGF0YXNldCA9IE1uaXN0TUxEYXRhc2V0KHJvb3Q9b3MuZ2V0Y3dkKCkpXG5zYW1wbGVyID0gQmF0Y2hCYWxhbmNlQ2xhc3NTYW1wbGVyKFxuICAgIGxhYmVscz10cmFpbl9kYXRhc2V0LmdldF9sYWJlbHMoKSwgbnVtX2NsYXNzZXM9NSwgbnVtX3NhbXBsZXM9MTAsIG51bV9iYXRjaGVzPTEwXG4pXG50cmFpbl9sb2FkZXIgPSBEYXRhTG9hZGVyKGRhdGFzZXQ9dHJhaW5fZGF0YXNldCwgYmF0Y2hfc2FtcGxlcj1zYW1wbGVyKVxuXG52YWxpZF9kYXRhc2V0ID0gTW5pc3RRR0RhdGFzZXQocm9vdD1vcy5nZXRjd2QoKSwgZ2FsbGVyeV9mcmFxPTAuMilcbnZhbGlkX2xvYWRlciA9IERhdGFMb2FkZXIoZGF0YXNldD12YWxpZF9kYXRhc2V0LCBiYXRjaF9zaXplPTEwMjQpXG5cbiMgMi4gbW9kZWwgYW5kIG9wdGltaXplclxubW9kZWwgPSBNbmlzdFNpbXBsZU5ldChvdXRfZmVhdHVyZXM9MTYpXG5vcHRpbWl6ZXIgPSBBZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSwgbHI9MC4wMDEpXG5cbiMgMy4gY3JpdGVyaW9uIHdpdGggdHJpcGxldHMgc2FtcGxpbmdcbnNhbXBsZXJfaW5iYXRjaCA9IEhhcmRUcmlwbGV0c1NhbXBsZXIobm9ybV9yZXF1aXJlZD1GYWxzZSlcbmNyaXRlcmlvbiA9IFRyaXBsZXRNYXJnaW5Mb3NzV2l0aFNhbXBsZXIobWFyZ2luPTAuNSwgc2FtcGxlcl9pbmJhdGNoPXNhbXBsZXJfaW5iYXRjaClcblxuIyA0LiB0cmFpbmluZyB3aXRoIGNhdGFseXN0IFJ1bm5lclxuY2xhc3MgQ3VzdG9tUnVubmVyKGRsLlN1cGVydmlzZWRSdW5uZXIpOlxuICAgIGRlZiBoYW5kbGVfYmF0Y2goc2VsZiwgYmF0Y2gpIC0+IE5vbmU6XG4gICAgICAgIGlmIHNlbGYuaXNfdHJhaW5fbG9hZGVyOlxuICAgICAgICAgICAgaW1hZ2VzLCB0YXJnZXRzID0gYmF0Y2hbXCJmZWF0dXJlc1wiXS5mbG9hdCgpLCBiYXRjaFtcInRhcmdldHNcIl0ubG9uZygpXG4gICAgICAgICAgICBmZWF0dXJlcyA9IHNlbGYubW9kZWwoaW1hZ2VzKVxuICAgICAgICAgICAgc2VsZi5iYXRjaCA9IHtcImVtYmVkZGluZ3NcIjogZmVhdHVyZXMsIFwidGFyZ2V0c1wiOiB0YXJnZXRzLH1cbiAgICAgICAgZWxzZTpcbiAgICAgICAgICAgIGltYWdlcywgdGFyZ2V0cywgaXNfcXVlcnkgPSBcXFxuICAgICAgICAgICAgICAgIGJhdGNoW1wiZmVhdHVyZXNcIl0uZmxvYXQoKSwgYmF0Y2hbXCJ0YXJnZXRzXCJdLmxvbmcoKSwgYmF0Y2hbXCJpc19xdWVyeVwiXS5ib29sKClcbiAgICAgICAgICAgIGZlYXR1cmVzID0gc2VsZi5tb2RlbChpbWFnZXMpXG4gICAgICAgICAgICBzZWxmLmJhdGNoID0ge1wiZW1iZWRkaW5nc1wiOiBmZWF0dXJlcywgXCJ0YXJnZXRzXCI6IHRhcmdldHMsIFwiaXNfcXVlcnlcIjogaXNfcXVlcnl9XG5cbmNhbGxiYWNrcyA9IFtcbiAgICBkbC5Db250cm9sRmxvd0NhbGxiYWNrV3JhcHBlcihcbiAgICAgICAgZGwuQ3JpdGVyaW9uQ2FsbGJhY2soaW5wdXRfa2V5PVwiZW1iZWRkaW5nc1wiLCB0YXJnZXRfa2V5PVwidGFyZ2V0c1wiLCBtZXRyaWNfa2V5PVwibG9zc1wiKSxcbiAgICAgICAgbG9hZGVycz1cInRyYWluXCIsXG4gICAgKSxcbiAgICBkbC5Db250cm9sRmxvd0NhbGxiYWNrV3JhcHBlcihcbiAgICAgICAgZGwuQ01DU2NvcmVDYWxsYmFjayhcbiAgICAgICAgICAgIGVtYmVkZGluZ3Nfa2V5PVwiZW1iZWRkaW5nc1wiLFxuICAgICAgICAgICAgbGFiZWxzX2tleT1cInRhcmdldHNcIixcbiAgICAgICAgICAgIGlzX3F1ZXJ5X2tleT1cImlzX3F1ZXJ5XCIsXG4gICAgICAgICAgICB0b3BrPVsxXSxcbiAgICAgICAgKSxcbiAgICAgICAgbG9hZGVycz1cInZhbGlkXCIsXG4gICAgKSxcbiAgICBkbC5QZXJpb2RpY0xvYWRlckNhbGxiYWNrKFxuICAgICAgICB2YWxpZF9sb2FkZXJfa2V5PVwidmFsaWRcIiwgdmFsaWRfbWV0cmljX2tleT1cImNtYzAxXCIsIG1pbmltaXplPUZhbHNlLCB2YWxpZD0yXG4gICAgKSxcbl1cblxucnVubmVyID0gQ3VzdG9tUnVubmVyKGlucHV0X2tleT1cImZlYXR1cmVzXCIsIG91dHB1dF9rZXk9XCJlbWJlZGRpbmdzXCIpXG5ydW5uZXIudHJhaW4oXG4gICAgbW9kZWw9bW9kZWwsXG4gICAgY3JpdGVyaW9uPWNyaXRlcmlvbixcbiAgICBvcHRpbWl6ZXI9b3B0aW1pemVyLFxuICAgIGNhbGxiYWNrcz1jYWxsYmFja3MsXG4gICAgbG9hZGVycz17XCJ0cmFpblwiOiB0cmFpbl9sb2FkZXIsIFwidmFsaWRcIjogdmFsaWRfbG9hZGVyfSxcbiAgICB2ZXJib3NlPUZhbHNlLFxuICAgIGxvZ2Rpcj1cIi4vbG9nc1wiLFxuICAgIHZhbGlkX2xvYWRlcj1cInZhbGlkXCIsXG4gICAgdmFsaWRfbWV0cmljPVwiY21jMDFcIixcbiAgICBtaW5pbWl6ZV92YWxpZF9tZXRyaWM9RmFsc2UsXG4gICAgbnVtX2Vwb2Nocz0xMCxcbilcbmBgYFxuPC9wPlxuPC9kZXRhaWxzPlxuXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+Q1YgLSBNTklTVCBHQU48L3N1bW1hcnk+XG48cD5cblxuYGBgcHl0aG9uXG5pbXBvcnQgb3NcbmltcG9ydCB0b3JjaFxuZnJvbSB0b3JjaCBpbXBvcnQgbm5cbmZyb20gdG9yY2gudXRpbHMuZGF0YSBpbXBvcnQgRGF0YUxvYWRlclxuZnJvbSBjYXRhbHlzdCBpbXBvcnQgZGxcbmZyb20gY2F0YWx5c3QuY29udHJpYi5kYXRhc2V0cyBpbXBvcnQgTU5JU1RcbmZyb20gY2F0YWx5c3QuY29udHJpYi5sYXllcnMgaW1wb3J0IEdsb2JhbE1heFBvb2wyZCwgTGFtYmRhXG5cbmxhdGVudF9kaW0gPSAxMjhcbmdlbmVyYXRvciA9IG5uLlNlcXVlbnRpYWwoXG4gICAgIyBXZSB3YW50IHRvIGdlbmVyYXRlIDEyOCBjb2VmZmljaWVudHMgdG8gcmVzaGFwZSBpbnRvIGEgN3g3eDEyOCBtYXBcbiAgICBubi5MaW5lYXIoMTI4LCAxMjggKiA3ICogNyksXG4gICAgbm4uTGVha3lSZUxVKDAuMiwgaW5wbGFjZT1UcnVlKSxcbiAgICBMYW1iZGEobGFtYmRhIHg6IHgudmlldyh4LnNpemUoMCksIDEyOCwgNywgNykpLFxuICAgIG5uLkNvbnZUcmFuc3Bvc2UyZCgxMjgsIDEyOCwgKDQsIDQpLCBzdHJpZGU9KDIsIDIpLCBwYWRkaW5nPTEpLFxuICAgIG5uLkxlYWt5UmVMVSgwLjIsIGlucGxhY2U9VHJ1ZSksXG4gICAgbm4uQ29udlRyYW5zcG9zZTJkKDEyOCwgMTI4LCAoNCwgNCksIHN0cmlkZT0oMiwgMiksIHBhZGRpbmc9MSksXG4gICAgbm4uTGVha3lSZUxVKDAuMiwgaW5wbGFjZT1UcnVlKSxcbiAgICBubi5Db252MmQoMTI4LCAxLCAoNywgNyksIHBhZGRpbmc9MyksXG4gICAgbm4uU2lnbW9pZCgpLFxuKVxuZGlzY3JpbWluYXRvciA9IG5uLlNlcXVlbnRpYWwoXG4gICAgbm4uQ29udjJkKDEsIDY0LCAoMywgMyksIHN0cmlkZT0oMiwgMiksIHBhZGRpbmc9MSksXG4gICAgbm4uTGVha3lSZUxVKDAuMiwgaW5wbGFjZT1UcnVlKSxcbiAgICBubi5Db252MmQoNjQsIDEyOCwgKDMsIDMpLCBzdHJpZGU9KDIsIDIpLCBwYWRkaW5nPTEpLFxuICAgIG5uLkxlYWt5UmVMVSgwLjIsIGlucGxhY2U9VHJ1ZSksXG4gICAgR2xvYmFsTWF4UG9vbDJkKCksXG4gICAgbm4uRmxhdHRlbigpLFxuICAgIG5uLkxpbmVhcigxMjgsIDEpLFxuKVxuXG5tb2RlbCA9IG5uLk1vZHVsZURpY3Qoe1wiZ2VuZXJhdG9yXCI6IGdlbmVyYXRvciwgXCJkaXNjcmltaW5hdG9yXCI6IGRpc2NyaW1pbmF0b3J9KVxuY3JpdGVyaW9uID0ge1wiZ2VuZXJhdG9yXCI6IG5uLkJDRVdpdGhMb2dpdHNMb3NzKCksIFwiZGlzY3JpbWluYXRvclwiOiBubi5CQ0VXaXRoTG9naXRzTG9zcygpfVxub3B0aW1pemVyID0ge1xuICAgIFwiZ2VuZXJhdG9yXCI6IHRvcmNoLm9wdGltLkFkYW0oZ2VuZXJhdG9yLnBhcmFtZXRlcnMoKSwgbHI9MC4wMDAzLCBiZXRhcz0oMC41LCAwLjk5OSkpLFxuICAgIFwiZGlzY3JpbWluYXRvclwiOiB0b3JjaC5vcHRpbS5BZGFtKGRpc2NyaW1pbmF0b3IucGFyYW1ldGVycygpLCBscj0wLjAwMDMsIGJldGFzPSgwLjUsIDAuOTk5KSksXG59XG50cmFpbl9kYXRhID0gTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPUZhbHNlKVxubG9hZGVycyA9IHtcInRyYWluXCI6IERhdGFMb2FkZXIodHJhaW5fZGF0YSwgYmF0Y2hfc2l6ZT0zMil9XG5cbmNsYXNzIEN1c3RvbVJ1bm5lcihkbC5SdW5uZXIpOlxuICAgIGRlZiBwcmVkaWN0X2JhdGNoKHNlbGYsIGJhdGNoKTpcbiAgICAgICAgYmF0Y2hfc2l6ZSA9IDFcbiAgICAgICAgIyBTYW1wbGUgcmFuZG9tIHBvaW50cyBpbiB0aGUgbGF0ZW50IHNwYWNlXG4gICAgICAgIHJhbmRvbV9sYXRlbnRfdmVjdG9ycyA9IHRvcmNoLnJhbmRuKGJhdGNoX3NpemUsIGxhdGVudF9kaW0pLnRvKHNlbGYuZW5naW5lLmRldmljZSlcbiAgICAgICAgIyBEZWNvZGUgdGhlbSB0byBmYWtlIGltYWdlc1xuICAgICAgICBnZW5lcmF0ZWRfaW1hZ2VzID0gc2VsZi5tb2RlbFtcImdlbmVyYXRvclwiXShyYW5kb21fbGF0ZW50X3ZlY3RvcnMpLmRldGFjaCgpXG4gICAgICAgIHJldHVybiBnZW5lcmF0ZWRfaW1hZ2VzXG5cbiAgICBkZWYgaGFuZGxlX2JhdGNoKHNlbGYsIGJhdGNoKTpcbiAgICAgICAgcmVhbF9pbWFnZXMsIF8gPSBiYXRjaFxuICAgICAgICBiYXRjaF9zaXplID0gcmVhbF9pbWFnZXMuc2hhcGVbMF1cblxuICAgICAgICAjIFNhbXBsZSByYW5kb20gcG9pbnRzIGluIHRoZSBsYXRlbnQgc3BhY2VcbiAgICAgICAgcmFuZG9tX2xhdGVudF92ZWN0b3JzID0gdG9yY2gucmFuZG4oYmF0Y2hfc2l6ZSwgbGF0ZW50X2RpbSkudG8oc2VsZi5lbmdpbmUuZGV2aWNlKVxuXG4gICAgICAgICMgRGVjb2RlIHRoZW0gdG8gZmFrZSBpbWFnZXNcbiAgICAgICAgZ2VuZXJhdGVkX2ltYWdlcyA9IHNlbGYubW9kZWxbXCJnZW5lcmF0b3JcIl0ocmFuZG9tX2xhdGVudF92ZWN0b3JzKS5kZXRhY2goKVxuICAgICAgICAjIENvbWJpbmUgdGhlbSB3aXRoIHJlYWwgaW1hZ2VzXG4gICAgICAgIGNvbWJpbmVkX2ltYWdlcyA9IHRvcmNoLmNhdChbZ2VuZXJhdGVkX2ltYWdlcywgcmVhbF9pbWFnZXNdKVxuXG4gICAgICAgICMgQXNzZW1ibGUgbGFiZWxzIGRpc2NyaW1pbmF0aW5nIHJlYWwgZnJvbSBmYWtlIGltYWdlc1xuICAgICAgICBsYWJlbHMgPSBcXFxuICAgICAgICAgICAgdG9yY2guY2F0KFt0b3JjaC5vbmVzKChiYXRjaF9zaXplLCAxKSksIHRvcmNoLnplcm9zKChiYXRjaF9zaXplLCAxKSldKS50byhzZWxmLmVuZ2luZS5kZXZpY2UpXG4gICAgICAgICMgQWRkIHJhbmRvbSBub2lzZSB0byB0aGUgbGFiZWxzIC0gaW1wb3J0YW50IHRyaWNrIVxuICAgICAgICBsYWJlbHMgKz0gMC4wNSAqIHRvcmNoLnJhbmQobGFiZWxzLnNoYXBlKS50byhzZWxmLmVuZ2luZS5kZXZpY2UpXG5cbiAgICAgICAgIyBEaXNjcmltaW5hdG9yIGZvcndhcmRcbiAgICAgICAgY29tYmluZWRfcHJlZGljdGlvbnMgPSBzZWxmLm1vZGVsW1wiZGlzY3JpbWluYXRvclwiXShjb21iaW5lZF9pbWFnZXMpXG5cbiAgICAgICAgIyBTYW1wbGUgcmFuZG9tIHBvaW50cyBpbiB0aGUgbGF0ZW50IHNwYWNlXG4gICAgICAgIHJhbmRvbV9sYXRlbnRfdmVjdG9ycyA9IHRvcmNoLnJhbmRuKGJhdGNoX3NpemUsIGxhdGVudF9kaW0pLnRvKHNlbGYuZW5naW5lLmRldmljZSlcbiAgICAgICAgIyBBc3NlbWJsZSBsYWJlbHMgdGhhdCBzYXkgXCJhbGwgcmVhbCBpbWFnZXNcIlxuICAgICAgICBtaXNsZWFkaW5nX2xhYmVscyA9IHRvcmNoLnplcm9zKChiYXRjaF9zaXplLCAxKSkudG8oc2VsZi5lbmdpbmUuZGV2aWNlKVxuXG4gICAgICAgICMgR2VuZXJhdG9yIGZvcndhcmRcbiAgICAgICAgZ2VuZXJhdGVkX2ltYWdlcyA9IHNlbGYubW9kZWxbXCJnZW5lcmF0b3JcIl0ocmFuZG9tX2xhdGVudF92ZWN0b3JzKVxuICAgICAgICBnZW5lcmF0ZWRfcHJlZGljdGlvbnMgPSBzZWxmLm1vZGVsW1wiZGlzY3JpbWluYXRvclwiXShnZW5lcmF0ZWRfaW1hZ2VzKVxuXG4gICAgICAgIHNlbGYuYmF0Y2ggPSB7XG4gICAgICAgICAgICBcImNvbWJpbmVkX3ByZWRpY3Rpb25zXCI6IGNvbWJpbmVkX3ByZWRpY3Rpb25zLFxuICAgICAgICAgICAgXCJsYWJlbHNcIjogbGFiZWxzLFxuICAgICAgICAgICAgXCJnZW5lcmF0ZWRfcHJlZGljdGlvbnNcIjogZ2VuZXJhdGVkX3ByZWRpY3Rpb25zLFxuICAgICAgICAgICAgXCJtaXNsZWFkaW5nX2xhYmVsc1wiOiBtaXNsZWFkaW5nX2xhYmVscyxcbiAgICAgICAgfVxuXG5cbnJ1bm5lciA9IEN1c3RvbVJ1bm5lcigpXG5ydW5uZXIudHJhaW4oXG4gICAgbW9kZWw9bW9kZWwsXG4gICAgY3JpdGVyaW9uPWNyaXRlcmlvbixcbiAgICBvcHRpbWl6ZXI9b3B0aW1pemVyLFxuICAgIGxvYWRlcnM9bG9hZGVycyxcbiAgICBjYWxsYmFja3M9W1xuICAgICAgICBkbC5Dcml0ZXJpb25DYWxsYmFjayhcbiAgICAgICAgICAgIGlucHV0X2tleT1cImNvbWJpbmVkX3ByZWRpY3Rpb25zXCIsXG4gICAgICAgICAgICB0YXJnZXRfa2V5PVwibGFiZWxzXCIsXG4gICAgICAgICAgICBtZXRyaWNfa2V5PVwibG9zc19kaXNjcmltaW5hdG9yXCIsXG4gICAgICAgICAgICBjcml0ZXJpb25fa2V5PVwiZGlzY3JpbWluYXRvclwiLFxuICAgICAgICApLFxuICAgICAgICBkbC5CYWNrd2FyZENhbGxiYWNrKG1ldHJpY19rZXk9XCJsb3NzX2Rpc2NyaW1pbmF0b3JcIiksXG4gICAgICAgIGRsLk9wdGltaXplckNhbGxiYWNrKFxuICAgICAgICAgICAgb3B0aW1pemVyX2tleT1cImRpc2NyaW1pbmF0b3JcIixcbiAgICAgICAgICAgIG1ldHJpY19rZXk9XCJsb3NzX2Rpc2NyaW1pbmF0b3JcIixcbiAgICAgICAgKSxcbiAgICAgICAgZGwuQ3JpdGVyaW9uQ2FsbGJhY2soXG4gICAgICAgICAgICBpbnB1dF9rZXk9XCJnZW5lcmF0ZWRfcHJlZGljdGlvbnNcIixcbiAgICAgICAgICAgIHRhcmdldF9rZXk9XCJtaXNsZWFkaW5nX2xhYmVsc1wiLFxuICAgICAgICAgICAgbWV0cmljX2tleT1cImxvc3NfZ2VuZXJhdG9yXCIsXG4gICAgICAgICAgICBjcml0ZXJpb25fa2V5PVwiZ2VuZXJhdG9yXCIsXG4gICAgICAgICksXG4gICAgICAgIGRsLkJhY2t3YXJkQ2FsbGJhY2sobWV0cmljX2tleT1cImxvc3NfZ2VuZXJhdG9yXCIpLFxuICAgICAgICBkbC5PcHRpbWl6ZXJDYWxsYmFjayhcbiAgICAgICAgICAgIG9wdGltaXplcl9rZXk9XCJnZW5lcmF0b3JcIixcbiAgICAgICAgICAgIG1ldHJpY19rZXk9XCJsb3NzX2dlbmVyYXRvclwiLFxuICAgICAgICApLFxuICAgIF0sXG4gICAgdmFsaWRfbG9hZGVyPVwidHJhaW5cIixcbiAgICB2YWxpZF9tZXRyaWM9XCJsb3NzX2dlbmVyYXRvclwiLFxuICAgIG1pbmltaXplX3ZhbGlkX21ldHJpYz1UcnVlLFxuICAgIG51bV9lcG9jaHM9MjAsXG4gICAgdmVyYm9zZT1UcnVlLFxuICAgIGxvZ2Rpcj1cIi4vbG9nc19nYW5cIixcbilcblxuIyB2aXN1YWxpemF0aW9uIChtYXRwbG90bGliIHJlcXVpcmVkKTpcbiMgaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdFxuIyAlbWF0cGxvdGxpYiBpbmxpbmVcbiMgcGx0Lmltc2hvdyhydW5uZXIucHJlZGljdF9iYXRjaChOb25lKVswLCAwXS5jcHUoKS5udW1weSgpKVxuYGBgXG48L3A+XG48L2RldGFpbHM+XG5cblxuPGRldGFpbHM+XG48c3VtbWFyeT5DViAtIE1OSVNUIFZBRTwvc3VtbWFyeT5cbjxwPlxuXG5gYGBweXRob25cbmltcG9ydCBvc1xuaW1wb3J0IHRvcmNoXG5mcm9tIHRvcmNoIGltcG9ydCBubiwgb3B0aW1cbmZyb20gdG9yY2gubm4gaW1wb3J0IGZ1bmN0aW9uYWwgYXMgRlxuZnJvbSB0b3JjaC51dGlscy5kYXRhIGltcG9ydCBEYXRhTG9hZGVyXG5mcm9tIGNhdGFseXN0IGltcG9ydCBkbCwgbWV0cmljc1xuZnJvbSBjYXRhbHlzdC5jb250cmliLmRhdGFzZXRzIGltcG9ydCBNTklTVFxuXG5MT0dfU0NBTEVfTUFYID0gMlxuTE9HX1NDQUxFX01JTiA9IC0xMFxuXG5kZWYgbm9ybWFsX3NhbXBsZShsb2MsIGxvZ19zY2FsZSk6XG4gICAgc2NhbGUgPSB0b3JjaC5leHAoMC41ICogbG9nX3NjYWxlKVxuICAgIHJldHVybiBsb2MgKyBzY2FsZSAqIHRvcmNoLnJhbmRuX2xpa2Uoc2NhbGUpXG5cbmNsYXNzIFZBRShubi5Nb2R1bGUpOlxuICAgIGRlZiBfX2luaXRfXyhzZWxmLCBpbl9mZWF0dXJlcywgaGlkX2ZlYXR1cmVzKTpcbiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygpXG4gICAgICAgIHNlbGYuaGlkX2ZlYXR1cmVzID0gaGlkX2ZlYXR1cmVzXG4gICAgICAgIHNlbGYuZW5jb2RlciA9IG5uLkxpbmVhcihpbl9mZWF0dXJlcywgaGlkX2ZlYXR1cmVzICogMilcbiAgICAgICAgc2VsZi5kZWNvZGVyID0gbm4uU2VxdWVudGlhbChubi5MaW5lYXIoaGlkX2ZlYXR1cmVzLCBpbl9mZWF0dXJlcyksIG5uLlNpZ21vaWQoKSlcblxuICAgIGRlZiBmb3J3YXJkKHNlbGYsIHgsIGRldGVybWluaXN0aWM9RmFsc2UpOlxuICAgICAgICB6ID0gc2VsZi5lbmNvZGVyKHgpXG4gICAgICAgIGJzLCB6X2RpbSA9IHouc2hhcGVcblxuICAgICAgICBsb2MsIGxvZ19zY2FsZSA9IHpbOiwgOiB6X2RpbSAvLyAyXSwgels6LCB6X2RpbSAvLyAyIDpdXG4gICAgICAgIGxvZ19zY2FsZSA9IHRvcmNoLmNsYW1wKGxvZ19zY2FsZSwgTE9HX1NDQUxFX01JTiwgTE9HX1NDQUxFX01BWClcblxuICAgICAgICB6XyA9IGxvYyBpZiBkZXRlcm1pbmlzdGljIGVsc2Ugbm9ybWFsX3NhbXBsZShsb2MsIGxvZ19zY2FsZSlcbiAgICAgICAgel8gPSB6Xy52aWV3KGJzLCAtMSlcbiAgICAgICAgeF8gPSBzZWxmLmRlY29kZXIoel8pXG5cbiAgICAgICAgcmV0dXJuIHhfLCBsb2MsIGxvZ19zY2FsZVxuXG5jbGFzcyBDdXN0b21SdW5uZXIoZGwuSVJ1bm5lcik6XG4gICAgZGVmIF9faW5pdF9fKHNlbGYsIGhpZF9mZWF0dXJlcywgbG9nZGlyLCBlbmdpbmUpOlxuICAgICAgICBzdXBlcigpLl9faW5pdF9fKClcbiAgICAgICAgc2VsZi5oaWRfZmVhdHVyZXMgPSBoaWRfZmVhdHVyZXNcbiAgICAgICAgc2VsZi5fbG9nZGlyID0gbG9nZGlyXG4gICAgICAgIHNlbGYuX2VuZ2luZSA9IGVuZ2luZVxuXG4gICAgZGVmIGdldF9lbmdpbmUoc2VsZik6XG4gICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmVcblxuICAgIGRlZiBnZXRfbG9nZ2VycyhzZWxmKTpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIFwiY29uc29sZVwiOiBkbC5Db25zb2xlTG9nZ2VyKCksXG4gICAgICAgICAgICBcImNzdlwiOiBkbC5DU1ZMb2dnZXIobG9nZGlyPXNlbGYuX2xvZ2RpciksXG4gICAgICAgICAgICBcInRlbnNvcmJvYXJkXCI6IGRsLlRlbnNvcmJvYXJkTG9nZ2VyKGxvZ2Rpcj1zZWxmLl9sb2dkaXIpLFxuICAgICAgICB9XG5cbiAgICBAcHJvcGVydHlcbiAgICBkZWYgbnVtX2Vwb2NocyhzZWxmKSAtPiBpbnQ6XG4gICAgICAgIHJldHVybiAxXG5cbiAgICBkZWYgZ2V0X2xvYWRlcnMoc2VsZik6XG4gICAgICAgIGxvYWRlcnMgPSB7XG4gICAgICAgICAgICBcInRyYWluXCI6IERhdGFMb2FkZXIoTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPUZhbHNlKSwgYmF0Y2hfc2l6ZT0zMiksXG4gICAgICAgICAgICBcInZhbGlkXCI6IERhdGFMb2FkZXIoTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPUZhbHNlKSwgYmF0Y2hfc2l6ZT0zMiksXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxvYWRlcnNcblxuICAgIGRlZiBnZXRfbW9kZWwoc2VsZik6XG4gICAgICAgIG1vZGVsID0gc2VsZi5tb2RlbCBpZiBzZWxmLm1vZGVsIGlzIG5vdCBOb25lIGVsc2UgVkFFKDI4ICogMjgsIHNlbGYuaGlkX2ZlYXR1cmVzKVxuICAgICAgICByZXR1cm4gbW9kZWxcblxuICAgIGRlZiBnZXRfb3B0aW1pemVyKHNlbGYsIG1vZGVsKTpcbiAgICAgICAgcmV0dXJuIG9wdGltLkFkYW0obW9kZWwucGFyYW1ldGVycygpLCBscj0wLjAyKVxuXG4gICAgZGVmIGdldF9jYWxsYmFja3Moc2VsZik6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcImJhY2t3YXJkXCI6IGRsLkJhY2t3YXJkQ2FsbGJhY2sobWV0cmljX2tleT1cImxvc3NcIiksXG4gICAgICAgICAgICBcIm9wdGltaXplclwiOiBkbC5PcHRpbWl6ZXJDYWxsYmFjayhtZXRyaWNfa2V5PVwibG9zc1wiKSxcbiAgICAgICAgICAgIFwiY2hlY2twb2ludFwiOiBkbC5DaGVja3BvaW50Q2FsbGJhY2soXG4gICAgICAgICAgICAgICAgc2VsZi5fbG9nZGlyLFxuICAgICAgICAgICAgICAgIGxvYWRlcl9rZXk9XCJ2YWxpZFwiLFxuICAgICAgICAgICAgICAgIG1ldHJpY19rZXk9XCJsb3NzXCIsXG4gICAgICAgICAgICAgICAgbWluaW1pemU9VHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3BrPTMsXG4gICAgICAgICAgICApLFxuICAgICAgICB9XG5cbiAgICBkZWYgb25fbG9hZGVyX3N0YXJ0KHNlbGYsIHJ1bm5lcik6XG4gICAgICAgIHN1cGVyKCkub25fbG9hZGVyX3N0YXJ0KHJ1bm5lcilcbiAgICAgICAgc2VsZi5tZXRlcnMgPSB7XG4gICAgICAgICAgICBrZXk6IG1ldHJpY3MuQWRkaXRpdmVNZXRyaWMoY29tcHV0ZV9vbl9jYWxsPUZhbHNlKVxuICAgICAgICAgICAgZm9yIGtleSBpbiBbXCJsb3NzX2FlXCIsIFwibG9zc19rbGRcIiwgXCJsb3NzXCJdXG4gICAgICAgIH1cblxuICAgIGRlZiBoYW5kbGVfYmF0Y2goc2VsZiwgYmF0Y2gpOlxuICAgICAgICB4LCBfID0gYmF0Y2hcbiAgICAgICAgeCA9IHgudmlldyh4LnNpemUoMCksIC0xKVxuICAgICAgICB4XywgbG9jLCBsb2dfc2NhbGUgPSBzZWxmLm1vZGVsKHgsIGRldGVybWluaXN0aWM9bm90IHNlbGYuaXNfdHJhaW5fbG9hZGVyKVxuXG4gICAgICAgIGxvc3NfYWUgPSBGLm1zZV9sb3NzKHhfLCB4KVxuICAgICAgICBsb3NzX2tsZCA9IChcbiAgICAgICAgICAgIC0wLjUgKiB0b3JjaC5zdW0oMSArIGxvZ19zY2FsZSAtIGxvYy5wb3coMikgLSBsb2dfc2NhbGUuZXhwKCksIGRpbT0xKVxuICAgICAgICApLm1lYW4oKVxuICAgICAgICBsb3NzID0gbG9zc19hZSArIGxvc3Nfa2xkICogMC4wMVxuXG4gICAgICAgIHNlbGYuYmF0Y2hfbWV0cmljcyA9IHtcImxvc3NfYWVcIjogbG9zc19hZSwgXCJsb3NzX2tsZFwiOiBsb3NzX2tsZCwgXCJsb3NzXCI6IGxvc3N9XG4gICAgICAgIGZvciBrZXkgaW4gW1wibG9zc19hZVwiLCBcImxvc3Nfa2xkXCIsIFwibG9zc1wiXTpcbiAgICAgICAgICAgIHNlbGYubWV0ZXJzW2tleV0udXBkYXRlKHNlbGYuYmF0Y2hfbWV0cmljc1trZXldLml0ZW0oKSwgc2VsZi5iYXRjaF9zaXplKVxuXG4gICAgZGVmIG9uX2xvYWRlcl9lbmQoc2VsZiwgcnVubmVyKTpcbiAgICAgICAgZm9yIGtleSBpbiBbXCJsb3NzX2FlXCIsIFwibG9zc19rbGRcIiwgXCJsb3NzXCJdOlxuICAgICAgICAgICAgc2VsZi5sb2FkZXJfbWV0cmljc1trZXldID0gc2VsZi5tZXRlcnNba2V5XS5jb21wdXRlKClbMF1cbiAgICAgICAgc3VwZXIoKS5vbl9sb2FkZXJfZW5kKHJ1bm5lcilcblxuICAgIGRlZiBwcmVkaWN0X2JhdGNoKHNlbGYsIGJhdGNoKTpcbiAgICAgICAgcmFuZG9tX2xhdGVudF92ZWN0b3JzID0gdG9yY2gucmFuZG4oMSwgc2VsZi5oaWRfZmVhdHVyZXMpLnRvKHNlbGYuZW5naW5lLmRldmljZSlcbiAgICAgICAgZ2VuZXJhdGVkX2ltYWdlcyA9IHNlbGYubW9kZWwuZGVjb2RlcihyYW5kb21fbGF0ZW50X3ZlY3RvcnMpLmRldGFjaCgpXG4gICAgICAgIHJldHVybiBnZW5lcmF0ZWRfaW1hZ2VzXG5cbnJ1bm5lciA9IEN1c3RvbVJ1bm5lcigxMjgsIFwiLi9sb2dzXCIsIGRsLkNQVUVuZ2luZSgpKVxucnVubmVyLnJ1bigpXG4jIHZpc3VhbGl6YXRpb24gKG1hdHBsb3RsaWIgcmVxdWlyZWQpOlxuIyBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0XG4jICVtYXRwbG90bGliIGlubGluZVxuIyBwbHQuaW1zaG93KHJ1bm5lci5wcmVkaWN0X2JhdGNoKE5vbmUpWzBdLmNwdSgpLm51bXB5KCkucmVzaGFwZSgyOCwgMjgpKVxuYGBgXG48L3A+XG48L2RldGFpbHM+XG5cblxuPGRldGFpbHM+XG48c3VtbWFyeT5BdXRvTUwgLSBoeXBlcnBhcmFtZXRlcnMgb3B0aW1pemF0aW9uIHdpdGggT3B0dW5hPC9zdW1tYXJ5PlxuPHA+XG5cbmBgYHB5dGhvblxuaW1wb3J0IG9zXG5pbXBvcnQgb3B0dW5hXG5pbXBvcnQgdG9yY2hcbmZyb20gdG9yY2ggaW1wb3J0IG5uXG5mcm9tIHRvcmNoLnV0aWxzLmRhdGEgaW1wb3J0IERhdGFMb2FkZXJcbmZyb20gY2F0YWx5c3QgaW1wb3J0IGRsXG5mcm9tIGNhdGFseXN0LmNvbnRyaWIuZGF0YXNldHMgaW1wb3J0IE1OSVNUXG5cblxuZGVmIG9iamVjdGl2ZSh0cmlhbCk6XG4gICAgbHIgPSB0cmlhbC5zdWdnZXN0X2xvZ3VuaWZvcm0oXCJsclwiLCAxZS0zLCAxZS0xKVxuICAgIG51bV9oaWRkZW4gPSBpbnQodHJpYWwuc3VnZ2VzdF9sb2d1bmlmb3JtKFwibnVtX2hpZGRlblwiLCAzMiwgMTI4KSlcblxuICAgIHRyYWluX2RhdGEgPSBNTklTVChvcy5nZXRjd2QoKSwgdHJhaW49VHJ1ZSlcbiAgICB2YWxpZF9kYXRhID0gTU5JU1Qob3MuZ2V0Y3dkKCksIHRyYWluPUZhbHNlKVxuICAgIGxvYWRlcnMgPSB7XG4gICAgICAgIFwidHJhaW5cIjogRGF0YUxvYWRlcih0cmFpbl9kYXRhLCBiYXRjaF9zaXplPTMyKSxcbiAgICAgICAgXCJ2YWxpZFwiOiBEYXRhTG9hZGVyKHZhbGlkX2RhdGEsIGJhdGNoX3NpemU9MzIpLFxuICAgIH1cbiAgICBtb2RlbCA9IG5uLlNlcXVlbnRpYWwoXG4gICAgICAgIG5uLkZsYXR0ZW4oKSwgbm4uTGluZWFyKDc4NCwgbnVtX2hpZGRlbiksIG5uLlJlTFUoKSwgbm4uTGluZWFyKG51bV9oaWRkZW4sIDEwKVxuICAgIClcbiAgICBvcHRpbWl6ZXIgPSB0b3JjaC5vcHRpbS5BZGFtKG1vZGVsLnBhcmFtZXRlcnMoKSwgbHI9bHIpXG4gICAgY3JpdGVyaW9uID0gbm4uQ3Jvc3NFbnRyb3B5TG9zcygpXG5cbiAgICBydW5uZXIgPSBkbC5TdXBlcnZpc2VkUnVubmVyKGlucHV0X2tleT1cImZlYXR1cmVzXCIsIG91dHB1dF9rZXk9XCJsb2dpdHNcIiwgdGFyZ2V0X2tleT1cInRhcmdldHNcIilcbiAgICBydW5uZXIudHJhaW4oXG4gICAgICAgIG1vZGVsPW1vZGVsLFxuICAgICAgICBjcml0ZXJpb249Y3JpdGVyaW9uLFxuICAgICAgICBvcHRpbWl6ZXI9b3B0aW1pemVyLFxuICAgICAgICBsb2FkZXJzPWxvYWRlcnMsXG4gICAgICAgIGNhbGxiYWNrcz17XG4gICAgICAgICAgICBcImFjY3VyYWN5XCI6IGRsLkFjY3VyYWN5Q2FsbGJhY2soXG4gICAgICAgICAgICAgICAgaW5wdXRfa2V5PVwibG9naXRzXCIsIHRhcmdldF9rZXk9XCJ0YXJnZXRzXCIsIG51bV9jbGFzc2VzPTEwXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgIyBjYXRhbHlzdFtvcHR1bmFdIHJlcXVpcmVkIGBgcGlwIGluc3RhbGwgY2F0YWx5c3Rbb3B0dW5hXWBgXG4gICAgICAgICAgICBcIm9wdHVuYVwiOiBkbC5PcHR1bmFQcnVuaW5nQ2FsbGJhY2soXG4gICAgICAgICAgICAgICAgbG9hZGVyX2tleT1cInZhbGlkXCIsIG1ldHJpY19rZXk9XCJhY2N1cmFjeTAxXCIsIG1pbmltaXplPUZhbHNlLCB0cmlhbD10cmlhbFxuICAgICAgICAgICAgKSxcbiAgICAgICAgfSxcbiAgICAgICAgbnVtX2Vwb2Nocz0zLFxuICAgIClcbiAgICBzY29yZSA9IHRyaWFsLmJlc3Rfc2NvcmVcbiAgICByZXR1cm4gc2NvcmVcblxuc3R1ZHkgPSBvcHR1bmEuY3JlYXRlX3N0dWR5KFxuICAgIGRpcmVjdGlvbj1cIm1heGltaXplXCIsXG4gICAgcHJ1bmVyPW9wdHVuYS5wcnVuZXJzLk1lZGlhblBydW5lcihcbiAgICAgICAgbl9zdGFydHVwX3RyaWFscz0xLCBuX3dhcm11cF9zdGVwcz0wLCBpbnRlcnZhbF9zdGVwcz0xXG4gICAgKSxcbilcbnN0dWR5Lm9wdGltaXplKG9iamVjdGl2ZSwgbl90cmlhbHM9MywgdGltZW91dD0zMDApXG5wcmludChzdHVkeS5iZXN0X3ZhbHVlLCBzdHVkeS5iZXN0X3BhcmFtcylcbmBgYFxuPC9wPlxuPC9kZXRhaWxzPlxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PkNvbmZpZyBBUEkgLSBtaW5pbWFsIGV4YW1wbGU8L3N1bW1hcnk+XG48cD5cblxuYGBgeWFtbCB0aXRsZT1cImV4YW1wbGUueWFtbFwiXG5ydW5uZXI6XG4gIF90YXJnZXRfOiBjYXRhbHlzdC5ydW5uZXJzLlN1cGVydmlzZWRSdW5uZXJcbiAgbW9kZWw6XG4gICAgX3Zhcl86IG1vZGVsXG4gICAgX3RhcmdldF86IHRvcmNoLm5uLlNlcXVlbnRpYWxcbiAgICBhcmdzOlxuICAgICAgLSBfdGFyZ2V0XzogdG9yY2gubm4uRmxhdHRlblxuICAgICAgLSBfdGFyZ2V0XzogdG9yY2gubm4uTGluZWFyXG4gICAgICAgIGluX2ZlYXR1cmVzOiA3ODQgICMgMjggKiAyOFxuICAgICAgICBvdXRfZmVhdHVyZXM6IDEwXG4gIGlucHV0X2tleTogZmVhdHVyZXNcbiAgb3V0cHV0X2tleTogJm91dHB1dF9rZXkgbG9naXRzXG4gIHRhcmdldF9rZXk6ICZ0YXJnZXRfa2V5IHRhcmdldHNcbiAgbG9zc19rZXk6ICZsb3NzX2tleSBsb3NzXG5cbnJ1bjpcbiAgIyDiiYggc3RhZ2UgMVxuICAtIF9jYWxsXzogdHJhaW4gICMgcnVubmVyLnRyYWluKC4uLilcblxuICAgIGNyaXRlcmlvbjpcbiAgICAgIF90YXJnZXRfOiB0b3JjaC5ubi5Dcm9zc0VudHJvcHlMb3NzXG5cbiAgICBvcHRpbWl6ZXI6XG4gICAgICBfdGFyZ2V0XzogdG9yY2gub3B0aW0uQWRhbVxuICAgICAgcGFyYW1zOiAgIyBtb2RlbC5wYXJhbWV0ZXJzKClcbiAgICAgICAgX3Zhcl86IG1vZGVsLnBhcmFtZXRlcnNcbiAgICAgIGxyOiAwLjAyXG5cbiAgICBsb2FkZXJzOlxuICAgICAgdHJhaW46XG4gICAgICAgIF90YXJnZXRfOiB0b3JjaC51dGlscy5kYXRhLkRhdGFMb2FkZXJcbiAgICAgICAgZGF0YXNldDpcbiAgICAgICAgICBfdGFyZ2V0XzogY2F0YWx5c3QuY29udHJpYi5kYXRhc2V0cy5NTklTVFxuICAgICAgICAgIHJvb3Q6IGRhdGFcbiAgICAgICAgICB0cmFpbjogeVxuICAgICAgICBiYXRjaF9zaXplOiAzMlxuXG4gICAgICAmdmFsaWRfbG9hZGVyX2tleSB2YWxpZDpcbiAgICAgICAgJnZhbGlkX2xvYWRlclxuICAgICAgICBfdGFyZ2V0XzogdG9yY2gudXRpbHMuZGF0YS5EYXRhTG9hZGVyXG4gICAgICAgIGRhdGFzZXQ6XG4gICAgICAgICAgX3RhcmdldF86IGNhdGFseXN0LmNvbnRyaWIuZGF0YXNldHMuTU5JU1RcbiAgICAgICAgICByb290OiBkYXRhXG4gICAgICAgICAgdHJhaW46IG5cbiAgICAgICAgYmF0Y2hfc2l6ZTogMzJcblxuICAgIGNhbGxiYWNrczpcbiAgICAgIC0gJmFjY3VyYWN5X21ldHJpY1xuICAgICAgICBfdGFyZ2V0XzogY2F0YWx5c3QuY2FsbGJhY2tzLkFjY3VyYWN5Q2FsbGJhY2tcbiAgICAgICAgaW5wdXRfa2V5OiAqb3V0cHV0X2tleVxuICAgICAgICB0YXJnZXRfa2V5OiAqdGFyZ2V0X2tleVxuICAgICAgICB0b3BrOiBbMSwzLDVdXG4gICAgICAtIF90YXJnZXRfOiBjYXRhbHlzdC5jYWxsYmFja3MuUHJlY2lzaW9uUmVjYWxsRjFTdXBwb3J0Q2FsbGJhY2tcbiAgICAgICAgaW5wdXRfa2V5OiAqb3V0cHV0X2tleVxuICAgICAgICB0YXJnZXRfa2V5OiAqdGFyZ2V0X2tleVxuXG4gICAgbnVtX2Vwb2NoczogMVxuICAgIGxvZ2RpcjogbG9nc1xuICAgIHZhbGlkX2xvYWRlcjogKnZhbGlkX2xvYWRlcl9rZXlcbiAgICB2YWxpZF9tZXRyaWM6ICpsb3NzX2tleVxuICAgIG1pbmltaXplX3ZhbGlkX21ldHJpYzogeVxuICAgIHZlcmJvc2U6IHlcblxuICAjIOKJiCBzdGFnZSAyXG4gIC0gX2NhbGxfOiBldmFsdWF0ZV9sb2FkZXIgICMgcnVubmVyLmV2YWx1YXRlX2xvYWRlciguLi4pXG4gICAgbG9hZGVyOiAqdmFsaWRfbG9hZGVyXG4gICAgY2FsbGJhY2tzOlxuICAgICAgLSAqYWNjdXJhY3lfbWV0cmljXG5cbmBgYFxuXG5gYGBzaFxuY2F0YWx5c3QtcnVuIC0tY29uZmlnIGV4YW1wbGUueWFtbFxuYGBgXG48L3A+XG48L2RldGFpbHM+XG5cbiMjIyBUZXN0c1xuQWxsIENhdGFseXN0IGNvZGUsIGZlYXR1cmVzLCBhbmQgcGlwZWxpbmVzIFthcmUgZnVsbHkgdGVzdGVkXSguL3Rlc3RzKS5cbldlIGFsc28gaGF2ZSBvdXIgb3duIFtjYXRhbHlzdC1jb2Rlc3R5bGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NvZGVzdHlsZSkgYW5kIGEgY29ycmVzcG9uZGluZyBwcmUtY29tbWl0IGhvb2suXG5EdXJpbmcgdGVzdGluZywgd2UgdHJhaW4gYSB2YXJpZXR5IG9mIGRpZmZlcmVudCBtb2RlbHM6IGltYWdlIGNsYXNzaWZpY2F0aW9uLFxuaW1hZ2Ugc2VnbWVudGF0aW9uLCB0ZXh0IGNsYXNzaWZpY2F0aW9uLCBHQU5zLCBhbmQgbXVjaCBtb3JlLlxuV2UgdGhlbiBjb21wYXJlIHRoZWlyIGNvbnZlcmdlbmNlIG1ldHJpY3MgaW4gb3JkZXIgdG8gdmVyaWZ5XG50aGUgY29ycmVjdG5lc3Mgb2YgdGhlIHRyYWluaW5nIHByb2NlZHVyZSBhbmQgaXRzIHJlcHJvZHVjaWJpbGl0eS5cbkFzIGEgcmVzdWx0LCBDYXRhbHlzdCBwcm92aWRlcyBmdWxseSB0ZXN0ZWQgYW5kIHJlcHJvZHVjaWJsZVxuYmVzdCBwcmFjdGljZXMgZm9yIHlvdXIgZGVlcCBsZWFybmluZyByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQuXG5cbiMjIyBbQmxvZyBQb3N0c10oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmNvbS9wb3N0LylcblxuIyMjIFtUYWxrc10oaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmNvbS90YWxrLylcblxuXG4jIyBDb21tdW5pdHlcblxuIyMjIEFjY2VsZXJhdGVkIHdpdGggQ2F0YWx5c3RcblxuPGRldGFpbHM+XG48c3VtbWFyeT5SZXNlYXJjaCBQYXBlcnM8L3N1bW1hcnk+XG48cD5cblxuLSBbSGllcmFyY2hpY2FsIEF0dGVudGlvbiBmb3IgU2VudGltZW50IENsYXNzaWZpY2F0aW9uIHdpdGggVmlzdWFsaXphdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL25ldXJvbWF0aW9uL21sLXJlY2lwZS1oaWVyLWF0dGVudGlvbilcbi0gW1BlZGlhdHJpYyBCb25lIEFnZSBBc3Nlc3NtZW50XShodHRwczovL2dpdGh1Yi5jb20vbmV1cm9tYXRpb24vbWwtcmVjaXBlLWJvbmUtYWdlKVxuLSBbSW1wbGVtZW50YXRpb24gb2YgdGhlIHBhcGVyIFwiVGVsbCBNZSBXaGVyZSB0byBMb29rOiBHdWlkZWQgQXR0ZW50aW9uIEluZmVyZW5jZSBOZXR3b3JrXCJdKGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hiYWMvR0FJTilcbi0gW0ltcGxlbWVudGF0aW9uIG9mIHRoZSBwYXBlciBcIkZpbHRlciBSZXNwb25zZSBOb3JtYWxpemF0aW9uIExheWVyOiBFbGltaW5hdGluZyBCYXRjaCBEZXBlbmRlbmNlIGluIHRoZSBUcmFpbmluZyBvZiBEZWVwIE5ldXJhbCBOZXR3b3Jrc1wiXShodHRwczovL2dpdGh1Yi5jb20veXVra3lvL1B5VG9yY2gtRmlsdGVyUmVzcG9uc2VOb3JtYWxpemF0aW9uTGF5ZXIpXG4tIFtJbXBsZW1lbnRhdGlvbiBvZiB0aGUgcGFwZXIgXCJVdHRlcmFuY2UtbGV2ZWwgQWdncmVnYXRpb24gRm9yIFNwZWFrZXIgUmVjb2duaXRpb24gSW4gVGhlIFdpbGRcIl0oaHR0cHM6Ly9naXRodWIuY29tL3B0SmV4aW8vU3BlYWtlci1SZWNvZ25pdGlvbilcbi0gW0ltcGxlbWVudGF0aW9uIG9mIHRoZSBwYXBlciBcIkxvb2tpbmcgdG8gTGlzdGVuIGF0IHRoZSBDb2NrdGFpbCBQYXJ0eTogQSBTcGVha2VyLUluZGVwZW5kZW50IEF1ZGlvLVZpc3VhbCBNb2RlbCBmb3IgU3BlZWNoIFNlcGFyYXRpb25cIl0oaHR0cHM6Ly9naXRodWIuY29tL3ZpdHJpb2lsL1NwZWVjaC1TZXBhcmF0aW9uKVxuLSBbSW1wbGVtZW50YXRpb24gb2YgdGhlIHBhcGVyIFwiRVNSR0FOOiBFbmhhbmNlZCBTdXBlci1SZXNvbHV0aW9uIEdlbmVyYXRpdmUgQWR2ZXJzYXJpYWwgTmV0d29ya3NcIl0oaHR0cHM6Ly9naXRodWIuY29tL2xldmVyeGdyb3VwL2VzcmdhbilcblxuPC9wPlxuPC9kZXRhaWxzPlxuXG48ZGV0YWlscz5cbjxzdW1tYXJ5PkJsb2cgUG9zdHM8L3N1bW1hcnk+XG48cD5cblxuLSBbU29sdmluZyB0aGUgQ29ja3RhaWwgUGFydHkgUHJvYmxlbSB1c2luZyBQeVRvcmNoXShodHRwczovL21lZGl1bS5jb20vcHl0b3JjaC9hZGRyZXNzaW5nLXRoZS1jb2NrdGFpbC1wYXJ0eS1wcm9ibGVtLXVzaW5nLXB5dG9yY2gtMzA1ZmI3NDU2MGVhKVxuLSBbQmV5b25kIGZhc2hpb246IERlZXAgTGVhcm5pbmcgd2l0aCBDYXRhbHlzdCAoQ29uZmlnIEFQSSldKGh0dHBzOi8vZXZpbG1hcnRpYW5zLmNvbS9jaHJvbmljbGVzL2JleW9uZC1mYXNoaW9uLWRlZXAtbGVhcm5pbmctd2l0aC1jYXRhbHlzdClcbi0gW1R1dG9yaWFsIGZyb20gTm90ZWJvb2sgQVBJIHRvIENvbmZpZyBBUEkgKFJVKV0oaHR0cHM6Ly9naXRodWIuY29tL0Jla292bWkvU2VnbWVudGF0aW9uX3R1dG9yaWFsKVxuXG48L3A+XG48L2RldGFpbHM+XG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+Q29tcGV0aXRpb25zPC9zdW1tYXJ5PlxuPHA+XG5cbi0gW0thZ2dsZSBRdWljaywgRHJhdyEgRG9vZGxlIFJlY29nbml0aW9uIENoYWxsZW5nZV0oaHR0cHM6Ly9naXRodWIuY29tL25neGJhYy9LYWdnbGUtUXVpY2tEcmF3KSAtIDExdGggcGxhY2Vcbi0gW0NhdGFseXN0LlJMIC0gTmV1cklQUyAyMDE4OiBBSSBmb3IgUHJvc3RoZXRpY3MgQ2hhbGxlbmdlXShodHRwczovL2dpdGh1Yi5jb20vU2NpdGF0b3IvbmV1cmlwcy0xOC1wcm9zdGhldGljcy1jaGFsbGVuZ2UpIOKAkyAzcmQgcGxhY2Vcbi0gW0thZ2dsZSBHb29nbGUgTGFuZG1hcmsgMjAxOV0oaHR0cHM6Ly9naXRodWIuY29tL25neGJhYy9LYWdnbGUtR29vZ2xlLUxhbmRtYXJrLTIwMTkpIC0gMzB0aCBwbGFjZVxuLSBbaU1ldCBDb2xsZWN0aW9uIDIwMTkgLSBGR1ZDNl0oaHR0cHM6Ly9naXRodWIuY29tL25neGJhYy9LYWdnbGUtaU1ldCkgLSAyNHRoIHBsYWNlXG4tIFtJRCBSJkQgQW50aS1zcG9vZmluZyBDaGFsbGVuZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWd4aS9pZHJuZC1hbnRpLXNwb29maW5nLWNoYWxsZW5nZS1zb2x1dGlvbikgLSAxNHRoIHBsYWNlXG4tIFtOZXVySVBTIDIwMTk6IFJlY3Vyc2lvbiBDZWxsdWxhciBJbWFnZSBDbGFzc2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL25neGJhYy9LYWdnbGUtUmVjdXJzaW9uLUNlbGx1bGFyKSAtIDR0aCBwbGFjZVxuLSBbTUlDQ0FJIDIwMTk6IEF1dG9tYXRpYyBTdHJ1Y3R1cmUgU2VnbWVudGF0aW9uIGZvciBSYWRpb3RoZXJhcHkgUGxhbm5pbmcgQ2hhbGxlbmdlIDIwMTldKGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hiYWMvU3RydWN0U2VnMjAxOSlcbiAgKiAzcmQgcGxhY2Ugc29sdXRpb24gZm9yIGBUYXNrIDM6IE9yZ2FuLWF0LXJpc2sgc2VnbWVudGF0aW9uIGZyb20gY2hlc3QgQ1Qgc2NhbnNgXG4gICogYW5kIDR0aCBwbGFjZSBzb2x1dGlvbiBmb3IgYFRhc2sgNDogR3Jvc3MgVGFyZ2V0IFZvbHVtZSBzZWdtZW50YXRpb24gb2YgbHVuZyBjYW5jZXJgXG4tIFtLYWdnbGUgU2V2ZXJzdGVhbCBzdGVlbCBkZXRlY3Rpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9iYW1wczUzL2thZ2dsZS1zZXZlcnN0YWwpIC0gNXRoIHBsYWNlXG4tIFtSU05BIEludHJhY3JhbmlhbCBIZW1vcnJoYWdlIERldGVjdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL25neGJhYy9LYWdnbGUtUlNOQSkgLSA1dGggcGxhY2Vcbi0gW0FQVE9TIDIwMTkgQmxpbmRuZXNzIERldGVjdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0Jsb29kQXhlL0thZ2dsZS0yMDE5LUJsaW5kbmVzcy1EZXRlY3Rpb24pIOKAkyA3dGggcGxhY2Vcbi0gW0NhdGFseXN0LlJMIC0gTmV1cklQUyAyMDE5OiBMZWFybiB0byBNb3ZlIC0gV2FsayBBcm91bmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9TY2l0YXRvci9ydW4tc2tlbGV0b24tcnVuLWluLTNkKSDigJMgMm5kIHBsYWNlXG4tIFt4VmlldzIgRGFtYWdlIEFzc2Vzc21lbnQgQ2hhbGxlbmdlXShodHRwczovL2dpdGh1Yi5jb20vQmxvb2RBeGUveFZpZXcyLVNvbHV0aW9uKSAtIDNyZCBwbGFjZVxuXG5cbjwvcD5cbjwvZGV0YWlscz5cblxuPGRldGFpbHM+XG48c3VtbWFyeT5Ub29sa2l0czwvc3VtbWFyeT5cbjxwPlxuXG4tIFtDYXRhbHlzdC5STF0oaHR0cHM6Ly9naXRodWIuY29tL1NjaXRhdG9yL2NhdGFseXN0LXJsLWZyYW1ld29yaykg4oCTIEEgRGlzdHJpYnV0ZWQgRnJhbWV3b3JrIGZvciBSZXByb2R1Y2libGUgUkwgUmVzZWFyY2ggYnkgW1NjaXRhdG9yXShodHRwczovL2dpdGh1Yi5jb20vU2NpdGF0b3IpXG4tIFtDYXRhbHlzdC5DbGFzc2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2xhc3NpZmljYXRpb24pIC0gQ29tcHJlaGVuc2l2ZSBjbGFzc2lmaWNhdGlvbiBwaXBlbGluZSB3aXRoIFBzZXVkby1MYWJlbGluZyBieSBbQmFneGldKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWd4aSkgYW5kIFtQZGFuaWxvdl0oaHR0cHM6Ly9naXRodWIuY29tL3BkYW5pbG92KVxuLSBbQ2F0YWx5c3QuU2VnbWVudGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vY2F0YWx5c3QtdGVhbS9zZWdtZW50YXRpb24pIC0gU2VnbWVudGF0aW9uIHBpcGVsaW5lcyAtIGJpbmFyeSwgc2VtYW50aWMgYW5kIGluc3RhbmNlLCBieSBbQmFneGldKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWd4aSlcbi0gW0NhdGFseXN0LkRldGVjdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vZGV0ZWN0aW9uKSAtIEFuY2hvci1mcmVlIGRldGVjdGlvbiBwaXBlbGluZSBieSBbQXZpMjAxMWNsYXNzXShodHRwczovL2dpdGh1Yi5jb20vQXZpMjAxMWNsYXNzKSBhbmQgW1RlelJvbWFjSF0oaHR0cHM6Ly9naXRodWIuY29tL1RlelJvbWFjSClcbi0gW0NhdGFseXN0LkdBTl0oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vZ2FuKSAtIFJlcHJvZHVjaWJsZSBHQU5zIHBpcGVsaW5lcyBieSBbQXNtZWthbF0oaHR0cHM6Ly9naXRodWIuY29tL2FzbWVrYWwpXG4tIFtDYXRhbHlzdC5OZXVyb10oaHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vbmV1cm8pIC0gQnJhaW4gaW1hZ2UgYW5hbHlzaXMgcHJvamVjdCwgaW4gY29sbGFib3JhdGlvbiB3aXRoIFtUUmVORFMgQ2VudGVyXShodHRwczovL3RyZW5kc2NlbnRlci5vcmcpXG4tIFtNTENvbXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL21sY29tcCkg4oCTIERpc3RyaWJ1dGVkIERBRyBmcmFtZXdvcmsgZm9yIG1hY2hpbmUgbGVhcm5pbmcgd2l0aCBVSSBieSBbTGlnaHRmb3JldmVyXShodHRwczovL2dpdGh1Yi5jb20vbGlnaHRmb3JldmVyKVxuLSBbUHl0b3JjaCB0b29sYmVsdF0oaHR0cHM6Ly9naXRodWIuY29tL0Jsb29kQXhlL3B5dG9yY2gtdG9vbGJlbHQpIC0gUHlUb3JjaCBleHRlbnNpb25zIGZvciBmYXN0IFImRCBwcm90b3R5cGluZyBhbmQgS2FnZ2xlIGZhcm1pbmcgYnkgW0Jsb29kQXhlXShodHRwczovL2dpdGh1Yi5jb20vQmxvb2RBeGUpXG4tIFtIZWxwZXIgZnVuY3Rpb25zXShodHRwczovL2dpdGh1Yi5jb20vdGVybmF1cy9pZ2xvdmlrb3ZfaGVscGVyX2Z1bmN0aW9ucykgLSBBbiBhc3NvcnRlZCBjb2xsZWN0aW9uIG9mIGhlbHBlciBmdW5jdGlvbnMgYnkgW1Rlcm5hdXNdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZXJuYXVzKVxuLSBbQkVSVCBEaXN0aWxsYXRpb24gd2l0aCBDYXRhbHlzdF0oaHR0cHM6Ly9naXRodWIuY29tL2VsZXBoYW50bWlwdC9iZXJ0LWRpc3RpbGxhdGlvbikgYnkgW2VsZXBoYW50bWlwdF0oaHR0cHM6Ly9naXRodWIuY29tL2VsZXBoYW50bWlwdClcblxuPC9wPlxuPC9kZXRhaWxzPlxuXG5cbjxkZXRhaWxzPlxuPHN1bW1hcnk+T3RoZXI8L3N1bW1hcnk+XG48cD5cblxuLSBbQ2FtVmlkIFNlZ21lbnRhdGlvbiBFeGFtcGxlXShodHRwczovL2dpdGh1Yi5jb20vQmxvb2RBeGUvQ2F0YWx5c3QtQ2FtVmlkLVNlZ21lbnRhdGlvbi1FeGFtcGxlKSAtIEV4YW1wbGUgb2Ygc2VtYW50aWMgc2VnbWVudGF0aW9uIGZvciBDYW1WaWQgZGF0YXNldFxuLSBbTm90ZWJvb2sgQVBJIHR1dG9yaWFsIGZvciBzZWdtZW50YXRpb24gaW4gVW5kZXJzdGFuZGluZyBDbG91ZHMgZnJvbSBTYXRlbGxpdGUgSW1hZ2VzIENvbXBldGl0aW9uXShodHRwczovL3d3dy5rYWdnbGUuY29tL2FydGdvci9zZWdtZW50YXRpb24taW4tcHl0b3JjaC11c2luZy1jb252ZW5pZW50LXRvb2xzLylcbi0gW0NhdGFseXN0LlJMIC0gTmV1cklQUyAyMDE5OiBMZWFybiB0byBNb3ZlIC0gV2FsayBBcm91bmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9TY2l0YXRvci9sZWFybmluZy10by1tb3ZlLXN0YXJ0ZXIta2l0KSDigJMgc3RhcnRlciBraXRcbi0gW0NhdGFseXN0LlJMIC0gTmV1cklQUyAyMDE5OiBBbmltYWwtQUkgT2x5bXBpY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9TY2l0YXRvci9hbmltYWwtb2x5bXBpY3Mtc3RhcnRlci1raXQpIC0gc3RhcnRlciBraXRcbi0gW0lucmlhIFNlZ21lbnRhdGlvbiBFeGFtcGxlXShodHRwczovL2dpdGh1Yi5jb20vQmxvb2RBeGUvQ2F0YWx5c3QtSW5yaWEtU2VnbWVudGF0aW9uLUV4YW1wbGUpIC0gQW4gZXhhbXBsZSBvZiB0cmFpbmluZyBzZWdtZW50YXRpb24gbW9kZWwgZm9yIElucmlhIFNhdHRlbGl0ZSBTZWdtZW50YXRpb24gQ2hhbGxlbmdlXG4tIFtpZ2xvdmlrb3Zfc2VnbWVudGF0aW9uXShodHRwczovL2dpdGh1Yi5jb20vdGVybmF1cy9pZ2xvdmlrb3Zfc2VnbWVudGF0aW9uKSAtIFNlbWFudGljIHNlZ21lbnRhdGlvbiBwaXBlbGluZSB1c2luZyBDYXRhbHlzdFxuLSBbTG9nZ2luZyBDYXRhbHlzdCBSdW5zIHRvIENvbWV0XShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZHJpdmUvMVRhRzI3SGNNaDJqeVJLQkdzcVJYTGlHVWZzSFZ5Q3E2P3VzcD1zaGFyaW5nKSAtIEFuIGV4YW1wbGUgb2YgaG93IHRvIGxvZyBtZXRyaWNzLCBoeXBlcnBhcmFtZXRlcnMgYW5kIG1vcmUgZnJvbSBDYXRhbHlzdCBydW5zIHRvIFtDb21ldF0oaHR0cHM6Ly93d3cuY29tZXQubWwvc2l0ZS9kYXRhLXNjaWVudGlzdHMvKVxuXG48L3A+XG48L2RldGFpbHM+XG5cblxuU2VlIG90aGVyIHByb2plY3RzIGF0IFt0aGUgR2l0SHViIGRlcGVuZGVuY3kgZ3JhcGhdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L25ldHdvcmsvZGVwZW5kZW50cykuXG5cbklmIHlvdXIgcHJvamVjdCBpbXBsZW1lbnRzIGEgcGFwZXIsXG5hIG5vdGFibGUgdXNlLWNhc2UvdHV0b3JpYWwsIG9yIGEgS2FnZ2xlIGNvbXBldGl0aW9uIHNvbHV0aW9uLCBvclxuaWYgeW91ciBjb2RlIHNpbXBseSBwcmVzZW50cyBpbnRlcmVzdGluZyByZXN1bHRzIGFuZCB1c2VzIENhdGFseXN0LFxud2Ugd291bGQgYmUgaGFwcHkgdG8gYWRkIHlvdXIgcHJvamVjdCB0byB0aGUgbGlzdCBhYm92ZSFcbkRvIG5vdCBoZXNpdGF0ZSB0byBzZW5kIHVzIGEgUFIgd2l0aCBhIGJyaWVmIGRlc2NyaXB0aW9uIG9mIHRoZSBwcm9qZWN0IHNpbWlsYXIgdG8gdGhlIGFib3ZlLlxuXG4jIyMgQ29udHJpYnV0aW9uIEd1aWRlXG5cbldlIGFwcHJlY2lhdGUgYWxsIGNvbnRyaWJ1dGlvbnMuXG5JZiB5b3UgYXJlIHBsYW5uaW5nIHRvIGNvbnRyaWJ1dGUgYmFjayBidWctZml4ZXMsIHRoZXJlIGlzIG5vIG5lZWQgdG8gcnVuIHRoYXQgYnkgdXM7IGp1c3Qgc2VuZCBhIFBSLlxuSWYgeW91IHBsYW4gdG8gY29udHJpYnV0ZSBuZXcgZmVhdHVyZXMsIG5ldyB1dGlsaXR5IGZ1bmN0aW9ucywgb3IgZXh0ZW5zaW9ucyxcbnBsZWFzZSBvcGVuIGFuIGlzc3VlIGZpcnN0IGFuZCBkaXNjdXNzIGl0IHdpdGggdXMuXG5cbi0gUGxlYXNlIHNlZSB0aGUgW0NvbnRyaWJ1dGlvbiBHdWlkZV0oQ09OVFJJQlVUSU5HLm1kKSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbi0gQnkgcGFydGljaXBhdGluZyBpbiB0aGlzIHByb2plY3QsIHlvdSBhZ3JlZSB0byBhYmlkZSBieSBpdHMgW0NvZGUgb2YgQ29uZHVjdF0oQ09ERV9PRl9DT05EVUNULm1kKS5cblxuXG4jIyMgVXNlciBGZWVkYmFja1xuXG5XZSd2ZSBjcmVhdGVkIGBmZWVkYmFja0BjYXRhbHlzdC10ZWFtLmNvbWAgYXMgYW4gYWRkaXRpb25hbCBjaGFubmVsIGZvciB1c2VyIGZlZWRiYWNrLlxuXG4tIElmIHlvdSBsaWtlIHRoZSBwcm9qZWN0IGFuZCB3YW50IHRvIHRoYW5rIHVzLCB0aGlzIGlzIHRoZSByaWdodCBwbGFjZS5cbi0gSWYgeW91IHdvdWxkIGxpa2UgdG8gc3RhcnQgYSBjb2xsYWJvcmF0aW9uIGJldHdlZW4geW91ciB0ZWFtIGFuZCBDYXRhbHlzdCB0ZWFtIHRvIGltcHJvdmUgRGVlcCBMZWFybmluZyBSJkQsIHlvdSBhcmUgYWx3YXlzIHdlbGNvbWUuXG4tIElmIHlvdSBkb24ndCBsaWtlIEdpdGh1YiBJc3N1ZXMgYW5kIHByZWZlciBlbWFpbCwgZmVlbCBmcmVlIHRvIGVtYWlsIHVzLlxuLSBGaW5hbGx5LCBpZiB5b3UgZG8gbm90IGxpa2Ugc29tZXRoaW5nLCBwbGVhc2UsIHNoYXJlIGl0IHdpdGggdXMsIGFuZCB3ZSBjYW4gc2VlIGhvdyB0byBpbXByb3ZlIGl0LlxuXG5XZSBhcHByZWNpYXRlIGFueSB0eXBlIG9mIGZlZWRiYWNrLiBUaGFuayB5b3UhXG5cblxuIyMjIEFja25vd2xlZGdtZW50c1xuXG5TaW5jZSB0aGUgYmVnaW5uaW5nIG9mIHRoZSDQoWF0YWx5c3QgZGV2ZWxvcG1lbnQsIGEgbG90IG9mIHBlb3BsZSBoYXZlIGluZmx1ZW5jZWQgaXQgaW4gYSBsb3Qgb2YgZGlmZmVyZW50IHdheXMuXG5cbiMjIyMgQ2F0YWx5c3QuVGVhbVxuLSBbRG15dHJvIERvcm9zaGVua29dKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9kbXl0cm8tZG9yb3NoZW5rby0wNTY3MTExMmEvKSAoW2RpdHdvb10oaHR0cHM6Ly9naXRodWIuY29tL0RpdHdvbykpXG4tIFtFdWdlbmUgS2FjaGFuXShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4veWF1aGVuaS1rYWNoYW4vKSAoW2JhZ3hpXShodHRwczovL2dpdGh1Yi5jb20vYmFneGkpKVxuLSBbTmlraXRhIEJhbGFnYW5za3ldKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9uaWtpdGEtYmFsYWdhbnNreS01MDQxNGExOWEvKSAoW2VsZXBoYW50bWlwdF0oaHR0cHM6Ly9naXRodWIuY29tL2VsZXBoYW50bWlwdCkpXG4tIFtTZXJnZXkgS29sZXNuaWtvdl0oaHR0cHM6Ly93d3cuc2NpdGF0b3IuY29tLykgKFtzY2l0YXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL1NjaXRhdG9yKSlcblxuIyMjIyBDYXRhbHlzdC5Db250cmlidXRvcnNcbi0gW0FsZWtzZXkgR3JpbmNodWtdKGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9ncmluY2h1ay5hbGV4ZXkpIChbYWxleGdyaW5jaF0oaHR0cHM6Ly9naXRodWIuY29tL0FsZXhHcmluY2gpKVxuLSBbQWxla3NleSBTaGFiYW5vdl0oaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYWxla3NleS1zaGFiYW5vdi05NmIzNTExODkpIChbQWxla3NleVNoXShodHRwczovL2dpdGh1Yi5jb20vQWxla3NleVNoKSlcbi0gW0FsZXggR2F6aWV2XShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vYWxleGdhemlldi8pIChbZ2F6YXldKGh0dHBzOi8vZ2l0aHViLmNvbS9nYXpheSkpXG4tIFtBbmRyZXkgWmhhcmtvdl0oaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2FuZHJleS16aGFya292LTg1NTRhMTE1My8pIChbYXNtZWthbF0oaHR0cHM6Ly9naXRodWIuY29tL2FzbWVrYWwpKVxuLSBbQXJ0ZW0gWm9sa2luXShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vYXJ0ZW0tem9sa2luLWI1MTU1NTcxLykgKFthcnF1ZXN0cm9dKGh0dHBzOi8vZ2l0aHViLmNvbS9BcnF1ZXN0cm8pKVxuLSBbRGF2aWQgS3VyeWFraW5dKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9ka3VyeWFraW4vKSAoW2RrdXJ5YWtpbl0oaHR0cHM6Ly9naXRodWIuY29tL2RrdXJ5YWtpbikpXG4tIFtFdmdlbnkgU2VteW9ub3ZdKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9ld2FuLXNlbXlvbm92LykgKFtsaWdodGZvcmV2ZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWdodGZvcmV2ZXIpKVxuLSBbRXVnZW5lIEtodmVkY2hlbnlhXShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vY3Z0YWxrcy8pIChbYmxvb2RheGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9CbG9vZEF4ZSkpXG4tIFtJdmFuIFN0ZXBhbmVua29dKGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9pc3RlcGFuZW5rbylcbi0gW0p1bGlhIFNoZW5zaGluYV0oaHR0cHM6Ly9naXRodWIuY29tL2p1bGlhLXNoZW5zaGluYSkgKFtqdWxpYS1zaGVuc2hpbmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9qdWxpYS1zaGVuc2hpbmEpKVxuLSBbTmd1eWVuIFh1YW4gQmFjXShodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vYmFjLW5ndXllbi14dWFuLTcwMzQwYjY2LykgKFtuZ3hiYWNdKGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hiYWMpKVxuLSBbUm9tYW4gVGV6aWtvdl0oaHR0cDovL2xpbmtlZGluLmNvbS9pbi9yb21hbi10ZXppa292LykgKFtUZXpSb21hY0hdKGh0dHBzOi8vZ2l0aHViLmNvbS9UZXpSb21hY0gpKVxuLSBbVmFsZW50aW4gS2hydWxrb3ZdKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi92a2hydWxrb3YvKSAoW2tocnVsa292dl0oaHR0cHM6Ly9naXRodWIuY29tL0tocnVsa292VikpXG4tIFtWbGFkaW1pciBJZ2xvdmlrb3ZdKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9pZ2xvdmlrb3YvKSAoW3Rlcm5hdXNdKGh0dHBzOi8vZ2l0aHViLmNvbS90ZXJuYXVzKSlcbi0gW1ZzZXZvbG9kIFBvbGV0YWV2XShodHRwczovL2xpbmtlZGluLmNvbS9pbi92c2V2b2xvZC1wb2xldGFldi00NjgwNzExNjUpIChbaGV4ZmFrZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oZXhmYWtlcikpXG4tIFtZdXJ5IEthc2huaXRza3ldKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9rYXNobml0c2tpeS8pIChbeW9ya29dKGh0dHBzOi8vZ2l0aHViLmNvbS9Zb3JrbykpXG5cblxuIyMjIFRydXN0ZWQgYnlcbi0gW0F3ZWNvbV0oaHR0cHM6Ly93d3cuYXdlY29tLmNvbSlcbi0gUmVzZWFyY2hlcnMgYXQgdGhlIFtDZW50ZXIgZm9yIFRyYW5zbGF0aW9uYWwgUmVzZWFyY2ggaW4gTmV1cm9pbWFnaW5nIGFuZCBEYXRhIFNjaWVuY2UgKFRSZU5EUyldKGh0dHBzOi8vdHJlbmRzY2VudGVyLm9yZylcbi0gW0RlZXAgTGVhcm5pbmcgU2Nob29sXShodHRwczovL2VuLmRsc2Nob29sLm9yZylcbi0gUmVzZWFyY2hlcnMgYXQgW0Vtb3J5IFVuaXZlcnNpdHldKGh0dHBzOi8vd3d3LmVtb3J5LmVkdSlcbi0gW0V2aWwgTWFydGlhbnNdKGh0dHBzOi8vZXZpbG1hcnRpYW5zLmNvbSlcbi0gUmVzZWFyY2hlcnMgYXQgdGhlIFtHZW9yZ2lhIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5XShodHRwczovL3d3dy5nYXRlY2guZWR1KVxuLSBSZXNlYXJjaGVycyBhdCBbR2VvcmdpYSBTdGF0ZSBVbml2ZXJzaXR5XShodHRwczovL3d3dy5nc3UuZWR1KVxuLSBbSGVsaW9zXShodHRwOi8vaGVsaW9zLnRvKVxuLSBbSFBDRCBMYWJdKGh0dHBzOi8vd3d3LmhwY2RsYWIuY29tKVxuLSBbaUZhcm1dKGh0dHBzOi8vaWZhcm1wcm9qZWN0LmNvbSlcbi0gW0tpbm9wbGFuXShodHRwOi8va2lub3BsYW4uaW8vKVxuLSBSZXNlYXJjaGVycyBhdCB0aGUgW01vc2NvdyBJbnN0aXR1dGUgb2YgUGh5c2ljcyBhbmQgVGVjaG5vbG9neV0oaHR0cHM6Ly9taXB0LnJ1L2VuZ2xpc2gvKVxuLSBbTmV1cm9tYXRpb25dKGh0dHBzOi8vbmV1cm9tYXRpb24uaW8pXG4tIFtQb3RlaGEgTGFic10oaHR0cHM6Ly9wb3RlaGFsYWJzLmNvbS9lbi8pXG4tIFtQcm92ZWN0dXNdKGh0dHBzOi8vcHJvdmVjdHVzLmNvbSlcbi0gUmVzZWFyY2hlcnMgYXQgdGhlIFtTa29sa292byBJbnN0aXR1dGUgb2YgU2NpZW5jZSBhbmQgVGVjaG5vbG9neV0oaHR0cHM6Ly93d3cuc2tvbHRlY2gucnUvZW4pXG4tIFtTb2Z0Q29uc3RydWN0XShodHRwczovL3d3dy5zb2Z0Y29uc3RydWN0LmlvLylcbi0gUmVzZWFyY2hlcnMgYXQgW1RpbmtvZmZdKGh0dHBzOi8vd3d3LnRpbmtvZmYucnUvZW5nLylcbi0gUmVzZWFyY2hlcnMgYXQgW1lhbmRleC5SZXNlYXJjaF0oaHR0cHM6Ly9yZXNlYXJjaC55YW5kZXguY29tKVxuXG5cbiMjIyBDaXRhdGlvblxuXG5QbGVhc2UgdXNlIHRoaXMgYmlidGV4IGlmIHlvdSB3YW50IHRvIGNpdGUgdGhpcyByZXBvc2l0b3J5IGluIHlvdXIgcHVibGljYXRpb25zOlxuXG4gICAgQG1pc2N7Y2F0YWx5c3QsXG4gICAgICAgIGF1dGhvciA9IHtLb2xlc25pa292LCBTZXJnZXl9LFxuICAgICAgICB0aXRsZSA9IHtDYXRhbHlzdCAtIEFjY2VsZXJhdGVkIGRlZXAgbGVhcm5pbmcgUiZEfSxcbiAgICAgICAgeWVhciA9IHsyMDE4fSxcbiAgICAgICAgcHVibGlzaGVyID0ge0dpdEh1Yn0sXG4gICAgICAgIGpvdXJuYWwgPSB7R2l0SHViIHJlcG9zaXRvcnl9LFxuICAgICAgICBob3dwdWJsaXNoZWQgPSB7XFx1cmx7aHR0cHM6Ly9naXRodWIuY29tL2NhdGFseXN0LXRlYW0vY2F0YWx5c3R9fSxcbiAgICB9XG5cblxuIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL0FuZHJld0xhcHRldi9jYXRhbHlzdF9wZG0iLA==
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL0FuZHJld0xhcHRldi9jYXRhbHlzdF9wZG0iLA==
ICAgICJrZXl3b3JkcyI6ICJNYWNoaW5lIExlYXJuaW5nLERpc3RyaWJ1dGVkIENvbXB1dGluZyxEZWVwIExlYXJuaW5nLFJlaW5mb3JjZW1lbnQgTGVhcm5pbmcsQ29tcHV0ZXIgVmlzaW9uLE5hdHVyYWwgTGFuZ3VhZ2UgUHJvY2Vzc2luZyxSZWNvbW1lbmRhdGlvbiBTeXN0ZW1zLEluZm9ybWF0aW9uIFJldHJpZXZhbCxQeVRvcmNoIiw=
ICAgICJsaWNlbnNlIjogIkFwYWNoZSBMaWNlbnNlIDIuMCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImNhdGFseXN0LXBkbSIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvY2F0YWx5c3QtcGRtLyIs
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvY2F0YWx5c3QtcGRtLyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0L2lzc3VlcyIs
ICAgICAgIkRvY3VtZW50YXRpb24iOiAiaHR0cHM6Ly9jYXRhbHlzdC10ZWFtLmdpdGh1Yi5pby9jYXRhbHlzdCIs
ICAgICAgIkRvd25sb2FkIjogImh0dHBzOi8vZ2l0aHViLmNvbS9BbmRyZXdMYXB0ZXYvY2F0YWx5c3RfcGRtIiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9BbmRyZXdMYXB0ZXYvY2F0YWx5c3RfcGRtIiw=
ICAgICAgIlNvdXJjZSBDb2RlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbHlzdC10ZWFtL2NhdGFseXN0Ig==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvY2F0YWx5c3QtcGRtLzIyLjQuMS8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgIm51bXB5ICg+PTEuMTgpIiw=
ICAgICAgInRvcmNoICg+PTEuNC4wKSIs
ICAgICAgImFjY2VsZXJhdGUgKD49MC41LjEpIiw=
ICAgICAgImh5ZHJhLXNsYXllciAoPj0wLjQuMCkiLA==
ICAgICAgInRxZG0gKD49NC4zMy4wKSIs
ICAgICAgInRlbnNvcmJvYXJkWCAoPj0yLjEuMCkiLA==
ICAgICAgImltYWdlaW8gKD49Mi41LjApIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgIm9wZW5jdi1weXRob24taGVhZGxlc3MgKD49NC4yLjAuMzIpIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgInNjaWtpdC1pbWFnZSAoPDAuMTkuMCw+PTAuMTYuMSkgOyBleHRyYSA9PSAnYWxsJyIs
ICAgICAgInRvcmNodmlzaW9uICg+PTAuNS4wKSA7IGV4dHJhID09ICdhbGwnIiw=
ICAgICAgIlBpbGxvdyAoPj02LjEpIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgInJlcXVlc3RzIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgInNjaXB5ICg+PTEuNC4xKSA7IGV4dHJhID09ICdhbGwnIiw=
ICAgICAgIm1hdHBsb3RsaWIgKD49My4xLjApIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgInBhbmRhcyAoPj0xLjAuMCkgOyBleHRyYSA9PSAnYWxsJyIs
ICAgICAgInNjaWtpdC1sZWFybiAoPj0xLjApIDsgZXh0cmEgPT0gJ2FsbCciLA==
ICAgICAgIm9wdHVuYSAoPj0yLjAuMCkgOyBleHRyYSA9PSAnYWxsJyIs
ICAgICAgImNvbWV0LW1sIDsgZXh0cmEgPT0gJ2NvbWV0JyIs
ICAgICAgImltYWdlaW8gKD49Mi41LjApIDsgZXh0cmEgPT0gJ2N2JyIs
ICAgICAgIm9wZW5jdi1weXRob24taGVhZGxlc3MgKD49NC4yLjAuMzIpIDsgZXh0cmEgPT0gJ2N2JyIs
ICAgICAgInNjaWtpdC1pbWFnZSAoPDAuMTkuMCw+PTAuMTYuMSkgOyBleHRyYSA9PSAnY3YnIiw=
ICAgICAgInRvcmNodmlzaW9uICg+PTAuNS4wKSA7IGV4dHJhID09ICdjdiciLA==
ICAgICAgIlBpbGxvdyAoPj02LjEpIDsgZXh0cmEgPT0gJ2N2JyIs
ICAgICAgInJlcXVlc3RzIDsgZXh0cmEgPT0gJ2N2JyIs
ICAgICAgImRlZXBzcGVlZCAoPj0wLjQuMCkgOyBleHRyYSA9PSAnZGVlcHNwZWVkJyIs
ICAgICAgInB5dGVzdCA7IGV4dHJhID09ICdkZXYnIiw=
ICAgICAgInNwaGlueCAoPT0yLjIuMSkgOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgIkppbmphMiAoPD0zLjAuMykgOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgImRvY3V0aWxzICg9PTAuMTcuMSkgOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgIm1vY2sgKD09My4wLjUpIDsgZXh0cmEgPT0gJ2RldiciLA==
ICAgICAgImNhdGFseXN0LWNvZGVzdHlsZSAoPT0yMS4wOS4yKSA7IGV4dHJhID09ICdkZXYnIiw=
ICAgICAgImJsYWNrICg9PTIxLjhiMCkgOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgImNsaWNrICg8PTguMC40KSA7IGV4dHJhID09ICdkZXYnIiw=
ICAgICAgImNhdGFseXN0LXNwaGlueC10aGVtZSAoPT0xLjIuMCkgOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgInRvbWxraXQgKD09MC43LjIpIDsgZXh0cmEgPT0gJ2RldiciLA==
ICAgICAgInByZS1jb21taXQgKD09Mi4xMy4wKSA7IGV4dHJhID09ICdkZXYnIiw=
ICAgICAgInBhdGggOyBleHRyYSA9PSAnZGV2JyIs
ICAgICAgInNjaXB5ICg+PTEuNC4xKSA7IGV4dHJhID09ICdtbCciLA==
ICAgICAgIm1hdHBsb3RsaWIgKD49My4xLjApIDsgZXh0cmEgPT0gJ21sJyIs
ICAgICAgInBhbmRhcyAoPj0xLjAuMCkgOyBleHRyYSA9PSAnbWwnIiw=
ICAgICAgInNjaWtpdC1sZWFybiAoPj0xLjApIDsgZXh0cmEgPT0gJ21sJyIs
ICAgICAgIm1sZmxvdyA7IGV4dHJhID09ICdtbGZsb3cnIiw=
ICAgICAgIm5lcHR1bmUtY2xpZW50ICg+PTAuOS44KSA7IGV4dHJhID09ICduZXB0dW5lJyIs
ICAgICAgIm9ubnggOyBleHRyYSA9PSAnb25ueCciLA==
ICAgICAgIm9ubnhydW50aW1lIDsgZXh0cmEgPT0gJ29ubngnIiw=
ICAgICAgIm9ubnggOyBleHRyYSA9PSAnb25ueC1ncHUnIiw=
ICAgICAgIm9ubnhydW50aW1lLWdwdSA7IGV4dHJhID09ICdvbm54LWdwdSciLA==
ICAgICAgIm9wdHVuYSAoPj0yLjAuMCkgOyBleHRyYSA9PSAnb3B0dW5hJyIs
ICAgICAgInRvcmNoLXRiLXByb2ZpbGVyIDsgZXh0cmEgPT0gJ3Byb2ZpbGVyJyIs
ICAgICAgIndhbmRiIDsgZXh0cmEgPT0gJ3dhbmRiJyI=
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjcuMCIs
ICAgICJzdW1tYXJ5IjogIkNhdGFseXN0IGZvcmsgY29tcGF0aWJsZSB3aXRoIFBETSIs
ICAgICJ2ZXJzaW9uIjogIjIyLjQuMSIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNzU2NTE3Miw=
ICAicmVsZWFzZXMiOiB7
ICAgICIyMi40LjEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NTE0MmFmOGRjZjE4YzIyNDg4ZGYyMmFkNjQ3MDNlNjBlZmY2YTFkNTc4Zjk0OWEwZjMzZWM0MTdkODQ5ZTY4Iiw=
ICAgICAgICAgICJtZDUiOiAiOTYzNzU3M2YyY2I3NjA3ZjZhYWMxYjUyZGI4ZGE0ZWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZmEzYTZiMWZlYTM5YzU5MzFkMDRiMDE0MDMzYzQ0NThlYjdlMTc3NTliNzQxNWMzNTIwMzllZGEzMWRjNzE4OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiY2F0YWx5c3RfcGRtLTIyLjQuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5NjM3NTczZjJjYjc2MDdmNmFhYzFiNTJkYjhkYTRlYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LjAiLA==
ICAgICAgICAic2l6ZSI6IDQ0Njg2NSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wM1QyMTozMDo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wM1QyMTozMDo1My42NDU0MDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81NS8xNC8yYWY4ZGNmMThjMjI0ODhkZjIyYWQ2NDcwM2U2MGVmZjZhMWQ1NzhmOTQ5YTBmMzNlYzQxN2Q4NDllNjgvY2F0YWx5c3RfcGRtLTIyLjQuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlN2QyZTcxYmY5ZWFiYjdkZGFiOGQyNmUyZGViNTM2YTFiN2ViNjRkM2U0NjQxMzQyNGViZWVlOWUxNzllYzJlIiw=
ICAgICAgICAgICJtZDUiOiAiZGEzOTIwODRlMTk1YjNiYTNjODhmZmE3NWZkMTAyYjgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTNjYTcyNGNiZjViNjMxY2JhNDA5MzA3ZDUxMDNjMjI5NWUzNDM0MWZlNjgyNzJkOTgyZDZjNWE0ZWM4YmEwYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiY2F0YWx5c3RfcGRtLTIyLjQuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkYTM5MjA4NGUxOTViM2JhM2M4OGZmYTc1ZmQxMDJiOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LjAiLA==
ICAgICAgICAic2l6ZSI6IDMyMDk5MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wM1QyMTozMDo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wM1QyMTozMDo1Ny4yOTgxMjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lNy9kMi9lNzFiZjllYWJiN2RkYWI4ZDI2ZTJkZWI1MzZhMWI3ZWI2NGQzZTQ2NDEzNDI0ZWJlZWU5ZTE3OWVjMmUvY2F0YWx5c3RfcGRtLTIyLjQuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNTUxNDJhZjhkY2YxOGMyMjQ4OGRmMjJhZDY0NzAzZTYwZWZmNmExZDU3OGY5NDlhMGYzM2VjNDE3ZDg0OWU2OCIs
ICAgICAgICAibWQ1IjogIjk2Mzc1NzNmMmNiNzYwN2Y2YWFjMWI1MmRiOGRhNGVjIiw=
ICAgICAgICAic2hhMjU2IjogImZhM2E2YjFmZWEzOWM1OTMxZDA0YjAxNDAzM2M0NDU4ZWI3ZTE3NzU5Yjc0MTVjMzUyMDM5ZWRhMzFkYzcxODki
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImNhdGFseXN0X3BkbS0yMi40LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiOTYzNzU3M2YyY2I3NjA3ZjZhYWMxYjUyZGI4ZGE0ZWMiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNy4wIiw=
ICAgICAgInNpemUiOiA0NDY4NjUs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDQtMDNUMjE6MzA6NTMiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDQtMDNUMjE6MzA6NTMuNjQ1NDAxWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNTUvMTQvMmFmOGRjZjE4YzIyNDg4ZGYyMmFkNjQ3MDNlNjBlZmY2YTFkNTc4Zjk0OWEwZjMzZWM0MTdkODQ5ZTY4L2NhdGFseXN0X3BkbS0yMi40LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZTdkMmU3MWJmOWVhYmI3ZGRhYjhkMjZlMmRlYjUzNmExYjdlYjY0ZDNlNDY0MTM0MjRlYmVlZTllMTc5ZWMyZSIs
ICAgICAgICAibWQ1IjogImRhMzkyMDg0ZTE5NWIzYmEzYzg4ZmZhNzVmZDEwMmI4Iiw=
ICAgICAgICAic2hhMjU2IjogImUzY2E3MjRjYmY1YjYzMWNiYTQwOTMwN2Q1MTAzYzIyOTVlMzQzNDFmZTY4MjcyZDk4MmQ2YzVhNGVjOGJhMGEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImNhdGFseXN0X3BkbS0yMi40LjEudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZGEzOTIwODRlMTk1YjNiYTNjODhmZmE3NWZkMTAyYjgiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNy4wIiw=
ICAgICAgInNpemUiOiAzMjA5OTAs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDQtMDNUMjE6MzA6NTciLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDQtMDNUMjE6MzA6NTcuMjk4MTIwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZTcvZDIvZTcxYmY5ZWFiYjdkZGFiOGQyNmUyZGViNTM2YTFiN2ViNjRkM2U0NjQxMzQyNGViZWVlOWUxNzllYzJlL2NhdGFseXN0X3BkbS0yMi40LjEudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
