ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiU2ltb25lIERlcG9udGkiLA==
ICAgICJhdXRob3JfZW1haWwiOiAic2ltb25lLmRlcG9udGlAYWJzdHJhY3QuaXQiLA==
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkZyYW1ld29yayA6OiBCdWlsZG91dCIs
ICAgICAgIkZyYW1ld29yayA6OiBEamFuZ28iLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEJTRCBMaWNlbnNlIiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IEJ1aWxkIFRvb2xzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBjb250ZW50czo6XG5cblRoaXMgcmVjaXBlIGFsbG93cyB5b3UgdG8gc2V0dXAgYSBEamFuZ28gcHJvamVjdCB0aHJvdWdoIGB6Yy5idWlsZG91dGBfLlxuXG5Vc2FnZVxuKioqKipcblxuSW4gb3JkZXIgdG8gdXNlIHRoaXMgcmVjaXBlLCBjcmVhdGUgYSBidWlsZG91dCBhcyBmb2xsb3dzOjpcblxuICAgIFtidWlsZG91dF1cbiAgICBwYXJ0cyA9XG4gICAgICAgIG15cHJvamVjdFxuXG4gICAgW215cHJvamVjdF1cbiAgICByZWNpcGUgPSBkamMucmVjaXBlMlxuXG5BbmQgdGhlbiBjcmVhdGUgYSBweXRob24gbW9kdWxlIGluIGBgc2l0ZXMvPHBhcnRfbmFtZT5fc2l0ZV9jb25maWdgYFxuY29udGFpbmluZyB0aGUgYGBzZXR0aW5ncy5weWBgIGZpbGUuXG5cblRoZSBidWlsZG91dCB3aWxsIHRha2UgY2FyZSBvZiBjcmVhdGluZyBhIG1hbmFnZSBzY3JpcHQgYXQgYGBiaW4vZGphbmdvYGBcbmFuZCBhICpXU0dJKiBhcHAgdG8gc2VydmUgdGhlIHByb2plY3QgaW4gcHJvZHVjdGlvblxuYXQgYGBwYXJ0cy9teXByb2plY3QvbXlwcm9qZWN0X3BhcnRfc2l0ZS93c2dpLnB5YGAuXG5cbkluIG91ciBleGFtcGxlLCB0aGlzIHdpbGwgcmVzdWx0IGluIHRoZSBmb2xsb3dpbmcgZmlsZSBzdHJ1Y3R1cmU6OlxuXG4gICAgPGJ1aWxkb3V0X3Jvb3Q+XG4gICAgfFxuICAgIHwtIGJpblxuICAgIHwgIHxcbiAgICB8ICB8LSAuLi5cbiAgICB8ICB8XG4gICAgfCAgfC0gZGphbmdvICMgdGhlIG1hbmFnZS5weSBzY3JpcHRcbiAgICB8XG4gICAgfC0gLi4uXG4gICAgfFxuICAgIHwtIHBhcnRzXG4gICAgfCAgfFxuICAgIHwgIHwtIG15cHJvamVjdFxuICAgIHwgICAgIHxcbiAgICB8ICAgICB8LSBteXByb2plY3RfcGFydF9zaXRlICMgcHV0IHRoaXMgb24gUFlUSE9OUEFUSCB3aGVuIHNlcnZpbmcgdmlhIFdTR0lcbiAgICB8ICAgICAgICB8XG4gICAgfCAgICAgICAgfC0gX19pbml0X18ucHlcbiAgICB8ICAgICAgICB8XG4gICAgfCAgICAgICAgfC0gLi4uXG4gICAgfCAgICAgICAgfFxuICAgIHwgICAgICAgIHwtIHdzZ2kucHkgIyBXU0dJIGFwcCBhbmQgcGFzdGVyIGFwcCBmYWN0b3J5XG4gICAgfFxuICAgIHwtIC4uLlxuICAgIHxcbiAgICB8LSBzaXRlc1xuICAgIHwgIHxcbiAgICB8ICB8LSBteXByb2plY3Rfc2l0ZV9jb25maWdcbiAgICB8ICAgICB8XG4gICAgfCAgICAgfC0gX19pbml0X18ucHkgIyB2b2lkXG4gICAgfCAgICAgfFxuICAgIHwgICAgIHwtIHNldHRpbmdzLnB5ICMgeW91ciBzZXR0aW5ncyBoZXJlXG4gICAgfFxuICAgIHwtIC4uLlxuXG5Gb3IgYWxsIHRoZSBvcHRpb25zIGFuZCBkZXRhaWxlZCBkb2N1bWVudGF0aW9uLCBzZWUgYmVsb3cuXG5cblJ1bm5pbmcgdGVzdHNcbioqKioqKioqKioqKipcblxuVGhlIGBgcmVjaXBlLnJzdGBgIGZpbGUgbG9jYXRlZCB3aXRoaW4gdGhlIHBhY2thZ2UgYWxzbyBhY3RzIGFzIG1haW4gZG9jdGVzdC5cblxuVG8gcnVuIHRoZSB0ZXN0cywgY2hlY2sgb3V0IHRoZSBzb3VyY2UsXG5hbmQgdGhlbiBib290c3RyYXAgYW5kIHJ1biB0aGUgYnVpbGRvdXQ6OlxuXG4gICAgJCBweXRob24gYm9vdHN0cmFwLnB5XG4gICAgJCBiaW4vYnVpbGRvdXRcblxuSWYgaXQncyBhIGZyZXNoIGNoZWNrb3V0IHlvdSBzaG91bGQgYWxzbyBydW46OlxuXG4gICAgJCAuL21ha2VjYWNoZS5zaFxuXG5UaGlzIGNvbW1hbmQgc2hvdWxkIGJlIHJ1biBqdXN0IG9uY2UgYWZ0ZXIgY2hlY2tpbmcgb3V0OlxuaXQgd2lsbCBkb3dubG9hZCBjZXJ0YWluIHBhY2thZ2VzIG5lZWRlZCBmb3IgdGhlIHRlc3RzXG5zbyB0aGF0IHRoZXkgY2FuIHJ1biBvZmZsaW5lLlxuXG5JdCBzaG91bGQgYWxzbyBiZSByZS1ydW4gaWYgYGBtYWtlY2FjaGUuc2hgYCBoYXMgY2hhbmdlZC5cblxuVGhlbiB5b3UgY2FuIHJ1biB0aGUgdGVzdHMgdXNpbmc6OlxuXG4gICAgJCBiaW4vdGVzdFxuXG5MaW5rc1xuKioqKipcblxuLi4gaW1hZ2U6OiBodHRwczovL3NlY3VyZS50cmF2aXMtY2kub3JnL2Fic3RyYWN0LW9wZW4tc29sdXRpb25zL2RqYy5yZWNpcGUyLnBuZ1xuXG4tIENvZGUgcmVwb3NpdG9yeTogaHR0cDovL2dpdGh1Yi5jb20vYWJzdHJhY3Qtb3Blbi1zb2x1dGlvbnMvZGpjLnJlY2lwZTJcbi0gRGlzY3Vzc2lvbnMgYXQgaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9ncm91cC9kamNyZWNpcGVcbi0gQ29tbWVudHMgYW5kIHF1ZXN0aW9ucyBhdCBpbmZvQGFic3RyYWN0Lml0XG5cbi4uIF9gemMuYnVpbGRvdXRgOiBodHRwOi8vd3d3LmJ1aWxkb3V0Lm9yZy9cblxuXG5EZXRhaWxlZCBkb2N1bWVudGF0aW9uXG4qKioqKioqKioqKioqKioqKioqKioqXG5cbkJhc2ljIHVzYWdlXG49PT09PT09PT09PVxuXG5UaGUgYmFzaWMgdGhpbmcgeW91IGhhdmUgdG8gZG8gaW4gb3JkZXIgdG8gaGF2ZSBhIERqYW5nb18gc2l0ZVxuaXMgdG8gcHJvdmlkZSBpdCBzb21lIGNvbmZpZ3VyYXRpb24uXG5cbkluIERqYW5nb18sIGNvbmZpZ3VyYXRpb24gaXMgYWNoaWV2ZWQgYnkgY3JlYXRpbmcgYSBzZXQgb2YgZ2xvYmFsIHZhcmlhYmxlc1xuaW4gYSBgc2V0dGluZ3MgbW9kdWxlYF8gYW5kIGxldHRpbmcgRGphbmdvXyBrbm93IHdoaWNoIGlzIHRoZVxuc2V0dGluZ3MgbW9kdWxlIHRvIHVzZS5cblxuVGhpcyByZWNpcGUsIGluIGl0cyBiYXNpYyBmdW5jdGlvbmluZywgYWRvcHRzIGEgKmNvbnZlbnRpb24gb3ZlciBjb25maWd1cmF0aW9uKlxuYXBwcm9hY2ggdG8gdGhlIG1hdHRlci5cblxuLi4gbm90ZTo6XG4gICBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIHVzZSBvdGhlciBhcHByb2FjaGVzLFxuICAgYXMgZXhwbGFpbmVkIGluIGBFeHRlcm5hbCBzZXR0aW5nc2BfLlxuXG5UaGVyZWZvcmUsIGFsbCB0aGUgY29uZmlndXJhdGlvbnMgZm9yIGFsbCB0aGUgRGphbmdvXyBwYXJ0cyBpbiB5b3VyIGJ1aWxkb3V0ICoqbXVzdCoqIGJlIHBsYWNlcyB3aXRoaW4gYSBgYHNpdGVzYGAgZGlyZWN0b3J5IGxvY2F0ZWQgaW4geW91ciBidWlsZG91dCByb290LlxuXG5XaXRoaW4gdGhpcyBkaXJlY3RvcnksIGEgKnB5dGhvbiBtb2R1bGUqIChjcmVhdGUgYW4gZW1wdHkgYGBfX2luaXRfXy5weWBgISlcbm5hbWVkIGBgPHBhcnRfbmFtZT5fc2l0ZV9jb25maWdgYCBtdXN0IGJlIGNyZWF0ZWQsIGFuZCB3aXRoaW4gaXQsXG5hIGBgc2V0dGluZ3MucHlgYCBmaWxlIGNvbnRhaW5pbmcgeW91ciBzZXR0aW5ncyBtdXN0IGJlIHBsYWNlZC5cblxuRm9yIGV4YW1wbGUsIGlmIG91ciBEamFuZ29fIHBhcnQgaXMgbmFtZWQgYGBteXByb2plY3RgYFxuKHdlIGFyZSByZWZlcnJpbmcgdG8gdGhlIGJ1aWxkb3V0IHBhcnQgbmFtZSBoZXJlKSxcbndlIHdvdWxkIGRvIHRoZSBmb2xsb3dpbmc6OlxuXG4gICAgPj4+IG1rZGlyKCdzaXRlcycpXG4gICAgPj4+IG1rZGlyKCdzaXRlcycsICdteXByb2plY3Rfc2l0ZV9jb25maWcnKVxuICAgID4+PiB3cml0ZSgnc2l0ZXMnLCAnbXlwcm9qZWN0X3NpdGVfY29uZmlnJywgJ19faW5pdF9fLnB5JyxcbiAgICAuLi4gICAgICAgJyNcXG4nKVxuICAgID4+PiB3cml0ZSgnc2l0ZXMnLCAnbXlwcm9qZWN0X3NpdGVfY29uZmlnJywgJ3NldHRpbmdzLnB5JywgJycnXG4gICAgLi4uIFNQQU0gPSAnZWdncydcbiAgICAuLi4gJycnKVxuXG5Pa2F5LCB0aGF0IHNldHRpbmdzIGZpbGUgaXMgbm90IGV4YWN0bHkgYSBnb29kIG9uZSxcbmJ1dCBpdCB3aWxsIHN1ZmZpY2UgZm9yIG5vdyBhcyBhbiBleGFtcGxlLlxuXG5MZXQncyBub3cgY3JlYXRlIG91ciBidWlsZG91dCBhbmQgcnVuIGl0OjpcblxuICAgID4+PiB3cml0ZSgnYnVpbGRvdXQuY2ZnJywgJycnXG4gICAgLi4uIFtidWlsZG91dF1cbiAgICAuLi4gcGFydHMgPVxuICAgIC4uLiAgICAgbXlwcm9qZWN0XG4gICAgLi4uXG4gICAgLi4uIFtteXByb2plY3RdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuXG5BcyB5b3UgY2FuIHNlZSwgdGhlIHBhcnQgZm9yIG5vdyBjb250YWlucyBvbmx5IHRoZSByZWNpcGUsIGFzIGl0IHdpbGwgd29ya1xuKm91dCBvZiB0aGUgYm94KiB3aXRob3V0IGZ1cnRoZXIgbWVkZGxpbmcgaWYgd2UgYWRoZXJlIHRvIGl0cyBjb252ZW50aW9ucy5cblxuTGV0J3Mgc2VlIHdoYXQgdGhlIGJ1aWxkb3V0IGRpZC4gVG8gc3RhcnQgd2l0aCwgaXQgY3JlYXRlZCBhIGBgZGphbmdvYGAgYmluYXJ5XG53aXRoaW4gYGBiaW5gYCB0aGF0IGlzIHRoZSBlcXVpdmFsZW50IG9mIERqYW5nbydzIGBgbWFuYWdlLnB5YGBcbih3aGljaCBtZWFucyB5b3UgY2FuIGludm9rZSBpdCBleGFjdGx5IGxpa2UgeW91IHdvdWxkIHdpdGggYGBtYW5hZ2UucHlgYCk6OlxuXG4gICAgPj4+IGxzKCdiaW4nKVxuICAgIC0gIGJ1aWxkb3V0XG4gICAgLSAgZGphbmdvXG5cbi4uIG5vdGU6OlxuICAgT2Zjb3Vyc2UsIHNpbmNlIHRoZSBiaW5hcnkgbmFtZSBpcyBhbHdheXMgYGBkamFuZ29gYCxcbiAgIHRoaXMgd2lsbCBjYXVzZSBwcm9ibGVtcyBpZiB5b3UgaGF2ZSBtb3JlIHRoYW4gb25lIERqYW5nb18gcGFydFxuICAgaW4geW91ciBidWlsZG91dDpcbiAgIHRoaXMgaXMgc29sdmVkIGJ5IHRoZSBgbWFuYWdlLXB5LWZpbGVgXyBvcHRpb25cbiAgIGV4cGxhaW5lZCBpbiB0aGUgYE9wdGlvbnMgcmVmZXJlbmNlYF8uXG5cblRoZSBuZXh0IHRoaW5nIHRoZSBidWlsZG91dCBkaWQgaXMgdG8gY3JlYXRlIHlldCBhbm90aGVyIHB5dGhvbiBtb2R1bGVcbihpbiBgYHBhcnRzLzxwYXJ0X25hbWU+YGApOjpcblxuICAgID4+PiBscygncGFydHMnLCAnbXlwcm9qZWN0JylcbiAgICBkICBteXByb2plY3RfcGFydF9zaXRlXG4gICAgPj4+IGxzKCdwYXJ0cycsICdteXByb2plY3QnLCAnbXlwcm9qZWN0X3BhcnRfc2l0ZScpXG4gICAgLSAgX19pbml0X18ucHlcbiAgICAtICBzZXR0aW5ncy5weVxuICAgIC0gIHdzZ2kucHlcblxuKipBbm90aGVyKiogcHl0aG9uIG1vZHVsZT9cblxuWWVzLCBiZWNhdXNlIHVubGlrZSB0aGUgZmlyc3Qgb25lLCB0aGlzIGlzIHVuZGVyIGJ1aWxkb3V0J3Mgc3RyaWN0IGNvbnRyb2wsXG5hbmQgZ2VuZXJhdGVkIGVhY2ggdGltZSB5b3UgcnVuIGBgYmluL2J1aWxkb3V0YGBcbih0aGVyZWZvcmUsIGl0IGlzIGEgKnZlcnkgYmFkIGlkZWEqIHRvIGVkaXQgdGhvc2UgZmlsZXMsXG5iZWNhdXNlIHlvdXIgY2hhbmdlcyB3b24ndCBiZSBrZXB0KS5cblxuSW4gdGhpcyBtb2R1bGUsIHdlIGhhdmUgYWdhaW4gYSBgYHNldHRpbmdzLnB5YGAgZmlsZSwgcGx1cyBhIGBgd3NnaS5weWBgIGZpbGUuXG5XZSB3aWxsIGxvb2sgYXQgdGhlIGxhdHRlciBpbiBtb3JlIGRldGFpbCBpbiBgR29pbmcgcHJvZHVjdGlvbmBfOiB0aGUgZmlyc3QsXG5pbnN0ZWFkLCBpcyB0aGUgYWN0dWFsIHNldHRpbmdzIG1vZHVsZSB0aGF0IHdpbGwgYmUgbG9hZGVkIGJ5IERqYW5nb18uXG5cblNvIHdoYXQgYWJvdXQgdGhlIHNldHRpbmdzIHdlIGRlZmluZWQgZWFybGllcj8gRG8gbm90IGZlYXIsXG5iZWNhdXNlIHRoZSBidWlsZG91dCBjcmVhdGVkIGBgc2V0dGluZ3MucHlgYCB3aWxsIGltcG9ydCB0aGUgbW9kdWxlIHlvdSB3cm90ZVxuYW5kIGFkZCB0byBpdCB0aGUgYGBTRUNSRVRfS0VZYGAgc2V0dGluZzo6XG5cbiAgICA+Pj4gY2F0KCdwYXJ0cycsICdteXByb2plY3QnLCAnbXlwcm9qZWN0X3BhcnRfc2l0ZScsICdzZXR0aW5ncy5weScpXG4gICAgZnJvbSBteXByb2plY3Rfc2l0ZV9jb25maWcuc2V0dGluZ3MgaW1wb3J0ICpcbiAgICA8QkxBTktMSU5FPlxuICAgIFNFQ1JFVF9LRVkgPSBcIi4uLlwiXG4gICAgPEJMQU5LTElORT5cbiAgICA8QkxBTktMSU5FPlxuXG5UaGlzIChzbGlnaHRseSBjb252b2x1dGVkKSBzZXR1cCBleGlzdHMgYmVjYXVzZSBhIHBvb3JseSBjaG9zZW4gYGBTRUNSRVRfS0VZYGBcbmNhbiBiZWNvbWUgYSBzZWN1cml0eSBwcm9ibGVtIChhbmQgcXVpdGUgYSBiaWcgb25lLCBmb3IgcGF0aG9sb2dpY2FsIGNhc2VzKS5cblxuU2luY2UgaXQncyB3YXkgdG9vIGVhc3kgdG8gcGljayBhIHNpbXBsZSBvbmVcbihtYXliZSBiZWNhdXNlIHdlIGNhbid0IGJlIGJvdGhlcmVkIHRvIGNvbWUgdXAgd2l0aCBhIGRlY2VudCBvbmUpXG5hbmQgZXZlbiBtb3JlIGVhc3kgdG8gZm9yZ2V0IHRvIGNoYW5nZSBpdCBiZXR3ZWVuXG5kZXZlbG9wbWVudCBhbmQgcHJvZHVjdGlvbiBlbnZpcm9ubWVudCxcbnRoaXMgcmVjaXBlIGdlbmVyYXRlcyBhIGxvbmcsIHJhbmRvbSBrZXkgZm9yIHlvdS5cblxuVGhpcyB3YXkgeW91IGNhbiBzYWZlbHkgb21pdCBgYFNFQ1JFVF9LRVlgYCB3aXRoaW4geW91ciBgYHNldHRpbmdzLnB5YGAgZmlsZVxuYW5kIGF0IHRoZSBzYW1lIHRpbWUgYmUgY29tcGxldGVseSBzZWN1cmUuXG5cblRoaXMga2V5IGlzIGdlbmVyYXRlZCBvbmx5IG9uY2UgYW5kIGlzIGtlcHRcbnRocm91Z2ggdGhlIHZhcmlvdXMgcnVucyBvZiBgYGJpbi9idWlsZG91dGBgLlxuVGhpcyBpcyBwb3NzaWJsZSBiZWNhdXNlIHRoZSByZWNpcGUgd2lsbCBmaXJzdCBsb29rXG53aGV0aGVyIGEgYGAuc2VjcmV0LmNmZ2BgIGZpbGUgZXhpc3RzIGluIHRoZSBidWlsZG91dCByb290OlxuaWYgaXQgZXhpc3RzLCBpdCB3aWxsIHJlYWQgaXQgYW5kIGV4dHJhY3QgdGhlIGtleSBmcm9tIHRoZXJlXG4odGhlIGZpbGUgY29udGVudHMgYXJlIHRoZSBrZXkgaXRzZWxmIGFuZCBhIG5ld2xpbmUpLlxuSWYgaXQgZG9lc24ndCBleGlzdCwgaXQgd2lsbCBnZW5lcmF0ZSBhIG5ldyBrZXkgYW5kIHdyaXRlIGl0IHRoZXJlLlxuVGhlcmVmb3JlLCBhcyBsb25nIGFzIGEgYGAuc2VjcmV0LmNmZ2BgIGZpbGUgZXhpc3RzLFxudGhlIHJlY2lwZSB3aWxsIHVzZSB0aGUgc2FtZSBrZXkgdGhyb3VnaG91dCB0aGUgdmFyaW91cyBydW5zXG5vZiBgYGJpbi9idWlsZG91dGBgLlxuXG5Qcm9vZiBvZiB0aGUgZmFjdCBpcyB0aGF0IGEgYGAuc2VjcmV0LmNmZ2BgIGZpbGUgZXhpc3RzIGluIG91ciBidWlsZG91dDo6XG5cbiAgICA+Pj4gaXNmaWxlKCcuc2VjcmV0LmNmZycpXG4gICAgVHJ1ZVxuXG5Db21wbGV0ZSBleGFtcGxlXG4tLS0tLS0tLS0tLS0tLS0tXG5cbkxldCdzIG5vdyBwdXQgaW50byBvdXIgc2V0dGluZ3MgZmlsZSAoYGBteXByb2plY3Rfc2l0ZV9jb25maWcvc2V0dGluZ3MucHlgYClcbnNvbWUgbW9yZSBzYW5lIHZhbHVlczo6XG5cbiAgICA+Pj4gd3JpdGUoJ3NpdGVzJywgJ215cHJvamVjdF9zaXRlX2NvbmZpZycsICdzZXR0aW5ncy5weScsICcnJ1xuICAgIC4uLiBEQVRBQkFTRVMgPSB7XG4gICAgLi4uICAgICAnZGVmYXVsdCc6IHtcbiAgICAuLi4gICAgICAgICAnRU5HSU5FJzogJ2RqYW5nby5kYi5iYWNrZW5kcy5zcWxpdGUzJyxcbiAgICAuLi4gICAgICAgICAnTkFNRSc6ICdzdG9yYWdlLmRiJ1xuICAgIC4uLiAgICAgfVxuICAgIC4uLiB9XG4gICAgLi4uIFRJTUVfWk9ORSA9ICdFdXJvcGUvUm9tZSdcbiAgICAuLi4gJycnKVxuXG5Ob3csIGluIG9yZGVyIGZvciB0aGVzZSBzZXR0aW5ncyB0byB0YWtlIGVmZmVjdCxcbndlIGRvbid0IGhhdmUgdG8gcmUtcnVuIGJ1aWxkb3V0LFxuYXMgdGhlIGltcG9ydCB0aGF0IHRoZSBnZW5lcmF0ZWQgZmlsZSBkb2VzIHdpbGwgcGljayB0aGVtIHVwOjpcblxuICAgID4+PiBwcmludCBzeXN0ZW0oJ2Jpbi9kamFuZ28gZGlmZnNldHRpbmdzJylcbiAgICBEQVRBQkFTRVMgPSB7J2RlZmF1bHQnOiB7J0VOR0lORSc6ICdkamFuZ28uZGIuYmFja2VuZHMuc3FsaXRlMycsICdOQU1FJzogJ3N0b3JhZ2UuZGInfX1cbiAgICBTRUNSRVRfS0VZID0gJy4uLidcbiAgICBTRVRUSU5HU19NT0RVTEUgPSAnbXlwcm9qZWN0X3BhcnRfc2l0ZS5zZXR0aW5ncycgICMjI1xuICAgIFRJTUVfWk9ORSA9ICdFdXJvcGUvUm9tZSdcblxuU2VlbXMgbGlrZSBpdCB3b3JrZWQhXG5cbldlIGRlY2lkZWQgdG8gcHV0IHRoZSBkYXRhYmFzZSBpbiBhICpTUUxpdGUqIGZpbGUgbmFtZWQgYGBzdG9yYWdlLmRiYGAsXG53aGljaCBjdXJyZW50bHkgZG9lc24ndCBleGlzdDo6XG5cbiAgICA+Pj4gaXNmaWxlKCdzdG9yYWdlLmRiJylcbiAgICBGYWxzZVxuXG5MZXQncyBub3cgdGVsbCBEamFuZ29fIHRvIGNyZWF0ZSB0aGUgZGF0YWJhc2U6OlxuXG4gICAgPj4+IHByaW50IHN5c3RlbSgnYmluL2RqYW5nbyBzeW5jZGIgLS1ub2lucHV0JylcbiAgICBDcmVhdGluZyB0YWJsZXMgLi4uXG4gICAgSW5zdGFsbGluZyBjdXN0b20gU1FMIC4uLlxuICAgIEluc3RhbGxpbmcgaW5kZXhlcyAuLi5cbiAgICBJbnN0YWxsZWQgMCBvYmplY3QocykgZnJvbSAwIGZpeHR1cmUocylcbiAgICA8QkxBTktMSU5FPlxuXG5BbmQgd2Ugd2lsbCBzZWUgdGhhdCB0aGUgZGF0YWJhc2UgaGFzIGJlZW4gY3JlYXRlZDo6XG5cbiAgICA+Pj4gaXNmaWxlKCdzdG9yYWdlLmRiJylcbiAgICBUcnVlXG5cbkRlYnVnIG1vZGVcbi0tLS0tLS0tLS1cblxuV2UgY2FuIG5vdyBzdGFydCBkZXZlbG9waW5nIGJ1dCwgc29vbmVyIG9yIGxhdGVyLFxud2UnbGwgcmVjb2duaXplIHRoYXQgd2UgaGF2ZW4ndCBzZXQgYGBERUJVRyA9IFRydWVgYCxcbndoaWNoIGlzIGZ1bmRhbWVudGFsIGBpZiB5b3VyIG5hbWUgaXMgbm90IERvbmFsZCBLbnV0aGBfLlxuXG5XZSBjb3VsZCBhZGQgaXQgc3RyYWlnaHQgYXdheSBpbiBgYG15cHJvamVjdF9zaXRlX2NvbmZpZy9zZXR0aW5ncy5weWBgLFxuYnV0IHRoYXQgbWlnaHQgY2F1c2UgcHJvYmxlbXMgd2hlbiB3ZSdyZSBgR29pbmcgcHJvZHVjdGlvbmBfLFxuYmVjYXVzZSB5b3UgZGVmaW5pdGVseSB3YW50IHRvIGhhdmUgYGBERUJVR2BgIGFuZCBpdHMgc2lzdGVycyBvZmZcbndoZW4geW91J3JlIG91dCBpbiB0aGUgb3Blbi5cblxuVGhlcmVmb3JlLCBhbm90aGVyIG9wdGlvbiB0aGF0IHdlIGhhdmUgaXMgdG8gZG8gdGhlIGZvbGxvd2luZzo6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsICcnJ1xuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID1cbiAgICAuLi4gICAgIG15cHJvamVjdFxuICAgIC4uLlxuICAgIC4uLiBbbXlwcm9qZWN0XVxuICAgIC4uLiByZWNpcGUgPSBkamMucmVjaXBlMlxuICAgIC4uLiBzZXR0aW5ncy1vdmVycmlkZSA9XG4gICAgLi4uICAgICBERUJVRyA9IFRydWVcbiAgICAuLi4gICAgIFRFTVBMQVRFX0RFQlVHID0gVHJ1ZVxuICAgIC4uLiAnJycpXG5cbkFueXRoaW5nIHRoYXQgd2UgcHV0IGluIGBgc2V0dGluZ3Mtb3ZlcnJpZGVgYCB3aWxsIGJlIGFwcGVuZGVkXG5hdCB0aGUgZW5kIG9mIHRoZSBidWlsZG91dC1nZW5lcmF0ZWQgYGBzZXR0aW5ncy5weWBgXG4odHJlYXRlZCBhcyBhIHN0cmluZywgc28gYmV3YXJlIHRoYXQgbm8gY29ycmVjdG5lc3MgY2hlY2tpbmdcbmlzIHBlcmZvcm1lZCkuXG5UaGlzIGFsbG93cyB1cyB0byBxdWlja2x5IGRpZmZlcmVudGlhdGUgcHJvZHVjdGlvbiBhbmQgZGV2ZWxvcG1lbnQgYnVpbGRvdXRzXG53aXRob3V0IGhhdmluZyB0aGUgbmVlZCB0byBjb21lIHVwIHdpdGggdHdvIGRpZmZlcmVudCBgYHNldHRpbmdzLnB5YGAgZmlsZXNcbihvbmUgZm9yIHByb2R1Y3Rpb24gYW5kIG9uZSBmb3IgZGV2ZWxvcG1lbnQpLlxuXG5JZiB3ZSByZS1ydW4gdGhlIGJ1aWxkb3V0IGFuZCBsb29rIGF0IHRoZSByZXN1bHRzLFxud2Ugd2lsbCBzZWUgdGhhdCB3ZSBhcmUgbm93IGluIGRlYnVnIG1vZGU6OlxuXG4gICAgPj4+IHByaW50IFwiJCBiaW4vYnVpbGRvdXRcXG5cIiwgc3lzdGVtKGJ1aWxkb3V0KVxuICAgICQgYmluL2J1aWxkb3V0XG4gICAgLi4uXG4gICAgSW5zdGFsbGluZyBteXByb2plY3QuXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICA+Pj4gY2F0KCdwYXJ0cycsICdteXByb2plY3QnLCAnbXlwcm9qZWN0X3BhcnRfc2l0ZScsICdzZXR0aW5ncy5weScpXG4gICAgZnJvbSBteXByb2plY3Rfc2l0ZV9jb25maWcuc2V0dGluZ3MgaW1wb3J0ICpcbiAgICA8QkxBTktMSU5FPlxuICAgIFNFQ1JFVF9LRVkgPSBcIi4uLlwiXG4gICAgPEJMQU5LTElORT5cbiAgICBERUJVRyA9IFRydWVcbiAgICBURU1QTEFURV9ERUJVRyA9IFRydWVcbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBwcmludCBzeXN0ZW0oJ2Jpbi9kamFuZ28gZGlmZnNldHRpbmdzJylcbiAgICBEQVRBQkFTRVMgPSB7J2RlZmF1bHQnOiB7J0VOR0lORSc6ICdkamFuZ28uZGIuYmFja2VuZHMuc3FsaXRlMycsICdOQU1FJzogJ3N0b3JhZ2UuZGInfX1cbiAgICBERUJVRyA9IFRydWVcbiAgICBTRUNSRVRfS0VZID0gJy4uLidcbiAgICBTRVRUSU5HU19NT0RVTEUgPSAnbXlwcm9qZWN0X3BhcnRfc2l0ZS5zZXR0aW5ncycgICMjI1xuICAgIFRFTVBMQVRFX0RFQlVHID0gVHJ1ZVxuICAgIFRJTUVfWk9ORSA9ICdFdXJvcGUvUm9tZSdcblxuLi4gbm90ZTo6XG4gICBTaW5jZSB0aGlzIGdldHMgYXBwZW5kZWQgdG8gdGhlIGZpbGUsIGJlIGNhcmVmdWwgdGhhdFxuICAgaWYgeW91IGRvIGRlZmluZSAqYW5kKiByZWZlcmVuY2UgYGBERUJVR2BgIChvciBhbnkgb3RoZXIgdmFyaWFibGUpXG4gICB3aXRoaW4gdGhlIGBgc2V0dGluZ3MucHlgYCBmaWxlIGluIHlvdXIgZnVsbCBjb250cm9sLFxuICAgb3VyIHNldHRpbmcgaXQgKmFmdGVyd2FyZHMqIHdpbGwgbm90IGFmZmVjdCBpdHMgdmFsdWVcbiAgIHdpdGhpbiAqeW91ciogYGBzZXR0aW5ncy5weWBgLlxuICAgU28gaWYgaW4geW91ciBgYHNldHRpbmdzLnB5YGAgeW91IGRvIGBgREVCVUcgPSBGYWxzZWBgXG4gICBhbmQgYGBGT09CQVIgPSBGYWxzZWBgLCBgYEZPT0JBUmBgIHdpbGwgYWx3YXlzIGJlIGZhbHNlLlxuXG5PZiBjb3Vyc2UsIHRoaXMgaXMgbm90IGxpbWl0ZWQgdG8gYGBERUJVR2BgLCB5b3UgY2FuIHVzZSBpdCBmb3IgZXhhbXBsZVxudG8gb3ZlcnJpZGUgdGhlIGBgREFUQUJBU0VTYGAsIGBgTE9HR0lOR2BgIGFuZCBgYENBQ0hFU2BgIHNldHRpbmdzXG5pbiB0aGUgcHJvZHVjdGlvbiBlbnZpcm9ubWVudCB3aXRob3V0IGhhdmluZyB0byBjcmVhdGVcbmEgd2hvbGUgbmV3IGBgc2V0dGluZ3MucHlgYCBmaWxlLlxuXG4uLiBub3RlOjpcbiAgIER1ZSB0byBidWlsZG91dCdzIGxpbWl0YXRpb25zLCBpbmRlbnRhdGlvbiBvZiBgYHNldHRpbmdzLW92ZXJyaWRlYGBcbiAgIGlzIGNvbXBsZXRlbHkgbG9zdC4gVGhlcmVmb3JlIGRvbid0IGRvIGBgaWZgYCBvciBtb3JlIGNvbXBsZXggc3R1ZmY6XG4gICBpZiB5b3UgbmVlZCB0bywgY2hlY2sgb3V0IGBBZHZhbmNlZCB1c2FnZWBfXG5cbkdvaW5nIHByb2R1Y3Rpb25cbi0tLS0tLS0tLS0tLS0tLS1cblxuQXMgd2Ugc2F3IGFib3ZlLCBpZiBvdXIgZGV2ZWxvcG1lbnQgc2V0dXAgZG9lc24ndCBkaWZmZXIgdG9vIG11Y2hcbmZyb20gb3VyIHByb2R1Y3Rpb24gc2V0dXBcbihzYXZlIGZvciB0aGUgZmFjdCB0aGF0IHdlIHVzZSBhIHJlYWwgY2FjaGUsIGEgbW9yZSBjb21wbGV4IFJEQk1TLCBldGMpXG50aGVuIHdlIGNhbiB1c2UgYGBzZXR0aW5ncy1vdmVycmlkZWBgIHRvIG1hbmFnZSBpdDo6XG5cbiAgICA+Pj4gbWtkaXIoJ3ZhcicpXG4gICAgPj4+IG1rZGlyKCd2YXInLCAnbG9nJylcbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsICcnJ1xuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID1cbiAgICAuLi4gICAgIG15cHJvamVjdFxuICAgIC4uLlxuICAgIC4uLiBbbXlwcm9qZWN0XVxuICAgIC4uLiByZWNpcGUgPSBkamMucmVjaXBlMlxuICAgIC4uLiBzZXR0aW5ncy1vdmVycmlkZSA9XG4gICAgLi4uICAgICBEQVRBQkFTRVMgPSB7XG4gICAgLi4uICAgICAgICAgJ2RlZmF1bHQnOiB7XG4gICAgLi4uICAgICAgICAgICAgICdFTkdJTkUnOiAnZGphbmdvLmRiLmJhY2tlbmRzLnBvc3RncmVzcWxfcHN5Y29wZzInLFxuICAgIC4uLiAgICAgICAgICAgICAnSE9TVCc6ICdsb2NhbGhvc3QnLFxuICAgIC4uLiAgICAgICAgICAgICAnUE9SVCc6ICc1NDMyJyxcbiAgICAuLi4gICAgICAgICAgICAgJ05BTUUnOiAnbXlkYicsXG4gICAgLi4uICAgICAgICAgICAgICdVU0VSJzogJ215ZGInLFxuICAgIC4uLiAgICAgICAgICAgICAnUEFTU1dPUkQnOiAnc2VjcmV0J1xuICAgIC4uLiAgICAgICAgIH1cbiAgICAuLi4gICAgIH1cbiAgICAuLi4gICAgIENBQ0hFUyA9IHtcbiAgICAuLi4gICAgICAgICAnZGVmYXVsdCc6IHtcbiAgICAuLi4gICAgICAgICAgICAgJ0JBQ0tFTkQnOiAnZGphbmdvLmNvcmUuY2FjaGUuYmFja2VuZHMubWVtY2FjaGVkLk1lbWNhY2hlZENhY2hlJyxcbiAgICAuLi4gICAgICAgICAgICAgJ0xPQ0FUSU9OJzogJzEyNy4wLjAuMToxMTIxMScsXG4gICAgLi4uICAgICAgICAgfVxuICAgIC4uLiAgICAgfVxuICAgIC4uLiAgICAgTE9HR0lORyA9IHtcbiAgICAuLi4gICAgICAgICAndmVyc2lvbic6IDEsXG4gICAgLi4uICAgICAgICAgJ2Rpc2FibGVfZXhpc3RpbmdfbG9nZ2Vycyc6IFRydWUsXG4gICAgLi4uICAgICAgICAgJ3Jvb3QnOiB7ICdsZXZlbCc6ICdXQVJOSU5HJywgJ2hhbmRsZXJzJzogWydsb2dmaWxlJ10sIH0sXG4gICAgLi4uICAgICAgICAgJ2Zvcm1hdHRlcnMnOiB7XG4gICAgLi4uICAgICAgICAgICAgICd2ZXJib3NlJzoge1xuICAgIC4uLiAgICAgICAgICAgICAgICAgJ2Zvcm1hdCc6ICclKGxldmVsbmFtZSlzICUoYXNjdGltZSlzICUobW9kdWxlKXMgJShwcm9jZXNzKWQgJSh0aHJlYWQpZCAlKG1lc3NhZ2UpcydcbiAgICAuLi4gICAgICAgICAgICAgfSxcbiAgICAuLi4gICAgICAgICB9LFxuICAgIC4uLiAgICAgICAgICdoYW5kbGVycyc6IHtcbiAgICAuLi4gICAgICAgICAgICAgJ2xvZ2ZpbGUnOiB7XG4gICAgLi4uICAgICAgICAgICAgICAgICAnbGV2ZWwnOiAnRVJST1InLFxuICAgIC4uLiAgICAgICAgICAgICAgICAgJ2NsYXNzJzogJ2xvZ2dpbmcuaGFuZGxlcnMuUm90YXRpbmdGaWxlSGFuZGxlcicsXG4gICAgLi4uICAgICAgICAgICAgICAgICAnZmlsZW5hbWUnOiAndmFyL2xvZy9teXByb2plY3QubG9nJyxcbiAgICAuLi4gICAgICAgICAgICAgICAgICdtYXhCeXRlcyc6IDEwMjQsXG4gICAgLi4uICAgICAgICAgICAgICAgICAnYmFja3VwQ291bnQnOiAzLFxuICAgIC4uLiAgICAgICAgICAgICB9LFxuICAgIC4uLiAgICAgICAgICAgICAnY29uc29sZSc6IHtcbiAgICAuLi4gICAgICAgICAgICAgICAgICdsZXZlbCc6ICdERUJVRycsXG4gICAgLi4uICAgICAgICAgICAgICAgICAnY2xhc3MnOiAnbG9nZ2luZy5TdHJlYW1IYW5kbGVyJyxcbiAgICAuLi4gICAgICAgICAgICAgICAgICdmb3JtYXR0ZXInOiAndmVyYm9zZSdcbiAgICAuLi4gICAgICAgICAgICAgfVxuICAgIC4uLiAgICAgICAgIH0sXG4gICAgLi4uICAgICAgICAgJ2xvZ2dlcnMnOiB7XG4gICAgLi4uICAgICAgICAgICAgICdkamFuZ28uZGIuYmFja2VuZHMnOiB7XG4gICAgLi4uICAgICAgICAgICAgICAgICAnbGV2ZWwnOiAnRVJST1InLFxuICAgIC4uLiAgICAgICAgICAgICAgICAgJ2hhbmRsZXJzJzogWydjb25zb2xlJ10sXG4gICAgLi4uICAgICAgICAgICAgICAgICAncHJvcGFnYXRlJzogRmFsc2UsXG4gICAgLi4uICAgICAgICAgICAgIH0sXG4gICAgLi4uICAgICAgICAgfSxcbiAgICAuLi4gICAgIH1cbiAgICAuLi4gJycnKVxuICAgID4+PiBwcmludCBcIiQgYmluL2J1aWxkb3V0XFxuXCIsIHN5c3RlbShidWlsZG91dClcbiAgICAkIGJpbi9idWlsZG91dFxuICAgIC4uLlxuICAgIEluc3RhbGxpbmcgbXlwcm9qZWN0LlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPj4+IHByaW50IHN5c3RlbSgnYmluL2RqYW5nbyBkaWZmc2V0dGluZ3MnKVxuICAgIENBQ0hFUyA9IC4uLlxuICAgIERBVEFCQVNFUyA9IC4uLlxuICAgIExPR0dJTkcgPSAuLi5cbiAgICBTRUNSRVRfS0VZID0gJy4uLidcbiAgICBTRVRUSU5HU19NT0RVTEUgPSAnbXlwcm9qZWN0X3BhcnRfc2l0ZS5zZXR0aW5ncycgICMjI1xuICAgIFRJTUVfWk9ORSA9ICdFdXJvcGUvUm9tZSdcblxuVGhpcyBpcyBhY3R1YWxseSBhIHF1aXRlIGNvbXBsZXRlIChhbGJlaXQgYmFzaWMpIHByb2R1Y3Rpb24gZXhhbXBsZSxcbmFuZCBpdCBjYW4gc3RpbGwgYmUgbWFuYWdlZCBxdWl0ZSB3ZWxsIHdpdGhpbiB0aGUgYnVpbGRvdXQuXG5cbklmIHdlIGRvIGhhdmUgbW9yZSBjb21wbGV4IGNhc2VzLCBob3dldmVyLFxuaXQncyBwcm9iYWJseSBiZXR0ZXIgdG8gdXNlIGBFeHRlcm5hbCBzZXR0aW5nc2BfLlxuXG5DaGFuZ2luZyB0aGUgYmluYXJ5IG5hbWVcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5BcyB3ZSBoYXZlIHNhaWQgYmVmb3JlLCB0aGUgbmFtZSBvZiB0aGUgZ2VuZXJhdGVkIGJpbmFyeSBpcyBhbHdheXMgYGBkamFuZ29gYCxcbndpdGhvdXQgYW55IHN1ZmZpeCBvciBwcmVmaXguXG5cblRoZSByYXRpb25hbCBmb3IgdGhpcyBjaG9pY2UgaXMgdGhlIGZvbGxvd2luZzpcblxuICAjLiBIYXZpbmcgdGhlIHNjcmlwdCBuYW1lZCBgYGRqYW5nb2BgIGFuZCBpdCBiZWluZyB0aGUgc2FtZVxuICAgICBubyBtYXR0ZXIgaG93IHlvdSBjYWxsIHRoZSBidWlsZG91dCBwYXJ0IHNpbXBsaWZpZXNcbiAgICAgZ2V0dGluZyBpbnRvIGRldmVsb3BtZW50IGEgbG90XG4gICAgIChpdCdzIGFsd2F5cyBgYGJpbi9kamFuZ28gcnVuc2VydmVyYGAgYWZ0ZXIgeW91IHJ1biB0aGUgYnVpbGRvdXQsXG4gICAgIGFuZCB5b3UgZG9uJ3QgaGF2ZSB0byBnbyBhbmQgbG9vayBob3cgaXQgaXMgbmFtZWRcbiAgICAgaW4gdGhhdCBwYXJ0aWN1bGFyIGJ1aWxkb3V0KVxuXG4gICMuIFNpbmNlIGluIHByb2R1Y3Rpb24geW91IHdpbGwganVzdCBjb25maWd1cmUgeW91ciAqV1NHSSogc2VydmVyXG4gICAgIHRvIHVzZSBtdWx0aXBsZSBwcm9jZXNzZXMsIHRoZXJlIGFyZSB2ZXJ5IGZldyByZWFzb25zXG4gICAgIHRvIGhhdmUgbXVsdGlwbGUgRGphbmdvXyBwYXJ0cyBpbiB5b3VyIGJ1aWxkb3V0XG5cbkJ1dCBpZiB5b3UgcmVhbGx5IG5lZWQgdG8gaGF2ZSBtdWx0aXBsZSBwYXJ0cyxcbnRoZSBkZWZhdWx0IGJlaGF2aW91ciB3aWxsIGhhdmUgb25lIHBhcnQgb3ZlcndyaXRlIHRoZSBvdGhlcidzIHNjcmlwdC5cblRoYXQncyB3aGVuIHlvdSBuZWVkIHRvIHVzZSB0aGUgYG1hbmFnZS1weS1maWxlYF8gb3B0aW9uLFxud2hpY2ggYWxsb3dzIHlvdSB0byBwcm92aWRlIGEgZGlmZmVyZW50IG5hbWVcbihzYXksIGBgZGphbmdvMWBgIGFuZCBgYGRqYW5nbzJgYCkgZm9yIHRoZSBtYW5hZ2Ugc2NyaXB0LlxuXG5GaXJzdCB3ZSBzdGFydCBieSBjb3B5aW5nIHRoZSBzZXR0aW5ncyBvZiBvdXIgc2FtcGxlIHByb2plY3RcbnRvIHR3byBuZWQgZGlmZmVyZW50IGxvY2F0aW9ucywgYGBteXByb2plY3QxYGAgYW5kIGBgbXlwcm9qZWN0MmBgOjpcblxuICAgID4+PiBjb3B5dHJlZShbJ3NpdGVzJywgJ215cHJvamVjdF9zaXRlX2NvbmZpZyddLFxuICAgIC4uLiAgICAgICAgICBbJ3NpdGVzJywgJ215cHJvamVjdDFfc2l0ZV9jb25maWcnXSlcbiAgICA+Pj4gY29weXRyZWUoWydzaXRlcycsICdteXByb2plY3Rfc2l0ZV9jb25maWcnXSxcbiAgICAuLi4gICAgICAgICAgWydzaXRlcycsICdteXByb2plY3QyX3NpdGVfY29uZmlnJ10pXG5cblRoZW4gd2Ugd3JpdGUgYSBidWlsZG91dCB0aGF0IGhhcyAqdHdvKiBwYXJ0cyxcbmBgbXlwcm9qZWN0MWBgIGFuZCBgYG15cHJvamVjdDJgYCwgYW5kIHJ1biBpdDo6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsICcnJ1xuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID1cbiAgICAuLi4gICAgIG15cHJvamVjdDFcbiAgICAuLi4gICAgIG15cHJvamVjdDJcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdDFdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uIG1hbmFnZS1weS1maWxlID0gZGphbmdvMVxuICAgIC4uLlxuICAgIC4uLiBbbXlwcm9qZWN0Ml1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gbWFuYWdlLXB5LWZpbGUgPSBkamFuZ28yXG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdDEuXG4gICAgLi4uXG4gICAgSW5zdGFsbGluZyBteXByb2plY3QyLlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG5cbkFuZCB3ZSB3aWxsIHNlZSB0aGF0IGl0IGhhcyBjcmVhdGVkIHR3byBkaXN0aW5jdCBzY3JpcHRzOjpcblxuICAgID4+PiBscygnYmluJylcbiAgICAtICBidWlsZG91dFxuICAgIC0gIGRqYW5nbzFcbiAgICAtICBkamFuZ28yXG5cblxuQWR2YW5jZWQgdXNhZ2Vcbj09PT09PT09PT09PT09XG5cbkN1c3RvbSBpbml0aWFsaXphdGlvblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblNvbWV0aW1lcywgeW91IG5lZWQgdG8gZG8gc29tZSBtYWdpYyBiZWZvcmUgRGphbmdvXyBsb2FkcyBldmVyeXRoaW5nLFxuaW4gb3JkZXIgdG8gdXNlIGNlcnRhaW4gZmVhdHVyZXMuXG5cbkZvciBleGFtcGxlLCBQaW5heF8sIGEgdmVyeSB3ZWxsIGtub3duIHNvY2lhbCBzaXRlIGZyYW1ld29yayBiYXNlZCBvbiBEamFuZ29fLFxubmVlZHMgeW91IHRvIHBlcmZvcm0gY2VydGFpbiBgYHN5cy5wYXRoYGAgbWFnaWMgYmVmb3JlIGluaXRpYWxpemF0aW9uLlxuXG5UaGlzIGtpbmQgb2YgY3VzdG9taXphdGlvbiBjYW4gYmUgZG9uZSBpbiB0d28gd2F5czpcblxuICAjLiBCeSBwZXJmb3JtaW5nIHRob3NlIGluIGBgc2V0dGluZ3MucHlgYFxuICAjLiBCeSBhbHRlcmluZyB0aGUgbWFuYWdlIHNjcmlwdCAoYW5kIHRoZSAqV1NHSSogb25lLCB0b28pXG5cblRoZSBmaXJzdCBjaG9pY2UgbWlnaHQgbG9vayBzaW1wbGVyIGJ1dCBpdCBhY3R1YWxseSBoaWRlcyBtdWNoIG1vcmUgY29tcGxleGl0eVxudGhhbiBpdCBpcyBpbml0aWFsbHkgdmlzaWJsZS5cblRoZSBsYXR0ZXIgaXMgYmV0dGVyIGJ1dCwgc2luY2UgdGhlIHNjcmlwdCBpcyBnZW5lcmF0ZWQgYnkgYnVpbGRvdXQsXG53ZSBjYW5ub3Qgc2ltcGx5IGVkaXQgdGhhdCBmaWxlLlxuXG5CZWZvcmUgbG9va2luZyBhdCBob3cgeW91IGFjdHVhbGx5IGRvIGl0LCBsZXQncyBtYWtlIGEgcHJlbWlzZTpcbndlIGNhbiBkaXZpZGUgdGhpcyBpbml0aWFsaXphdGlvbiBzdHVmZiBpbiB0d28gbWFpbiBncm91cHMuXG5cblRoZSBmaXJzdCBhbmQgbW9yZSBjb21tb24gZ3JvdXAgaXMgd2hlbiB5b3Ugc2ltcGx5IG5lZWRcbnRvIHNldCBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZTogd2hpbGUgdGhpcyBjYW4gYmUgYWNoaWV2ZWRcbmJ5IGRvaW5nIGBgJCBNWVZBUj12YWx1ZSBiaW4vZGphbmdvYGAsIGl0J3Mgbm90IGV4YWN0bHkgaGFuZHkgaW4gdGhlIGxvbmcgcnVuLlxuXG5BbmQgaGVyZSBjb21lcyBgZW52aXJvbm1lbnQtdmFyc2BfIHRvIHRoZSByZXNjdWUhXG5cbkxldCdzIGxvb2sgYXQgYSBjb25jcmV0ZSBleGFtcGxlOiBydW5uaW5nIERqYW5nb18gb24gYEdvb2dsZSBBcHAgRW5naW5lYF8uXG5gR29vZ2xlIEFwcCBFbmdpbmVgXyByZXF1aXJlcyB5b3UgdG8gaGF2ZSBhIGBgR09PR0xFX0FQUEVOR0lORV9QUk9KRUNUX1JPT1RgYFxuZW52aXJvbm1lbnQgdmFyaWFibGUgc2V0LCBvciBub3RoaW5nIHdpbGwgd29yay5cblxuVGhlcmVmb3JlLCBpbiBvcmRlciB0byBhZGQgaXQgd2Ugd291bGQgd3JpdGUgb3VyIGJ1aWxkb3V0IGFzIGZvbGxvd3MsXG53aXRoIGEgbGlzdCBvZiB2YXJpYWJsZXMgYW5kIHZhbHVlcyAoc2VwYXJhdGVkIGJ5IHNwYWNlKVxuZm9yIGVhY2ggZW52aXJvbm1lbnQgdmFyaWFibGUgd2Ugd2FudCB0byBzZXQ6OlxuXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBwYXJ0cyA9XG4gICAgLi4uICAgICBteXByb2plY3RcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdF1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gZW52aXJvbm1lbnQtdmFycyA9XG4gICAgLi4uICAgICBHT09HTEVfQVBQRU5HSU5FX1BST0pFQ1RfUk9PVCAvbXkvcGF0aFxuICAgIC4uLiAnJycpXG5cbkFuZCBhZnRlciBydW5uaW5nIGl0LCB3ZSBjYW4gc2VlIHRoYXQgdGhlIHNjcmlwdCBjb3JyZWN0bHkgaW5pdGlhbGl6ZXNcbnRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZTo6XG5cbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBjYXQoJ2JpbicsICdkamFuZ28nKVxuICAgICMhLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIGltcG9ydCBvc1xuICAgIG9zLmVudmlyb25bXCJHT09HTEVfQVBQRU5HSU5FX1BST0pFQ1RfUk9PVFwiXSA9IHJcIi9teS9wYXRoXCJcbiAgICA8QkxBTktMSU5FPlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgb3MuZW52aXJvblsnREpBTkdPX1NFVFRJTkdTX01PRFVMRSddID0gXCJteXByb2plY3RfcGFydF9zaXRlLnNldHRpbmdzXCJcbiAgICBpZiBJU18xNF9QTFVTOlxuICAgICAgICBleGVjdXRlX2Zyb21fY29tbWFuZF9saW5lKHN5cy5hcmd2KVxuICAgIGVsc2U6XG4gICAgICAgIHV0aWxpdHkgPSBNYW5hZ2VtZW50VXRpbGl0eShzeXMuYXJndilcbiAgICAgICAgdXRpbGl0eS5leGVjdXRlKClcblxuRm9yIHRoZSBzZWNvbmQgY2FzZSwgdGhlIGBpbml0aWFsaXphdGlvbmBfIG9wdGlvbiBpcyBwcm92aWRlZDpcbnRoaXMgYWxsb3dzIHlvdSB0byB3cml0ZSAoaW4gYSBmb3JtYXQgc2ltaWxhciB0byBkb2N0ZXN0KVxudGhlIHB5dGhvbiBjb2RlIHRoYXQgeW91IG5lZWQgdG8gYmUgZXhlY3V0ZWQgYmVmb3JlIERqYW5nb18gc3RhcnRzLlxuXG4uLiBub3RlOjpcbiAgIFRoZSBzbGlnaHRseSBmdW5ueSAqZG9jdGVzdCBzeW50YXgqIG9mIHRoaXMgb3B0aW9uIGlzIHRvIG92ZXJjb21lXG4gICBhIHNob3J0Y29taW5nIG9mIGJ1aWxkb3V0IHRoYXQgd2lsbCBvdGhlcndpc2UgY29tcGxldGVseSBsb3NlIGluZGVudGF0aW9uLlxuXG5MZXQncyBzZWUgaG93IHdlIHdvdWxkIG1ha2Ugc3VyZSB0aGF0IERqYW5nb18gd29uJ3Qgc3RhcnQgYXQgYWxsXG5pZiBgYDEgIT0gMWBgOjpcblxuICAgID4+PiB3cml0ZSgnYnVpbGRvdXQuY2ZnJywgJycnXG4gICAgLi4uIFtidWlsZG91dF1cbiAgICAuLi4gcGFydHMgPVxuICAgIC4uLiAgICAgbXlwcm9qZWN0XG4gICAgLi4uXG4gICAgLi4uIFtteXByb2plY3RdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uIGluaXRpYWxpemF0aW9uID1cbiAgICAuLi4gICAgID4+PiBpZiAxICE9IDE6XG4gICAgLi4uICAgICAuLi4gICAgIHJhaXNlIFJ1bnRpbWVFcnJvcihcIkkgY2FuJ3QgcnVuIG9uIHF1YW50dW0gY29tcHV0ZXJzXCIpXG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBjYXQoJ2JpbicsICdkamFuZ28nKVxuICAgICMhLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIGlmIDEgIT0gMTpcbiAgICAgICAgcmFpc2UgUnVudGltZUVycm9yKFwiSSBjYW4ndCBydW4gb24gcXVhbnR1bSBjb21wdXRlcnNcIilcbiAgICA8QkxBTktMSU5FPlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgb3MuZW52aXJvblsnREpBTkdPX1NFVFRJTkdTX01PRFVMRSddID0gXCJteXByb2plY3RfcGFydF9zaXRlLnNldHRpbmdzXCJcbiAgICBpZiBJU18xNF9QTFVTOlxuICAgICAgICBleGVjdXRlX2Zyb21fY29tbWFuZF9saW5lKHN5cy5hcmd2KVxuICAgIGVsc2U6XG4gICAgICAgIHV0aWxpdHkgPSBNYW5hZ2VtZW50VXRpbGl0eShzeXMuYXJndilcbiAgICAgICAgdXRpbGl0eS5leGVjdXRlKClcblxuLi4gbm90ZTo6XG4gICBJIHJlYWxseSBjb3VsZG4ndCBjb21lIHVwIHdpdGggYSBiZXR0ZXIgZXhhbXBsZVxuICAgdGhhdCB3b3VsZCB3b3JrIGluIHRlc3RzIHdpdGhvdXQgaGF2aW5nIHRvIGJyaW5nIGluIGxvYWRzIG9mIGNyYXAsXG4gICBidXQgSSBjYW4gYXNzdXJlIHlvdSB0aGlzIGZlYXR1cmUgKippcyoqIHVzZWZ1bC4gUmVhbGx5LlxuXG5NZWRpYSBhbmQgc3RhdGljXG4tLS0tLS0tLS0tLS0tLS0tXG5cblRoaXMgaXMgYSBiaXQgb2YgcGVyc29uYWwgcHJlZmVyZW5jZS5cbldoZW4gZGV2ZWxvcGluZyB1cG9uIHdvcmsgc3RhcnRlZCBieSBzb21lb25lIGVsc2UsXG5JIGZpbmQgaXQgdXR0ZXJseSBpcnJpdGF0aW5nIHRoYXQgdGhlIHVwbG9hZCBkb2Vzbid0IHdvcmsgYmVjYXVzZSxcbmFmdGVyIGNoZWNraW5nIG91dCBhbmQgcnVubmluZyB0aGUgYnVpbGRvdXQsIEkgZGlkIG5vdCBkbyBgYCQgbWtkaXIgbWVkaWFgYC5cblxuQmVjYXVzZTpcblxuICAjLiBJJ20gZ2V0dGluZyBvbGQgYW5kIEkgdGVuZCB0byBmb3JnZXQgdGhhdFxuICAjLiBTb21ldGltZXMgaXQncyBub3QgYGBtZWRpYWBgLCBidXQgYGB2YXIvdXBsb2FkL21lZGlhZmlsZXNgYFxuICAgICBvciBzb21ldGhpbmcgZWxzZSAoeWVzLCB3ZSBwcm9ncmFtbWVycyB0ZW5kIHRvIGV4cHJlc3MgY3JlYXRpdml0eVxuICAgICBpbiB0aGUgbW9zdCBpbm9wcG9ydHVuZSB3YXlzKVxuXG5UaGF0J3Mgd2h5IEkndmUgYWRkZWQgdHdvIG9wdGlvbnMgdGhhdCwgd2hpbGUgbm90IGJlaW5nIG9uIGJ5IGRlZmF1bHQsXG5JIHdpc2ggeW91IGhhdmUgdHVybmVkIG9uIChhdGxlYXN0IG9uZSBvZiB0aGVtKVxuaWYgSSBoYXZlIHRvIHdvcmsgb24geW91ciBidWlsZG91dC5cblxuVGhlIG9wdGlvbnMgYXJlIGBtZWRpYS1kaXJlY3RvcnlgXyBhbmQgYHN0YXRpYy1kaXJlY3RvcnlgXyxcbmFuZCB0aGVpciB2YWx1ZXMgYXJlIHRoZSBwYXRoIHRvIHRoZSBtZWRpYSByb290IGFuZCB0aGUgc3RhdGljIHJvb3RcbnJlc3BlY3RpdmVseS5cbldoZW4gdGhleSBhcmUgc2V0LCB0aGUgYnVpbGRvdXQgd2lsbCBjcmVhdGUgdGhlbSBpZiB0aGV5IGRvbid0IGV4aXN0XG5hbmQgdGhlbiBhcHBlbmQgdG8gdGhlIHNldHRpbmdzIG1vZHVsZSB0aGUgcHJvcGVyIGBgTUVESUFfUk9PVGBgXG5hbmQgYGBTVEFUSUNfUk9PVGBgIHNldHRpbmcuXG5cbkxldCdzIHNlZSB0aGVtIGluIGFjdGlvbi4gRmlyc3Qgd2UgY2hlY2sgdGhhdCB3ZSBkb24ndCBoYXZlIGFueVxuYGBzdGF0aWNgYCBvciBgYG1lZGlhYGAgZGlyZWN0b3J5OjpcblxuICAgID4+PiBpc2RpcignbWVkaWEnKVxuICAgIEZhbHNlXG4gICAgPj4+IGlzZGlyKCdzdGF0aWMnKVxuICAgIEZhbHNlXG5cblRoZW4gd3JpdGUgYW5kIHJ1biB0aGUgYnVpbGRvdXQ6OlxuXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBwYXJ0cyA9XG4gICAgLi4uICAgICBteXByb2plY3RcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdF1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gbWVkaWEtZGlyZWN0b3J5ID0gbWVkaWFcbiAgICAuLi4gc3RhdGljLWRpcmVjdG9yeSA9IHN0YXRpY1xuICAgIC4uLiAnJycpXG4gICAgPj4+IHByaW50IFwiJCBiaW4vYnVpbGRvdXRcXG5cIiwgc3lzdGVtKGJ1aWxkb3V0KVxuICAgICQgYmluL2J1aWxkb3V0XG4gICAgLi4uXG4gICAgSW5zdGFsbGluZyBteXByb2plY3QuXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cblxuQW5kIHRoZW4gc2VlIHRoYXQgd2UgaGF2ZSB0aGUgZGlyZWN0b3JpZXMgYW5kIHRoZSBzZXR0aW5nczo6XG5cbiAgICA+Pj4gaXNkaXIoJ21lZGlhJylcbiAgICBUcnVlXG4gICAgPj4+IGlzZGlyKCdzdGF0aWMnKVxuICAgIFRydWVcbiAgICA+Pj4gcHJpbnQgc3lzdGVtKCdiaW4vZGphbmdvIGRpZmZzZXR0aW5ncycpXG4gICAgREFUQUJBU0VTID0gLi4uXG4gICAgTUVESUFfUk9PVCA9ICcuLi4nXG4gICAgU0VDUkVUX0tFWSA9ICcuLi4nXG4gICAgU0VUVElOR1NfTU9EVUxFID0gJ215cHJvamVjdF9wYXJ0X3NpdGUuc2V0dGluZ3MnICAjIyNcbiAgICBTVEFUSUNfUk9PVCA9ICcuLi4nXG4gICAgVElNRV9aT05FID0gJ0V1cm9wZS9Sb21lJ1xuXG5PYnZpb3VzbHksIHlvdSBkbyBub3QgbmVlZCB0byB1c2UgdGhlbSB0b2dldGhlclxuYnV0IHRoZXkgY2FuIGJlIHVzZWQgaW5kZXBlbmRlbnRseS5cblxuRXh0ZXJuYWwgc2V0dGluZ3Ncbi0tLS0tLS0tLS0tLS0tLS0tXG5cblNvbWV0aW1lcywgb25lIGZpbGUgZm9yIGFsbCB0aGUgc2V0dGluZ3MganVzdCBhaW4ndCBlbm91Z2gsXG5vciBpdCBtaWdodCB0dXJuIG91dCB0aGF0IGBzZXR0aW5ncy1vdmVycmlkZWBfIGlzIG5vdCBxdWl0ZSBoYW5keSBmb3IgeW91LlxuXG5UaGF0J3Mgd2h5IHRoaXMgcmVjaXBlIGFsbG93cyB5b3UgdG8gdXNlIGFzIGEgc2V0dGluZ3MgbW9kdWxlIGFueXRoaW5nXG50aGF0J3MgaW4gaW4gYGBzeXMucGF0aGBgLlxuXG5Gb3IgZXhhbXBsZSwgc3VwcG9zZSB3ZSB3YW50IHRvIHB1dCBvdXIgcHJvZHVjdGlvbiBzZXR0aW5nc1xuaW4gYSBmaWxlIG9uIGl0cyBvd246IHdlIG1pZ2h0IHRoZW4gY3JlYXRlIGEgZmlsZVxubmFtZWQgYGBzaXRlcy9teXByb2plY3Rfc2l0ZV9jb25maWcvcHJvZHVjdGlvbi5weWBgXG5hbmQgdXNlIHRoYXQgYXMgc2V0dGluZ3MgbW9kdWxlLlxuXG5GaXJzdCwgbGV0J3MgY3JlYXRlIHRoZSBmaWxlOjpcblxuICAgID4+PiB3cml0ZSgnc2l0ZXMnLCAnbXlwcm9qZWN0X3NpdGVfY29uZmlnJywgJ3Byb2R1Y3Rpb24ucHknLCAnJydcbiAgICAuLi4gZnJvbSAuc2V0dGluZ3MgaW1wb3J0ICpcbiAgICAuLi4gVElNRV9aT05FID0gJ0V1cm9wZS9Mb25kb24nXG4gICAgLi4uICcnJylcblxuVGhlbiB3ZSB0ZWxsIHRoZSBidWlsZG91dCB0byB1c2UgdGhlIG1vZHVsZVxuYGBteXByb2plY3Rfc2l0ZV9jb25maWcucHJvZHVjdGlvbmBgIGFzIHNldHRpbmdzIG1vZHVsZVxuaW5zdGVhZCBvZiB0aGUgZGVmYXVsdCBvbmUsIHRocm91Z2ggdGhlIGBzZXR0aW5ncy1tb2R1bGVgXyBvcHRpb246OlxuXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBwYXJ0cyA9XG4gICAgLi4uICAgICBteXByb2plY3RcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdF1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gc2V0dGluZ3MtbW9kdWxlID0gbXlwcm9qZWN0X3NpdGVfY29uZmlnLnByb2R1Y3Rpb25cbiAgICAuLi4gJycnKVxuXG4uLiBub3RlOjpcbiAgIFRoZSBtb2R1bGUgY2FuIGJlIGFueXRoaW5nIGluIGBgc3lzLnBhdGhgYCwgYnV0IGhlcmUgd2UgcmV1c2VkIHRoZVxuICAgc2FtZSBkaXJlY3RvcnkgYmVjYXVzZSB3aGVuZXZlciBgc2l0ZXMtZGlyZWN0b3J5YF8gZXhpc3RzXG4gICBhbmQgcmVnYXJkbGVzcyBvZiB3aGF0J3MgaW4gaXQsIGl0IGlzIHB1dCBvbiBgYHN5cy5wYXRoYGAuXG4gICBZb3UgY2FuIG9mY291cnNlIGhhdmUgdGhlIHNldHRpbmdzIG1vZHVsZSBpbiB5b3VyIHByb2plY3QgZWdnXG4gICBvciB3aGF0ZXZlciBlbHNlLlxuXG5BbmQgd2UgY2FuIHRoZW4gcnVuIHRoZSBidWlsZG91dCBhbmQgc2VlIHdoYXQgaGFwcGVuZWQ6OlxuXG4gICAgPj4+IHByaW50IFwiJCBiaW4vYnVpbGRvdXRcXG5cIiwgc3lzdGVtKGJ1aWxkb3V0KVxuICAgICQgYmluL2J1aWxkb3V0XG4gICAgLi4uXG4gICAgSW5zdGFsbGluZyBteXByb2plY3QuXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICA+Pj4gcHJpbnQgc3lzdGVtKCdiaW4vZGphbmdvIGRpZmZzZXR0aW5ncycpXG4gICAgREFUQUJBU0VTID0gLi4uXG4gICAgU0VDUkVUX0tFWSA9ICcuLi4nXG4gICAgU0VUVElOR1NfTU9EVUxFID0gJ215cHJvamVjdF9wYXJ0X3NpdGUuc2V0dGluZ3MnICAjIyNcbiAgICBUSU1FX1pPTkUgPSAnRXVyb3BlL0xvbmRvbidcblxuQW5kIGFzIHlvdSBjYW4gc2VlLCB0aGUgY2hhbmdlcyB0b29rIGVmZmVjdC5cblxuT3B0aW9ucyByZWZlcmVuY2Vcbj09PT09PT09PT09PT09PT09XG5cbmVnZ3Ncbi0tLS1cblxuQSBsaXN0IG9mIGVnZ3MgdGhhdCB0aGUgZ2VuZXJhdGVkIHNjcmlwdHMgbXVzdCBoYXZlIGFjY2VzcyB0by5cblRoaXMgdHlwaWNhbGx5IGluY2x1ZGVzIHlvdXIgYXBwbGljYXRpb24gZWdncyBhbmQgdGhlaXIgZGVwZW5kZW5jaWVzLFxuaWYgdGhlIGxhdHRlciBhcmUgbm90IGV4cGxpY2l0ZWQgd2l0aGluIHRoZSBgYHNldHVwLnB5YGAgZmlsZS5cblxuVGhleSBjYW4gYmUgZXhwbGljaXRlZCBlaXRoZXIgYXMgYSBwYXJ0IG9wdGlvbjo6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsICcnJ1xuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID1cbiAgICAuLi4gICAgIG15cHJvamVjdFxuICAgIC4uLlxuICAgIC4uLiBbbXlwcm9qZWN0XVxuICAgIC4uLiByZWNpcGUgPSBkamMucmVjaXBlMlxuICAgIC4uLiBlZ2dzID0gZGphbmdvLWdyYXZhdGFyMlxuICAgIC4uLiAnJycpXG4gICAgPj4+IHByaW50IFwiJCBiaW4vYnVpbGRvdXRcXG5cIiwgc3lzdGVtKGJ1aWxkb3V0KVxuICAgICQgYmluL2J1aWxkb3V0XG4gICAgLi4uXG4gICAgSW5zdGFsbGluZyBteXByb2plY3QuXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICA+Pj4gY2F0KCdiaW4nLCAnZGphbmdvJylcbiAgICAjLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICA8QkxBTktMSU5FPlxuICAgIGltcG9ydCBzeXNcbiAgICBzeXMucGF0aFswOjBdID0gW1xuICAgICAgICAnLi4uL2VnZ3MvZGphbmdvX2dyYXZhdGFyMi0xLjAuNC0uLi5lZ2cnLFxuICAgICAgICAuLi5cbiAgICAgICAgXVxuICAgIDxCTEFOS0xJTkU+XG4gICAgLi4uXG5cbk9yIGFzIGEgYnVpbGRvdXQgb3B0aW9uOjpcblxuICAgID4+PiB3cml0ZSgnYnVpbGRvdXQuY2ZnJywgJycnXG4gICAgLi4uIFtidWlsZG91dF1cbiAgICAuLi4gZWdncyA9IGRqYW5nby1ncmF2YXRhcjJcbiAgICAuLi4gcGFydHMgPVxuICAgIC4uLiAgICAgbXlwcm9qZWN0XG4gICAgLi4uXG4gICAgLi4uIFtteXByb2plY3RdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBjYXQoJ2JpbicsICdkamFuZ28nKVxuICAgICMuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIDxCTEFOS0xJTkU+XG4gICAgaW1wb3J0IHN5c1xuICAgIHN5cy5wYXRoWzA6MF0gPSBbXG4gICAgICAgICcuLi4vZWdncy9kamFuZ29fZ3JhdmF0YXIyLTEuMC40LS4uLmVnZycsXG4gICAgICAgIC4uLlxuICAgICAgICBdXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cblxuT3IgYm90aCwgYW5kIHRoZXkgd2lsbCBiZSBtZXJnZWQ6OlxuXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBlZ2dzID0gU291dGhcbiAgICAuLi4gcGFydHMgPVxuICAgIC4uLiAgICAgbXlwcm9qZWN0XG4gICAgLi4uXG4gICAgLi4uIFtteXByb2plY3RdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uIGVnZ3MgPSBkamFuZ28tZ3JhdmF0YXIyXG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBjYXQoJ2JpbicsICdkamFuZ28nKVxuICAgICMuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIDxCTEFOS0xJTkU+XG4gICAgaW1wb3J0IHN5c1xuICAgIHN5cy5wYXRoWzA6MF0gPSBbXG4gICAgICAgICcuLi4vZWdncy9kamFuZ29fZ3JhdmF0YXIyLTEuMC40LS4uLmVnZycsXG4gICAgICAgICcuLi4vZWdncy9Tb3V0aC0wLjcuNS0uLi5lZ2cnLFxuICAgICAgICAuLi5cbiAgICAgICAgXVxuICAgIDxCTEFOS0xJTkU+XG4gICAgLi4uXG5cbmVudmlyb25tZW50LXZhcnNcbi0tLS0tLS0tLS0tLS0tLS1cblxuQSBsaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byBzZXQgYmVmb3JlIGV4ZWN1dGlvbixcbmVhY2ggc2VwYXJhdGVkIGJ5IG5ld2xpbmUgYW5kIGluIHRoZSBmb3JtYXQgYGBWQVJfTkFNRSB2YWx1ZWBgLlxuXG5TZWUgYEN1c3RvbSBpbml0aWFsaXphdGlvbmBfIGZvciBhbiBleGFtcGxlLlxuXG5leHRyYS1wYXRoc1xuLS0tLS0tLS0tLS1cblxuQSBsaXN0IG9mIHBhdGhzLCBzZXBhcmF0ZWQgYnkgbmV3bGluZSxcbnRoYXQgc2hvdWxkIGJlIGFkZGVkIHRvIGBgc3lzLnBhdGhgYCBiZWZvcmUgdGhlIGNvZGUgaXMgZXhlY3V0ZWRcbihhbGxvd2luZyB0aGUgZGlzY292ZXJ5IG9mIGN1c3RvbSBtb2R1bGVzKS5cblxuRm9yIGV4YW1wbGU6OlxuXG4gICAgPj4+IG1rZGlyKCdjdXN0b21fbW9kdWxlcycpXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBwYXJ0cyA9XG4gICAgLi4uICAgICBteXByb2plY3RcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdF1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gZXh0cmEtcGF0aHMgPVxuICAgIC4uLiAgICAgY3VzdG9tX21vZHVsZXNcbiAgICAuLi4gJycnKVxuICAgID4+PiBwcmludCBcIiQgYmluL2J1aWxkb3V0XFxuXCIsIHN5c3RlbShidWlsZG91dClcbiAgICAkIGJpbi9idWlsZG91dFxuICAgIC4uLlxuICAgIEluc3RhbGxpbmcgbXlwcm9qZWN0LlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPj4+IGNhdCgnYmluJywgJ2RqYW5nbycpXG4gICAgIy4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPEJMQU5LTElORT5cbiAgICBpbXBvcnQgc3lzXG4gICAgc3lzLnBhdGhbMDowXSA9IFtcbiAgICAgICAgLi4uXG4gICAgICAgICcuLi4vY3VzdG9tX21vZHVsZXMnLFxuICAgICAgICBdXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cblxuaW5pdGlhbGl6YXRpb25cbi0tLS0tLS0tLS0tLS0tXG5cblB5dGhvbiBjb2RlLCB0byBiZSBmb3JtYXR0ZWQgbGlrZSBhIGRvY3Rlc3QsXG50aGF0IGlzIHRvIGJlIGV4ZWN1dGVkIGJlZm9yZSBhbnkgaW5pdGlhbGl6YXRpb24gaGFwcGVucy5cblxuU2VlIGBDdXN0b20gaW5pdGlhbGl6YXRpb25gXyBmb3IgYW4gZXhhbXBsZS5cblxubWFuYWdlLXB5LWZpbGVcbi0tLS0tLS0tLS0tLS0tXG5cblRoZSBuYW1lIG9mIHRoZSBnZW5lcmF0ZWQgbWFuYWdlIHNjcmlwdCBpbiBgYGJpbmBgLlxuXG5TZWUgYENoYW5naW5nIHRoZSBiaW5hcnkgbmFtZWBfIGZvciBhbiBleGFtcGxlLlxuXG5zZXR0aW5ncy1maWxlXG4tLS0tLS0tLS0tLS0tXG5cblRoZSBuYW1lIG9mIHRoZSBnZW5lcmF0ZWQgc2V0dGluZ3MgZmlsZVxuKHRoZSBvbmUgdGhhdCdzIGF1dG9nZW5lcmF0ZWQgYnkgYnVpbGRvdXQgYXQgZWFjaCBydW4pLlxuXG5UaGlzIG9wdGlvbiBjYW4gYmUgcXVpdGUgdXNlZnVsIHRvIGF2b2lkIG1vZHVsZSBuYW1lIGNsYXNoZXM6OlxuXG4gICAgPj4+IHdyaXRlKCdidWlsZG91dC5jZmcnLCAnJydcbiAgICAuLi4gW2J1aWxkb3V0XVxuICAgIC4uLiBwYXJ0cyA9XG4gICAgLi4uICAgICBteXByb2plY3RcbiAgICAuLi5cbiAgICAuLi4gW215cHJvamVjdF1cbiAgICAuLi4gcmVjaXBlID0gZGpjLnJlY2lwZTJcbiAgICAuLi4gc2V0dGluZ3MtZmlsZSA9IGNvbmZpZ3VyYXRpb24ucHlcbiAgICAuLi4gJycnKVxuICAgID4+PiBwcmludCBcIiQgYmluL2J1aWxkb3V0XFxuXCIsIHN5c3RlbShidWlsZG91dClcbiAgICAkIGJpbi9idWlsZG91dFxuICAgIC4uLlxuICAgIEluc3RhbGxpbmcgbXlwcm9qZWN0LlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPj4+IHByaW50IHN5c3RlbSgnYmluL2RqYW5nbyBkaWZmc2V0dGluZ3MnKVxuICAgIERBVEFCQVNFUyA9IC4uLlxuICAgIFNFQ1JFVF9LRVkgPSAnLi4uJ1xuICAgIFNFVFRJTkdTX01PRFVMRSA9ICdteXByb2plY3RfcGFydF9zaXRlLmNvbmZpZ3VyYXRpb24nICAjIyNcbiAgICBUSU1FX1pPTkUgPSAnRXVyb3BlL1JvbWUnXG5cbnNldHRpbmdzLW1vZHVsZVxuLS0tLS0tLS0tLS0tLS0tXG5cbkxvYWRzIGEgY3VzdG9tIHNldHRpbmdzIG1vZHVsZSBpbnN0ZWFkIG9mIHRoZSBjb252ZW50aW9uYWwgb25lLlxuXG5TZWUgYEV4dGVybmFsIHNldHRpbmdzYF8gZm9yIGFuIGV4YW1wbGUuXG5cbnNldHRpbmdzLW92ZXJyaWRlXG4tLS0tLS0tLS0tLS0tLS0tLVxuXG5TcGVjaWZpZXMgc29tZSBzZXR0aW5ncyAoYXMgcHl0aG9uIGNvZGUpIHRvIGJlIGFwcGVuZGVkXG50byB0aGUgYXV0by1nZW5lcmF0ZWQgc2V0dGluZ3MgZmlsZSBhbmQgdGh1cyBvdmVycmlkaW5nIHRoZSBtb2R1bGUtZGVmaW5lZCBvbmVzLlxuXG5TZWUgYERlYnVnIG1vZGVgXyBmb3IgYW4gZXhhbXBsZS5cblxuc2l0ZXMtZGlyZWN0b3J5XG4tLS0tLS0tLS0tLS0tLS1cblxuQ2hhbmdlcyB0aGUgZGVmYXVsdCBsb2NhdGlvbiBvZiB0aGUgY29udmVudGlvbmFsIGNvbmZpZ3VyYXRpb24gbG9jYXRpb25cbihub3JtYWxseSB0aGUgYGBzaXRlc2BgIGRpcmVjdG9yeSkuXG5cbkl0IHdpbGwgYmUgYXBwZW5kZWQgdG8gYGBzeXMucGF0aGBgOjpcblxuICAgID4+PiBjb3B5dHJlZShbJ3NpdGVzJ10sIFsnbXlzaXRlcyddKVxuICAgID4+PiB3cml0ZSgnYnVpbGRvdXQuY2ZnJywgJycnXG4gICAgLi4uIFtidWlsZG91dF1cbiAgICAuLi4gcGFydHMgPVxuICAgIC4uLiAgICAgbXlwcm9qZWN0XG4gICAgLi4uXG4gICAgLi4uIFtteXByb2plY3RdXG4gICAgLi4uIHJlY2lwZSA9IGRqYy5yZWNpcGUyXG4gICAgLi4uIHNpdGVzLWRpcmVjdG9yeSA9IG15c2l0ZXNcbiAgICAuLi4gJycnKVxuICAgID4+PiBwcmludCBcIiQgYmluL2J1aWxkb3V0XFxuXCIsIHN5c3RlbShidWlsZG91dClcbiAgICAkIGJpbi9idWlsZG91dFxuICAgIC4uLlxuICAgIEluc3RhbGxpbmcgbXlwcm9qZWN0LlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPj4+IGNhdCgnYmluJywgJ2RqYW5nbycpXG4gICAgIy4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgPEJMQU5LTElORT5cbiAgICBpbXBvcnQgc3lzXG4gICAgc3lzLnBhdGhbMDowXSA9IFtcbiAgICAgICAgLi4uXG4gICAgICAgICcuLi4vbXlzaXRlcycsXG4gICAgICAgIF1cbiAgICA8QkxBTktMSU5FPlxuICAgIC4uLlxuXG5zdGF0aWMtZGlyZWN0b3J5XG4tLS0tLS0tLS0tLS0tLS0tXG5cblNldHMgdGhlIGxvY2F0aW9uIG9mIGBgU1RBVElDX1JPT1RgYCBhbmQgY3JlYXRlcyBpdCBpZiBtaXNzaW5nLlxuXG5TZWUgYE1lZGlhIGFuZCBzdGF0aWNgXy5cblxubWVkaWEtZGlyZWN0b3J5XG4tLS0tLS0tLS0tLS0tLS1cblxuU2FtZSBhcyBgc3RhdGljLWRpcmVjdG9yeWBfIGZvciBgYE1FRElBX1JPT1RgYC5cblxud3NnaS1maWxlXG4tLS0tLS0tLS1cblxuQ2hhbmdlcyB0aGUgbmFtZSBvZiB0aGUgZmlsZSB0aGF0IGNvbnRhaW5zIHRoZSAqV1NHSSogYXBwbGljYXRpb24uXG5cblRoZSBwdXJwb3NlIGlzIHNpbWlsYXIgdG8gYHNldHRpbmdzLWZpbGVgXzo6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsICcnJ1xuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID1cbiAgICAuLi4gICAgIG15cHJvamVjdFxuICAgIC4uLlxuICAgIC4uLiBbbXlwcm9qZWN0XVxuICAgIC4uLiByZWNpcGUgPSBkamMucmVjaXBlMlxuICAgIC4uLiB3c2dpLWZpbGUgPSB3c2dpYXBwLnB5XG4gICAgLi4uICcnJylcbiAgICA+Pj4gcHJpbnQgXCIkIGJpbi9idWlsZG91dFxcblwiLCBzeXN0ZW0oYnVpbGRvdXQpXG4gICAgJCBiaW4vYnVpbGRvdXRcbiAgICAuLi5cbiAgICBJbnN0YWxsaW5nIG15cHJvamVjdC5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgID4+PiBscygncGFydHMnLCAnbXlwcm9qZWN0JywgJ215cHJvamVjdF9wYXJ0X3NpdGUnKVxuICAgIC0gIF9faW5pdF9fLnB5XG4gICAgLSAgc2V0dGluZ3MucHlcbiAgICAtICB3c2dpYXBwLnB5XG5cbi4uIF9EamFuZ286IGh0dHBzOi8vZGphbmdvcHJvamVjdC5jb21cbi4uIF9gc2V0dGluZ3MgbW9kdWxlYDogaHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL2VuL2Rldi90b3BpY3Mvc2V0dGluZ3MvXG4uLiBfYGlmIHlvdXIgbmFtZSBpcyBub3QgRG9uYWxkIEtudXRoYDogaHR0cDovL3d3dy1jcy1mYWN1bHR5LnN0YW5mb3JkLmVkdS9+a251dGgvZmFxLmh0bWxcbi4uIF9QaW5heDogaHR0cDovL3BpbmF4cHJvamVjdC5jb20vXG4uLiBfYEdvb2dsZSBBcHAgRW5naW5lYDogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYXBwZW5naW5lL1xuXG5Db250cmlidXRvcnNcbioqKioqKioqKioqKlxuXG4gKiBTaW1vbmUgRGVwb250aSA8c2ltb25lLmRlcG9udGlAYWJzdHJhY3QuaXQ+LCBJbml0aWFsIEF1dGhvclxuICogQnJ1bm8gUmlwYSA8YnJ1bm8ucmlwYUBhYnN0cmFjdC5pdD5cbiAqIE1pa2tvIE9odGFtYWEgKEBtb285MDAwKVxuICogRGltaXRyaSBSb2NoZVxuXG5Jbml0YWwgZGV2ZWxvcGVtZW50IHNwb25zb3JlZCBieSBgQWJzdHJhY3QgT3BlbiBTb2x1dGlvbnNgX1xuXG4uLiBfYEFic3RyYWN0IE9wZW4gU29sdXRpb25zYDogaHR0cDovL3d3dy5hYnN0cmFjdC5pdFxuXG5DaGFuZ2UgaGlzdG9yeVxuKioqKioqKioqKioqKipcblxuMi4xICgyMDEyLTA3LTAyKVxuPT09PT09PT09PT09PT09PVxuXG4tIEZpeGVkIHNldHVwdG9vbHMtZ2l0IHByb2JsZW0uXG5cblxuMi4wICgyMDEyLTA3LTAyKVxuPT09PT09PT09PT09PT09PVxuXG4tIFJld3JpdGUgZnJvbSBgZGpjLnJlY2lwZWBfIFtTaW1vbmUgRGVwb250aV1cblxuXG4uLiBfYGRqYy5yZWNpcGVgOiBodHRwOi8vcHlwaS5weXRob24ub3JnL3B5cGkvZGpjLnJlY2lwZSIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiVU5LTk9XTiIs
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL2dpdGh1Yi5jb20vYWJzdHJhY3Qtb3Blbi1zb2x1dGlvbnMvZGpjLnJlY2lwZTIiLA==
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIkJTRCIs
ICAgICJtYWludGFpbmVyIjogbnVsbCw=
ICAgICJtYWludGFpbmVyX2VtYWlsIjogbnVsbCw=
ICAgICJuYW1lIjogImRqYy5yZWNpcGUyIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGpjLnJlY2lwZTIvIiw=
ICAgICJwbGF0Zm9ybSI6ICJVTktOT1dOIiw=
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGpjLnJlY2lwZTIvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogIlVOS05PV04iLA==
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9naXRodWIuY29tL2Fic3RyYWN0LW9wZW4tc29sdXRpb25zL2RqYy5yZWNpcGUyIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZGpjLnJlY2lwZTIvMi4xLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiBudWxsLA==
ICAgICJzdW1tYXJ5IjogIkEgRGphbmdvIGJ1aWxkb3V0IHJlY2lwZSIs
ICAgICJ2ZXJzaW9uIjogIjIuMSIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA3NDUxOTMs
ICAicmVsZWFzZXMiOiB7
ICAgICIyLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwYTc2NzM4ZjczMjU3ZDdhZWExN2E5YjRkMzc2ZGNkN2QyYTY5NTZlNTIyZGVhYTQ2NzQ4YjhlYWVkOGI4Njg0Iiw=
ICAgICAgICAgICJtZDUiOiAiNGQ2NDc1ZDhhYTNlYzcxOGMxZjA0ZjA0ZWRmMDEzNjAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGMwYjk4ZTVhZDE5NWZiZDBkZmMyODFjNTFkYWM2ZWZiYTAyMGQ5ZDhiZjlmZDgzMzhhN2Q3YTI4NWVlYWY4YiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZGpjLnJlY2lwZTItMi4wLnppcCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0ZDY0NzVkOGFhM2VjNzE4YzFmMDRmMDRlZGYwMTM2MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI1NTcyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxMi0wNy0wMlQxMTowOToyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxMi0wNy0wMlQxMTowOToyMS45OTA5MjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wYS83Ni83MzhmNzMyNTdkN2FlYTE3YTliNGQzNzZkY2Q3ZDJhNjk1NmU1MjJkZWFhNDY3NDhiOGVhZWQ4Yjg2ODQvZGpjLnJlY2lwZTItMi4wLnppcCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMzAzYzcyMmNkYTExYWQwMzM4ZjM3OWViZDgxZmMyNTJhMjgzZTRkOTEwNjA3OTZlYTUzNTBjZjc0Y2MwZmZhIiw=
ICAgICAgICAgICJtZDUiOiAiYjFhYTdiYjlmY2FhNWIxYTQzNjc4NGQxZTc5NDg1YTkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzFlYWFiMTM4MzI4NGJiNTVjMjMwYTg0MTc2NWNjZDM0NTAzNDNjYmMzMWM3MTQ2MTc4MDM4MDY2YzFlMThjMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZGpjLnJlY2lwZTItMi4xLnppcCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiMWFhN2JiOWZjYWE1YjFhNDM2Nzg0ZDFlNzk0ODVhOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM4MTY2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxMi0wNy0wMlQxMToxNzoxNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxMi0wNy0wMlQxMToxNzoxNy45NjA3NjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMy8wMy9jNzIyY2RhMTFhZDAzMzhmMzc5ZWJkODFmYzI1MmEyODNlNGQ5MTA2MDc5NmVhNTM1MGNmNzRjYzBmZmEvZGpjLnJlY2lwZTItMi4xLnppcCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMDMwM2M3MjJjZGExMWFkMDMzOGYzNzllYmQ4MWZjMjUyYTI4M2U0ZDkxMDYwNzk2ZWE1MzUwY2Y3NGNjMGZmYSIs
ICAgICAgICAibWQ1IjogImIxYWE3YmI5ZmNhYTViMWE0MzY3ODRkMWU3OTQ4NWE5Iiw=
ICAgICAgICAic2hhMjU2IjogImMxZWFhYjEzODMyODRiYjU1YzIzMGE4NDE3NjVjY2QzNDUwMzQzY2JjMzFjNzE0NjE3ODAzODA2NmMxZTE4YzAi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImRqYy5yZWNpcGUyLTIuMS56aXAiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYjFhYTdiYjlmY2FhNWIxYTQzNjc4NGQxZTc5NDg1YTkiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAzODE2Niw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTItMDctMDJUMTE6MTc6MTciLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTItMDctMDJUMTE6MTc6MTcuOTYwNzY1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMDMvMDMvYzcyMmNkYTExYWQwMzM4ZjM3OWViZDgxZmMyNTJhMjgzZTRkOTEwNjA3OTZlYTUzNTBjZjc0Y2MwZmZhL2RqYy5yZWNpcGUyLTIuMS56aXAiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
