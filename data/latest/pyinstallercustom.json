ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiR2lvdmFubmkgQmFqbywgSGFydG11dCBHb2ViZWwsIERhdmlkIFZpZXJyYSwgRGF2aWQgQ29ydGVzaSwgTWFydGluIFppYnJpY2t5Iiw=
ICAgICJhdXRob3JfZW1haWwiOiAicHlpbnN0YWxsZXJAZ29vZ2xlZ3JvdXBzLmNvbSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA2IC0gTWF0dXJlIiw=
ICAgICAgIkVudmlyb25tZW50IDo6IENvbnNvbGUiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IE90aGVyIEF1ZGllbmNlIiw=
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IFN5c3RlbSBBZG1pbmlzdHJhdG9ycyIs
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHYyIChHUEx2MikiLA==
ICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogRW5nbGlzaCIs
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogTWFjT1MgOjogTWFjT1MgWCIs
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogTWljcm9zb2Z0IDo6IFdpbmRvd3MiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVgiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVggOjogQUlYIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVggOjogQlNEIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVggOjogTGludXgiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogUE9TSVggOjogU3VuT1MvU29sYXJpcyIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IEMiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjUiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjYiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiBJbXBsZW1lbnRhdGlvbiA6OiBDUHl0aG9uIiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50Iiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IEJ1aWxkIFRvb2xzIiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IEludGVycHJldGVycyIs
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyA6OiBQeXRob24gTW9kdWxlcyIs
ICAgICAgIlRvcGljIDo6IFN5c3RlbSA6OiBJbnN0YWxsYXRpb24vU2V0dXAiLA==
ICAgICAgIlRvcGljIDo6IFN5c3RlbSA6OiBTb2Z0d2FyZSBEaXN0cmlidXRpb24iLA==
ICAgICAgIlRvcGljIDo6IFV0aWxpdGllcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJQeUluc3RhbGxlciBPdmVydmlld1xuPT09PT09PT09PT09PT09PT09PT1cblxuUHlJbnN0YWxsZXIgYnVuZGxlcyBhIFB5dGhvbiBhcHBsaWNhdGlvbiBhbmQgYWxsIGl0cyBkZXBlbmRlbmNpZXMgaW50byBhIHNpbmdsZVxucGFja2FnZS4gVGhlIHVzZXIgY2FuIHJ1biB0aGUgcGFja2FnZWQgYXBwIHdpdGhvdXQgaW5zdGFsbGluZyBhIFB5dGhvblxuaW50ZXJwcmV0ZXIgb3IgYW55IG1vZHVsZXMuXG5cblxuOkRvY3VtZW50YXRpb246IGh0dHBzOi8vcHlpbnN0YWxsZXIucmVhZHRoZWRvY3MuaW8vXG46V2Vic2l0ZTogICAgICAgaHR0cDovL3d3dy5weWluc3RhbGxlci5vcmcvXG46Q29kZTogICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL3B5aW5zdGFsbGVyL3B5aW5zdGFsbGVyXG46RG9uYXRlOiAgICAgICAgfCBodHRwczovL3d3dy5ib3VudHlzb3VyY2UuY29tL3RlYW1zL3B5aW5zdGFsbGVyXG4gICAgICAgICAgICAgICAgfCBCaXRjb2luOiAxSlVGamF3eldEUjdUYzh6OVRLWHN0VkZkamtEWTlGYnRLXG4gICAgICAgICAgICAgICAgfCBgbW9yZSB3YXlzIHRvIGRvbmF0ZSDigKYgPGh0dHA6Ly93d3cucHlpbnN0YWxsZXIub3JnL2RvbmF0ZS5odG1sPmBfXG5cblxuUHlJbnN0YWxsZXIgcmVhZHMgYSBQeXRob24gc2NyaXB0IHdyaXR0ZW4gYnkgeW91LiBJdCBhbmFseXplcyB5b3VyIGNvZGVcbnRvIGRpc2NvdmVyIGV2ZXJ5IG90aGVyIG1vZHVsZSBhbmQgbGlicmFyeSB5b3VyIHNjcmlwdCBuZWVkcyBpbiBvcmRlciB0b1xuZXhlY3V0ZS4gVGhlbiBpdCBjb2xsZWN0cyBjb3BpZXMgb2YgYWxsIHRob3NlIGZpbGVzIC0tIGluY2x1ZGluZyB0aGUgYWN0aXZlXG5QeXRob24gaW50ZXJwcmV0ZXIhIC0tIGFuZCBwdXRzIHRoZW0gd2l0aCB5b3VyIHNjcmlwdCBpbiBhIHNpbmdsZSBmb2xkZXIsIG9yXG5vcHRpb25hbGx5IGluIGEgc2luZ2xlIGV4ZWN1dGFibGUgZmlsZS5cblxuXG5QeUluc3RhbGxlciBpcyB0ZXN0ZWQgYWdhaW5zdCBXaW5kb3dzLCBNYWMgT1MgWCwgYW5kIExpbnV4LiBIb3dldmVyLCBpdCBpcyBub3RcbmEgY3Jvc3MtY29tcGlsZXI6IHRvIG1ha2UgYSBXaW5kb3dzIGFwcCB5b3UgcnVuIFB5SW5zdGFsbGVyIGluIFdpbmRvd3M7IHRvIG1ha2VcbmEgTGludXggYXBwIHlvdSBydW4gaXQgaW4gTGludXgsIGV0Yy4gUHlJbnN0YWxsZXIgaGFzIGJlZW4gdXNlZCBzdWNjZXNzZnVsbHlcbndpdGggQUlYLCBTb2xhcmlzLCBhbmQgRnJlZUJTRCwgYnV0IGlzIG5vdCB0ZXN0ZWQgYWdhaW5zdCB0aGVtLlxuXG5cbk1haW4gQWR2YW50YWdlc1xuLS0tLS0tLS0tLS0tLS0tXG5cbi0gV29ya3Mgb3V0LW9mLXRoZS1ib3ggd2l0aCBhbnkgUHl0aG9uIHZlcnNpb24gMi43IC8gMy40LTMuNy5cbi0gRnVsbHkgbXVsdGktcGxhdGZvcm0sIGFuZCB1c2VzIHRoZSBPUyBzdXBwb3J0IHRvIGxvYWQgdGhlIGR5bmFtaWMgbGlicmFyaWVzLFxuICB0aHVzIGVuc3VyaW5nIGZ1bGwgY29tcGF0aWJpbGl0eS5cbi0gQ29ycmVjdGx5IGJ1bmRsZXMgdGhlIG1ham9yIFB5dGhvbiBwYWNrYWdlcyBzdWNoIGFzIG51bXB5LCBQeVF0NCwgUHlRdDUsXG4gIFB5U2lkZSwgRGphbmdvLCB3eFB5dGhvbiwgbWF0cGxvdGxpYiBhbmQgb3RoZXJzIG91dC1vZi10aGUtYm94LlxuLSBDb21wYXRpYmxlIHdpdGggbWFueSAzcmQtcGFydHkgcGFja2FnZXMgb3V0LW9mLXRoZS1ib3guIChBbGwgdGhlIHJlcXVpcmVkXG4gIHRyaWNrcyB0byBtYWtlIGV4dGVybmFsIHBhY2thZ2VzIHdvcmsgYXJlIGFscmVhZHkgaW50ZWdyYXRlZC4pXG4tIExpYnJhcmllcyBsaWtlIFB5UXQ1LCBQeVF0NCwgUHlTaWRlLCB3eFB5dGhvbiwgbWF0cGxvdGxpYiBvciBEamFuZ28gYXJlIGZ1bGx5XG4gIHN1cHBvcnRlZCwgd2l0aG91dCBoYXZpbmcgdG8gaGFuZGxlIHBsdWdpbnMgb3IgZXh0ZXJuYWwgZGF0YSBmaWxlcyBtYW51YWxseS5cbi0gV29ya2luZyBjb2RlIHNpZ25pbmcgb24gT1MgWC5cbi0gQnVuZGxlcyBNUyBWaXN1YWwgQysrIERMTHMgb24gV2luZG93cy5cblxuXG5JbnN0YWxsYXRpb25cbi0tLS0tLS0tLS0tLVxuXG5QeUluc3RhbGxlciBpcyBhdmFpbGFibGUgb24gUHlQSS4gWW91IGNhbiBpbnN0YWxsIGl0IHRocm91Z2ggYHBpcGA6OlxuXG4gICAgICBwaXAgaW5zdGFsbCBweWluc3RhbGxlclxuXG5cblJlcXVpcmVtZW50cyBhbmQgVGVzdGVkIFBsYXRmb3Jtc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi0gUHl0aG9uOiBcblxuIC0gMi43IG9yIDMuNC0zLjdcbiAtIFB5Q3J5cHRvXyAyLjQrIChvbmx5IGlmIHVzaW5nIGJ5dGVjb2RlIGVuY3J5cHRpb24pXG5cbi0gV2luZG93cyAoMzJiaXQvNjRiaXQpOlxuXG4gLSBXaW5kb3dzIFhQIG9yIG5ld2VyLlxuICAgIFxuLSBMaW51eCAoMzJiaXQvNjRiaXQpXG5cbiAtIGxkZDogQ29uc29sZSBhcHBsaWNhdGlvbiB0byBwcmludCB0aGUgc2hhcmVkIGxpYnJhcmllcyByZXF1aXJlZFxuICAgYnkgZWFjaCBwcm9ncmFtIG9yIHNoYXJlZCBsaWJyYXJ5LiBUaGlzIHR5cGljYWxseSBjYW4gYmUgZm91bmQgaW5cbiAgIHRoZSBkaXN0cmlidXRpb24tcGFja2FnZSBgZ2xpYmNgIG9yIGBsaWJjLWJpbmAuXG4gLSBvYmpkdW1wOiBDb25zb2xlIGFwcGxpY2F0aW9uIHRvIGRpc3BsYXkgaW5mb3JtYXRpb24gZnJvbSBcbiAgIG9iamVjdCBmaWxlcy4gVGhpcyB0eXBpY2FsbHkgY2FuIGJlIGZvdW5kIGluIHRoZVxuICAgZGlzdHJpYnV0aW9uLXBhY2thZ2UgYGJpbnV0aWxzYC5cbiAtIG9iamNvcHk6IENvbnNvbGUgYXBwbGljYXRpb24gdG8gY29weSBhbmQgdHJhbnNsYXRlIG9iamVjdCBmaWxlcy5cbiAgIFRoaXMgdHlwaWNhbGx5IGNhbiBiZSBmb3VuZCBpbiB0aGUgZGlzdHJpYnV0aW9uLXBhY2thZ2UgYGJpbnV0aWxzYCxcbiAgIHRvby5cblxuLSBNYWMgT1MgWCAoNjRiaXQpOlxuXG4gLSBNYWMgT1MgWCAxMC43IChMaW9uKSBvciBuZXdlci5cblxuXG5Vc2FnZVxuLS0tLS1cblxuQmFzaWMgdXNhZ2UgaXMgdmVyeSBzaW1wbGUsIGp1c3QgcnVuIGl0IGFnYWluc3QgeW91ciBtYWluIHNjcmlwdDo6XG5cbiAgICAgIHB5aW5zdGFsbGVyIC9wYXRoL3RvL3lvdXJzY3JpcHQucHlcblxuRm9yIG1vcmUgZGV0YWlscywgc2VlIHRoZSBgbWFudWFsYF8uXG5cblxuVW50ZXN0ZWQgUGxhdGZvcm1zXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuVGhlIGZvbGxvd2luZyBwbGF0Zm9ybXMgaGF2ZSBiZWVuIGNvbnRyaWJ1dGVkIGFuZCBhbnkgZmVlZGJhY2sgb3JcbmVuaGFuY2VtZW50cyBvbiB0aGVzZSBhcmUgd2VsY29tZS5cblxuLSBGcmVlQlNEXG5cbiAtIGxkZFxuXG4tIFNvbGFyaXNcblxuIC0gbGRkXG4gLSBvYmpkdW1wXG5cbi0gQUlYXG5cbiAtIEFJWCA2LjEgb3IgbmV3ZXIuIFB5SW5zdGFsbGVyIHdpbGwgbm90IHdvcmsgd2l0aCBzdGF0aWNhbGx5XG4gICBsaW5rZWQgUHl0aG9uIGxpYnJhcmllcy5cbiAtIGxkZFxuXG4tIFBvd2VyUEMgTGludXggKERlYmlhbilcblxuXG5CZWZvcmUgdXNpbmcgYW55IGNvbnRyaWJ1dGVkIHBsYXRmb3JtLCB5b3UgbmVlZCB0byBidWlsZCB0aGUgUHlJbnN0YWxsZXJcbmJvb3Rsb2FkZXIsIGFzIHdlIGRvIG5vdCBzaGlwIGJpbmFyeSBwYWNrYWdlcy4gRG93bmxvYWQgUHlJbnN0YWxsZXJcbnNvdXJjZSwgYW5kIGJ1aWxkIHRoZSBib290bG9hZGVyOjpcbiAgICAgXG4gICAgICAgIGNkIGJvb3Rsb2FkZXJcbiAgICAgICAgcHl0aG9uIC4vd2FmIGRpc3RjbGVhbiBhbGxcblxuVGhlbiBpbnN0YWxsIFB5SW5zdGFsbGVyOjpcblxuICAgICAgICBweXRob24gc2V0dXAucHkgaW5zdGFsbFxuICAgICAgICBcbm9yIHNpbXBseSB1c2UgaXQgZGlyZWN0bHkgZnJvbSB0aGUgc291cmNlIChweWluc3RhbGxlci5weSkuXG5cblxuXG4uLiBfUHlDcnlwdG86IGh0dHBzOi8vd3d3LmRsaXR6Lm5ldC9zb2Z0d2FyZS9weWNyeXB0by9cbi4uIF9gbWFudWFsYDogaHR0cHM6Ly9weWluc3RhbGxlci5yZWFkdGhlZG9jcy5pby9lbi92My40L1xuXG5cblxuLi4gRGVmaW5lIHNvbWUgcm9sZXMgc28gdGhleSBjYW4gYmUgdXNlZCBpbiB0aGUgUkVBRE1FLlxuXG4uLiByb2xlOjogcmVmXG4uLiByb2xlOjogcHJvZ3JhbVxuLi4gcm9sZTo6IHBlcFxuLi4gcm9sZTo6IGlzc3VlXG5cblxuQ2hhbmdlbG9nIGZvciBQeUluc3RhbGxlclxuPT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uLiBOT1RFOlxuXG4gICBZb3Ugc2hvdWxkICpOT1QqIGJlIGFkZGluZyBuZXcgY2hhbmdlIGxvZyBlbnRyaWVzIHRvIHRoaXMgZmlsZSwgdGhpc1xuICAgZmlsZSBpcyBtYW5hZ2VkIGJ5IHRvd25jcmllci4gWW91ICptYXkqIGVkaXQgcHJldmlvdXMgY2hhbmdlIGxvZ3MgdG9cbiAgIGZpeCBwcm9ibGVtcyBsaWtlIHR5cG8gY29ycmVjdGlvbnMgb3Igc3VjaC5cblxuICAgVG8gYWRkIGEgbmV3IGNoYW5nZSBsb2cgZW50cnksIHBsZWFzZSBzZWVcbiAgIGh0dHBzOi8vcHlpbnN0YWxsZXIucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2RldmVsb3BtZW50L2NoYW5nZWxvZy1lbnRyaWVzLmh0bWxcblxuLi4gdG93bmNyaWVyIHJlbGVhc2Ugbm90ZXMgc3RhcnRcblxuMy40ICgyMDE4LTA5LTA5KVxuLS0tLS0tLS0tLS0tLS0tLVxuXG5GZWF0dXJlc1xufn5+fn5+fn5cblxuKiBBZGQgc3VwcG9ydCBmb3IgUHl0aG9uIDMuNyAoOmlzc3VlOmAjMjc2MGAsIDppc3N1ZTpgIzMwMDdgLCA6aXNzdWU6YCMzMDc2YCxcbiAgOmlzc3VlOmAjMzM5OWAsIDppc3N1ZTpgIzM2NTZgKSwgaW1wbGVtZW50ZWQgYnkgSGFydG11dCBHb2ViZWwuXG4qIEltcHJvdmVkIHN1cHBvcnQgZm9yIFF0NS1iYXNlZCBhcHBsaWNhdGlvbnMgKDppc3N1ZTpgIzM0MzlgKS5cbiAgQnkgZW11bGF0aW5nIG11Y2ggb2YgdGhlIFF0IGRlcGxveW1lbnQgdG9vbHMnIGJlaGF2aW9yXG4gIG1vc3QgUHlRdDUgdmFyaWFudHMgYXJlIHN1cHBvcnRlZC5cbiAgSG93ZXZlciwgQW5hY29uZGEncyBQeVF0NSBwYWNrYWdlcyBhcmUgbm90IHN1cHBvcnRlZFxuICBiZWNhdXNlIGl0cyBgYFFsaWJyYXJ5SW5mb2BgIGltcGxlbWVudGF0aW9uIHJlcG9ydHMgaW5jb3JyZWN0IHZhbHVlcy5cbiAgQ0kgdGVzdHMgY3VycmVudGx5IHJ1biBvbiBQeVF0NSA1LjExLjIuIE1hbnkgdGhhbmtzIHRvIEJyeWFuIEEuIEpvbmVzIGZvclxuICB0YWtpbmcgdGhpcyBzdHJ1Z2dsZS5cbiogYGAtLWRlYnVnYGAgbm93IGFsbG93cyBtb3JlIGRlYnVnZ2luZyB0byBiZSBhY3RpdmF0ZWQgbW9yZSBlYXNpbHkuIFRoaXNcbiAgaW5jbHVkZXMgYm9vdGxvYWRlciBtZXNzYWdlcywgUHl0aG9uJ3MgXCJ2ZXJib3NlIGltcG9ydHNcIiBhbmQgc3RvcmUgY29sbGVjdGVkXG4gIFB5dGhvbiBmaWxlcyBpbiB0aGUgb3V0cHV0IGRpcmVjdG9yeSBpbnN0ZWFkIG9mIGZyZWV6aW5nLiBTZWUgYGBweWluc3RhbGxlclxuICDigJNoZWxwYGAgZm9yIGRldGFpbHMuICg6aXNzdWU6YCMzNTQ2YCwgOmlzc3VlOmAjMzU4NWAsIDppc3N1ZTpgIzM1ODdgKVxuKiBIaW50IHVzZXJzIHRvIGluc3RhbGwgZGV2ZWxvcG1lbnQgcGFja2FnZSBmb3IgbWlzc2luZyBgcHljb25maWcuaGAuXG4gICg6aXNzdWU6YCMzMzQ4YClcblxuKiBJbiBgYHNldHVwLnB5YGAgc3BlY2lmeSBQeXRob24gdmVyc2lvbnMgdGhpcyBkaXN0cmlidXRpb24gaXMgY29tcGF0aWJsZSB3aXRoLlxuKiBNYWtlIGJhc2VfbGlicmFyeS56aXAgcmVwcm9kdWNpYmxlOiBTZXQgdGltZS1zdGFtcCBvZiBmaWxlcy4gKDppc3N1ZTpgIzI5NTJgLFxuICA6aXNzdWU6YCMyOTkwYClcbiogTmV3IGNvbW1hbmQtbGluZSBvcHRpb24gYGAtLWJvb3Rsb2FkZXItaWdub3JlLXNpZ25hbHNgYCB0byBtYWtlIHRoZVxuICBib290bG9hZGVyIGZvcndhcmQgYWxsIHNpZ25hbHMgdG8gdGhlIGJ1bmRsZSBhcHBsaWNhdGlvbi4gKDppc3N1ZTpgIzIwOGAsXG4gIDppc3N1ZTpgIzM1MTVgKVxuKiAoT1MgWCkgUHl0aG9uIHN0YW5kYXJkIGxpYnJhcnkgbW9kdWxlIGBgcGxpc3RsaWJgYCBpcyBub3cgdXNlZCBmb3IgZ2VuZXJhdGluZ1xuICB0aGUgYGBJbmZvLnBsaXN0YGAgZmlsZS4gVGhpcyBhbGxvd3MgcGFzc2luZyBjb21wbGV4IGFuZCBuZXN0ZWQgZGF0YSBpblxuICBgYGluZm9fcGxpc3RgYC4gKDppc3N1ZTpgIzM1MzJgLCA6aXNzdWU6YCMzNTQxYClcblxuXG5CdWdmaXhcbn5+fn5+flxuXG4qIEFkZCBtaXNzaW5nIGBgd2FybmluZ3NgYCBtb2R1bGUgdG8gYGBiYXNlX2xpYnJhcnkuemlwYGAuICg6aXNzdWU6YCMzMzk3YCxcbiAgOmlzc3VlOmAjMzQwMGApXG4qIEZpeCBhbmQgc2ltcGxpZnkgc2VhcmNoIGZvciBsaWJweXRob24gb24gd2luZG93cywgbXN5czIsIGN5Z3dpbi5cbiAgKDppc3N1ZTpgIzMxNjdgLCA6aXNzdWU6YCMzMTY4YClcbiogRml4IGluY29tcGF0aWJpbGl0eSB3aXRoIGBweWNyeXB0b2RvbWVgIChyZXBsYWNlbWVudCBmb3IgdGhlIChhcHBhcmVudGx5XG4gIGFiYW5kb25lZCkgYHB5Y3J5cHRvYCBsaWJyYXJ5IHdoZW4gdXNpbmcgZW5jcnlwdGVkIFBZWi1hcmNoaXZlcy5cbiAgKDppc3N1ZTpgIzM1MzdgKVxuKiBGaXggcmFjZSBjb25kaXRpb24gY2F1c2VkIGJ5IHRoZSBib290bG9hZGVyIHBhcmVudCBwcm9jZXNzIHRlcm1pbmF0aW5nIGJlZm9yZVxuICB0aGUgY2hpbGQgaXMgZmluaXNoZWQuIFRoaXMgbWlnaHQgaGFwcGVuIGUuZy4gd2hlbiB0aGUgY2hpbGQgcHJvY2VzcyBpdHNlbGZcbiAgcGxheXMgd2l0aCBgYHN3aXRjaF9yb290YGAuICg6aXNzdWU6YCMyOTY2YClcbiogRml4IHdyb25nIHNlY3VyaXR5IGFsZXJ0IGlmIGEgZmlsZW5hbWUgY29udGFpbnMgYGAuLmBgLiAoOmlzc3VlOmAjMjY0MWAsXG4gIDppc3N1ZTpgIzM0OTFgKVxuKiBPbmx5IHVwZGF0ZSByZXNvdXJjZXMgb2YgY2FjaGVkIGZpbGVzIHdoZW4gbmVjZXNzYXJ5IHRvIGtlZXAgc2lnbmF0dXJlIHZhbGlkLlxuICAoOmlzc3VlOmAjMjUyNmApXG4qIChPUyBYKSBGaXg6IEFwcCBpY29uIGFwcGVhcnMgaW4gdGhlIGRvY2ssIGV2ZW4gaWYgYGBMU1VJRWxlbWVudD1UcnVlYGAuXG4gICg6aXNzdWU6YCMxOTE3YCwgOmlzc3VlOmAjMjA3NWAsIDppc3N1ZTpgIzM1NjZgKVxuKiAoV2luZG93cykgRml4IGNyYXNoIHdoZW4gdHJ5aW5nIHRvIGFkZCByZXNvdXJjZXMgdG8gV2luZG93cyBleGVjdXRhYmxlIHVzaW5nXG4gIC0tcmVzb3VyY2Ugb3B0aW9uLiAoOmlzc3VlOmAjMjY3NWAsIDppc3N1ZTpgIzM0MjNgKVxuKiAoV2luZG93cykgT25seSB1cGRhdGUgcmVzb3VyY2VzIHdoZW4gbmVjZXNzYXJ5IHRvIGtlZXAgc2lnbmF0dXJlIHZhbGlkXG4gICg6aXNzdWU6YCMzMzIzYClcbiogKFdpbmRvd3MpIFVzZSBVVEYtOCB3aGVuIHJlYWRpbmcgWE1MIG1hbmlmZXN0IGZpbGUuICg6aXNzdWU6YCMzNDc2YClcbiogKFdpbmRvd3MpIHV0aWxzL3dpbjMyOiB0cmFwIGludmFsaWQgYGAtLWljb25gYCBhcmd1bWVudHMgYW5kIHRlcm1pbmF0ZSB3aXRoIGFcbiAgbWVzc2FnZS4gKDppc3N1ZTpgIzMxMjZgKVxuXG5cbkluY29tcGF0aWJsZSBDaGFuZ2VzXG5+fn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIERyb3Agc3VwcG9ydCBmb3IgUHl0aG9uIDMuMyAoOmlzc3VlOmAjMzI4OGApLCBUaGFua3MgdG8gSHVnbyBhbmQgeGlvdmF0LlxuKiBgYC0tZGVidWdgYCBub3cgZXhwZWN0cyBhbiAob3B0aW9uYWwpIGFyZ3VtZW50LiBUaHVzIHVzaW5nIGBg4oCmIC0tZGVidWdcbiAgc2NyaXB0LnB5YGAgd2lsbCBicmVhay4gVXNlIGBg4oCmIHNjcmlwdC5weSAtLWRlYnVnYGAgb3IgYGDigKYgLS1kZWJ1Zz1hbGxcbiAgc2NyaXB0LnB5YGAgaW5zdGVhZC4gQWxzbyBgYC0tZGVidWc9YWxsYGAgKHdoaWNoIGlzIHRoZSBkZWZhdWx0IGlmIG5vXG4gIGFyZ3VtZW50IGlzIGdpdmVuKSBpbmNsdWRlcyBgYG5vYXJjaGl2ZWBgLCB3aGljaCB3aWxsIHN0b3JlIGFsbCBjb2xsZWN0ZWRcbiAgUHl0aG9uIGZpbGVzIGluIHRoZSBvdXRwdXQgZGlyZWN0b3J5IGluc3RlYWQgb2YgZnJlZXppbmcgdGhlbS4gVXNlXG4gIGBgLS1kZWJ1Zz1ib290bG9hZGVyYGAgdG8gZ2V0IHRoZSBmb3JtZXIgYmVoYXZpb3IuICg6aXNzdWU6YCMzNTQ2YCxcbiAgOmlzc3VlOmAjMzU4NWAsIDppc3N1ZTpgIzM1ODdgKVxuKiAobWlub3IpIENoYW5nZSBuYW1pbmcgb2YgaW50ZXJtZWRpYXRlIGJ1aWxkIGZpbGVzIGFuZCB0aGUgYHdhcm5gIGZpbGUuIFRoaXNcbiAgb25seSBlZmZlY3RzIDNyZC1wYXJ0eSB0b29scyAoaWYgYW55IGV4aXN0cykgcmVseWluZyBvbiB0aGUgbmFtZXMgb2YgdGhlc2VcbiAgZmlsZXMuXG4qIChtaW5vcikgVGhlIGRlc3RpbmF0aW9uIHBhdGggZm9yIGAtLWFkZC1kYXRhYCBhbmQgYC0tYWRkLWJpbmFyeWAgbXVzdCBub1xuICBsb25nZXIgYmUgZW1wdHksIHVzZSBgYC5gYCBpbnN0ZWFkLiAoOmlzc3VlOmAjMzA2NmApXG4qIChtaW5vcikgVXNlIHN0YW5kYXJkIHBhdGgsIG5vdCBkb3R0ZWQgcGF0aCwgZm9yIEMgZXh0ZW5zaW9ucyAoUHl0aG9uIDMgb25seSkuXG5cblxuSG9va3Ncbn5+fn5+XG5cbiogTmV3IGhvb2tzIGZvciBib2tlaCB2aXN1YWxpemF0aW9uIGxpYnJhcnkgKDppc3N1ZTpgIzM2MDdgKSxcbiAgQ2hhbXBsYWluLCBDbHV0dGVyICg6aXNzdWU6YCMzNDQzYCkgZHluYWNvbmYgKDppc3N1ZTpgIzM2NDFgKSwgZmxleFxuICAoOmlzc3VlOmAjMzQwMWApLCBGTVB5ICg6aXNzdWU6YCMzNTg5YCksIGdpLnJlcG9zaXRvcnkueGxpYlxuICAoOmlzc3VlOmAjMjYzNGAsIDppc3N1ZTpgIzMzOTZgKSBnb29nbGUtY2xvdWQtdHJhbnNsYXRlLFxuICBnb29nbGUtYXBpLWNvcmUgKDppc3N1ZTpgIzM2NThgKSwgamVkaSAoOmlzc3VlOmAjMzUzNWAsXG4gIDppc3N1ZTpgIzM2MTJgKSwgbmx0ayAoOmlzc3VlOmAjMzcwNWApLCBwYW5kYXMgKDppc3N1ZTpgIzI5NzhgLFxuICA6aXNzdWU6YCMyOTk4YCwgOmlzc3VlOmAjMjk5OWAsIDppc3N1ZTpgIzMwMTVgLCA6aXNzdWU6YCMzMDYzYCxcbiAgOmlzc3VlOmAjMzA3OWApLCBwaG9uZW51bWJlcnMgKDppc3N1ZTpgIzMzODFgLCA6aXNzdWU6YCMzNTU4YCksXG4gIHBpbnlpbiAoOmlzc3VlOmAjMjgyMmApLCBQeVNpZGUucGhvbm9uLCBQeVNpZGUuUXRTcWxcbiAgKDppc3N1ZTpgIzI4NTlgKSwgcHl0b3JjaCAoOmlzc3VlOmAjMzY1N2ApLCBzY2lweSAoOmlzc3VlOmAjMjk4N2AsXG4gIDppc3N1ZTpgIzMwNDhgKSwgdXZsb29wICg6aXNzdWU6YCMyODk4YCksIHdlYjMsIGV0aF9hY2NvdW50LFxuICBldGhfa2V5ZmlsZSAoOmlzc3VlOmAjMzM2NWAsIDppc3N1ZTpgIzMzNzNgKS5cblxuKiBVcGRhdGVkIGhvb2tzIGZvciBDcnlwdG9kb21lIDMuNC44LCBEamFuZ28gMi4xLCBnZXZlbnQgMS4zLlxuICBDcnlwdG8gKHN1cHBvcnQgZm9yIFB5Q3J5cHRvZG9tZSkgKDppc3N1ZTpgIzM0MjRgKSxcbiAgR3N0IGFuZCBHZGtQaXhidWYgKHRvIHdvcmsgb24gbXN5czIsIDppc3N1ZTpgIzMyNTdgLCA6aXNzdWU6YCMzMzg3YCksXG4gIHNwaGlueCAxLjcuMSwgc2V0dXB0b29scyAzOS4wLlxuXG4qIFVwZGF0ZWQgaG9va3MgZm9yIFB5UXQ1ICg6aXNzdWU6YCMxOTMwYCwgOmlzc3VlOmAjMTk4OGAsIDppc3N1ZTpgIzIxNDFgLFxuICA6aXNzdWU6YCMyMTU2YCwgOmlzc3VlOmAjMjIyMGAsIDppc3N1ZTpgIzI1MThgLCA6aXNzdWU6YCMyNTY2YCxcbiAgOmlzc3VlOmAjMjU3M2AsIDppc3N1ZTpgIzI1NzdgLCA6aXNzdWU6YCMyODU3YCwgOmlzc3VlOmAjMjkyNGAsXG4gIDppc3N1ZTpgIzI5NzZgLCA6aXNzdWU6YCMzMTc1YCwgOmlzc3VlOmAjMzIxMWAsIDppc3N1ZTpgIzMyMzNgLFxuICA6aXNzdWU6YCMzMzA4YCwgOmlzc3VlOmAjMzMzOGAsIDppc3N1ZTpgIzM0MTdgLCA6aXNzdWU6YCMzNDM5YCxcbiAgOmlzc3VlOmAjMzQ1OGAsIDppc3N1ZTpgIzM1MDVgKSwgYW1vbmcgb3RoZXJzOlxuICAtIEFsbCBRTUwgaXMgbm93IGxvYWRlZCBieSBRdFFtbC5RUW1sRW5naW5lLlxuICAtIEltcHJvdmUgZXJyb3IgcmVwb3J0aW5nIHdoZW4gZGV0ZXJtaW5pbmcgdGhlIFB5UXQ1IGxpYnJhcnkgbG9jYXRpb24uXG4gIC0gSW1wcm92ZWQgbWV0aG9kIGZvciBmaW5kaW5nIHF0LmNvbmYuXG4gIC0gSW5jbHVkZSBPcGVuR0wgZmFsbGJhY2sgRExMcyBmb3IgUHlRdDUuICg6aXNzdWU6YCMzNTY4YCkuXG4gIC0gUGxhY2UgUHlRdDUgRExMcyBpbiB0aGUgY29ycmVjdCBsb2NhdGlvbiAoOmlzc3VlOmAjMzU4M2ApLlxuXG4qIEZpeCBob29rcyBmb3IgY3J5cHRvZG9tZSAoOmlzc3VlOmAjMzQwNWApLFxuICBQeVNpZGUyIChzdHlsZSBtaXNtYXRjaCkgKDppc3N1ZTpgIzMzNzRgLCA6aXNzdWU6YCMzNTc4YClcbiogRml4IG1pc3NpbmcgU1NMIGxpYnJhcmllcyBvbiBXaW5kb3dzIHdpdGggUHlRdDUuUXROZXR3b3JrLiAoOmlzc3VlOmAjMzUxMWAsXG4gIDppc3N1ZTpgIzM1MjBgKVxuKiBGaXggem1xIG9uIFdpbmRvd3MgUHl0aG9uIDIuNy4gKDppc3N1ZTpgIzIxNDdgKVxuKiAoR05VL0xpbnV4KSBGaXggaG9vayB1c2I6IFJlc29sdmUgbGlicmFyeSBuYW1lIHJlcG9ydGVkIGJ5IHVzYi5iYWNrZW5kLlxuICAoOmlzc3VlOmAjMjYzM2AsIDppc3N1ZTpgIzI4MzFgLCA6aXNzdWU6YCMzMjY5YClcblxuKiBDbGVhbiB1cCB0aGUgVVNCIGhvb2sgbG9naWMuXG5cblxuQm9vdGxvYWRlclxufn5+fn5+fn5+flxuXG4qIEZvcndhcmQgYWxsIHNpZ25hbHMgdG8gdGhlIGNoaWxkIHByb2Nlc3MgaWYgb3B0aW9uXG4gIGBgcHlpLWJvb3Rsb2FkZXItaWdub3JlLXNpZ25hbHNgYCB0byBiZSBzZXQgaW4gdGhlIGFyY2hpdmUuICg6aXNzdWU6YCMyMDhgLFxuICA6aXNzdWU6YCMzNTE1YClcbiogVXNlIHdhaXRwaWQgaW5zdGVhZCBvZiB3YWl0IHRvIGF2b2lkIHRoZSBib290bG9kZXIgcGFyZW50IHByb2Nlc3MgZ2V0c1xuICBzaWduYWxlZC4gKDppc3N1ZTpgIzI5NjZgKVxuKiAoT1MgWCkgRG9uJ3QgbWFrZSB0aGUgYXBwbGljYXRpb24gYSBHVUkgYXBwIGJ5IGRlZmF1bHQsIGV2ZW4gaW5cbiAgYC0td2luZG93ZWRgYC1tb2RlLiBOb3QgZW5mb3JjaW5nIHRoaXMgcHJvZ3JhbW1hdGljYWxseSBpbiB0aGUgYm9vdGxvYWRlclxuICBhbGxvd3MgdG8gY29udHJvbCBiZWhhdmlvciB1c2luZyBgYEluZm8ucGxpc3RgYCBvcHRpb25zIC0gd2hpY2ggY2FuIGJ5IHNldCBpblxuICBQeUluc3RhbGxlciBpdHNlbGYgb3IgaW4gdGhlIGAuc3BlY2AtZmlsZS4gKDppc3N1ZTpgIzE5MTdgLCA6aXNzdWU6YCMyMDc1YCxcbiAgOmlzc3VlOmAjMzU2NmApXG4qIChXaW5kb3dzKSBTaG93IHJlc3BlY3Rpdmx5IHByaW50IHV0Zi04IGRlYnVnIG1lc3NhZ2VzIHVuZ2FyYmxlZC5cbiAgKDppc3N1ZTpgIzM0NzdgKVxuKiBGaXggYGBzZXRlbnYoKWBgIGNhbGwgd2hlbiBIQVZFX1VOU0VURU5WIGlzIG5vdCBkZWZpbmVkLiAoOmlzc3VlOmAjMzcyMmAsXG4gIDppc3N1ZTpgIzM3MjNgKVxuXG5cbk1vZHVsZSBMb2FkZXJcbn5+fn5+fn5+fn5+fn5cblxuKiBJbXByb3ZlZCBlcnJvciBtZXNzYWdlIGluIGNhc2UgaW1wb3J0aW5nIGFuIGV4dGVuc2lvbiBtb2R1bGUgZmFpbHMuXG4gICg6aXNzdWU6YCMzMDE3YClcblxuXG5Eb2N1bWVudGF0aW9uXG5+fn5+fn5+fn5+fn5+XG5cbiogRml4IHR5cG9zLCBzbWFsbGVyIGVycm9ycyBhbmQgZm9ybWF0dGluZyBlcnJvcnMgaW4gZG9jdW1lbnRhdGlvbi5cbiAgKDppc3N1ZTpgIzM0NDJgLCA6aXNzdWU6YCMzNTIxYCwgOmlzc3VlOmAjMzU2MWAsIDppc3N1ZTpgIzM2MzhgKVxuKiBNYWtlIGNsZWFyIHRoYXQgYGAtLXdpbmRvd2VkYGAgaXMgaW5kZXBlbmRlbnQgb2YgYGAtLW9uZWRpcmBgLlxuICAoOmlzc3VlOmAjMzM4M2ApXG4qIE1lbnRpb24gaW1wb3J0cyB1c2luZyBpbXBvcnRzIGBgaW1wLmZpbmRfbW9kdWxlKClgYCBhcmUgbm90IGRldGVjdGVkLlxuKiBSZWZsZWN0IGFjdHVhbCBiZWhhdmlvciByZWdhcmRpbmcgTERfTElCUkFSWV9QQVRILiAoOmlzc3VlOmAjMzIzNmApXG4qIChPUyBYKSBSZXZpc2Ugc2VjdGlvbiBvbiBgYGluZm9fcGxpc3RgYCBmb3IgYGBwbGlzdGxpYmBgIGZ1bmN0aW9uYWxpdHkgYW5kXG4gIHVzZSBhbiBleGFtcGxlIG1vcmUgYWxpZ25lZCB3aXRoIHJlYWwgd29ybGQgdXNhZ2UuICg6aXNzdWU6YCMzNTMyYCxcbiAgOmlzc3VlOmAjMzU0MGAsIDppc3N1ZTpgIzM1NDFgKVxuKiAoZGV2ZWxvcGVycykgT3ZlcmhhdWwgZ3VpZGVsaW5lcyBmb3IgY29tbWl0IGFuZCBjb21taXQtbWVzc2FnZXMuXG4gICg6aXNzdWU6YCMzNDY2YClcbiogKGRldmVsb3BlcnMpIFJld29yayBkZXZlbG9wZXLigJlzIHF1aWNrLXN0YXJ0IGd1aWRlLlxuXG5cblByb2plY3QgJiBQcm9jZXNzXG5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIEFkZCBhIHBpcCBgYHJlcXVpcmVtZW50cy50eHRgYCBmaWxlLlxuKiBMZXQgYHB5dXBgIHVwZGF0ZSBwYWNrYWdlIHJlcXVpcmVtZW50cyBmb3Ig4oCcVGVzdCDigJMgTGlicmFyaWVz4oCdIGV2ZXJ5IG1vbnRoXG4gIG9ubHkuXG4qIFVzZSBgdG93bmNyaWVyYCB0byBtYW5hZ2UgdGhlIGNoYW5nZSBsb2cgZW50cmllcy4gKDppc3N1ZTpgIzI3NTZgLFxuICA6aXNzdWU6YCMyODM3YCwgOmlzc3VlOmAjMzY5OGApXG5cblxuUHlJbnN0YWxsZXIgQ29yZVxufn5+fn5+fn5+fn5+fn5+flxuXG4qIEFkZCBgYHJlcXVpcmVtZW50c19mb3JfcGFja2FnZWBgIGFuZCBgYGNvbGxlY3RfYWxsYGAgaGVscGVyIGZ1bmN0aW9ucyBmb3JcbiAgaG9va3MuXG4qIEFkZCBhIGV4cGxhbmF0b3J5IGhlYWRlciB0byB0aGUgd2Fybi1maWxlLCBob3BlZnVsbHkgcmVkdWNpbmcgdGhlIG51bWJlciBvZlxuICB0aG9zZSBwb3N0aW5nIHRoZSBmaWxlIHRvIHRoZSBpc3N1ZSB0cmFja2VyLlxuKiBBZGQgbW9kdWxlIGBgJ2VudW1gYCB0byBiYXNlX2xpYnJhcnkuemlwLCByZXF1aXJlZCBmb3IgbW9kdWxlIGBgcmVgYCBpblxuICBQeXRob24gMy42IChhbmQgYGByZWBgIGlzIHJlcXVpcmVkIGJ5IGBgd2FybmluZ3NgYCkuXG4qIEFsd2F5cyB3cml0ZSB0aGUgYHdhcm5gLWZpbGUuXG4qIEFwcGx5IGBgZm9ybWF0X2JpbmFyaWVzX2FuZF9kYXRhcygpYGAgKHdoaWNoIGNvbnZlcnRzIGhvb2stc3R5bGUgdHVwbGVzIGludG9cbiAgYFRPQ2Atc3R5bGUgdHVwbGVzKSB0byBiaW5hcmllcyBhbmQgZGF0YXMgYWRkZWQgdGhyb3VnaCB0aGUgaG9vayBhcGkuXG4qIEF2b2lkIHByaW50aW5nIGEgdXNlbGVzcyBleGNlcHRpb25zIGluIHRoZSBgYGdldF9tb2R1bGVfZmlsZV9hdHRyaWJ1dGVgYFxuICBoZWxwZXIgZnVuY3Rpb24uLlxuKiBEb24ndCBnYXRoZXIgUHl0aG9uIGV4dGVuc2lvbnMgaW4gYGBjb2xsZWN0X2R5bmFtaWNfbGliYygpYGAuXG4qIEZpeCBzZXZlcmFsIFJlc291cmNlV2FybmluZ3MgYW5kIERlcHJlY2F0aW9uV2FybmluZ3MgKDppc3N1ZTpgIzM2NzdgKVxuKiBIaW50IHVzZXJzIHRvIGluc3RhbGwgbmVjZXNzYXJ5IGRldmVsb3BtZW50IHBhY2thZ2VzIElmIGluXG4gIGBgZm9ybWF0X2JpbmFyaWVzX2FuZF9kYXRhcygpYGAgdGhlIGZpbGUgbm90IGZvdW5kIGlzIGBgcHljb25maWcuaGBgLlxuICAoOmlzc3VlOmAjMTUzOWAsIDppc3N1ZTpgIzMzNDhgKVxuKiBIb29rIGhlbHBlciBmdW5jdGlvbiBgYGlzX21vZHVsZV9zYXRpc2ZpZXMoKWBgIHJldHVybnMgYGBGYWxzZWBgIGZvciBwYWNrYWdlc1xuICBub3QgZm91bmQuICg6aXNzdWU6YCMzNDI4YCwgOmlzc3VlOmAjMzQ4MWApXG4qIFJlYWQgZGF0YSBmb3IgY2FjaGUgZGlnZXN0IGluIGNodW5rcy4gKDppc3N1ZTpgIzMyODFgKVxuKiBTZWxlY3QgY29ycmVjdCBmaWxlIGV4dGVuc2lvbiBmb3IgQy1leHRlbnNpb24gZmlsZS1uYW1lcyBsaWtlXG4gIGBgbGliem1xLmNwMzYtd2luX2FtZDY0LnB5ZGBgLlxuKiBTdGF0ZSB0eXBlIG9mIGltcG9ydCAoY29uZGl0aW9uYWwsIGRlbGF5ZWQsIGV0Yy4pIGluIHRoZSBgd2FybmAtZmlsZSBhZ2Fpbi5cbiogKG1vZHVsZWdyYXBoKSBVbmJ1bmRsZSBgYWx0Z3JhcGhgIGxpYnJhcnksIHVzZSBmcm9tIHVwc3RyZWFtLlxuICAoOmlzc3VlOmAjMzA1OGApXG4qIChPUyBYKSBJbiBgY29uc29sZWAtbW9kZSBzZXQgYGBMU0JhY2tncm91bmRPbmx5PVRydWVgYCBpbmBgSW5mby5wbGlzdGBgIHRvXG4gIGhpZGUgdGhlIGFwcC1pY29uIGluIHRoZSBkb2NrLiBUaGlzIGNhbiBzdGlsbCBiZSBvdmVycnVsZWQgYnkgcGFzc2luZ1xuICBgYGluZm9fcGxpc3RgYCBpbiB0aGUgYC5zcGVjYC1maWxlLiAoOmlzc3VlOmAjMTkxN2AsIDppc3N1ZTpgIzM1NjZgKVxuKiAoT1MgWCkgVXNlIHRoZSBweXRob24gc3RhbmRhcmQgbGlicmFyeSBgYHBsaXN0bGliYGAgZm9yIGdlbmVyYXRpbmcgdGhlXG4gIGBgSW5mby5wbGlzdGBgIGZpbGUuICg6aXNzdWU6YCMzNTMyYCwgOmlzc3VlOmAjMzU0MWApXG4qIChXaW5kb3dzKSBDb21wbGV0ZWx5IHJlbW92ZSBgcHl3aW4zMmAgZGVwZW5kZW5jeSwgd2hpY2ggaGFzIGVycmF0aWMgcmVsZWFzZXNcbiAgYW5kIHRoZSB2ZXJzaW9uIG9uIHB5cGkgbWF5IG5vIGxvbmdlciBoYXZlIGZ1dHVyZSByZWxlYXNlcy4gUmVxdWlyZVxuICBgcHl3aW4zMi1jdHlwZXNgIGluc3RlYWQsIHdoaWNoIGlzIHB1cmUgcHl0aG9uLiAoOmlzc3VlOmAjMzE0MWApXG4qIChXaW5kb3dzKSBFbmNvZGUgbWFuaWZlc3QgYmVmb3JlIHVwZGF0aW5nIHJlc291cmNlLiAoOmlzc3VlOmAjMzQyM2ApXG4qIChXaW5kb3dzKSBNYWtlIGltcG9ydCBjb21wYXRpYmxlIHdpdGggcHl0aG9uLm5ldCwgd2hpY2ggdXNlcyBhbiBpbmNvbXBhdGlibGVcbiAgc2lnbmF0dXJlIGZvciBgYF9faW1wb3J0X19gYC4gKDppc3N1ZTpgIzM1NzRgKVxuXG5cblRlc3Qtc3VpdGUgYW5kIENvbnRpbnVvdXMgSW50ZWdyYXRpb25cbn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5cblxuKiBBZGQgc2NyaXB0IGFuZCBkb2NrZXJmaWxlIGZvciBydW5uaW5nIHRlc3RzIGluIGRvY2tlci4gKGNvbnRyaWJ1dGVkLCBub3RcbiAgbWFpbnRhaW5lZCkgKDppc3N1ZTpgIzM1MTlgKVxuKiBBdm9pZCBsb2cgbWVzc2FnZXMgdG8gYmUgd3JpdHRlbiAoYW5kIGNhcHR1cmVkKSB0d2ljZS5cbiogRml4IGRlY29yYXRvciBgYHNraXBpZl9ub19jb21waWxlcmBgLlxuKiBGaXggdGhlIHRlc3QgZm9yIHRoZSDigJxX4oCdIHJ1bi10aW1lIFB5dGhvbiBvcHRpb24gdG8gdmVyaWZ5IG1vZHVsZSBgYHdhcm5pbmdzYGBcbiAgY2FuIGFjdHVhbGx5IGJlIGltcG9ydGVkLiAoOmlzc3VlOmAjMzQwMmAsIDppc3N1ZTpgIzM0MDZgKVxuKiBGaXggdW5pY29kZSBlcnJvcnMgd2hlbiBub3QgY2FwdHVyaW5nIG91dHB1dCBieSBweXRlc3QuXG4qIFJ1biBweWluc3RhbGxlciAtaCB0byB2ZXJpZnkgaXQgd29ya3MuXG4qIGBgdGVzdF9zZXR1cHRvb2xzX25zcGtnYGAgbm8gbG9uZ2VyIG1vZGlmaWVzIHNvdXJjZSBmaWxlcy5cblxuKiBBcHB2ZXlvcjpcblxuICAtIEFkZCBkb2N1bWVudGF0aW9uIGZvciBBcHB2ZXlvciB2YXJpYWJsZXMgdXNlZCB0byBgYGFwcHZleW9yLnltbGBgLlxuICAtIFNpZ25pZmljYW50bHkgY2xlYW4tdXAgYXBwdmV5b3IueW1sICg6aXNzdWU6YCMzMTA3YClcbiAgLSBBZGRpdGlvbmFsIHRlc3RzIHByb2R1Y2UgPiAxIGhvdXIgcnVucy4gU3BsaXQgZWFjaCBqb2IgaW50byB0d29cbiAgICBqb2JzLlxuICAtIEFwcHZleW9yIHRlc3RzIHJ1biBvbiAyIGNvcmVzOyB0aGVyZWZvcmUsIHJ1biAyIGpvYnMgaW4gcGFyYWxsZWwuXG4gIC0gUmVkdWNlIGRpc2sgdXNhZ2UuXG4gIC0gU3BsaXQgUHl0aG9uIDIuNyB0ZXN0cyBpbnRvIHR3byBqb2JzIHRvIGF2b2lkIHRoZSAxIGhvdXIgbGltaXQuXG4gIC0gVXBkYXRlIHRvIHVzZSBXaW5kb3dzIFNlcnZlciAyMDE2LiAoOmlzc3VlOmAjMzU2M2ApXG5cbiogVHJhdmlzXG5cbiAgLSBVc2UgYnVpbGQtc3RhZ2VzLlxuICAtIENsZWFuLXVwIHRyYXZpcy55bWwgKDppc3N1ZTpgIzMxMDhgKVxuICAtIEZpeCBQeXRob24gaW5zdGFsbGF0aW9uIG9uIE9TIFguICg6aXNzdWU6YCMzMzYxYClcbiAgLSBTdGFydCBhIFgxMSBzZXJ2ZXIgZm9yIHRoZSBcIlRlc3QgLSBMaWJyYXJpZXNcIiBzdGFnZSBvbmx5LlxuICAtIFVzZSB0YXJnZXQgcHl0aG9uIGludGVycHJldGVyIHRvIGNvbXBpbGUgYm9vdGxvYWRlciB0byBjaGVjayBpZiB0aGVcbiAgICBidWlsZCB0b29sIGNhbiBiZSB1c2VkIHdpdGggdGhhdCB0aGlzIFB5dGhvbiB2ZXJzaW9uLlxuXG5cbkJvb3Rsb2FkZXIgYnVpbGRcbn5+fn5+fn5+fn5+fn5+fn5cblxuKiBQcmludCBpbnZva2luZyBweXRob24gdmVyc2lvbiB3aGVuIGNvbXBpbGluZy5cbiogVXBkYXRlIGB3YWZgIGJ1aWxkLXRvb2wgdG8gMi4wLjkgYW5kIGZpeCBvdXIgYGB3c2NyaXB0YGAgZm9yIGB3YWZgIDIuMC5cbiogKEdOVS9MaW51eCkgV2hlbiBidWlsZGluZyB3aXRoIGBgLS1kZWJ1Z2BgIHR1cm4gb2YgRk9SVElGWV9TT1VSQ0UgdG8gZWFzZVxuICBkZWJ1Z2dpbmcuXG5cblxuLi4gX3YzLjQga25vd24gaXNzdWVzOlxuXG5Lbm93biBJc3N1ZXNcbn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIEFuYWNvbmRhJ3MgUHlRdDUgcGFja2FnZXMgYXJlIG5vdCBzdXBwb3J0ZWRcbiAgYmVjYXVzZSBpdHMgYGBRbGlicmFyeUluZm9gYCBpbXBsZW1lbnRhdGlvbiByZXBvcnRzIGluY29ycmVjdCB2YWx1ZXMuXG5cbiogQWxsIHNjcmlwdHMgZnJvemVuIGludG8gdGhlIHBhY2thZ2UsIGFzIHdlbGwgYXMgYWxsIHJ1bi10aW1lIGhvb2tzLCBzaGFyZVxuICB0aGUgc2FtZSBnbG9iYWwgdmFyaWFibGVzLiBUaGlzIGlzc3VlIGV4aXN0cyBzaW5jZSB2My4yIGJ1dCB3YXMgZGlzY292ZXJlZFxuICBvbmx5IGxhdGVseSwgc2VlIDppc3N1ZTpgMzAzN2AuIFRoaXMgbWF5IGxlYWQgdG8gbGVha2luZyBnbG9iYWwgdmFyaWFibGVzXG4gIGZyb20gcnVuLXRpbWUgaG9va3MgaW50byB0aGUgc2NyaXB0IGFuZCBmcm9tIG9uZSBzY3JpcHQgdG8gc3Vic2VxdWVudCBvbmVzLlxuICBJdCBzaG91bGQgaGF2ZSBlZmZlY3RzIGluIHJhcmUgY2FzZXMgb25seSwgdGhvdWdoLlxuXG4qIERhdGEtZmlsZXMgZnJvbSB3aGVlbHMsIHVuemlwcGVkIGVnZ3Mgb3Igbm90IGFkIGVnZyBhdCBhbGwgYXJlIG5vdCBpbmNsdWRlZFxuICBhdXRvbWF0aWNhbGx5LiBUaGlzIGNhbiBiZSB3b3JrZWQgYXJvdW5kIHVzaW5nIGEgaG9vay1maWxlLCBidXQgbWF5IG5vdFxuICBzdWZmaWNlIHdoZW4gdXNpbmcgYGAtLW9uZWZpbGVgYCBhbmQgc29tZXRoaW5nIGxpa2UgYHB5dGhvbi1kYWVtb25gLlxuXG4qIFRoZSBtdWx0aXBhY2thZ2UgKE1FUkdFKSBmZWF0dXJlICg6aXNzdWU6YDE1MjdgKSBpcyBjdXJyZW50bHkgYnJva2VuLlxuXG4qIChPU1gpIFN1cHBvcnQgZm9yIE9wZW5Eb2N1bWVudCBldmVudHMgKDppc3N1ZTpgMTMwOWApIGlzIGJyb2tlbi5cblxuKiAoV2luZG93cykgV2l0aCBQeXRob24gMi43IHRoZSBmcm96ZW4gYXBwbGljYXRpb24gbWF5IG5vdCBydW4gaWYgdGhlXG4gIHVzZXItbmFtZSAobW9yZSBzcGVjaWZpY2FsbHkgYGAlVEVNUERJUiVgYCkgaW5jbHVkZXMgc29tZSBVbmljb2RlXG4gIGNoYXJhY3RlcnMuIFRoaXMgZG9lcyBub3QgaGFwcGVuIHdpdGggYWxsIFVuaWNvZGUgY2hhcmFjdGVycywgYnV0IG9ubHkgc29tZVxuICBhbmQgc2VlbXMgdG8gYmUgYSB3aW5kb3dzIGJ1Zy4gQXMgYSB3b3JrLWFyb3VuZCBwbGVhc2UgdXBncmFkZSB0byBQeXRob24gM1xuICAoOmlzc3VlOmAyNzU0YCwgOmlzc3VlOmAyNzY3YCkuXG5cbiogKFdpbmRvd3MpIEZvciBQeXRob24gPj0gMy41IHRhcmdldGluZyAqV2luZG93cyA8IDEwKiwgdGhlIGRldmVsb3BlciBuZWVkcyB0b1xuICB0YWtlIHNwZWNpYWwgY2FyZSB0byBpbmNsdWRlIHRoZSBWaXN1YWwgQysrIHJ1bi10aW1lIC5kbGxzLiBQbGVhc2Ugc2VlIHRoZVxuICBzZWN0aW9uIDpyZWY6YFBsYXRmb3JtLXNwZWNpZmljIE5vdGVzIDxQbGF0Zm9ybS1zcGVjaWZpYyBOb3RlcyAtIFdpbmRvd3M+YFxuICBpbiB0aGUgbWFudWFsLiAoOmlzc3VlOmAxNTY2YClcblxuXG4zLjMuMSAoMjAxNy0xMi0xMylcbi0tLS0tLS0tLS0tLS0tLS0tLVxuXG5Ib29rc1xufn5+fn5+fn5+flxuXG4qIEZpeCBpbXBvcnRzIGluIGhvb2tzIGFjY2Vzc2libGVfb3V0cHV0IGFuZCBzb3VuZF9saWIgKCMyODYwKS5cbiogRml4IEltcG9ydEVycm9yIGZvciBzeXNjb25maWcgZm9yIDMuNS40IENvbmRhICgjMzEwNSwgIzMxMDYpLlxuKiBGaXggc2hhcGVseSBob29rIGZvciBjb25kYSBlbnZpcm9ubWVudHMgb24gV2luZG93cyAoIzI4MzgpLlxuKiBBZGQgaG9vayBmb3IgdW5pZGVjb2RlLlxuXG5Cb290bG9hZGVyXG5+fn5+fn5+fn5+fn5+flxuXG4qIChXaW5kb3dzKSBQcmUtYnVpbGQgYm9vdGxvYWRlcnMgKGFuZCBjdXN0b20tYnVpbGQgb25lcyB1c2luZyBNU1ZDKSBjYW4gYmVcbiAgdXNlZCBvbiBXaW5kb3dzIFhQIGFnYWluLiBTZXQgbWluaW11bSB0YXJnZXQgT1MgdG8gWFAgKCMyOTc0KS5cblxuQm9vdGxvYWRlciBidWlsZFxufn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIEZpeCBidWlsZCBmb3IgRnJlZUJTRCAoIzI4NjEsICMyODYyKS5cblxuUHlJbnN0YWxsZXIgQ29yZVxufn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5cblxuKiBVc2FnZTogQWRkIGhlbHAtbWVzc2FnZSBjbGFyaWZ5aW5nIHVzZSBvZiBvcHRpb25zIHdoZW4gYSBzcGVjLWZpbGUgaXNcbiAgcHJvdmlkZWQgKCMzMDM5KS5cblxuKiBBZGQgcHJpbnRpbmcgaW5mb3Mgb24gVW5pY29kZURlY29kZUVycm9yIGluIGV4ZWNfY29tbWFuZChfYWxsKS5cbiogKHdpbjMyKSBJc3N1ZSBhbiBlcnJvciBtZXNzYWdlIG9uIGVycm9ycyBsb2FkaW5nIHRoZSBpY29uIGZpbGUgKCMyMDM5KS5cbiogKGFhcmNoNjQpIFVzZSBjb3JyZWN0IGJvb3Rsb2FkZXIgZm9yIDY0LWJpdCBBUk0gKCMyODczKS5cbiogKE9TIFgpIEZpeCByZXBsYWNlbWVudCBvZiBydW4tdGltZSBzZWFyY2ggcGF0aCBrZXl3b3JkcyAoYGBA4oCmYGAgKSAoIzMxMDApLlxuXG4qIE1vZHVsZWdyYXBoXG5cbiAgKiBGaXggcmVjdXJzaW9uIHRvbyBkZWVwIGVycm9ycyBjYXVzZSBieSByZWltcG9ydGluZyBTV0lHLWxpa2UgbW9kdWxlc1xuICAgICgjMjkxMSwgIzMwNDAsICMzMDYxKS5cbiAgKiBLZWVwIG9yZGVyIG9mIGltcG9ydGVkIGlkZW50aWZpZXJzLlxuXG5cblRlc3Qtc3VpdGUgYW5kIENvbnRpbnVvdXMgSW50ZWdyYXRpb25cbn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogSW4gQ29udGludW91cyBJbnRlZ3JhdGlvbiB0ZXN0czogRW5hYmxlIGZsYWtlOC1kaWZmIGxpbnRpbmcuIFRoaXMgd2lsbFxuICByZWZ1c2UgYWxsIGNoYW5nZWQgbGluZXMgbm90IGZvbGxvd2luZyBQRVAgOC5cblxuKiBFbmFibGUgcGFyYWxsZWwgdGVzdGluZyBvbiBXaW5kb3dzLFxuKiBVcGRhdGUgcmVxdWlyZW1lbnRzLlxuKiBBZGQgbW9yZSB0ZXN0IGNhc2VzIGZvciBtb2R1bGVncmFwaC5cbiogRml4IGEgdGVzdC1jYXNlIGZvciBvcmRlciBvZiBtb2R1bGUgaW1wb3J0LlxuXG4qIEFkZCB0ZXN0LWNhc2VzIHRvIGNoZWNrIHNjcmlwdHMgZG8gbm90IHNoYXJlIHRoZSBzYW1lIGdsb2JhbCB2YXJzIChzZWVcbiAgOnJlZjpgdjMuMy4xIGtub3duIGlzc3Vlc2ApLlxuXG5Eb2N1bWVudGF0aW9uXG5+fn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogQWRkIGNsYXJpZmljYXRpb24gYWJvdXQgdHJlYXRtZW50IG9mIG9wdGlvbnMgd2hlbiBhIHNwZWMtZmlsZSBpcyBwcm92aWRlZFxuICAoIzMwMzkpLlxuKiBBZGQgZG9jcyBmb3IgcnVubmluZyBQeUluc3RhbGxlciB3aXRoIFB5dGhvbiBvcHRpbWl6YXRpb25zICgjMjkwNSkuXG5cbiogQWRkIG5vdGVzIGFib3V0IGxpbWl0YXRpb25zIG9mIEN5dGhvbiBzdXBwb3J0LlxuKiBBZGQgaW5mb3JtYXRpb24gaG93IHRvIGhhbmRsZSB1bmRldGVjdGVkIGN0eXBlcyBsaWJyYXJpZXMuXG4qIEFkZCBub3RlcyBhYm91dCByZXF1aXJlbWVudHMgYW5kIHJlc3RyaWN0aW9ucyBvZiBTV0lHIHN1cHBvcnQuXG4qIEFkZCBub3RlIHRvIGNsYXJpZnkgd2hhdCBgYmluYXJ5IGZpbGVzYCBhcmUuXG5cbiogQWRkIGEgRGV2ZWxvcG1lbnQgR3VpZGUuXG4qIEV4dGVuZCBcIkhvdyB0byBDb250cmlidXRlXCIuXG4qIEFkZCBcIlJ1bm5pbmcgdGhlIFRlc3QgU3VpdGVcIi5cblxuKiBSZW1vdmUgYmFkZ2VzIGZyb20gdGhlIFJlYWRtZSAoIzI4NTMpLlxuXG4qIFVwZGF0ZSBvdXRkYXRlZCBzZWN0aW9ucyBpbiBtYW4tcGFnZXMgYW5kIG90ZWhyIGVuaGFuY2VtZW50cyB0byB0aGVcbiAgbWFuLXBhZ2UuXG5cblxuLi4gX3YzLjMuMSBrbm93biBpc3N1ZXM6XG5cbktub3duIElzc3Vlc1xufn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogQWxsIHNjcmlwdHMgZnJvemVuIGludG8gdGhlIHBhY2thZ2UsIGFzIHdlbGwgYXMgYWxsIHJ1bi10aW1lIGhvb2tzLCBzaGFyZVxuICB0aGUgc2FtZSBnbG9iYWwgdmFyaWFibGVzLiBUaGlzIGlzc3VlIGV4aXN0cyBzaW5jZSB2My4yIGJ1dCB3YXMgZGlzY292ZXJlZFxuICBvbmx5IGxhdGVseSwgc2VlIDppc3N1ZTpgMzAzN2AuIFRoaXMgbWF5IGxlYWQgdG8gbGVha2luZyBnbG9iYWwgdmFyaWFibGVzXG4gIGZyb20gcnVuLXRpbWUgaG9va3MgaW50byB0aGUgc2NyaXB0IGFuZCBmcm9tIG9uZSBzY3JpcHQgdG8gc3Vic2VxdWVudCBvbmVzLlxuICBJdCBzaG91bGQgaGF2ZSBlZmZlY3RzIGluIHJhcmUgY2FzZXMgb25seSwgdGhvdWdoLlxuXG4qIEZ1cnRoZXIgc2VlIHRoZSA6cmVmOmBLbm93biBJc3N1ZXMgZm9yIHJlbGVhc2UgMy4zIDx2My4zIGtub3duIGlzc3Vlcz5gLlxuXG5cbjMuMyAoMjAxNy0wOS0yMSlcbi0tLS0tLS0tLS0tLS0tLS1cblxuKiAqKkFkZCBTdXBwb3J0IGZvciBQeXRob24gMy42ISoqIE1hbnkgdGhhbmtzIHRvIHhpb3ZhdCEgKCMyMzMxLCAjMjM0MSlcblxuKiBOZXcgY29tbWFuZCBsaW5lIG9wdGlvbnMgZm9yIGFkZGluZyBkYXRhIGZpbGVzIChgYC0tZGF0YXNgYCwgIzE5OTApIGFuZFxuICBiaW5hcmllcyAoYGAtLWJpbmFyaWVzYGAsICM3MDMpXG5cbiogQWRkIGNvbW1hbmQgbGluZSBvcHRpb24gJy0tcnVudGltZS10bXBkaXInLlxuXG4qIEJvb3Rsb2FkZXJzIGZvciBXaW5kb3dzIGFyZSBub3cgYnVpbGQgdXNpbmcgTVNWQyBhbmQgc3RhdGljYWxseSBsaW5rZWQgd2l0aFxuICB0aGUgcnVuLXRpbWUtbGlicmFyeSAoQ1JUKS4gVGhpcyBzb2x2ZWQgYSBsb3Qgb2YgaXNzdWVzIHJlbGF0ZWQgdG8gLmRsbHNcbiAgYmVpbmcgaW5jb21wYXRpYmxlIHdpdGggdGhlIG9uZXMgcmVxdWlyZWQgYnkgYGBweXRob24uZGxsYGAuXG5cbiogQm9vdGxvYWRlcnMgZm9yIEdOVS9MaW51eCBhcmUgbm93IG9mZmljaWFsbHkgbm8gTFNCIGJpbmFyaWVzLiBUaGlzIHdhc1xuICBhbHJlYWR5IHRoZSBjYXNlIHNpbmNlIHJlbGVhc2UgMy4xLCBidXQgZG9jdW1lbnRlZCB0aGUgb3RoZXIgd2F5IHJvdW5kLiBBbHNvXG4gIHRoZSBidWlsZCBkZWZhdWx0cyB0byBub24tTFNCIGJpbmFyaWVzIG5vdy4gKCMyMzY5KVxuXG4qIFdlIGltcHJvdmVkIGFuZCBzdGFiaWxpemVkIGJvdGggYnVpbGRpbmcgdGhlIGJvb3Rsb2FkZXJzIGFuZCB0aGUgY29udGludW91c1xuICBpbnRlZ3JhdGlvbiB0ZXN0cy4gU2VlIGJlbG93IGZvciBkZXRhaWxzLiBNYW55IHRoYW5rcyB0byBhbGwgd2hvIHdvcmtlZCBvblxuICB0aGlzLlxuXG4qIFRvIGVhc2Ugc29sdmluZyBpc3N1ZXMgd2l0aCBwYWNrYWdlcyBpbmNsdWRlZCB3cm9uZ2x5LCB0aGUgaHRtbC1maWxlIHdpdGggYVxuICBjcm9zcy1yZWZlcmVuY2UgaXMgbm93IGFsd2F5cyBnZW5lcmF0ZWQuIEl0J3MgdmlzdWFsIGFwcGVhcmFuY2UgaGFzIGJlZW5cbiAgbW9kZXJuaXplZCAoIzI3NjUpLlxuXG5JbmNvbXBhdGlibGUgY2hhbmdlc1xufn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIENvbW1hbmQtbGluZSBvcHRpb24gb2Jzb2xldGVkIHNldmVyYWwgdmVyc2lvbiBhZ28gYXJlIG5vdCBsb25nZXIgaGFuZGxlZFxuICBncmFjZWZ1bGx5IGJ1dCByYWlzZSBhbiBlcnJvciAoIzI0MTMpXG5cbiogSW5zdGFsbGF0aW9uOiBQeUluc3RhbGxlciByZW1vdmVkIHNvbWUgaW50ZXJuYWwgY29waWVzIG9mIDNyZC1wYXJ0eVxuICBwYWNrYWdlcy4gVGhlc2UgYXJlIG5vdyB0YWtlbiBmcm9tIHRoZWlyIG9mZmljaWFsIHJlbGVhc2VzIGF0IFB5UEkgKCMyNTg5KS5cbiAgVGhpcyByZXN1bHRzIGluIFB5SW5zdGFsbGVyIHRvIG5vIGxvbmdlciBjYW4gYmUgdXNlZCBmcm9tIGp1c3QgYW4gdW5wYWNrZWRcbiAgYXJjaGl2ZSwgYnV0IG5lZWRzIHRvIGJlIGluc3RhbGxlZCBsaWtlIGFueSBQeXRob24gcGFja2FnZS4gVGhpcyBzaG91bGRcbiAgZWZmZWN0IG9ubHkgYSBmZXcgcGVvcGxlLCBlLmcuIHRoZSBkZXZlbG9wZXJzLlxuXG4qIEZvbGxvd2luZyA6cGVwOmA1MjdgLCB3ZSBvbmx5IHJlbGVhc2Ugb25lIHNvdXJjZSBhcmNoaXZlIG5vdyBhbmQgZGVjaWRlZCB0b1xuICB1c2UgYC50YXIuZ3pgICgjMjc1NCkuXG5cbkhvb2tzXG5+fn5+fn5+fn5+XG5cbiogTmV3IGFuZCBVcGRhdGVkIGhvb2tzOiBhY2Nlc3NpYmxlX291dHB1dDIgKCMyMjY2KSwgQURJT1MgKCMyMDk2KSwgQ2hlcnJ5UHlcbiAgKCMyMTEyKSwgUHlTaWRlMiAoIzI0NzEsICMyNzQ0KSAoIzI0NzIpLCBTcGhpbnggKCMyNjEyLCAyNzA4KSAoIzI3MDgpLFxuICBhcHBkaXIgKCMyNDc4KSwgY2xyICgjMjA0OCksIGNyeXB0b2RvbWUgKCMyMTI1KSwgY3J5cHRvZ3JhcGh5ICgjMjAxMyksIGRjbGFiXG4gICgjMjY1NyksIGRqYW5nbyAoIzIwMzcpLCBkamFuZ28gbWlncmF0aW9ucyAoIzE3OTUpLCBkamFuZ28uY29udHJpYiAoIzIzMzYpLFxuICBnb29nbGUuY2xvdWQsIGdvb2dsZS5jbG91ZC5zdG9yYWdlLCBnc3RyZWFtZXIgKCMyNjAzKSwgaW1hZ2VpbyAoIzI2OTYpLFxuICBsYW5nY29kZXMgKCMyNjgyKSwgbGliYXVkaW92ZXJzZSAoIzI3MDkpLCBtcGxfdG9vbGtpdHMgKCMyNDAwKSwgbnVtYmEsXG4gIGxsdm1saXRlICgjMjExMyksIG9wZW5weXhsICgjMjA2NiksIHB5bGludCwgcHltc3NxbCwgcHlvcGVuY2wsIHB5cHJvalxuICAoIzI2NzcpLCBweXRlc3QgKCMyMTE5KSwgcXRhd2Vzb21lICgjMjYxNyksIHJlZG1pbmUsIHJlcXVlc3RzICgjMjMzNCksXG4gIHNldHVwdG9vbHMsIHNldHVwdG9vbHMgKCMyNTY1KSwgc2hhcGVseSAoIzI1NjkpLCBzb3VuZF9saWIgKCMyMjY3KSxcbiAgc3lzY29uZmlnLCB1bmlzZWcgKCMyNjgzKSwgdXJsbGliMywgd3gucmMgKCMyMjk1KSxcblxuICAqIG51bXB5OiBMb29rIGZvciAuZHlsaWIgbGlicmFyaWVzLCB0b28gKCAoIzI1NDQpLCBzdXBwb3J0IG51bXB5IE1LTCBidWlsZHNcbiAgICAoIzE4ODEsICMyMTExKVxuXG4gICogb3NnZW86IEFkZCBjb25kYSBzcGVjaWZpYyBwbGFjZXMgdG8gY2hlY2sgZm9yIGF1eGlsaWFyeSBkYXRhICgjMjQwMSlcblxuICAqIFFUIGFuZCByZWxhdGVkXG5cbiAgICAtIEFkZCBob29rcyBmb3IgUHlTaWRlMlxuICAgIC0gRWxpbWluYXRlIHJ1bi10aW1lIGhvb2sgYnkgcGxhY2luZyBmaWxlcyBpbiB0aGUgY29ycmVjdCBkaXJlY3RvcnlcbiAgICAtIEZpeCBwYXRoIGluIGhvbWVicmV3IGZvciBzZWFyY2hpbmcgZm9yIHFtYWtlICgjMjM1NClcbiAgICAtIFJlcGFpciBRdCBkbGwgbG9jYXRpb24gICgjMjQwMylcbiAgICAtIEJ1bmRsZSBQeVFUIDUuNyBETExzICgjMjE1MilcbiAgICAtIFB5UXQ1OiBSZXR1cm4gcW1sIHBsdWdpbiBwYXRoIGluY2x1ZGluZyBzdWJkaXJlY3RvcnkgKCMyNjk0KVxuICAgIC0gRml4IGhvb2tzIGZvciBQeVF0NS5RdFF1aWNrICgjMjc0MylcbiAgICAtIFB5UXQ1LlF0V2ViRW5naW5lV2lkZ2V0czogSW5jbHVkZSBmaWxlcyBuZWVkZWQgYnkgUVdlYkVuZ2luZVxuXG4gICogR0tUKyBhbmQgcmVsYXRlZFxuXG4gICAgLSBGaXggR2lyIGZpbGUgcGF0aCBvbiB3aW5kb3dzLlxuICAgIC0gRml4IHVubmVjZXNzYXJ5IGZpbGUgc2VhcmNoICYgZ2VuZXJhdGlvbiB3aGVuIEdJJ3MgdHlwZWxpYiBpcyBleGlzdHNcbiAgICAtIGdpOiBjaGFuZ2UgZ2lyIHNlYXJjaCBwYXRoIHdoZW4gcnVubmluZyBmcm9tIGEgdmlydHVhbGVudlxuICAgIC0gZ2k6IHBhY2thZ2UgZ2RrLXBpeGJ1ZiBpbiBvc3ggY29kZXNpZ24gYWdub3N0aWMgZGlyXG4gICAgLSBnaTogcmV3cml0ZSB0aGUgR2RrUGl4YnVmIGxvYWRlciBjYWNoZSBhdCBydW50aW1lIG9uIExpbnV4XG4gICAgLSBnaTogc3VwcG9ydCBvbmVmaWxlIG1vZGUgZm9yIEdka1BpeGJ1ZlxuICAgIC0gZ2k6IHN1cHBvcnQgdXNpbmcgZ2RrLXBpeGJ1Zi1xdWVyeS1sb2FkZXJzLTY0IHdoZW4gcHJlc2VudFxuICAgIC0gZ2k6IEdJUiBmaWxlcyBhcmUgb25seSByZXF1aXJlZCBvbiBPU1hcbiAgICAtIGdpbzogY29weSB0aGUgbWltZS5jYWNoZSBhbHNvXG4gICAgLSBGaXggaG9va3MgZm9yIFB5R09iamVjdCBvbiB3aW5kb3dzIHBsYXRmb3JtICgjMjMwNilcblxuKiBGaXhlZCBob29rczogYm90b2NvcmUgKCMyMzg0KSwgY2xyICgjMTgwMSksIGdzdHJlYW1lciAoIzI0MTcpLCBoNXB5XG4gICgjMjY4NiksIHB5bGludCwgVGl4IGRhdGEgZmlsZXMgKCMxNjYwKSwgdXNiLmNvcmUgKCMyMDg4KSwgd2luMzJjb20gb25cbiAgbm9uLXdpbmRvd3Mtc3lzdGVtcyAoIzI0NzkpXG5cbiogRml4IGBgbXVsdGlwcm9jZXNzYGAgc3Bhd24gbW9kZSBvbiBQT1NJWCBPU3MgKCMyMzIyLCAjMjUwNSwgIzI3NTksICMyNzk1KS5cblxuQm9vdGxvYWRlclxufn5+fn5+fn5+fn5+fn5cblxuKiBBZGQgYHRlbXBkaXJgIG9wdGlvbiB0byBjb250cm9sIHdoZXJlIGJvb3Rsb2FkZXIgd2lsbCBleHRyYWN0IGZpbGVzICgjMjIyMSlcbiogKFdpbmRvd3MpIGluIHJlbGVhc2VzIHBvc3RlZCBvbiBQeVBJIHJlcXVpcmVzIG1zdmNyKi5kbGwgKCMyMzQzKVxuKiBGaXggdW5zYWZlIHN0cmluZyBtYW5pcHVsYXRpb24sIHJlc291cmNlIGFuZCBtZW1vcnkgbGVha3MuIFRoYW5rcyB0byBWaXRvXG4gIEtvcnRiZWVrICgjMjQ4OSwgIzI1MDIsICMyNTAzKVxuKiBSZW1vdmUgYSBsZWZ0LW92ZXIgdXNlIG9mIGBgZ2V0ZW52KClgYFxuKiBTZXQgcHJvcGVyIExJU1RFTl9QSUQgKHNldCBieSBgc3lzdGVtZGApIGluIGNoaWxkIHByb2Nlc3MgKCMyMzQ1KVxuKiBBZGRzIFBJRCB0byBib290bG9hZGVyIGxvZyBtZXNzYWdlcyAoIzI0NjYsICMyNDgwKVxuXG4qIChXaW5kb3dzKSBVc2UgX3dwdXRlbnZfcygpIGluc3RlYWQgb2YgYGBTZXRFbnZpcm9ubWVudFZhcmlhYmxlVygpYGBcbiogKFdpbmRvd3MpIEVuaGFuY2UgZXJyb3IgbWVzc2FnZXMgKCMxNDMxKVxuKiAoV2luZG93cykgQWRkIHdvcmthcm91bmQgZm9yIGEgUHl0aG9uIDMgaXNzdWVcbiAgaHR0cDovL2J1Z3MucHl0aG9uLm9yZy9pc3N1ZTI5Nzc4ICgjMjQ5NiwgIzI4NDQpXG5cbiogKE9TIFgpOiBVc2Ugc2luZ2xlIHByb2Nlc3MgZm9yIC0tb25lZGlyIG1vZGUgKCMyNjE2LCAjMjYxOClcblxuKiAoR05VL0xpbnV4KSBDb21waWxlIGJvb3Rsb2FkZXJzIHdpdGggLS1uby1sc2IgYnkgZGVmYXVsdCAoIzIzNjkpXG4qIChHTlUvTGludXgpIEZpeDogbGludXg2NCBib290bG9hZGVyIHJlcXVpcmVzIGdsaWJjIDIuMTQgKCMyMTYwKVxuKiAoR05VL0xpbnV4KSBzZXRfZHluYW1pY19saWJyYXJ5X3BhdGggY2hhbmdlIGJyZWFrcyBwbHVnaW4gbGlicmFyeSB1c2VcbiAgKCM2MjUpXG5cbkJvb3Rsb2FkZXIgYnVpbGRcbn5+fn5+fn5+fn5+fn5+fn5+fn5cblxuVGhlIGJvb3Rsb2FkZXIgYnVpbGQgd2FzIGxhcmdlbHkgb3ZlcmhhdWxlZC4gSW4gdGhlIHdzY3JpcHQsIHRoZSBidWlsZCBub1xubG9uZ2VyIGRlcGVuZHMgb24gdGhlIFB5dGhvbiBpbnRlcnByZXRlcidzIGJpdC1zaXplLCBidXQgb24gdGhlIGNvbXBpbGVyLiBXZVxuaGF2ZSBhIG1hY2hpbmUgZm9yIGJ1aWxkaW5nIGJvb3Rsb2FkZXJzIGZvciBXaW5kb3dzIGFuZCBjcm9zcy1idWlsZGluZyBmb3Jcbk9TIFguIFRodXMgYWxsIG1haW50ZXJpbmVyIGFyZSBub3cgYWJsZSB0byBidWlsZCB0aGUgYm9vdGxvYWRlcnMgZm9yIGFsbFxuc3VwcG9ydGVkIHBsYXRmb3Jtcy5cblxuKiBBZGQgXCJvZmZpY2lhbFwiIGJ1aWxkLXNjcmlwdC5cblxuKiAoR05VL0xpbnV4KSBNYWtlIC0tbm8tbHNiIHRoZSBkZWZhdWx0LCBhZGQgb3B0aW9uIC0tbHNiLlxuICBcbiogTGFyZ2VseSBvdmVyaGF1bGVkIFZhZ3JhbnRmaWxlOlxuXG4gICAgLSBNYWtlIERhcndpbiBib290bG9hZGVycyBidWlsZCBpbiBPUyBYIGJveCAodW51c2VkKVxuICAgIC0gTWFrZSBXaW5kb3dzIGJvb3Rsb2FkZXJzIGJ1aWxkIHVzaW5nIE1TVkNcbiAgICAtIEFsbG93IHNwZWNpZnlpbmcgY3Jvc3MtdGFyZ2V0IG9uIGxpbnV4NjQuXG4gICAgLSBFbmFibGUgY3Jvc3MtYnVpbGRpbmcgZm9yIE9TIFguXG4gICAgLSBFbmFibGUgY3Jvc3MtYnVpbGRpbmcgZm9yIFdpbmRvd3MgKHVudXNlZClcbiAgICAtIEFkZCBib3ggZm9yIGJ1aWxkaW5nIG9zeGNyb3NzLlxuXG4qIExhcmdlbHkgb3ZlcmhhdWxlZCB3c2NyaXB0OlxuXG4gICAgLSBSZW1vdmUgb3B0aW9ucyAtLXRhcmdldC1jcHUuXG4gICAgLSBVc2UgY29tcGlsZXIncyB0YXJnZXQgYXJjaCwgbm90IFB5dGhvbidzLlxuICAgIC0gTWFqb3Igb3ZlcmhhdWwgb2YgdGhlIHNjcmlwdFxuICAgIC0gQnVpbGQgemxpYiBpZiByZXF1aXJlZCwgbm90IGlmIFwib24gd2luZG93c1wiLlxuICAgIC0gUmVtb3ZlIG9ic29sZXRlIHdhcm5pbmdzLlxuICAgIC0gVXBkYXRlIFNvbGFyaXMsIEFJWCBhbmQgSFBVWCBzdXBwb3J0LlxuICAgIC0gQWRkIGZsYWdzIGZvciAnc3RyaXAnIHRvb2wgaW4gQUlYIHBsYXRmb3JtLlxuICAgIC0gRG9uJ3Qgc2V0IFBPU0lYIC8gU1VTIHZlcnNpb24gZGVmaW5lcy5cblxuKiAoR05VL0xpbnV4KSBmb3IgNjQtYml0IGFybS9hYXJjaCBpZ25vcmUgdGhlIDpwcm9ncmFtOmBnY2NgIGZsYWcgYGAtbTY0YGBcbiAgKCMyODAxKS5cbiAgXG5Nb2R1bGUgbG9hZGVyXG5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogSW1wbGVtZW50IFBFUC00NTEgTW9kdWxlU3BlYyB0eXBlIGltcG9ydCBzeXN0ZW0gKCMyMzc3KVxuKiBGaXg6IEltcG9ydCBub3QgdGhyZWFkLXNhdmU/ICgjMjAxMCwgIzIzNzEpXG5cblB5SW5zdGFsbGVyIENvcmVcbn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogQW5hbHl6ZTogQ2hlY2sgUHl0aG9uIHZlcnNpb24gd2hlbiB0ZXN0aW5nIHdoZXRoZXIgdG8gcmVidWlsZC5cbiogQW5hbHl6ZTogRG9uJ3QgZmFpbCBvbiBzeW50YXggZXJyb3IgaW4gbW9kdWxlcywgc2ltcGx5IGlnbm9yZSB0aGVtLlxuKiBCZXR0ZXIgZXJyb3IgbWVzc2FnZSB3aGVuIGBkYXRhc2AgYXJlIG5vdCBmb3VuZC4gKCMyMzA4KVxuKiBCdWlsZGluZzogT1NYOiBVc2UgdW5pY29kZSBsaXRlcmFscyB3aGVuIGNyZWF0aW5nIEluZm8ucGxpc3QgWE1MXG4qIEJ1aWxkaW5nOiBEb24ndCBmYWlsIGlmIFwiZGF0YXNcIiBmaWxlbmFtZSBjb250YWluIGdsb2Igc3BlY2lhbCBjaGFyYWN0ZXJzLlxuICAoIzIzMTQpXG4qIEJ1aWxkaW5nOiBSZWFkIHJ1bnRpbWUtdG1wZGlyIGZyb20gLnNwZWMtZmlsZS5cbiogQnVpbGRpbmc6IFVwZGF0ZSBhIGNvbW1lbnQuXG4qIGJ1aWxkaW5nOiB3YXJuIHVzZXJzIGlmIGJpbmNhY2hlIGdldHMgY29ycnVwdGVkLiAoIzI2MTQpXG4qIENsaS11dGlsczogUmVtb3ZlIGdyYWNlZnVsIGhhbmRsaW5nIG9mIG9ic29sZXRlIGNvbW1hbmQgbGluZSBvcHRpb25zLlxuKiBDb25maWd1cmU6IENyZWF0ZSBuZXcgcGFyZW50LWRpciB3aGVuIG1vdmluZyBvbGQgY2FjaGUtZGlyLiAoIzI2NzkpXG4qIERlcGVuZDogSW5jbHVkZSB2Y3J1bnRpbWUxNDAuZGxsIG9uIFdpbmRvd3MuICgjMjQ4NylcbiogRGVwZW5kOiBwcmludCBuaWNlIGVycm9yIG1lc3NhZ2UgaWYgYW5hbHl6ZWQgc2NyaXB0IGhhcyBzeW50YXggZXJyb3IuXG4qIERlcGVuZDogV2hlbiBzY2FubmluZyBmb3IgY3R5cGVzIGxpYnMgcmVtb3ZlIG5vbi1iYXNlbmFtZSBiaW5hcmllcy5cbiogRW5oYW5jZSBydW4tdGltZSBlcnJvciBtZXNzYWdlIG9uIGN0eXBlcyBpbXBvcnQgZXJyb3IuXG4qIEZpeCAjMjU4NTogcHkyIG5vbi11bmljb2RlIHN5cy5wYXRoIGJlZW4gdGVtcHRlZCBieSBvcy5wYXRoLmFic3BhdGgoKS5cbiAgKCMyNTg1KVxuKiBGaXggY3Jhc2ggaWYgZXh0ZW5zaW9uIG1vZHVsZSBoYXMgaGlkZGVuIGltcG9ydCB0byBjdHlwZXMuICgjMjQ5MilcbiogRml4IGhhbmRsaW5nIG9mIG9ic29sZXRlIGNvbW1hbmQgbGluZSBvcHRpb25zLiAoIzI0MTEpXG4qIEZpeCB2ZXJzaW9uaW5mby5weSBicmVha2FnZSBvbiBQeXRob24gMy54ICgjMjYyMylcbiogRml4OiBcIlVuaWNvZGUtb2JqZWN0cyBtdXN0IGJlIGVuY29kZWQgYmVmb3JlIGhhc2hpbmdcIiAoIzIxMjQpXG4qIEZpeDogVW5pY29kZURlY29kZUVycm9yIC0gY29sbGVjdF9kYXRhX2ZpbGVzIGRvZXMgbm90IHJldHVybiBmaWxlbmFtZXMgYXNcbiAgdW5pY29kZSAoIzE2MDQpXG4qIFJlbW92ZSBncmFjZWZ1bCBoYW5kbGluZyBvZiBvYnNvbGV0ZSBjb21tYW5kIGxpbmUgb3B0aW9ucy4gKCMyNDEzKVxuKiBNYWtlIGdyYWIgdmVyc2lvbiBtb3JlIHBvbGl0ZSBvbiBub24td2luZG93cyAoIzIwNTQpXG4qIE1ha2UgdXRpbHMvd2luMzIvdmVyc2lvbmluZm8ucHkgcm91bmQgdHJpcCB0aGUgdmVyc2lvbiBpbmZvIGNvcnJlY3RseS5cbiogTWFrZXNwZWM6IEZpeCB2ZXJzaW9uIG51bWJlciBwcm9jZXNzaW5nIGZvciBQeUNyeXB0by4gKCMyNDc2KVxuKiBPcHRpbWl6YXRpb25zIGFuZCByZWZhY3RvcmluZyB0byBtb2R1bGVncmFwaCBhbmQgc2Nhbm5pbmcgZm9yIGN0eXBlc1xuICBkZXBlbmRlbmNpZXMuXG4qIHB5aW5zdGFsbGVyIHNob3VsZCBub3QgY3Jhc2ggd2hlbiBoaXR0aW5nIGFuIGVuY29kaW5nIGVycm9yIGluIHNvdXJjZSBjb2RlXG4gICgjMjIxMilcbiogUmVtb3ZlIGRlc3RpbmF0aW9uIGZvciBDT0xMRUNUIGFuZCBFWEUgcHJpb3IgdG8gY29weWluZyBpdCAoIzI3MDEpXG4qIFJlbW92ZSB1bmluZm9ybWF0aXZlIHRyYWNlYmFjayB3aGVuIGFkZGluZyBub3QgZm91bmQgZGF0YSBmaWxlcyAoIzIzNDYpXG4qIHRocmVhZGluZyBidWcgd2hpbGUgcHJvY2Vzc2luZyBpbXBvcnRzICgjMjAxMClcbiogdXRpbHMvaG9va3M6IEFkZCBsb2dnaW5nIHRvIGNvbGxlY3RfZGF0YV9maWxlcy5cblxuKiAod2luMzIpIFN1cHBvcnQgdXNpbmcgcHlwaXdpbjMyIG9yIHB5d2luMzItY3R5cGVzICgjMjYwMilcbiogKHdpbjMyKSBVc2Ugb3MucGF0aC5ub3JtcGF0aCB0byBlbnN1cmUgdGhhdCBzeXN0ZW0gbGlicyBhcmUgZXhjbHVkZWQuXG4qICh3aW4zMikgTG9vayBmb3IgbGlicHl0aG9uJS4lLmRsbCBpbiBXaW5kb3dzIE1TWVMyICgjMjU3MSlcbiogKHdpbjMyKSBNYWtlIHZlcnNpb25pbmZvLnB5IHJvdW5kIHRyaXAgdGhlIHZlcnNpb24gaW5mbyBjb3JyZWN0bHkgKCMyNTk5KVxuKiAod2luMzIpIEVuc3VyZSB0aGF0IHB5d2luMzIgaXNuJ3QgaW1wb3J0ZWQgYmVmb3JlIGNoZWNrX3JlcXVpcmVtZW50cyBpc1xuICBjYWxsZWRcblxuKiAod2luMzIpIHB5aS1ncmFiX3ZlcnNpb24gYW5kIC0tdmVyc2lvbi1maWxlIG5vdCB3b3JraW5nPyAoIzEzNDcpXG4qICh3aW4zMikgQ2xvc2UgUEUoKSBvYmplY3QgdG8gYXZvaWQgbW1hcCBtZW1vcnkgbGVhayAoIzIwMjYpXG4qICh3aW4zMikgRml4OiBQcm9kdWN0VmVyc2lvbiBpbiB3aW5kb3dzIHZlcnNpb24gaW5mbyBkb2Vzbid0IHNob3cgaW4gc29tZVxuICBjYXNlcyAoIzg0NilcbiogKHdpbjMyKSBGaXggbXVsdGktYnl0ZSBwYXRoIGJvb3Rsb2FkZXIgaW1wb3J0IGlzc3VlIHdpdGggcHl0aG9uMiAoIzI1ODUpXG4qICh3aW4zMikgRm9yd2FyZCBEWUxEX0xJQlJBUllfUEFUSCB0aHJvdWdoIGBhcmNoYCBjb21tYW5kLiAoIzIwMzUpXG4qICh3aW4zMikgQWRkIGBgdmNydW50aW1lMTQwLmRsbGBgIHRvX3dpbl9pbmNsdWRlcyBmb3IgUHl0aG9uIDMuNSBhbiAzLjZcbiAgKCMyNDg3KVxuXG4qIChPUyBYKSBBZGQgbGlicHl0aG9uJWQuJWRtLmR5bGliIHRvIERhcndpbiAoaXNfZGFyd2luKSBQWURZTElCX05BTUVTLlxuICAoIzE5NzEpXG4qIChPUyBYKSBtYWNPUyBidW5kbGUgSW5mby5wbGlzdCBzaG91bGQgYmUgaW4gVVRGLTggKCMyNjE1KVxuKiAoT1MgWCkgbXVsdGlwcm9jZXNzaW5nIHNwYXduIGluIHB5dGhvbiAzIGRvZXMgbm90IHdvcmsgb24gbWFjT1MgKCMyMzIyKVxuKiAoT1MgWCkgUHlpbnN0YWxsZXIgbm90IGFibGUgdG8gZmluZCBwYXRoIChAcnBhdGgpIG9mIGR5bmFtaWMgbGlicmFyeSAoIzE1MTQpXG5cbiogTW9kdWxlZ3JhcGhcblxuICAtIEFsaWduIHdpdGggdXBzdHJlYW0gdmVyc2lvbiAwLjEzLlxuICAtIEFkZCB0aGUgdXBzdHJlYW0gdGVzdC1zdWl0ZVxuICAtIFdhcm4gb24gc3ludGF4IGVycm9yIGFuZCB1bmljb2RlIGVycm9yLiAoIzI0MzApXG4gIC0gSW1wbGVtZW50IGBgZW51bWVyYXRlX2luc3RydWN0aW9ucygpYGAgKCMyNzIwKVxuICAtIFN3aXRjaCBieXRlLWNvZGUgYW5hbHlzaXMgdG8gdXNlIGBJbnN0cnVjdGlvbmAgKGxpa2UgZGlzMyBkb2VzKSAoIzI0MjMpXG4gIC0gTG9nIHdhcm5pbmcgb24gdW5pY29kZSBlcnJvciBpbnN0ZWFkIG9mIG9ubHkgYSBkZWJ1ZyBtZXNzYWdlICgjMjQxOClcbiAgLSBVc2Ugc3RhbmRhcmQgbG9nZ2luZyBmb3IgbWVzc2FnZXMuICgjMjQzMylcbiAgLSBGaXggdG8gcmVpbXBvcnQgZmFpbGVkIFNXSUcgQyBtb2R1bGVzICgxNTIyLCAjMjU3OCkuXG5cbiogSW5jbHVkZWQgM3JkLXBhcnR5IGxpYnJhcmllc1xuXG4gIC0gUmVtb3ZlIGJ1bmRsZWQgYGBwZWZpbGVgYCBhbmQgYGBtYWNob2xpYmBgLCB1c2UgdGhlIHJlbGVhc2VzIGZyb20gUHlQSS5cbiAgICAoIzE5MjAsICMyNjg5KVxuICAtIGFsdGdyYXBoOiBVcGRhdGUgdG8gYWx0Z3JhcGggMC4xMywgYWRkIHVwc3RyZWFtIHRlc3Qtc3VpdGUuXG5cblV0aWxpdGllc1xufn5+fn5+fn5+fn5+fn5+XG5cbiogOnByb2dyYW06YGdyYWJfdmVyc2lvbi5weWA6IERpc3BsYXkgYSBmcmllbmRseSBlcnJvciBtZXNzYWdlIHdoZW4gdXRpbGl0eVxuICBmYWlscyAoIzg1OSwgIzI3OTIpLlxuXG4gICAgXG5UZXN0LXN1aXRlIGFuZCBDb250aW51b3VzIEludGVncmF0aW9uXG5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIFJlYXJyYW5nZSByZXF1aXJlbWVudHMgZmlsZXMuXG4qIFBpbiByZXF1aXJlZCB2ZXJzaW9ucyDigJMgbm93IHVwZGF0ZWQgdXNpbmcgcHl1cCAoIzI3NDUpXG4qIEhpZGUgdXNlbGVzcyB0cmFjZS1iYWNrcyBvZiBoZWxwZXItZnVuY3Rpb25zLlxuKiBBZGQgYSB0ZXN0IGZvciBQeVF0NS5RdFF1aWNrLlxuKiBBZGQgZnVuY3Rpb25hbCB0ZXN0cyBmb3IgUHlTaWRlMlxuKiBBZGQgdGVzdCBmb3IgbmV3IGZlYXR1cmUgLS1ydW50aW1lLXRtcGRpci5cbiogRml4IHJlZ3Jlc3Npb24tdGVzdCBmb3IgIzI0OTIuXG4qIHVuaXQ6IEFkZCB0ZXN0LWNhc2VzIGZvciBQeWlNb2R1bGVHcmFwaC5cbiogdW5pdC9hbHRncmFwaDogQnJpbmdpbmcgaW4gdXBzdHJlYW0gYWx0Z3JhcGggdGVzdC1zdWl0ZS5cbiogdW5pdC9tb2R1bGVncmFwaDogQnJpbmdpbmcgaW4gdGhlIG1vZHVsZWdyYXBoIHRlc3Qtc3VpdGUuXG5cbiogQ29udGludW91cyBJbnRlZ3JhdGlvblxuXG4gIC0gTG90cyBvZiBlbmhhbmNlbWVudHMgdG8gdGhlIENJIHRlc3RzIHRvIG1ha2UgdGhlbSBtb3JlIHN0YWJpbGUgYW5kXG4gICAgcmVsaWFibGUuXG4gIC0gUGluIHJlcXVpcmVkIHZlcnNpb25zIOKAkyBub3cgdXBkYXRlZCB1c2luZyBweXVwICgjMjc0NSlcbiAgLSBPUyBYIGlzIG5vdyB0ZXN0ZWQgYWxvbmcgd2l0aCBHTlUvTGludXggYXQgVHJhdmlzIENJICgjMjUwOClcbiAgLSBUcmF2aXM6IFVzZSBzdGFnZXMgKCMyNzUzKVxuICAtIGFwcHZleW9yOiBTYXZlIGNhY2hlIG9uIGZhaWx1cmUgKCMyNjkwKVxuICAtIGFwcHZleW9yOiBWZXJpZnkgYnVpbHQgYm9vdGxvYWRlcnMgaGF2ZSB0aGUgZXhwZWN0ZWQgYXJjaC5cblxuRG9jdW1lbnRhdGlvblxufn5+fn5+fn5+fn5+fn5+fn5+flxuXG4qIEFkZCBpbmZvcm1hdGlvbiBob3cgdG8gZG9uYXRlICgjMjc1NSwgIzI3NzIpLlxuKiBBZGQgaG93IHRvIGluc3RhbGwgdGhlIGRldmVsb3BtZW50IHZlcnNpb24gdXNpbmcgcGlwLlxuKiBGaXggaW5zdGFsbGF0aW9uIGluc3RydWN0aW9ucyBmb3IgZGV2ZWxvcG1lbnQgdmVyc2lvbi4gKCMyNzYxKVxuKiBCZXR0ZXIgZXhhbXBsZXMgZm9yIGhpZGRlbiBpbXBvcnRzLlxuKiBDbGFyaWZ5IGFuZCBmaXggXCJBZGRpbmcgRGF0YSBGaWxlc1wiIGFuZCBcIkFkZGluZyBCaW5hcnkgRmlsZXNcIi4gKCMyNDgyKVxuKiBEb2N1bWVudCBuZXcgY29tbWFuZCBsaW5lIG9wdGlvbiAnLS1ydW50aW1lLXRtcGRpcicuXG4qIHB5aW5zdGFsbGVyIHdvcmtzIG9uIHBvd2VycGMgbGludXgsIGJpZyBlbmRpYW4gYXJjaCAoIzIwMDApXG4qIExhcmdlbHkgcmV3cml0ZSBzZWN0aW9uIFwiQnVpbGRpbmcgdGhlIEJvb3Rsb2FkZXJcIiwgdXBkYXRlIGZyb20gdGhlIHdpa2lcbiAgcGFnZS5cbiogRGVzY3JpYmUgYnVpbGRpbmcgTFNCLWNvbXBsaWFudCBib290bG9hZGVyIGFzIChub3cpIHNwZWNpYWwgY2FzZS5cbiogaGVscDJyc3Q6IEFkZCBjcm9zcy1yZWZlcmVuY2UgbGFiZWxzIGZvciBvcHRpb24taGVhZGVycy5cbiogRW5hYmxlIHNwaGlueC5leHQuaW50ZXJzcGhpbnggYW5kIGxpbmtzIHRvIG91ciB3ZWJzaXRlLlxuKiBTcGhpbnggc2hvdWxkIG5vdCBcImFkanVzdFwiIGRpc3BsYXkgb2YgY29tbWFuZCBsaW5lIGRvY3VtZW50YXRpb24gKCMyMjE3KVxuXG4uLiBfdjMuMyBrbm93biBpc3N1ZXM6XG5cbktub3duIElzc3Vlc1xufn5+fn5+fn5+fn5+fn5+fn5+XG5cbiogRGF0YS1maWxlcyBmcm9tIHdoZWVscywgdW56aXBwZWQgZWdncyBvciBub3QgYWQgZWdnIGF0IGFsbCBhcmUgbm90IGluY2x1ZGVkXG4gIGF1dG9tYXRpY2FsbHkuIFRoaXMgY2FuIGJlIHdvcmtlZCBhcm91bmQgdXNpbmcgYSBob29rLWZpbGUsIGJ1dCBtYXkgbm90XG4gIHN1ZmZpY2Ugd2hlbiB1c2luZyBgYC0tb25lZmlsZWBgIGFuZCBzb21ldGhpbmcgbGlrZSBgcHl0aG9uLWRhZW1vbmAuXG5cbiogVGhlIG11bHRpcGFja2FnZSAoTUVSR0UpIGZlYXR1cmUgKCMxNTI3KSBpcyBjdXJyZW50bHkgYnJva2VuLlxuXG4qIChPU1gpIFN1cHBvcnQgZm9yIE9wZW5Eb2N1bWVudCBldmVudHMgKCMxMzA5KSBpcyBicm9rZW4uXG5cbiogKFdpbmRvd3MpIFdpdGggUHl0aG9uIDIuNyB0aGUgZnJvemVuIGFwcGxpY2F0aW9uIG1heSBub3QgcnVuIGlmIHRoZVxuICB1c2VyLW5hbWUgKG1vcmUgc3BlY2lmaWNhbGx5IGBgJVRFTVBESVIlYGApIGluY2x1ZGVzIHNvbWUgVW5pY29kZVxuICBjaGFyYWN0ZXJzLiBUaGlzIGRvZXMgbm90IGhhcHBlbiB3aXRoIGFsbCBVbmljb2RlIGNoYXJhY3RlcnMsIGJ1dCBvbmx5IHNvbWVcbiAgYW5kIHNlZW1zIHRvIGJlIGEgd2luZG93cyBidWcuIEFzIGEgd29yay1hcm91bmQgcGxlYXNlIHVwZ3JhZGUgdG8gUHl0aG9uIDNcbiAgKCMyNzU0LCAjMjc2NykuXG5cbiogKFdpbmRvd3MpIEZvciBQeXRob24gPj0gMy41IHRhcmdldGluZyAqV2luZG93cyA8IDEwKiwgdGhlIGRldmVsb3BlciBuZWVkcyB0b1xuICB0YWtlIHNwZWNpYWwgY2FyZSB0byBpbmNsdWRlIHRoZSBWaXN1YWwgQysrIHJ1bi10aW1lIC5kbGxzLiBQbGVhc2Ugc2VlIHRoZVxuICBzZWN0aW9uIDpyZWY6YFBsYXRmb3JtLXNwZWNpZmljIE5vdGVzIDxQbGF0Zm9ybS1zcGVjaWZpYyBOb3RlcyAtIFdpbmRvd3M+YFxuICBpbiB0aGUgbWFudWFsLiAoIzE1NjYpXG5cbiogRm9yIFB5dGhvbiAzLjMsIGltcG9ydHMgYXJlIG5vdCB0aHJlYWQtc2FmZSAoIzIzNzEjKS4gU2luY2UgUHl0aG9uIDMuMyBpc1xuICBlbmQgb2YgbGl2ZSBhdCAyMDE3LTA5LTI5LCB3ZSBhcmUgbm90IGdvaW5nIHRvIGZpeCB0aGlzLiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAiIiw=
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL3d3dy5weWluc3RhbGxlci5vcmciLA==
ICAgICJrZXl3b3JkcyI6ICJwYWNrYWdpbmcgYXBwIGFwcHMgYnVuZGxlIGNvbnZlcnQgc3RhbmRhbG9uZSBleGVjdXRhYmxlIHB5aW5zdGFsbGVyIG1hY2hvbGliIGN4ZnJlZXplIGZyZWV6ZSBweTJleGUgcHkyYXBwIGJiZnJlZXplIiw=
ICAgICJsaWNlbnNlIjogIkdQTCBsaWNlbnNlIHdpdGggYSBzcGVjaWFsIGV4Y2VwdGlvbiB3aGljaCBhbGxvd3MgdG8gdXNlIFB5SW5zdGFsbGVyIHRvIGJ1aWxkIGFuZCBkaXN0cmlidXRlIG5vbi1mcmVlIHByb2dyYW1zIChpbmNsdWRpbmcgY29tbWVyY2lhbCBvbmVzKSIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIlB5SW5zdGFsbGVyQ3VzdG9tIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlJbnN0YWxsZXJDdXN0b20vIiw=
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlJbnN0YWxsZXJDdXN0b20vIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly93d3cucHlpbnN0YWxsZXIub3JnIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlJbnN0YWxsZXJDdXN0b20vMy41LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0yLjcsICE9My4wLiosICE9My4xLiosICE9My4yLiosICE9My4zLioiLA==
ICAgICJzdW1tYXJ5IjogIlB5SW5zdGFsbGVyIGJ1bmRsZXMgYSBQeXRob24gYXBwbGljYXRpb24gYW5kIGFsbCBpdHMgZGVwZW5kZW5jaWVzIGludG8gYSBzaW5nbGUgcGFja2FnZS4iLA==
ICAgICJ2ZXJzaW9uIjogIjMuNSIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxMDEyMTY1Myw=
ICAicmVsZWFzZXMiOiB7
ICAgICIzLjQiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMzA1YWZmYmE0MDgyNmVlZmRiY2IwMDEzZTE3M2NmY2VmOTcwM2RjYjdlYzJkNDE4MmY3N2IyOTlkZWNhNWJkIiw=
ICAgICAgICAgICJtZDUiOiAiZWI3YWQ3NGIzMDlhNWRmNWM5ZmQ0NjVhNGU5ZDBmN2YiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZGEzZjRiYWQzZWZlYTY0NjAzMmUxNWQ3NmExYzkwYWE0ZTQ2ODViOTQ4Y2IwZWQ1OWY5N2QwYTYyMzIzNWJlYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlJbnN0YWxsZXJDdXN0b20tMy40LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlYjdhZDc0YjMwOWE1ZGY1YzlmZDQ2NWE0ZTlkMGY3ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49Mi43LCAhPTMuMC4qLCAhPTMuMS4qLCAhPTMuMi4qLCAhPTMuMy4qIiw=
ICAgICAgICAic2l6ZSI6IDM0OTkwMzAs
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wNC0xOVQxODoxNDowOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wNC0xOVQxODoxNDowOC4wNjAwMzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMy8wNS9hZmZiYTQwODI2ZWVmZGJjYjAwMTNlMTczY2ZjZWY5NzAzZGNiN2VjMmQ0MTgyZjc3YjI5OWRlY2E1YmQvUHlJbnN0YWxsZXJDdXN0b20tMy40LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIzLjUiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzOTgzNmUyYjFjM2U1YjJhMzNmMTRlYzQyOWM1MTFhZmI1ZTI0MTRlMzM1N2MzMDAwNWVjMzU4NGRhNTAwOTkzIiw=
ICAgICAgICAgICJtZDUiOiAiNWI5NTc4M2I3YmQyYjlhNmYxYjE2NmIwY2QwNmEyMWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNmFiM2MxZDllMzgzMTNlYjY1NGM3OTBiZjlmNThiYzFhYzA4ZTRmYTY5MDI5ZTU2MmYwOThiYTc3Yjg3NDhkMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlJbnN0YWxsZXJDdXN0b20tMy41LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1Yjk1NzgzYjdiZDJiOWE2ZjFiMTY2YjBjZDA2YTIxZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49Mi43LCAhPTMuMC4qLCAhPTMuMS4qLCAhPTMuMi4qLCAhPTMuMy4qIiw=
ICAgICAgICAic2l6ZSI6IDM0OTkwODks
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wNC0yMFQxODowMTowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wNC0yMFQxODowMTowNS43MzMzOTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zOS84My82ZTJiMWMzZTViMmEzM2YxNGVjNDI5YzUxMWFmYjVlMjQxNGUzMzU3YzMwMDA1ZWMzNTg0ZGE1MDA5OTMvUHlJbnN0YWxsZXJDdXN0b20tMy41LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMzk4MzZlMmIxYzNlNWIyYTMzZjE0ZWM0MjljNTExYWZiNWUyNDE0ZTMzNTdjMzAwMDVlYzM1ODRkYTUwMDk5MyIs
ICAgICAgICAibWQ1IjogIjViOTU3ODNiN2JkMmI5YTZmMWIxNjZiMGNkMDZhMjFkIiw=
ICAgICAgICAic2hhMjU2IjogIjZhYjNjMWQ5ZTM4MzEzZWI2NTRjNzkwYmY5ZjU4YmMxYWMwOGU0ZmE2OTAyOWU1NjJmMDk4YmE3N2I4NzQ4ZDAi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIlB5SW5zdGFsbGVyQ3VzdG9tLTMuNS50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNWI5NTc4M2I3YmQyYjlhNmYxYjE2NmIwY2QwNmEyMWQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTIuNywgIT0zLjAuKiwgIT0zLjEuKiwgIT0zLjIuKiwgIT0zLjMuKiIs
ICAgICAgInNpemUiOiAzNDk5MDg5LA==
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDQtMjBUMTg6MDE6MDUiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDQtMjBUMTg6MDE6MDUuNzMzMzk1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMzkvODMvNmUyYjFjM2U1YjJhMzNmMTRlYzQyOWM1MTFhZmI1ZTI0MTRlMzM1N2MzMDAwNWVjMzU4NGRhNTAwOTkzL1B5SW5zdGFsbGVyQ3VzdG9tLTMuNS50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
