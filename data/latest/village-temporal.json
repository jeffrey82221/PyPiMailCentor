ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiVGVtcG9yYWwgVGVjaG5vbG9naWVzIEluYyIs
ICAgICJhdXRob3JfZW1haWwiOiAic2RrQHRlbXBvcmFsLmlvIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjki
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIjIFRlbXBvcmFsIFB5dGhvbiBTREtcblxuWyFbUHl0aG9uIDMuNytdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vcHlwaS9weXZlcnNpb25zL3RlbXBvcmFsaW8uc3ZnP3N0eWxlPWZvci10aGUtYmFkZ2UpXShodHRwczovL3B5cGkub3JnL3Byb2plY3QvdGVtcG9yYWxpbylcblshW1B5UEldKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vcHlwaS92L3RlbXBvcmFsaW8uc3ZnP3N0eWxlPWZvci10aGUtYmFkZ2UpXShodHRwczovL3B5cGkub3JnL3Byb2plY3QvdGVtcG9yYWxpbylcblshW01JVF0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9weXBpL2wvdGVtcG9yYWxpby5zdmc/c3R5bGU9Zm9yLXRoZS1iYWRnZSldKExJQ0VOU0UpXG5cbltUZW1wb3JhbF0oaHR0cHM6Ly90ZW1wb3JhbC5pby8pIGlzIGEgZGlzdHJpYnV0ZWQsIHNjYWxhYmxlLCBkdXJhYmxlLCBhbmQgaGlnaGx5IGF2YWlsYWJsZSBvcmNoZXN0cmF0aW9uIGVuZ2luZSB1c2VkIHRvXG5leGVjdXRlIGFzeW5jaHJvbm91cyBsb25nLXJ1bm5pbmcgYnVzaW5lc3MgbG9naWMgaW4gYSBzY2FsYWJsZSBhbmQgcmVzaWxpZW50IHdheS5cblxuXCJUZW1wb3JhbCBQeXRob24gU0RLXCIgaXMgdGhlIGZyYW1ld29yayBmb3IgYXV0aG9yaW5nIHdvcmtmbG93cyBhbmQgYWN0aXZpdGllcyB1c2luZyB0aGUgUHl0aG9uIHByb2dyYW1taW5nIGxhbmd1YWdlLlxuXG5BbHNvIHNlZTpcblxuLSBbQ29kZSBTYW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vdGVtcG9yYWxpby9zYW1wbGVzLXB5dGhvbilcbi0gW0FQSSBEb2N1bWVudGF0aW9uXShodHRwczovL3B5dGhvbi50ZW1wb3JhbC5pbylcbi0gW0FwcGxpY2F0aW9uIERldmVsb3BtZW50IEd1aWRlXShodHRwczovL2RvY3MudGVtcG9yYWwuaW8vYXBwbGljYXRpb24tZGV2ZWxvcG1lbnQ/bGFuZz1weXRob24pXG5cbkluIGFkZGl0aW9uIHRvIGZlYXR1cmVzIGNvbW1vbiBhY3Jvc3MgYWxsIFRlbXBvcmFsIFNES3MsIHRoZSBQeXRob24gU0RLIGFsc28gaGFzIHRoZSBmb2xsb3dpbmcgaW50ZXJlc3RpbmcgZmVhdHVyZXM6XG5cbioqVHlwZSBTYWZlKipcblxuVGhpcyBsaWJyYXJ5IHVzZXMgdGhlIGxhdGVzdCB0eXBpbmcgYW5kIE15UHkgc3VwcG9ydCB3aXRoIGdlbmVyaWNzIHRvIGVuc3VyZSBhbGwgY2FsbHMgY2FuIGJlIHR5cGVkLiBGb3IgZXhhbXBsZSxcbnN0YXJ0aW5nIGEgd29ya2Zsb3cgd2l0aCBhbiBgaW50YCBwYXJhbWV0ZXIgd2hlbiBpdCBhY2NlcHRzIGEgYHN0cmAgcGFyYW1ldGVyIHdvdWxkIGNhdXNlIE15UHkgdG8gZmFpbC5cblxuKipEaWZmZXJlbnQgQWN0aXZpdHkgVHlwZXMqKlxuXG5UaGUgYWN0aXZpdHkgd29ya2VyIGhhcyBiZWVuIGRldmVsb3BlZCB0byB3b3JrIHdpdGggYGFzeW5jIGRlZmAsIHRocmVhZGVkLCBhbmQgbXVsdGlwcm9jZXNzIGFjdGl2aXRpZXMuIFdoaWxlXG5gYXN5bmMgZGVmYCBhY3Rpdml0aWVzIGFyZSB0aGUgZWFzaWVzdCBhbmQgcmVjb21tZW5kZWQsIGNhcmUgaGFzIGJlZW4gdGFrZW4gdG8gbWFrZSBoZWFydGJlYXRpbmcgYW5kIGNhbmNlbGxhdGlvbiBhbHNvXG53b3JrIGFjcm9zcyB0aHJlYWRzL3Byb2Nlc3Nlcy5cblxuKipDdXN0b20gYGFzeW5jaW9gIEV2ZW50IExvb3AqKlxuXG5UaGUgd29ya2Zsb3cgaW1wbGVtZW50YXRpb24gYmFzaWNhbGx5IHR1cm5zIGBhc3luYyBkZWZgIGZ1bmN0aW9ucyBpbnRvIHdvcmtmbG93cyBiYWNrZWQgYnkgYSBkaXN0cmlidXRlZCwgZmF1bHQtdG9sZXJhbnRcbmV2ZW50IGxvb3AuIFRoaXMgbWVhbnMgdGFzayBtYW5hZ2VtZW50LCBzbGVlcCwgY2FuY2VsbGF0aW9uLCBldGMgaGF2ZSBhbGwgYmVlbiBkZXZlbG9wZWQgdG8gc2VhbWxlc3NseSBpbnRlZ3JhdGUgd2l0aFxuYGFzeW5jaW9gIGNvbmNlcHRzLlxuXG4qKuKaoO+4jyBVTkRFUiBERVZFTE9QTUVOVCoqXG5cblRoZSBQeXRob24gU0RLIGlzIHVuZGVyIGRldmVsb3BtZW50LiBUaGVyZSBhcmUgbm8gY29tcGF0aWJpbGl0eSBndWFyYW50ZWVzIGF0IHRoaXMgdGltZS5cblxuIyMgUXVpY2sgU3RhcnRcblxuIyMjIEluc3RhbGxhdGlvblxuXG5JbnN0YWxsIHRoZSBgdGVtcG9yYWxpb2AgcGFja2FnZSBmcm9tIFtQeVBJXShodHRwczovL3B5cGkub3JnL3Byb2plY3QvdGVtcG9yYWxpbykuXG5cblRoZXNlIHN0ZXBzIGNhbiBiZSBmb2xsb3dlZCB0byB1c2Ugd2l0aCBhIHZpcnR1YWwgZW52aXJvbm1lbnQgYW5kIGBwaXBgOlxuXG4tIFtDcmVhdGUgYSB2aXJ0dWFsIGVudmlyb25tZW50XShodHRwczovL3BhY2thZ2luZy5weXRob24ub3JnL2VuL2xhdGVzdC90dXRvcmlhbHMvaW5zdGFsbGluZy1wYWNrYWdlcy8jY3JlYXRpbmctdmlydHVhbC1lbnZpcm9ubWVudHMpXG4tIFVwZGF0ZSBgcGlwYCAtIGBweXRob24gLW0gcGlwIGluc3RhbGwgLVUgcGlwYFxuICAtIE5lZWRlZCBiZWNhdXNlIG9sZGVyIHZlcnNpb25zIG9mIGBwaXBgIG1heSBub3QgcGljayB0aGUgcmlnaHQgd2hlZWxcbi0gSW5zdGFsbCBUZW1wb3JhbCBTREsgLSBgcHl0aG9uIC1tIHBpcCBpbnN0YWxsIHRlbXBvcmFsaW9gXG5cblRoZSBTREsgaXMgbm93IHJlYWR5IGZvciB1c2UuIFRvIGJ1aWxkIGZyb20gc291cmNlLCBzZWUgXCJCdWlsZGluZ1wiIG5lYXIgdGhlIGVuZCBvZiB0aGlzIGRvY3VtZW50YXRpb24uXG5cbioqTk9URTogVGhpcyBSRUFETUUgaXMgZm9yIHRoZSBjdXJyZW50IGJyYW5jaCBhbmQgbm90IG5lY2Vzc2FyaWx5IHdoYXQncyByZWxlYXNlZCBvbiBgUHlQSWAuKipcblxuIyMjIEltcGxlbWVudGluZyBhIFdvcmtmbG93XG5cbkNyZWF0ZSB0aGUgZm9sbG93aW5nIHNjcmlwdCBhdCBgcnVuX3dvcmtlci5weWA6XG5cbmBgYHB5dGhvblxuaW1wb3J0IGFzeW5jaW9cbmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lLCB0aW1lZGVsdGFcbmZyb20gdGVtcG9yYWxpbyBpbXBvcnQgd29ya2Zsb3csIGFjdGl2aXR5XG5mcm9tIHRlbXBvcmFsaW8uY2xpZW50IGltcG9ydCBDbGllbnRcbmZyb20gdGVtcG9yYWxpby53b3JrZXIgaW1wb3J0IFdvcmtlclxuXG5AYWN0aXZpdHkuZGVmblxuYXN5bmMgZGVmIHNheV9oZWxsbyhuYW1lOiBzdHIpIC0+IHN0cjpcbiAgICByZXR1cm4gZlwiSGVsbG8sIHtuYW1lfSFcIlxuXG5Ad29ya2Zsb3cuZGVmblxuY2xhc3MgU2F5SGVsbG86XG4gICAgQHdvcmtmbG93LnJ1blxuICAgIGFzeW5jIGRlZiBydW4oc2VsZiwgbmFtZTogc3RyKSAtPiBzdHI6XG4gICAgICAgIHJldHVybiBhd2FpdCB3b3JrZmxvdy5leGVjdXRlX2FjdGl2aXR5KFxuICAgICAgICAgICAgc2F5X2hlbGxvLCBuYW1lLCBzY2hlZHVsZV90b19jbG9zZV90aW1lb3V0PXRpbWVkZWx0YShzZWNvbmRzPTUpXG4gICAgICAgIClcblxuYXN5bmMgZGVmIG1haW4oKTpcbiAgICAjIENyZWF0ZSBjbGllbnQgY29ubmVjdGVkIHRvIHNlcnZlciBhdCB0aGUgZ2l2ZW4gYWRkcmVzc1xuICAgIGNsaWVudCA9IGF3YWl0IENsaWVudC5jb25uZWN0KFwibG9jYWxob3N0OjcyMzNcIilcblxuICAgICMgUnVuIHRoZSB3b3JrZXJcbiAgICB3b3JrZXIgPSBXb3JrZXIoY2xpZW50LCB0YXNrX3F1ZXVlPVwibXktdGFzay1xdWV1ZVwiLCB3b3JrZmxvd3M9W1NheUhlbGxvXSwgYWN0aXZpdGllcz1bc2F5X2hlbGxvXSlcbiAgICBhd2FpdCB3b3JrZXIucnVuKClcblxuaWYgX19uYW1lX18gPT0gXCJfX21haW5fX1wiOlxuICAgIGFzeW5jaW8ucnVuKG1haW4oKSlcbmBgYFxuXG5Bc3N1bWluZyB5b3UgaGF2ZSBhIFtUZW1wb3JhbCBzZXJ2ZXIgcnVubmluZyBvbiBsb2NhbGhvc3RdKGh0dHBzOi8vZG9jcy50ZW1wb3JhbC5pby9kb2NzL3NlcnZlci9xdWljay1pbnN0YWxsLyksIHRoaXNcbndpbGwgcnVuIHRoZSB3b3JrZXI6XG5cbiAgICBweXRob24gcnVuX3dvcmtlci5weVxuXG4jIyMgUnVubmluZyBhIFdvcmtmbG93XG5cbkNyZWF0ZSB0aGUgZm9sbG93aW5nIHNjcmlwdCBhdCBgcnVuX3dvcmtmbG93LnB5YDpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYXN5bmNpb1xuZnJvbSB0ZW1wb3JhbGlvLmNsaWVudCBpbXBvcnQgQ2xpZW50XG5cbiMgSW1wb3J0IHRoZSB3b3JrZmxvdyBmcm9tIHRoZSBwcmV2aW91cyBjb2RlXG5mcm9tIHJ1bl93b3JrZXIgaW1wb3J0IFNheUhlbGxvXG5cbmFzeW5jIGRlZiBtYWluKCk6XG4gICAgIyBDcmVhdGUgY2xpZW50IGNvbm5lY3RlZCB0byBzZXJ2ZXIgYXQgdGhlIGdpdmVuIGFkZHJlc3NcbiAgICBjbGllbnQgPSBhd2FpdCBDbGllbnQuY29ubmVjdChcImxvY2FsaG9zdDo3MjMzXCIpXG5cbiAgICAjIEV4ZWN1dGUgYSB3b3JrZmxvd1xuICAgIHJlc3VsdCA9IGF3YWl0IGNsaWVudC5leGVjdXRlX3dvcmtmbG93KFNheUhlbGxvLnJ1biwgXCJteSBuYW1lXCIsIGlkPVwibXktd29ya2Zsb3ctaWRcIiwgdGFza19xdWV1ZT1cIm15LXRhc2stcXVldWVcIilcblxuICAgIHByaW50KGZcIlJlc3VsdDoge3Jlc3VsdH1cIilcblxuaWYgX19uYW1lX18gPT0gXCJfX21haW5fX1wiOlxuICAgIGFzeW5jaW8ucnVuKG1haW4oKSlcbmBgYFxuXG5Bc3N1bWluZyB5b3UgaGF2ZSBgcnVuX3dvcmtlci5weWAgcnVubmluZyBmcm9tIGJlZm9yZSwgdGhpcyB3aWxsIHJ1biB0aGUgd29ya2Zsb3c6XG5cbiAgICBweXRob24gcnVuX3dvcmtmbG93LnB5XG5cblRoZSBvdXRwdXQgd2lsbCBiZTpcblxuICAgIFJlc3VsdDogSGVsbG8sIG15LW5hbWUhXG5cbiMjIFVzYWdlXG5cbiMjIyBDbGllbnRcblxuQSBjbGllbnQgY2FuIGJlIGNyZWF0ZWQgYW5kIHVzZWQgdG8gc3RhcnQgYSB3b3JrZmxvdyBsaWtlIHNvOlxuXG5gYGBweXRob25cbmZyb20gdGVtcG9yYWxpby5jbGllbnQgaW1wb3J0IENsaWVudFxuXG5hc3luYyBkZWYgbWFpbigpOlxuICAgICMgQ3JlYXRlIGNsaWVudCBjb25uZWN0ZWQgdG8gc2VydmVyIGF0IHRoZSBnaXZlbiBhZGRyZXNzIGFuZCBuYW1lc3BhY2VcbiAgICBjbGllbnQgPSBhd2FpdCBDbGllbnQuY29ubmVjdChcImxvY2FsaG9zdDo3MjMzXCIsIG5hbWVzcGFjZT1cIm15LW5hbWVzcGFjZVwiKVxuXG4gICAgIyBTdGFydCBhIHdvcmtmbG93XG4gICAgaGFuZGxlID0gYXdhaXQgY2xpZW50LnN0YXJ0X3dvcmtmbG93KE15V29ya2Zsb3cucnVuLCBcInNvbWUgYXJnXCIsIGlkPVwibXktd29ya2Zsb3ctaWRcIiwgdGFza19xdWV1ZT1cIm15LXRhc2stcXVldWVcIilcblxuICAgICMgV2FpdCBmb3IgcmVzdWx0XG4gICAgcmVzdWx0ID0gYXdhaXQgaGFuZGxlLnJlc3VsdCgpXG4gICAgcHJpbnQoZlwiUmVzdWx0OiB7cmVzdWx0fVwiKVxuYGBgXG5cblNvbWUgdGhpbmdzIHRvIG5vdGUgYWJvdXQgdGhlIGFib3ZlIGNvZGU6XG5cbi0gQSBgQ2xpZW50YCBkb2VzIG5vdCBoYXZlIGFuIGV4cGxpY2l0IFwiY2xvc2VcIlxuLSBUbyBlbmFibGUgVExTLCB0aGUgYHRsc2AgYXJndW1lbnQgdG8gYGNvbm5lY3RgIGNhbiBiZSBzZXQgdG8gYFRydWVgIG9yIGEgYFRMU0NvbmZpZ2Agb2JqZWN0XG4tIEEgc2luZ2xlIHBvc2l0aW9uYWwgYXJndW1lbnQgY2FuIGJlIHBhc3NlZCB0byBgc3RhcnRfd29ya2Zsb3dgLiBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgYXJndW1lbnRzLCBvbmx5IHRoZVxuICBub24tdHlwZS1zYWZlIGZvcm0gb2YgYHN0YXJ0X3dvcmtmbG93YCBjYW4gYmUgdXNlZCAoaS5lLiB0aGUgb25lIGFjY2VwdGluZyBhIHN0cmluZyB3b3JrZmxvdyBuYW1lKSBhbmQgaXQgbXVzdCBiZSBpblxuICB0aGUgYGFyZ3NgIGtleXdvcmQgYXJndW1lbnQuXG4tIFRoZSBgaGFuZGxlYCByZXByZXNlbnRzIHRoZSB3b3JrZmxvdyB0aGF0IHdhcyBzdGFydGVkIGFuZCBjYW4gYmUgdXNlZCBmb3IgbW9yZSB0aGFuIGp1c3QgZ2V0dGluZyB0aGUgcmVzdWx0XG4tIFNpbmNlIHdlIGFyZSBqdXN0IGdldHRpbmcgdGhlIGhhbmRsZSBhbmQgd2FpdGluZyBvbiB0aGUgcmVzdWx0LCB3ZSBjb3VsZCBoYXZlIGNhbGxlZCBgY2xpZW50LmV4ZWN1dGVfd29ya2Zsb3dgIHdoaWNoXG4gIGRvZXMgdGhlIHNhbWUgdGhpbmdcbi0gQ2xpZW50cyBjYW4gaGF2ZSBtYW55IG1vcmUgb3B0aW9ucyBub3Qgc2hvd24gaGVyZSAoZS5nLiBkYXRhIGNvbnZlcnRlcnMgYW5kIGludGVyY2VwdG9ycylcbi0gQSBzdHJpbmcgY2FuIGJlIHVzZWQgaW5zdGVhZCBvZiB0aGUgbWV0aG9kIHJlZmVyZW5jZSB0byBjYWxsIGEgd29ya2Zsb3cgYnkgbmFtZSAoZS5nLiBpZiBkZWZpbmVkIGluIGFub3RoZXIgbGFuZ3VhZ2UpXG5cbkNsaWVudHMgYWxzbyBwcm92aWRlIGEgc2hhbGxvdyBjb3B5IG9mIHRoZWlyIGNvbmZpZyBmb3IgdXNlIGluIG1ha2luZyBzbGlnaHRseSBkaWZmZXJlbnQgY2xpZW50cyBiYWNrZWQgYnkgdGhlIHNhbWVcbmNvbm5lY3Rpb24uIEZvciBpbnN0YW5jZSwgZ2l2ZW4gdGhlIGBjbGllbnRgIGFib3ZlLCB0aGlzIGlzIGhvdyB0byBoYXZlIGEgY2xpZW50IGluIGFub3RoZXIgbmFtZXNwYWNlOlxuXG5gYGBweXRob25cbmNvbmZpZyA9IGNsaWVudC5jb25maWcoKVxuY29uZmlnW1wibmFtZXNwYWNlXCJdID0gXCJteS1vdGhlci1uYW1lc3BhY2VcIlxub3RoZXJfbnNfY2xpZW50ID0gQ2xpZW50KCoqY29uZmlnKVxuYGBgXG5cbiMjIyMgRGF0YSBDb252ZXJzaW9uXG5cbkRhdGEgY29udmVydGVycyBhcmUgdXNlZCB0byBjb252ZXJ0IHJhdyBUZW1wb3JhbCBwYXlsb2FkcyB0by9mcm9tIGFjdHVhbCBQeXRob24gdHlwZXMuIEEgY3VzdG9tIGRhdGEgY29udmVydGVyIG9mIHR5cGVcbmB0ZW1wb3JhbGlvLmNvbnZlcnRlci5EYXRhQ29udmVydGVyYCBjYW4gYmUgc2V0IHZpYSB0aGUgYGRhdGFfY29udmVydGVyYCBjbGllbnQgcGFyYW1ldGVyLiBEYXRhIGNvbnZlcnRlcnMgYXJlIGFcbmNvbWJpbmF0aW9uIG9mIHBheWxvYWQgY29udmVydGVycyBhbmQgcGF5bG9hZCBjb2RlY3MuIFRoZSBmb3JtZXIgY29udmVydHMgUHl0aG9uIHZhbHVlcyB0by9mcm9tIHNlcmlhbGl6ZWQgYnl0ZXMsIGFuZFxudGhlIGxhdHRlciBjb252ZXJ0cyBieXRlcyB0byBieXRlcyAoZS5nLiBmb3IgY29tcHJlc3Npb24gb3IgZW5jcnlwdGlvbikuXG5cblRoZSBkZWZhdWx0IGRhdGEgY29udmVydGVyIHN1cHBvcnRzIGNvbnZlcnRpbmcgbXVsdGlwbGUgdHlwZXMgaW5jbHVkaW5nOlxuXG4tIGBOb25lYFxuLSBgYnl0ZXNgXG4tIGBnb29nbGUucHJvdG9idWYubWVzc2FnZS5NZXNzYWdlYCAtIEFzIEpTT04gd2hlbiBlbmNvZGluZywgYnV0IGhhcyBhYmlsaXR5IHRvIGRlY29kZSBiaW5hcnkgcHJvdG8gZnJvbSBvdGhlciBsYW5ndWFnZXNcbi0gQW55dGhpbmcgdGhhdCBjYW4gYmUgY29udmVydGVkIHRvIEpTT04gaW5jbHVkaW5nOlxuICAtIEFueXRoaW5nIHRoYXQgW2Bqc29uLmR1bXBgXShodHRwczovL2RvY3MucHl0aG9uLm9yZy8zL2xpYnJhcnkvanNvbi5odG1sI2pzb24uZHVtcCkgc3VwcG9ydHMgbmF0aXZlbHlcbiAgLSBbZGF0YWNsYXNzZXNdKGh0dHBzOi8vZG9jcy5weXRob24ub3JnLzMvbGlicmFyeS9kYXRhY2xhc3Nlcy5odG1sKVxuICAtIEl0ZXJhYmxlcyBpbmNsdWRpbmcgb25lcyBKU09OIGR1bXAgbWF5IG5vdCBzdXBwb3J0IGJ5IGRlZmF1bHQsIGUuZy4gYHNldGBcbiAgLSBBbnkgY2xhc3Mgd2l0aCBhIGBkaWN0KClgIG1ldGhvZCBhbmQgYSBzdGF0aWMgYHBhcnNlX29iaigpYCBtZXRob2QsIGUuZy5cbiAgICBbUHlkYW50aWMgbW9kZWxzXShodHRwczovL3B5ZGFudGljLWRvY3MuaGVscG1hbnVhbC5pby91c2FnZS9tb2RlbHMpXG4gIC0gW0ludEVudW1dKGh0dHBzOi8vZG9jcy5weXRob24ub3JnLzMvbGlicmFyeS9lbnVtLmh0bWwpIGJhc2VkIGVudW1lcmF0ZXNcblxuRm9yIGNvbnZlcnRpbmcgZnJvbSBKU09OLCB0aGUgd29ya2Zsb3cvYWN0aXZpdHkgdHlwZSBoaW50IGlzIHRha2VuIGludG8gYWNjb3VudCB0byBjb252ZXJ0IHRvIHRoZSBwcm9wZXIgdHlwZS4gQ2FyZSBoYXNcbmJlZW4gdGFrZW4gdG8gc3VwcG9ydCBhbGwgY29tbW9uIHR5cGluZ3MgaW5jbHVkaW5nIGBPcHRpb25hbGAsIGBVbmlvbmAsIGFsbCBmb3JtcyBvZiBpdGVyYWJsZXMgYW5kIG1hcHBpbmdzLCBgTmV3VHlwZWAsXG5ldGMgaW4gYWRkaXRpb24gdG8gdGhlIHJlZ3VsYXIgSlNPTiB2YWx1ZXMgbWVudGlvbmVkIGJlZm9yZS5cblxuVXNlcnMgYXJlIHN0cm9uZ2x5IGVuY291cmFnZWQgdG8gdXNlIGEgc2luZ2xlIGBkYXRhY2xhc3NgIGZvciBwYXJhbWV0ZXIgYW5kIHJldHVybiB0eXBlcyBzbyBmaWVsZHMgd2l0aCBkZWZhdWx0cyBjYW4gYmVcbmVhc2lseSBhZGRlZCB3aXRob3V0IGJyZWFraW5nIGNvbXBhdGliaWxpdHkuXG5cbiMjIyBXb3JrZXJzXG5cbldvcmtlcnMgaG9zdCB3b3JrZmxvd3MgYW5kL29yIGFjdGl2aXRpZXMuIEhlcmUncyBob3cgdG8gcnVuIGEgd29ya2VyOlxuXG5gYGBweXRob25cbmltcG9ydCBhc3luY2lvXG5pbXBvcnQgbG9nZ2luZ1xuZnJvbSB0ZW1wb3JhbGlvLmNsaWVudCBpbXBvcnQgQ2xpZW50XG5mcm9tIHRlbXBvcmFsaW8ud29ya2VyIGltcG9ydCBXb3JrZXJcbiMgSW1wb3J0IHlvdXIgb3duIHdvcmtmbG93cyBhbmQgYWN0aXZpdGllc1xuZnJvbSBteV93b3JrZmxvd19wYWNrYWdlIGltcG9ydCBNeVdvcmtmbG93LCBteV9hY3Rpdml0eVxuXG5hc3luYyBkZWYgcnVuX3dvcmtlcihzdG9wX2V2ZW50OiBhc3luY2lvLkV2ZW50KTpcbiAgICAjIENyZWF0ZSBjbGllbnQgY29ubmVjdGVkIHRvIHNlcnZlciBhdCB0aGUgZ2l2ZW4gYWRkcmVzc1xuICAgIGNsaWVudCA9IGF3YWl0IENsaWVudC5jb25uZWN0KFwibG9jYWxob3N0OjcyMzNcIiwgbmFtZXNwYWNlPVwibXktbmFtZXNwYWNlXCIpXG5cbiAgICAjIFJ1biB0aGUgd29ya2VyIHVudGlsIHRoZSBldmVudCBpcyBzZXRcbiAgICB3b3JrZXIgPSBXb3JrZXIoY2xpZW50LCB0YXNrX3F1ZXVlPVwibXktdGFzay1xdWV1ZVwiLCB3b3JrZmxvd3M9W015V29ya2Zsb3ddLCBhY3Rpdml0aWVzPVtteV9hY3Rpdml0eV0pXG4gICAgYXN5bmMgd2l0aCB3b3JrZXI6XG4gICAgICAgIGF3YWl0IHN0b3BfZXZlbnQud2FpdCgpXG5gYGBcblxuU29tZSB0aGluZ3MgdG8gbm90ZSBhYm91dCB0aGUgYWJvdmUgY29kZTpcblxuLSBUaGlzIGNyZWF0ZXMvdXNlcyB0aGUgc2FtZSBjbGllbnQgdGhhdCBpcyB1c2VkIGZvciBzdGFydGluZyB3b3JrZmxvd3Ncbi0gV2hpbGUgdGhpcyBleGFtcGxlIGFjY2VwdHMgYSBzdG9wIGV2ZW50IGFuZCB1c2VzIGBhc3luYyB3aXRoYCwgYHJ1bigpYCBhbmQgYHNodXRkb3duKClgIG1heSBiZSB1c2VkIGluc3RlYWRcbi0gV29ya2VycyBjYW4gaGF2ZSBtYW55IG1vcmUgb3B0aW9ucyBub3Qgc2hvd24gaGVyZSAoZS5nLiBkYXRhIGNvbnZlcnRlcnMgYW5kIGludGVyY2VwdG9ycylcblxuIyMjIFdvcmtmbG93c1xuXG4jIyMjIERlZmluaXRpb25cblxuV29ya2Zsb3dzIGFyZSBkZWZpbmVkIGFzIGNsYXNzZXMgZGVjb3JhdGVkIHdpdGggYEB3b3JrZmxvdy5kZWZuYC4gVGhlIG1ldGhvZCBpbnZva2VkIGZvciB0aGUgd29ya2Zsb3cgaXMgZGVjb3JhdGVkIHdpdGhcbmBAd29ya2Zsb3cucnVuYC4gTWV0aG9kcyBmb3Igc2lnbmFscyBhbmQgcXVlcmllcyBhcmUgZGVjb3JhdGVkIHdpdGggYEB3b3JrZmxvdy5zaWduYWxgIGFuZCBgQHdvcmtmbG93LnF1ZXJ5YFxucmVzcGVjdGl2ZWx5LiBIZXJlJ3MgYW4gZXhhbXBsZSBvZiBhIHdvcmtmbG93OlxuXG5gYGBweXRob25cbmltcG9ydCBhc3luY2lvXG5mcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3NcbmZyb20gZGF0ZXRpbWUgaW1wb3J0IHRpbWVkZWx0YVxuZnJvbSB0ZW1wb3JhbGlvIGltcG9ydCBhY3Rpdml0eSwgd29ya2Zsb3dcbmZyb20gdGVtcG9yYWxpby5jbGllbnQgaW1wb3J0IENsaWVudFxuZnJvbSB0ZW1wb3JhbGlvLndvcmtlciBpbXBvcnQgV29ya2VyXG5cbkBkYXRhY2xhc3NcbmNsYXNzIEdyZWV0aW5nSW5mbzpcbiAgICBzYWx1dGF0aW9uOiBzdHIgPSBcIkhlbGxvXCJcbiAgICBuYW1lOiBzdHIgPSBcIjx1bmtub3duPlwiXG5cbkB3b3JrZmxvdy5kZWZuXG5jbGFzcyBHcmVldGluZ1dvcmtmbG93OlxuICAgIGRlZiBfX2luaXRfXygpIC0+IE5vbmU6XG4gICAgICAgIHNlbGYuX2N1cnJlbnRfZ3JlZXRpbmcgPSBcIjx1bnNldD5cIlxuICAgICAgICBzZWxmLl9ncmVldGluZ19pbmZvID0gR3JlZXRpbmdJbmZvKClcbiAgICAgICAgc2VsZi5fZ3JlZXRpbmdfaW5mb191cGRhdGUgPSBhc3luY2lvLkV2ZW50KClcbiAgICAgICAgc2VsZi5fY29tcGxldGUgPSBhc3luY2lvLkV2ZW50KClcblxuICAgIEB3b3JrZmxvdy5ydW5cbiAgICBhc3luYyBkZWYgcnVuKHNlbGYsIG5hbWU6IHN0cikgLT4gc3RyOlxuICAgICAgICBzZWxmLl9ncmVldGluZ19pbmZvLm5hbWUgPSBuYW1lXG4gICAgICAgIHdoaWxlIFRydWU6XG4gICAgICAgICAgICAjIFN0b3JlIGdyZWV0aW5nXG4gICAgICAgICAgICBzZWxmLl9jdXJyZW50X2dyZWV0aW5nID0gYXdhaXQgd29ya2Zsb3cuZXhlY3V0ZV9hY3Rpdml0eShcbiAgICAgICAgICAgICAgICBjcmVhdGVfZ3JlZXRpbmdfYWN0aXZpdHksXG4gICAgICAgICAgICAgICAgc2VsZi5fZ3JlZXRpbmdfaW5mbyxcbiAgICAgICAgICAgICAgICBzdGFydF90b19jbG9zZV90aW1lb3V0PXRpbWVkZWx0YShzZWNvbmRzPTUpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgd29ya2Zsb3cubG9nZ2VyLmRlYnVnKFwiR3JlZXRpbmcgc2V0IHRvICVzXCIsIHNlbGYuX2N1cnJlbnRfZ3JlZXRpbmcpXG5cbiAgICAgICAgICAgICMgV2FpdCBmb3Igc2FsdXRhdGlvbiB1cGRhdGUgb3IgY29tcGxldGUgc2lnbmFsICh0aGlzIGNhbiBiZVxuICAgICAgICAgICAgIyBjYW5jZWxsZWQpXG4gICAgICAgICAgICBhd2FpdCBhc3luY2lvLndhaXQoXG4gICAgICAgICAgICAgICAgW3NlbGYuX2dyZWV0aW5nX2luZm9fdXBkYXRlLndhaXQoKSwgc2VsZi5fY29tcGxldGUud2FpdCgpXSxcbiAgICAgICAgICAgICAgICByZXR1cm5fd2hlbj1hc3luY2lvLkZJUlNUX0NPTVBMRVRFRCxcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIGlmIHNlbGYuX2NvbXBsZXRlLmlzX3NldCgpOlxuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLl9jdXJyZW50X2dyZWV0aW5nXG4gICAgICAgICAgICBzZWxmLl9ncmVldGluZ19pbmZvX3VwZGF0ZS5jbGVhcigpXG5cbiAgICBAd29ya2Zsb3cuc2lnbmFsXG4gICAgYXN5bmMgZGVmIHVwZGF0ZV9zYWx1dGF0aW9uKHNlbGYsIHNhbHV0YXRpb246IHN0cikgLT4gTm9uZTpcbiAgICAgICAgc2VsZi5fZ3JlZXRpbmdfaW5mby5zYWx1dGF0aW9uID0gc2FsdXRhdGlvblxuICAgICAgICBzZWxmLl9ncmVldGluZ19pbmZvX3VwZGF0ZS5zZXQoKVxuXG4gICAgQHdvcmtmbG93LnNpZ25hbFxuICAgIGFzeW5jIGRlZiBjb21wbGV0ZV93aXRoX2dyZWV0aW5nKHNlbGYpIC0+IE5vbmU6XG4gICAgICAgIHNlbGYuX2NvbXBsZXRlLnNldCgpXG5cbiAgICBAd29ya2Zsb3cucXVlcnlcbiAgICBhc3luYyBkZWYgY3VycmVudF9ncmVldGluZyhzZWxmKSAtPiBzdHI6XG4gICAgICAgIHJldHVybiBzZWxmLl9jdXJyZW50X2dyZWV0aW5nXG5cbkBhY3Rpdml0eS5kZWZuXG5hc3luYyBkZWYgY3JlYXRlX2dyZWV0aW5nX2FjdGl2aXR5KGluZm86IEdyZWV0aW5nSW5mbykgLT4gc3RyOlxuICAgIHJldHVybiBmXCJ7aW5mby5zYWx1dGF0aW9ufSwge2luZm8ubmFtZX0hXCJcbmBgYFxuXG5Tb21lIHRoaW5ncyB0byBub3RlIGFib3V0IHRoZSBhYm92ZSBjb2RlOlxuXG4tIFRoaXMgd29ya2Zsb3cgY29udGludWFsbHkgdXBkYXRlcyB0aGUgcXVlcnlhYmxlIGN1cnJlbnQgZ3JlZXRpbmcgd2hlbiBzaWduYWxsZWQgYW5kIGNhbiBjb21wbGV0ZSB3aXRoIHRoZSBncmVldGluZyBvblxuICBhIGRpZmZlcmVudCBzaWduYWxcbi0gV29ya2Zsb3dzIGFyZSBhbHdheXMgY2xhc3NlcyBhbmQgbXVzdCBoYXZlIGEgc2luZ2xlIGBAd29ya2Zsb3cucnVuYCB3aGljaCBpcyBhbiBgYXN5bmMgZGVmYCBmdW5jdGlvblxuLSBXb3JrZmxvdyBjb2RlIG11c3QgYmUgZGV0ZXJtaW5pc3RpYy4gVGhpcyBtZWFucyBubyB0aHJlYWRpbmcsIG5vIHJhbmRvbW5lc3MsIG5vIGV4dGVybmFsIGNhbGxzIHRvIHByb2Nlc3Nlcywgbm9cbiAgbmV0d29yayBJTywgYW5kIG5vIGdsb2JhbCBzdGF0ZSBtdXRhdGlvbi4gQWxsIGNvZGUgbXVzdCBydW4gaW4gdGhlIGltcGxpY2l0IGBhc3luY2lvYCBldmVudCBsb29wIGFuZCBiZSBkZXRlcm1pbmlzdGljLlxuLSBgQGFjdGl2aXR5LmRlZm5gIGlzIGV4cGxhaW5lZCBpbiBhIGxhdGVyIHNlY3Rpb24uIEZvciBub3JtYWwgc2ltcGxlIHN0cmluZyBjb25jYXRlbmF0aW9uLCB0aGlzIHdvdWxkIGp1c3QgYmUgZG9uZSBpblxuICB0aGUgd29ya2Zsb3cuIFRoZSBhY3Rpdml0eSBpcyBmb3IgZGVtb25zdHJhdGlvbiBwdXJwb3NlcyBvbmx5LlxuLSBgd29ya2Zsb3cuZXhlY3V0ZV9hY3Rpdml0eShjcmVhdGVfZ3JlZXRpbmdfYWN0aXZpdHksIC4uLmAgaXMgYWN0dWFsbHkgYSB0eXBlZCBzaWduYXR1cmUsIGFuZCBNeVB5IHdpbGwgZmFpbCBpZiB0aGVcbiAgYHNlbGYuX2dyZWV0aW5nX2luZm9gIHBhcmFtZXRlciBpcyBub3QgYSBgR3JlZXRpbmdJbmZvYFxuXG5IZXJlIGFyZSB0aGUgZGVjb3JhdG9ycyB0aGF0IGNhbiBiZSBhcHBsaWVkOlxuXG4tIGBAd29ya2Zsb3cuZGVmbmAgLSBEZWZpbmVzIGEgd29ya2Zsb3cgY2xhc3NcbiAgLSBNdXN0IGJlIGRlZmluZWQgb24gdGhlIGNsYXNzIGdpdmVuIHRvIHRoZSB3b3JrZXIgKGlnbm9yZWQgaWYgcHJlc2VudCBvbiBhIGJhc2UgY2xhc3MpXG4gIC0gQ2FuIGhhdmUgYSBgbmFtZWAgcGFyYW0gdG8gY3VzdG9taXplIHRoZSB3b3JrZmxvdyBuYW1lLCBvdGhlcndpc2UgaXQgZGVmYXVsdHMgdG8gdGhlIHVucXVhbGlmaWVkIGNsYXNzIG5hbWVcbi0gYEB3b3JrZmxvdy5ydW5gIC0gRGVmaW5lcyB0aGUgcHJpbWFyeSB3b3JrZmxvdyBydW4gbWV0aG9kXG4gIC0gTXVzdCBiZSBkZWZpbmVkIG9uIHRoZSBzYW1lIGNsYXNzIGFzIGBAd29ya2Zsb3cuZGVmbmAsIG5vdCBhIGJhc2UgY2xhc3MgKGJ1dCBjYW4gX2Fsc29fIGJlIGRlZmluZWQgb24gdGhlIHNhbWVcbiAgICBtZXRob2Qgb2YgYSBiYXNlIGNsYXNzKVxuICAtIEV4YWN0bHkgb25lIG1ldGhvZCBuYW1lIG11c3QgaGF2ZSB0aGlzIGRlY29yYXRvciwgbm8gbW9yZSBvciBsZXNzXG4gIC0gTXVzdCBiZSBkZWZpbmVkIG9uIGFuIGBhc3luYyBkZWZgIG1ldGhvZFxuICAtIFRoZSBtZXRob2QncyBhcmd1bWVudHMgYXJlIHRoZSB3b3JrZmxvdydzIGFyZ3VtZW50c1xuICAtIFRoZSBmaXJzdCBwYXJhbWV0ZXIgbXVzdCBiZSBgc2VsZmAsIGZvbGxvd2VkIGJ5IHBvc2l0aW9uYWwgYXJndW1lbnRzLiBCZXN0IHByYWN0aWNlIGlzIHRvIG9ubHkgdGFrZSBhIHNpbmdsZVxuICAgIGFyZ3VtZW50IHRoYXQgaXMgYW4gb2JqZWN0L2RhdGFjbGFzcyBvZiBmaWVsZHMgdGhhdCBjYW4gYmUgYWRkZWQgdG8gYXMgbmVlZGVkLlxuLSBgQHdvcmtmbG93LnNpZ25hbGAgLSBEZWZpbmVzIGEgbWV0aG9kIGFzIGEgc2lnbmFsXG4gIC0gQ2FuIGJlIGRlZmluZWQgb24gYW4gYGFzeW5jYCBvciBub24tYGFzeW5jYCBmdW5jdGlvbiBhdCBhbnkgaGllcmFyY2h5IGRlcHRoLCBidXQgaWYgZGVjb3JhdGVkIG1ldGhvZCBpcyBvdmVycmlkZGVuLFxuICAgIHRoZSBvdmVycmlkZSBtdXN0IGFsc28gYmUgZGVjb3JhdGVkXG4gIC0gVGhlIG1ldGhvZCdzIGFyZ3VtZW50cyBhcmUgdGhlIHNpZ25hbCdzIGFyZ3VtZW50c1xuICAtIENhbiBoYXZlIGEgYG5hbWVgIHBhcmFtIHRvIGN1c3RvbWl6ZSB0aGUgc2lnbmFsIG5hbWUsIG90aGVyd2lzZSBpdCBkZWZhdWx0cyB0byB0aGUgdW5xdWFsaWZpZWQgbWV0aG9kIG5hbWVcbiAgLSBDYW4gaGF2ZSBgZHluYW1pYz1UcnVlYCB3aGljaCBtZWFucyBhbGwgb3RoZXJ3aXNlIHVuaGFuZGxlZCBzaWduYWxzIGZhbGwgdGhyb3VnaCB0byB0aGlzLiBJZiBwcmVzZW50LCBjYW5ub3QgaGF2ZVxuICAgIGBuYW1lYCBhcmd1bWVudCwgYW5kIG1ldGhvZCBwYXJhbWV0ZXJzIG11c3QgYmUgYHNlbGZgLCBhIHN0cmluZyBzaWduYWwgbmFtZSwgYW5kIGEgYCphcmdzYCB2YXJhcmdzIHBhcmFtLlxuICAtIE5vbi1keW5hbWljIG1ldGhvZCBjYW4gb25seSBoYXZlIHBvc2l0aW9uYWwgYXJndW1lbnRzLiBCZXN0IHByYWN0aWNlIGlzIHRvIG9ubHkgdGFrZSBhIHNpbmdsZSBhcmd1bWVudCB0aGF0IGlzIGFuXG4gICAgb2JqZWN0L2RhdGFjbGFzcyBvZiBmaWVsZHMgdGhhdCBjYW4gYmUgYWRkZWQgdG8gYXMgbmVlZGVkLlxuICAtIFJldHVybiB2YWx1ZSBpcyBpZ25vcmVkXG4tIGBAd29ya2Zsb3cucXVlcnlgIC0gRGVmaW5lcyBhIG1ldGhvZCBhcyBhIHF1ZXJ5XG4gIC0gQWxsIHRoZSBzYW1lIGNvbnN0cmFpbnRzIGFzIGBAd29ya2Zsb3cuc2lnbmFsYCBidXQgc2hvdWxkIHJldHVybiBhIHZhbHVlXG4gIC0gVGVtcG9yYWwgcXVlcmllcyBzaG91bGQgbmV2ZXIgbXV0YXRlIGFueXRoaW5nIGluIHRoZSB3b3JrZmxvd1xuXG4jIyMjIFJ1bm5pbmdcblxuVG8gc3RhcnQgYSBsb2NhbGx5LWRlZmluZWQgd29ya2Zsb3cgZnJvbSBhIGNsaWVudCwgeW91IGNhbiBzaW1wbHkgcmVmZXJlbmNlIGl0cyBtZXRob2QgbGlrZSBzbzpcblxuYGBgcHl0aG9uXG5mcm9tIHRlbXBvcmFsaW8uY2xpZW50IGltcG9ydCBDbGllbnRcbmZyb20gbXlfd29ya2Zsb3dfcGFja2FnZSBpbXBvcnQgR3JlZXRpbmdXb3JrZmxvd1xuXG5hc3luYyBkZWYgY3JlYXRlX2dyZWV0aW5nKGNsaWVudDogQ2xpZW50KSAtPiBzdHI6XG4gICAgIyBTdGFydCB0aGUgd29ya2Zsb3dcbiAgICBoYW5kbGUgPSBhd2FpdCBjbGllbnQuc3RhcnRfd29ya2Zsb3coR3JlZXRpbmdXb3JrZmxvdy5ydW4sIFwibXkgbmFtZVwiLCBpZD1cIm15LXdvcmtmbG93LWlkXCIsIHRhc2tfcXVldWU9XCJteS10YXNrLXF1ZXVlXCIpXG4gICAgIyBDaGFuZ2UgdGhlIHNhbHV0YXRpb25cbiAgICBhd2FpdCBoYW5kbGUuc2lnbmFsKEdyZWV0aW5nV29ya2Zsb3cudXBkYXRlX3NhbHV0YXRpb24sIFwiQWxvaGFcIilcbiAgICAjIFRlbGwgaXQgdG8gY29tcGxldGVcbiAgICBhd2FpdCBoYW5kbGUuc2lnbmFsKEdyZWV0aW5nV29ya2Zsb3cuY29tcGxldGVfd2l0aF9ncmVldGluZylcbiAgICAjIFdhaXQgYW5kIHJldHVybiByZXN1bHRcbiAgICByZXR1cm4gYXdhaXQgaGFuZGxlLnJlc3VsdCgpXG5gYGBcblxuU29tZSB0aGluZ3MgdG8gbm90ZSBhYm91dCB0aGUgYWJvdmUgY29kZTpcblxuLSBUaGlzIHVzZXMgdGhlIGBHcmVldGluZ1dvcmtmbG93YCBmcm9tIHRoZSBwcmV2aW91cyBzZWN0aW9uXG4tIFRoZSByZXN1bHQgb2YgY2FsbGluZyB0aGlzIGZ1bmN0aW9uIGlzIGBcIkFsb2hhLCBteSBuYW1lIVwiYFxuLSBgaWRgIGFuZCBgdGFza19xdWV1ZWAgYXJlIHJlcXVpcmVkIGZvciBydW5uaW5nIGEgd29ya2Zsb3dcbi0gYGNsaWVudC5zdGFydF93b3JrZmxvd2AgaXMgdHlwZWQsIHNvIE15UHkgd291bGQgZmFpbCBpZiBgXCJteSBuYW1lXCJgIHdlcmUgc29tZXRoaW5nIGJlc2lkZXMgYSBzdHJpbmdcbi0gYGhhbmRsZS5zaWduYWxgIGlzIHR5cGVkLCBzbyBNeVB5IHdvdWxkIGZhaWwgaWYgYFwiQWxvaGFcImAgd2VyZSBzb21ldGhpbmcgYmVzaWRlcyBhIHN0cmluZyBvciBpZiB3ZSBwcm92aWRlZCBhXG4gIHBhcmFtZXRlciB0byB0aGUgcGFyYW1ldGVybGVzcyBgY29tcGxldGVfd2l0aF9ncmVldGluZ2Bcbi0gYGhhbmRsZS5yZXN1bHRgIGlzIHR5cGVkIHRvIHRoZSB3b3JrZmxvdyBpdHNlbGYsIHNvIE15UHkgd291bGQgZmFpbCBpZiB3ZSBzYWlkIHRoaXMgYGNyZWF0ZV9ncmVldGluZ2AgcmV0dXJuZWRcbiAgc29tZXRoaW5nIGJlc2lkZXMgYSBzdHJpbmdcblxuIyMjIyBJbnZva2luZyBBY3Rpdml0aWVzXG5cbi0gQWN0aXZpdGllcyBhcmUgc3RhcnRlZCB3aXRoIG5vbi1hc3luYyBgd29ya2Zsb3cuc3RhcnRfYWN0aXZpdHkoKWAgd2hpY2ggYWNjZXB0cyBlaXRoZXIgYW4gYWN0aXZpdHkgZnVuY3Rpb24gcmVmZXJlbmNlXG4gIG9yIGEgc3RyaW5nIG5hbWUuXG4tIEEgc2luZ2xlIGFyZ3VtZW50IHRvIHRoZSBhY3Rpdml0eSBpcyBwb3NpdGlvbmFsLiBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIHR5cGUtc2FmZSBmb3JtIG9mXG4gIHN0YXJ0L2V4ZWN1dGUgYWN0aXZpdHkgYW5kIG11c3QgYmUgc3VwcGxpZWQgdmlhIHRoZSBgYXJnc2Aga2V5d29yZCBhcmd1bWVudC5cbi0gQWN0aXZpdHkgb3B0aW9ucyBhcmUgc2V0IGFzIGtleXdvcmQgYXJndW1lbnRzIGFmdGVyIHRoZSBhY3Rpdml0eSBhcmd1bWVudHMuIEF0IGxlYXN0IG9uZSBvZiBgc3RhcnRfdG9fY2xvc2VfdGltZW91dGBcbiAgb3IgYHNjaGVkdWxlX3RvX2Nsb3NlX3RpbWVvdXRgIG11c3QgYmUgcHJvdmlkZWQuXG4tIFRoZSByZXN1bHQgaXMgYW4gYWN0aXZpdHkgaGFuZGxlIHdoaWNoIGlzIGFuIGBhc3luY2lvLlRhc2tgIGFuZCBzdXBwb3J0cyBiYXNpYyB0YXNrIGZlYXR1cmVzXG4tIEFuIGFzeW5jIGB3b3JrZmxvdy5leGVjdXRlX2FjdGl2aXR5KClgIGhlbHBlciBpcyBwcm92aWRlZCB3aGljaCB0YWtlcyB0aGUgc2FtZSBhcmd1bWVudHMgYXNcbiAgYHdvcmtmbG93LnN0YXJ0X2FjdGl2aXR5KClgIGFuZCBgYXdhaXRgcyBvbiB0aGUgcmVzdWx0LiBUaGlzIHNob3VsZCBiZSB1c2VkIGluIG1vc3QgY2FzZXMgdW5sZXNzIGFkdmFuY2VkIHRhc2tcbiAgY2FwYWJpbGl0aWVzIGFyZSBuZWVkZWQuXG4tIExvY2FsIGFjdGl2aXRpZXMgd29yayB2ZXJ5IHNpbWlsYXJseSBleGNlcHQgdGhlIGZ1bmN0aW9ucyBhcmUgYHdvcmtmbG93LnN0YXJ0X2xvY2FsX2FjdGl2aXR5KClgIGFuZFxuICBgd29ya2Zsb3cuZXhlY3V0ZV9sb2NhbF9hY3Rpdml0eSgpYFxuLSBBY3Rpdml0aWVzIGNhbiBiZSBtZXRob2RzIG9mIGEgY2xhc3MuIEludm9rZXJzIHNob3VsZCB1c2UgYHdvcmtmbG93LnN0YXJ0X2FjdGl2aXR5X21ldGhvZCgpYCxcbiAgYHdvcmtmbG93LmV4ZWN1dGVfYWN0aXZpdHlfbWV0aG9kKClgLCBgd29ya2Zsb3cuc3RhcnRfbG9jYWxfYWN0aXZpdHlfbWV0aG9kKClgLCBhbmRcbiAgYHdvcmtmbG93LmV4ZWN1dGVfbG9jYWxfYWN0aXZpdHlfbWV0aG9kKClgIGluc3RlYWQuXG4tIEFjdGl2aXRpZXMgY2FuIGNhbGxhYmxlIGNsYXNzZXMgKGkuZS4gdGhhdCBkZWZpbmUgYF9fY2FsbF9fYCkuIEludm9rZXJzIHNob3VsZCB1c2UgYHdvcmtmbG93LnN0YXJ0X2FjdGl2aXR5X2NsYXNzKClgLFxuICBgd29ya2Zsb3cuZXhlY3V0ZV9hY3Rpdml0eV9jbGFzcygpYCwgYHdvcmtmbG93LnN0YXJ0X2xvY2FsX2FjdGl2aXR5X2NsYXNzKClgLCBhbmRcbiAgYHdvcmtmbG93LmV4ZWN1dGVfbG9jYWxfYWN0aXZpdHlfY2xhc3MoKWAgaW5zdGVhZC5cblxuIyMjIyBJbnZva2luZyBDaGlsZCBXb3JrZmxvd3NcblxuLSBDaGlsZCB3b3JrZmxvd3MgYXJlIHN0YXJ0ZWQgd2l0aCBhc3luYyBgd29ya2Zsb3cuc3RhcnRfY2hpbGRfd29ya2Zsb3coKWAgd2hpY2ggYWNjZXB0cyBlaXRoZXIgYSB3b3JrZmxvdyBydW4gbWV0aG9kXG4gIHJlZmVyZW5jZSBvciBhIHN0cmluZyBuYW1lLiBUaGUgYXJndW1lbnRzIHRvIHRoZSB3b3JrZmxvdyBhcmUgcG9zaXRpb25hbC5cbi0gQSBzaW5nbGUgYXJndW1lbnQgdG8gdGhlIGNoaWxkIHdvcmtmbG93IGlzIHBvc2l0aW9uYWwuIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgbm90IHN1cHBvcnRlZCBpbiB0aGUgdHlwZS1zYWZlIGZvcm0gb2ZcbiAgc3RhcnQvZXhlY3V0ZSBjaGlsZCB3b3JrZmxvdyBhbmQgbXVzdCBiZSBzdXBwbGllZCB2aWEgdGhlIGBhcmdzYCBrZXl3b3JkIGFyZ3VtZW50LlxuLSBDaGlsZCB3b3JrZmxvdyBvcHRpb25zIGFyZSBzZXQgYXMga2V5d29yZCBhcmd1bWVudHMgYWZ0ZXIgdGhlIGFyZ3VtZW50cy4gQXQgbGVhc3QgYGlkYCBtdXN0IGJlIHByb3ZpZGVkLlxuLSBUaGUgYGF3YWl0YCBvZiB0aGUgc3RhcnQgZG9lcyBub3QgY29tcGxldGUgdW50aWwgdGhlIHN0YXJ0IGhhcyBiZWVuIGFjY2VwdGVkIGJ5IHRoZSBzZXJ2ZXJcbi0gVGhlIHJlc3VsdCBpcyBhIGNoaWxkIHdvcmtmbG93IGhhbmRsZSB3aGljaCBpcyBhbiBgYXN5bmNpby5UYXNrYCBhbmQgc3VwcG9ydHMgYmFzaWMgdGFzayBmZWF0dXJlcy4gVGhlIGhhbmRsZSBhbHNvIGhhc1xuICBzb21lIGNoaWxkIGluZm8gYW5kIHN1cHBvcnRzIHNpZ25hbGxpbmcgdGhlIGNoaWxkIHdvcmtmbG93XG4tIEFuIGFzeW5jIGB3b3JrZmxvdy5leGVjdXRlX2NoaWxkX3dvcmtmbG93KClgIGhlbHBlciBpcyBwcm92aWRlZCB3aGljaCB0YWtlcyB0aGUgc2FtZSBhcmd1bWVudHMgYXNcbiAgYHdvcmtmbG93LnN0YXJ0X2NoaWxkX3dvcmtmbG93KClgIGFuZCBgYXdhaXRgcyBvbiB0aGUgcmVzdWx0LiBUaGlzIHNob3VsZCBiZSB1c2VkIGluIG1vc3QgY2FzZXMgdW5sZXNzIGFkdmFuY2VkIHRhc2tcbiAgY2FwYWJpbGl0aWVzIGFyZSBuZWVkZWQuXG5cbiMjIyMgVGltZXJzXG5cbi0gQSB0aW1lciBpcyByZXByZXNlbnRlZCBieSBub3JtYWwgYGFzeW5jaW8uc2xlZXAoKWBcbi0gVGltZXJzIGFyZSBhbHNvIGltcGxpY2l0bHkgc3RhcnRlZCBvbiBhbnkgYGFzeW5jaW9gIGNhbGxzIHdpdGggdGltZW91dHMgKGUuZy4gYGFzeW5jaW8ud2FpdF9mb3JgKVxuLSBUaW1lcnMgYXJlIFRlbXBvcmFsIHNlcnZlciB0aW1lcnMsIG5vdCBsb2NhbCBvbmVzLCBzbyBzdWItc2Vjb25kIHJlc29sdXRpb24gcmFyZWx5IGhhcyB2YWx1ZVxuXG4jIyMjIENvbmRpdGlvbnNcblxuLSBgd29ya2Zsb3cud2FpdF9jb25kaXRpb25gIGlzIGFuIGFzeW5jIGZ1bmN0aW9uIHRoYXQgZG9lc24ndCByZXR1cm4gdW50aWwgYSBwcm92aWRlZCBjYWxsYmFjayByZXR1cm5zIHRydWVcbi0gQSBgdGltZW91dGAgY2FuIG9wdGlvbmFsbHkgYmUgcHJvdmlkZWQgd2hpY2ggd2lsbCB0aHJvdyBhIGBhc3luY2lvLlRpbWVvdXRFcnJvcmAgaWYgcmVhY2hlZCAoaW50ZXJuYWxseSBiYWNrZWQgYnlcbiAgYGFzeW5jaW8ud2FpdF9mb3JgIHdoaWNoIHVzZXMgYSB0aW1lcilcblxuIyMjIyBBc3luY2lvIGFuZCBDYW5jZWxsYXRpb25cblxuV29ya2Zsb3dzIGFyZSBiYWNrZWQgYnkgYSBjdXN0b20gW2FzeW5jaW9dKGh0dHBzOi8vZG9jcy5weXRob24ub3JnLzMvbGlicmFyeS9hc3luY2lvLmh0bWwpIGV2ZW50IGxvb3AuIFRoaXMgbWVhbnMgbWFueVxub2YgdGhlIGNvbW1vbiBgYXN5bmNpb2AgY2FsbHMgd29yayBhcyBub3JtYWwuIFNvbWUgYXN5bmNpbyBmZWF0dXJlcyBhcmUgZGlzYWJsZWQgc3VjaCBhczpcblxuLSBUaHJlYWQgcmVsYXRlZCBjYWxscyBzdWNoIGFzIGB0b190aHJlYWQoKWAsIGBydW5fY29yb3V0aW5lX3RocmVhZHNhZmUoKWAsIGBsb29wLnJ1bl9pbl9leGVjdXRvcigpYCwgZXRjXG4tIENhbGxzIHRoYXQgYWx0ZXIgdGhlIGV2ZW50IGxvb3Agc3VjaCBhcyBgbG9vcC5jbG9zZSgpYCwgYGxvb3Auc3RvcCgpYCwgYGxvb3AucnVuX2ZvcmV2ZXIoKWAsXG4gIGBsb29wLnNldF90YXNrX2ZhY3RvcnkoKWAsIGV0Y1xuLSBDYWxscyB0aGF0IHVzZSBhIHNwZWNpZmljIHRpbWUgc3VjaCBhcyBgbG9vcC5jYWxsX2F0KClgXG4tIENhbGxzIHRoYXQgdXNlIGFueXRoaW5nIGV4dGVybmFsIHN1Y2ggYXMgbmV0d29ya2luZywgc3VicHJvY2Vzc2VzLCBkaXNrIElPLCBldGNcblxuQ2FuY2VsbGF0aW9uIGlzIGRvbmUgdGhlIHNhbWUgd2F5IGFzIGBhc3luY2lvYC4gU3BlY2lmaWNhbGx5LCBhIHRhc2sgY2FuIGJlIHJlcXVlc3RlZCB0byBiZSBjYW5jZWxsZWQgYnV0IGRvZXMgbm90XG5uZWNlc3NhcmlseSBoYXZlIHRvIHJlc3BlY3QgdGhhdCBjYW5jZWxsYXRpb24gaW1tZWRpYXRlbHkuIFRoaXMgYWxzbyBtZWFucyB0aGF0IGBhc3luY2lvLnNoaWVsZCgpYCBjYW4gYmUgdXNlZCB0b1xucHJvdGVjdCBhZ2FpbnN0IGNhbmNlbGxhdGlvbi4gVGhlIGZvbGxvd2luZyB0YXNrcywgd2hlbiBjYW5jZWxsZWQsIHBlcmZvcm0gYSBUZW1wb3JhbCBjYW5jZWxsYXRpb246XG5cbi0gQWN0aXZpdGllcyAtIHdoZW4gdGhlIHRhc2sgZXhlY3V0aW5nIGFuIGFjdGl2aXR5IGlzIGNhbmNlbGxlZCwgYSBjYW5jZWxsYXRpb24gcmVxdWVzdCBpcyBzZW50IHRvIHRoZSBhY3Rpdml0eVxuLSBDaGlsZCB3b3JrZmxvd3MgLSB3aGVuIHRoZSB0YXNrIHN0YXJ0aW5nIG9yIGV4ZWN1dGluZyBhIGNoaWxkIHdvcmtmbG93IGlzIGNhbmNlbGxlZCwgYSBjYW5jZWxsYXRpb24gcmVxdWVzdCBpcyBzZW50IHRvXG4gIGNhbmNlbCB0aGUgY2hpbGQgd29ya2Zsb3dcbi0gVGltZXJzIC0gd2hlbiB0aGUgdGFzayBleGVjdXRpbmcgYSB0aW1lciBpcyBjYW5jZWxsZWQgKHdoZXRoZXIgc3RhcnRlZCB2aWEgc2xlZXAgb3IgdGltZW91dCksIHRoZSB0aW1lciBpcyBjYW5jZWxsZWRcblxuV2hlbiB0aGUgd29ya2Zsb3cgaXRzZWxmIGlzIHJlcXVlc3RlZCB0byBjYW5jZWwsIGBUYXNrLmNhbmNlbGAgaXMgY2FsbGVkIG9uIHRoZSBtYWluIHdvcmtmbG93IHRhc2suIFRoZXJlZm9yZSxcbmBhc3luY2lvLkNhbmNlbGxlZEVycm9yYCBjYW4gYmUgY2F1Z2h0IGluIG9yZGVyIHRvIGhhbmRsZSB0aGUgY2FuY2VsIGdyYWNlZnVsbHkuXG5cbldvcmtmbG93cyBmb2xsb3cgYGFzeW5jaW9gIGNhbmNlbGxhdGlvbiBydWxlcyBleGFjdGx5IHdoaWNoIGNhbiBjYXVzZSBjb25mdXNpb24gYW1vbmcgUHl0aG9uIGRldmVsb3BlcnMuIENhbmNlbGxpbmcgYVxudGFzayBkb2Vzbid0IGFsd2F5cyBjYW5jZWwgdGhlIHRoaW5nIGl0IGNyZWF0ZWQuIEZvciBleGFtcGxlLCBnaXZlblxuYHRhc2sgPSBhc3luY2lvLmNyZWF0ZV90YXNrKHdvcmtmbG93LnN0YXJ0X2NoaWxkX3dvcmtmbG93KC4uLmAsIGNhbGxpbmcgYHRhc2suY2FuY2VsYCBkb2VzIG5vdCBjYW5jZWwgdGhlIGNoaWxkXG53b3JrZmxvdywgaXQgb25seSBjYW5jZWxzIHRoZSBzdGFydGluZyBvZiBpdCwgd2hpY2ggaGFzIG5vIGVmZmVjdCBpZiBpdCBoYXMgYWxyZWFkeSBzdGFydGVkLiBIb3dldmVyLCBjYW5jZWxsaW5nIHRoZVxucmVzdWx0IG9mIGBoYW5kbGUgPSBhd2FpdCB3b3JrZmxvdy5zdGFydF9jaGlsZF93b3JrZmxvdyguLi5gIG9yXG5gdGFzayA9IGFzeW5jaW8uY3JlYXRlX3Rhc2sod29ya2Zsb3cuZXhlY3V0ZV9jaGlsZF93b3JrZmxvdyguLi5gIF9kb2VzXyBjYW5jZWwgdGhlIGNoaWxkIHdvcmtmbG93LlxuXG5BbHNvLCBkdWUgdG8gVGVtcG9yYWwgcnVsZXMsIGEgY2FuY2VsbGF0aW9uIHJlcXVlc3QgaXMgYSBzdGF0ZSBub3QgYW4gZXZlbnQuIFRoZXJlZm9yZSwgcmVwZWF0ZWQgY2FuY2VsbGF0aW9uIHJlcXVlc3RzXG5hcmUgbm90IGRlbGl2ZXJlZCwgb25seSB0aGUgZmlyc3QuIElmIHRoZSB3b3JrZmxvdyBjaG9vc2VzIHN3YWxsb3cgYSBjYW5jZWxsYXRpb24sIGl0IGNhbm5vdCBiZSByZXF1ZXN0ZWQgYWdhaW4uXG5cbiMjIyMgV29ya2Zsb3cgVXRpbGl0aWVzXG5cbldoaWxlIHJ1bm5pbmcgaW4gYSB3b3JrZmxvdywgaW4gYWRkaXRpb24gdG8gZmVhdHVyZXMgZG9jdW1lbnRlZCBlbHNld2hlcmUsIHRoZSBmb2xsb3dpbmcgaXRlbXMgYXJlIGF2YWlsYWJsZSBmcm9tIHRoZVxuYHRlbXBvcmFsaW8ud29ya2Zsb3dgIHBhY2thZ2U6XG5cbi0gYGNvbnRpbnVlX2FzX25ldygpYCAtIEFzeW5jIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIHdvcmtmbG93IGltbWVkaWF0ZWx5IGFuZCBjb250aW51ZSBhcyBuZXdcbi0gYGluZm8oKWAgLSBSZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHdvcmtmbG93XG4tIGBsb2dnZXJgIC0gQSBsb2dnZXIgZm9yIHVzZSBpbiBhIHdvcmtmbG93IChwcm9wZXJseSBza2lwcyBsb2dnaW5nIG9uIHJlcGxheSlcbi0gYG5vdygpYCAtIFJldHVybnMgdGhlIFwiY3VycmVudCB0aW1lXCIgZnJvbSB0aGUgd29ya2Zsb3cncyBwZXJzcGVjdGl2ZVxuXG4jIyMjIEV4Y2VwdGlvbnNcblxuLSBXb3JrZmxvd3MgY2FuIHJhaXNlIGV4Y2VwdGlvbnMgdG8gZmFpbCB0aGUgd29ya2Zsb3dcbi0gVXNpbmcgYHRlbXBvcmFsaW8uZXhjZXB0aW9ucy5BcHBsaWNhdGlvbkVycm9yYCwgZXhjZXB0aW9ucyBjYW4gYmUgbWFya2VkIGFzIG5vbi1yZXRyeWFibGUgb3IgaW5jbHVkZSBkZXRhaWxzXG5cbiMjIyMgRXh0ZXJuYWwgV29ya2Zsb3dzXG5cbi0gYHdvcmtmbG93LmdldF9leHRlcm5hbF93b3JrZmxvd19oYW5kbGUoKWAgaW5zaWRlIGEgd29ya2Zsb3cgcmV0dXJucyBhIGhhbmRsZSB0byBpbnRlcmFjdCB3aXRoIGFub3RoZXIgd29ya2Zsb3dcbi0gYHdvcmtmbG93LmdldF9leHRlcm5hbF93b3JrZmxvd19oYW5kbGVfZm9yKClgIGNhbiBiZSB1c2VkIGluc3RlYWQgZm9yIGEgdHlwZSBzYWZlIGhhbmRsZVxuLSBgYXdhaXQgaGFuZGxlLnNpZ25hbCgpYCBjYW4gYmUgY2FsbGVkIG9uIHRoZSBoYW5kbGUgdG8gc2lnbmFsIHRoZSBleHRlcm5hbCB3b3JrZmxvd1xuLSBgYXdhaXQgaGFuZGxlLmNhbmNlbCgpYCBjYW4gYmUgY2FsbGVkIG9uIHRoZSBoYW5kbGUgdG8gc2VuZCBhIGNhbmNlbCB0byB0aGUgZXh0ZXJuYWwgd29ya2Zsb3dcblxuIyMjIyBUZXN0aW5nXG5cbldvcmtmbG93IHRlc3RpbmcgY2FuIGJlIGRvbmUgaW4gYW4gaW50ZWdyYXRpb24tdGVzdCBmYXNoaW9uIGFnYWluc3QgYSByZWFsIHNlcnZlciwgaG93ZXZlciBpdCBpcyBoYXJkIHRvIHNpbXVsYXRlXG50aW1lb3V0cyBhbmQgb3RoZXIgbG9uZyB0aW1lLWJhc2VkIGNvZGUuIFVzaW5nIHRoZSB0aW1lLXNraXBwaW5nIHdvcmtmbG93IHRlc3QgZW52aXJvbm1lbnQgY2FuIGhlbHAgdGhlcmUuXG5cblRoZSB0aW1lLXNraXBwaW5nIGB0ZW1wb3JhbGlvLnRlc3RpbmcuV29ya2Zsb3dFbnZpcm9ubWVudGAgY2FuIGJlIGNyZWF0ZWQgdmlhIHRoZSBzdGF0aWMgYXN5bmMgYHN0YXJ0X3RpbWVfc2tpcHBpbmcoKWAuXG5UaGlzIGludGVybmFsbHkgZG93bmxvYWRzIHRoZSBUZW1wb3JhbCB0aW1lLXNraXBwaW5nIHRlc3Qgc2VydmVyIHRvIGEgdGVtcG9yYXJ5IGRpcmVjdG9yeSBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QsXG50aGVuIHN0YXJ0cyB0aGUgdGVzdCBzZXJ2ZXIgd2hpY2ggaGFzIHNwZWNpYWwgQVBJcyBmb3Igc2tpcHBpbmcgdGltZS5cblxuIyMjIyMgQXV0b21hdGljIFRpbWUgU2tpcHBpbmdcblxuQW55dGltZSBhIHdvcmtmbG93IHJlc3VsdCBpcyB3YWl0ZWQgb24sIHRoZSB0aW1lLXNraXBwaW5nIHNlcnZlciBhdXRvbWF0aWNhbGx5IGFkdmFuY2VzIHRvIHRoZSBuZXh0IGV2ZW50IGl0IGNhbi4gVG9cbm1hbnVhbGx5IGFkdmFuY2UgdGltZSBiZWZvcmUgd2FpdGluZyBvbiB0aGUgcmVzdWx0IG9mIGEgd29ya2Zsb3csIHRoZSBgV29ya2Zsb3dFbnZpcm9ubWVudC5zbGVlcGAgbWV0aG9kIGNhbiBiZSB1c2VkLlxuXG5IZXJlJ3MgYSBzaW1wbGUgZXhhbXBsZSBvZiBhIHdvcmtmbG93IHRoYXQgc2xlZXBzIGZvciAyNCBob3VyczpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYXN5bmNpb1xuZnJvbSB0ZW1wb3JhbGlvIGltcG9ydCB3b3JrZmxvd1xuXG5Ad29ya2Zsb3cuZGVmblxuY2xhc3MgV2FpdEFEYXlXb3JrZmxvdzpcbiAgICBAd29ya2Zsb3cucnVuXG4gICAgYXN5bmMgZGVmIHJ1bihzZWxmKSAtPiBzdHI6XG4gICAgICAgIGF3YWl0IGFzeW5jaW8uc2xlZXAoMjQgKiA2MCAqIDYwKVxuICAgICAgICByZXR1cm4gXCJhbGwgZG9uZVwiXG5gYGBcblxuQW4gaW50ZWdyYXRpb24gdGVzdCBvZiB0aGlzIHdvcmtmbG93IHdvdWxkIGJlIHdheSB0b28gc2xvdy4gSG93ZXZlciB0aGUgdGltZS1za2lwcGluZyBzZXJ2ZXIgYXV0b21hdGljYWxseSBza2lwcyB0byB0aGVcbm5leHQgZXZlbnQgd2hlbiB3ZSB3YWl0IG9uIHRoZSByZXN1bHQuIEhlcmUncyBhIHRlc3QgZm9yIHRoYXQgd29ya2Zsb3c6XG5cbmBgYHB5dGhvblxuZnJvbSB0ZW1wb3JhbGlvLnRlc3RpbmcgaW1wb3J0IFdvcmtmbG93RW52aXJvbm1lbnRcbmZyb20gdGVtcG9yYWxpby53b3JrZXIgaW1wb3J0IFdvcmtlclxuXG5hc3luYyBkZWYgdGVzdF93YWl0X2FfZGF5X3dvcmtmbG93KCk6XG4gICAgYXN5bmMgd2l0aCBhd2FpdCBXb3JrZmxvd0Vudmlyb25tZW50LnN0YXJ0X3RpbWVfc2tpcHBpbmcoKSBhcyBlbnY6XG4gICAgICAgIGFzeW5jIHdpdGggV29ya2VyKGVudi5jbGllbnQsIHRhc2tfcXVldWU9XCJ0cTFcIiwgd29ya2Zsb3dzPVtXYWl0QURheVdvcmtmbG93XSk6XG4gICAgICAgICAgICBhc3NlcnQgXCJhbGwgZG9uZVwiID09IGF3YWl0IGVudi5jbGllbnQuZXhlY3V0ZV93b3JrZmxvdyhXYWl0QURheVdvcmtmbG93LnJ1biwgaWQ9XCJ3ZjFcIiwgdGFza19xdWV1ZT1cInRxMVwiKVxuYGBgXG5cblRoYXQgdGVzdCB3aWxsIHJ1biBhbG1vc3QgaW5zdGFudGx5LiBUaGlzIGlzIGJlY2F1c2UgYnkgY2FsbGluZyBgZXhlY3V0ZV93b3JrZmxvd2Agb24gb3VyIGNsaWVudCwgd2UgaGF2ZSBhc2tlZCB0aGVcbmVudmlyb25tZW50IHRvIGF1dG9tYXRpY2FsbHkgc2tpcCB0aW1lIGFzIG11Y2ggYXMgaXQgY2FuIChiYXNpY2FsbHkgdW50aWwgdGhlIGVuZCBvZiB0aGUgd29ya2Zsb3cgb3IgdW50aWwgYW4gYWN0aXZpdHlcbmlzIHJ1bikuXG5cblRvIGRpc2FibGUgYXV0b21hdGljIHRpbWUtc2tpcHBpbmcgd2hpbGUgd2FpdGluZyBmb3IgYSB3b3JrZmxvdyByZXN1bHQsIHJ1biBjb2RlIGluc2lkZSBhXG5gd2l0aCBlbnYuYXV0b190aW1lX3NraXBwaW5nX2Rpc2FibGVkKCk6YCBibG9jay5cblxuIyMjIyMgTWFudWFsIFRpbWUgU2tpcHBpbmdcblxuVW50aWwgYSB3b3JrZmxvdyBpcyB3YWl0ZWQgb24sIGFsbCB0aW1lIHNraXBwaW5nIGluIHRoZSB0aW1lLXNraXBwaW5nIGVudmlyb25tZW50IGlzIGRvbmUgbWFudWFsbHkgdmlhXG5gV29ya2Zsb3dFbnZpcm9ubWVudC5zbGVlcGAuXG5cbkhlcmUncyB3b3JrZmxvdyB0aGF0IHdhaXRzIGZvciBhIHNpZ25hbCBvciB0aW1lcyBvdXQ6XG5cbmBgYHB5dGhvblxuaW1wb3J0IGFzeW5jaW9cbmZyb20gdGVtcG9yYWxpbyBpbXBvcnQgd29ya2Zsb3dcblxuQHdvcmtmbG93LmRlZm5cbmNsYXNzIFNpZ25hbFdvcmtmbG93OlxuICAgIGRlZiBfX2luaXRfXyhzZWxmKSAtPiBOb25lOlxuICAgICAgICBzZWxmLnNpZ25hbF9yZWNlaXZlZCA9IEZhbHNlXG5cbiAgICBAd29ya2Zsb3cucnVuXG4gICAgYXN5bmMgZGVmIHJ1bihzZWxmKSAtPiBzdHI6XG4gICAgICAgICMgV2FpdCBmb3Igc2lnbmFsIG9yIHRpbWVvdXQgaW4gNDUgc2Vjb25kc1xuICAgICAgICB0cnk6XG4gICAgICAgICAgICBhd2FpdCB3b3JrZmxvdy53YWl0X2NvbmRpdGlvbihsYW1iZGE6IHNlbGYuc2lnbmFsX3JlY2VpdmVkLCB0aW1lb3V0PTQ1KVxuICAgICAgICAgICAgcmV0dXJuIFwiZ290IHNpZ25hbFwiXG4gICAgICAgIGV4Y2VwdCBhc3luY2lvLlRpbWVvdXRFcnJvcjpcbiAgICAgICAgICAgIHJldHVybiBcImdvdCB0aW1lb3V0XCJcblxuICAgIEB3b3JrZmxvdy5zaWduYWxcbiAgICBkZWYgc29tZV9zaWduYWwoc2VsZikgLT4gTm9uZTpcbiAgICAgICAgc2VsZi5zaWduYWxfcmVjZWl2ZWQgPSBUcnVlXG5gYGBcblxuVG8gdGVzdCBhIG5vcm1hbCBzaWduYWwsIHlvdSBtaWdodDpcblxuYGBgcHl0aG9uXG5mcm9tIHRlbXBvcmFsaW8udGVzdGluZyBpbXBvcnQgV29ya2Zsb3dFbnZpcm9ubWVudFxuZnJvbSB0ZW1wb3JhbGlvLndvcmtlciBpbXBvcnQgV29ya2VyXG5cbmFzeW5jIGRlZiB0ZXN0X3NpZ25hbF93b3JrZmxvdygpOlxuICAgIGFzeW5jIHdpdGggYXdhaXQgV29ya2Zsb3dFbnZpcm9ubWVudC5zdGFydF90aW1lX3NraXBwaW5nKCkgYXMgZW52OlxuICAgICAgICBhc3luYyB3aXRoIFdvcmtlcihlbnYuY2xpZW50LCB0YXNrX3F1ZXVlPVwidHExXCIsIHdvcmtmbG93cz1bU2lnbmFsV29ya2Zsb3ddKTpcbiAgICAgICAgICAgICMgU3RhcnQgd29ya2Zsb3csIHNlbmQgc2lnbmFsLCBjaGVjayByZXN1bHRcbiAgICAgICAgICAgIGhhbmRsZSA9IGF3YWl0IGVudi5jbGllbnQuc3RhcnRfd29ya2Zsb3coU2lnbmFsV29ya2Zsb3cucnVuLCBpZD1cIndmMVwiLCB0YXNrX3F1ZXVlPVwidHExXCIpXG4gICAgICAgICAgICBhd2FpdCBoYW5kbGUuc2lnbmFsKFNpZ25hbFdvcmtmbG93LnNvbWVfc2lnbmFsKVxuICAgICAgICAgICAgYXNzZXJ0IFwiZ290IHNpZ25hbFwiID09IGF3YWl0IGhhbmRsZS5yZXN1bHQoKVxuYGBgXG5cbkJ1dCBob3cgd291bGQgeW91IHRlc3QgdGhlIHRpbWVvdXQgcGFydD8gTGlrZSBzbzpcblxuYGBgcHl0aG9uXG5mcm9tIHRlbXBvcmFsaW8udGVzdGluZyBpbXBvcnQgV29ya2Zsb3dFbnZpcm9ubWVudFxuZnJvbSB0ZW1wb3JhbGlvLndvcmtlciBpbXBvcnQgV29ya2VyXG5cbmFzeW5jIGRlZiB0ZXN0X3NpZ25hbF93b3JrZmxvd190aW1lb3V0KCk6XG4gICAgYXN5bmMgd2l0aCBhd2FpdCBXb3JrZmxvd0Vudmlyb25tZW50LnN0YXJ0X3RpbWVfc2tpcHBpbmcoKSBhcyBlbnY6XG4gICAgICAgIGFzeW5jIHdpdGggV29ya2VyKGVudi5jbGllbnQsIHRhc2tfcXVldWU9XCJ0cTFcIiwgd29ya2Zsb3dzPVtTaWduYWxXb3JrZmxvd10pOlxuICAgICAgICAgICAgIyBTdGFydCB3b3JrZmxvdywgYWR2YW5jZSB0aW1lIHBhc3QgdGltZW91dCwgY2hlY2sgcmVzdWx0XG4gICAgICAgICAgICBoYW5kbGUgPSBhd2FpdCBlbnYuY2xpZW50LnN0YXJ0X3dvcmtmbG93KFNpZ25hbFdvcmtmbG93LnJ1biwgaWQ9XCJ3ZjFcIiwgdGFza19xdWV1ZT1cInRxMVwiKVxuICAgICAgICAgICAgYXdhaXQgZW52LnNsZWVwKDUwKVxuICAgICAgICAgICAgYXNzZXJ0IFwiZ290IHRpbWVvdXRcIiA9PSBhd2FpdCBoYW5kbGUucmVzdWx0KClcbmBgYFxuXG5BbHNvLCB0aGUgY3VycmVudCB0aW1lIG9mIHRoZSB3b3JrZmxvdyBlbnZpcm9ubWVudCBjYW4gYmUgb2J0YWluZWQgdmlhIHRoZSBhc3luYyBgV29ya2Zsb3dFbnZpcm9ubWVudC5nZXRfY3VycmVudF90aW1lYFxubWV0aG9kLlxuXG4jIyMjIyBNb2NraW5nIEFjdGl2aXRpZXNcblxuQWN0aXZpdGllcyBhcmUganVzdCBmdW5jdGlvbnMgZGVjb3JhdGVkIHdpdGggYEBhY3Rpdml0eS5kZWZuYC4gU2ltcGx5IHdyaXRlIGRpZmZlcmVudCBvbmVzIGFuZCBwYXNzIHRob3NlIHRvIHRoZSB3b3JrZXJcbnRvIGhhdmUgZGlmZmVyZW50IGFjdGl2aXRpZXMgY2FsbGVkIGR1cmluZyB0aGUgdGVzdC5cblxuIyMjIEFjdGl2aXRpZXNcblxuIyMjIyBEZWZpbml0aW9uXG5cbkFjdGl2aXRpZXMgYXJlIGRlY29yYXRlZCB3aXRoIGBAYWN0aXZpdHkuZGVmbmAgbGlrZSBzbzpcblxuYGBgcHl0aG9uXG5mcm9tIHRlbXBvcmFsaW8gaW1wb3J0IGFjdGl2aXR5XG5cbkBhY3Rpdml0eS5kZWZuXG5hc3luYyBkZWYgc2F5X2hlbGxvX2FjdGl2aXR5KG5hbWU6IHN0cikgLT4gc3RyOlxuICAgIHJldHVybiBmXCJIZWxsbywge25hbWV9IVwiXG5gYGBcblxuU29tZSB0aGluZ3MgdG8gbm90ZSBhYm91dCBhY3Rpdml0eSBkZWZpbml0aW9uczpcblxuLSBUaGUgYHNheV9oZWxsb19hY3Rpdml0eWAgaXMgYGFzeW5jYCB3aGljaCBpcyB0aGUgcmVjb21tZW5kZWQgYWN0aXZpdHkgdHlwZSAoc2VlIFwiVHlwZXMgb2YgQWN0aXZpdGllc1wiIGJlbG93KVxuLSBBIGN1c3RvbSBuYW1lIGZvciB0aGUgYWN0aXZpdHkgY2FuIGJlIHNldCB3aXRoIGEgZGVjb3JhdG9yIGFyZ3VtZW50LCBlLmcuIGBAYWN0aXZpdHkuZGVmbihuYW1lPVwibXkgYWN0aXZpdHlcIilgXG4tIExvbmcgcnVubmluZyBhY3Rpdml0aWVzIHNob3VsZCByZWd1bGFybHkgaGVhcnRiZWF0IGFuZCBoYW5kbGUgY2FuY2VsbGF0aW9uXG4tIEFjdGl2aXRpZXMgY2FuIG9ubHkgaGF2ZSBwb3NpdGlvbmFsIGFyZ3VtZW50cy4gQmVzdCBwcmFjdGljZSBpcyB0byBvbmx5IHRha2UgYSBzaW5nbGUgYXJndW1lbnQgdGhhdCBpcyBhblxuICBvYmplY3QvZGF0YWNsYXNzIG9mIGZpZWxkcyB0aGF0IGNhbiBiZSBhZGRlZCB0byBhcyBuZWVkZWQuXG4tIEFjdGl2aXRpZXMgY2FuIGJlIGRlZmluZWQgb24gbWV0aG9kcyBpbnN0ZWFkIG9mIHRvcC1sZXZlbCBmdW5jdGlvbnMuIFRoaXMgYWxsb3dzIHRoZSBpbnN0YW5jZSB0byBjYXJyeSBzdGF0ZSB0aGF0IGFuXG4gIGFjdGl2aXR5IG1heSBuZWVkIChlLmcuIGEgREIgY29ubmVjdGlvbikuIFRoZSBpbnN0YW5jZSBtZXRob2Qgc2hvdWxkIGJlIHdoYXQgaXMgcmVnaXN0ZXJlZCB3aXRoIHRoZSB3b3JrZXIuXG4tIEFjdGl2aXRpZXMgY2FuIGFsc28gYmUgZGVmaW5lZCBvbiBjYWxsYWJsZSBjbGFzc2VzIChpLmUuIGNsYXNzZXMgd2l0aCBgX19jYWxsX19gKS4gQW4gaW5zdGFuY2Ugb2YgdGhlIGNsYXNzIHNob3VsZCBiZVxuICB3aGF0IGlzIHJlZ2lzdGVyZWQgd2l0aCB0aGUgd29ya2VyLlxuXG4jIyMjIFR5cGVzIG9mIEFjdGl2aXRpZXNcblxuVGhlcmUgYXJlIDMgdHlwZXMgb2YgYWN0aXZpdHkgY2FsbGFibGVzIGFjY2VwdGVkIGFuZCBkZXNjcmliZWQgYmVsb3c6IGFzeW5jaHJvbm91cywgc3luY2hyb25vdXMgbXVsdGl0aHJlYWRlZCwgYW5kXG5zeW5jaHJvbm91cyBtdWx0aXByb2Nlc3Mvb3RoZXIuIE9ubHkgcG9zaXRpb25hbCBwYXJhbWV0ZXJzIGFyZSBhbGxvd2VkIGluIGFjdGl2aXR5IGNhbGxhYmxlcy5cblxuIyMjIyMgQXN5bmNocm9ub3VzIEFjdGl2aXRpZXNcblxuQXN5bmNocm9ub3VzIGFjdGl2aXRpZXMsIGkuZS4gZnVuY3Rpb25zIHVzaW5nIGBhc3luYyBkZWZgLCBhcmUgdGhlIHJlY29tbWVuZGVkIGFjdGl2aXR5IHR5cGUuIFdoZW4gdXNpbmcgYXN5bmNocm9ub3VzXG5hY3Rpdml0aWVzIG5vIHNwZWNpYWwgd29ya2VyIHBhcmFtZXRlcnMgYXJlIG5lZWRlZC5cblxuQ2FuY2VsbGF0aW9uIGZvciBhc3luY2hyb25vdXMgYWN0aXZpdGllcyBpcyBkb25lIHZpYVxuW2Bhc3luY2lvLlRhc2suY2FuY2VsYF0oaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2FzeW5jaW8tdGFzay5odG1sI2FzeW5jaW8uVGFzay5jYW5jZWwpLiBUaGlzIG1lYW5zIHRoYXRcbmBhc3luY2lvLkNhbmNlbGxlZEVycm9yYCB3aWxsIGJlIHJhaXNlZCAoYW5kIGNhbiBiZSBjYXVnaHQsIGJ1dCBpdCBpcyBub3QgcmVjb21tZW5kZWQpLiBBbiBhY3Rpdml0eSBtdXN0IGhlYXJ0YmVhdCB0b1xucmVjZWl2ZSBjYW5jZWxsYXRpb24gYW5kIHRoZXJlIGFyZSBvdGhlciB3YXlzIHRvIGJlIG5vdGlmaWVkIGFib3V0IGNhbmNlbGxhdGlvbiAoc2VlIFwiQWN0aXZpdHkgQ29udGV4dFwiIGFuZFxuXCJIZWFydGJlYXRpbmcgYW5kIENhbmNlbGxhdGlvblwiIGxhdGVyKS5cblxuIyMjIyMgU3luY2hyb25vdXMgQWN0aXZpdGllc1xuXG5TeW5jaHJvbm91cyBhY3Rpdml0aWVzLCBpLmUuIGZ1bmN0aW9ucyB0aGF0IGRvIG5vdCBoYXZlIGBhc3luYyBkZWZgLCBjYW4gYmUgdXNlZCB3aXRoIHdvcmtlcnMsIGJ1dCB0aGVcbmBhY3Rpdml0eV9leGVjdXRvcmAgd29ya2VyIHBhcmFtZXRlciBtdXN0IGJlIHNldCB3aXRoIGEgYGNvbmN1cnJlbnQuZnV0dXJlcy5FeGVjdXRvcmAgaW5zdGFuY2UgdG8gdXNlIGZvciBleGVjdXRpbmcgdGhlXG5hY3Rpdml0aWVzLlxuXG5DYW5jZWxsYXRpb24gZm9yIHN5bmNocm9ub3VzIGFjdGl2aXRpZXMgaXMgZG9uZSBpbiB0aGUgYmFja2dyb3VuZCBhbmQgdGhlIGFjdGl2aXR5IG11c3QgY2hvb3NlIHRvIGxpc3RlbiBmb3IgaXQgYW5kXG5yZWFjdCBhcHByb3ByaWF0ZWx5LiBBbiBhY3Rpdml0eSBtdXN0IGhlYXJ0YmVhdCB0byByZWNlaXZlIGNhbmNlbGxhdGlvbiBhbmQgdGhlcmUgYXJlIG90aGVyIHdheXMgdG8gYmUgbm90aWZpZWQgYWJvdXRcbmNhbmNlbGxhdGlvbiAoc2VlIFwiQWN0aXZpdHkgQ29udGV4dFwiIGFuZCBcIkhlYXJ0YmVhdGluZyBhbmQgQ2FuY2VsbGF0aW9uXCIgbGF0ZXIpLlxuXG5Ob3RlLCBhbGwgY2FsbHMgZnJvbSBhbiBhY3Rpdml0eSB0byBmdW5jdGlvbnMgaW4gdGhlIGB0ZW1wb3JhbGlvLmFjdGl2aXR5YCBwYWNrYWdlIGFyZSBwb3dlcmVkIGJ5XG5bY29udGV4dHZhcnNdKGh0dHBzOi8vZG9jcy5weXRob24ub3JnLzMvbGlicmFyeS9jb250ZXh0dmFycy5odG1sKS4gVGhlcmVmb3JlLCBuZXcgdGhyZWFkcyBzdGFydGluZyBfaW5zaWRlXyBvZlxuYWN0aXZpdGllcyBtdXN0IGBjb3B5X2NvbnRleHQoKWAgYW5kIHRoZW4gYC5ydW4oKWAgbWFudWFsbHkgdG8gZW5zdXJlIGB0ZW1wb3JhbGlvLmFjdGl2aXR5YCBjYWxscyBsaWtlIGBoZWFydGJlYXRgIHN0aWxsXG5mdW5jdGlvbiBpbiB0aGUgbmV3IHRocmVhZHMuXG5cbiMjIyMjIyBTeW5jaHJvbm91cyBNdWx0aXRocmVhZGVkIEFjdGl2aXRpZXNcblxuSWYgYGFjdGl2aXR5X2V4ZWN1dG9yYCBpcyBzZXQgdG8gYW4gaW5zdGFuY2Ugb2YgYGNvbmN1cnJlbnQuZnV0dXJlcy5UaHJlYWRQb29sRXhlY3V0b3JgIHRoZW4gdGhlIHN5bmNocm9ub3VzIGFjdGl2aXRpZXNcbmFyZSBjb25zaWRlcmVkIG11bHRpdGhyZWFkZWQgYWN0aXZpdGllcy4gQmVzaWRlcyBgYWN0aXZpdHlfZXhlY3V0b3JgLCBubyBvdGhlciB3b3JrZXIgcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQgZm9yXG5zeW5jaHJvbm91cyBtdWx0aXRocmVhZGVkIGFjdGl2aXRpZXMuXG5cbiMjIyMjIyBTeW5jaHJvbm91cyBNdWx0aXByb2Nlc3MvT3RoZXIgQWN0aXZpdGllc1xuXG5JZiBgYWN0aXZpdHlfZXhlY3V0b3JgIGlzIHNldCB0byBhbiBpbnN0YW5jZSBvZiBgY29uY3VycmVudC5mdXR1cmVzLkV4ZWN1dG9yYCB0aGF0IGlzIF9ub3RfXG5gY29uY3VycmVudC5mdXR1cmVzLlRocmVhZFBvb2xFeGVjdXRvcmAsIHRoZW4gdGhlIHN5bmNocm9ub3VzIGFjdGl2aXRpZXMgYXJlIGNvbnNpZGVyZWQgbXVsdGlwcm9jZXNzL290aGVyIGFjdGl2aXRpZXMuXG5cblRoZXNlIHJlcXVpcmUgc3BlY2lhbCBwcmltaXRpdmVzIGZvciBoZWFydGJlYXRpbmcgYW5kIGNhbmNlbGxhdGlvbi4gVGhlIGBzaGFyZWRfc3RhdGVfbWFuYWdlcmAgd29ya2VyIHBhcmFtZXRlciBtdXN0IGJlXG5zZXQgdG8gYW4gaW5zdGFuY2Ugb2YgYHRlbXBvcmFsaW8ud29ya2VyLlNoYXJlZFN0YXRlTWFuYWdlcmAuIFRoZSBtb3N0IGNvbW1vbiBpbXBsZW1lbnRhdGlvbiBjYW4gYmUgY3JlYXRlZCBieSBwYXNzaW5nIGFcbmBtdWx0aXByb2Nlc3NpbmcubWFuYWdlcnMuU3luY01hbmFnZXJgIChpLmUuIHJlc3VsdCBvZiBgbXVsdGlwcm9jZXNzaW5nLm1hbmFnZXJzLk1hbmFnZXIoKWApIHRvXG5gdGVtcG9yYWxpby53b3JrZXIuU2hhcmVkU3RhdGVNYW5hZ2VyLmNyZWF0ZV9mcm9tX211bHRpcHJvY2Vzc2luZygpYC5cblxuQWxzbywgYWxsIG9mIHRoZXNlIGFjdGl2aXR5IGZ1bmN0aW9ucyBtdXN0IGJlXG5bXCJwaWNrbGFibGVcIl0oaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L3BpY2tsZS5odG1sI3doYXQtY2FuLWJlLXBpY2tsZWQtYW5kLXVucGlja2xlZCkuXG5cbiMjIyMgQWN0aXZpdHkgQ29udGV4dFxuXG5EdXJpbmcgYWN0aXZpdHkgZXhlY3V0aW9uLCBhbiBpbXBsaWNpdCBhY3Rpdml0eSBjb250ZXh0IGlzIHNldCBhcyBhXG5bY29udGV4dCB2YXJpYWJsZV0oaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2NvbnRleHR2YXJzLmh0bWwpLiBUaGUgY29udGV4dCB2YXJpYWJsZSBpdHNlbGYgaXMgbm90IHZpc2libGUsIGJ1dFxuY2FsbHMgaW4gdGhlIGB0ZW1wb3JhbGlvLmFjdGl2aXR5YCBwYWNrYWdlIG1ha2UgdXNlIG9mIGl0LiBTcGVjaWZpY2FsbHk6XG5cbi0gYGluX2FjdGl2aXR5KClgIC0gV2hldGhlciBhbiBhY3Rpdml0eSBjb250ZXh0IGlzIHByZXNlbnRcbi0gYGluZm8oKWAgLSBSZXR1cm5zIHRoZSBpbW11dGFibGUgaW5mbyBvZiB0aGUgY3VycmVudGx5IHJ1bm5pbmcgYWN0aXZpdHlcbi0gYGhlYXJ0YmVhdCgqZGV0YWlscylgIC0gUmVjb3JkIGEgaGVhcnRiZWF0XG4tIGBpc19jYW5jZWxsZWQoKWAgLSBXaGV0aGVyIGEgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZCBvbiB0aGlzIGFjdGl2aXR5XG4tIGB3YWl0X2Zvcl9jYW5jZWxsZWQoKWAgLSBgYXN5bmNgIGNhbGwgdG8gd2FpdCBmb3IgY2FuY2VsbGF0aW9uIHJlcXVlc3Rcbi0gYHdhaXRfZm9yX2NhbmNlbGxlZF9zeW5jKHRpbWVvdXQpYCAtIFN5bmNocm9ub3VzIGJsb2NraW5nIGNhbGwgdG8gd2FpdCBmb3IgY2FuY2VsbGF0aW9uIHJlcXVlc3Rcbi0gYGlzX3dvcmtlcl9zaHV0ZG93bigpYCAtIFdoZXRoZXIgdGhlIHdvcmtlciBoYXMgc3RhcnRlZCBncmFjZWZ1bCBzaHV0ZG93blxuLSBgd2FpdF9mb3Jfd29ya2VyX3NodXRkb3duKClgIC0gYGFzeW5jYCBjYWxsIHRvIHdhaXQgZm9yIHN0YXJ0IG9mIGdyYWNlZnVsIHdvcmtlciBzaHV0ZG93blxuLSBgd2FpdF9mb3Jfd29ya2VyX3NodXRkb3duX3N5bmModGltZW91dClgIC0gU3luY2hyb25vdXMgYmxvY2tpbmcgY2FsbCB0byB3YWl0IGZvciBzdGFydCBvZiBncmFjZWZ1bCB3b3JrZXIgc2h1dGRvd25cbi0gYHJhaXNlX2NvbXBsZXRlX2FzeW5jKClgIC0gUmFpc2UgYW4gZXJyb3IgdGhhdCB0aGlzIGFjdGl2aXR5IHdpbGwgYmUgY29tcGxldGVkIGFzeW5jaHJvbm91c2x5IChpLmUuIGFmdGVyIHJldHVybiBvZlxuICB0aGUgYWN0aXZpdHkgZnVuY3Rpb24gaW4gYSBzZXBhcmF0ZSBjbGllbnQgY2FsbClcblxuV2l0aCB0aGUgZXhjZXB0aW9uIG9mIGBpbl9hY3Rpdml0eSgpYCwgaWYgYW55IG9mIHRoZSBmdW5jdGlvbnMgYXJlIGNhbGxlZCBvdXRzaWRlIG9mIGFuIGFjdGl2aXR5IGNvbnRleHQsIGFuIGVycm9yXG5vY2N1cnMuIFN5bmNocm9ub3VzIGFjdGl2aXRpZXMgY2Fubm90IGNhbGwgYW55IG9mIHRoZSBgYXN5bmNgIGZ1bmN0aW9ucy5cblxuIyMjIyMgSGVhcnRiZWF0aW5nIGFuZCBDYW5jZWxsYXRpb25cblxuSW4gb3JkZXIgZm9yIGFuIGFjdGl2aXR5IHRvIGJlIG5vdGlmaWVkIG9mIGNhbmNlbGxhdGlvbiByZXF1ZXN0cywgdGhleSBtdXN0IGludm9rZSBgdGVtcG9yYWxpby5hY3Rpdml0eS5oZWFydGJlYXQoKWAuXG5JdCBpcyBzdHJvbmdseSByZWNvbW1lbmRlZCB0aGF0IGFsbCBidXQgdGhlIGZhc3Rlc3QgZXhlY3V0aW5nIGFjdGl2aXRpZXMgY2FsbCB0aGlzIGZ1bmN0aW9uIHJlZ3VsYXJseS4gXCJUeXBlcyBvZlxuQWN0aXZpdGllc1wiIGhhcyBzcGVjaWZpY3Mgb24gY2FuY2VsbGF0aW9uIGZvciBhc3luY2hyb25vdXMgYW5kIHN5bmNocm9ub3VzIGFjdGl2aXRpZXMuXG5cbkluIGFkZGl0aW9uIHRvIG9idGFpbmluZyBjYW5jZWxsYXRpb24gaW5mb3JtYXRpb24sIGhlYXJ0YmVhdHMgYWxzbyBzdXBwb3J0IGRldGFpbCBkYXRhIHRoYXQgaXMgcGVyc2lzdGVkIG9uIHRoZSBzZXJ2ZXJcbmZvciByZXRyaWV2YWwgZHVyaW5nIGFjdGl2aXR5IHJldHJ5LiBJZiBhbiBhY3Rpdml0eSBjYWxscyBgdGVtcG9yYWxpby5hY3Rpdml0eS5oZWFydGJlYXQoMTIzLCA0NTYpYCBhbmQgdGhlbiBmYWlscyBhbmRcbmlzIHJldHJpZWQsIGB0ZW1wb3JhbGlvLmFjdGl2aXR5LmluZm8oKS5oZWFydGJlYXRfZGV0YWlsc2Agd2lsbCByZXR1cm4gYW4gaXRlcmFibGUgY29udGFpbmluZyBgMTIzYCBhbmQgYDQ1NmAgb24gdGhlXG5uZXh0IHJ1bi5cblxuIyMjIyMgV29ya2VyIFNodXRkb3duXG5cbkFuIGFjdGl2aXR5IGNhbiByZWFjdCB0byBhIHdvcmtlciBzaHV0ZG93bi4gVXNpbmcgYGlzX3dvcmtlcl9zaHV0ZG93bmAgb3Igb25lIG9mIHRoZSBgd2FpdF9mb3Jfd29ya2VyX3NodXRkb3duYFxuZnVuY3Rpb25zIGFuIGFjdGl2aXR5IGNhbiByZWFjdCB0byBhIHNodXRkb3duLlxuXG5XaGVuIHRoZSBgZ3JhY2VmdWxfc2h1dGRvd25fdGltZW91dGAgd29ya2VyIHBhcmFtZXRlciBpcyBnaXZlbiBhIGBkYXRldGltZS50aW1lZGVsdGFgLCBvbiBzaHV0ZG93biB0aGUgd29ya2VyIHdpbGxcbm5vdGlmeSBhY3Rpdml0aWVzIG9mIHRoZSBncmFjZWZ1bCBzaHV0ZG93bi4gT25jZSB0aGF0IHRpbWVvdXQgaGFzIHBhc3NlZCAob3IgaWYgd2Fzbid0IHNldCksIHRoZSB3b3JrZXIgd2lsbCBwZXJmb3JtXG5jYW5jZWxsYXRpb24gb2YgYWxsIG91dHN0YW5kaW5nIGFjdGl2aXRpZXMuXG5cblRoZSBgc2h1dGRvd24oKWAgaW52b2NhdGlvbiB3aWxsIHdhaXQgb24gYWxsIGFjdGl2aXRpZXMgdG8gY29tcGxldGUsIHNvIGlmIGEgbG9uZy1ydW5uaW5nIGFjdGl2aXR5IGRvZXMgbm90IGF0IGxlYXN0XG5yZXNwZWN0IGNhbmNlbGxhdGlvbiwgdGhlIHNodXRkb3duIG1heSBuZXZlciBjb21wbGV0ZS5cblxuIyMjIyBUZXN0aW5nXG5cblVuaXQgdGVzdGluZyBhbiBhY3Rpdml0eSBvciBhbnkgY29kZSB0aGF0IGNvdWxkIHJ1biBpbiBhbiBhY3Rpdml0eSBpcyBkb25lIHZpYSB0aGVcbmB0ZW1wb3JhbGlvLnRlc3RpbmcuQWN0aXZpdHlFbnZpcm9ubWVudGAgY2xhc3MuIFNpbXBseSBpbnN0YW50aWF0ZSB0aGlzIGFuZCBhbnkgY2FsbGFibGUgKyBwYXJhbXMgcGFzc2VkIHRvIGBydW5gIHdpbGxcbmJlIGludm9rZWQgaW5zaWRlIHRoZSBhY3Rpdml0eSBjb250ZXh0LiBUaGUgZm9sbG93aW5nIGFyZSBhdHRyaWJ1dGVzL21ldGhvZHMgb24gdGhlIGVudmlyb25tZW50IHRoYXQgY2FuIGJlIHVzZWQgdG9cbmFmZmVjdCBjYWxscyBhY3Rpdml0eSBjb2RlIG1pZ2h0IG1ha2UgdG8gZnVuY3Rpb25zIG9uIHRoZSBgdGVtcG9yYWxpby5hY3Rpdml0eWAgcGFja2FnZS5cblxuLSBgaW5mb2AgcHJvcGVydHkgY2FuIGJlIHNldCB0byBjdXN0b21pemUgd2hhdCBpcyByZXR1cm5lZCBmcm9tIGBhY3Rpdml0eS5pbmZvKClgXG4tIGBvbl9oZWFydGJlYXRgIHByb3BlcnR5IGNhbiBiZSBzZXQgdG8gaGFuZGxlIGBhY3Rpdml0eS5oZWFydGJlYXQoKWAgY2FsbHNcbi0gYGNhbmNlbCgpYCBjYW4gYmUgaW52b2tlZCB0byBzaW11bGF0ZSBhIGNhbmNlbGxhdGlvbiBvZiB0aGUgYWN0aXZpdHlcbi0gYHdvcmtlcl9zaHV0ZG93bigpYCBjYW4gYmUgaW52b2tlZCB0byBzaW11bGF0ZSBhIHdvcmtlciBzaHV0ZG93biBkdXJpbmcgZXhlY3V0aW9uIG9mIHRoZSBhY3Rpdml0eVxuXG4jIyMgV29ya2Zsb3cgUmVwbGF5XG5cbkdpdmVuIGEgd29ya2Zsb3cncyBoaXN0b3J5LCBpdCBjYW4gYmUgcmVwbGF5ZWQgbG9jYWxseSB0byBjaGVjayBmb3IgdGhpbmdzIGxpa2Ugbm9uLWRldGVybWluaXNtIGVycm9ycy4gRm9yIGV4YW1wbGUsXG5hc3N1bWluZyBgaGlzdG9yeV9qc29uX3N0cmAgaXMgcG9wdWxhdGVkIHdpdGggYSBKU09OIHN0cmluZyBoaXN0b3J5IGVpdGhlciBleHBvcnRlZCBmcm9tIHRoZSB3ZWIgVUkgb3IgZnJvbSBgdGN0bGAsIHRoZVxuZm9sbG93aW5nIGZ1bmN0aW9uIHdpbGwgcmVwbGF5IGl0OlxuXG5gYGBweXRob25cbmZyb20gdGVtcG9yYWxpby53b3JrZXIgaW1wb3J0IFJlcGxheWVyXG5cbmFzeW5jIGRlZiBydW5fcmVwbGF5ZXIoaGlzdG9yeV9qc29uX3N0cjogc3RyKTpcbiAgcmVwbGF5ZXIgPSBSZXBsYXllcih3b3JrZmxvd3M9W1NheUhlbGxvXSlcbiAgYXdhaXQgcmVwbGF5ZXIucmVwbGF5X3dvcmtmbG93KGhpc3RvcnlfanNvbl9zdHIpXG5gYGBcblxuVGhpcyB3aWxsIHRocm93IGFuIGVycm9yIGlmIGFueSBub24tZGV0ZXJtaW5pc20gaXMgZGV0ZWN0ZWQuXG5cbiMjIyBPcGVuVGVsZW1ldHJ5IFN1cHBvcnRcblxuT3BlblRlbGVtZXRyeSBzdXBwb3J0IHJlcXVpcmVzIHRoZSBvcHRpb25hbCBgb3BlbnRlbGVtZXRyeWAgZGVwZW5kZW5jaWVzIHdoaWNoIGFyZSBwYXJ0IG9mIHRoZSBgb3BlbnRlbGVtZXRyeWAgZXh0cmEuXG5XaGVuIHVzaW5nIGBwaXBgLCBydW5uaW5nXG5cbiAgICBwaXAgaW5zdGFsbCB0ZW1wb3JhbGlvW29wZW50ZWxlbWV0cnldXG5cbndpbGwgaW5zdGFsbCBuZWVkZWQgZGVwZW5kZW5jaWVzLiBUaGVuIHRoZSBgdGVtcG9yYWxpby5jb250cmliLm9wZW50ZWxlbWV0cnkuVHJhY2luZ0ludGVyY2VwdG9yYCBjYW4gYmUgY3JlYXRlZCBhbmQgc2V0XG5hcyBhbiBpbnRlcmNlcHRvciBvbiB0aGUgYGludGVyY2VwdG9yc2AgYXJndW1lbnQgb2YgYENsaWVudC5jb25uZWN0YC4gV2hlbiBzZXQsIHNwYW5zIHdpbGwgYmUgY3JlYXRlZCBmb3IgYWxsIGNsaWVudFxuY2FsbHMgYW5kIGZvciBhbGwgYWN0aXZpdHkgYW5kIHdvcmtmbG93IGludm9jYXRpb25zIG9uIHRoZSB3b3JrZXIsIHNwYW5zIHdpbGwgYmUgY3JlYXRlZCBhbmQgcHJvcGVybHkgc2VyaWFsaXplZCB0aHJvdWdoXG50aGUgc2VydmVyIHRvIGdpdmUgb25lIHByb3BlciB0cmFjZSBmb3IgYSB3b3JrZmxvdyBleGVjdXRpb24uXG5cbiMjIERldmVsb3BtZW50XG5cblRoZSBQeXRob24gU0RLIGlzIGJ1aWx0IHRvIHdvcmsgd2l0aCBQeXRob24gMy43IGFuZCBuZXdlci4gSXQgaXMgYnVpbHQgdXNpbmdcbltTREsgQ29yZV0oaHR0cHM6Ly9naXRodWIuY29tL3RlbXBvcmFsaW8vc2RrLWNvcmUvKSB3aGljaCBpcyB3cml0dGVuIGluIFJ1c3QuXG5cbiMjIyBCdWlsZGluZ1xuXG4jIyMjIFByZXBhcmVcblxuVG8gYnVpbGQgdGhlIFNESyBmcm9tIHNvdXJjZSBmb3IgdXNlIGFzIGEgZGVwZW5kZW5jeSwgdGhlIGZvbGxvd2luZyBwcmVyZXF1aXNpdGVzIGFyZSByZXF1aXJlZDpcblxuLSBbUHl0aG9uXShodHRwczovL3d3dy5weXRob24ub3JnLykgPj0gMy43XG4tIFtSdXN0XShodHRwczovL3d3dy5ydXN0LWxhbmcub3JnLylcbi0gW3BvZXRyeV0oaHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi1wb2V0cnkvcG9ldHJ5KSAoZS5nLiBgcHl0aG9uIC1tIHBpcCBpbnN0YWxsIHBvZXRyeWApXG4tIFtwb2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9uYXQtbi9wb2V0aGVwb2V0KSAoZS5nLiBgcHl0aG9uIC1tIHBpcCBpbnN0YWxsIHBvZXRoZXBvZXRgKVxuXG5tYWNPUyBub3RlOiBJZiBlcnJvcnMgYXJlIGVuY291bnRlcmVkLCBpdCBtYXkgYmUgYmV0dGVyIHRvIGluc3RhbGwgUHl0aG9uIGFuZCBSdXN0IGFzIHJlY29tbWVuZGVkIGZyb20gdGhlaXIgd2Vic2l0ZXNcbmluc3RlYWQgb2YgdmlhIGBicmV3YC5cblxuV2l0aCB0aGUgcHJlcmVxdWlzaXRlcyBpbnN0YWxsZWQsIGZpcnN0IGNsb25lIHRoZSBTREsgcmVwb3NpdG9yeSByZWN1cnNpdmVseTpcblxuYGBgYmFzaFxuZ2l0IGNsb25lIC0tcmVjdXJzaXZlIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW1wb3JhbGlvL3Nkay1weXRob24uZ2l0XG5jZCBzZGstcHl0aG9uXG5gYGBcblxuVXNlIGBwb2V0cnlgIHRvIGluc3RhbGwgdGhlIGRlcGVuZGVuY2llcyB3aXRoIGAtLW5vLXJvb3RgIHRvIG5vdCBpbnN0YWxsIHRoaXMgcGFja2FnZSAoYmVjYXVzZSB3ZSBzdGlsbCBuZWVkIHRvIGJ1aWxkXG5pdCk6XG5cbmBgYGJhc2hcbnBvZXRyeSBpbnN0YWxsIC0tbm8tcm9vdFxuYGBgXG5cbiMjIyMgQnVpbGRcblxuTm93IHBlcmZvcm0gdGhlIHJlbGVhc2UgYnVpbGQ6XG5cbj4gVGhpcyB3aWxsIHRha2UgYSB3aGlsZSBiZWNhdXNlIFJ1c3Qgd2lsbCBjb21waWxlIHRoZSBjb3JlIHByb2plY3QgaW4gcmVsZWFzZSBtb2RlIChzZWUgW0xvY2FsIFNESyBkZXZlbG9wbWVudFxuPiBlbnZpcm9ubWVudF0oI2xvY2FsLXNkay1kZXZlbG9wbWVudC1lbnZpcm9ubWVudCkgZm9yIHRoZSBxdWlja2VyIGFwcHJvYWNoIHRvIGxvY2FsIGRldmVsb3BtZW50KS5cblxuYGBgYmFzaFxucG9ldHJ5IGJ1aWxkXG5gYGBcblxuVGhlIGNvbXBpbGVkIHdoZWVsIGRvZXNuJ3QgaGF2ZSB0aGUgZXhhY3QgcmlnaHQgdGFncyB5ZXQgZm9yIHVzZSwgc28gcnVuIHRoaXMgc2NyaXB0IHRvIGZpeCBpdDpcblxuYGBgYmFzaFxucG9lIGZpeC13aGVlbFxuYGBgXG5cblRoZSBgd2hsYCB3aGVlbCBmaWxlIGluIGBkaXN0L2AgaXMgbm93IHJlYWR5IHRvIHVzZS5cblxuIyMjIyBVc2VcblxuVGhlIHdoZWVsIGNhbiBub3cgYmUgaW5zdGFsbGVkIGludG8gYW55IHZpcnR1YWwgZW52aXJvbm1lbnQuXG5cbkZvciBleGFtcGxlLFxuW2NyZWF0ZSBhIHZpcnR1YWwgZW52aXJvbm1lbnRdKGh0dHBzOi8vcGFja2FnaW5nLnB5dGhvbi5vcmcvZW4vbGF0ZXN0L3R1dG9yaWFscy9pbnN0YWxsaW5nLXBhY2thZ2VzLyNjcmVhdGluZy12aXJ0dWFsLWVudmlyb25tZW50cylcbnNvbWV3aGVyZSBhbmQgdGhlbiBydW4gdGhlIGZvbGxvd2luZyBpbnNpZGUgdGhlIHZpcnR1YWwgZW52aXJvbm1lbnQ6XG5cbmBgYGJhc2hcbnBpcCBpbnN0YWxsIHdoZWVsXG5gYGBcblxuYGBgYmFzaFxucGlwIGluc3RhbGwgL3BhdGgvdG8vY2xvbmVkL3Nkay1weXRob24vZGlzdC8qLndobFxuYGBgXG5cbkNyZWF0ZSB0aGlzIFB5dGhvbiBmaWxlIGF0IGBleGFtcGxlLnB5YDpcblxuYGBgcHl0aG9uXG5pbXBvcnQgYXN5bmNpb1xuZnJvbSB0ZW1wb3JhbGlvIGltcG9ydCB3b3JrZmxvdywgYWN0aXZpdHlcbmZyb20gdGVtcG9yYWxpby5jbGllbnQgaW1wb3J0IENsaWVudFxuZnJvbSB0ZW1wb3JhbGlvLndvcmtlciBpbXBvcnQgV29ya2VyXG5cbkB3b3JrZmxvdy5kZWZuXG5jbGFzcyBTYXlIZWxsbzpcbiAgICBAd29ya2Zsb3cucnVuXG4gICAgYXN5bmMgZGVmIHJ1bihzZWxmLCBuYW1lOiBzdHIpIC0+IHN0cjpcbiAgICAgICAgcmV0dXJuIGZcIkhlbGxvLCB7bmFtZX0hXCJcblxuYXN5bmMgZGVmIG1haW4oKTpcbiAgICBjbGllbnQgPSBhd2FpdCBDbGllbnQuY29ubmVjdChcImxvY2FsaG9zdDo3MjMzXCIpXG4gICAgYXN5bmMgd2l0aCBXb3JrZXIoY2xpZW50LCB0YXNrX3F1ZXVlPVwibXktdGFzay1xdWV1ZVwiLCB3b3JrZmxvd3M9W1NheUhlbGxvXSk6XG4gICAgICAgIHJlc3VsdCA9IGF3YWl0IGNsaWVudC5leGVjdXRlX3dvcmtmbG93KFNheUhlbGxvLnJ1biwgXCJUZW1wb3JhbFwiLFxuICAgICAgICAgICAgaWQ9XCJteS13b3JrZmxvdy1pZFwiLCB0YXNrX3F1ZXVlPVwibXktdGFzay1xdWV1ZVwiKVxuICAgICAgICBwcmludChmXCJSZXN1bHQ6IHtyZXN1bHR9XCIpXG5cbmlmIF9fbmFtZV9fID09IFwiX19tYWluX19cIjpcbiAgICBhc3luY2lvLnJ1bihtYWluKCkpXG5gYGBcblxuQXNzdW1pbmcgdGhlcmUgaXMgYSBbbG9jYWwgVGVtcG9yYWwgc2VydmVyXShodHRwczovL2RvY3MudGVtcG9yYWwuaW8vZG9jcy9zZXJ2ZXIvcXVpY2staW5zdGFsbC8pIHJ1bm5pbmcsIGV4ZWN1dGUgdGhlXG5maWxlIHdpdGggYHB5dGhvbmAgKG9yIGBweXRob24zYCBpZiBuZWNlc3NhcnkpOlxuXG5gYGBiYXNoXG5weXRob24gZXhhbXBsZS5weVxuYGBgXG5cbkl0IHNob3VsZCBvdXRwdXQ6XG5cbiAgICBSZXN1bHQ6IEhlbGxvLCBUZW1wb3JhbCFcblxuIyMjIExvY2FsIFNESyBkZXZlbG9wbWVudCBlbnZpcm9ubWVudFxuXG5Gb3IgbG9jYWwgZGV2ZWxvcG1lbnQsIGl0IGlzIG9mdGVuIHF1aWNrZXIgdG8gdXNlIGRlYnVnIGJ1aWxkcyBhbmQgYSBsb2NhbCB2aXJ0dWFsIGVudmlyb25tZW50LlxuXG5XaGlsZSBub3QgcmVxdWlyZWQsIGl0IG9mdGVuIGhlbHBzIElERXMgaWYgd2UgcHV0IHRoZSB2aXJ0dWFsIGVudmlyb25tZW50IGAudmVudmAgZGlyZWN0b3J5IGluIHRoZSBwcm9qZWN0IGl0c2VsZi4gVGhpc1xuY2FuIGJlIGNvbmZpZ3VyZWQgc3lzdGVtLXdpZGUgdmlhOlxuXG5gYGBiYXNoXG5wb2V0cnkgY29uZmlnIHZpcnR1YWxlbnZzLmluLXByb2plY3QgdHJ1ZVxuYGBgXG5cbk5vdyBwZXJmb3JtIHRoZSBzYW1lIHN0ZXBzIGFzIHRoZSBcIlByZXBhcmVcIiBzZWN0aW9uIGFib3ZlIGJ5IGluc3RhbGxpbmcgdGhlIHByZXJlcXVpc2l0ZXMsIGNsb25pbmcgdGhlIHByb2plY3QsXG5pbnN0YWxsaW5nIGRlcGVuZGVuY2llcywgYW5kIGdlbmVyYXRpbmcgdGhlIHByb3RvYnVmIGNvZGU6XG5cbmBgYGJhc2hcbmdpdCBjbG9uZSAtLXJlY3Vyc2l2ZSBodHRwczovL2dpdGh1Yi5jb20vdGVtcG9yYWxpby9zZGstcHl0aG9uLmdpdFxuY2Qgc2RrLXB5dGhvblxucG9ldHJ5IGluc3RhbGwgLS1uby1yb290XG5gYGBcblxuTm93IGNvbXBpbGUgdGhlIFJ1c3QgZXh0ZW5zaW9uIGluIGRldmVsb3AgbW9kZSB3aGljaCBpcyBxdWlja2VyIHRoYW4gcmVsZWFzZSBtb2RlOlxuXG5gYGBiYXNoXG5wb2UgYnVpbGQtZGV2ZWxvcFxuYGBgXG5cblRoYXQgc3RlcCBjYW4gYmUgcmVwZWF0ZWQgZm9yIGFueSBSdXN0IGNoYW5nZXMgbWFkZS5cblxuVGhlIGVudmlyb25tZW50IGlzIG5vdyByZWFkeSB0byBkZXZlbG9wIGluLlxuXG4jIyMjIFRlc3RpbmdcblxuVGVzdHMgY3VycmVudGx5IHJlcXVpcmUgW0dvXShodHRwczovL2dvLmRldi8pIHRvIGJlIGluc3RhbGxlZCBzaW5jZSB0aGV5IHVzZSBhbiBlbWJlZGRlZCBUZW1wb3JhbCBzZXJ2ZXIgYXMgYSBsaWJyYXJ5LlxuV2l0aCBgR29gIGluc3RhbGxlZCwgcnVuIHRoZSBmb2xsb3dpbmcgdG8gZXhlY3V0ZSB0ZXN0czpcblxuYGBgYmFzaFxucG9lIHRlc3RcbmBgYFxuXG4jIyMgU3R5bGVcblxuLSBNb3N0bHkgW0dvb2dsZSBTdHlsZSBHdWlkZV0oaHR0cHM6Ly9nb29nbGUuZ2l0aHViLmlvL3N0eWxlZ3VpZGUvcHlndWlkZS5odG1sKS4gTm90YWJsZSBleGNlcHRpb25zOlxuICAtIFdlIHVzZSBbQmxhY2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9wc2YvYmxhY2spIGZvciBmb3JtYXR0aW5nLCBzbyB0aGF0IHRha2VzIHByZWNlZGVuY2VcbiAgLSBJbiB0ZXN0cyBhbmQgZXhhbXBsZSBjb2RlLCBjYW4gaW1wb3J0IGluZGl2aWR1YWwgY2xhc3Nlcy9mdW5jdGlvbnMgdG8gbWFrZSBpdCBtb3JlIHJlYWRhYmxlLiBDYW4gYWxzbyBkbyB0aGlzIGZvclxuICAgIHJhcmVseSBpbiBsaWJyYXJ5IGNvZGUgZm9yIHNvbWUgUHl0aG9uIGNvbW1vbiBpdGVtcyAoZS5nLiBgZGF0YWNsYXNzYCBvciBgcGFydGlhbGApLCBidXQgbm90IGFsbG93ZWQgdG8gZG8gdGhpcyBmb3JcbiAgICBhbnkgYHRlbXBvcmFsaW9gIHBhY2thZ2VzIChleGNlcHQgYHRlbXBvcmFsaW8udHlwZXNgKSBvciBhbnkgY2xhc3Nlcy9mdW5jdGlvbnMgdGhhdCBhcmVuJ3QgY2xlYXIgd2hlbiB1bnF1YWxpZmllZC5cbiAgLSBXZSBhbGxvdyByZWxhdGl2ZSBpbXBvcnRzIGZvciBwcml2YXRlIHBhY2thZ2VzXG4gIC0gV2UgYWxsb3cgYEBzdGF0aWNtZXRob2RgXG4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RlbXBvcmFsaW8vc2RrLXB5dGhvbiIs
ICAgICJrZXl3b3JkcyI6ICJ0ZW1wb3JhbCx3b3JrZmxvdyIs
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInZpbGxhZ2UtdGVtcG9yYWwiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvdmlsbGFnZS10ZW1wb3JhbC8iLA==
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvdmlsbGFnZS10ZW1wb3JhbC8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS90ZW1wb3JhbGlvX3ZpbGxhZ2Uvc2RrLXB5dGhvbi9pc3N1ZXMiLA==
ICAgICAgIkRvY3VtZW50YXRpb24iOiAiaHR0cHM6Ly9kb2NzLnRlbXBvcmFsLmlvL2RvY3MvcHl0aG9uIiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS90ZW1wb3JhbGlvL3Nkay1weXRob24iLA==
ICAgICAgIlJlcG9zaXRvcnkiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RlbXBvcmFsaW8vc2RrLXB5dGhvbiI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvdmlsbGFnZS10ZW1wb3JhbC8wLjFiMS8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImdycGNpbyAoPj0xLjQ4LjEsPDIuMC4wKSIs
ICAgICAgIm9wZW50ZWxlbWV0cnktYXBpICg+PTEuMTEuMSw8Mi4wLjApOyBleHRyYSA9PSBcIm9wZW50ZWxlbWV0cnlcIiIs
ICAgICAgIm9wZW50ZWxlbWV0cnktc2RrICg+PTEuMTEuMSw8Mi4wLjApOyBleHRyYSA9PSBcIm9wZW50ZWxlbWV0cnlcIiIs
ICAgICAgInByb3RvYnVmICg+PTQuMjEuNSw8NS4wLjApIiw=
ICAgICAgInR5cGVzLXByb3RvYnVmICg+PTMuMTkuMjEsPDQuMC4wKSIs
ICAgICAgInR5cGluZy1leHRlbnNpb25zICg+PTQuMi4wLDw1LjAuMCki
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjcsPDQuMCIs
ICAgICJzdW1tYXJ5IjogIlRlbXBvcmFsLmlvIFB5dGhvbiBTREsiLA==
ICAgICJ2ZXJzaW9uIjogIjAuMWIxIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNDk4MzQ0Miw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjFiMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjMjFmZjUyNDAzNmRjZTQ3MDA2NTVjNzY1YjRjNDM3ZWI1MjEyMmM4YmU5ZWMyM2QyMGRhOWQ4NDNjMjBjMzI1Iiw=
ICAgICAgICAgICJtZDUiOiAiZGZjMjQwN2NiZTM1MDU5MGQ0OGU5ZWI1MmExZDE4YzQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZmQ3ZjUzNDUzN2Q1ZmQ0N2Q0YmQzMjhlNjUwNWEzMjAxOWM0Y2EyYWU5ZGYwM2IxMTU0ZjI5NzM5NDU0YTA5NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAidmlsbGFnZS10ZW1wb3JhbC0wLjFiMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkZmMyNDA3Y2JlMzUwNTkwZDQ4ZTllYjUyYTFkMThjNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LDw0LjAiLA==
ICAgICAgICAic2l6ZSI6IDc0NjY5Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wOS0wM1QxNzoyNDoxNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wOS0wM1QxNzoyNDoxNi41NTgxODhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jMi8xZi9mNTI0MDM2ZGNlNDcwMDY1NWM3NjViNGM0MzdlYjUyMTIyYzhiZTllYzIzZDIwZGE5ZDg0M2MyMGMzMjUvdmlsbGFnZS10ZW1wb3JhbC0wLjFiMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYzIxZmY1MjQwMzZkY2U0NzAwNjU1Yzc2NWI0YzQzN2ViNTIxMjJjOGJlOWVjMjNkMjBkYTlkODQzYzIwYzMyNSIs
ICAgICAgICAibWQ1IjogImRmYzI0MDdjYmUzNTA1OTBkNDhlOWViNTJhMWQxOGM0Iiw=
ICAgICAgICAic2hhMjU2IjogImZkN2Y1MzQ1MzdkNWZkNDdkNGJkMzI4ZTY1MDVhMzIwMTljNGNhMmFlOWRmMDNiMTE1NGYyOTczOTQ1NGEwOTUi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInZpbGxhZ2UtdGVtcG9yYWwtMC4xYjEudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZGZjMjQwN2NiZTM1MDU5MGQ0OGU5ZWI1MmExZDE4YzQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNyw8NC4wIiw=
ICAgICAgInNpemUiOiA3NDY2OTIs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDktMDNUMTc6MjQ6MTYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDktMDNUMTc6MjQ6MTYuNTU4MTg4WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYzIvMWYvZjUyNDAzNmRjZTQ3MDA2NTVjNzY1YjRjNDM3ZWI1MjEyMmM4YmU5ZWMyM2QyMGRhOWQ4NDNjMjBjMzI1L3ZpbGxhZ2UtdGVtcG9yYWwtMC4xYjEudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
