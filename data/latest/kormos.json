ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTWljaGFlbCBCIEh5bmVzIiw=
ICAgICJhdXRob3JfZW1haWwiOiAibWlrZS5oeW5lcy5yaHltZXNAZ21haWwuY29tIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogSW5mb3JtYXRpb24gQW5hbHlzaXMi
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBpbWFnZTo6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYmh5bmVzL2tvcm1vcy93b3JrZmxvd3MvVGVzdHMvYmFkZ2Uuc3ZnXG4gIDp0YXJnZXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYmh5bmVzL2tvcm1vcy9hY3Rpb25zXG5cbi4uIGltYWdlOjogaHR0cHM6Ly9yZWFkdGhlZG9jcy5vcmcvcHJvamVjdHMva29ybW9zL2JhZGdlLz92ZXJzaW9uPWxhdGVzdFxuICA6dGFyZ2V0OiBodHRwczovL2tvcm1vcy5yZWFkdGhlZG9jcy5pb1xuXG4uLiBpbWFnZTo6IGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vcHlwaS92L2tvcm1vc1xuICA6dGFyZ2V0OiBodHRwczovL3B5cGkub3JnL3Byb2plY3Qva29ybW9zXG5cblxuS29ybW9zXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuVGhlIGBrb3Jtb3NgIHBhY2thZ2UgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGJldHdlZW4gYHNjaXB5Lm9wdGltaXplLm1pbmltaXplIDxodHRwczovL2RvY3Muc2NpcHkub3JnL2RvYy9zY2lweS9yZWZlcmVuY2UvZ2VuZXJhdGVkL3NjaXB5Lm9wdGltaXplLm1pbmltaXplLmh0bWw+YF8gYW5kIGBLZXJhcyA8aHR0cHM6Ly9rZXJhcy5pbz5gXyBmb3IgdHJhaW5pbmcgbW9kZWxzIHdpdGggZGV0ZXJtaW5pc3RpYyBtaW5pbWl6YXRpb24gYWxnb3JpdGhtcyBsaWtlIEwtQkZHUy5cblxuSXQgcHJvdmlkZXMgYEtlcmFzYCB1c2VycyB3aXRoOlxuXG4tIGBga2VyYXMuTW9kZWxgYCBzdWJjbGFzc2VzIHRoYXQgbWF5IGJlIG9wdGltaXplZCB3aXRob3V0IGNoYW5nZXMgaW4gdGhlIEFQSS0tLWEgbW9kZWwgbWF5IGJlIHRyYWluZWQgdXNpbmcgKmVpdGhlciogdGhlIGJ1aWx0LWluIHN0b2NoYXN0aWMgbWluaS1iYXRjaCBhbGdvcml0aG1zICpvciogdGhlIGRldGVybWluaXN0aWMgYmF0Y2ggYWxnb3JpdGhtcyBmcm9tIGBgc2NpcHkub3B0aW1pemVgYFxuLSBPdXQtb2YtdGhlLWJveCBpbnRlcm9wZXJhYmlsaXR5IHdpdGggdGhlIHVzdWFsIGBLZXJhc2AgdXRpbGl0aWVzIGFuZCB3b3JrZmxvd3M7IGUuZy46XG5cbiAgLSBgYGZpdCgpYGAgc3RpbGwgcmV0dXJucyBhIHRoZSBoaXN0b3J5IG9iamVjdCB3aXRoIG9wdGltaXphdGlvbiBtZXRhZGF0YSBhbmQgdmFsaWRhdGlvbiBtZXRyaWNzIGZyb20gZWFjaCBpdGVyYXRpb24gb2YgdGhlIHNvbHZlciBhbmQgaXMgdXNhYmxlIGJ5IGBLZXJhc1R1bmVyIDxodHRwczovL2tlcmFzLmlvL2tlcmFzX3R1bmVyLz5gX1xuICAtIFN1cHBvcnQgZm9yIGRpc3RyaWJ1dGVkIHRyYWluaW5nIHN0cmF0ZWdpZXMgKGF0IGxlYXN0IGluIHByaW5jaXBsZS0tLXRoaXMgaGFzIGFkbWl0dGVkbHkgbm90IGJlZW4gaW50ZWdyYXRpb24gdGVzdGVkKVxuLSBUaGUgYWJpbGl0eSB0byB1c2UgKnNlY29uZCBvcmRlciogb3B0aW1pemF0aW9uIG1ldGhvZHMgZnJvbSBgc2NpcHlgIGJ5IGV2YWx1YXRpbmcgSGVzc2lhbi12ZWN0b3ItcHJvZHVjdHMgaWYgeW91IGhhdmUgYSB2ZXJ5IHNwZWNpZmljIG5lZWQgZm9yIHRoaXMgKHNwb2lsZXI6IHlvdSBhbG1vc3QgY2VydGFpbmx5IGRvIG5vdClcblxuXG5Nb3RpdmF0aW9uXG4tLS0tLS0tLS0tLVxuV2h5IHdvdWxkIGFueW9uZSB3YW50IHRvIGdvIGZ1bGwgYmF0Y2ggaW4gdGhpcyBkYXkgYW5kIGFnZT9cblxuYEtlcmFzYCBpcyBhIHBvd2VyZnVsIHRvb2wgZm9yIGRldmVsb3BpbmcgcHJlZGljdGl2ZSBtb2RlbHMgYW5kIG9wdGltaXppbmcgdGhlaXIgcGFyYW1ldGVycyBpbiBhIGhpZ2gtbGV2ZWwgbGFuZ3VhZ2UuXG5XaGlsZSBpdHMgcHJpbWFyeSB1c2UgY2FzZSBpcyBsYXJnZS1zY2FsZSBkZWVwIGxlYXJuaW5nLCBLZXJhcydzIGF1dG8tZGlmZmVyZW50aWF0aW9uIHV0aWxpdGllcyAoZnJvbSBgVGVuc29yZmxvd2ApIHRoYXQgZW5hYmxlIHJhcGlkIHByb3RvdHlwaW5nIGFuZCBvcHRpbWl6YXRpb24gd2l0aCBncmFkaWVudC1iYXNlZCBtaW5pbWl6YXRpb24gYWxnb3JpdGhtcyBhcmUgZ3JlYXQgZm9yIG90aGVyIHVzZSBjYXNlcyBpbiBtYXRoZW1hdGljYWwgbW9kZWxsaW5nIGFuZCBudW1lcmljYWwgb3B0aW1pemF0aW9uLlxuXG5JZiB5b3UgYXJlIHdvcmtpbmcgd2l0aCBtb2RlbHMgb3IgZGF0YXNldHMgaW4gd2hpY2ggdHJhaW5pbmcgZGF0YSBjYW4gcmVhc29uYWJseSBmaXQgaW4gbWVtb3J5IG9uIGEgc2luZ2xlIG1hY2hpbmUsIHlvdSBtYXkgaGF2ZSBzaXR1YXRpb25zIGluIHdoaWNoIGRldGVybWluaXN0aWMgYWxnb3JpdGhtcyBsaWtlIGBMLUJGR1MgPGh0dHBzOi8vZG9jcy5zY2lweS5vcmcvZG9jL3NjaXB5L3JlZmVyZW5jZS9vcHRpbWl6ZS5taW5pbWl6ZS1sYmZnc2IuaHRtbCNvcHRpbWl6ZS1taW5pbWl6ZS1sYmZnc2I+YF8gb3IgYE5ld3Rvbi1DRyA8aHR0cHM6Ly9kb2NzLnNjaXB5Lm9yZy9kb2Mvc2NpcHkvcmVmZXJlbmNlL29wdGltaXplLm1pbmltaXplLW5ld3RvbmNnLmh0bWwjb3B0aW1pemUtbWluaW1pemUtbmV3dG9uY2c+YF8gYXJlIGNvbXBsZW1lbnRhcnkgb3IgdmlhYmxlIGFsdGVybmF0aXZlcyB0byB0aGUgKnN0b2NoYXN0aWMqIGBvcHRpbWl6ZXJzIDxodHRwczovL2tlcmFzLmlvL2FwaS9vcHRpbWl6ZXJzLz5gXyBhdmFpbGFibGUgaW4gYEtlcmFzYCwgc2luY2U6XG5cbi0gZGV0ZXJtaW5pc3RpYyBhbGdvcml0aG1zIGRvbid0IHJlcXVpcmUgYWRkaXRpb25hbCBoeXBlcnBhcmFtdGVyIHR1bmluZyB0byBlbnN1cmUgY29udmVyZ2VuY2U7IGlmIHlvdSdyZSBqdXN0IHByb3RvdHlwaW5nIHNvbWV0aGluZyBzbWFsbCBhbmQgaGF2aW5nIHRyb3VibGUgdHVuaW5nIGxlYXJuaW5nIHJhdGVzLCB5b3UgbWF5IGp1c3Qgd2FudCB0byBjcmFuayBvdXQgTC1CRkdTIGZvciBhIGZldyBtaW51dGVzIGFzIGEgc2FuaXR5IGNoZWNrIHRoYXQgeW91ciBtb2RlbCBjYW4gaW4gZmFjdCBiZSBvcHRpbWl6ZWRcbi0gdGhlc2UgYWxnb3JpdGhtcyBtYXkgaGF2ZSBmYXN0ZXIgY29udmVyZ2VuY2UgdG8gYWNjdXJhdGUgc29sdXRpb25zIG9mIHRoZSBvcHRpbWl6YXRpb24gcHJvYmxlbSBpZiB0aGUgZGF0YXNldCBpcyBzbWFsbCBlbm91Z2ggdGhhdCBmdWxsIGJhdGNoIGdyYWRpZW50IGFuZCBIZXNzaWFuLXZlY3Rvci1wcm9kdWN0IGNvbXB1dGF0aW9uIHRpbWVzIGFyZW4ndCBwcm9oaWJpdGl2ZVxuXG5TbyBUTDtEUjogYmVjYXVzZSBMdWRkaXRlcyBleGlzdCBldmVuIGluIHRoZSBmaWVsZCBvZiBudW1lcmljYWwgb3B0aW1pemF0aW9uLlxuXG4uLiBMdWRkaXRlcyBvciBXYWNrb3MgbG9sPyBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTBDNHlCazZzeU9FI3Q9MW00OHNcblxuV2h5IFRoZSBOYW1lIEtvcm1vcz9cbi0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkJlY2F1c2UgYEtlcmFzYCBpcyBhIHBvd2VyZnVsIGFuZCB1c2VmdWwgdG9vbCwgYW5kIGlzIG5hbWVkIGFmdGVyIHRoZSBHcmVlayB3b3JkICrOus6tz4HOsc+CKiwgd2hpY2ggbWVhbnMgKmhvcm4qLlxuXG5gS29ybW9zYCBpcyByZWxhdGVkIHRvIGBLZXJhc2AsIGJ1dCBpdCdzIG5vdCB2ZXJ5IHBvd2VyZnVsIG9yIHVzZWZ1bC5cbkl0J3MgbmFtZWQgYWZ0ZXIgdGhlIEdyZWVrIHdvcmQgKs66zr/Pgc68z4zPgiosIHdoaWNoIG1lYW5zICpzdHVtcCouXG5cbkxpY2Vuc2UgXG49PT09PT09XG5UaGlzIHByb2plY3QgaXMgcmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLCBhbmQgY29udGFpbnMgYWRhcHRhdGlvbnMgb2Ygb3RoZXIgY29kZXMgcmVsZWFzZWQgdW5kZXIgdGhlIEFwYWNoZSBhbmQgTUlUIGxpY2Vuc2VzLlxuUGxlYXNlIHNlZSB0aGUgaGVhZGVyIGluIGVhY2ggc291cmNlIGZpbGUgZm9yIHRoZSBhcHBsaWNhYmxlIGxpY2Vuc2UgYW5kIGNvcHlyaWdodCBub3RpY2VzIHRoZXJlaW4uIFxuXG5TZXR1cFxuPT09PT1cblxuUmVxdWlyZW1lbnRzXG4tLS0tLS0tLS0tLS1cblxuVGhlIGBrb3Jtb3NgIHBhY2thZ2UgaXMgYnVpbHQgZm9yOlxuXG4tIFB5dGhvbiAzKyBcbi0gVGVuc29yZmxvdyAyKyAoYW5kIHRoZSByZXNwZWN0aXZlIGBgdGVuc29yZmxvdy5rZXJhc2BgIG1vZHVsZSB3aXRoIGl0KVxuLSBTY2lweSAwLjErIChhbnkgdmVyc2lvbiByZWFsbHksIHNpbmNlIHRoZSBgYHNjaXB5Lm9wdGltaXplLm1pbmltaXplYGAgc2lnbmF0dXJlIGlzIHN0YWJsZSlcblxuSW5zdGFsbGF0aW9uXG4tLS0tLS0tLS0tLS1cblxuSW5zdGFsbCB2aWEgdGhlIFB5UEkgcGFja2FnZSBba29ybW9zXShodHRwczovL3B5cGkub3JnL3Byb2plY3Qva29ybW9zLykgdXNpbmcgYHBpcGA6XG5cbi4uIGNvZGUtYmxvY2s6OiBweXRob25cblxuICBwaXAzIGluc3RhbGwga29ybW9zXG5cbkFsdGVybmF0aXZlbHksIGlmIHlvdSBsaWtlIHlvdXIgcmVsZWFzZXMgYmxvb2R5IHJhcmUgeW91IG1heSBpbnN0YWxsIGZyb20gYGdpdGAgZGlyZWN0bHk6XG5cbi4uIGNvZGUtYmxvY2s6OiBweXRob25cblxuICBwaXAzIGluc3RhbGwgZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9tYmh5bmVzL2tvcm1vc1xuXG5Vc2FnZSBFeGFtcGxlc1xuPT09PT09PT09PT09PT1cblxuQSBga29ybW9zYCBtb2RlbCBpcyBkcmFnLWFuZC1kcm9wIHJlcGxhY2VhYmxlIHdpdGggYW55IGBLZXJhc2AgbW9kZWwuXG5CZWxvdyB3ZSBwcm92aWRlIHNvbWUgdG95IGNvZGUgZXhhbXBsZXMsIGluY2x1ZGluZyBDb2xsYWJvcmF0aXZlIEZpbHRlcmluZyBhbmQgTU5JU1QgY2xhc3NpZmljYXRpb24gZXhhbXBsZXMgYWRhcHRlZCBmcm9tIHRoZSAqQ29kZSBFeGFtcGxlcyogc2VjdGlvbiBvZiBga2VyYXMuaW8gPGh0dHBzOi8va2VyYXMuaW8vZXhhbXBsZXMvPmBfLiBcblxuRXhhbXBsZTogTGluZWFyIFJlZ3Jlc3Npb24gd2l0aCBTZXF1ZW50aWFsIEFQSVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uLiBjb2RlLWJsb2NrOjogcHl0aG9uXG5cbiAgaW1wb3J0IG51bXB5IGFzIG5wXG4gIGZyb20gdGVuc29yZmxvdyBpbXBvcnQga2VyYXNcblxuICBpbXBvcnQga29ybW9zXG5cbiAgcmFuayA9IDUwXG5cbiAgIyBEZWZpbmUgdGhlIG1vZGVsIHVzaW5nIHRoZSBrZXJhcy5tb2RlbC5Nb2RlbCBTZXF1ZW50aWFsIEFQSVxuICBtb2RlbCA9IGtvcm1vcy5tb2RlbHMuQmF0Y2hPcHRpbWl6ZWRTZXF1ZW50aWFsTW9kZWwoKVxuICBtb2RlbC5hZGQoXG4gICAgICBrZXJhcy5sYXllcnMuRGVuc2UoXG4gICAgICAgICAgdW5pdHM9MSxcbiAgICAgICAgICBpbnB1dF9zaGFwZT0ocmFuaywpLFxuICAgICAgICAgIGFjdGl2YXRpb249Tm9uZSxcbiAgICAgICAgICB1c2VfYmlhcz1GYWxzZSxcbiAgICAgICAgICBrZXJuZWxfcmVndWxhcml6ZXI9a2VyYXMucmVndWxhcml6ZXJzLkwyKDFlLTMpLFxuICAgICAgICAgIGtlcm5lbF9pbml0aWFsaXplcj1cIm9uZXNcIixcbiAgICAgIClcbiAgKVxuICBsb3NzID0ga2VyYXMubG9zc2VzLk1lYW5TcXVhcmVkRXJyb3IoKVxuICBtb2RlbC5jb21waWxlKGxvc3M9bG9zcywgb3B0aW1pemVyPSdsLWJmZ3MtYicsIG1ldHJpY3M9WydtZWFuX2Fic29sdXRlX2Vycm9yJ10pXG5cbiAgIyBHZW5lcmF0ZSBzYW1wbGVzIG9mIG5vcm1hbGx5IGRpc3RyaWJ1dGVkIHJhbmRvbSBkYXRhXG4gIG5wLnJhbmRvbS5zZWVkKDEpXG4gIHcgPSBucC5yYW5kb20ubm9ybWFsKHNpemU9cmFuaylcbiAgWCA9IG5wLnJhbmRvbS5ub3JtYWwoc2l6ZT0oMTAwMCwgcmFuaykpXG4gIHkgPSBucC5leHBhbmRfZGltcyhYLmRvdCh3KSwgYXhpcz0xKVxuXG4gIFh2YWwgPSBucC5yYW5kb20ubm9ybWFsKHNpemU9KDEwMDAsIHJhbmspKVxuICB5dmFsID0gbnAuZXhwYW5kX2RpbXMoWHZhbC5kb3QodyksIGF4aXM9MSlcblxuICAjIEZpdCB0aGUgbW9kZWxcbiAgaGlzdG9yeSA9IG1vZGVsLmZpdChcbiAgICAgIHg9WCxcbiAgICAgIHk9eSxcbiAgICAgIGVwb2Nocz0xMCxcbiAgICAgIHZhbGlkYXRpb25fZGF0YT0oWHZhbCwgeXZhbCksXG4gICAgICBvcHRpb25zPXtcIm1heGNvcnNcIjogM30sICMgY2FuIHBhc3Mgb3B0aW9ucyBwYXlsb2FkIGlmIHNvIGRlc2lyZWRcbiAgKVxuICBiZXN0X2ZpdF93ZWlnaHRzID0gbnAucmVzaGFwZShtb2RlbC50cmFpbmFibGVfd2VpZ2h0c1swXS5udW1weSgpLCAoMSwgLTEpKVxuICBhc3NlcnQgbnAuYWxsY2xvc2UoYmVzdF9maXRfd2VpZ2h0cywgdywgMWUtMilcblxuV2UgY2FuIG5vdyBpbnNwZWN0IHRoZSBvcHRpbWl6YXRpb24gbWV0cmlzIHRyYWNlZCBpbiB0aGUgYGBoaXN0b3J5YGAgb2JqZWN0IHJldHVybmVkIGZyb20gYGBmaXQoKWBgLlxuVGhlIHRyYWluaW5nIG1ldHJpY3MgY2FwdHVyZWQgYnkgYGtvcm1vc2AgaW5jbHVkZSB0aGU6XG5cbi0gdHJhaW5pbmcgbG9zcyBmdW5jdGlvbiB2YWx1ZSAoaW5jbHVkaW5nIHJlZ3VsYXJpemF0aW9uIHRlcm1zKVxuLSAyLW5vcm0gb2YgdGhlIGJhdGNoIGdyYWRpZW50XG4tIG51bWJlciBvZiBldmFsdWF0aW9ucyBvZiB0aGUgbG9zcy9ncmFkaWVudCBmdW5jdGlvbiAoZXF1aXZhbGVudCB0byBhbiAqZXBvY2gqIGZvciBhIHN0b2NoYXN0aWMgb3B0aW1pemVyKVxuLSBudW1iZXIgb2YgZXZhbHVhdGlvbnMgb2YgdGhlIEhlc3NpYW4tdmVjdG9yLXByb2R1Y3QgZnVuY3Rpb24sIGlmIGFwcGxpY2FibGUgKGVxdWl2YWxlbnQgdG8gYW4gKmVwb2NoKiBmb3IgYSBzdG9jaGFzdGljIG9wdGltaXplcilcblxuLi4gY29kZS1ibG9jazo6IHB5dGhvblxuXG4gID4+PiBpbXBvcnQgcGFuZGFzIGFzIHBkOyBwZC5EYXRhRnJhbWUoaGlzdG9yeS5oaXN0b3J5KVxuICAgICAgICAgIGxvc3MgICAgICAgZ3JhZCAgZmdfZXZhbHMgIGhlc3NwX2V2YWxzICAgdmFsX2xvc3MgIHZhbF9tZWFuX2Fic29sdXRlX2Vycm9yXG4gIDAgIDc5LjEyMTk3MiAgMTcuOTQ2MjMzICAgICAgICAgMiAgICAgICAgICAgIDAgIDc4LjQxODEyMSAgICAgICAgICAgICAgICAgNy4xMzc4NjBcbiAgMSAgIDAuMTkyMDA1ICAgMC43MTMyNDIgICAgICAgICAzICAgICAgICAgICAgMCAgIDAuMjMyMTY0ICAgICAgICAgICAgICAgICAwLjM0NDY1N1xuICAyICAgMC4wNTY0MjkgICAwLjE4NjAxMyAgICAgICAgIDQgICAgICAgICAgICAwICAgMC4wNTkxNDAgICAgICAgICAgICAgICAgIDAuMDg4NzAwXG4gIDMgICAwLjA0NzM5NyAgIDAuMDQyNzYwICAgICAgICAgNSAgICAgICAgICAgIDAgICAwLjA0NzM0OCAgICAgICAgICAgICAgICAgMC4wMTU1MzFcbiAgNCAgIDAuMDQ3MDA2ICAgMC4wMDgwMTkgICAgICAgICA2ICAgICAgICAgICAgMCAgIDAuMDQ3MDA2ICAgICAgICAgICAgICAgICAwLjAwNjQwMVxuICA1ICAgMC4wNDY5OTEgICAwLjAwMTg1NCAgICAgICAgIDcgICAgICAgICAgICAwICAgMC4wNDY5OTQgICAgICAgICAgICAgICAgIDAuMDA1ODQ2XG4gIDYgICAwLjA0Njk5MCAgIDAuMDAwMzUwICAgICAgICAgOCAgICAgICAgICAgIDAgICAwLjA0Njk5MiAgICAgICAgICAgICAgICAgMC4wMDU2NzVcbiAgNyAgIDAuMDQ2OTkwICAgMC4wMDAwNzMgICAgICAgICA5ICAgICAgICAgICAgMCAgIDAuMDQ2OTkyICAgICAgICAgICAgICAgICAwLjAwNTY0MlxuICA4ICAgMC4wNDY5OTAgICAwLjAwMDA1MSAgICAgICAgMTEgICAgICAgICAgICAwICAgMC4wNDY5OTIgICAgICAgICAgICAgICAgIDAuMDA1NjQyXG5cbldlIGNhbiBub3cgYWxzbyAqcmVjb21waWxlKiB0aGUgbW9kZWwgdG8gdXNlIGEgc3RvY2hhc3RpYyBvcHRpbWl6ZXI7IGxldCdzIHJlZml0IHRoZSBtb2RlbCB1c2luZyBBREFNOlxuXG4uLiBjb2RlLWJsb2NrOjogcHl0aG9uXG5cbiAgIyBSZWNvbXBpbGUgdGhlIG1vZGVsIHRvIHVzZSBhIGRpZmZlcmVudCBvcHRpbWl6ZXIgKHRoaXMgZG9lc24ndCBjaGFuZ2UgaXRzIHdlaWdodHMpXG4gIG1vZGVsLmNvbXBpbGUobG9zcz1tb2RlbC5sb3NzLCBvcHRpbWl6ZXI9J2FkYW0nLCBtZXRyaWNzPVsnbWVhbl9hYnNvbHV0ZV9lcnJvciddKVxuXG4gICMgUmVzZXQgdGhlIHdlaWdodHNcbiAgbW9kZWwuc2V0X3dlaWdodHMoW25wLnJhbmRvbS5yYW5kb20oc2l6ZT0ocmFuaywgMSkpXSlcblxuICAjIEZpdCB0aGUgbW9kZWwgdXNpbmcgQURBTVxuICBoaXN0b3J5ID0gbW9kZWwuZml0KFxuICAgICAgeD1YLFxuICAgICAgeT15LFxuICAgICAgZXBvY2hzPTE1MCxcbiAgICAgIHZhbGlkYXRpb25fZGF0YT0oWHZhbCwgeXZhbCksXG4gIClcblxuVGhpcyBpcyBhIHNvbWV3aGF0IGNvbnRyaXZlZCBleGFtcGxlIGluIG1vZGVybiBtYWNoaW5lIGxlYXJuaW5nIChzbWFsbCBkYXRhc2V0IGFuZCBzaW1wbGUgbW9kZWwgd2l0aCB2ZXJ5IGZldyBwYXJhbWV0ZXJzKSwgYnV0IGl0J3MgdGhlIGtpbmQgb2YgY2xhc3NpY2FsIHVzZSBjYXNlIGluIHdoaWNoIGEgZGV0ZXJtaW5pc3RpYyBhbGdvcml0aG0gd2lsbCBjb252ZXJnZSBmYXN0ZXIgdGhhbiBhIHN0b2NoYXN0aWMgYWxnb3JpdGhtLiBJZiB5b3Ugd2VyZSBpbnRlcmVzdGVkIGluIGBLZXJhc2AgcHJpbWFyaWx5IGZvciB0aGUgbmljZSBgdGVuc29yZmxvd2AgQVBJIGFuZCBhdXRvZGlmZmVyZW50aWF0aW9uIHJvdXRpbmVzLCBidXQgaGFkIHVuc2V4eSwgbm9uLWRlZXAgbW9kZWxsaW5nIGdvYWxzLCB0aGlzIGJ1ZCdzIGZvciB5b3U6XG5cbi4uIGNvZGUtYmxvY2s6OiBweXRob25cblxuICA+Pj4gaW1wb3J0IHBhbmRhcyBhcyBwZDsgcGQuRGF0YUZyYW1lKGhpc3RvcnkuaGlzdG9yeSlcbiAgICAgICAgICAgIGxvc3MgIG1lYW5fYWJzb2x1dGVfZXJyb3IgICB2YWxfbG9zcyAgdmFsX21lYW5fYWJzb2x1dGVfZXJyb3JcbiAgMCAgICA1OS43NTEzNjkgICAgICAgICAgICAgNi4yMTgxMTEgIDUyLjUxODU2NiAgICAgICAgICAgICAgICAgNS43NTY4MzJcbiAgMSAgICA1MC4wNDI4MTIgICAgICAgICAgICAgNS42ODgyMTggIDQ1LjM0NDU4OSAgICAgICAgICAgICAgICAgNS4zNDYzMDBcbiAgMiAgICA0My42NzQxNTYgICAgICAgICAgICAgNS4zMDg4NjkgIDQwLjM2ODgzMiAgICAgICAgICAgICAgICAgNS4wNDM2NDFcbiAgMyAgICAzOS4wNzQyODAgICAgICAgICAgICAgNS4wMjEzMDQgIDM2LjQ5MjUyNyAgICAgICAgICAgICAgICAgNC43OTUxNDdcbiAgNCAgICAzNS4zODk5MTIgICAgICAgICAgICAgNC43ODE2NjYgIDMzLjQyMzcxMCAgICAgICAgICAgICAgICAgNC41ODg3NTRcbiAgLi4gICAgICAgICAuLi4gICAgICAgICAgICAgICAgICAuLi4gICAgICAgIC4uLiAgICAgICAgICAgICAgICAgICAgICAuLi5cbiAgMTQ1ICAgMC4wNDcwMzEgICAgICAgICAgICAgMC4wMDg5NjYgICAwLjA0NzAzMSAgICAgICAgICAgICAgICAgMC4wMDkwNDdcbiAgMTQ2ICAgMC4wNDcwMjMgICAgICAgICAgICAgMC4wMDg2MDYgICAwLjA0NzAyNSAgICAgICAgICAgICAgICAgMC4wMDg3MThcbiAgMTQ3ICAgMC4wNDcwMTcgICAgICAgICAgICAgMC4wMDgyNjggICAwLjA0NzAxOSAgICAgICAgICAgICAgICAgMC4wMDgzNDRcbiAgMTQ4ICAgMC4wNDcwMTIgICAgICAgICAgICAgMC4wMDc5MzQgICAwLjA0NzAxMyAgICAgICAgICAgICAgICAgMC4wMDc5NzdcbiAgMTQ5ICAgMC4wNDcwMDggICAgICAgICAgICAgMC4wMDc2NTUgICAwLjA0NzAwOSAgICAgICAgICAgICAgICAgMC4wMDc3MTdcblxuICBbMTUwIHJvd3MgeCA0IGNvbHVtbnNdXG4gICAgXG5cbkV4YW1wbGU6IExpbmVhciBSZWdyZXNzaW9uIHVzaW5nIHRoZSBGdW5jdGlvbmFsIEFQSVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblRoZSBzYW1lIGxpbmVhciByZWdyZXNzaW9uIG1vZGVsIGFzIGFib3ZlIG1heSBiZSBleHByZXNzZWQgZXF1aXZhbGVudGx5IGJ5IHRoZSBmdW5jdGlvbmFsIEFQSS5cbkhlcmUgd2Ugc3BlY2lmeSBhIGRpZmZlcmVudCBgc2NpcHlgIHNvbHZlciwgdGhlIE5ld3Rvbi1DRyBhbGdvcml0aG0gdGhhdCB1c2VzIEhlc3NpYW4tdmVjdG9yLXByb2R1Y3RzOlxuXG4uLiBjb2RlLWJsb2NrOjogcHl0aG9uXG5cbiAgIyBEZWZpbmUgdGhlIG1vZGVsIHVzaW5nIHRoZSBrZXJhcy5tb2RlbC5Nb2RlbCBmdW5jdGlvbmFsIEFQSVxuICBtb2RlbF9pbnB1dCA9IGtlcmFzLklucHV0KHNoYXBlPShyYW5rLCksIG5hbWU9XCJpbnB1dFwiKVxuICBtb2RlbF9vdXRwdXQgPSBrZXJhcy5sYXllcnMuRGVuc2UoXG4gICAgICB1bml0cz0xLFxuICAgICAgaW5wdXRfc2hhcGU9KHJhbmssKSxcbiAgICAgIGFjdGl2YXRpb249Tm9uZSxcbiAgICAgIHVzZV9iaWFzPUZhbHNlLFxuICAgICAga2VybmVsX3JlZ3VsYXJpemVyPWtlcmFzLnJlZ3VsYXJpemVycy5MMigxZS0zKSxcbiAgICAgIGtlcm5lbF9pbml0aWFsaXplcj1cIm9uZXNcIixcbiAgKShtb2RlbF9pbnB1dClcbiAgbW9kZWwgPSBrb3Jtb3MubW9kZWxzLkJhdGNoT3B0aW1pemVkTW9kZWwoXG4gICAgICBpbnB1dHM9bW9kZWxfaW5wdXQsXG4gICAgICBvdXRwdXRzPW1vZGVsX291dHB1dCxcbiAgKVxuICBsb3NzID0ga2VyYXMubG9zc2VzLk1lYW5TcXVhcmVkRXJyb3IoKVxuICBtb2RlbC5jb21waWxlKGxvc3M9bG9zcywgb3B0aW1pemVyPSduZXd0b24tY2cnLCBtZXRyaWNzPVsnbWVhbl9hYnNvbHV0ZV9lcnJvciddKVxuXG4gICMgRml0IHRoZSBtb2RlbCBvbiB0aGUgc2FtZSBkYXRhIGFzIHByZXZpb3VzbHlcbiAgaGlzdG9yeSA9IG1vZGVsLmZpdChcbiAgICAgIHg9WCxcbiAgICAgIHk9eSxcbiAgICAgIGVwb2Nocz0xMCxcbiAgICAgIHZhbGlkYXRpb25fZGF0YT0oWHZhbCwgeXZhbCksXG4gIClcbiAgYmVzdF9maXRfd2VpZ2h0cyA9IG5wLnJlc2hhcGUobW9kZWwudHJhaW5hYmxlX3dlaWdodHNbMF0ubnVtcHkoKSwgKDEsIC0xKSlcbiAgYXNzZXJ0IG5wLmFsbGNsb3NlKGJlc3RfZml0X3dlaWdodHMsIHcsIDFlLTIpXG5cblRoZSBOZXd0b24tQ0cgYWxnb3JpdGhtIGhhcyBzZWNvbmQgb3JkZXIgY29udmVyZ2VuY2UsIHNvIHdlIHNob3VsZCBmaW5kIHRoYXQgdGhlIGdyYWRpZW50IG5vcm0gaGFzIGRlY3JlYXNlZCBieSBzZXZlcmFsIG9yZGVycyBvZiBtYWduaXR1ZGUgbW9yZSB0aGFuIHdpdGggdGhlIEwtQkZHUy1CIGFsZ29yaXRobS5cbihPZiBjb3Vyc2UsIHByYWN0aWNhbGx5IHNwZWFraW5nIHRoaXMgaXMgYSBtb290IHBvaW50IGluIHRoZSB3b3JsZCBvZiBhcHByb3hpbWF0ZSBwYXJhbWV0ZXIgZXN0aW1hdGlvbiBkdWUgdG8gdGhlIGxpbWl0YXRpb25zIG9mIGJvdGggaW1wZXJmZWN0IG1vZGVscyBhbmQgc2FtcGxpbmcgYmlhcyB0aGF0IGV4aXN0cyBpbiB0cmFpbmluZyBkYXRhc2V0czogdGhlIG51bWVyaWNhbCBlcnJvciBpbiB0aGUgc29sdXRpb24gaXMgb3JkZXJzIG9mIG1hZ25pdHVkZSBzbWFsbGVyIHRoYW4gb3RoZXIgZXJyb3JzLi4uKVxuXG5FeGFtcGxlOiBDb2xsYWJvcmF0aXZlIEZpbHRlcmluZyBmb3IgSXRlbSBSZWNvbW1lbmRhdGlvblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuV2UgcHJlc2VudCBhIHNpbXBsZSBsaW5lYXIgbWF0cml4IGZhY3Rvcml6YXRpb24gbW9kZWwgZm9yIGJ1aWxkaW5nIGEgcmVjb21tZW5kZXIgc3lzdGVtIHVzaW5nIHRoZSBNb3ZpZUxlbnMgZGF0YXNldCwgYW5kIHVzZSB0aGUgc2FtZSBwcmVwcm9jZXNzaW5nIHN0ZXBzIGFzIGluIHRoZSBgS2VyYXNgIGV4YW1wbGUsIGBDb2xsYWJvcmF0aXZlIEZpbHRlcmluZyBmb3IgTW92aWUgUmVjb21tZW5kYXRpb25zIDxodHRwczovL2tlcmFzLmlvL2V4YW1wbGVzL3N0cnVjdHVyZWRfZGF0YS9jb2xsYWJvcmF0aXZlX2ZpbHRlcmluZ19tb3ZpZWxlbnMvPmBfLlxuXG4qKkRlZmluZSB0aGUgTW9kZWwqKlxuXG5XZSBkZWZpbmUgYSBzaW1wbGUgbWF0cml4IGZhY3Rvcml6YXRpb24gbW9kZWwgZm9yIGZhY3Rvcml6aW5nIHRoZSByYXRpbmdzIG1hdHJpeCBpbnRvIHRoZSBwcm9kdWN0IG9mIDIgbGF0ZW50IGZlYXR1cmUgbWF0cmljZXMsIHJlcHJlc2VudGVkIGJ5ICp1c2VyKiBhbmQgKml0ZW0qIGVtYmVkZGluZ3M6IFxuXG4uLiBjb2RlLWJsb2NrOjogcHl0aG9uXG5cbiAgaW1wb3J0IHRlbnNvcmZsb3cgYXMgdGZcbiAgZnJvbSB0ZW5zb3JmbG93IGltcG9ydCBrZXJhc1xuICBpbXBvcnQga29ybW9zXG5cbiAgZGVmIGJ1aWxkX21vZGVsKHJhbmssIG51bV91c2VycywgbnVtX2l0ZW1zLCAqKmt3YXJncyk6XG4gICAgICBpbnB1dHMgPSBbXG4gICAgICAgICAga2VyYXMuSW5wdXQoc2hhcGU9KDEsKSwgbmFtZT1cInVzZXJcIiwgZHR5cGU9dGYuaW50MzIpLFxuICAgICAgICAgIGtlcmFzLklucHV0KHNoYXBlPSgxLCksIG5hbWU9XCJpdGVtXCIsIGR0eXBlPXRmLmludDMyKSxcbiAgICAgIF0gXG4gICAgICB1c2VyX2VtYmVkZGluZyA9IGtlcmFzLmxheWVycy5FbWJlZGRpbmcoXG4gICAgICAgICAgaW5wdXRfZGltPShudW1fdXNlcnMgKyAxKSxcbiAgICAgICAgICBvdXRwdXRfZGltPXJhbmssXG4gICAgICAgICAgbWFza196ZXJvPVRydWUsXG4gICAgICAgICAgZW1iZWRkaW5nc19pbml0aWFsaXplcj1cIm5vcm1hbFwiLFxuICAgICAgICAgIGVtYmVkZGluZ3NfcmVndWxhcml6ZXI9a2VyYXMucmVndWxhcml6ZXJzLkwyKDFlLTUpLFxuICAgICAgICAgIG5hbWU9XCJ1c2VyX2VtYmVkZGluZ1wiLFxuICAgICAgKVxuICAgICAgaXRlbV9lbWJlZGRpbmcgPSBrZXJhcy5sYXllcnMuRW1iZWRkaW5nKFxuICAgICAgICAgIGlucHV0X2RpbT0obnVtX2l0ZW1zICsgMSksXG4gICAgICAgICAgb3V0cHV0X2RpbT1yYW5rLFxuICAgICAgICAgIG1hc2tfemVybz1UcnVlLFxuICAgICAgICAgIGVtYmVkZGluZ3NfaW5pdGlhbGl6ZXI9XCJub3JtYWxcIixcbiAgICAgICAgICBlbWJlZGRpbmdzX3JlZ3VsYXJpemVyPWtlcmFzLnJlZ3VsYXJpemVycy5MMigxZS01KSxcbiAgICAgICAgICBuYW1lPVwiaXRlbV9lbWJlZGRpbmdcIixcbiAgICAgIClcbiAgICAgIGZlYXR1cmVzID0gW1xuICAgICAgICAgIHVzZXJfZW1iZWRkaW5nKGlucHV0c1swXSksXG4gICAgICAgICAgaXRlbV9lbWJlZGRpbmcoaW5wdXRzWzFdKSxcbiAgICAgIF1cbiAgICAgIG91dHB1dCA9IGtlcmFzLmxheWVycy5Eb3QoYXhlcz0yLCBub3JtYWxpemU9RmFsc2UpKGZlYXR1cmVzKVxuICAgICAgbW9kZWwgPSBrb3Jtb3MubW9kZWxzLkJhdGNoT3B0aW1pemVkTW9kZWwoXG4gICAgICAgICAgaW5wdXRzPWlucHV0cyxcbiAgICAgICAgICBvdXRwdXRzPW91dHB1dCxcbiAgICAgICAgICAqKmt3YXJnc1xuICAgICAgKVxuICAgICAgcmV0dXJuIG1vZGVsXG5cbioqUHJlcGFyZSB0aGUgRGF0YSoqXG5cbldlIHJ1biB0aGUgc2FtZSBwcmUtcHJvY2Vzc2luZyBzdGVwcyBhcyBpbiB0aGUgYEtlcmFzYCBleGFtcGxlIGFib3ZlLlxuKFBsZWFzZSBiZSBhd2FyZSB0aGF0IHRoZXJlIGFyZSBtZXRob2RvbG9naWNhbCBlcnJvcnMgaW4gdGhlc2Ugc3RlcHMgdGhhdCB3ZSBoYXZlIGxlZnQgdW5jaGFuZ2VkOiAoMSkgaXQgaXMgbm90IGNvcnJlY3QgdG8gc3BsaXQgdGhlIHRyYWluaW5nIGFuZCB0ZXN0aW5nIGRhdGEgdW5pZm9ybWx5IHJhbmRvbWx5LCBzaW5jZSBzb21lIG1vdmllcyBoYXZlIG9ubHkgMSByYXRpbmcgYW5kIGhlbmNlIHNob3VsZCBub3QgYmUgbWVtYmVycyBvZiB0aGUgdGVzdGluZyBzZXQsIGFuZCAoMikgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGNvbnN0cnVjdCBhIGZhY3Rvcml6YXRpb24gbW9kZWwgdGhhdCByZXByZXNlbnRzIGVhY2ggdXNlci9pdGVtIGJ5IGEgdmVjdG9yIG9mIHJhbmsgYGBrYGAgaWYgYGBrYGAgaXMgKmdyZWF0ZXIqIHRoYW4gdGhlIG51bWJlciBvZiBvYnNlcnZhdGlvbnMgKHJhdGluZ3MpIHRoYXQgdGhhdCB1c2VyL2l0ZW0gaGFzIGluIHRoZSB0cmFpbmluZyBkYXRhLS0tc3VjaCBhIHN5c3RlbSBpcyBgb3ZlcmRldGVybWluZWQgPGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL092ZXJkZXRlcm1pbmVkX3N5c3RlbT5gXykuXG5cbi4uIGNvZGUtYmxvY2s6OiBweXRob25cblxuICBpbXBvcnQgcGFuZGFzIGFzIHBkXG4gIGltcG9ydCBudW1weSBhcyBucFxuICBmcm9tIHppcGZpbGUgaW1wb3J0IFppcEZpbGVcbiAgaW1wb3J0IHRlbnNvcmZsb3cgYXMgdGZcbiAgZnJvbSB0ZW5zb3JmbG93IGltcG9ydCBrZXJhc1xuICBmcm9tIHRlbnNvcmZsb3cua2VyYXMgaW1wb3J0IGxheWVyc1xuICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGhcblxuICAjIERvd25sb2FkIHRoZSBkYXRhIGZyb20gaHR0cDovL2ZpbGVzLmdyb3VwbGVucy5vcmcvZGF0YXNldHMvbW92aWVsZW5zL21sLWxhdGVzdC1zbWFsbC56aXBcIlxuICAjIFVzZSB0aGUgcmF0aW5ncy5jc3YgZmlsZVxuICBtb3ZpZWxlbnNfZGF0YV9maWxlX3VybCA9IChcbiAgICAgIFwiaHR0cDovL2ZpbGVzLmdyb3VwbGVucy5vcmcvZGF0YXNldHMvbW92aWVsZW5zL21sLWxhdGVzdC1zbWFsbC56aXBcIlxuICApXG4gIG1vdmllbGVuc196aXBwZWRfZmlsZSA9IGtlcmFzLnV0aWxzLmdldF9maWxlKFxuICAgICAgXCJtbC1sYXRlc3Qtc21hbGwuemlwXCIsIG1vdmllbGVuc19kYXRhX2ZpbGVfdXJsLCBleHRyYWN0PUZhbHNlXG4gIClcbiAga2VyYXNfZGF0YXNldHNfcGF0aCA9IFBhdGgobW92aWVsZW5zX3ppcHBlZF9maWxlKS5wYXJlbnRzWzBdXG4gIG1vdmllbGVuc19kaXIgPSBrZXJhc19kYXRhc2V0c19wYXRoIC8gXCJtbC1sYXRlc3Qtc21hbGxcIlxuXG4gICMgT25seSBleHRyYWN0IHRoZSBkYXRhIHRoZSBmaXJzdCB0aW1lIHRoZSBzY3JpcHQgaXMgcnVuLlxuICBpZiBub3QgbW92aWVsZW5zX2Rpci5leGlzdHMoKTpcbiAgICAgIHdpdGggWmlwRmlsZShtb3ZpZWxlbnNfemlwcGVkX2ZpbGUsIFwiclwiKSBhcyB6aXA6XG4gICAgICAgICAgIyBFeHRyYWN0IGZpbGVzXG4gICAgICAgICAgcHJpbnQoXCJFeHRyYWN0aW5nIGFsbCB0aGUgZmlsZXMgbm93Li4uXCIpXG4gICAgICAgICAgemlwLmV4dHJhY3RhbGwocGF0aD1rZXJhc19kYXRhc2V0c19wYXRoKVxuICAgICAgICAgIHByaW50KFwiRG9uZSFcIilcblxuICByYXRpbmdzX2ZpbGUgPSBtb3ZpZWxlbnNfZGlyIC8gXCJyYXRpbmdzLmNzdlwiXG4gIGRmID0gcGQucmVhZF9jc3YocmF0aW5nc19maWxlKVxuXG4gIHVzZXJfaWRzID0gZGZbXCJ1c2VySWRcIl0udW5pcXVlKCkudG9saXN0KClcbiAgdXNlcjJ1c2VyX2VuY29kZWQgPSB7eDogaSBmb3IgaSwgeCBpbiBlbnVtZXJhdGUodXNlcl9pZHMpfVxuICB1c2VyZW5jb2RlZDJ1c2VyID0ge2k6IHggZm9yIGksIHggaW4gZW51bWVyYXRlKHVzZXJfaWRzKX1cbiAgbW92aWVfaWRzID0gZGZbXCJtb3ZpZUlkXCJdLnVuaXF1ZSgpLnRvbGlzdCgpXG4gIG1vdmllMm1vdmllX2VuY29kZWQgPSB7eDogaSBmb3IgaSwgeCBpbiBlbnVtZXJhdGUobW92aWVfaWRzKX1cbiAgbW92aWVfZW5jb2RlZDJtb3ZpZSA9IHtpOiB4IGZvciBpLCB4IGluIGVudW1lcmF0ZShtb3ZpZV9pZHMpfVxuICBkZltcInVzZXJcIl0gPSBkZltcInVzZXJJZFwiXS5tYXAodXNlcjJ1c2VyX2VuY29kZWQpXG4gIGRmW1wibW92aWVcIl0gPSBkZltcIm1vdmllSWRcIl0ubWFwKG1vdmllMm1vdmllX2VuY29kZWQpXG5cbiAgbnVtX3VzZXJzID0gbGVuKHVzZXIydXNlcl9lbmNvZGVkKVxuICBudW1fbW92aWVzID0gbGVuKG1vdmllX2VuY29kZWQybW92aWUpXG4gIGRmW1wicmF0aW5nXCJdID0gZGZbXCJyYXRpbmdcIl0udmFsdWVzLmFzdHlwZShucC5mbG9hdDMyKVxuICAjIG1pbiBhbmQgbWF4IHJhdGluZ3Mgd2lsbCBiZSB1c2VkIHRvIG5vcm1hbGl6ZSB0aGUgcmF0aW5ncyBsYXRlclxuICBtaW5fcmF0aW5nID0gbWluKGRmW1wicmF0aW5nXCJdKVxuICBtYXhfcmF0aW5nID0gbWF4KGRmW1wicmF0aW5nXCJdKVxuXG4gIHByaW50KFxuICAgICAgXCJOdW1iZXIgb2YgdXNlcnM6IHt9LCBOdW1iZXIgb2YgTW92aWVzOiB7fSwgTWluIHJhdGluZzoge30sIE1heCByYXRpbmc6IHt9XCIuZm9ybWF0KFxuICAgICAgICAgIG51bV91c2VycywgbnVtX21vdmllcywgbWluX3JhdGluZywgbWF4X3JhdGluZ1xuICAgICAgKVxuICApXG5cbiAgZGYgPSBkZi5zYW1wbGUoZnJhYz0xLCByYW5kb21fc3RhdGU9NDIpXG4gIHggPSBkZltbXCJ1c2VyXCIsIFwibW92aWVcIl1dLnZhbHVlc1xuICAjIE5vcm1hbGl6ZSB0aGUgdGFyZ2V0cyBiZXR3ZWVuIDAgYW5kIDEuIE1ha2VzIGl0IGVhc3kgdG8gdHJhaW4uXG4gIHkgPSBkZltcInJhdGluZ1wiXS5hcHBseShsYW1iZGEgeDogKHggLSBtaW5fcmF0aW5nKSAvIChtYXhfcmF0aW5nIC0gbWluX3JhdGluZykpLnZhbHVlc1xuICAjIEFzc3VtaW5nIHRyYWluaW5nIG9uIDkwJSBvZiB0aGUgZGF0YSBhbmQgdmFsaWRhdGluZyBvbiAxMCUuXG4gIHRyYWluX2luZGljZXMgPSBpbnQoMC45ICogZGYuc2hhcGVbMF0pXG4gIHhfdHJhaW4sIHhfdmFsLCB5X3RyYWluLCB5X3ZhbCA9IChcbiAgICAgIHhbOnRyYWluX2luZGljZXNdLFxuICAgICAgeFt0cmFpbl9pbmRpY2VzOl0sXG4gICAgICB5Wzp0cmFpbl9pbmRpY2VzXSxcbiAgICAgIHlbdHJhaW5faW5kaWNlczpdLFxuICApXG5cbioqVHJhaW4gdGhlIE1vZGVsKipcblxuV2UgbWF5IG5vdyB0cmFpbiBvdXIgZmFjdG9yaXphdGlvbiBtb2RlbDpcblxuLi4gY29kZS1ibG9jazo6IHB5dGhvblxuXG4gIHJhbmsgPSA1XG4gIG1vZGVsID0gYnVpbGRfbW9kZWwocmFuaywgbnVtX3VzZXJzLCBudW1fbW92aWVzKVxuICBtb2RlbC5jb21waWxlKFxuICAgICAgbG9zcz10Zi5rZXJhcy5sb3NzZXMuTWVhblNxdWFyZWRFcnJvcigpLFxuICAgICAgb3B0aW1pemVyPVwibC1iZmdzLWJcIixcbiAgKVxuXG4gIGhpc3RvcnkgPSBtb2RlbC5maXQoXG4gICAgeD0oeF90cmFpbls6LCAwXSwgeF90cmFpbls6LCAxXSksXG4gICAgeT15X3RyYWluLFxuICAgIGJhdGNoX3NpemU9MioqMTQsXG4gICAgZXBvY2hzPTEwLFxuICAgIHZlcmJvc2U9MVxuICAgIHZhbGlkYXRpb25fZGF0YT0oKHhfdmFsWzosIDBdLCB4X3ZhbFs6LCAxXSksIHlfdmFsKSxcbiAgKVxuXG4uLiBjb2RlLWJsb2NrOjogcHl0aG9uXG5cbiAgPj4+IGltcG9ydCBwYW5kYXMgYXMgcGQ7IHBkLkRhdGFGcmFtZShoaXN0b3J5Lmhpc3RvcnkpXG4gICAgICAgICAgbG9zcyAgICAgIGdyYWQgIGZnX2V2YWxzICBoZXNzcF9ldmFscyAgdmFsX2xvc3NcbiAgMCAgIDAuNDk5NDMxICAwLjAwMTA1NSAgICAgICAgIDIgICAgICAgICAgICAwICAwLjQ5NzQyNFxuICAxICAgMC40OTIwOTEgIDAuMDEwMzE4ICAgICAgICAgNSAgICAgICAgICAgIDAgIDAuNDk2NzQ5XG4gIDIgICAwLjQ5MTA2NyAgMC4wMTUzNjcgICAgICAgICA3ICAgICAgICAgICAgMCAgMC40OTkxMjdcbiAgMyAgIDAuNDYxMTQwICAwLjAxMjczMSAgICAgICAgIDkgICAgICAgICAgICAwICAwLjQ3Mjc3MlxuICA0ICAgMC4yNzEwMjAgIDAuMDE3NTE1ICAgICAgICAxMiAgICAgICAgICAgIDAgIDAuMzI3MTczXG4gIDUgICAwLjIyODY1OCAgMC4wMjE1ODUgICAgICAgIDE0ICAgICAgICAgICAgMCAgMC4yOTgxMjBcbiAgNiAgIDAuMTU2NDgxICAwLjAxMjY5OCAgICAgICAgMTYgICAgICAgICAgICAwICAwLjIyNjM0OVxuICA3ICAgMC4xMjUzNTAgIDAuMDA3ODMzICAgICAgICAxNyAgICAgICAgICAgIDAgIDAuMTkzMTQ1XG4gIDggICAwLjEwMTQxMSAgMC4wMDc5NTcgICAgICAgIDE4ICAgICAgICAgICAgMCAgMC4xNjk1MTNcbiAgOSAgIDAuMDkzMzc1ICAwLjAxMzIzMyAgICAgICAgMTkgICAgICAgICAgICAwICAwLjE2MjIwOFxuICAxMCAgMC4wODI4NzYgIDAuMDA1MzA3ICAgICAgICAyMCAgICAgICAgICAgIDAgIDAuMTUyNDIzXG4gIDExICAwLjA3Nzc4OSAgMC4wMDQ3MTcgICAgICAgIDIxICAgICAgICAgICAgMCAgMC4xNDk3MzFcbiAgMTIgIDAuMDcyODY3ICAwLjAwNDQyMCAgICAgICAgMjIgICAgICAgICAgICAwICAwLjE0NDk3OVxuICAxMyAgMC4wNjY5MjcgIDAuMDA2NDYzICAgICAgICAyMyAgICAgICAgICAgIDAgIDAuMTM3ODUyXG4gIDE0ICAwLjA2Mzg1MCAgMC4wMDQ5ODMgICAgICAgIDI0ICAgICAgICAgICAgMCAgMC4xMzYzMDZcbiAgMTUgIDAuMDYxODk3ICAwLjAwMjM1MyAgICAgICAgMjUgICAgICAgICAgICAwICAwLjEzMzYzM1xuICAxNiAgMC4wNjA1MTQgIDAuMDAxODY3ICAgICAgICAyNiAgICAgICAgICAgIDAgIDAuMTMyNDcxXG4gIDE3ICAwLjA1ODYyOSAgMC4wMDIyMTEgICAgICAgIDI3ICAgICAgICAgICAgMCAgMC4xMzE0MDJcbiAgMTggIDAuMDU3NDA4ICAwLjAwMzcxMCAgICAgICAgMjggICAgICAgICAgICAwICAwLjEzMDcwNFxuICAxOSAgMC4wNTYxMTEgIDAuMDAxNDg0ICAgICAgICAyOSAgICAgICAgICAgIDAgIDAuMTI5ODUwXG4gXG5cbkV4YW1wbGU6IE1OSVNUIGNvbnZuZXRcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQXMgYSBtb3JlIHJlYWxpc3RpYyBleGFtcGxlIG9mIHVzaW5nIGBrb3Jtb3NgIG9uIGEgY2Fub25pY2FsIGRhdGFzZXQsIHdlIGFkYXB0IHRoZSBzYW1wbGUgY2xhc3NpZmljYXRpb24gcHJvYmxlbSBmcm9tIHRoZSBgTU5JU1QgY29udm5ldCA8aHR0cHM6Ly9rZXJhcy5pby9leGFtcGxlcy92aXNpb24vbW5pc3RfY29udm5ldC8+YF8gZXhhbXBsZS5cblBsZWFzZSBub3RlIHRoYXQgdGhpcyBjb252b2x1dGlvbmFsIG5ldHdvcmsgbW9kZWwgaGFzIGEgbGFyZ2UgbnVtYmVyIG9mIGhpZ2hseSBjb3JyZWxhdGVkIHBhcmFtZXRlcnMgdG8gb3B0aW1pemUsIGFuZCBzdG9jaGFzdGljIGFsZ29yaXRobXMgbGlrZSBBREFNIHdpbGwgZ2VuZXJhbGx5IHBlcmZvcm0gYmV0dGVyIGFuZCBwcm92aWRlIGJldHRlciByZXN1bHRzLlxuSG93ZXZlciB3ZSBwcm92aWRlIGl0IGFzIGFuIGV4YW1wbGUgb2YgaG93IGJvdGggc3RvY2hhc3RpYyBhbmQgZGV0ZXJtaW5pc3RpYyBhbGdvcml0aG1zIG1heSBiZSBjb21iaW5lZCBieSAqcmVjb21waWxpbmcqIGEgYGtvcm1vc2AgbW9kZWwuXG5cbioqUHJlcGFyZSB0aGUgRGF0YSoqXG5cbi4uIGNvZGUtYmxvY2s6OiBweXRob25cblxuICBpbXBvcnQgbnVtcHkgYXMgbnBcblxuICBmcm9tIHRlbnNvcmZsb3cgaW1wb3J0IGtlcmFzIFxuICBmcm9tIGtlcmFzIGltcG9ydCBsYXllcnNcblxuICAjIE1vZGVsIC8gZGF0YSBwYXJhbWV0ZXJzXG4gIG51bV9jbGFzc2VzID0gMTBcbiAgaW5wdXRfc2hhcGUgPSAoMjgsIDI4LCAxKVxuXG4gICMgTG9hZCB0aGUgZGF0YSBhbmQgc3BsaXQgaXQgYmV0d2VlbiB0cmFpbiBhbmQgdGVzdCBzZXRzXG4gICh4X3RyYWluLCB5X3RyYWluKSwgKHhfdGVzdCwgeV90ZXN0KSA9IGtlcmFzLmRhdGFzZXRzLm1uaXN0LmxvYWRfZGF0YSgpXG5cbiAgIyBTY2FsZSBpbWFnZXMgdG8gdGhlIFswLCAxXSByYW5nZVxuICB4X3RyYWluID0geF90cmFpbi5hc3R5cGUoXCJmbG9hdDMyXCIpIC8gMjU1XG4gIHhfdGVzdCA9IHhfdGVzdC5hc3R5cGUoXCJmbG9hdDMyXCIpIC8gMjU1XG4gICMgTWFrZSBzdXJlIGltYWdlcyBoYXZlIHNoYXBlICgyOCwgMjgsIDEpXG4gIHhfdHJhaW4gPSBucC5leHBhbmRfZGltcyh4X3RyYWluLCAtMSlcbiAgeF90ZXN0ID0gbnAuZXhwYW5kX2RpbXMoeF90ZXN0LCAtMSlcbiAgcHJpbnQoXCJ4X3RyYWluIHNoYXBlOlwiLCB4X3RyYWluLnNoYXBlKVxuICBwcmludCh4X3RyYWluLnNoYXBlWzBdLCBcInRyYWluIHNhbXBsZXNcIilcbiAgcHJpbnQoeF90ZXN0LnNoYXBlWzBdLCBcInRlc3Qgc2FtcGxlc1wiKVxuXG4gICMgY29udmVydCBjbGFzcyB2ZWN0b3JzIHRvIGJpbmFyeSBjbGFzcyBtYXRyaWNlc1xuICB5X3RyYWluID0ga2VyYXMudXRpbHMudG9fY2F0ZWdvcmljYWwoeV90cmFpbiwgbnVtX2NsYXNzZXMpXG4gIHlfdGVzdCA9IGtlcmFzLnV0aWxzLnRvX2NhdGVnb3JpY2FsKHlfdGVzdCwgbnVtX2NsYXNzZXMpXG5cbioqQnVpbGQgdGhlIE1vZGVsKipcblxuLi4gY29kZS1ibG9jazo6IHB5dGhvblxuICBcbiAgZnJvbSBrb3Jtb3MubW9kZWxzIGltcG9ydCBCYXRjaE9wdGltaXplZFNlcXVlbnRpYWxNb2RlbFxuXG4gIGRlZiBidWlsZF9tb2RlbCgpOlxuICAgICAgbW9kZWwgPSBCYXRjaE9wdGltaXplZFNlcXVlbnRpYWxNb2RlbChcbiAgICAgICAgICBbXG4gICAgICAgICAgICAgIGtlcmFzLklucHV0KHNoYXBlPWlucHV0X3NoYXBlKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLkNvbnYyRCgzMiwga2VybmVsX3NpemU9KDMsIDMpLCBhY3RpdmF0aW9uPVwicmVsdVwiKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLk1heFBvb2xpbmcyRChwb29sX3NpemU9KDIsIDIpKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLkNvbnYyRCg2NCwga2VybmVsX3NpemU9KDMsIDMpLCBhY3RpdmF0aW9uPVwicmVsdVwiKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLk1heFBvb2xpbmcyRChwb29sX3NpemU9KDIsIDIpKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLkZsYXR0ZW4oKSxcbiAgICAgICAgICAgICAgbGF5ZXJzLkRyb3BvdXQoMC41KSxcbiAgICAgICAgICAgICAgbGF5ZXJzLkRlbnNlKG51bV9jbGFzc2VzLCBhY3RpdmF0aW9uPVwic29mdG1heFwiKSxcbiAgICAgICAgICBdXG4gICAgICApXG4gICAgICByZXR1cm4gbW9kZWxcblxuICBtb2RlbCA9IGJ1aWxkX21vZGVsKClcbiAgbW9kZWwuc3VtbWFyeSgpXG5cbi4uIGNvZGUtYmxvY2s6OlxuXG4gIE1vZGVsOiBcImJhdGNoX29wdGltaXplZF9zZXF1ZW50aWFsX21vZGVsXCJcbiAgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19cbiAgIExheWVyICh0eXBlKSAgICAgICAgICAgICAgICAgICBPdXRwdXQgU2hhcGUgICAgICAgICAgICAgIFBhcmFtICNcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIGNvbnYyZCAoQ29udjJEKSAgICAgICAgICAgICAgICAoTm9uZSwgMjYsIDI2LCAzMikgICAgICAgIDMyMFxuXG4gICBtYXhfcG9vbGluZzJkIChNYXhQb29saW5nMkQpICAgKE5vbmUsIDEzLCAxMywgMzIpICAgICAgICAwXG5cbiAgIGNvbnYyZF8xIChDb252MkQpICAgICAgICAgICAgICAoTm9uZSwgMTEsIDExLCA2NCkgICAgICAgIDE4NDk2XG5cbiAgIG1heF9wb29saW5nMmRfMSAoTWF4UG9vbGluZzJEKSAoTm9uZSwgNSwgNSwgNjQpICAgICAgICAgIDBcblxuICAgZmxhdHRlbiAoRmxhdHRlbikgICAgICAgICAgICAgIChOb25lLCAxNjAwKSAgICAgICAgICAgICAgMFxuXG4gICBkcm9wb3V0IChEcm9wb3V0KSAgICAgICAgICAgICAgKE5vbmUsIDE2MDApICAgICAgICAgICAgICAwXG5cbiAgIGRlbnNlIChEZW5zZSkgICAgICAgICAgICAgICAgICAoTm9uZSwgMTApICAgICAgICAgICAgICAgIDE2MDEwXG5cbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgVG90YWwgcGFyYW1zOiAzNCw4MjZcbiAgVHJhaW5hYmxlIHBhcmFtczogMzQsODI2XG4gIE5vbi10cmFpbmFibGUgcGFyYW1zOiAwXG4gIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXG5cbioqVHJhaW4gdGhlIE1vZGVsKipcblxuV2UgdXNlIHRoaXMgZXhhbXBsZSB0cmFpbiB0aGUgbW9kZWwgYnkgcnVubmluZyBhIGNvbWJpbmF0aW9uIG9mIGRpZmZlcmVudCBhbGdvcml0aG1zLlxuV2Ugc3RhcnQgYnkgcnVubmluZyBBREFNIGZvciAxIGVwb2NoLCBhbmQgdGhlbiB1c2luZyB0aGlzIHNvbHV0aW9uIGFzIGEgd2FybSBzdGFydCBpbml0aWFsIGd1ZXNzIGZvciBhIGJhdGNoIHNvbHZlciBieSAqcmVjb21waWxpbmcqIHRoZSBtb2RlbDpcblxuLi4gY29kZS1ibG9jazo6IHB5dGhvblxuXG4gIGxvc3MgPSBrZXJhcy5sb3NzZXMuQ2F0ZWdvcmljYWxDcm9zc2VudHJvcHkoKVxuICAjIFRyYWluIGEgbW9kZWwgd2l0aCBBREFNXG4gIG1vZGVsID0gYnVpbGRfbW9kZWwoKVxuICBtb2RlbC5jb21waWxlKGxvc3M9bG9zcywgb3B0aW1pemVyPVwiYWRhbVwiLCBtZXRyaWNzPVtcImFjY3VyYWN5XCJdKVxuICBoaXN0MSA9IG1vZGVsLmZpdCh4X3RyYWluLCB5X3RyYWluLCBiYXRjaF9zaXplPTIqKjUsIGVwb2Nocz0xLCB2YWxpZGF0aW9uX2RhdGE9KHhfdGVzdCwgeV90ZXN0KSlcblxuICAjIENvbnRpbnVlIHRyYWluaW5nIHRoZSBtb2RlbCB3aXRoIGEgYmF0Y2ggYWxnb3JpdGhtLlxuICAjIFdlIGNhbiBpbnN0YW50aWF0ZSB0aGUgb3B0aW1pemVyIGFzIHdlbGwgaW5zdGVhZCBvZiBhIHN0cmluZyBpZGVudGlmaWVyXG4gIG9wdGltaXplciA9IGtvcm1vcy5vcHRpbWl6ZXJzLlNjaXB5QmF0Y2hPcHRpbWl6ZXIoKVxuICBtb2RlbC5jb21waWxlKGxvc3M9bG9zcywgb3B0aW1pemVyPW9wdGltaXplciwgbWV0cmljcz1bXCJhY2N1cmFjeVwiXSlcblxuICAjIFdlIGNhbiBzcGVjaWZ5IHRoZSBtZXRob2QgYW5kIGFueSBvcHRpb25zIGZvciBpdCBpbiBmaXQgYXMga2V5d29yZCB3YXJnc1xuICBoaXN0MiA9IG1vZGVsLmZpdChcbiAgICAgIHhfdHJhaW4sXG4gICAgICB5X3RyYWluLFxuICAgICAgYmF0Y2hfc2l6ZT0yKioxNCwgIyB0aGlzIGlzIG11Y2ggbGFyZ2VyIHRoYW4gZm9yIHN0b2NoYXN0aWMgc29sdmVycyFcbiAgICAgIGVwb2Nocz0zLFxuICAgICAgdmFsaWRhdGlvbl9kYXRhPSh4X3Rlc3QsIHlfdGVzdCksXG4gICAgICBtZXRob2Q9J2JmZ3MnLFxuICApXG5cbkltcGxlbWVudGF0aW9uIERldGFpbHNcbj09PT09PT09PT09PT09PT09PT09PT1cblxuVGhlIGBrb3Jtb3NgIHBhY2thZ2UgaW1wbGVtZW50cyBhbiBpbnRlcmZhY2UgZm9yIGJhdGNoIG9wdGltaXphdGlvbiBhbmQgd3JhcHMgYGBzY2lweS5vcHRpbWl6ZS5taW5pbWl6ZWBgIGluIHRoYXQgaW50ZXJmYWNlIGluIHRoZSBmb2xsb3dpbmcgc3RlcHM6XG5cbi0gV2UgY3JlYXRlIGEgc3ViY2xhc3Mgb2YgYGBrZXJhcy5Nb2RlbGBgLCBgYEJhdGNoT3B0aW1pemVkTW9kZWxgYCAoYW5kIGBgQmF0Y2hPcHRpbWl6ZWRTZXF1ZW50aWFsTW9kZWxgYCB0byBleHRlbmQgdGhlIGBTZXF1ZW50aWFsYCBBUEkpLlxuXG4tIFRoZSBzdWJjbGFzcyBwcm92aWRlcyBhIGBgZml0X2JhdGNoKClgYCBtZXRob2Qgd2l0aCBuZWFybHkgaWRlbnRpY2FsIHNpZ25hdHVyZSB0byB0aGUgcGFyZW50IGBgZml0KClgYCwgYnV0IGRvZXMgbm90IHBlcmZvcm0gc3RvY2hhc3RpYyBtaW5pLWJhdGNoIG9wdGltaXphdGlvbi4gSW5zdGVhZCwgdGhpcyBtZXRob2Qgb2ZmbG9hZHMgYWxsIG9wdGltaXphdGlvbiB0byB0aGUgdGhlIG1vZGVsJ3MgYGBvcHRpbWl6ZXJgYCBhdHRyaWJ1dGUsIHdoaWNoIG11c3QgaW1wbGVtZW50IHRoZSBtZXRob2QgYGBtaW5pbWl6ZSgpYGAgdG8gcGVyZm9ybSB0cmFpbmluZyBieSBtaW5pbWl6aW5nIHRoZSB0aGUgbG9zcyBmdW5jdGlvbiBwcm92aWRlZCBkdXJpbmcgbW9kZWwgY29tcGlsYXRpb24uXG5cbi0gV2hlbiBhIGBgQmF0Y2hPcHRpbWl6ZWRNb2RlbGBgIGlzIGNvbXBpbGVkIHdpdGggYSBgYEJhdGNoT3B0aW16ZXJgYCAob3Igc3RyaW5nIGlkZW50aWZpZXIgZm9yIG9uZSkgYXMgaXRzIGBvcHRpbWl6ZXJgIGFyZ3VtZW50LCB0aGUgYGBmaXQoKWBgIG1ldGhvZCBpbmhlcml0ZWQgZnJvbSBgYGtlcmFzLk1vZGVsYGAgaXMgb3ZlcnJpZGVuIHdpdGggYSBwb2ludGVyIHRvIGBgZml0X2JhdGNoKClgYCAoc3VjaCB0aGF0IGEgYGBCYXRjaE9wdGltaXplZE1vZGVsYGAgbWF5IGJlIHRyYWluZWQgd2l0aCBlaXRoZXIgc3RvY2hhc3RpYyBvciBkZXRlcm1pbmlzdGljIHNvbHZlcnMsIGRlcGVuZGluZyBvbiBob3cgaXQncyBjb21waWxlZCkuXG5cbi0gVGhlIGBgU2NpcHlCYXRjaE9wdGltaXplcmBgIGNsYXNzIGV4dGVuZHMgdGhlIGBgQmF0Y2hPcHRpbWl6ZXJgYCBpbnRlcmZhY2UgYW5kIHVzZXMgdGhlIGBgc2NpcHkub3B0aW1pemUubWluaW1pemVgYCByb3V0aW5lIHRvIGZpdCB0aGUgbW9kZWwuXG5cbkF0IGZpcnN0IGZhY2UgdGhpcyBpcyBtb3JlIGNvbXBsaWNhdGVkIHRoYW4gdGhlICpyZWNvbW1lbmRlZCogd2F5IG9mIGV4dGVuZGluZyBgS2VyYXNgIHRvIHBlcmZvcm0gY3VzdG9tIHRyYWluaW5nIChpLmUuIGJ5IG92ZXJyaWRpbmcgYGBrZXJhcy5Nb2RlbC50cmFpbl9zdGVwKClgYCBzdWNoIGFzIGluIHRoZSBhcnRpY2xlIGBDdXN0b21pemluZyB3aGF0IGhhcHBlbnMgaW4gZml0KCkgPGh0dHBzOi8va2VyYXMuaW8vZ3VpZGVzL2N1c3RvbWl6aW5nX3doYXRfaGFwcGVuc19pbl9maXQvPmBfKS5cbkhvd2V2ZXIsIHVuZm9ydHVuYXRlbHkgd2UgZm91bmQgZXh0ZW5kaW5nIGBgdHJhaW5fc3RlcCgpYGAgdG8gYmUgYXdrd2FyZCBvciBpbmZlYXNpYmxlIGZvciBpbXBsZW1lbnRpbmcgYSBiYXRjaCBvcHRpbWl6YXRpb24gYWxnb3JpdGhtIHdoaWxlIHN0aWxsIG1ha2luZyB1c2Ugb2YgdGhlIHN0YW5kYXJkIGBLZXJhc2AgdXRpbGl0aWVzIGZvciBjb21wdXRpbmcgKnZhbGlkYXRpb24gbWV0cmljcyogYXQgZWFjaCBpdGVyYXRpb24gZW5kIChlcG9jaCkuXG5PdmVycmlkaW5nIHRoZSBtb2RlbCBgYHRyYWluX3N0ZXAoKWBgIChhbmQgcHV0dGluZyB0aGUgY2FsbCB0byBgc2NpcHkub3B0aW1pemUubWluaW1pemVgIGluc2lkZSBpdCkgd291bGQgbWVhbiB0aGF0IGZyb20gdGhlIGBLZXJhc2AgbW9kZWwncyBwZXJzcGVjdGl2ZSBvbmx5IGEgc2luZ2xlICplcG9jaCogd291bGQgYmUgcGVyZm9ybWVkLCBzdWNoIHRoYXQgdmFsaWRhdGlvbiBtZXRyaWNzIHdvdWxkIG9ubHkgYmUgY29tcHV0ZWQgYXQgdGhlIHZlcnkgZW5kIG9mIHRoZSBvcHRpbXphdGlvbiByb3V0aW5lLlxuXG5BY2tub3dsZWRnZW1lbnRzICYgUmVsYXRlZCBXb3JrXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5UaGlzIHBhY2thZ2UgaGFzIGFkYXB0ZWQgY29kZSBmcm9tIHRoZSBmb2xsb3dpbmcgc291cmNlczpcblxuLSBgUGktWXVlaCBDaHVhbmcncyA8aHR0cHM6Ly9weWNoYW8uY29tL2NvbnRhY3QtdXMtYW5kLXBncC1rZXkvPmBfIE1JVC1saWNlbnNlZCBgc2NpcHkub3B0aW1pemUubWluaW1pemVfbGJmZ3NgIHdyYXBwZXIgb24gYGdpdGh1YiBoZXJlIDxodHRwczovL2dpc3QuZ2l0aHViLmNvbS9waXl1ZWgvNzEyZWM3ZDQ1NDA0ODlhYWQyZGNmYjgwZjlhNTQ5OTM+YF8uXG4tIGBBbGxlbiBMYXZvaWUncyA8aHR0cHM6Ly9naXRodWIuY29tL2FsbGVubGF2b2llPmBfIEhlc3NpYW4tdmVjdG9yLXByb2R1Y3Qgcm91dGluZXMgZnJvbSBgdGVuc29yZmxvd2AsIGF2YWlsYWJsZSBpbiB0aGUgYGZvbGxvd2luZyBjb21taXQgPGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5zb3JmbG93L3RlbnNvcmZsb3cvY29tbWl0LzViMzdlN2VkMTRlYjdkZGRhZThhMGU4NzQzNTU5NTM0N2EzMTViYjc+YF8gdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlIHZlcnNpb24gMi5cblxuVGhlcmUgaXMgYWxzbyBhIHJlbGF0ZWQgcHJvamVjdCBga2VyYXMtb3B0IDxodHRwczovL2dpdGh1Yi5jb20vcGVkcm8tci1tYXJxdWVzL2tlcmFzLW9wdD5gXyB3aXRoIHRoZSBzYW1lIGdvYWwgYnV0IGRpZmZlcmVudCBpbXBsZW1lbnRhdGlvbiBhbmQgQVBJLlxuVGhlIGBrb3Jtb3NgIHBhY2thZ2UgaXMgcmVjb21tZW5kZWQgb3ZlciBga2VyYXMtb3B0YCBiZWNhdXNlIGl0cyBpbXBsZW1lbnRhdGlvbiBpcyBmYXN0ZXIgYW5kIG1vcmUgcm9idXN0IHdoZW4gdHJhaW5pbmcgbW9kZWxzIHdpdGggbGFyZ2UgbWVtb3J5IHJlcXVpcmVtZW50cywgaXQgZXhwb3NlcyBhbGwgb2YgdGhlIGFyZ3VtZW50cyB0byBgYHNjaXB5Lm9wdGltaXplLm1pbmltaXplYGAgaWYgeW91IHdpc2ggdG8gc29sdmUgYSBjb25zdHJhaW5lZCBvcHRpbWl6YXRpb24gcHJvYmxlbSwgYW5kIGlzIGEgbGl0dGxlIGJpdCBtb3JlIHNlZW1sZXNzIHRvIHVzZSBhcyBwYXJ0IG9mIHRoZSBuYXRpdmUgYEtlcmFzYCB3b3JrZmxvdy5cblxuIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC94LXJzdCIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL21iaHluZXMva29ybW9zIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImtvcm1vcyIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva29ybW9zLyIs
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva29ybW9zLyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9tYmh5bmVzL2tvcm1vcyI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva29ybW9zLzAuMS40LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgInRlbnNvcmZsb3cgKD49MikiLA==
ICAgICAgIm51bXB5Iiw=
ICAgICAgInNjaXB5Ig==
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zIiw=
ICAgICJzdW1tYXJ5IjogIkFuIGludGVyZmFjZSB0byBzY2lweS5vcHRpbWl6ZS5taW5pbWl6ZSBmb3IgdHJhaW5pbmcgS2VyYXMgbW9kZWxzIHdpdGggYmF0Y2ggb3B0aW1pemF0aW9uIGFsZ29yaXRobXMgbGlrZSBMLUJGR1MuIiw=
ICAgICJ2ZXJzaW9uIjogIjAuMS40Iiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNDgyNDY5Myw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjEuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0YjY2NzQ5YTk3NGE1MWE2ZTBiNTc4M2EzNDk0NmQ2YTAxOWUxODRiNzcxOWMzZTBiZTQxYmM5MmY3NzQ0N2E3Iiw=
ICAgICAgICAgICJtZDUiOiAiNDE3ZTEwMjE4OGZiYmFhZDgwMjg0OTllNjJlOGJhZWYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzc1MTkyMWQzZDRiZWE5OWQ2MTdiZDE5ZmVjYzI1MWZmZjk3MTUwYzE0NzJhYTViOTJhMzM0N2I2MWNiMDhmMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia29ybW9zLTAuMS40LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0MTdlMTAyMTg4ZmJiYWFkODAyODQ5OWU2MmU4YmFlZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49MyIs
ICAgICAgICAic2l6ZSI6IDMzNzkwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wOC0yMVQwMjowMzo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wOC0yMVQwMjowMzo1Ni45MTcwMDZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80Yi82Ni83NDlhOTc0YTUxYTZlMGI1NzgzYTM0OTQ2ZDZhMDE5ZTE4NGI3NzE5YzNlMGJlNDFiYzkyZjc3NDQ3YTcva29ybW9zLTAuMS40LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5MmFjNjkzOGY5ZWI3OWVhNGZhNDNmMGJmZmQ0MmVmYTU4NGJiZjNkYWY3ZmE3MDY4MzAzZjdkNWM1N2EwOWMxIiw=
ICAgICAgICAgICJtZDUiOiAiM2I1OWU0Njk5NDg1MDQ4YWMxOGJlZTU1OGE5YmI1NjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWY3YmJkM2I0YWMzYWRiYTZhNDYyYWRjMjEzMDI3YmQwYmY4ZmNkYTlkNDNhZjU4NjM0ZmY5YmRhYjk1MTg1ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia29ybW9zLTAuMS40LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzYjU5ZTQ2OTk0ODUwNDhhYzE4YmVlNTU4YTliYjU2NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49MyIs
ICAgICAgICAic2l6ZSI6IDM3MzczLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wOC0yMVQwMjowMzo1OSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wOC0yMVQwMjowMzo1OS44MzU5OTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Mi9hYy82OTM4ZjllYjc5ZWE0ZmE0M2YwYmZmZDQyZWZhNTg0YmJmM2RhZjdmYTcwNjgzMDNmN2Q1YzU3YTA5YzEva29ybW9zLTAuMS40LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNGI2Njc0OWE5NzRhNTFhNmUwYjU3ODNhMzQ5NDZkNmEwMTllMTg0Yjc3MTljM2UwYmU0MWJjOTJmNzc0NDdhNyIs
ICAgICAgICAibWQ1IjogIjQxN2UxMDIxODhmYmJhYWQ4MDI4NDk5ZTYyZThiYWVmIiw=
ICAgICAgICAic2hhMjU2IjogImM3NTE5MjFkM2Q0YmVhOTlkNjE3YmQxOWZlY2MyNTFmZmY5NzE1MGMxNDcyYWE1YjkyYTMzNDdiNjFjYjA4ZjAi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImtvcm1vcy0wLjEuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNDE3ZTEwMjE4OGZiYmFhZDgwMjg0OTllNjJlOGJhZWYiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMiLA==
ICAgICAgInNpemUiOiAzMzc5MCw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDgtMjFUMDI6MDM6NTYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDgtMjFUMDI6MDM6NTYuOTE3MDA2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNGIvNjYvNzQ5YTk3NGE1MWE2ZTBiNTc4M2EzNDk0NmQ2YTAxOWUxODRiNzcxOWMzZTBiZTQxYmM5MmY3NzQ0N2E3L2tvcm1vcy0wLjEuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOTJhYzY5MzhmOWViNzllYTRmYTQzZjBiZmZkNDJlZmE1ODRiYmYzZGFmN2ZhNzA2ODMwM2Y3ZDVjNTdhMDljMSIs
ICAgICAgICAibWQ1IjogIjNiNTllNDY5OTQ4NTA0OGFjMThiZWU1NThhOWJiNTY2Iiw=
ICAgICAgICAic2hhMjU2IjogImVmN2JiZDNiNGFjM2FkYmE2YTQ2MmFkYzIxMzAyN2JkMGJmOGZjZGE5ZDQzYWY1ODYzNGZmOWJkYWI5NTE4NWYi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImtvcm1vcy0wLjEuNC50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiM2I1OWU0Njk5NDg1MDQ4YWMxOGJlZTU1OGE5YmI1NjYiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMiLA==
ICAgICAgInNpemUiOiAzNzM3Myw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDgtMjFUMDI6MDM6NTkiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDgtMjFUMDI6MDM6NTkuODM1OTk0WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOTIvYWMvNjkzOGY5ZWI3OWVhNGZhNDNmMGJmZmQ0MmVmYTU4NGJiZjNkYWY3ZmE3MDY4MzAzZjdkNWM1N2EwOWMxL2tvcm1vcy0wLjEuNC50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
