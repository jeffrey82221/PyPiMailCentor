ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiS2VubmV0aCBSZWl0eiwgQW5hbnQgQXN0aGFuYSIs
ICAgICJhdXRob3JfZW1haWwiOiAiYW5hbnQuYXN0eUBnbWFpbC5jb20sIG1lQGtlbm5ldGhyZWl0ei5jb20iLA==
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEFwYWNoZSBTb2Z0d2FyZSBMaWNlbnNlIiw=
ICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogRW5nbGlzaCIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyLjYiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjMi
ICAgIF0s

ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiVU5LTk9XTiIs
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL3B5dGhvbi1yZXF1ZXN0cy5vcmcsIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmFudGFzdHkvcmVxdWVzdHMiLA==
ICAgICJrZXl3b3JkcyI6IG51bGws
ICAgICJsaWNlbnNlIjogIkNvcHlyaWdodCAyMDEzIEtlbm5ldGggUmVpdHpcblxuICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuIiw=
ICAgICJtYWludGFpbmVyIjogbnVsbCw=
ICAgICJtYWludGFpbmVyX2VtYWlsIjogbnVsbCw=
ICAgICJuYW1lIjogInJlcXVlc3RzX1NTTF92MyIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVxdWVzdHNfU1NMX3YzLyIs
ICAgICJwbGF0Zm9ybSI6ICJVTktOT1dOIiw=
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVxdWVzdHNfU1NMX3YzLyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogIlVOS05PV04iLA==
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9weXRob24tcmVxdWVzdHMub3JnLCBodHRwczovL2dpdGh1Yi5jb20vYW5hbnRhc3R5L3JlcXVlc3RzIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcmVxdWVzdHNfU1NMX3YzLzIuMS4wLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiBudWxsLA==
ICAgICJzdW1tYXJ5IjogIlB5dGhvbiBIVFRQIGZvciBIdW1hbnMuIiw=
ICAgICJ2ZXJzaW9uIjogIjIuMS4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA5NDE2MDEs
ICAicmVsZWFzZXMiOiB7
ICAgICIyLjEuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkM2EyNmE1MzI3N2Y3N2EyZDA1MmM1NGNkOGQ4MWQyNjI1YWMxMmY1NDA0NjIwN2VjODNhNWU5NDUyODQ4MzQ5Iiw=
ICAgICAgICAgICJtZDUiOiAiNjY0N2U2YzIxMjc3OWZmNDY3MTEzZTg5NWQ3N2VlNTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTU0MmU3ZGFiYzMxN2JlOGNjMjUwYTg0ZmQ5ZjQ3OTA3NmMzMDlmOWY4YmI1NzhhODg3ZTBjZDg3ZGM4OGNhMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicmVxdWVzdHNfU1NMX3YzLTIuMS4wLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2NjQ3ZTZjMjEyNzc5ZmY0NjcxMTNlODk1ZDc3ZWU1NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDQyNTEwNSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxMy0xMi0xMVQwNTozNDowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxMy0xMi0xMVQwNTozNDowMS42NDE3MDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kMy9hMi82YTUzMjc3Zjc3YTJkMDUyYzU0Y2Q4ZDgxZDI2MjVhYzEyZjU0MDQ2MjA3ZWM4M2E1ZTk0NTI4NDgzNDkvcmVxdWVzdHNfU1NMX3YzLTIuMS4wLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZDNhMjZhNTMyNzdmNzdhMmQwNTJjNTRjZDhkODFkMjYyNWFjMTJmNTQwNDYyMDdlYzgzYTVlOTQ1Mjg0ODM0OSIs
ICAgICAgICAibWQ1IjogIjY2NDdlNmMyMTI3NzlmZjQ2NzExM2U4OTVkNzdlZTU0Iiw=
ICAgICAgICAic2hhMjU2IjogIjU1NDJlN2RhYmMzMTdiZThjYzI1MGE4NGZkOWY0NzkwNzZjMzA5ZjlmOGJiNTc4YTg4N2UwY2Q4N2RjODhjYTAi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInJlcXVlc3RzX1NTTF92My0yLjEuMC50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNjY0N2U2YzIxMjc3OWZmNDY3MTEzZTg5NWQ3N2VlNTQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiA0MjUxMDUs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTMtMTItMTFUMDU6MzQ6MDEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTMtMTItMTFUMDU6MzQ6MDEuNjQxNzA0WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZDMvYTIvNmE1MzI3N2Y3N2EyZDA1MmM1NGNkOGQ4MWQyNjI1YWMxMmY1NDA0NjIwN2VjODNhNWU5NDUyODQ4MzQ5L3JlcXVlc3RzX1NTTF92My0yLjEuMC50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
