ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiSmluYSBBSSIs
ICAgICJhdXRob3JfZW1haWwiOiAiaGVsbG9AamluYS5haSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIkVudmlyb25tZW50IDo6IENvbnNvbGUiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IEVkdWNhdGlvbiIs
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IFNjaWVuY2UvUmVzZWFyY2giLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEFwYWNoZSBTb2Z0d2FyZSBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjEwIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjkiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFVuaXggU2hlbGwiLA==
ICAgICAgIlRvcGljIDo6IERhdGFiYXNlIDo6IERhdGFiYXNlIEVuZ2luZXMvU2VydmVycyIs
ICAgICAgIlRvcGljIDo6IEludGVybmV0IDo6IFdXVy9IVFRQIDo6IEluZGV4aW5nL1NlYXJjaCIs
ICAgICAgIlRvcGljIDo6IE11bHRpbWVkaWEgOjogVmlkZW8iLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmciLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UiLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogSW1hZ2UgUmVjb2duaXRpb24iLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogTWF0aGVtYXRpY3MiLA==
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50Iiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyIs
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyA6OiBQeXRob24gTW9kdWxlcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIhW10oLmdpdGh1Yi9iYW5uZXIucG5nKVxuXG48cCBhbGlnbj1cImNlbnRlclwiPlxuPGI+Q3JlYXRlIGNvbXBlbGxpbmcgRGlzY28gRGlmZnVzaW9uIGFydHdvcmtzIGluIG9uZSBsaW5lPC9iPlxuPC9wPlxuXG48cCBhbGlnbj1jZW50ZXI+XG48YSBocmVmPVwiaHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2Rpc2NvYXJ0L1wiPjxpbWcgc3JjPVwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9weXBpL3YvZGlzY29hcnQ/c3R5bGU9ZmxhdC1zcXVhcmUmYW1wO2xhYmVsPVJlbGVhc2VcIiBhbHQ9XCJQeVBJXCI+PC9hPlxuPGEgaHJlZj1cImh0dHBzOi8vaHViLmRvY2tlci5jb20vcmVwb3NpdG9yeS9kb2NrZXIvamluYWFpL2Rpc2NvYXJ0XCI+PGltZyBhbHQ9XCJEb2NrZXIgQ2xvdWQgQnVpbGQgU3RhdHVzXCIgc3JjPVwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9kb2NrZXIvY2xvdWQvYnVpbGQvamluYWFpL2Rpc2NvYXJ0P2xvZ289ZG9ja2VyJmxvZ29Db2xvcj13aGl0ZSZzdHlsZT1mbGF0LXNxdWFyZVwiPjwvYT5cbjxhIGhyZWY9XCJodHRwczovL3NsYWNrLmppbmEuYWlcIj48aW1nIHNyYz1cImh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvU2xhY2stMy4xay1ibHVldmlvbGV0P2xvZ289c2xhY2smYW1wO2xvZ29Db2xvcj13aGl0ZSZzdHlsZT1mbGF0LXNxdWFyZVwiPjwvYT5cbjxhIGhyZWY9XCJodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZ2l0aHViL2ppbmEtYWkvZGlzY29hcnQvYmxvYi9tYWluL2Rpc2NvYXJ0LmlweW5iXCI+PGltZyBzcmM9XCJodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL09wZW4taW4lMjBDb2xhYi1icmlnaHRncmVlbj9sb2dvPWdvb2dsZS1jb2xhYiZzdHlsZT1mbGF0LXNxdWFyZVwiIGFsdD1cIk9wZW4gaW4gR29vZ2xlIENvbGFiXCIvPjwvYT5cbjwvcD5cblxuRGlzY29BcnQgaXMgYW4gZWxlZ2FudCB3YXkgb2YgY3JlYXRpbmcgY29tcGVsbGluZyBEaXNjbyBEaWZmdXNpb248c3VwPjxhIGhyZWY9XCIjZXhhbXBsZS1hcHBsaWNhdGlvblwiPlsqXTwvYT48L3N1cD4gYXJ0d29ya3MgZm9yIGdlbmVyYXRpdmUgYXJ0aXN0cywgQUkgZW50aHVzaWFzdHMgYW5kIGhhcmQtY29yZSBkZXZlbG9wZXJzLiBEaXNjb0FydCBoYXMgYSBtb2Rlcm4gJiBwcm9mZXNzaW9uYWwgQVBJIHdpdGggYSBiZWF1dGlmdWwgY29kZWJhc2UsIGVuc3VyaW5nIGhpZ2ggdXNhYmlsaXR5IGFuZCBtYWludGFpbmFiaWxpdHkuIEl0IGludHJvZHVjZXMgaGFuZHkgZmVhdHVyZXMgc3VjaCBhcyByZXN1bHQgcmVjb3ZlcnkgYW5kIHBlcnNpc3RlbmNlLCBnUlBDL0hUVFAgc2VydmluZyB3L28gVExTLCBwb3N0LWFuYWx5c2lzLCBlYXNpbmcgdGhlIGludGVncmF0aW9uIHRvIGxhcmdlciBjcm9zcy1tb2RhbCBvciBtdWx0aS1tb2RhbCBhcHBsaWNhdGlvbnMuXG5cbjxzdWI+PHN1cD48YSBpZD1cImV4YW1wbGUtYXBwbGljYXRpb25cIj5bKl08L2E+IFxuRGlzY28gRGlmZnVzaW9uIGlzIGEgR29vZ2xlIENvbGFiIE5vdGVib29rIHRoYXQgbGV2ZXJhZ2VzIENMSVAtR3VpZGVkIERpZmZ1c2lvbiB0byBhbGxvdyBvbmUgdG8gY3JlYXRlIGNvbXBlbGxpbmcgYW5kIGJlYXV0aWZ1bCBpbWFnZXMgZnJvbSB0ZXh0IHByb21wdHMuXG48L3N1cD48L3N1Yj5cblxuXG7wn5KvICoqQmVzdC1pbi1jbGFzcyoqOiBpbmR1c3RyeS1sZXZlbCBlbmdpbmVlcmluZywgdG9wLW5vdGNoIGNvZGUgcXVhbGl0eSwgbGVhbiBkZXBlbmRlbmNpZXMsIHNtYWxsIFJBTS9WUkFNIGZvb3RwcmludDsgaW1wb3J0YW50IGJ1ZyBmaXhlcywgZmVhdHVyZSBpbXByb3ZlbWVudHMgW3ZzLiB0aGUgb3JpZ2luYWwgREQ1LjZdKEZFQVRVUkVTLm1kKS4gXG5cbvCfkbwgKipBdmFpbGFibGUgdG8gYWxsKio6IHNtb290aCBpbnN0YWxsIGZvciAqc2VsZi1ob3N0aW5nKiwgR29vZ2xlIENvbGFiICpmcmVlIHRpZXIqLCBub24tR1VJIChJUHl0aG9uKSBlbnZpcm9ubWVudCwgYW5kIENMSSEgTm8gYnJhaW5mdWNrLCBubyBkZXBlbmRlbmN5IGhlbGwsIG5vIHN0YWNrb3ZlcmZsb3cuIFxuXG7wn46oICoqRm9jdXMgb24gY3JlYXRlIG5vdCBjb2RlKio6IG9uZS1saW5lciBgY3JlYXRlKClgIHdpdGggYSBQeXRob25pYyBpbnRlcmZhY2UsIGF1dG9jb21wbGV0aW9uIGluIElERSwgYW5kIHBvd2VyZnVsIGZlYXR1cmVzLiBGZXRjaCByZWFsLXRpbWUgcmVzdWx0cyBhbnl3aGVyZSBhbnl0aW1lLCBubyBtb3JlIHdvcnJ5IG9uIHNlc3Npb24gb3V0cmFnZSBvbiBHb29nbGUgQ29sYWIuIFNldCBpbml0aWFsIHN0YXRlIGVhc2lseSBmb3IgbW9yZSBlZmZpY2llbnQgcGFyYW1ldGVyIGV4cGxvcmF0aW9uLlxuXG7wn4+tICoqUmVhZHkgZm9yIGludGVncmF0aW9uICYgcHJvZHVjdGlvbioqOiBidWlsdCBvbiB0b3Agb2YgW0RvY0FycmF5XShodHRwczovL2dpdGh1Yi5jb20vamluYS1haS9kb2NhcnJheSkgZGF0YSBzdHJ1Y3R1cmUsIGVuam95IHNtb290aCBpbnRlZ3JhdGlvbiB3aXRoIFtKaW5hXShodHRwczovL2dpdGh1Yi5jb20vamluYS1haS9qaW5hKSwgW0NMSVAtYXMtc2VydmljZV0oaHR0cHM6Ly9naXRodWIuY29tL2ppbmEtYWkvY2xpcC1hcy1zZXJ2aWNlKSBhbmQgb3RoZXIgY3Jvc3MtL211bHRpLW1vZGFsIGFwcGxpY2F0aW9ucy5cblxu4piB77iPIFsqKkFzLWEtc2VydmljZSoqXSgjc2VydmluZyk6IHNpbXBseSBgcHl0aG9uIC1tIGRpc2NvYXJ0IHNlcnZlYCwgRGlzY29BcnQgaXMgbm93IGEgaGlnaC1wZXJmb3JtYW5jZSBsb3ctbGF0ZW5jeSBzZXJ2aWNlIHN1cHBvcnRzIGdSUEMvSFRUUC93ZWJzb2NrZXRzIGFuZCBUTFMuIFNjYWxpbmcgdXAvZG93biBpcyBvbmUtbGluZTsgQ2xvdWQtbmF0aXZlIGZlYXR1cmVzIGUuZy4gS3ViZXJuZXRlcywgUHJvbWV0aGV1cyBhbmQgR3JhZmFuYSBpcyBvbmUtbGluZS4gW1VuYmVsaWV2YWJsZSBzaW1wbGUgdGhhbmtzIHRvIEppbmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9qaW5hLWFpL2ppbmEpLlxuXG5cbiMjIFtHYWxsZXJ5IHdpdGggcHJvbXB0c10oaHR0cHM6Ly90d2l0dGVyLmNvbS9oeGlhby9zdGF0dXMvMTU0Mjk2NzkzODM2OTY4NzU1Mj9zPTIwJnQ9RE8yN0VLTk1BRHp2NFdqSExRaVBGQSkgXG5cbkRvIHlvdSBzZWUgdGhlIGBkaXNjb2FydC1pZGAgaW4gZWFjaCB0d2VldD8gVG8gZ2V0IHRoZSBjb25maWcgJiBwcm9tcHRzLCBzaW1wbHk6XG5cbmBgYHB5dGhvblxuZnJvbSBkaXNjb2FydCBpbXBvcnQgc2hvd19jb25maWdcblxuc2hvd19jb25maWcoJ2Rpc2NvYXJ0LWlkJylcbmBgYFxuXG4jIyBJbnN0YWxsXG5cblB5dGhvbiAzLjcrIGFuZCBDVURBLWVuYWJsZWQgUHlUb3JjaCBpcyByZXF1aXJlZC5cblxuYGBgYmFzaFxucGlwIGluc3RhbGwgZGlzY29hcnRcbmBgYFxuXG5UaGlzIGFwcGxpZXMgdG8gYm90aCAqc2VsZi1ob3N0aW5nKiwgKkdvb2dsZSBDb2xhYiosIHN5c3RlbSBpbnRlZ3JhdGlvbiwgbm9uLUdVSSBlbnZpcm9ubWVudHMuXG5cbi0gKipTZWxmLWhvc3RlZCBKdXB5dGVyKio6IHRvIHJ1biBhIEp1cHl0ZXIgTm90ZWJvb2sgb24geW91ciBvd24gR1BVIG1hY2hpbmUsIHRoZSBlYXNpZXN0IHdheSBpcyB0byBbdXNlIG91ciBwcmVidWlsdCBEb2NrZXIgaW1hZ2VdKCNydW4taW4tZG9ja2VyKS5cbi0gKipVc2UgaXQgZnJvbSBDTEkqKjogW2BweXRob24gLW0gZGlzY29hcnQgY3JlYXRlYF0oI2NsaSkgYW5kIGBweXRob24gLW0gZGlzY29hcnQgY29uZmlnYCBhcmUgQ0xJIGNvbW1hbmRzLlxuLSAqKlVzZSBpdCBhcyBhIHNlcnZpY2UqKjogW2BweXRob24gLW0gZGlzY29hcnQgc2VydmVgXSgjc2VydmluZykgYWxsb3dzIG9uZSB0byBydW4gaXQgYXMgZ1JQQy9IVFRQL3dlYnNvY2tldHMgc2VydmljZS5cblxuXG4jIyBHZXQgU3RhcnRlZFxuXG48YSBocmVmPVwiaHR0cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2dpdGh1Yi9qaW5hLWFpL2Rpc2NvYXJ0L2Jsb2IvbWFpbi9kaXNjb2FydC5pcHluYlwiPjxpbWcgc3JjPVwiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9PcGVuLWluJTIwQ29sYWItYnJpZ2h0Z3JlZW4/bG9nbz1nb29nbGUtY29sYWImc3R5bGU9ZmxhdC1zcXVhcmVcIiBhbHQ9XCJPcGVuIGluIEdvb2dsZSBDb2xhYlwiLz48L2E+XG5cbiMjIyBDcmVhdGUgYXJ0d29ya3NcblxuYGBgcHl0aG9uXG5mcm9tIGRpc2NvYXJ0IGltcG9ydCBjcmVhdGVcblxuZGEgPSBjcmVhdGUoKVxuYGBgXG5cblRoYXQncyBpdCEgSXQgd2lsbCBjcmVhdGUgd2l0aCB0aGUgW2RlZmF1bHQgdGV4dCBwcm9tcHRzIGFuZCBwYXJhbWV0ZXJzXSguL2Rpc2NvYXJ0L3Jlc291cmNlcy9kZWZhdWx0LnltbCkuXG5cbiFbXSguZ2l0aHViL2NyZWF0ZS1kZW1vLmdpZilcblxuIyMjIFNldCBwcm9tcHRzIGFuZCBwYXJhbWV0ZXJzXG5cblN1cHBvcnRlZCBwYXJhbWV0ZXJzIGFyZSBbbGlzdGVkIGhlcmVdKC4vZGlzY29hcnQvcmVzb3VyY2VzL2RlZmF1bHQueW1sKS4gWW91IGNhbiBzcGVjaWZ5IHRoZW0gaW4gYGNyZWF0ZSgpYDpcblxuYGBgcHl0aG9uXG5mcm9tIGRpc2NvYXJ0IGltcG9ydCBjcmVhdGVcblxuZGEgPSBjcmVhdGUoXG4gICAgdGV4dF9wcm9tcHRzPSdBIHBhaW50aW5nIG9mIHNlYSBjbGlmZnMgaW4gYSB0dW11bHR1b3VzIHN0b3JtLCBUcmVuZGluZyBvbiBBcnRTdGF0aW9uLicsXG4gICAgaW5pdF9pbWFnZT0naHR0cHM6Ly9kMnZ5aHpla28wbGtlNS5jbG91ZGZyb250Lm5ldC8yZjRmNmRmYTVhMDVlMDc4NDY5ZWJlNTdlNzdiNzJmMC5wbmcnLFxuICAgIHNraXBfc3RlcHM9MTAwLFxuKVxuYGBgXG5cbiFbXSguZ2l0aHViL3BhcmFtZXRlci1kZW1vLmdpZilcblxuSW4gY2FzZSB5b3UgZm9yZ290IGEgcGFyYW1ldGVyLCBqdXN0IGxvb2t1cCB0aGUgY2hlYXRzaGVldCBhdCBhbnl0aW1lOlxuXG5gYGBweXRob25cbmZyb20gZGlzY29hcnQgaW1wb3J0IGNoZWF0c2hlZXRcblxuY2hlYXRzaGVldCgpXG5gYGBcblxuVGhlIGRpZmZlcmVuY2Ugb24gdGhlIHBhcmFtZXRlcnMgYmV0d2VlbiBEaXNjb0FydCBhbmQgREQ1LjYgW2lzIGV4cGxhaW5lZCBoZXJlXSguL0ZFQVRVUkVTLm1kKS4gXG5cblxuIyMjIFZpc3VhbGl6ZSByZXN1bHRzXG5cbkZpbmFsIHJlc3VsdHMgYW5kIGludGVybWVkaWF0ZSByZXN1bHRzIGFyZSBjcmVhdGVkIHVuZGVyIHRoZSBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5LCBpLmUuXG5gYGB0ZXh0XG4uL3tuYW1lLWRvY2FycmF5fS97aX0tZG9uZS5wbmdcbi4ve25hbWUtZG9jYXJyYXl9L3tpfS1zdGVwLXtqfS5wbmdcbi4ve25hbWUtZG9jYXJyYXl9L3tpfS1wcm9ncmVzcy5wbmdcbi4ve25hbWUtZG9jYXJyYXl9L3tpfS1wcm9ncmVzcy5naWZcbi4ve25hbWUtZG9jYXJyYXl9L2RhLnByb3RvYnVmLmx6NFxuYGBgXG5cbiFbXSguZ2l0aHViL3Jlc3VsdC1wZXJzaXN0LnBuZylcblxud2hlcmU6XG5cbi0gYG5hbWUtZG9jYXJyYXlgIGlzIHRoZSBuYW1lIG9mIHRoZSBydW4sIHlvdSBjYW4gc3BlY2lmeSBpdCBvdGhlcndpc2UgaXQgaXMgYSByYW5kb20gbmFtZS5cbi0gYGktKmAgaXMgdXAgdG8gdGhlIHZhbHVlIG9mIGBuX2JhdGNoZXNgLlxuLSBgKi1kb25lLSpgIGlzIHRoZSBmaW5hbCBpbWFnZSBvbiBkb25lLlxuLSBgKi1zdGVwLSpgIGlzIHRoZSBpbnRlcm1lZGlhdGUgaW1hZ2UgYXQgY2VydGFpbiBzdGVwLCB1cGRhdGVkIGluIHJlYWwtdGltZS5cbi0gYCotcHJvZ3Jlc3MucG5nYCBpcyB0aGUgc3ByaXRlIGltYWdlIG9mIGFsbCBpbnRlcm1lZGlhdGUgcmVzdWx0cyBzbyBmYXIsIHVwZGF0ZWQgaW4gcmVhbC10aW1lLlxuLSBgKi1wcm9ncmVzcy5naWZgIGlzIHRoZSBhbmltYXRlZCBnaWYgb2YgYWxsIGludGVybWVkaWF0ZSByZXN1bHRzIHNvIGZhciwgdXBkYXRlZCBpbiByZWFsLXRpbWUuXG4tIGBkYS5wcm90b2J1Zi5sejRgIGlzIHRoZSBjb21wcmVzc2VkIHByb3RvYnVmIG9mIGFsbCBpbnRlcm1lZGlhdGUgcmVzdWx0cyBzbyBmYXIsIHVwZGF0ZWQgaW4gcmVhbC10aW1lLlxuXG5UaGUgc2F2ZSBmcmVxdWVuY3kgaXMgY29udHJvbGxlZCBieSBgc2F2ZV9yYXRlYC5cblxuTW9yZW92ZXIsIGBjcmVhdGUoKWAgcmV0dXJucyBgZGFgLCBhIFtEb2N1bWVudEFycmF5XShodHRwczovL2RvY2FycmF5LmppbmEuYWkvZnVuZGFtZW50YWxzL2RvY3VtZW50YXJyYXkvKS10eXBlIG9iamVjdC4gSXQgY29udGFpbnMgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbjpcbi0gQWxsIGFyZ3VtZW50cyBwYXNzZWQgdG8gYGNyZWF0ZSgpYCBmdW5jdGlvbiwgaW5jbHVkaW5nIHNlZWQsIHRleHQgcHJvbXB0cyBhbmQgbW9kZWwgcGFyYW1ldGVycy5cbi0gNCBnZW5lcmF0ZWQgaW1hZ2UgYW5kIGl0cyBpbnRlcm1lZGlhdGUgc3RlcHMnIGltYWdlcywgd2hlcmUgYDRgIGlzIGRldGVybWluZWQgYnkgYG5fYmF0Y2hlc2AgYW5kIGlzIHRoZSBkZWZhdWx0IHZhbHVlLiBcblxuVGhpcyBhbGxvd3MgeW91IHRvIGZ1cnRoZXIgcG9zdC1wcm9jZXNzLCBhbmFseXplLCBleHBvcnQgdGhlIHJlc3VsdHMgd2l0aCBwb3dlcmZ1bCBEb2NBcnJheSBBUEkuXG5cbkltYWdlcyBhcmUgc3RvcmVkIGFzIERhdGEgVVJJIGluIGAudXJpYCwgdG8gc2F2ZSB0aGUgZmlyc3QgaW1hZ2UgYXMgYSBsb2NhbCBmaWxlOlxuXG5gYGBweXRob25cbmRhWzBdLnNhdmVfdXJpX3RvX2ZpbGUoJ2Rpc2NvYXJ0LXJlc3VsdC5wbmcnKVxuYGBgXG5cblRvIHNhdmUgYWxsIGZpbmFsIGltYWdlczpcblxuYGBgcHl0aG9uXG5mb3IgaWR4LCBkIGluIGVudW1lcmF0ZShkYSk6XG4gICAgZC5zYXZlX3VyaV90b19maWxlKGYnZGlzY29hcnQtcmVzdWx0LXtpZHh9LnBuZycpXG5gYGBcblxuWW91IGNhbiBhbHNvIGRpc3BsYXkgYWxsIGZvdXIgZmluYWwgaW1hZ2VzIGluIGEgZ3JpZDpcblxuYGBgcHl0aG9uXG5kYS5wbG90X2ltYWdlX3Nwcml0ZXMoc2tpcF9lbXB0eT1UcnVlLCBzaG93X2luZGV4PVRydWUsIGtlZXBfYXNwZWN0X3JhdGlvPVRydWUpXG5gYGBcbiFbXSguZ2l0aHViL2FsbC1yZXN1bHRzLnBuZylcblxuT3IgZGlzcGxheSB0aGVtIG9uZSBieSBvbmU6XG5cbmBgYHB5dGhvblxuZm9yIGQgaW4gZGE6XG4gICAgZC5kaXNwbGF5KClcbmBgYFxuXG5PciB0YWtlIG9uZSBwYXJ0aWN1bGFyIHJ1bjpcblxuYGBgcHl0aG9uXG5kYVswXS5kaXNwbGF5KClcbmBgYFxuXG4hW10oLmdpdGh1Yi9kaXNwbGF5LnBuZylcblxuIyMjIFZpc3VhbGl6ZSBpbnRlcm1lZGlhdGUgc3RlcHNcblxuWW91IGNhbiBhbHNvIHpvb20gaW50byBhIHJ1biAoc2F5IHRoZSBmaXJzdCBydW4pIGFuZCBjaGVjayBvdXQgaW50ZXJtZWRpYXRlIHN0ZXBzOlxuXG5gYGBweXRob25cbmRhWzBdLmNodW5rcy5wbG90X2ltYWdlX3Nwcml0ZXMoXG4gICAgc2tpcF9lbXB0eT1UcnVlLCBzaG93X2luZGV4PVRydWUsIGtlZXBfYXNwZWN0X3JhdGlvPVRydWVcbilcbmBgYFxuIVtdKC5naXRodWIvY2h1bmtzLnBuZylcblxuWW91IGNhbiBgLmRpc3BsYXkoKWAgdGhlIGNodW5rcyBvbmUgYnkgb25lLCBvciBzYXZlIG9uZSB2aWEgYC5zYXZlX3VyaV90b19maWxlKClgLCBvciBzYXZlIGFsbCBpbnRlcm1lZGlhdGUgc3RlcHMgYXMgYSBHSUY6XG5cbmBgYHB5dGhvblxuZGFbMF0uY2h1bmtzLnNhdmVfZ2lmKFxuICAgICdsaWdodGhvdXNlLmdpZicsIHNob3dfaW5kZXg9VHJ1ZSwgaW5saW5lX2Rpc3BsYXk9VHJ1ZSwgc2l6ZV9yYXRpbz0wLjVcbilcbmBgYFxuXG4hW10oLmdpdGh1Yi9saWdodGhvdXNlLmdpZilcblxuTm90ZSB0aGF0ID49MC43LjE0LCBhIDIwRlBTIGdpZiBpcyBnZW5lcmF0ZWQgd2hpY2ggaW5jbHVkZXMgYWxsIGludGVybWVkaWRhdGUgc3RlcHMuIFxuXG4jIyMgU2hvdy9zYXZlL2xvYWQgY29uZmlnc1xuXG5UbyBzaG93IHRoZSBjb25maWcgb2YgYSBEb2N1bWVudC9Eb2N1bWVudEFycmF5LFxuXG5gYGBweXRob25cbmZyb20gZGlzY29hcnQgaW1wb3J0IHNob3dfY29uZmlnXG5cbnNob3dfY29uZmlnKGRhKSAgIyBzaG93IHRoZSBjb25maWcgb2YgdGhlIGZpcnN0IHJ1blxuc2hvd19jb25maWcoZGFbM10pICAjIHNob3cgdGhlIGNvbmZpZyBvZiB0aGUgZm91cnRoIHJ1blxuc2hvd19jb25maWcoXG4gICAgJ2Rpc2NvYXJ0LTA2MDMwYTAxOTg4NDMzMzJlZGM1NTRmZmViZmJmMjg4J1xuKSAgIyBzaG93IHRoZSBjb25maWcgb2YgdGhlIHJ1biB3aXRoIGEga25vd24gRG9jQXJyYXkgSURcbmBgYFxuXG5UbyBzYXZlIHRoZSBjb25maWcgb2YgYSBEb2N1bWVudC9Eb2N1bWVudEFycmF5LFxuXG5gYGBweXRob25cbmZyb20gZGlzY29hcnQgaW1wb3J0IHNhdmVfY29uZmlnXG5cbnNhdmVfY29uZmlnKGRhLCAnbXkueW1sJykgICMgc2F2ZSB0aGUgY29uZmlnIG9mIHRoZSBmaXJzdCBydW5cbnNhdmVfY29uZmlnKGRhWzNdLCAnbXkueW1sJykgICMgc2F2ZSB0aGUgY29uZmlnIG9mIHRoZSBmb3VydGggcnVuXG5gYGBcblxuVG8gcnVuIGBjcmVhdGVgIGZyb20gYSBZQU1MIGNvbmZpZyBvZiBEb2N1bWVudC9Eb2N1bWVudEFycmF5LFxuXG5gYGBweXRob25cbmZyb20gZGlzY29hcnQgaW1wb3J0IGNyZWF0ZSwgbG9hZF9jb25maWdcblxuY29uZmlnID0gbG9hZF9jb25maWcoJ215LnltbCcpXG5jcmVhdGUoKipjb25maWcpXG5gYGBcblxuWW91IGNhbiBhbHNvIGV4cG9ydCB0aGUgY29uZmlnIGFzIGFuIFNWRyBpbWFnZTpcblxuYGBgcHl0aG9uXG5mcm9tIGRpc2NvYXJ0LmNvbmZpZyBpbXBvcnQgc2F2ZV9jb25maWdfc3ZnXG5cbnNhdmVfY29uZmlnX3N2ZyhkYSlcbmBgYFxuXG4hW10oLmdpdGh1Yi9kaXNjb2FydC0zMjA1OTk4NTgyLnN2ZylcblxuT25lIGNhbiBhbHNvIGdlbmVyYXRlIHJ1bm5hYmxlIFB5dGhvbiBjb2RlIGRpcmVjdGx5IGZyb20gdGhlIGNvbmZpZzpcblxuYGBgcHl0aG9uXG5mcm9tIGRpc2NvYXJ0LmNvbmZpZyBpbXBvcnQgZXhwb3J0X3B5dGhvblxuXG5leHBvcnRfcHl0aG9uKGRhKVxuYGBgXG5cbiMjIyBQdWxsIHJlc3VsdHMgYW55d2hlcmUgYW55dGltZVxuXG5JZiB5b3UgYXJlIGEgZnJlZS10aWVyIEdvb2dsZSBDb2xhYiB1c2VyLCBvbmUgYW5ub3kgdGhpbmcgaXMgdGhlIGxvc3Qgb2Ygc2Vzc2lvbnMgZnJvbSB0aW1lIHRvIHRpbWUuIE9yIHNvbWV0aW1lcyB5b3UganVzdCBlYXJseSBzdG9wIHRoZSBydW4gYXMgdGhlIGZpcnN0IGltYWdlIGlzIG5vdCBnb29kIGVub3VnaCwgYW5kIGEga2V5Ym9hcmQgaW50ZXJydXB0IHdpbGwgcHJldmVudCBgLmNyZWF0ZSgpYCB0byByZXR1cm4gYW55IHJlc3VsdC4gRWl0aGVyIGNhc2UsIHlvdSBjYW4gZWFzaWx5IHJlY292ZXIgdGhlIHJlc3VsdHMgYnkgcHVsbGluZyB0aGUgbGFzdCBzZXNzaW9uIElELlxuXG4xLiBGaW5kIHRoZSBzZXNzaW9uIElELiBJdCBhcHBlYXJzIG9uIHRvcCBvZiB0aGUgaW1hZ2UuIFxuIVtdKC5naXRodWIvc2Vzc2lvbi1pZC5wbmcpXG5cbjIuIFB1bGwgdGhlIHJlc3VsdCB2aWEgdGhhdCBJRCAqKm9uIGFueSBtYWNoaW5lIGF0IGFueSB0aW1lKiosIG5vdCBuZWNlc3NhcmlseSBvbiBHb29nbGUgQ29sYWI6XG4gICAgYGBgcHl0aG9uXG4gICAgZnJvbSBkb2NhcnJheSBpbXBvcnQgRG9jdW1lbnRBcnJheVxuXG4gICAgZGEgPSBEb2N1bWVudEFycmF5LnB1bGwoJ2Rpc2NvYXJ0LTMyMDU5OTg1ODInKVxuICAgIGBgYFxuXG4jIyMgUmV1c2UgYSBEb2N1bWVudCBhcyBpbml0aWFsIHN0YXRlXG5cbkNvbnNpZGVyIGEgRG9jdW1lbnQgYXMgYSBzZWxmLWNvbnRhaW5lZCBkYXRhIHdpdGggY29uZmlnIGFuZCBpbWFnZSwgb25lIGNhbiB1c2UgaXQgYXMgdGhlIGluaXRpYWwgc3RhdGUgZm9yIHRoZSBmdXR1cmUgcnVuLiBJdHMgYC50YWdzYCB3aWxsIGJlIHVzZWQgYXMgdGhlIGluaXRpYWwgcGFyYW1ldGVyczsgYC51cmlgIGlmIHByZXNlbnRlZCB3aWxsIGJlIHVzZWQgYXMgdGhlIGluaXRpYWwgaW1hZ2UuXG5cbmBgYHB5dGhvblxuZnJvbSBkaXNjb2FydCBpbXBvcnQgY3JlYXRlXG5mcm9tIGRvY2FycmF5IGltcG9ydCBEb2N1bWVudEFycmF5XG5cbmRhID0gRG9jdW1lbnRBcnJheS5wdWxsKCdkaXNjb2FydC0zMjA1OTk4NTgyJylcblxuY3JlYXRlKFxuICAgIGluaXRfZG9jdW1lbnQ9ZGFbMF0sXG4gICAgY3V0X2ljX3Bvdz0wLjUsXG4gICAgdHZfc2NhbGU9NjAwLFxuICAgIGN1dF9vdmVydmlldz0nWzEyXSoxMDAwJyxcbiAgICBjdXRfaW5uZXJjdXQ9J1sxMl0qMTAwMCcsXG4gICAgdXNlX3NlY29uZGFyeV9tb2RlbD1GYWxzZSxcbilcbmBgYFxuXG5JZiB5b3UganVzdCB3YW50IHRvIGluaXRpYWxpemUgZnJvbSBhIGtub3duIERvY0FycmF5IElELCB0aGVuIHNpbXBseTpcblxuYGBgcHl0aG9uXG5mcm9tIGRpc2NvYXJ0IGltcG9ydCBjcmVhdGVcblxuY3JlYXRlKGluaXRfZG9jdW1lbnQ9J2Rpc2NvYXJ0LTMyMDU5OTg1ODInKVxuYGBgXG5cblxuIyMjIEVudmlyb25tZW50IHZhcmlhYmxlc1xuXG5Zb3UgY2FuIHNldCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gY29udHJvbCB0aGUgbWV0YS1iZWhhdmlvciBvZiBEaXNjb0FydC4gVGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBtdXN0IGJlIHNldCBiZWZvcmUgaW1wb3J0aW5nIERpc2NvQXJ0LCBlaXRoZXIgaW4gQmFzaCBvciBpbiBQeXRob24gdmlhIGBvcy5lbnZpcm9uYC5cblxuYGBgYmFzaFxuRElTQ09BUlRfTE9HX0xFVkVMPSdERUJVRycgIyBtb3JlIHZlcmJvc2UgbG9nc1xuRElTQ09BUlRfT1BUT1VUX0NMT1VEX0JBQ0tVUD0nMScgIyBvcHQtb3V0IGZyb20gY2xvdWQgYmFja3VwXG5ESVNDT0FSVF9ESVNBQkxFX0lQWVRIT049JzEnICMgZGlzYWJsZSBpcHl0aG9uIGRlcGVuZGVuY3lcbkRJU0NPQVJUX0RJU0FCTEVfUkVTVUxUX1NVTU1BUlk9JzEnICMgZGlzYWJsZSByZXN1bHQgc3VtbWFyeSBhZnRlciB0aGUgcnVuIGVuZHNcbkRJU0NPQVJUX0RFRkFVTFRfUEFSQU1FVEVSU19ZQU1MPSdwYXRoL3RvL3lvdXItZGVmYXVsdC55bWwnICMgdXNlIGEgY3VzdG9tIGRlZmF1bHQgcGFyYW1ldGVycyBmaWxlXG5ESVNDT0FSVF9DVVRfU0NIRURVTEVTX1lBTUw9J3BhdGgvdG8veW91ci1zY2hlZHVsZXMueW1sJyAjIHVzZSBhIGN1c3RvbSBjdXQgc2NoZWR1bGVzIGZpbGVcbkRJU0NPQVJUX01PREVMU19ZQU1MPSdwYXRoL3RvL3lvdXItbW9kZWxzLnltbCcgIyB1c2UgYSBjdXN0b20gbGlzdCBvZiBtb2RlbHMgZmlsZVxuRElTQ09BUlRfT1VUUFVUX0RJUj0ncGF0aC90by95b3VyLW91dHB1dC1kaXInICMgdXNlIGEgY3VzdG9tIG91dHB1dCBkaXJlY3RvcnkgZm9yIGFsbCBpbWFnZXMgYW5kIHJlc3VsdHNcbkRJU0NPQVJUX0NBQ0hFX0RJUj0ncGF0aC90by95b3VyLWNhY2hlLWRpcicgIyB1c2UgYSBjdXN0b20gY2FjaGUgZGlyZWN0b3J5IGZvciBtb2RlbHMgYW5kIGRvd25sb2Fkc1xuRElTQ09BUlRfRElTQUJMRV9SRU1PVEVfTU9ERUxTPScxJyAjIGRpc2FibGUgdGhlIGxpc3Rpbmcgb2YgZGlmZnVzaW9uIG1vZGVscyBvbiBHaXRodWIsIHJlbW90ZSBkaWZmdXNpb24gbW9kZWxzIGFsbG93cyB1c2VyIHRvIHVzZSBsYXRlc3QgbW9kZWxzIHdpdGhvdXQgdXBkYXRpbmcgdGhlIGNvZGViYXNlLlxuRElTQ09BUlRfUkVNT1RFX01PREVMU19VUkw9J2h0dHBzOi8veW91cmRvbWFpbi9tb2RlbHMueW1sJyAjIHVzZSBhIGN1c3RvbSByZW1vdGUgVVJMIGZvciBmZXRjaGluZyBtb2RlbHMgbGlzdFxuRElTQ09BUlRfRElTQUJMRV9DSEVDS19NT0RFTF9TSEE9JzEnICMgZGlzYWJsZSBjaGVja2luZyBsb2NhbCBtb2RlbCBTSEEgbWF0Y2hlcyB0aGUgcmVtb3RlIG1vZGVsIFNIQVxuRElTQ09BUlRfRElTQUJMRV9UUURNPScxJyAjIGRpc2FibGUgdHFkbSBwcm9ncmVzcyBiYXIgb24gZGlmZnVzaW9uXG5gYGBcblxuIyMgQ0xJXG5cbkRpc2NvQXJ0IHByb3ZpZGVzIHR3byBjb21tYW5kcyBgY3JlYXRlYCBhbmQgYGNvbmZpZ2AgdGhhdCBhbGxvd3MgeW91IHRvIHJ1biBEaXNjb0FydCBmcm9tIENMSS5cblxuYGBgYmFzaFxucHl0aG9uIC1tIGRpc2NvYXJ0IGNyZWF0ZSBteS55bWxcbmBgYFxuXG53aGljaCBjcmVhdGVzIGFydHdvcmtzIGZyb20gdGhlIFlBTUwgY29uZmlnIGZpbGUgYG15LnltbGAuIFlvdSBjYW4gYWxzbyBkbzpcblxuYGBgYmFzaFxuY2F0IGNvbmZpZy55bWwgfCBweXRob24gLW0gZGlzY29hcnQgY3JlYXRlXG5gYGBcblxuU28gaG93IGNhbiBJIGhhdmUgbXkgb3duIGBteS55bWxgIGFuZCB3aGF0IGRvZXMgaXQgbG9vayBsaWtlPyBUaGF0J3MgdGhlIHNlY29uZCBjb21tYW5kOlxuXG5gYGBiYXNoXG5weXRob24gLW0gZGlzY29hcnQgY29uZmlnIG15LnltbFxuYGBgXG5cbndoaWNoIGZvcmtzIHRoZSBbZGVmYXVsdCBZQU1MIGNvbmZpZ10oZGlzY29hcnQvcmVzb3VyY2VzL2RlZmF1bHQueW1sKSBhbmQgZXhwb3J0IHRoZW0gdG8gYG15LnltbGAuIE5vdyB5b3UgY2FuIG1vZGlmeSBpdCBhbmQgcnVuIGl0IHdpdGggYHB5dGhvbiAtbSBkaXNjb2FydCBjcmVhdGVgIGNvbW1hbmQuXG5cbklmIG5vIG91dHB1dCBwYXRoIGlzIHNwZWNpZmllZCwgdGhlbiBgcHl0aG9uIC1tIGRpc2NvYXJ0IGNvbmZpZ2Agd2lsbCBwcmludCB0aGUgZGVmYXVsdCBjb25maWcgdG8gc3Rkb3V0LlxuXG5UbyBnZXQgaGVscCBvbiBhIGNvbW1hbmQsIGFkZCBgLS1oZWxwYCBhdCB0aGUgZW5kLCBlLmcuOlxuXG5gYGBiYXNoXG5weXRob24gLW0gZGlzY29hcnQgY3JlYXRlIC0taGVscFxuYGBgXG5cbmBgYHRleHRcbnVzYWdlOiBweXRob24gLW0gZGlzY29hcnQgY3JlYXRlIFstaF0gW1lBTUxfQ09ORklHX0ZJTEVdXG5cbnBvc2l0aW9uYWwgYXJndW1lbnRzOlxuICBZQU1MX0NPTkZJR19GSUxFICBUaGUgWUFNTCBjb25maWcgZmlsZSB0byB1c2UsIGRlZmF1bHQgaXMgc3RkaW4uXG5cbm9wdGlvbmFsIGFyZ3VtZW50czpcbiAgLWgsIC0taGVscCAgICAgICAgc2hvdyB0aGlzIGhlbHAgbWVzc2FnZSBhbmQgZXhpdFxuYGBgXG5cbiMjIFNlcnZpbmdcblxuU2VydmluZyBEaXNjb0FydCBpcyBzdXBlciBlYXN5LiBTaW1wbHkgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZDpcblxuYGBgYmFzaFxucHl0aG9uIC1tIGRpc2NvYXJ0IHNlcnZlXG5gYGBcblxuWW91IHNoYWxsIHNlZTpcblxuIVtdKC5naXRodWIvc2VydmluZy5wbmcpXG5cbk5vdyBzZW5kIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB2aWEgY3VybC9KYXZhc2NyaXB0LCBlLmcuXG5cbmBgYGJhc2hcbmN1cmwgXFxcbi1YIFBPU1QgaHR0cDovLzAuMC4wLjA6NTEwMDEvcG9zdCBcXFxuLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicgXFxcbi1kICd7XCJleGVjRW5kcG9pbnRcIjpcIi9jcmVhdGVcIiwgXCJwYXJhbWV0ZXJzXCI6IHtcInRleHRfcHJvbXB0c1wiOiBbXCJBIGJlYXV0aWZ1bCBwYWludGluZyBvZiBhIHNpbmd1bGFyIGxpZ2h0aG91c2VcIiwgXCJ5ZWxsb3cgY29sb3Igc2NoZW1lXCJdfX0nXG5gYGBcblxuVGhhdCdzIGl0LiBcblxuWW91IGNhbiBvZiBjb3Vyc2UgcGFzcyBhbGwgcGFyYW1ldGVycyB0aGF0IGFjY2VwdGVkIGJ5IGBjcmVhdGUoKWAgZnVuY3Rpb24gaW4gdGhlIEpTT04uXG5cbiMjIyBQb2xsaW5nIGludGVybWVkaWF0ZSByZXN1bHRzXG5cbldlIGFscmVhZHkga25vdyB0aGF0IGBjcmVhdGVgIGZ1bmN0aW9uIGlzIHNsb3cgZXZlbiBvbiBHUFUgaXQgY291bGQgdGFrZSAxMCBtaW51dGVzIHRvIGZpbmlzaCBhbiBhcnR3b3JrLiBUaGlzIG1lYW5zIHRoZSBhZnRlciBzZW5kaW5nIHRoZSBhYm92ZSByZXF1ZXN0LCB0aGUgY2xpZW50IHdpbGwgaGF2ZSB0byB3YWl0IDEwIG1pbnV0ZXMgZm9yIHRoZSByZXNwb25zZS4gVGhlcmUgaXMgbm90aGluZyB3cm9uZyB3aXRoIHRoaXMgYmVoYXZpb3IgZ2l2ZW4gdGhhdCBldmVyeXRoaW5nIHJ1bnMgc3luY2hyb25vdXNseS4gSG93ZXZlciwgaW4gcHJhY3RpY2UsIGNsaWVudCBtYXkgZXhwZWN0IGEgcHJvZ3Jlc3Mgb3IgaW50ZXJtZWRpYXRlIHJlc3VsdHMgaW4gdGhlIG1pZGRsZSBpbnN0ZWFkIG9mIHdhaXRpbmcgZm9yIHRoZSBlbmQuXG5cbmAvcmVzdWx0YCBlbmRwb2ludCBpcyBkZXNpZ25lZCBmb3IgdGhpcyBwdXJwb3NlLiBJdCB3aWxsIHJldHVybiB0aGUgaW50ZXJtZWRpYXRlIHJlc3VsdHMgYXMgc29vbiBhcyB0aGV5IGFyZSBhdmFpbGFibGUuIEFsbCB5b3UgbmVlZCBpcyB0byBzcGVjaWZ5IGBuYW1lX2RvY2FycmF5YCBpbiB0aGUgcmVxdWVzdCBwYXJhbWV0ZXJzIGFzIHlvdSBzcGVjaWZpZWQgaW4gYC9jcmVhdGVgIGVuZHBvaW50LiBIZXJlIGlzIGFuIGV4YW1wbGU6XG5cbkxldCdzIGNyZWF0ZSBgbXlkaXNjby0xMjNgIGJ5IHNlbmRpbmcgdGhlIGZvbGxvd2luZyByZXF1ZXN0IHRvIGAvY3JlYXRlYCBlbmRwb2ludDpcblxuYGBgYmFzaFxuY3VybCBcXFxuLVggUE9TVCBodHRwOi8vMC4wLjAuMDo1MTAwMS9wb3N0IFxcXG4tSCAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyBcXFxuLWQgJ3tcImV4ZWNFbmRwb2ludFwiOlwiL2NyZWF0ZVwiLCBcInBhcmFtZXRlcnNcIjoge1wibmFtZV9kb2NhcnJheVwiOiBcIm15ZGlzY28tMTIzXCIsIFwidGV4dF9wcm9tcHRzXCI6IFtcIkEgYmVhdXRpZnVsIHBhaW50aW5nIG9mIGEgc2luZ3VsYXIgbGlnaHRob3VzZVwiLCBcInllbGxvdyBjb2xvciBzY2hlbWVcIl19fSdcbmBgYFxuXG5Ob3cgdGhhdCB0aGUgYWJvdmUgcmVxdWVzdCBpcyBiZWluZyBwcm9jZXNzZWQgb24gdGhlIHNlcnZlciwgeW91IGNhbiBwZXJpb2RpY2FsbHkgY2hlY2sgYG15ZGlzY28tMTIzYCBwcm9ncmVzcyBieSBzZW5kaW5nIHRoZSBmb2xsb3dpbmcgcmVxdWVzdCB0byBgL3Jlc3VsdGAgZW5kcG9pbnQ6XG5cbmBgYGJhc2hcbmN1cmwgXFxcbi1YIFBPU1QgaHR0cDovLzAuMC4wLjA6NTEwMDEvcG9zdCBcXFxuLUggJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbicgXFxcbi1kICd7XCJleGVjRW5kcG9pbnRcIjpcIi9yZXN1bHRcIiwgXCJwYXJhbWV0ZXJzXCI6IHtcIm5hbWVfZG9jYXJyYXlcIjogXCJteWRpc2NvLTEyM1wifX0nXG5gYGBcblxuQSBKU09OIHdpbGwgYmUgcmV0dXJuZWQgd2l0aCB1cC10by1kYXRlIHByb2dyZXNzLCB3aXRoIGltYWdlIGFzIERhdGFVUkksIGxvc3MsIHN0ZXBzIGV0Yy4gW1RoZSBKU09OIFNjaGVtYSBvZiBEb2N1bWVudC9Eb2N1bWVudEFycmF5IGlzIGRlc2NyaWJlZCBoZXJlLl0oaHR0cHM6Ly9kb2NhcnJheS5qaW5hLmFpL2Z1bmRhbWVudGFscy9mYXN0YXBpLXN1cHBvcnQvI2pzb24tc2NoZW1hKVxuXG5Ob3RlLCBgL3Jlc3VsdGAgd29uJ3QgYmUgYmxvY2tlZCBieSBgL2NyZWF0ZWAgdGhhbmtzIHRvIHRoZSBzbWFydCByb3V0aW5nIG9mIEppbmEgR2F0ZXdheS4gVG8gbGVhcm4vcGxheSBtb3JlIGFib3V0IHRob3NlIGVuZHBvaW50cywgeW91IGNhbiBjaGVjayBSZURvYyBvciB0aGUgU3dhZ2dlciBVSSBlbWJlZGRlZCBpbiB0aGUgc2VydmVyLlxuXG4jIyMgU2tpcCAmIENhbmNlbFxuXG5TZW5kIHRvIGAvc2tpcGAsIHRvIHNraXAgdGhlIGN1cnJlbnQgcnVuIGFuZCBtb3ZlIHRvIHRoZSBuZXh0IHJ1biBhcyBkZWZpbmVkIGluIGBuX2JhdGNoZXNgOlxuXG5gYGBiYXNoXG5jdXJsIFxcXG4tWCBQT1NUIGh0dHA6Ly8wLjAuMC4wOjUxMDAxL3Bvc3QgXFxcbi1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nIFxcXG4tZCAne1wiZXhlY0VuZHBvaW50XCI6XCIvc2tpcFwifSdcbmBgYFxuXG5TZW5kIHRvIGAvc3RvcGAsIHRvIHN0b3AgdGhlIGN1cnJlbnQgcnVuIGNhbmNlbCBhbGwgcnVucyBgbl9iYXRjaGVzYDpcblxuYGBgYmFzaFxuY3VybCBcXFxuLVggUE9TVCBodHRwOi8vMC4wLjAuMDo1MTAwMS9wb3N0IFxcXG4tSCAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyBcXFxuLWQgJ3tcImV4ZWNFbmRwb2ludFwiOlwiL3N0b3BcIn0nXG5gYGBcblxuIyMjIFVuYmxvY2tpbmcgYC9jcmVhdGVgIHJlcXVlc3RcblxuSXQgaXMgcG9zc2libGUgdG8gaGF2ZSBhbiB1bmJsb2NrZWQgYC9jcmVhdGVgIGVuZHBvaW50OiB0aGUgY2xpZW50IHJlcXVlc3QgdG8gYC9jcmVhdGVgIHdpbGwgYmUgKippbW1lZGlhdGVseSoqIHJldHVybmVkLCB3aXRob3V0IHdhaXRpbmcgZm9yIHRoZSByZXN1bHRzIHRvIGJlIGZpbmlzaGVkLiBZb3Ugbm93IGhhdmUgdG8gZnVsbHkgcmVseSBvbiBgL3Jlc3VsdGAgdG8gcG9sbCB0aGUgcmVzdWx0LiBcblxuVG8gZW5hYmxlIHRoaXMgZmVhdHVyZTogXG5cbjEuIENvcHktcGFzdGUgdGhlIFtkZWZhdWx0IGBmbG93LnltbGAgZmlsZV0oLi9kaXNjb2FydC9yZXNvdXJjZXMvZmxvdy55bWwpIHRvIGBteWZsb3cueW1sYDtcbjIuIENoYW5nZSBgZmxvYXRpbmc6IGZhbHNlYCB0byBgZmxvYXRpbmc6IHRydWVgIHVuZGVyIGBkaXNjb2FydGAgZXhlY3V0b3Igc2VjdGlvbjtcbjMuIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6XG4gICAgYGBgYmFzaFxuICAgIHB5dGhvbiAtbSBkaXNjb2FydCBzZXJ2ZSBteWZsb3cueW1sXG4gICAgYGBgXG5cbkJld2FyZSB0aGF0IHRoZSByZXF1ZXN0IHZlbG9jaXR5IGlzIG5vdyB1bmRlciAqKnlvdXIgY29udHJvbCoqLiBUaGF0IGlzLCBpZiB0aGUgY2xpZW50IHNlbmRzIDEwIGAvY3JlYXRlYCByZXF1ZXN0cyBpbiBhIHNlY29uZCwgdGhlbiB0aGUgc2VydmVyIHdpbGwgc3RhcnQgMTAgYGNyZWF0ZSgpYCBpbiBwYXJhbGxlbCEgVGhpcyBjYW4gZWFzaWx5IGxlYWQgdG8gT09NLiBIZW5jZSwgdGhlIHN1Z2dlc3Rpb24gaXMgb25seSBlbmFibGluZyB0aGlzIGZlYXR1cmUgaWYgeW91IGFyZSBzdXJlIHRoYXQgdGhlIGNsaWVudCBpcyBub3Qgc2VuZGluZyB0b28gbWFueSByZXF1ZXN0cywgZS5nLiB5b3UgY29udHJvbCB0aGUgY2xpZW50IHJlcXVlc3QgcmF0ZTsgb3IgeW91IGFyZSB1c2luZyBEaXNjb0FydCBiZWhpbmQgYSBCRkYgKGJhY2tlbmQgZm9yIGZyb250ZW5kKS5cblxuIyMjIFNjYWxpbmcgb3V0XG5cbklmIHlvdSBoYXZlIG11bHRpcGxlIEdQVXMgYW5kIHlvdSB3YW50IHRvIHJ1biBtdWx0aXBsZSBEaXNjb0FydCBpbnN0YW5jZXMgaW4gcGFyYWxsZWwgYnkgbGV2ZXJhZ2luZyBHUFVzIGluIGEgdGltZS1tdWx0aXBsZXhlZCBmYXNoaW9uLCB5b3UgY2FuIGNvcHktcGFzdGUgdGhlIFtkZWZhdWx0IGBmbG93LnltbGAgZmlsZV0oLi9kaXNjb2FydC9yZXNvdXJjZXMvZmxvdy55bWwpIGFuZCBtb2RpZnkgaXQgYXMgZm9sbG93czpcblxuYGBgeWFtbFxuanR5cGU6IEZsb3dcbndpdGg6XG4gIHByb3RvY29sOiBodHRwXG4gIG1vbml0b3Jpbmc6IHRydWVcbiAgcG9ydDogNTEwMDFcbiAgcG9ydF9tb25pdG9yaW5nOiA1MTAwMiAgIyBwcm9tZXRoZXVzIG1vbml0b3JpbmcgcG9ydFxuICBlbnY6XG4gICAgSklOQV9MT0dfTEVWRUw6IGRlYnVnXG4gICAgRElTQ09BUlRfRElTQUJMRV9JUFlUSE9OOiAxXG4gICAgRElTQ09BUlRfRElTQUJMRV9SRVNVTFRfU1VNTUFSWTogMVxuZXhlY3V0b3JzOlxuICAtIG5hbWU6IGRpc2NvYXJ0XG4gICAgdXNlczogRGlzY29BcnRFeGVjdXRvclxuICAgIGVudjpcbiAgICAgIENVREFfVklTSUJMRV9ERVZJQ0VTOiBSUjA6MyAgIyBjaGFuZ2UgdGhpcyBpZiB5b3UgaGF2ZSBtdWx0aXBsZSBHUFVcbiAgICByZXBsaWNhczogMyAgIyBjaGFuZ2UgdGhpcyBpZiB5b3UgaGF2ZSBsYXJnZXIgVlJBTVxuICAtIG5hbWU6IHBvbGxlclxuICAgIHVzZXM6IFJlc3VsdFBvbGxlclxuYGBgXG5cbkhlcmUgYHJlcGxpY2FzOiAzYCBzYXlzIHNwYXduaW5nIHRocmVlIERpc2NvQXJ0IGluc3RhbmNlcywgYENVREFfVklTSUJMRV9ERVZJQ0VTOiBSUjA6M2AgbWFrZXMgc3VyZSB0aGV5IHVzZSB0aGUgZmlyc3QgdGhyZWUgR1BVcyBpbiBhIHJvdW5kLXJvYmluIGZhc2hpb24uXG5cbk5hbWUgaXQgYXMgYG15Zmxvdy55bWxgIGFuZCB0aGVuIHJ1biBcblxuYGBgYmFzaFxucHl0aG9uIC1tIGRpc2NvYXJ0IHNlcnZlIG15Zmxvdy55bWxcbmBgYFxuXG4jIyMgQ3VzdG9taXphdGlvblxuXG5bVGhhbmtzIHRvIEppbmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9qaW5hLWFpL2ppbmEpLCB0aGVyZSBhcmUgdG9ucyBvZiB0aGluZ3MgeW91IGNhbiBjdXN0b21pemUhIFlvdSBjYW4gY2hhbmdlIHRoZSBwb3J0IG51bWJlcjsgY2hhbmdlIHByb3RvY29sIHRvIGdSUEMvV2Vic29ja2V0czsgYWRkIFRMUyBlbmNyeXB0aW9uOyBlbmFibGUvZGlzYWJsZSBQcm9tZXRoZXVzIG1vbml0b3Jpbmc7IHlvdSBjYW4gYWxzbyBleHBvcnQgaXQgdG8gS3ViZXJuZXRlcyBkZXBsb3ltZW50IGJ1bmRsZSBzaW1wbHkgdmlhOlxuXG5gYGBiYXNoXG5qaW5hIGV4cG9ydCBrdWJlcm5ldGVzIG15Zmxvdy55bWxcbmBgYFxuXG5Gb3IgbW9yZSBmZWF0dXJlcyBhbmQgWUFNTCBjb25maWdzLCBbcGxlYXNlIGNoZWNrIG91dCBKaW5hIGRvY3NdKGh0dHBzOi8vZG9jcy5qaW5hLmFpKS5cblxuXG4jIyMgVXNlIGdSUEMgZ2F0ZXdheVxuXG5UbyBzd2l0Y2ggZnJvbSBIVFRQIHRvIGdSUEMgZ2F0ZXdheSBpcyBzaW1wbGU6XG5cbmBgYHlhbWxcbmp0eXBlOiBGbG93XG53aXRoOlxuICBwcm90b2NvbDogZ3JwY1xuLi4uXG5gYGBcblxuYW5kIHRoZW4gcmVzdGFydCB0aGUgc2VydmVyLlxuXG5UaGVyZSBhcmUgbXVsdGlwbGUgYWR2YW50YWdlcyBvZiB1c2luZyBnUlBDIGdhdGV3YXk6XG4tIE11Y2ggZmFzdGVyIGFuZCBzbWFsbGVyIG5ldHdvcmsgb3ZlcmhlYWQuXG4tIEZlYXR1cmUtcmljaCwgbGlrZSBjb21wcmVzc2lvbiwgc3RhdHVzIG1vbml0b3JpbmcsIGV0Yy5cblxuSW4gZ2VuZXJhbCwgaWYgeW91IGFyZSB1c2luZyB0aGUgRGlzY29BcnQgc2VydmVyIGJlaGluZCBhIEJGRiAoYmFja2VuZCBmb3IgZnJvbnRlbmQpLCBvciB5b3VyIERpc2NvQXJ0IHNlcnZlciBkb2VzICoqbm90KiogZGlyZWN0bHkgc2VydmUgSFRUUCB0cmFmZmljIGZyb20gZW5kLXVzZXJzLCB0aGVuIHlvdSBzaG91bGQgdXNlIGdSUEMgcHJvdG9jb2wuXG5cblRvIGNvbW11bmljYXRlIHdpdGggYSBnUlBDIERpc2NvQXJ0IHNlcnZlciwgb25lIGNhbiB1c2UgYSBKaW5hIENsaWVudDpcblxuYGBgcHl0aG9uXG4jICFwaXAgaW5zdGFsbCBqaW5hXG5mcm9tIGppbmEgaW1wb3J0IENsaWVudFxuXG5jID0gQ2xpZW50KGhvc3Q9J2dycGM6Ly8wLjAuMC4wOjUxMDAxJylcblxuZGEgPSBjLnBvc3QoXG4gICAgJy9jcmVhdGUnLFxuICAgIHBhcmFtZXRlcnM9e1xuICAgICAgICAnbmFtZV9kb2NhcnJheSc6ICdteWRpc2NvLTEyMycsXG4gICAgICAgICd0ZXh0X3Byb21wdHMnOiBbXG4gICAgICAgICAgICAnQSBiZWF1dGlmdWwgcGFpbnRpbmcgb2YgYSBzaW5ndWxhciBsaWdodGhvdXNlJyxcbiAgICAgICAgICAgICd5ZWxsb3cgY29sb3Igc2NoZW1lJyxcbiAgICAgICAgXSxcbiAgICB9LFxuKVxuXG4jIGNoZWNrIGludGVybWVkaWF0ZSByZXN1bHRzXG5kYSA9IGMucG9zdCgnL3Jlc3VsdCcsIHBhcmFtZXRlcnM9eyduYW1lX2RvY2FycmF5JzogJ215ZGlzY28tMTIzJ30pXG5gYGBcblxuVG8gdXNlIGFuIGV4aXN0aW5nIERvY3VtZW50L0RvY3VtZW50QXJyYXkgYXMgaW5pdCBEb2N1bWVudCBmb3IgYGNyZWF0ZWA6XG5cbmBgYHB5dGhvblxuZnJvbSBqaW5hIGltcG9ydCBDbGllbnRcblxuYyA9IENsaWVudChob3N0PSdncnBjOi8vMC4wLjAuMDo1MTAwMScpXG5cbm9sZF9kYSA9IGNyZWF0ZSguLi4pXG5cbmRhID0gYy5wb3N0KFxuICAgICcvY3JlYXRlJyxcbiAgICBvbGRfZGEsICAjIHRoaXMgY2FuIGJlIGEgRG9jdW1lbnRBcnJheSBvciBhIHNpbmdsZSBEb2N1bWVudFxuICAgIHBhcmFtZXRlcnM9e1xuICAgICAgICAnd2lkdGhfaGVpZ2h0JzogWzEwMjQsIDc2OF0sXG4gICAgfSxcbilcbmBgYFxuXG5UaGlzIGVxdWFscyB0byBydW4gYGNyZWF0ZShpbml0X2RvY3VtZW50PW9sZF9kYSwgd2lkdGhfaGVpZ2h0PVsxMDI0LCA3NjhdKWAgb24gdGhlIHNlcnZlci4gTm90ZTpcbi0gZm9sbG93LXVwIHBhcmFtZXRlcnMgaGF2ZSBoaWdoZXIgcHJpb3JpdGllcyB0aGFuIHRoZSBwYXJhbWV0ZXJzIGluIGBpbml0X2RvY3VtZW50YC5cbi0gaWYgYGluaXRfZG9jdW1lbnRgIGlzIGEgRG9jdW1lbnRBcnJheSwgdGhlbiB0aGUgZmlyc3QgRG9jdW1lbnQgaW4gdGhlIGFycmF5IHdpbGwgYmUgdXNlZCBhcyB0aGUgaW5pdCBEb2N1bWVudC5cbi0gdGhlcmUgaXMgbm8gbmVlZCB0byBkbyBhbnkgc2VyaWFsaXphdGlvbiBiZWZvcmUgc2VuZGluZywgSmluYSBhdXRvbWF0aWNhbGx5IGhhbmRsZXMgaXQuXG5cbiMjIyBIb3N0aW5nIG9uIEdvb2dsZSBDb2xhYlxuXG5UaG91Z2ggbm90IHJlY29tbWVuZGVkLCBpdCBpcyBhbHNvIHBvc3NpYmxlIHRvIHVzZSBHb29nbGUgQ29sYWIgdG8gaG9zdCBEaXNjb0FydCBzZXJ2ZXIuIFxuUGxlYXNlIGNoZWNrIG91dCB0aGUgZm9sbG93aW5nIHR1dG9yaWFsczpcbi0gaHR0cHM6Ly9kb2NzLmppbmEuYWkvaG93LXRvL2dvb2dsZS1jb2xhYi9cbi0gaHR0cHM6Ly9jbGlwLWFzLXNlcnZpY2UuamluYS5haS9ob3N0aW5nL2NvbGFiL1xuXG5cblxuXG5cbiMjIFJ1biBpbiBEb2NrZXJcblxuWyFbRG9ja2VyIEltYWdlIFNpemUgKHRhZyldKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZG9ja2VyL2ltYWdlLXNpemUvamluYWFpL2Rpc2NvYXJ0L2xhdGVzdD9sb2dvPWRvY2tlciZsb2dvQ29sb3I9d2hpdGUmc3R5bGU9ZmxhdC1zcXVhcmUpXShodHRwczovL2h1Yi5kb2NrZXIuY29tL3JlcG9zaXRvcnkvZG9ja2VyL2ppbmFhaS9kaXNjb2FydClcblxuV2UgcHJvdmlkZSBhIHByZWJ1aWx0IERvY2tlciBpbWFnZSBmb3IgcnVubmluZyBEaXNjb0FydCBvdXQgb2YgdGhlIGJveC4gVG8gdXBkYXRlIERvY2tlciBpbWFnZSB0byBsYXRlc3QgdmVyc2lvbjpcblxuYGBgYmFzaFxuZG9ja2VyIHB1bGwgamluYWFpL2Rpc2NvYXJ0OmxhdGVzdFxuYGBgXG5cbiMjIyBVc2UgSnVweXRlciBub3RlYm9va1xuXG5UaGUgZGVmYXVsdCBlbnRyeXBvaW50IGlzIHN0YXJ0aW5nIGEgSnVweXRlciBub3RlYm9va1xuXG5gYGBiYXNoXG4jIGRvY2tlciBidWlsZCAuIC10IGppbmFhaS9kaXNjb2FydCAgIyBpZiB5b3Ugd2FudCB0byBidWlsZCB5b3Vyc2VsZlxuZG9ja2VyIHJ1biAtcCA1MTAwMDo4ODg4IC12ICQocHdkKTovaG9tZS9qb3Z5YW4vIC12ICRIT01FLy5jYWNoZTovcm9vdC8uY2FjaGUgLS1ncHVzIGFsbCBqaW5hYWkvZGlzY29hcnRcbmBgYFxuXG5Ob3cgeW91IGNhbiB2aXNpdCBgaHR0cDovLzEyNy4wLjAuMTo1MTAwMGAgdG8gYWNjZXNzIHRoZSBub3RlYm9va1xuXG4jIyMgVXNlIGFzIGEgc2VydmljZVxuXG5gYGBiYXNoXG4jIGRvY2tlciBidWlsZCAuIC10IGppbmFhaS9kaXNjb2FydCAgIyBpZiB5b3Ugd2FudCB0byBidWlsZCB5b3Vyc2VsZlxuZG9ja2VyIHJ1biAtLWVudHJ5cG9pbnQgXCJweXRob25cIiAtcCA1MTAwMTo1MTAwMSAtdiAkKHB3ZCk6L2hvbWUvam92eWFuLyAtdiAkSE9NRS8uY2FjaGU6L3Jvb3QvLmNhY2hlIC0tZ3B1cyBhbGwgamluYWFpL2Rpc2NvYXJ0IC1tIGRpc2NvYXJ0IHNlcnZlXG5gYGBcblxuWW91ciBEaXNjb0FydCBzZXJ2ZXIgaXMgbm93IHJ1bm5pbmcgYXQgYGh0dHA6Ly8xMjcuMC4wLjE6NTEwMDFgLlxuXG4jIyMgUmVsZWFzZSBjeWNsZVxuXG5bRG9ja2VyIGltYWdlcyBhcmUgYnVpbHQgb24gZXZlcnkgcmVsZWFzZV0oaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yZXBvc2l0b3J5L2RvY2tlci9qaW5hYWkvZGlzY29hcnQpLCBzbyBvbmUgY2FuIGxvY2sgaXQgdG8gYSBzcGVjaWZpYyB2ZXJzaW9uLCBzYXkgYDAuNS4xYDpcblxuYGBgYmFzaFxuZG9ja2VyIHJ1biAtcCA1MTAwMDo4ODg4IC12ICQocHdkKTovaG9tZS9qb3Z5YW4vIC12ICRIT01FLy5jYWNoZTovcm9vdC8uY2FjaGUgLS1ncHVzIGFsbCBqaW5hYWkvZGlzY29hcnQ6MC41LjFcbmBgYFxuXG5cbiMjIFdoYXQncyBuZXh0P1xuXG5bTmV4dCBpcyBjcmVhdGVdKGh0dHBzOi8vY29sYWIucmVzZWFyY2guZ29vZ2xlLmNvbS9naXRodWIvamluYS1haS9kaXNjb2FydC9ibG9iL21haW4vZGlzY29hcnQuaXB5bmIpLlxuXG7wn5iOICoqSWYgeW91IGFyZSBhbHJlYWR5IGEgREQgdXNlcioqOiB5b3UgYXJlIHJlYWR5IHRvIGdvISBUaGVyZSBpcyBubyBleHRyYSBsZWFybmluZywgRGlzY29BcnQgcmVzcGVjdHMgdGhlIHNhbWUgcGFyYW1ldGVyIHNlbWFudGljcyBhcyBERDUuNi4gU28ganVzdCB1bmxlYXNoIHlvdXIgY3JlYXRpdml0eSEgW1JlYWQgbW9yZSBhYm91dCB0aGVpciBkaWZmZXJlbmNlcyBoZXJlXSguL0ZFQVRVUkVTLm1kKS5cblxuWW91IGNhbiBhbHdheXMgZG8gYGZyb20gZGlzY29hcnQgaW1wb3J0IGNoZWF0c2hlZXQ7IGNoZWF0c2hlZXQoKWAgdG8gY2hlY2sgYWxsIG5ldy9tb2RpZmllZCBwYXJhbWV0ZXJzLlxuXG7wn5G2ICoqSWYgeW91IGFyZSBhIFtEQUxMwrdFIEZsb3ddKGh0dHBzOi8vZ2l0aHViLmNvbS9qaW5hLWFpL2RhbGxlLWZsb3cvKSBvciBuZXcgdXNlcioqOiB5b3UgbWF5IHdhbnQgdG8gdGFrZSBzdGVwIGJ5IHN0ZXAsIGFzIERpc2NvIERpZmZ1c2lvbiB3b3JrcyBpbiBhIHZlcnkgZGlmZmVyZW50IHdheSB0aGFuIERBTEzCt0UuIEl0IGlzIG11Y2ggbW9yZSBhZHZhbmNlZCBhbmQgcG93ZXJmdWw6IGUuZy4gRGlzY28gRGlmZnVzaW9uIGNhbiB0YWtlIHdlaWdodGVkICYgc3RydWN0dXJlZCB0ZXh0IHByb21wdHM7IGl0IGNhbiBpbml0aWFsaXplIGZyb20gYSBpbWFnZSB3aXRoIGNvbnRyb2xsZWQgbm9pc2U7IGFuZCB0aGVyZSBhcmUgd2F5IG1vcmUgcGFyYW1ldGVycyBvbmUgY2FuIHR3ZWFrLiBJbXBhdGllbnQgcHJvbXB0IGxpa2UgYFwiYXJtY2hhaXIgYXZvY2Fkb1wiYCB3aWxsIGdpdmUgeW91IG5vdGhpbmcgYnV0IGNvbmZ1c2lvbiBhbmQgZnJ1c3RyYXRpb24uIEkgaGlnaGx5IHJlY29tbWVuZCB5b3UgdG8gY2hlY2sgb3V0IHRoZSBmb2xsb3dpbmcgcmVzb3VyY2VzIGJlZm9yZSB0cnlpbmcgeW91ciBvd24gcHJvbXB0OlxuLSBbWmlwcHkncyBEaXNjbyBEaWZmdXNpb24gQ2hlYXRzaGVldCB2MC4zXShodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFsOHM3dVMyZEdxanp0WVNqUHB6bG1YTGpsNVBNM0lHa1JXSTNJaUN1SzdnL21vYmlsZWJhc2ljKVxuLSBbRVogQ2hhcnRzIC0gRGlmZnVzaW9uIFBhcmFtZXRlciBTdHVkaWVzXShodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFPUnltSG0wVGUxOHFLaUhuaGNkZ0dwLVdTdDhaa0xadm93M3JhaXUyRFZVL2VkaXQjKVxuLSBbRGlzY28gRGlmZnVzaW9uIDcwKyBBcnRpc3QgU3R1ZGllc10oaHR0cHM6Ly93ZWlyZHdvbmRlcmZ1bGFpLmFydC9yZXNvdXJjZXMvZGlzY28tZGlmZnVzaW9uLTcwLXBsdXMtYXJ0aXN0LXN0dWRpZXMvKVxuLSBbQSBUcmF2ZWxlcuKAmXMgR3VpZGUgdG8gdGhlIExhdGVudCBTcGFjZV0oaHR0cHM6Ly9zd2VldC1oYWxsLWU3Mi5ub3Rpb24uc2l0ZS9BLVRyYXZlbGVyLXMtR3VpZGUtdG8tdGhlLUxhdGVudC1TcGFjZS04NWVmYmE3ZTVlNmE0MGU1YmQzY2FlOTgwZjMwMjM1ZiNlMTIyZTc0OGI4NmU0ZmMwYWQ2YTdhNTBlNDZkNmUxMClcbi0gW0Rpc2NvIERpZmZ1c2lvbiBJbGx1c3RyYXRlZCBTZXR0aW5nc10oaHR0cHM6Ly9jb2FyLm5vdGlvbi5zaXRlL0Rpc2NvLURpZmZ1c2lvbi1JbGx1c3RyYXRlZC1TZXR0aW5ncy1jZDRiYWRmMDZlMDg0NDBjOTlkOGE5M2Q0Y2QzOWY1MSlcbi0gW0NvYXLigJlzIERpc2NvIERpZmZ1c2lvbiBHdWlkZV0oaHR0cHM6Ly9jb2FyLm5vdGlvbi5zaXRlL2NvYXIvQ29hci1zLURpc2NvLURpZmZ1c2lvbi1HdWlkZS0zZDg2ZDY1MmMxNWQ0Y2E5ODYzMjVlODA4YmRlMDZhYSM4YTNjNmU5ZTRiNjg0N2FmYTU2MTA2ZWFjYjZmMWY3OSlcblxuPCEtLSBzdGFydCBzdXBwb3J0LXBpdGNoIC0tPlxuIyMgU3VwcG9ydFxuXG4tIEpvaW4gb3VyIFtTbGFjayBjb21tdW5pdHldKGh0dHBzOi8vc2xhY2suamluYS5haSkgYW5kIGNoYXQgd2l0aCBvdGhlciBjb21tdW5pdHkgbWVtYmVycyBhYm91dCBpZGVhcy5cbi0gSm9pbiBvdXIgW0VuZ2luZWVyaW5nIEFsbCBIYW5kc10oaHR0cHM6Ly95b3V0dWJlLmNvbS9wbGF5bGlzdD9saXN0PVBMM1VCQldPVVZoRllSVWFfZ3BZWUtCcUVBa080c3htbmUpIG1lZXQtdXAgdG8gZGlzY3VzcyB5b3VyIHVzZSBjYXNlIGFuZCBsZWFybiBKaW5hJ3MgbmV3IGZlYXR1cmVzLlxuICAgIC0gKipXaGVuPyoqIFRoZSBzZWNvbmQgVHVlc2RheSBvZiBldmVyeSBtb250aFxuICAgIC0gKipXaGVyZT8qKlxuICAgICAgWm9vbSAoW3NlZSBvdXIgcHVibGljIGV2ZW50cyBjYWxlbmRhcl0oaHR0cHM6Ly9jYWxlbmRhci5nb29nbGUuY29tL2NhbGVuZGFyL2VtYmVkP3NyYz1jXzF0NW9nZnAyZDQ1djhmaXQ5ODFqMDhtY200JTQwZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbSZjdHo9RXVyb3BlJTJGQmVybGluKS9bLmljYWxdKGh0dHBzOi8vY2FsZW5kYXIuZ29vZ2xlLmNvbS9jYWxlbmRhci9pY2FsL2NfMXQ1b2dmcDJkNDV2OGZpdDk4MWowOG1jbTQlNDBncm91cC5jYWxlbmRhci5nb29nbGUuY29tL3B1YmxpYy9iYXNpYy5pY3MpKVxuICAgICAgYW5kIFtsaXZlIHN0cmVhbSBvbiBZb3VUdWJlXShodHRwczovL3lvdXR1YmUuY29tL2MvamluYS1haSlcbi0gU3Vic2NyaWJlIHRvIHRoZSBsYXRlc3QgdmlkZW8gdHV0b3JpYWxzIG9uIG91ciBbWW91VHViZSBjaGFubmVsXShodHRwczovL3lvdXR1YmUuY29tL2MvamluYS1haSlcblxuIyMgSm9pbiBVc1xuXG5EaXNjb0FydCBpcyBiYWNrZWQgYnkgW0ppbmEgQUldKGh0dHBzOi8vamluYS5haSkgYW5kIGxpY2Vuc2VkIHVuZGVyIFtNSVQgTGljZW5zZV0oLi9MSUNFTlNFKS4gW1dlIGFyZSBhY3RpdmVseSBoaXJpbmddKGh0dHBzOi8vam9icy5qaW5hLmFpKSBBSSBlbmdpbmVlcnMsIHNvbHV0aW9uIGVuZ2luZWVycyB0byBidWlsZCB0aGUgbmV4dCBuZXVyYWwgc2VhcmNoIGVjb3N5c3RlbSBpbiBvcGVuLXNvdXJjZS5cblxuPCEtLSBlbmQgc3VwcG9ydC1waXRjaCAtLT4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL2ppbmEtYWkvZGlzY29hcnQvdGFncyIs
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2ppbmEtYWkvZGlzY29hcnQiLA==
ICAgICJrZXl3b3JkcyI6ICJkaXNjb2FydCBkaWZmdXNpb24gYXJ0IGRhbGxlIGRpc2NvLWRpZmZ1c2lvbiBnZW5lcmF0aXZlLWFydCBjcmVhdGl2ZS1haSBjcm9zcy1tb2RhbCBtdWx0aS1tb2RhbCBhcnR3b3JrIiw=
ICAgICJsaWNlbnNlIjogIk1JVCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInN0YWJsZS1kaWZmdXNpb24iLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RhYmxlLWRpZmZ1c2lvbi8iLA==
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RhYmxlLWRpZmZ1c2lvbi8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogImh0dHBzOi8vZ2l0aHViLmNvbS9qaW5hLWFpL2Rpc2NvYXJ0L3RhZ3MiLA==
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9qaW5hLWFpL2Rpc2NvYXJ0Iiw=
ICAgICAgIlNvdXJjZSI6ICJodHRwczovL2dpdGh1Yi5jb20vamluYS1haS9kaXNjb2FydC8iLA==
ICAgICAgIlRyYWNrZXIiOiAiaHR0cHM6Ly9naXRodWIuY29tL2ppbmEtYWkvZGlzY29hcnQvaXNzdWVzIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RhYmxlLWRpZmZ1c2lvbi8wLjAuMC8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIkNyZWF0ZSBEaXNjbyBEaWZmdXNpb24gYXJ0d29ya3MgaW4gb25lIGxpbmUiLA==
ICAgICJ2ZXJzaW9uIjogIjAuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxNDY2OTk2MCw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiZWIzNjkwMTQ5MjYyNmUxZjgyM2Q2ZDhhODcxYzA4YmFkOGFjOTJkYjhlNWEzN2M1NjgyNjVkMTMxMWUxYTM4Iiw=
ICAgICAgICAgICJtZDUiOiAiZWFlYzIyZTMxNTBhZGM4ZDdhNzA3YjhmMGQyMWJiNWIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWNmYjYxZTk1MDg2ZmI1NGYzOTA1NWE3ODJiZjA4MjQyODkzMjRhY2JkNWJhZGVlODgyZmNmMDFiZDNmOTQ4ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RhYmxlLWRpZmZ1c2lvbi0wLjAuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlYWVjMjJlMzE1MGFkYzhkN2E3MDdiOGYwZDIxYmI1YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDY5NDc3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMi0wOC0wNVQyMDo0MzoyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMi0wOC0wNVQyMDo0MzoyMS4xNDMzMzBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iZS9iMy82OTAxNDkyNjI2ZTFmODIzZDZkOGE4NzFjMDhiYWQ4YWM5MmRiOGU1YTM3YzU2ODI2NWQxMzExZTFhMzgvc3RhYmxlLWRpZmZ1c2lvbi0wLjAuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYmViMzY5MDE0OTI2MjZlMWY4MjNkNmQ4YTg3MWMwOGJhZDhhYzkyZGI4ZTVhMzdjNTY4MjY1ZDEzMTFlMWEzOCIs
ICAgICAgICAibWQ1IjogImVhZWMyMmUzMTUwYWRjOGQ3YTcwN2I4ZjBkMjFiYjViIiw=
ICAgICAgICAic2hhMjU2IjogImVjZmI2MWU5NTA4NmZiNTRmMzkwNTVhNzgyYmYwODI0Mjg5MzI0YWNiZDViYWRlZTg4MmZjZjAxYmQzZjk0OGYi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInN0YWJsZS1kaWZmdXNpb24tMC4wLjAudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZWFlYzIyZTMxNTBhZGM4ZDdhNzA3YjhmMGQyMWJiNWIiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiA2OTQ3Nyw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjItMDgtMDVUMjA6NDM6MjEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjItMDgtMDVUMjA6NDM6MjEuMTQzMzMwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYmUvYjMvNjkwMTQ5MjYyNmUxZjgyM2Q2ZDhhODcxYzA4YmFkOGFjOTJkYjhlNWEzN2M1NjgyNjVkMTMxMWUxYTM4L3N0YWJsZS1kaWZmdXNpb24tMC4wLjAudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
