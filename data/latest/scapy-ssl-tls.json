ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAidGludGlud2ViIiw=
ICAgICJhdXRob3JfZW1haWwiOiAidGludGlud2ViQG9zdHN0cm9tLmNvbSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFtdLA==
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBpbWFnZTo6IGh0dHBzOi8vdHJhdmlzLWNpLm9yZy90aW50aW53ZWIvc2NhcHktc3NsX3Rscy5zdmdcbiAgICA6dGFyZ2V0OiBodHRwczovL3RyYXZpcy1jaS5vcmcvdGludGlud2ViL3NjYXB5LXNzbF90bHNcblxuU1NML1RMUyBsYXllcnMgZm9yIHNjYXB5IHRoZSBpbnRlcmFjdGl2ZSBwYWNrZXQgbWFuaXB1bGF0aW9uIHRvb2wuXG5cblNjYXB5LVNTTC9UTFNcbj09PT09PT09PT09PT1cblxuU1NML1RMUyBhbmQgRFRMUyBsYXllcnMgYW5kIFRMUyB1dGlsdGl5IGZ1bmN0aW9ucyBmb3JcbmBTY2FweSA8aHR0cDovL3d3dy5zZWNkZXYub3JnL3Byb2plY3RzL3NjYXB5Lz5gXy5cblxuQW4gb2ZmZW5zaXZlIHN0YWNrIGZvciBTU0x2MiwgU1NMdjMgKFRMUyksIFRMUywgRFRMUyBwZW5ldHJhdGlvbiB0ZXN0aW5nXG5wcm92aWRpbmcgZWFzeSBhY2Nlc3MgdG8gcGFja2V0IGNyYWZ0aW5nLCBhdXRvbWF0aWMgZGlzc2VjdGlvbixcbmVuY3J5cHRpb24sIGRlY3J5cHRpb24sIHNlc3Npb24gdHJhY2tpbmcsIGJhc2ljIFRMUyBzdGF0ZSBtYWNoaW5lcyxcbmF1dG9tYXRlZCBoYW5kc2hha2VzLCBUTFNTb2NrZXQgYWJzdHJhY3Rpb24sIGNyeXB0b2dyYXBoeSBjb250YWluZXJzLFxucHJlZGVmaW5lZCBob29rcywgU1NMIHNuaWZmaW5nIGluY2x1ZGluZyBtaW5pbWFsaXN0aWMgUENBUCBzdHJlYW1cbmRlY3J5cHRpb24gKFJTQVxcX1dJVEhcXF9cXCopLCBmdXp6aW5nIGFuZCBzZWN1cml0eSBzY2FubmluZ1xuKCpSZW5lZ290aWF0aW9uLCBIZWFydGJsZWVkLCBQb29kbGUsIExvZ2phbS9GcmVhaywgRFJPV04sIHZhcmlvdXMgQnVmZmVyXG5vdmVyZmxvd3MsIC4uLiopLlxuXG5Db21wYXRpYmlsaXR5XG4tLS0tLS0tLS0tLS0tXG5cbioqISEgdjIueCBicmVha3MgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdG8gdjEuMi54IGJyYW5jaCBkdWUgdG8gbWFqb3IgaW50ZXJmYWNlIHJlZmFjdG9yaW5nIGludHJvZHVjZWQgd2l0aCB0bHMxXzMgc3VwcG9ydCAhISoqXG5cbnNlZSBgUmVsZWFzZSBOb3RlcyA8aHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9zY2FweS1zc2xfdGxzL3JlbGVhc2VzPmBfIFxuXG5cbkZlYXR1cmVzXG4tLS0tLS0tLVxuXG4tICBQcm90b2NvbCBTdXBwb3J0XG4tICBUTFMgMS4zIGRyYWZ0IDE4XG4tICBUTFMgMS4yXG4tICBUTFMgMS4xXG4tICBUTFMgMS4wXG4tICBTU0x2My9UTFMgUmVjb3Jkc1xuLSAgU1NMdjIgSGFuZHNoYWtlXG4tICBEVExTIFJlY29yZHNcbi0gIFRMUyBTZXNzaW9uIENvbnRleHRcbi0gIFNlc3Npb24gVHJhY2tpbmdcbi0gIEtleSBzbmlmZmluZyAobWFzdGVyXFxfa2V5LCAuLi4pXG4tICBDbGllbnQgYW5kIFNlcnZlciBzdXBwb3J0XG4tICBTbmlmZmVyIC8gUENBUCBwcm9jZXNzb3IgYW5kIGRlY3J5cHRvclxuLSAgU3RhdGUgTWFjaGluZXNcbi0gIFRMUyBDbGllbnQgU2NhcHkgQXV0b21hdGFcbi0gIFRMUyBTZXJ2ZXIgU2NhcHkgQXV0b21hdGFcblxuSW5zdGFsbGF0aW9uXG4tLS0tLS0tLS0tLS1cblxuT3B0aW9uIDE6IHBpcCAtIGRvd25sb2FkIGxhdGVzdCByZWxlYXNlIGZyb20gdGhlIHB5dGhvbiBwYWNrYWdlIGluZGV4XG4nJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJydcblxuOjpcblxuICAgIHBpcCBpbnN0YWxsIHNjYXB5LXNzbF90bHNcblxuT3B0aW9uIDI6IGZyb20gc291cmNlXG4nJycnJycnJycnJycnJycnJycnJydcblxuOjpcblxuICAgIHBpcCBpbnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHRcbiAgICBweXRob24gc2V0dXAucHkgaW5zdGFsbFxuXG5PcHRpb24gMzogbWFudWFsIGluc3RhbGxhdGlvblxuJycnJycnJycnJycnJycnJycnJycnJycnJycnJydcblxuMSkgaW5zdGFsbCByZXF1aXJlbWVudHMgZnJvbSByZXF1aXJlbWVudHMudHh0XG5cbjIpIGxvY2F0ZSAqPCBzY2FweSA+KiBpbnN0YWxsYXRpb24gZGlyZWN0b3J5OlxuICAgYGBweXRob24gLWMgXCJpbXBvcnQgc2NhcHk7IHByaW50IHNjYXB5Ll9fZmlsZV9fXCJgYFxuXG4zKSBjb3B5IHNjYXB5XFxfc3NsXFxfdGxzL1xcKiB0byAqPCBzY2FweSA+Ki9sYXllcnMvXG5cbjQpIG1vZGlmeSAqPCBzY2FweSA+Ki9jb25maWcucHkgdG8gYXV0b2xvYWQgU1NML1RMU1xuXG46OlxuXG4gICAgQEAgLTM3MywzICszNzMsMyBAQFxuICAgIGxvYWRfbGF5ZXJzID0gW1wibDJcIiwgXCJpbmV0XCIsIFwiZGhjcFwiLCBcImRuc1wiLCBcImRvdDExXCIsIFwiZ3Byc1wiLCBcImhzcnBcIiwgXCJpbmV0NlwiLCBcImlyXCIsIFwiaXNha21wXCIsIFwibDJ0cFwiLFxuICAgIC0gICAgICAgICAgICAgICAgICAgXCJtZ2NwXCIsIFwibW9iaWxlaXBcIiwgXCJuZXRiaW9zXCIsIFwibmV0Zmxvd1wiLCBcIm50cFwiLCBcInBwcFwiLCBcInJhZGl1c1wiLCBcInJpcFwiLCBcInJ0cFwiLFxuICAgICsgICAgICAgICAgICAgICAgICAgXCJtZ2NwXCIsIFwibW9iaWxlaXBcIiwgXCJuZXRiaW9zXCIsIFwibmV0Zmxvd1wiLCBcIm50cFwiLCBcInBwcFwiLCBcInJhZGl1c1wiLCBcInJpcFwiLCBcInJ0cFwiLFwic3NsX3Rsc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWJla1wiLCBcInNraW5ueVwiLCBcInNtYlwiLCBcInNubXBcIiwgXCJ0ZnRwXCIsIFwieDUwOVwiLCBcImJsdWV0b290aFwiLCBcImRoY3A2XCIsIFwibGxtbnJcIiwgXCJzY3RwXCIsIFwidnJycFwiIF1cblxuXG5cbnZlcmlmeSBpbnN0YWxsYXRpb246XG4nJycnJycnJycnJycnJycnJycnJ1xuXG46OlxuXG4gICAgIz4gcHl0aG9uXG4gICAgICAgID4+PiBmcm9tIHNjYXB5X3NzbF90bHMuc3NsX3RscyBpbXBvcnQgVExTXG4gICAgICAgID4+PiBUTFNcbiAgICAgICAgPGNsYXNzICdzY2FweV9zc2xfdGxzLnNzbF90bHMuU1NMJz5cbiAgICAjPiBzY2FweSAgIyB2aWEgc2l0ZS1wYWNrYWdlc1xuICAgICAgICA+Pj4gZnJvbSBzY2FweV9zc2xfdGxzLnNzbF90bHMgaW1wb3J0IFRMU1xuICAgICAgICA+Pj4gVExTXG4gICAgICAgIDxjbGFzcyAnc2NhcHlfc3NsX3Rscy5zc2xfdGxzLlNTTCc+XG4gICAgIz4gc2NhcHkgICMgd2l0aCBsYXllcnMgYXV0b2xvYWRlZCB2aWEgY29uZmlnLnB5XG4gICAgICAgID4+PiBTU0xcbiAgICAgICAgPGNsYXNzICdzY2FweS5sYXllcnMuc3NsX3Rscy5TU0wnPlxuICAgICAgICA+Pj4gVExTXG4gICAgICAgIDxjbGFzcyAnc2NhcHkubGF5ZXJzLnNzbF90bHMuU1NMJz5cbiAgICAgICAgPj4+IFRMU1JlY29yZFxuICAgICAgICA8Y2xhc3MgJ3NjYXB5LmxheWVycy5zc2xfdGxzLlRMU1JlY29yZCc+XG5cblRyb3VibGVzaG9vdGluZ1xuLS0tLS0tLS0tLS0tLS0tXG5cbioqUToqKiBgYHNlc3Npb25jdHhfc25pZmZlci5weWBgIGRvZXMgbm90IHNlZW0gdG8gZGV0ZWN0IGBgU1NML1RMU2BgIG9yXG5kb2VzIG5vdCBzaG93IGFueSBzbmlmZmVkIGBgU1NML1RMU2BgIHNlc3Npb25zLlxuKipBOioqIFRoaXMgaXMgcHJvYmxlbSBjYXVzZWQgYnkgdGhlIGltcG9ydCBtYWdpYyBpblxuYGBzZXNzaW9uY3R4X3NuaWZmZXIucHlgYCB3aGVyZSB0aGUgZXhhbXBsZSBtaWdodCBtaXggdXAgaW1wb3J0cyBmcm9tXG50aGUgcHJvamVjdHMgZGlyZWN0b3J5IHdpdGggdGhlIG9uZXMgaW5zdGFsbGVkIHdpdGggYGBwaXBgYCBvciB2aWFcbmBgc2V0dXAucHkgaW5zdGFsbGBgLiBNYWtlIHN1cmUgdG8gdXBkYXRlIHRvIGBgPj12MS4yLjNgYCwgb3IgcnVuXG5gYHNlc3Npb25jdHhfc25pZmZlci5weWBgIGZyb20gYSBkaWZmZXJlbnQgZGlyZWN0b3J5LCBvciB1bmluc3RhbGxcbnNjYXB5LXNzbFxcX3RscyB0byB1c2UgaXQgZGlyZWN0bHkgZnJvbSB0aGUgcHJvamVjdCBkaXJlY3RvcnksIG9yIHJlbW92ZVxudGhlIGBgZnJvbSBzY2FweV9zc2xfdGxzLnNzbF90bHMgaW1wb3J0ICpgYCBpbXBvcnQgbGluZXMgZnJvbSB0aGVcbmV4YW1wbGUuXG4qKk5vdGU6KiogVGhpcyBoYXMgYmVlbiBhZGRyZXNzZWQgd2l0aCBgYD49djEuMi4zYGAgd2hlcmUgdGhlXG5zeXN0ZW0td2lkZSBpbXBvcnQgaGFzIHByZWZlcmVuY2UuXG5cbioqUToqKiBgYHNlc3Npb25jdHhfc25pZmZlci5weWBgIGRvZXMgbm90IHNlZW0gdG8gZGlzc2VjdCBsYXJnZVxuYGBTU0wvVExTYGAgcmVjb3JkcyBwcm9wZXJseS5cbioqQToqKiBJbiBvcmRlciB0byBmdWxseSByZWNvbnN0cnVjdCAqc25pZmZlZCogYGBTU0wvVExTYGAgcmVjb3JkcyBvbmVcbm5lZWRzIHRvIGBgZGVmcmFnbWVudGBgIHRoZSBzbmlmZmVkIElQIHBhY2tldHMgYW5kIGBgcmVhc3NlbWJsZWBgIHRoZW1cbnRvIFRDUCBzZWdtZW50cy4gU2luY2UgVENQIFN0cmVhbSByZWFzc2VtYmx5IGlzIG5vdCBhbiBlYXN5IHRhc2tcbihyZXRyYW5zbWlzc2lvbnMsIG91dC1vZi1vcmRlciBzZWdtZW50cywgLi4uKSAtIGFuZCB0aGVyZWZvcmUgb3V0IG9mXG5zY29wZSBmb3IgdGhpcyBwcm9qZWN0IC0gdGhlIGBgc2Vzc2lvbmN0eF9zbmlmZmVyLnB5YGAgZXhhbXBsZVxuaW1wbGVtZW50cyBhIHZlcnkgbGltaXRlZCB0Y3Agc3RyZWFtIHJlYXNzZW1ibHkgYWxnb3JpdGhtIHRoYXQgb25seVxudHJpZXMgdG8gcmVjb25zdHJ1Y3QgY29uc2VjdXRpdmUgc2VnbWVudHMgbm90IHRha2luZyBpbnRvIGFjY291bnQgYW55XG50eXBlIG9mIGZsb3ctY29udHJvbCAob3JkZXJpbmcsIHJldHJhbnNtaXNzaW9ucywgLi4uKS5cblxuRXhhbXBsZXNcbi0tLS0tLS0tXG5cbkhlYXJ0YmxlZWQgUmVjb3JkXG4nJycnJycnJycnJycnJycnJ1xuXG46OlxuXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgPj4+IChUTFNSZWNvcmQodmVyc2lvbj1cIlRMU18xXzFcIikvVExTSGVhcnRCZWF0KGxlbmd0aD0yKioxNC0xLGRhdGE9J2JsZWVkLi4uJykpLnNob3coKVxuICAgICMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICBjb250ZW50X3R5cGU9IGhlYXJ0YmVhdFxuICAgICAgdmVyc2lvbj0gVExTXzFfMVxuICAgICAgbGVuZ3RoPSBOb25lXG4gICAgIyMjWyBUTFMgRXh0ZW5zaW9uIEhlYXJ0QmVhdCBdIyMjXG4gICAgICAgICB0eXBlPSByZXF1ZXN0XG4gICAgICAgICBsZW5ndGg9IDE2MzgzXG4gICAgICAgICBkYXRhPSAnYmxlZWQuLi4nXG4gICAgICAgICBwYWRkaW5nPSAnJ1xuXG5IZWFydGJsZWVkIEF0dGFja1xuJycnJycnJycnJycnJycnJydcblxuOjpcblxuICAgIGltcG9ydCBzY2FweVxuICAgIGZyb20gc2NhcHkubGF5ZXJzLnNzbF90bHMgaW1wb3J0ICpcbiAgICBpbXBvcnQgc29ja2V0XG5cbiAgICB0YXJnZXQgPSAoJ3RhcmdldC5sb2NhbCcsNDQzKVxuXG4gICAgIyBjcmVhdGUgdGNwIHNvY2tldFxuICAgIHMgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSlcbiAgICBzLmNvbm5lY3QodGFyZ2V0KVxuICAgIHAgPSBUTFNSZWNvcmQodmVyc2lvbj1cIlRMU18xXzFcIikvVExTSGFuZHNoYWtlKCkvVExTQ2xpZW50SGVsbG8odmVyc2lvbj1cIlRMU18xXzFcIilcbiAgICBzLnNlbmRhbGwoc3RyKHApKVxuICAgIHMucmVjdig4MTkyKVxuICAgIHAgPSBUTFNSZWNvcmQodmVyc2lvbj1cIlRMU18xXzFcIikvVExTSGVhcnRCZWF0KGxlbmd0aD0yKioxNC0xLGRhdGE9J2JsZWVkLi4uJylcbiAgICBzLnNlbmRhbGwoc3RyKHApKVxuICAgIHJlc3AgPSBzLnJlY3YoODE5MilcbiAgICBwcmludCBcInJlc3A6ICVzXCIlcmVwcihyZXNwKVxuICAgIHMuY2xvc2UoKVxuXG5EaXNzZWN0IFRMU0NsaWVudEhlbGxvIChwY2FwKVxuJycnJycnJycnJycnJycnJycnJycnJycnJycnJydcblxuOjpcblxuICAgID4+PiByZHBjYXAoXCJhLmNhcFwiKVszXS5zaG93KClcbiAgICAjIyNbIEV0aGVybmV0IF0jIyNcbiAgICAgIGRzdD0gZDA6YWU6ZWM6YzM6NmU6ZDRcbiAgICAgIHNyYz0gZjA6MWY6YWY6MWM6YjY6MDFcbiAgICAgIHR5cGU9IDB4ODAwXG4gICAgIyMjWyBJUCBdIyMjXG4gICAgICAgICB2ZXJzaW9uPSA0TFxuICAgICAgICAgaWhsPSA1TFxuICAgICAgICAgdG9zPSAweDBcbiAgICAgICAgIGxlbj0gMjU3XG4gICAgICAgICBpZD0gMTI0NTdcbiAgICAgICAgIGZsYWdzPSBERlxuICAgICAgICAgZnJhZz0gMExcbiAgICAgICAgIHR0bD0gMTI4XG4gICAgICAgICBwcm90bz0gdGNwXG4gICAgICAgICBjaGtzdW09IDB4NWI5N1xuICAgICAgICAgc3JjPSAxOTIuMTY4LjIuNDVcbiAgICAgICAgIGRzdD0gMjE2LjU4LjIxMC4xNjZcbiAgICAgICAgIFxcb3B0aW9uc1xcXG4gICAgIyMjWyBUQ1AgXSMjI1xuICAgICAgICAgICAgc3BvcnQ9IDU0OTg4XG4gICAgICAgICAgICBkcG9ydD0gaHR0cHNcbiAgICAgICAgICAgIHNlcT0gMjQwMzgwMjgwMUxcbiAgICAgICAgICAgIGFjaz0gMzY3MTk2ODUyMExcbiAgICAgICAgICAgIGRhdGFvZnM9IDVMXG4gICAgICAgICAgICByZXNlcnZlZD0gMExcbiAgICAgICAgICAgIGZsYWdzPSBQQVxuICAgICAgICAgICAgd2luZG93PSA2NDM1MFxuICAgICAgICAgICAgY2hrc3VtPSAweDIxMGVcbiAgICAgICAgICAgIHVyZ3B0cj0gMFxuICAgICAgICAgICAgb3B0aW9ucz0gW11cbiAgICAjIyNbIFNTTC9UTFMgXSMjI1xuICAgICAgICAgICAgICAgXFxyZWNvcmRzXFxcbiAgICAgICAgICAgICAgICB8IyMjWyBUTFMgUmVjb3JkIF0jIyNcbiAgICAgICAgICAgICAgICB8ICBjb250ZW50X3R5cGU9IGhhbmRzaGFrZVxuICAgICAgICAgICAgICAgIHwgIHZlcnNpb249IFRMU18xXzBcbiAgICAgICAgICAgICAgICB8ICBsZW5ndGg9IDB4ZDRcbiAgICAgICAgICAgICAgICB8IyMjWyBUTFMgSGFuZHNoYWtlIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICB0eXBlPSBjbGllbnRfaGVsbG9cbiAgICAgICAgICAgICAgICB8ICAgICBsZW5ndGg9IDB4ZDBcbiAgICAgICAgICAgICAgICB8IyMjWyBUTFMgQ2xpZW50IEhlbGxvIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICB2ZXJzaW9uPSBUTFNfMV8yXG4gICAgICAgICAgICAgICAgfCAgICAgICAgZ210X3VuaXhfdGltZT0gMzI0MjkwNDkzMExcbiAgICAgICAgICAgICAgICB8ICAgICAgICByYW5kb21fYnl0ZXM9ICd4XCJXXFx4ZTZcXHhmZFxceDk3XFx4YjdcXHhhZiBcXHhkYVxceDEyY1xceDhjXFx4MDcgb1xceGUzXFx0aFxceGMzXFx4YzFcXHhlMFxceGUzQ1xceGU0XFx4MDBcXHhjNlxceGM3J1xuICAgICAgICAgICAgICAgIHwgICAgICAgIHNlc3Npb25faWRfbGVuZ3RoPSAweDBcbiAgICAgICAgICAgICAgICB8ICAgICAgICBzZXNzaW9uX2lkPSAnJ1xuICAgICAgICAgICAgICAgIHwgICAgICAgIGNpcGhlcl9zdWl0ZXNfbGVuZ3RoPSAweDI4XG4gICAgICAgICAgICAgICAgfCAgICAgICAgY2lwaGVyX3N1aXRlcz0gWydFQ0RIRV9FQ0RTQV9XSVRIX0FFU18xMjhfR0NNX1NIQTI1NicsICdFQ0RIRV9SU0FfV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnREhFX1JTQV9XSVRIX0FFU18xMjhfR0NNX1NIQTI1NicsICcweGNjMTQnLCAnMHhjYzEzJywgJ0VDREhFX0VDRFNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBJywgJ0VDREhFX0VDRFNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBJywgJ0VDREhFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQScsICdFQ0RIRV9SU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEnLCAnRUNESEVfRUNEU0FfV0lUSF9SQzRfMTI4X1NIQScsICdFQ0RIRV9SU0FfV0lUSF9SQzRfMTI4X1NIQScsICdESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBJywgJ0RIRV9EU1NfV0lUSF9BRVNfMTI4X0NCQ19TSEEnLCAnREhFX1JTQV9XSVRIX0FFU18yNTZfQ0JDX1NIQScsICdSU0FfV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBJywgJ1JTQV9XSVRIX0FFU18yNTZfQ0JDX1NIQScsICdSU0FfV0lUSF8zREVTX0VERV9DQkNfU0hBJywgJ1JTQV9XSVRIX1JDNF8xMjhfU0hBJywgJ1JTQV9XSVRIX1JDNF8xMjhfTUQ1J11cbiAgICAgICAgICAgICAgICB8ICAgICAgICBjb21wcmVzc2lvbl9tZXRob2RzX2xlbmd0aD0gMHgxXG4gICAgICAgICAgICAgICAgfCAgICAgICAgY29tcHJlc3Npb25fbWV0aG9kcz0gWydOVUxMJ11cbiAgICAgICAgICAgICAgICB8ICAgICAgICBleHRlbnNpb25zX2xlbmd0aD0gMHg3ZlxuICAgICAgICAgICAgICAgIHwgICAgICAgIFxcZXh0ZW5zaW9uc1xcXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBFeHRlbnNpb24gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICB0eXBlPSBzZXJ2ZXJfbmFtZVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICBsZW5ndGg9IDB4MTdcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIEV4dGVuc2lvbiBTZXJ2ZXJuYW1lIEluZGljYXRpb24gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsZW5ndGg9IDB4MTVcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgXFxzZXJ2ZXJfbmFtZXNcXFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCMjI1sgVExTIFNlcnZlcm5hbWUgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgdHlwZT0gaG9zdFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgbGVuZ3RoPSAweDEyXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBkYXRhPSAnYWQuZG91YmxlY2xpY2submV0J1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgdHlwZT0gcmVuZWdvdGlhdGlvbl9pbmZvXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIGxlbmd0aD0gMHgxXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBFeHRlbnNpb24gUmVuZWdvdGlhdGlvbiBJbmZvIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgbGVuZ3RoPSAweDBcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgZGF0YT0gJydcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIEV4dGVuc2lvbiBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIHR5cGU9IHN1cHBvcnRlZF9ncm91cHNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgbGVuZ3RoPSAweDhcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIEV4dGVuc2lvbiBFbGxpcHRpYyBDdXJ2ZXMgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsZW5ndGg9IDB4NlxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBlbGxpcHRpY19jdXJ2ZXM9IFsnc2VjcDI1NnIxJywgJ3NlY3AzODRyMScsICdzZWNwNTIxcjEnXVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgdHlwZT0gZWNfcG9pbnRfZm9ybWF0c1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICBsZW5ndGg9IDB4MlxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIEVDIFBvaW50cyBGb3JtYXQgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsZW5ndGg9IDB4MVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBlY19wb2ludF9mb3JtYXRzPSBbJ3VuY29tcHJlc3NlZCddXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBFeHRlbnNpb24gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICB0eXBlPSBTZXNzaW9uVGlja2V0IFRMU1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICBsZW5ndGg9IDB4MFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgdHlwZT0gbmV4dF9wcm90b2NvbF9uZWdvdGlhdGlvblxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICBsZW5ndGg9IDB4MFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgdHlwZT0gYXBwbGljYXRpb25fbGF5ZXJfcHJvdG9jb2xfbmVnb3RpYXRpb25cbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgbGVuZ3RoPSAweDFhXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBFeHRlbnNpb24gQXBwbGljYXRpb24tTGF5ZXIgUHJvdG9jb2wgTmVnb3RpYXRpb24gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsZW5ndGg9IDB4MThcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgXFxwcm90b2NvbF9uYW1lX2xpc3RcXFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCMjI1sgVExTIEFMUE4gUHJvdG9jb2wgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgbGVuZ3RoPSAweDhcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIGRhdGE9ICdzcGR5LzMuMSdcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwjIyNbIFRMUyBBTFBOIFByb3RvY29sIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIGxlbmd0aD0gMHg1XG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBkYXRhPSAnaDItMTQnXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8IyMjWyBUTFMgQUxQTiBQcm90b2NvbCBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBsZW5ndGg9IDB4OFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgZGF0YT0gJ2h0dHAvMS4xJ1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgdHlwZT0gMHg3NTUwXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIGxlbmd0aD0gMHgwXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBFeHRlbnNpb24gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICB0eXBlPSBzdGF0dXNfcmVxdWVzdFxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICBsZW5ndGg9IDB4NVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBSYXcgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsb2FkPSAnXFx4MDFcXHgwMFxceDAwXFx4MDBcXHgwMCdcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIEV4dGVuc2lvbiBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIHR5cGU9IHNpZ25lZF9jZXJ0aWZpY2F0ZV90aW1lc3RhbXBcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgbGVuZ3RoPSAweDBcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIEV4dGVuc2lvbiBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIHR5cGU9IHNpZ25hdHVyZV9hbGdvcml0aG1zXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgIGxlbmd0aD0gMHgxMlxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8IyMjWyBUTFMgRXh0ZW5zaW9uIFNpZ25hdHVyZSBBbmQgSGFzaCBBbGdvcml0aG0gXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICBsZW5ndGg9IDB4MTBcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgXFxhbGdzXFxcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwjIyNbIFRMUyBTaWduYXR1cmUgSGFzaCBBbGdvcml0aG0gUGFpciBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBoYXNoX2FsZz0gc2hhMjU2XG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBzaWdfYWxnPSByc2FcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwjIyNbIFRMUyBTaWduYXR1cmUgSGFzaCBBbGdvcml0aG0gUGFpciBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBoYXNoX2FsZz0gc2hhMzg0XG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBzaWdfYWxnPSByc2FcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwjIyNbIFRMUyBTaWduYXR1cmUgSGFzaCBBbGdvcml0aG0gUGFpciBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBoYXNoX2FsZz0gc2hhMVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgc2lnX2FsZz0gcnNhXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8IyMjWyBUTFMgU2lnbmF0dXJlIEhhc2ggQWxnb3JpdGhtIFBhaXIgXSMjI1xuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgaGFzaF9hbGc9IHNoYTI1NlxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCAgc2lnX2FsZz0gZWNkc2FcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwjIyNbIFRMUyBTaWduYXR1cmUgSGFzaCBBbGdvcml0aG0gUGFpciBdIyMjXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBoYXNoX2FsZz0gc2hhMzg0XG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBzaWdfYWxnPSBlY2RzYVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCMjI1sgVExTIFNpZ25hdHVyZSBIYXNoIEFsZ29yaXRobSBQYWlyIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIGhhc2hfYWxnPSBzaGExXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBzaWdfYWxnPSBlY2RzYVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCMjI1sgVExTIFNpZ25hdHVyZSBIYXNoIEFsZ29yaXRobSBQYWlyIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIGhhc2hfYWxnPSBzaGEyNTZcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIHNpZ19hbGc9IGRzYVxuICAgICAgICAgICAgICAgIHwgICAgICAgICB8ICAgICAgfCMjI1sgVExTIFNpZ25hdHVyZSBIYXNoIEFsZ29yaXRobSBQYWlyIF0jIyNcbiAgICAgICAgICAgICAgICB8ICAgICAgICAgfCAgICAgIHwgIGhhc2hfYWxnPSBzaGExXG4gICAgICAgICAgICAgICAgfCAgICAgICAgIHwgICAgICB8ICBzaWdfYWxnPSBkc2FcblxuRnVsbCBIYW5kc2hha2Ugd2l0aCBBcHBsaWNhdGlvbiBEYXRhIChESEVcXF9SU0FcXF9XSVRIXFxfQUVTXFxfMTI4XFxfQ0JDXFxfU0hBKVxuJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJ1xuXG5zZWUgL2V4YW1wbGVzL2Z1bGxcXF9yc2FcXF9jb25uZWN0aW9uXFxfd2l0aFxcX2FwcGxpY2F0aW9uXFxfZGF0YS5weVxuXG46OlxuXG4gICAgIyBweXRob24gZXhhbXBsZXMvZnVsbF9yc2FfY29ubmVjdGlvbl93aXRoX2FwcGxpY2F0aW9uX2RhdGEucHkgbG9jYWxob3N0IDQ0M1xuICAgIENvbm5lY3RlZCB0byBzZXJ2ZXI6ICgnbG9jYWxob3N0JywgNDQzKVxuICAgICMjI1sgU1NML1RMUyBdIyMjXG4gICAgICBcXHJlY29yZHMgICBcXFxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gaGFuZHNoYWtlXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMVxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MmFcbiAgICAgICB8IyMjWyBUTFMgSGFuZHNoYWtlIF0jIyNcbiAgICAgICB8ICAgICB0eXBlICAgICAgPSBzZXJ2ZXJfaGVsbG9cbiAgICAgICB8ICAgICBsZW5ndGggICAgPSAweDI2XG4gICAgICAgfCMjI1sgVExTIFNlcnZlciBIZWxsbyBdIyMjXG4gICAgICAgfCAgICAgICAgdmVyc2lvbiAgID0gVExTXzFfMVxuICAgICAgIHwgICAgICAgIGdtdF91bml4X3RpbWU9IDE0Mzk1Nzg0NzVcbiAgICAgICB8ICAgICAgICByYW5kb21fYnl0ZXM9ICdTLVxceDBmXFx4MWJ0XFx4OTVcXHhjY1xceGE5d3dJXFx4YjlcXHhmNVxceDEwXFx4MTJcXHgxMSpcXHg4MiVcXHhkZFxceGI2XFx4MWVcXHhjMGJcXHhkY1xceGFjXFx4OWInXG4gICAgICAgfCAgICAgICAgc2Vzc2lvbl9pZF9sZW5ndGg9IDB4MFxuICAgICAgIHwgICAgICAgIHNlc3Npb25faWQ9ICcnXG4gICAgICAgfCAgICAgICAgY2lwaGVyX3N1aXRlPSBESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBXG4gICAgICAgfCAgICAgICAgY29tcHJlc3Npb25fbWV0aG9kPSBOVUxMXG4gICAgICAgfCAgICAgICAgXFxleHRlbnNpb25zXFxcbiAgICAgICB8IyMjWyBUTFMgUmVjb3JkIF0jIyNcbiAgICAgICB8ICBjb250ZW50X3R5cGU9IGhhbmRzaGFrZVxuICAgICAgIHwgIHZlcnNpb24gICA9IFRMU18xXzFcbiAgICAgICB8ICBsZW5ndGggICAgPSAweDJkZVxuICAgICAgIHwjIyNbIFRMUyBIYW5kc2hha2UgXSMjI1xuICAgICAgIHwgICAgIHR5cGUgICAgICA9IGNlcnRpZmljYXRlXG4gICAgICAgfCAgICAgbGVuZ3RoICAgID0gMHgyZGFcbiAgICAgICB8IyMjWyBUTFMgQ2VydGlmaWNhdGUgTGlzdCBdIyMjXG4gICAgICAgfCAgICAgICAgbGVuZ3RoICAgID0gMHgyZDdcbiAgICAgICB8ICAgICAgICBcXGNlcnRpZmljYXRlc1xcXG4gICAgICAgfCAgICAgICAgIHwjIyNbIFRMUyBDZXJ0aWZpY2F0ZSBdIyMjXG4gICAgICAgfCAgICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MmQ0XG4gICAgICAgfCAgICAgICAgIHwgIFxcZGF0YSAgICAgIFxcXG4gICAgICAgfCAgICAgICAgIHwgICB8IyMjWyBYNTA5Q2VydCBdIyMjXG4gICAgICAgfCAgICAgICAgIHwgICB8ICB2ZXJzaW9uICAgPSA8QVNOMV9JTlRFR0VSWzJMXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNuICAgICAgICA9IDxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNpZ25fYWxnbyA9IDxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBzYV92YWx1ZSAgPSA8QVNOMV9OVUxMWzBMXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIFxcaXNzdWVyICAgIFxcXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCMjI1sgWDUwOVJETiBdIyMjXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCAgb2lkICAgICAgID0gPEFTTjFfT0lEWycuMi41LjQuMyddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgIHwgIHZhbHVlICAgICA9IDxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgbm90X2JlZm9yZT0gPEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIG5vdF9hZnRlciA9IDxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBcXHN1YmplY3QgICBcXFxuICAgICAgIHwgICAgICAgICB8ICAgfCAgIHwjIyNbIFg1MDlSRE4gXSMjI1xuICAgICAgIHwgICAgICAgICB8ICAgfCAgIHwgIG9pZCAgICAgICA9IDxBU04xX09JRFsnLjIuNS40LjMnXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgICB8ICB2YWx1ZSAgICAgPSA8QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHB1YmtleV9hbGdvPSA8QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgcGtfdmFsdWUgID0gPEFTTjFfTlVMTFswTF0+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBwdWJrZXkgICAgPSA8QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBcXHg1MDl2M2V4dCBcXFxuICAgICAgIHwgICAgICAgICB8ICAgfCAgIHwjIyNbIFg1MDl2M0V4dCBdIyMjXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCAgdmFsICAgICAgID0gPEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNpZ25fYWxnbzI9IDxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBzYTJfdmFsdWUgPSA8QVNOMV9OVUxMWzBMXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNpZ25hdHVyZSA9IDxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPlxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gaGFuZHNoYWtlXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMVxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MjBkXG4gICAgICAgfCMjI1sgVExTIEhhbmRzaGFrZSBdIyMjXG4gICAgICAgfCAgICAgdHlwZSAgICAgID0gc2VydmVyX2tleV9leGNoYW5nZVxuICAgICAgIHwgICAgIGxlbmd0aCAgICA9IDB4MjA5XG4gICAgICAgfCMjI1sgVExTIFNlcnZlciBLZXkgRXhjaGFuZ2UgXSMjI1xuICAgICAgIHwjIyNbIFRMUyBEaWZmaWUtSGVsbG1hbiBTZXJ2ZXIgUGFyYW1zIF0jIyNcbiAgICAgICB8ICAgICAgICAgICBwX2xlbmd0aCAgPSAweDgwXG4gICAgICAgfCAgICAgICAgICAgcCAgICAgICAgID0gJ1xceGQ2fVxceGU0QFxceGNiXFx4YmJcXHhkY1xceDE5NlxceGQ2XFx4OTNcXHhkM0pcXHhmZFxcblxceGQ1XFx4MGNcXHg4NFxceGQyOVxceGE0X1JcXHgwYlxceGI4XFx4ODF0XFx4Y2JcXHg5OFxceGJjXFx4ZTlRXFx4ODRcXHg5ZlxceDkxLmNcXHg5Y3JcXHhmYlxceDEzXFx4YjRcXHhiNFxceGQ3XFx4MTd+XFx4MTZcXHhkNVpcXHhjMXlcXHhiYUJcXHgwYiopXFx4ZmUySkZ6Y15cXHg4MVxceGZmWVxceDAxN3tcXHhlZFxceGRjXFx4ZmQzXFx4MTZcXHg4YUZcXHgxYVxceGFkO3JcXHhkYVxceGU4XFx4ODZcXHgwMHhcXHgwNFtcXHgwN1xceGE3XFx4ZGJcXHhjYXh0XFx4MDh9XFx4MTVcXHgxMFxceGVhXFx4OWZcXHhjY1xceDlkXFx4ZGQzXFx4MDVcXHgwN1xceGRkYlxceGRiXFx4ODhcXHhhZVxceGFhdH1cXHhlMFxceGY0XFx4ZDZcXHhlMlxceGJkaFxceGIwXFx4ZTc5PlxceDBmJCFcXHg4ZVxceGIzJ1xuICAgICAgIHwgICAgICAgICAgIGdfbGVuZ3RoICA9IDB4MVxuICAgICAgIHwgICAgICAgICAgIGcgICAgICAgICA9ICdcXHgwMidcbiAgICAgICB8ICAgICAgICAgICB5c19sZW5ndGggPSAweDgwXG4gICAgICAgfCAgICAgICAgICAgeV9zICAgICAgID0gXCJcXHhjOVxceDFhS1xceGU1XFx4YzJcXHhkOUBcXHg4M1xceDA1XFx4ZDdcXHhkMUoxW1xceGRiM1xceGMyXFx4YThcXHhiN1xceGEwXFx4ZGRcXHhjNmNGamplXFx4OTJkXFx4YzBcXG5cXHgxYlxceGI2TlxceGYzZlxceDljXFx4YTZcXHhiODZcXHhmM1xceGQ4XFx4OTFcXHhjZlxceDE4XFx4ODd8M1xceDEzZmhcXHg4YSRcXHhkZlxceGQ2XFx4YjZEXFx4OWRcXHg5MFxceGY2XFx4MDgqXFx4ZWU/XFx4MWZcXHhjMy98XFx4YmVcXHhiY1xceGRkXFx4ZjBcXHg5YVhcXHg4YlxceDAwRVxceDA2XFx4MDFcXHg5YVxceGMzXFx4ZmNcXHhiMlxceDFiXFx4YTVcXHhhNz4zXFx4YzhcXHg5NVxceDA3XFx4ZmJcXHg4NFxceDFiXFx4ZjlcXHhhMiElXFx4ZmNcXHhmNFxceGNhYFxceDFhJ1xceGQxXFx4ZWFqXFx4MTVjJVxceGU3XFx4YTggXFx4ZmUsRVxceDgyXFx4OGVcXHhjMlNcXHhkNGVcXHg4OFxceGY2XFx4ZGVcXHhhN1xceGQ1IFwiXG4gICAgICAgfCAgICAgICAgICAgc2lnX2xlbmd0aD0gMHgxMDBcbiAgICAgICB8ICAgICAgICAgICBzaWcgICAgICAgPSAnMVxceGQ1ITZIXFx4ZmFcXHgwZVxceGUxXFx4N2ZcXHhhOFxceDEzIVxceDgzXFx4MDVYMVxceDkyXFx4YWJcXHg5ZV5cXHg4Y1xceGExXFx4ZTJcXHgwNVFcXHhkYWpiXFx4MWJcXHg5OFxceGMwXFx4YzB5XFx4Y2JKNSFAUFxceGUxXFx4ZjAyXFx4YzlBckBcXHhmNVxceDFkXFx4ZTNcXHhhNzxcXHgxMDpcXHhjZFxceGFiXFx4YTZcXHJcXHhmMnBcXHhiY0AmbDhcXHhmOXxcXHhjZFxceGM2XFx4ZjVLXFx4MWNcXHhiZFxceGIwUDFcXHgxOFdcXHg5Yjk4T1xceGE2XFx4ZjRcXHg5NVxcbm1cXHg5MlxceGI0XFx4ZjhcIm9cXHhlYlxceGNjXFx4ZjdcXHhiZFxceGE2XFx4ZjVcXHg5YlxceGM5XFx4ZTFJd1xceGU4XFx4ZWZrblxceDEzLFxceDdmXFxcXFxceDdmKFxceGM3WFxceGFkfFxceDE5XFx4YmRcXG5cXHg4NVxceGNkMVxceGEzXFx4YjY9XFx4ZDFcXHhkYVxceGQxXFx4ZWNcXHg5NUpcXHg4MlxceGY0XFx4Y2Mvd3ogUFxceDE2XFx4YzNcXHg5OXlcXHhjMVxceDA4QVxceGVjXFx4MTFcXHhlYlxceGI2dEEqK1xceGZmXFx4ZDVcXHgwZVxceGRiXFx4ZjBJXFx4YjVeXFx4OGQyXFx4YzBcXHg4YlxceDA2eXV3XFx4ZTlaXFx4ODB2XFx4ZDhcXHhjYVxceGU0XFx4MWYmXFx4MTRcXHhkNFxceDhlXFx4MTNcXHhlNFxceGVmLzZKcVxceGU2XFx4ODdZXFx4YjZpXFx4MDNZXFx4YTg4XFx4ZjNcXHhlNnxiOG5cXHhhZVxceGY0XFx4ODFcXHhjMlxceGQ2XFx4Y2RcXHg4MlxceGU5PVxceGUxXFx4ZmVcXHJcXHg5MFxceDlmcFxceGE0XFx0XFx4ZThcXHhkNFxceDdmTFxceGEzNVxceGFhI1xceGFhXFx4OWFcXHgwNVxceGJmT1xceGU5d1xceDExZFxceGE0XFx4YTdcXHg5OD9cXHhjYlxceGVjXFx4MWNcXHhjNjpsXFx4MGNiN1xceGIwISxQXFx4Y2MnXG4gICAgICAgfCMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICAgfCAgY29udGVudF90eXBlPSBoYW5kc2hha2VcbiAgICAgICB8ICB2ZXJzaW9uICAgPSBUTFNfMV8xXG4gICAgICAgfCAgbGVuZ3RoICAgID0gMHg0XG4gICAgICAgfCMjI1sgVExTIEhhbmRzaGFrZSBdIyMjXG4gICAgICAgfCAgICAgdHlwZSAgICAgID0gc2VydmVyX2hlbGxvX2RvbmVcbiAgICAgICB8ICAgICBsZW5ndGggICAgPSAweDBcbiAgICAjIyNbIFNTTC9UTFMgXSMjI1xuICAgICAgXFxyZWNvcmRzICAgXFxcbiAgICAgICB8IyMjWyBUTFMgUmVjb3JkIF0jIyNcbiAgICAgICB8ICBjb250ZW50X3R5cGU9IGNoYW5nZV9jaXBoZXJfc3BlY1xuICAgICAgIHwgIHZlcnNpb24gICA9IFRMU18xXzFcbiAgICAgICB8ICBsZW5ndGggICAgPSAweDFcbiAgICAgICB8IyMjWyBUTFMgQ2hhbmdlQ2lwaGVyU3BlYyBdIyMjXG4gICAgICAgfCAgICAgbWVzc2FnZSAgID0gJ1xceDAxJ1xuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gaGFuZHNoYWtlXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMVxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4NDBcbiAgICAgICB8IyMjWyBUTFMgUGxhaW50ZXh0IF0jIyNcbiAgICAgICB8ICAgICBkYXRhICAgICAgPSAnXFx4MTRcXHgwMFxceDAwXFx4MGNcXHg5NFxcdEpcXHhiMFxceGU1XFx4OGFcXHhjYlxceGNlTlxceGEzXFx4MTZcXHg4NidcbiAgICAgICB8ICAgICBleHBsaWNpdF9pdj0gJ1xceGJkXFx4ZDNcXHhjZlxceDBlXFx4ZDZRXFx4YmFcXHhlYzpcXHhhZFxceGMwXFx4YjhcXHg4MSVhISdcbiAgICAgICB8ICAgICBtYWMgICAgICAgPSBcIkAqJz86XFx4MWJDUlxceGY1VVpcXHhjYlxcdFxceGJjXFx4MTJDd1dcXHhmY1xceDAxXCJcbiAgICAgICB8ICAgICBwYWRkaW5nICAgPSAnXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYidcbiAgICAgICB8ICAgICBwYWRkaW5nX2xlbj0gMHhiXG4gICAgRmluaXNoZWQgaGFuZHNoYWtlLiBTZW5kaW5nIGFwcGxpY2F0aW9uIGRhdGEgKEdFVCByZXF1ZXN0KVxuICAgIEdvdCByZXNwb25zZSBmcm9tIHNlcnZlclxuICAgICMjI1sgU1NML1RMUyBdIyMjXG4gICAgICBcXHJlY29yZHMgICBcXFxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gYXBwbGljYXRpb25fZGF0YVxuICAgICAgIHwgIHZlcnNpb24gICA9IFRMU18xXzFcbiAgICAgICB8ICBsZW5ndGggICAgPSAweDE0MFxuICAgICAgIHwjIyNbIFRMUyBQbGFpbnRleHQgXSMjI1xuICAgICAgIHwgICAgIGRhdGEgICAgICA9ICdIVFRQLzEuMSAyMDAgT0tcXHJcXG5EYXRlOiBGcmksIDE0IEF1ZyAyMDE1IDE4OjU0OjM2IEdNVFxcclxcblNlcnZlcjogQXBhY2hlLzIuMi4yMiAoRGViaWFuKVxcclxcbkxhc3QtTW9kaWZpZWQ6IFRodSwgMjUgQXByIDIwMTMgMTA6NTA6NTcgR01UXFxyXFxuRVRhZzogXCI0NmZjNS1iMS00ZGIyZDMxN2IwNjQwXCJcXHJcXG5BY2NlcHQtUmFuZ2VzOiBieXRlc1xcclxcbkNvbnRlbnQtTGVuZ3RoOiAxNzdcXHJcXG5WYXJ5OiBBY2NlcHQtRW5jb2RpbmdcXHJcXG5Db250ZW50LVR5cGU6IHRleHQvaHRtbFxcclxcblgtUGFkOiBhdm9pZCBicm93c2VyIGJ1Z1xcclxcblxcclxcbidcbiAgICAgICB8ICAgICBleHBsaWNpdF9pdj0gJ1xceGE3XFx4YjVwXFx4ZjlcXHg4NyFcXHg4OVxceDFmU3tcXHhiM1xceDkwXFx4ODY9XXcnXG4gICAgICAgfCAgICAgbWFjICAgICAgID0gJ1xceGFmXFx4Y2ZcXHg4NS5cXHgxZlxceGVkXFx4MThcXHg5N1xceGYxTC5cXHhhMVxceDAzXFx4YWJoXFx4Y2RcXHhjNlxceGFhXFx4Y2JcXHhkZidcbiAgICAgICB8ICAgICBwYWRkaW5nICAgPSAnJ1xuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gYXBwbGljYXRpb25fZGF0YVxuICAgICAgIHwgIHZlcnNpb24gICA9IFRMU18xXzFcbiAgICAgICB8ICBsZW5ndGggICAgPSAweGUwXG4gICAgICAgfCMjI1sgVExTIFBsYWludGV4dCBdIyMjXG4gICAgICAgfCAgICAgZGF0YSAgICAgID0gJzxodG1sPjxib2R5PjxoMT5JdCB3b3JrcyE8L2gxPlxcbjxwPlRoaXMgaXMgdGhlIGRlZmF1bHQgd2ViIHBhZ2UgZm9yIHRoaXMgc2VydmVyLjwvcD5cXG48cD5UaGUgd2ViIHNlcnZlciBzb2Z0d2FyZSBpcyBydW5uaW5nIGJ1dCBubyBjb250ZW50IGhhcyBiZWVuIGFkZGVkLCB5ZXQuPC9wPlxcbjwvYm9keT48L2h0bWw+XFxuJ1xuICAgICAgIHwgICAgIGV4cGxpY2l0X2l2PSAnRnFWXFx4ODZcXHhlOHZcXHhhZm9KelxceDFjXFx4ZGJcXHhjNlxceDBiXFx4OGFiJ1xuICAgICAgIHwgICAgIG1hYyAgICAgICA9ICdcXHgxNVxceDliIVxceDE4M1xceGVhXFx4YjBcXHhhMFxceDE1XFx4ZWVkYzJIXFx4ZDhcXHg5N1xceGY4XFx4OGRcXHhhYXknXG4gICAgICAgfCAgICAgcGFkZGluZyAgID0gJ1xcblxcblxcblxcblxcblxcblxcblxcblxcblxcbidcbiAgICAgICB8ICAgICBwYWRkaW5nX2xlbj0gMHhhXG4gICAgPFRMU1Nlc3Npb25DdHg6IGlkPTE1MzYyMjQ3NlxuICAgICAgICAgICAgIHBhcmFtcy5oYW5kc2hha2UuY2xpZW50PTxUTFNDbGllbnRIZWxsbyAgdmVyc2lvbj1UTFNfMV8xIGNpcGhlcl9zdWl0ZXM9WydESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBJ10gY29tcHJlc3Npb25fbWV0aG9kcz1bJ05VTEwnXSB8PlxuICAgICAgICAgICAgIHBhcmFtcy5oYW5kc2hha2Uuc2VydmVyPTxUTFNTZXJ2ZXJIZWxsbyAgdmVyc2lvbj1UTFNfMV8xIGdtdF91bml4X3RpbWU9MTQzOTU3ODQ3NSByYW5kb21fYnl0ZXM9J1MtXFx4MGZcXHgxYnRcXHg5NVxceGNjXFx4YTl3d0lcXHhiOVxceGY1XFx4MTBcXHgxMlxceDExKlxceDgyJVxceGRkXFx4YjZcXHgxZVxceGMwYlxceGRjXFx4YWNcXHg5Yicgc2Vzc2lvbl9pZF9sZW5ndGg9MHgwIHNlc3Npb25faWQ9JycgY2lwaGVyX3N1aXRlPURIRV9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEgY29tcHJlc3Npb25fbWV0aG9kPU5VTEwgfD5cbiAgICAgICAgICAgICBwYXJhbXMubmVnb3RpYXRlZC52ZXJzaW9uPVRMU18xXzFcbiAgICAgICAgICAgICBwYXJhbXMubmVnb3RpYXRlZC5jaXBoZXJzdWl0ZT1ESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBXG4gICAgICAgICAgICAgcGFyYW1zLm5lZ290aWF0ZWQua2V5X2V4Y2hhbmdlPURIRVxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmVuY3J5cHRpb249KCdBRVMnLCAxNiwgJ0NCQycpXG4gICAgICAgICAgICAgcGFyYW1zLm5lZ290aWF0ZWQubWFjPVNIQVxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmNvbXByZXNzaW9uPU5VTExcbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTJkNGYyYz5cbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTJkNGY4Yz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTJkNGZhYz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTJkNGZjYz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLnJzYS5wcml2a2V5PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLnJzYS5wdWJrZXk9PENyeXB0by5DaXBoZXIuUEtDUzFfdjFfNS5QS0NTMTE1X0NpcGhlciBpbnN0YW5jZSBhdCAweDkyYjViY2M+XG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kc2EucHJpdmtleT1Ob25lXG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kc2EucHVia2V5PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmRoLng9J1xceGFjXFx4OTNcXHg5NFxceGQ4XFx4ZjhcXHg4NWhiXFx4YzRcXHhiNVxceDE3XFx4ODBcXHgxYlxceGIxXFx4YjlcXHhjYlxceGEzdiRbXFx4YjVcXHg5NSpcXHhlYlxceGZiXFx4YzVcXHhkY1xceDBjXFx4YTJKXFx4YmVcXHgwOCdcbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmRoLnlfYz0nOlxceGU5N1xceDA2ezpcXHhiMlxceDEzXFx4YjhcXHhhYVxceGE4XFx4MWJcXHhmOVxceGE1XFx4MTNCXFx4ZjZcXHhlMFxceGUyQVlcXHg5N1xceDljXFx4YzdcXHhjZnxcXHhjMVhRXFx4OThcXHg5ZVxceGMyXFx4ZDNcXHRcXHhmOVxceGE3XFx4OWFcXHhhZVxceDk1XFx4YzFpXFx4YzRcXHhlM1xceDg0RFxceGRmXFx4MTFeWlxceDFkN3I6XFx4ZDlcXHhhMVxceGYxXFx4OTZcXHhjZlxceGRjXFx4OTJcXHgxNVxceDlmLVxceDlhXFx4YmVcXHg4NCBcXHg5Y1xceDljbFFcXHg4ZlxceGU3cFxceDljXFx4OGZcXHhjZlxceGVmVCkhXFx4MTBJXFx4YjlcXHg5OVxceGM1XFx4OTlcXHhlMVxceDFmXFx4MDNcXHJcXHhmOFxceGE1XFx4YjFvXFx0XFx4MDF0XFx4MWFcXHgwZVxceDFjXFx4MDI5XFx4YzQ5XFx4ZjVcXHgwOCBfXFx4MDNwXFx4YmVcXHg5N3VaXFx4ZDJcXHgwZVxceDE5XFx4YjhsW1xceGQyXFx4ODVcXHgwMlxceDhlXFx4YzFqXFx4YWEnXG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kaC5wPSdcXHhkNn1cXHhlNEBcXHhjYlxceGJiXFx4ZGNcXHgxOTZcXHhkNlxceDkzXFx4ZDNKXFx4ZmRcXG5cXHhkNVxceDBjXFx4ODRcXHhkMjlcXHhhNF9SXFx4MGJcXHhiOFxceDgxdFxceGNiXFx4OThcXHhiY1xceGU5UVxceDg0XFx4OWZcXHg5MS5jXFx4OWNyXFx4ZmJcXHgxM1xceGI0XFx4YjRcXHhkN1xceDE3flxceDE2XFx4ZDVaXFx4YzF5XFx4YmFCXFx4MGIqKVxceGZlMkpGemNeXFx4ODFcXHhmZllcXHgwMTd7XFx4ZWRcXHhkY1xceGZkM1xceDE2XFx4OGFGXFx4MWFcXHhhZDtyXFx4ZGFcXHhlOFxceDg2XFx4MDB4XFx4MDRbXFx4MDdcXHhhN1xceGRiXFx4Y2F4dFxceDA4fVxceDE1XFx4MTBcXHhlYVxceDlmXFx4Y2NcXHg5ZFxceGRkM1xceDA1XFx4MDdcXHhkZGJcXHhkYlxceDg4XFx4YWVcXHhhYXR9XFx4ZTBcXHhmNFxceGQ2XFx4ZTJcXHhiZGhcXHhiMFxceGU3OT5cXHgwZiQhXFx4OGVcXHhiMydcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmRoLmc9J1xceDAyJ1xuICAgICAgICAgICAgIGNyeXB0by5zZXJ2ZXIuZGgueD1Ob25lXG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kaC55X3M9XCJcXHhjOVxceDFhS1xceGU1XFx4YzJcXHhkOUBcXHg4M1xceDA1XFx4ZDdcXHhkMUoxW1xceGRiM1xceGMyXFx4YThcXHhiN1xceGEwXFx4ZGRcXHhjNmNGamplXFx4OTJkXFx4YzBcXG5cXHgxYlxceGI2TlxceGYzZlxceDljXFx4YTZcXHhiODZcXHhmM1xceGQ4XFx4OTFcXHhjZlxceDE4XFx4ODd8M1xceDEzZmhcXHg4YSRcXHhkZlxceGQ2XFx4YjZEXFx4OWRcXHg5MFxceGY2XFx4MDgqXFx4ZWU/XFx4MWZcXHhjMy98XFx4YmVcXHhiY1xceGRkXFx4ZjBcXHg5YVhcXHg4YlxceDAwRVxceDA2XFx4MDFcXHg5YVxceGMzXFx4ZmNcXHhiMlxceDFiXFx4YTVcXHhhNz4zXFx4YzhcXHg5NVxceDA3XFx4ZmJcXHg4NFxceDFiXFx4ZjlcXHhhMiElXFx4ZmNcXHhmNFxceGNhYFxceDFhJ1xceGQxXFx4ZWFqXFx4MTVjJVxceGU3XFx4YTggXFx4ZmUsRVxceDgyXFx4OGVcXHhjMlNcXHhkNGVcXHg4OFxceGY2XFx4ZGVcXHhhN1xceGQ1IFwiXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24uZW5jcnlwdGVkX3ByZW1hc3Rlcl9zZWNyZXQ9Tm9uZVxuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLnByZW1hc3Rlcl9zZWNyZXQ9J1xceGI3YFxceGMyXFx4YjJcXHg5OVxceGViXFx4YmRcXHhiZWVcXHg5Y0RcXHhhZlxceDE1QVxceDFhM1xceDFiXFx4MWJcXHhjNlxceGYzVUtmXFx4ZGFcXHhkMVxceGU4XFx4MDJcXHhmMlxceGNlXFx4MTBcXHhlNSRcXHhlM0ovXFx4MWNLXFx4MWJcXHg5ZlA1YlxceGM1XFx4YTBcXHhhYlxceDFjX1xceGNhXFx4MGNIXFx4YjNcXHhmYlxceDEwcVxceDgzLFxceDE0OFxceGI1XFx4ZjFcXHgwZVxceDhkXFx4ZDFcXHhmZFxceDAzXFx4YTIsXFx4YTNcXHhkMSxcXHhjM2kpXFx4MGNcXHhlOXBcXHhkMFxceGM3OjJcXHhlNVxceGRiMVxceGIzXFx4OWY7aDRcXHhjNVxceGNlXFx4YWRcXHhhMlxceDFkXFx4ZjRcXHhjNy1cXHhiNSlcXHg5OWxcXHg5M1xceGM1flxceDkyXFx4MWZcXHhlMGJcXHhjNVxceGVhXFx4YjYoXFx4ZWVcXHg5ZUhUXFx4MDFcXHhjYlxceDlhXFx4YTVcXHgwN3BcXHgwMlxceDEzXFx4ZjNXXFx4ZjRcXHhmNFYnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ubWFzdGVyX3NlY3JldD0nXFx4MDB5XFx4MDBiXFx4ZmJcXHhiN1xceDk1XFx4MWNcXHg4ZFxceGFhXFx4MGYycVxceGM5RzxcXHhmOFxceDE1QmBwcFxceDA1XFx4ODhcXHhiNlxceDAyXFx4MDBcXHQ6a1xceGMxXFx4ZDR0XFx4ZGMmXFx4YTZcXHgwNDBcXHhmYTR6OFxceDE4eVZ6XFx4Y2RcXHgwMCdcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5yYW5kb21ieXRlcy5jbGllbnQ9J1VcXHhjZTlrXFx4YjBsXFx4ODlcXHhmZVxceDk1XFx4ZTQ1XFx4ZWZcXHg4OGdcXHhlOFxceDFjeiV3Y1xceGI3XFx4ZDFcXHhjY1xceGQ1LFxceDAzWHhcXHgwZUJcXHhkOUAnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ucmFuZG9tYnl0ZXMuc2VydmVyPSdVXFx4Y2U5a1MtXFx4MGZcXHgxYnRcXHg5NVxceGNjXFx4YTl3d0lcXHhiOVxceGY1XFx4MTBcXHgxMlxceDExKlxceDgyJVxceGRkXFx4YjZcXHgxZVxceGMwYlxceGRjXFx4YWNcXHg5YlxceDAwJ1xuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5jbGllbnQubWFjPSdcXHhkOVxceGRjWFxceGY5XFx4ODNcXHgxMGpcXHhmOVxceDliejhpXFxuenRcXHhjMnx3blxceDExJ1xuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5jbGllbnQuZW5jcnlwdGlvbj0nU1xceGE4RlxceDE4eFxceGFlXFx4ZDVcXHgwZVxceDk3XFx4ZGJcXHgwNVBVLStcIidcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkuY2xsaWVudC5pdj0nXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDAnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LnNlcnZlci5tYWM9J1xceGRhXFx4ZTJcXHg5ZndcXHhlMFxceDg3XFx4YWJERFxceGZiXFx4ZmNcXHhhMSZcXHhmZlxceGYxXFx4ODJcXHg4ZVxceGU1XFx4ZDM4J1xuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5zZXJ2ZXIuZW5jcnlwdGlvbj0nXFx4OTgxXFx4YmZcXHhjYlxceDFiPFxceGEzIVxceGEyXFx4ODVbSVxceGFmYlxceGUyXFx4ZmUnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LnNlcnZlci5pdj0nXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDAnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ua2V5Lmxlbmd0aC5tYWM9MjBcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkubGVuZ3RoLmVuY3J5cHRpb249MTZcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkubGVuZ3RoLml2PTE2XG4gICAgPlxuXG5GdWxsIEhhbmRzaGFrZSB3aXRoIEFwcGxpY2F0aW9uIERhdGEgKEVDREhFXFxfUlNBXFxfV0lUSFxcX0FFU1xcXzEyOFxcX0NCQ1xcX1NIQTI1NilcbicnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJ1xuXG5zZWUgL2V4YW1wbGVzL2Z1bGxcXF9yc2FcXF9jb25uZWN0aW9uXFxfd2l0aFxcX2FwcGxpY2F0aW9uXFxfZGF0YS5weVxuXG46OlxuXG4gICAgIyBweXRob24gZXhhbXBsZXMvZnVsbF9yc2FfY29ubmVjdGlvbl93aXRoX2FwcGxpY2F0aW9uX2RhdGEucHkgbG9jYWxob3N0IDQ0M1xuICAgIENvbm5lY3RlZCB0byBzZXJ2ZXI6ICgnbG9jYWxob3N0JywgNDQzKVxuICAgICMjI1sgU1NML1RMUyBdIyMjXG4gICAgICBcXHJlY29yZHMgICBcXFxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gaGFuZHNoYWtlXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MmFcbiAgICAgICB8IyMjWyBUTFMgSGFuZHNoYWtlIF0jIyNcbiAgICAgICB8ICAgICB0eXBlICAgICAgPSBzZXJ2ZXJfaGVsbG9cbiAgICAgICB8ICAgICBsZW5ndGggICAgPSAweDI2XG4gICAgICAgfCMjI1sgVExTIFNlcnZlciBIZWxsbyBdIyMjXG4gICAgICAgfCAgICAgICAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgICAgICAgIGdtdF91bml4X3RpbWU9IDE0NTAxMjc3NTRcbiAgICAgICB8ICAgICAgICByYW5kb21fYnl0ZXM9ICdiXFx4ODFcXHgwNlFcXHhjYVxceDlhNzFOXFx4YzU8VFRcXHhmYiFSXFx4MDFcXHg4N0hcXHhlN1xcdFxceDExXFx4ZWNcXHg5ZlxceGQ5RFxceGZhXFx4YTMnXG4gICAgICAgfCAgICAgICAgc2Vzc2lvbl9pZF9sZW5ndGg9IDB4MFxuICAgICAgIHwgICAgICAgIHNlc3Npb25faWQ9ICcnXG4gICAgICAgfCAgICAgICAgY2lwaGVyX3N1aXRlPSBFQ0RIRV9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEyNTZcbiAgICAgICB8ICAgICAgICBjb21wcmVzc2lvbl9tZXRob2Q9IE5VTExcbiAgICAgICB8ICAgICAgICBcXGV4dGVuc2lvbnNcXFxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gaGFuZHNoYWtlXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MmRlXG4gICAgICAgfCMjI1sgVExTIEhhbmRzaGFrZSBdIyMjXG4gICAgICAgfCAgICAgdHlwZSAgICAgID0gY2VydGlmaWNhdGVcbiAgICAgICB8ICAgICBsZW5ndGggICAgPSAweDJkYVxuICAgICAgIHwjIyNbIFRMUyBDZXJ0aWZpY2F0ZSBMaXN0IF0jIyNcbiAgICAgICB8ICAgICAgICBsZW5ndGggICAgPSAweDJkN1xuICAgICAgIHwgICAgICAgIFxcY2VydGlmaWNhdGVzXFxcbiAgICAgICB8ICAgICAgICAgfCMjI1sgVExTIENlcnRpZmljYXRlIF0jIyNcbiAgICAgICB8ICAgICAgICAgfCAgbGVuZ3RoICAgID0gMHgyZDRcbiAgICAgICB8ICAgICAgICAgfCAgXFxkYXRhICAgICAgXFxcbiAgICAgICB8ICAgICAgICAgfCAgIHwjIyNbIFg1MDlDZXJ0IF0jIyNcbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHZlcnNpb24gICA9IDxBU04xX0lOVEVHRVJbMkxdPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgc24gICAgICAgID0gPEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgc2lnbl9hbGdvID0gPEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNhX3ZhbHVlICA9IDxBU04xX05VTExbMExdPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgXFxpc3N1ZXIgICAgXFxcbiAgICAgICB8ICAgICAgICAgfCAgIHwgICB8IyMjWyBYNTA5UkROIF0jIyNcbiAgICAgICB8ICAgICAgICAgfCAgIHwgICB8ICBvaWQgICAgICAgPSA8QVNOMV9PSURbJy4yLjUuNC4zJ10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCAgdmFsdWUgICAgID0gPEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBub3RfYmVmb3JlPSA8QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgbm90X2FmdGVyID0gPEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIFxcc3ViamVjdCAgIFxcXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCMjI1sgWDUwOVJETiBdIyMjXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCAgb2lkICAgICAgID0gPEFTTjFfT0lEWycuMi41LjQuMyddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgIHwgIHZhbHVlICAgICA9IDxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgcHVia2V5X2FsZ289IDxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+XG4gICAgICAgfCAgICAgICAgIHwgICB8ICBwa192YWx1ZSAgPSA8QVNOMV9OVUxMWzBMXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHB1YmtleSAgICA9IDxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIFxceDUwOXYzZXh0IFxcXG4gICAgICAgfCAgICAgICAgIHwgICB8ICAgfCMjI1sgWDUwOXYzRXh0IF0jIyNcbiAgICAgICB8ICAgICAgICAgfCAgIHwgICB8ICB2YWwgICAgICAgPSA8QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgc2lnbl9hbGdvMj0gPEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT5cbiAgICAgICB8ICAgICAgICAgfCAgIHwgIHNhMl92YWx1ZSA9IDxBU04xX05VTExbMExdPlxuICAgICAgIHwgICAgICAgICB8ICAgfCAgc2lnbmF0dXJlID0gPEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+XG4gICAgICAgfCMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICAgfCAgY29udGVudF90eXBlPSBoYW5kc2hha2VcbiAgICAgICB8ICB2ZXJzaW9uICAgPSBUTFNfMV8yXG4gICAgICAgfCAgbGVuZ3RoICAgID0gMHgxNGRcbiAgICAgICB8IyMjWyBUTFMgSGFuZHNoYWtlIF0jIyNcbiAgICAgICB8ICAgICB0eXBlICAgICAgPSBzZXJ2ZXJfa2V5X2V4Y2hhbmdlXG4gICAgICAgfCAgICAgbGVuZ3RoICAgID0gMHgxNDlcbiAgICAgICB8IyMjWyBUTFMgU2VydmVyIEtleSBFeGNoYW5nZSBdIyMjXG4gICAgICAgfCMjI1sgVExTIEVDIERpZmZpZS1IZWxsbWFuIFNlcnZlciBQYXJhbXMgXSMjI1xuICAgICAgIHwgICAgICAgICAgIGN1cnZlX3R5cGU9IG5hbWVkX2N1cnZlXG4gICAgICAgfCAgICAgICAgICAgY3VydmVfbmFtZT0gc2VjcDI1NnIxXG4gICAgICAgfCAgICAgICAgICAgcF9sZW5ndGggID0gMHg0MVxuICAgICAgIHwgICAgICAgICAgIHAgICAgICAgICA9IFwiXFx4MDRcXHgxYlxceDg1elxceGUzXFx4ZjFcXHhmZVxceDEwN1xceGZhXFx4MWRcXHg4NWIyXFx4ZTJcXHg5NlxceDg1J1xceDgwXFxuXFx4OWNcXHg4NVxceGE1XFx4ZmFcXHgxMCZMXFx4YjlcXHg4MlxceDE4XFx4ZTNcXHhkNVxceGZmXFx4MGVEfChnXFx4MWNcXHgwM1xceDliXFx4ZTJcXHhhOFxceDFmXFx4OTJcXHg4YlxceGE3XFx4YjhcXHhlYlxceGQ4XFx4ZjZcXHgxNHZcXHhhZlFcXHg5NFUxW1xceGMwZDFcXHhmZlxceGMyXFx4Y2FcIlxuICAgICAgIHwgICAgICAgICAgIGhhc2hfdHlwZSA9IHNoYTFcbiAgICAgICB8ICAgICAgICAgICBzaWdfdHlwZSAgPSByc2FcbiAgICAgICB8ICAgICAgICAgICBzaWdfbGVuZ3RoPSAweDEwMFxuICAgICAgIHwgICAgICAgICAgIHNpZyAgICAgICA9ICdcXHhjMDdFXFx4YWJcXHhlOVxceGI2XFx4ZTVcXHg4YV9cXHgxZjtcXHg3Zj5cXHg4Y1xceGI1XFx4ZTBcXHhmMjpcXHhiYlxceGVhSWtcXHhlZTBmXFx4YzBcXHhlZlxceDk0YFxceGZjXFx4OWVcXHgwMFxceDBlXFx4MDBcXHgxNFxceDAxXFx4MGJcXHgwMVxceDlha3FYd1xceGM5MEFPXFx4MWFyXFx4ZjRcXHg4MlxceDg2WWBcXHhiNTtcXHhhZF1cXHg5ZVxceDE2XFx4ODY2XFx4MGM6XCJPXFx4ZjNsXFx4MGNcXHhkOFxceDE0XFx4ZGFcXHgxN0UrXFx4MTRcXHhkNUZcXHgwN1xceGYzXFx4YWZGXFx4MGYuK1xceDA1aVxceGMxXFx4MTNcXHgwZjJcXHgwZlxceGMwbChcXHg4NlxceGEwTlxceDA4XFx4YWRcXHhkMTkmaTJcXCcgXFx4MGVcXHgxOX1cXHhiNlxceGJmXFx4ZWRcXHhmMVxceGJmXFx4ODlcXHhlOVxceGQ3XFx4MTc5SVxceGUyJFxceGE0XFx4ZDRwWFxceGZiXFx4MGNcXHQtNVxceDhmXFx4ZTY5UlxceGYxVVxceGYyXFx4ZmNcXHhkM1xceDBjXFx4MTRcXHhhN2ZcXHhmOVxceGJhKHRcXHgwYlxceGVjXFx4ODI/d1dlXFx4ODhcXHhmOFxceDk0M0tmXFx4YThgXFx4ZjVcXHhhMGJcXHhkZWFcXHhjNFxceGVmXFx4OGVcXHhjY1xceGJiYlxceDk3XFx4MGJcXHgwMFxceGI5XFx4MDJcXHhmN1xceGY2XFx4MWFcXHhmOFxceGVkanZcXHhhNiBcXHhmY1xceDk1IVxceDkzXFx4MWNcXHhmZFxceDEzWVxceDFjKFxceDA3XFx4OTVcXHhiZlxceGE4XFx4MTdcXHhkNVxceDk2XFx4ZDVcXHhhM1xceGM0Y1xceGNkXFx4ZmFcXHhhY1xceDEyVXwhdGlcXHgxNU9cXHhmNVxceGQzRlxceGRkXFx4N2ZyXFx4ZjVcXHg4M1xceDExXFx4YjlcXHhmN2BcXHgwZlxceGY5PzxcXHg5NlxceGQ4ZExcXHhjZFxceDAyXFx4MWZcXHhmNlxceDEyXFx4MDdcXHgxNFxceGExXFx4OGQjXFx4ZGU5XFx4ODZKXSdcbiAgICAgICB8IyMjWyBUTFMgUmVjb3JkIF0jIyNcbiAgICAgICB8ICBjb250ZW50X3R5cGU9IGhhbmRzaGFrZVxuICAgICAgIHwgIHZlcnNpb24gICA9IFRMU18xXzJcbiAgICAgICB8ICBsZW5ndGggICAgPSAweDRcbiAgICAgICB8IyMjWyBUTFMgSGFuZHNoYWtlIF0jIyNcbiAgICAgICB8ICAgICB0eXBlICAgICAgPSBzZXJ2ZXJfaGVsbG9fZG9uZVxuICAgICAgIHwgICAgIGxlbmd0aCAgICA9IDB4MFxuICAgICMjI1sgU1NML1RMUyBdIyMjXG4gICAgICBcXHJlY29yZHMgICBcXFxuICAgICAgIHwjIyNbIFRMUyBSZWNvcmQgXSMjI1xuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gY2hhbmdlX2NpcGhlcl9zcGVjXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MVxuICAgICAgIHwjIyNbIFRMUyBDaGFuZ2VDaXBoZXJTcGVjIF0jIyNcbiAgICAgICB8ICAgICBtZXNzYWdlICAgPSAnXFx4MDEnXG4gICAgICAgfCMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICAgfCAgY29udGVudF90eXBlPSBoYW5kc2hha2VcbiAgICAgICB8ICB2ZXJzaW9uICAgPSBUTFNfMV8yXG4gICAgICAgfCAgbGVuZ3RoICAgID0gMHg1MFxuICAgICAgIHwjIyNbIFRMUyBQbGFpbnRleHQgXSMjI1xuICAgICAgIHwgICAgIGRhdGEgICAgICA9ICdcXHgxNFxceDAwXFx4MDBcXHgwY1xceDEwc1xceGQ5PylXQlxceGNmXFx4ZmZZXFx4ZWR9J1xuICAgICAgIHwgICAgIGV4cGxpY2l0X2l2PSAnXFx4Y2E3XFx4YThcXHg4NlxceDg2XFx4ZDJcXHhlMVxceDE4JlxceGY5ci1cXHg4YVxceDg2XFx4YmZcXHgxNidcbiAgICAgICB8ICAgICBtYWMgICAgICAgPSAnXFx4YmZcXHhiOFxceDA3XFx4MTVcXHhjNVxceDkxXFx4ZTRTQkxRXFx4ZWZcXHg5YlxceGRjXFx4Y2JcXHg4OWRcXHhiNVxceGRlXFx4ZWNcXHgxMVRcXHg5OGdHPlRcXHhjNFxceGU4XFx4OGJcXG5cXHgwMydcbiAgICAgICB8ICAgICBwYWRkaW5nICAgPSAnXFx4MGZcXHgwZlxceDBmXFx4MGZcXHgwZlxceDBmXFx4MGZcXHgwZlxceDBmXFx4MGZcXHgwZlxceDBmXFx4MGZcXHgwZlxceDBmJ1xuICAgICAgIHwgICAgIHBhZGRpbmdfbGVuPSAweGZcbiAgICBGaW5pc2hlZCBoYW5kc2hha2UuIFNlbmRpbmcgYXBwbGljYXRpb24gZGF0YSAoR0VUIHJlcXVlc3QpXG4gICAgR290IHJlc3BvbnNlIGZyb20gc2VydmVyXG4gICAgIyMjWyBTU0wvVExTIF0jIyNcbiAgICAgIFxccmVjb3JkcyAgIFxcXG4gICAgICAgfCMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICAgfCAgY29udGVudF90eXBlPSBhcHBsaWNhdGlvbl9kYXRhXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4MTUwXG4gICAgICAgfCMjI1sgVExTIFBsYWludGV4dCBdIyMjXG4gICAgICAgfCAgICAgZGF0YSAgICAgID0gJ0hUVFAvMS4xIDIwMCBPS1xcclxcbkRhdGU6IE1vbiwgMTQgRGVjIDIwMTUgMjE6MTU6NTYgR01UXFxyXFxuU2VydmVyOiBBcGFjaGUvMi4yLjIyIChEZWJpYW4pXFxyXFxuTGFzdC1Nb2RpZmllZDogVGh1LCAyNSBBcHIgMjAxMyAxMDo1MDo1NyBHTVRcXHJcXG5FVGFnOiBcIjQ2ZmM1LWIxLTRkYjJkMzE3YjA2NDBcIlxcclxcbkFjY2VwdC1SYW5nZXM6IGJ5dGVzXFxyXFxuQ29udGVudC1MZW5ndGg6IDE3N1xcclxcblZhcnk6IEFjY2VwdC1FbmNvZGluZ1xcclxcbkNvbnRlbnQtVHlwZTogdGV4dC9odG1sXFxyXFxuWC1QYWQ6IGF2b2lkIGJyb3dzZXIgYnVnXFxyXFxuXFxyXFxuJ1xuICAgICAgIHwgICAgIGV4cGxpY2l0X2l2PSAnXFx4MDRcXHhhNGxTXFx4YTFcXHhiZVxceGVhSVxceGNhXFx4YzlacFxceGE2XFx4YzhcXHg5NFxceDllJ1xuICAgICAgIHwgICAgIG1hYyAgICAgICA9ICc1XFx4YjM3NFxceGViXFx4ZDdcXHg5OTBcXHhhZlxceDExL1xceGQ4XFx4OGNcXHg4NlxceDlmXFx4OGNWbVxceGUxXFx4ZmJEPlBcXHhmMVxceDg0XFx4ZDRcXHhiMVxceDdmW0t1XFxuJ1xuICAgICAgIHwgICAgIHBhZGRpbmcgICA9ICdcXHgwNFxceDA0XFx4MDRcXHgwNCdcbiAgICAgICB8ICAgICBwYWRkaW5nX2xlbj0gMHg0XG4gICAgICAgfCMjI1sgVExTIFJlY29yZCBdIyMjXG4gICAgICAgfCAgY29udGVudF90eXBlPSBhcHBsaWNhdGlvbl9kYXRhXG4gICAgICAgfCAgdmVyc2lvbiAgID0gVExTXzFfMlxuICAgICAgIHwgIGxlbmd0aCAgICA9IDB4ZjBcbiAgICAgICB8IyMjWyBUTFMgUGxhaW50ZXh0IF0jIyNcbiAgICAgICB8ICAgICBkYXRhICAgICAgPSAnPGh0bWw+PGJvZHk+PGgxPkl0IHdvcmtzITwvaDE+XFxuPHA+VGhpcyBpcyB0aGUgZGVmYXVsdCB3ZWIgcGFnZSBmb3IgdGhpcyBzZXJ2ZXIuPC9wPlxcbjxwPlRoZSB3ZWIgc2VydmVyIHNvZnR3YXJlIGlzIHJ1bm5pbmcgYnV0IG5vIGNvbnRlbnQgaGFzIGJlZW4gYWRkZWQsIHlldC48L3A+XFxuPC9ib2R5PjwvaHRtbD5cXG4nXG4gICAgICAgfCAgICAgZXhwbGljaXRfaXY9ICdcXHgxOVxcdC1cXHhlOFxceGE1XFx4ZTM7XFx4YWReXFx4OGRcXHg4ZFxceGYySVxceDFjXFx4Y2JcXHhhZCdcbiAgICAgICB8ICAgICBtYWMgICAgICAgPSAnPFxceGQ1XFx4YjVcXHg5MFxceDlkXFx4OWJcXHg4YzhCXFx4YzFcXHhlOFxceGZiXFx4ZGRcXHg5MVxcblxceDhiXFx4YWVlXFx4YWJdXFx4ZmRcXHhkNWtEXFx4YzhcXHg4NlxceGExXFx4MDJZUlxceDFlXFx4OWEnXG4gICAgICAgfCAgICAgcGFkZGluZyAgID0gJ1xceDBlXFx4MGVcXHgwZVxceDBlXFx4MGVcXHgwZVxceDBlXFx4MGVcXHgwZVxceDBlXFx4MGVcXHgwZVxceDBlXFx4MGUnXG4gICAgICAgfCAgICAgcGFkZGluZ19sZW49IDB4ZVxuICAgIDxUTFNTZXNzaW9uQ3R4OiBpZD0xNTE5NjMzNDBcbiAgICAgICAgICAgICBwYXJhbXMuaGFuZHNoYWtlLmNsaWVudD08VExTQ2xpZW50SGVsbG8gIHZlcnNpb249VExTXzFfMiBjaXBoZXJfc3VpdGVzPVsnRUNESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBMjU2J10gY29tcHJlc3Npb25fbWV0aG9kcz1bJ05VTEwnXSB8PlxuICAgICAgICAgICAgIHBhcmFtcy5oYW5kc2hha2Uuc2VydmVyPTxUTFNTZXJ2ZXJIZWxsbyAgdmVyc2lvbj1UTFNfMV8yIGdtdF91bml4X3RpbWU9MTQ1MDEyNzc1NCByYW5kb21fYnl0ZXM9J2JcXHg4MVxceDA2UVxceGNhXFx4OWE3MU5cXHhjNTxUVFxceGZiIVJcXHgwMVxceDg3SFxceGU3XFx0XFx4MTFcXHhlY1xceDlmXFx4ZDlEXFx4ZmFcXHhhMycgc2Vzc2lvbl9pZF9sZW5ndGg9MHgwIHNlc3Npb25faWQ9JycgY2lwaGVyX3N1aXRlPUVDREhFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NiBjb21wcmVzc2lvbl9tZXRob2Q9TlVMTCB8PlxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLnZlcnNpb249VExTXzFfMlxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmNpcGhlcnN1aXRlPUVDREhFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NlxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmtleV9leGNoYW5nZT1FQ0RIRVxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmVuY3J5cHRpb249KCdBRVMnLCAxNiwgJ0NCQycpXG4gICAgICAgICAgICAgcGFyYW1zLm5lZ290aWF0ZWQubWFjPVNIQTI1NlxuICAgICAgICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmNvbXByZXNzaW9uPU5VTExcbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTEzNTk4Yz5cbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTEzNTllYz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTEzNWEwYz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTEzNWEyYz5cbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLnJzYS5wcml2a2V5PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLnJzYS5wdWJrZXk9PENyeXB0by5DaXBoZXIuUEtDUzFfdjFfNS5QS0NTMTE1X0NpcGhlciBpbnN0YW5jZSBhdCAweDkxMmVmOGM+XG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kc2EucHJpdmtleT1Ob25lXG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kc2EucHVia2V5PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uY2xpZW50LmRoLng9Tm9uZVxuICAgICAgICAgICAgIGNyeXB0by5jbGllbnQuZGgueV9jPU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmRoLnA9Tm9uZVxuICAgICAgICAgICAgIGNyeXB0by5zZXJ2ZXIuZGguZz1Ob25lXG4gICAgICAgICAgICAgY3J5cHRvLnNlcnZlci5kaC54PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmRoLnlfcz1Ob25lXG4gICAgICAgICAgICAgY3J5cHRvLmNsaWVudC5lY2RoLmN1cnZlX25hbWU9Tm9uZVxuICAgICAgICAgICAgIGNyeXB0by5jbGllbnQuZWNkaC5wcml2PSdeXFx4YmFcXHhlYlxceGNjXFx4YjM+XFx4ODVcXHhhNE9cXHg4OCNcXHRcXHhmZVxceDExZXRjXFx4ZTNIRVxceGRmXFx4YWI1XCJcXHgwMCpcXHhhN1xceGE0XFx4YmFcXHgxNlxcclknXG4gICAgICAgICAgICAgY3J5cHRvLmNsaWVudC5lY2RoLnB1Yj0oMTU1OTMwMDc0MDc2NjUyNTUxNjEzMzI4OTA0ODAzODkzMDY5NDg5MjExMjEyMjQ4OTIxODEyNjU2NDgwODEzMjkzODg3OTc0NTEwNDYsIDk3MzY3MDE2ODI5NTIzMTI5NjU1MTYxNzc1OTk1ODA3NDI2NDY5MDQzNTAyNTUzOTQ4MDY5NDUwMTcwNzIyODM0ODMwNjY1ODAwMjY4KSBvbiBcInNlY3AyNTZyMVwiID0+IHleMiA9IHheMyArIDExNTc5MjA4OTIxMDM1NjI0ODc2MjY5NzQ0Njk0OTQwNzU3MzUzMDA4NjE0MzQxNTI5MDMxNDE5NTUzMzYzMTMwODg2NzA5Nzg1Mzk0OHggKyA0MTA1ODM2MzcyNTE1MjE0MjEyOTMyNjEyOTc4MDA0NzI2ODQwOTExNDQ0MTAxNTk5MzcyNTU1NDgzNTI1NjMxNDAzOTQ2NzQwMTI5MSAobW9kIDExNTc5MjA4OTIxMDM1NjI0ODc2MjY5NzQ0Njk0OTQwNzU3MzUzMDA4NjE0MzQxNTI5MDMxNDE5NTUzMzYzMTMwODg2NzA5Nzg1Mzk1MSlcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmVjZGguY3VydmVfbmFtZT0nc2VjcDI1NnIxJ1xuICAgICAgICAgICAgIGNyeXB0by5zZXJ2ZXIuZWNkaC5wcml2PU5vbmVcbiAgICAgICAgICAgICBjcnlwdG8uc2VydmVyLmVjZGgucHViPSgxMjQ0ODI4NTcyOTgxMDY5NzM4Nzc4NTkyMzIwNjcwNTIwNTE2ODg5NDA2NDQ2MzU5MDc5NjQ0OTg5NTA4MjE3ODY5ODk2MDY4ODYzOSwgNjQ1MzM4MjM4NjM3NDIxODY2MDY1ODU4MzQ5NDgxMTMxOTgxMTU3NDg1MzAzODk5Mzc1NzI3NDUwNjk2Mzc0NjI2MjMwMTUyNDY4Mikgb24gXCJzZWNwMjU2cjFcIiA9PiB5XjIgPSB4XjMgKyAxMTU3OTIwODkyMTAzNTYyNDg3NjI2OTc0NDY5NDk0MDc1NzM1MzAwODYxNDM0MTUyOTAzMTQxOTU1MzM2MzEzMDg4NjcwOTc4NTM5NDh4ICsgNDEwNTgzNjM3MjUxNTIxNDIxMjkzMjYxMjk3ODAwNDcyNjg0MDkxMTQ0NDEwMTU5OTM3MjU1NTQ4MzUyNTYzMTQwMzk0Njc0MDEyOTEgKG1vZCAxMTU3OTIwODkyMTAzNTYyNDg3NjI2OTc0NDY5NDk0MDc1NzM1MzAwODYxNDM0MTUyOTAzMTQxOTU1MzM2MzEzMDg4NjcwOTc4NTM5NTEpXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24uZW5jcnlwdGVkX3ByZW1hc3Rlcl9zZWNyZXQ9Tm9uZVxuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLnByZW1hc3Rlcl9zZWNyZXQ9J1xceGQ4XFx4ZjAmNVxceDAyXFx4Y2FyXihcXHhkOVxceDFiMFhcXHhiNWBcXHg4OVxceDE2XFx4YzBITVxceDg1WypcXHg5M1xceGFjeFxceGZialxceDg2T1xceDAxXFx4ODMnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ubWFzdGVyX3NlY3JldD0nXFx4YjkxXFx4YWEmXFx4ZmNcXHhhY1xceGY3XFx4MTJcXHhjYVxceGEwXFx4YThcXHhjNVxceGQ1XFx4OWVcXHhkZlxceDE0XFx4ODc3XFx4ZGYoI1xceGUwXFx4OWNcXHhjNlxceGYxXFx4OTNAXFx4MTVcXHg4ZGdTNFxceGUwXFx4OTE1XFx4MWFcXHgxZFxceGNjXFx4MTBnXFx4ZGVcXHgxNj1cXHgwZlxceDFhXFx4MDJzXFx4ZTcnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ucmFuZG9tYnl0ZXMuY2xpZW50PSdWbzFcXHg4YVBcXHgwMSxDXFx4YzgoXFx4MTdcXHg4ZWJ9XFx4ZWVaXFx4ZGVcXHhiNlxceGQwXFx4ZjdcXHhkN1xceDk2KVxceGMwXFx4YjJcXHhjOVxceGI0XFx4MTBcXHhjMVBcXFxcSidcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5yYW5kb21ieXRlcy5zZXJ2ZXI9J1ZvMVxceDhhYlxceDgxXFx4MDZRXFx4Y2FcXHg5YTcxTlxceGM1PFRUXFx4ZmIhUlxceDAxXFx4ODdIXFx4ZTdcXHRcXHgxMVxceGVjXFx4OWZcXHhkOURcXHhmYVxceGEzJ1xuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5jbGllbnQubWFjPSdtXFx4YmVcXHg4YlxceGMxXFx4MDZcXHhiYTslXFx4ZDVcXHhhNy5cXHhjMVxceGMwfDZcXHgxN1xceDdmXFx4ZDhrXFx4YWMhNG9cXHhjZFd2ejdcXHhjNFxceGVjXFx4OTVcXHhiNSdcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkuY2xpZW50LmVuY3J5cHRpb249J1xceGE4XFx4OTNSb1xceGUwXFx4YzVcXHg5M0VcXHhhYTFcXHhhMHAwIVxceDA0cCdcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkuY2xsaWVudC5pdj0nXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDAnXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LnNlcnZlci5tYWM9J2tcXHhjNVxceGEyVlVcXHhjZFxceDFmXFx4Zjk7ZEYyXFx4YjVcXHgxNW5bXFx4ZjhcXHhmZlxceGQzXFx4YjVcXHhmY1xceGY3KFxceDk5XFx4ZThxXFxcXEFcXHhmMFxceGVkZVknXG4gICAgICAgICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LnNlcnZlci5lbmNyeXB0aW9uPScjXFx4YzAlLTtcXHhjMVxceGZhXFx4YmNcXHhkYmVcXHgwNGZcXHhhYVxceGYzXFx4YzdcXHhlYydcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkuc2VydmVyLml2PSdcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMCdcbiAgICAgICAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkubGVuZ3RoLm1hYz0zMlxuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5sZW5ndGguZW5jcnlwdGlvbj0xNlxuICAgICAgICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5sZW5ndGguaXY9MTZcbiAgICA+XG5cblNDU1YgRmFsbGJhY2sgVGVzdGluZ1xuJycnJycnJycnJycnJycnJycnJycnXG5cbnNvY2tldCBzdHJlYW0gZXhhbXBsZSB0byB0ZXN0IHJlbW90ZSBpbXBsZW1lbnRhdGlvbnMgZm9yIHByb3RvY29sXG5kb3duZ3JhZGluZyBhdHRlbXBzIChmb2xsb3dpbmcgbGF0ZXN0IFNTTCBQT09ETEUgYXR0YWNrcykgLVxuZXhhbXBsZXMvU0NTVlxcX2ZhbGxiYWNrXFxfdGVzdC5weVxuXG46OlxuXG4gICAgZm9yOiAoJ2dvb2dsZS5jb20nLCA0NDMpXG4gICAgICAgcmVjb3JkICAgICAgaGVsbG9cbiAgICAoJ1NTTF8zXzAnLCAnU1NMXzNfMCcpICAuLi4gcmVzcDogVExTQWxlcnQuSU5BUFBST1BSSUFURV9GQUxMQkFDSyAgU1NMXzNfMFxuICAgICgnU1NMXzNfMCcsICdUTFNfMV8wJykgIC4uLiByZXNwOiBUTFNBbGVydC5JTkFQUFJPUFJJQVRFX0ZBTExCQUNLICBUTFNfMV8wXG4gICAgKCdTU0xfM18wJywgJ1RMU18xXzInKSAgLi4uIHJlc3A6IFRMU1NlcnZlckhlbGxvOiAgICAgICAgICAgIG91dGVyIFRMU18xXzIgaW5uZXIgVExTXzFfMlxuICAgICgnU1NMXzNfMCcsICdUTFNfMV8xJykgIC4uLiByZXNwOiBUTFNBbGVydC5JTkFQUFJPUFJJQVRFX0ZBTExCQUNLICBUTFNfMV8xXG4gICAgKCdUTFNfMV8wJywgJ1NTTF8zXzAnKSAgLi4uIHJlc3A6IFRMU0FsZXJ0LklOQVBQUk9QUklBVEVfRkFMTEJBQ0sgIFNTTF8zXzBcbiAgICAoJ1RMU18xXzAnLCAnVExTXzFfMCcpICAuLi4gcmVzcDogVExTQWxlcnQuSU5BUFBST1BSSUFURV9GQUxMQkFDSyAgVExTXzFfMFxuICAgICgnVExTXzFfMCcsICdUTFNfMV8yJykgIC4uLiByZXNwOiBUTFNTZXJ2ZXJIZWxsbzogICAgICAgICAgICBvdXRlciBUTFNfMV8yIGlubmVyIFRMU18xXzJcbiAgICAoJ1RMU18xXzAnLCAnVExTXzFfMScpICAuLi4gcmVzcDogVExTQWxlcnQuSU5BUFBST1BSSUFURV9GQUxMQkFDSyAgVExTXzFfMVxuICAgICgnVExTXzFfMicsICdTU0xfM18wJykgIC4uLiByZXNwOiBUTFNBbGVydC5JTkFQUFJPUFJJQVRFX0ZBTExCQUNLICBTU0xfM18wXG4gICAgKCdUTFNfMV8yJywgJ1RMU18xXzAnKSAgLi4uIHJlc3A6IFRMU0FsZXJ0LklOQVBQUk9QUklBVEVfRkFMTEJBQ0sgIFRMU18xXzBcbiAgICAoJ1RMU18xXzInLCAnVExTXzFfMicpICAuLi4gcmVzcDogVExTU2VydmVySGVsbG86ICAgICAgICAgICAgb3V0ZXIgVExTXzFfMiBpbm5lciBUTFNfMV8yXG4gICAgKCdUTFNfMV8yJywgJ1RMU18xXzEnKSAgLi4uIHJlc3A6IFRMU0FsZXJ0LklOQVBQUk9QUklBVEVfRkFMTEJBQ0sgIFRMU18xXzFcbiAgICAoJ1RMU18xXzEnLCAnU1NMXzNfMCcpICAuLi4gcmVzcDogVExTQWxlcnQuSU5BUFBST1BSSUFURV9GQUxMQkFDSyAgU1NMXzNfMFxuICAgICgnVExTXzFfMScsICdUTFNfMV8wJykgIC4uLiByZXNwOiBUTFNBbGVydC5JTkFQUFJPUFJJQVRFX0ZBTExCQUNLICBUTFNfMV8wXG4gICAgKCdUTFNfMV8xJywgJ1RMU18xXzInKSAgLi4uIHJlc3A6IFRMU1NlcnZlckhlbGxvOiAgICAgICAgICAgIG91dGVyIFRMU18xXzIgaW5uZXIgVExTXzFfMlxuICAgICgnVExTXzFfMScsICdUTFNfMV8xJykgIC4uLiByZXNwOiBUTFNBbGVydC5JTkFQUFJPUFJJQVRFX0ZBTExCQUNLICBUTFNfMV8xXG4gICAgb3ZlcmFsbDpcbiAgICAgICAgVExTX0ZBTExCQUNLX1NDU1ZfU1VQUE9SVEVEICAgLi4uICBUcnVlXG4gICAgICAgIFNTTHYzX0VOQUJMRUQgICAgICAgICAgICAgICAgIC4uLiAgVHJ1ZVxuXG5TU0x2MiBkaXNzZWN0aW9uXG4nJycnJycnJycnJycnJycnXG5cbjo6XG5cbiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICMjI1sgU1NML1RMUyBdIyMjXG4gICAgICBcXHJlY29yZHMgICBcXFxuICAgICAgIHwjIyNbIFNTTHYyIFJlY29yZCBdIyMjXG4gICAgICAgfCAgbGVuZ3RoICAgID0gMHgzZVxuICAgICAgIHwgIGNvbnRlbnRfdHlwZT0gY2xpZW50X2hlbGxvXG4gICAgICAgfCMjI1sgU1NMdjIgQ2xpZW50IEhlbGxvIF0jIyNcbiAgICAgICB8ICAgICB2ZXJzaW9uICAgPSBTU0xfMl8wXG4gICAgICAgfCAgICAgY2lwaGVyX3N1aXRlc19sZW5ndGg9IDB4MTVcbiAgICAgICB8ICAgICBzZXNzaW9uX2lkX2xlbmd0aD0gMHgxMFxuICAgICAgIHwgICAgIGNoYWxsZW5nZV9sZW5ndGg9IDB4MTBcbiAgICAgICB8ICAgICBjaXBoZXJfc3VpdGVzPSBbMTMxMjAwLCAzOTMyODAsIDY1NjY0LCAyNjIyNzIsIDQ1ODk0NCwgNTI0NDE2LCAzMjc4MDhdXG4gICAgICAgfCAgICAgc2Vzc2lvbl9pZD0gJ2FhYWFhYWFhYWFhYWFhYWEnXG4gICAgICAgfCAgICAgY2hhbGxlbmdlID0gJ2FhYWFhYWFhYWFhYWFhYWEnXG5cblRMUyBTbmlmZmVyIC8gUENBUCBkZWNyeXB0aW9uXG4nJycnJycnJycnJycnJycnJycnJycnJycnJycnJ1xuXG5UTFMxLjAgU2Vzc2lvbiBDb250ZXh0IGJhc2VkIGRlY3J5cHRpb24gb2YgUlNBXFxfV0lUSFxcX0FFU1xcXzEyOFxcX0NCQ1xcX1NIQVxuZm9yIGtub3duIHByaXZhdGUga2V5XG5cbjo6XG5cbiAgICAjIHB5dGhvbiBleGFtcGxlcy9zZXNzaW9uY3R4X3NuaWZmZXIucHkgMTkyLjE2OC4yMjAuMTMxIDQ0MyB0ZXN0cy9maWxlcy9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEFfd19rZXkucGNhcCB0ZXN0cy9maWxlcy9vcGVuc3NsXzFfMF8xX2Zfc2VydmVyLnBlbVxuICAgICogcGNhcCByZWFkeSFcbiAgICAqIGxvYWQgc2VydmVycyBwcml2YXRla2V5IGZvciBjaXBoZXJ0ZXh0IGRlY3J5cHRpb24gKFJTQSBrZXkgb25seSk6IHRlc3RzL2ZpbGVzL29wZW5zc2xfMV8wXzFfZl9zZXJ2ZXIucGVtXG4gICAgfCAgIDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggPT4gMTkyLjE2OC4yMjAuMTMxIDo0NDMgICB8IDxTU0wgIHJlY29yZHM9WzxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwZT1oYW5kc2hha2UgdmVyc2lvbj1UTFNfMV8wIGxlbmd1bml4X3RpbWU9MTIwNjc4MDA3IHJhbmRvbV9ieXRlcz1cIlVhXFx4YzFcXFxcdzIyXFx4YzRcXHgwMXNcXHg4ZD5cXHhjMFxceGQyXFx4YTZcXHhlMlxceGI3IzQqXSNcXHhhZlxceDAwM1xceGEzJ1xceGEwXCIgc2Vzc2lvbl9pZF9sZW5ndGg9MHgwRUNESEVfRUNEU0FfV0lUSF9BRVNfMjU2X0dDTV9TSEEzODQnLCAnRUNESEVfUlNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBMzg0JywgJ0VDREhFX0VDRFNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBMzg0JywgJ0VDREhFX1JTQV8nREhFX1JTQV9XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdESEVfUlNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBMjU2JywgJ0RIRV9EU1NfV0lUSF9BRVNfMjU2X0NCQ19TSEEyNTYnLCAnREhFX1JTQV9XSVRIX0FFU18yNV9DQU1FTExJQV8yNTZfQ0JDX1NIQScsICdFQ0RIX1JTQV9XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdFQ0RIX0VDRFNBX1dJVEhfQUVTXzI1Nl9HQ01fU0hBMzg0JywgJ0VDREhfUlNBX1dJVEhfQUVTXzI1Nl9DQkNfVEhfQUVTXzI1Nl9DQkNfU0hBJywgJ1JTQV9XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdSU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEyNTYnLCAnUlNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBJywgJ1JTQV9XSVRIX0NBTUUgJ0VDREhFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NicsICdFQ0RIRV9FQ0RTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NicsICdFQ0RIRV9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEnLCAnRUNESEVfRUNEU0FfV0hFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NicsICdESEVfRFNTX1dJVEhfQUVTXzEyOF9DQkNfU0hBMjU2JywgJ0RIRV9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEnLCAnREhFX0RTU19XSVRIX0FFU18xMjhfQ0JDQ19TSEEnLCAnREhFX0RTU19XSVRIX0NBTUVMTElBXzEyOF9DQkNfU0hBJywgJ0VDREhfUlNBX1dJVEhfQUVTXzEyOF9HQ01fU0hBMjU2JywgJ0VDREhfRUNEU0FfV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnRUNESF9fU0hBJywgJ0VDREhfRUNEU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEnLCAnUlNBX1dJVEhfQUVTXzEyOF9HQ01fU0hBMjU2JywgJ1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQTI1NicsICdSU0FfV0lUSF9BRVNfMTI4X0NCQ1NIQScsICdFQ0RIRV9FQ0RTQV9XSVRIXzNERVNfRURFX0NCQ19TSEEnLCAnREhFX1JTQV9XSVRIXzNERVNfRURFX0NCQ19TSEEnLCAnREhFX0RTU19XSVRIXzNERVNfRURFX0NCQ19TSEEnLCAnRUNESF9SU0FfV0lUSF8zR09USUFUSU9OX0lORk9fU0NTViddIGNvbXByZXNzaW9uX21ldGhvZHNfbGVuZ3RoPTB4MSBjb21wcmVzc2lvbl9tZXRob2RzPVsnTlVMTCddIGV4dGVuc2lvbnNfbGVuZ3RoPTB4MTVkIGV4dGVuc2lvbnM9WzxUTFNFeHQndW5jb21wcmVzc2VkJywgJ2Fuc2lYOTYyX2NvbXByZXNzZWRfcHJpbWUnLCAnYW5zaVg5NjJfY29tcHJlc3NlZF9jaGFyMiddIHw+PiwgPFRMU0V4dGVuc2lvbiAgdHlwZT1zdXBwb3J0ZWRfZ3JvdXBzIGxlbmd0aD0weCAnc2VjdDQwOWsxJywgJ3NlY3Q0MDlyMScsICdzZWNwMzg0cjEnLCAnc2VjdDI4M2sxJywgJ3NlY3QyODNyMScsICdzZWNwMjU2azEnLCAnc2VjcDI1NnIxJywgJ3NlY3QyMzlrMScsICdzZWN0MjMzazEnLCAnc2VjdDIzJywgJ3NlY3QxNjNyMScsICdzZWN0MTYzcjInLCAnc2VjcDE2MGsxJywgJ3NlY3AxNjByMScsICdzZWNwMTYwcjInXSB8Pj4sIDxUTFNFeHRlbnNpb24gIHR5cGU9c2lnbmF0dXJlX2FsZ29yaXRobXMgbGVuZ3RoPTB4MjBsZ29yaXRobT1zaGE1MTIgc2lnX2FsZz1yc2EgfD4sIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtICBoYXNoX2FsZz1zaGE1MTIgc2lnX2FsZz1kc2EgfD4sIDxUTEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMzg0IHNpZ19hbGc9cnNhIHw+LCA8VExTU2lnbmF0dXJlSGFzaEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMzg0IHNpZ25hdHVyZV9hbGdvPFRMU1NpZ25hdHVyZUhhc2hBbGdvcml0aG0gIGhhc2hfYWxnPXNoYTI1NiBzaWdfYWxnPXJzYSB8PiwgPFRMU1NpZ25hdHVyZUhhc2hBbGdvcml0aG0gIGhhc2hfYWxnPXNoYTJvcml0aG09ZWNkc2EgfD4sIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtICBoYXNoX2FsZz1zaGEyMjQgc2lnX2FsZz1yc2EgfD4sIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtICBoYTIyNCBzaWdfYWxnPWVjZHNhIHw+LCA8VExTU2lnbmF0dXJlSGFzaEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMSBzaWdfYWxnPXJzYSB8PiwgPFRMU1NpZ25hdHVyZUhhYWxnb3JpdGhtPXNoYTEgc2lnX2FsZz1lY2RzYSB8Pl0gfD4+LCA8VExTRXh0ZW5zaW9uICB0eXBlPWhlYXJ0YmVhdCBsZW5ndGg9MHgxIHw8VExTRXh0SGVhcnRiZWF0ICBtb2RlPXBlZXJfYWxsb3d4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHhcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxcMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwMDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgweDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMCcgfD4+XSB8Pj4+XSB8PlxuICAgIHwgICAxOTIuMTY4LjIyMC4xMzEgOjQ0MyAgID0+IDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9aGFuZHNoYWtlIHZlcnNpb249VExTXzFfMCBsZW5naXhfdGltZT0xNDM1MDA5Nzc0IHJhbmRvbV9ieXRlcz0nXFx4MWRcXHhjMHUhXFx4YmRcXHhmOVxceGMzXFx4ZDlcXHhhZG1ZUlxceGI0R1xceDkzXFx4ZWFjWFxceDg4XFx4ZTFxL1xceDA4XFx4MTZ4cCskJyBzZXNzaW9uX2lkX2xlbmd0aD0weGNpcGhlcl9zdWl0ZT1SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEgY29tcHJlc3Npb25fbWV0aG9kPU5VTEwgZXh0ZW5zaW9uc19sZW5ndGg9MHhhIGV4dGVuc2lvbnM9WzxUTFNFeHRlbnNpb24gIHR5cGU9cmVuZWdvdGlhbGVuZ3RoPTB4MSB8PFRMU0V4dEhlYXJ0YmVhdCAgbW9kZT1wZWVyX2FsbG93ZWRfdG9fc2VuZCB8Pj5dIHw+Pj4sIDxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwZT1oYW5kc2hha2UgdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD1jYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgzZWIgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTMzOTc4Nzk5NzEzODM3MTM0NTlMXT4gc2lnbl9PSURbJy4yLjUuNC42J10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ1VLJ10+IHw+LCA8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjEwJ10+IHZhbHVlPTxBU04xX0JBRFRBR1s8QVNOMV9ERUNPUklOR1sxMl0+fX0+XT4gfD4sIDxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMTEnXT4gdmFsdWU9PEFTTjFfQkFEVEFHWzxBU04xX0RFQ09ESU5HX0VSUk9SWydcXHgwY1xceDE5Rk9SIFRFU1RJTkcgUFVSUE9TRUROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9CQURUQUdbPEFTTjFfREVDT0RJTkdfRVJST1JbJ1xceDBjXFx4MWNPcGVuU1NMIFRlc3QgSW50ZXJtZWRpYXRlIENBJ117e0NvZGVjIDxBU04xQ28xMjA4MTQwMTQ4WiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIxMTAxNjE0MDE0OFonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC42J10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRU9SWydcXHgwY1xcck9wZW5TU0wgR3JvdXAnXXt7Q29kZWMgPEFTTjFDb2RlYyBCRVJbMV0+IG5vdCBmb3VuZCBmb3IgdGFnIDxBU04xVGFnIFVURjhfU1RSSU5HWzEyXT59fT5dPiB8PiwgPFg1MDlSRE4gIG9pZD08QVNOMV97e0NvZGVjIDxBU04xQ29kZWMgQkVSWzFdPiBub3QgZm91bmQgZm9yIHRhZyA8QVNOMVRhZyBVVEY4X1NUUklOR1sxMl0+fX0+XT4gfD4sIDxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QWQgZm9yIHRhZyA8QVNOMVRhZyBVVEY4X1NUUklOR1sxMl0+fX0+XT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9XFx4ZjNJKFwiXFx4ZDNcXHhiOVxceGZlXFx4ZTBcXHhkZVxceGU0OFxceGNlXFx4ZWVcIlxceDFjXFx4ZTlcXHg5MTtcXHg5NFxceGQwci9cXHg4N1xceDg1WUtmXFx4YjFcXHhjNVxceGY1elxceDg1XVxceGMyXFx4MGZcXHhkMy4pWDZcXHhjY0hrXFx4YTJcXHhhMlxceHhmZFxceGVhXFx4Zjk4NStcXHhmNFxceGU2XFx4OWFcXHgwZVxceGY2XFx4YmJcXHgxMlxceGFiXFx4ODchXFx4YzMvXFx4YmNcXHhmNFxceDA2XFx4YjhcXHg4ZlxceDhlXFx4MTBcXHgwN1xcJ1xceDk1XFx4ZTVCXFx4Y2JcXHhkMVxceGQ1XFx4MTBcXHg4Y1xceDkyXFx4Yk1XXFx4MDZVIVwiJVxceGRiXFx4ZjNcXHhhYVxceGE5YFxceGJmTVxceGFheVxceGQxXFx4YWJcXHg5MkhcXHhiYVxceDE5XFx4OGVcXHgxMlxceGVjaFxceGQ5XFx4YzZcXHhiYVxceGRmXFx4ZWNaXFx4MWNcXHhkOENcXHhmZVxceGU3UlxceGM5XFx4Y2ZcXHgwMlxceHhhMlxceDEzSiVcXHhhZlxceGU2XFx4MWNcXHhiMSVcXHhiZlxceGI0XFx4OTlcXHhhMlNcXHhkM1xceGEyXFx4MDJcXHhiZlxceDExXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMSddPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRXZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE1J10+LCA8QVNOMV9CT09MRUFOWy0xTF0+LCA8QVNOMV9TVFJJTkdbJ1xceDAzXFx4MDJcXHgwNVxceGUwJ10+XV0+IHw+LCA8WDUwOXYzRXh0ICB2YWw9PENlcnRpZmljYXRlJ10+XV0+IHw+LCA8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xNCddPiwgPEFTTjFfU1RSSU5HW1wiXFx4MDRcXHgxNFxceDgyXFx4YmNcXHhjZlxceDAwXFx4MDBcXHgxWycuMi41LjI5LjM1J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgxNlxceDgwXFx4MTQ2XFx4YzNsXFx4ODhcXHhlN1xceDk1XFx4ZmVcXHhiMFxceGJkXFx4ZWNcXHhjZT49XFx4ODZcXHhhYiFcXHg4MVxceDg3XFx4ZGFcXHhkYSddPl1dPiB8Pl0gc2lnbl9bXCJcXHgwMFxceGE5XFx4YmRNV0B0XFx4ZmVcXHg5NlxceGU5K1xceGQ2eFxceGZkXFx4YjNjXFx4Y2NcXHhmNFxceDBiTVxceDEyXFx4Y2FadFxceDhkXFx4OWJcXHhmMmFcXHhlNlxceGZkXFx4MDZcXHgxMUNcXHg4NFxceGZjXFx4MTdcXHhhMFxceGVjY2M2XFx4Yjl4MDJcXHgwODFcXHg5YVxceGYxXFx4ZDlcXHgxN1xceGM1XFx4ZTlcXHhhNlxceGE1XFx4OTZLbUBcXHhhOVtlKFxceGNiXFx4Y2JcXHgwMFxceDAzXFx4ODJjN1xceGQzXFx4YWRcXHhiMVxceDk2O3ZcXHhmNVxceDE3XFx4MTZcXHgwMntcXHhiZFNTRnI0XFx4ZDZcXGIzXFx4MTBcXHhmN2xcXHhjNlxceDg1Sy0nXFx4YWRcXG4gXFxcXFxceGZiXFx4OGRcXHgxOXA0XFx4Yjl1X3xcXHg4N1xceGQ1XFx4YzNcXHhlY1xceDkzXFx4MTNBXFx4ZmNzXFx4MDNcXHhiOVxceDhkXFx4MWFcXHhmZVxceGY3JlxceDg2SVxceDAzXFx4YTlcXHhjNVxcXFx4YzFDXFx4YzdcXHhlMCVcXHhiNlxceGYxXFx4ZDNcXHgwMFxceGQ3QFxceGFiS1xceDdmK3o+XFx4YTZcXHg5OUxUXCJdPiB8PiB8Pl0gfD4+PiwgPFRMU1JlY29yZCAgY29udGVudF90eXBlPWhhbmRzaGFrZSB2ZXJzaW9uPVRMU18xXzBcbiAgICA8VExTU2Vzc2lvbkN0eDogaWQ9MTUzOTE3NTgwXG4gICAgICAgcGFyYW1zLmhhbmRzaGFrZS5jbGllbnQ9PFRMU0NsaWVudEhlbGxvICB2ZXJzaW9uPVRMU18xXzIgZ210X3VuaXhfdGltZT0xMjA2NzgwMDcgcmFuZG9tX2J5dGVzPVwiVWFcXHhjMVxcXFx3MjJcXHhjNFxceDAxc1xceDhkPlxceGVuZ3RoPTB4NzYgY2lwaGVyX3N1aXRlcz1bJ0VDREhFX1JTQV9XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdFQ0RIRV9FQ0RTQV9XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdFQ0RIRV9SU0FfV0lUSF9BRVNfMjU2RUNEU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEnLCAnREhFX0RTU19XSVRIX0FFU18yNTZfR0NNX1NIQTM4NCcsICdESEVfUlNBX1dJVEhfQUVTXzI1Nl9HQ01fU0hBMzg0JywgJ0RIRV9SU0FfV0lUSF9BRVNfMjU2X0NCQ18yNTZfQ0JDX1NIQScsICdESEVfUlNBX1dJVEhfQ0FNRUxMSUFfMjU2X0NCQ19TSEEnLCAnREhFX0RTU19XSVRIX0NBTUVMTElBXzI1Nl9DQkNfU0hBJywgJ0VDREhfUlNBX1dJVEhfQUVTXzI1Nl9HQ01fU0hBMzg0JywgJzI1Nl9DQkNfU0hBMzg0JywgJ0VDREhfUlNBX1dJVEhfQUVTXzI1Nl9DQkNfU0hBJywgJ0VDREhfRUNEU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEnLCAnUlNBX1dJVEhfQUVTXzI1Nl9HQ01fU0hBMzg0JywgJ1JTQV9XSVRIV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnRUNESEVfRUNEU0FfV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnRUNESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBMjU2JywgJ0VDREhFX0VDRFNBX1dJVEhfQUVTXzFfV0lUSF9BRVNfMTI4X0dDTV9TSEEyNTYnLCAnREhFX1JTQV9XSVRIX0FFU18xMjhfR0NNX1NIQTI1NicsICdESEVfUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBMjU2JywgJ0RIRV9EU1NfV0lUSF9BRVNfMTI4X0NCQ19TSFNIQScsICdESEVfRFNTX1dJVEhfU0VFRF9DQkNfU0hBJywgJ0RIRV9SU0FfV0lUSF9DQU1FTExJQV8xMjhfQ0JDX1NIQScsICdESEVfRFNTX1dJVEhfQ0FNRUxMSUFfMTI4X0NCQ19TSEEnLCAnRUNESF9SU0FfV0lUSF9BJ0VDREhfRUNEU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEyNTYnLCAnRUNESF9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEnLCAnRUNESF9FQ0RTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQScsICdSU0FfV0lUSF9BRVNfMTI4X0csICdSU0FfV0lUSF9DQU1FTExJQV8xMjhfQ0JDX1NIQScsICdFQ0RIRV9SU0FfV0lUSF8zREVTX0VERV9DQkNfU0hBJywgJ0VDREhFX0VDRFNBX1dJVEhfM0RFU19FREVfQ0JDX1NIQScsICdESEVfUlNBX1dJVEhfM0RFU1dJVEhfM0RFU19FREVfQ0JDX1NIQScsICdSU0FfV0lUSF8zREVTX0VERV9DQkNfU0hBJywgJ0VNUFRZX1JFTkVHT1RJQVRJT05fSU5GT19TQ1NWJ10gY29tcHJlc3Npb25fbWV0aG9kc19sZW5ndGg9MHgxIGNvbXByZXNzbGVuZ3RoPTB4NCB8PFRMU0V4dEVDUG9pbnRzRm9ybWF0ICBsZW5ndGg9MHgzIGVjX3BvaW50X2Zvcm1hdHM9Wyd1bmNvbXByZXNzZWQnLCAnYW5zaVg5NjJfY29tcHJlc3NlZF9wcmltZScsICdhbnNpWDk2Ml9jb21wcmVndGg9MHgzMiBlbGxpcHRpY19jdXJ2ZXM9WydzZWN0NTcxcjEnLCAnc2VjdDU3MWsxJywgJ3NlY3A1MjFyMScsICdzZWN0NDA5azEnLCAnc2VjdDQwOXIxJywgJ3NlY3AzODRyMScsICdzZWN0MjgzazEnLCAnc2VjdDI4MywgJ3NlY3QxOTNyMScsICdzZWN0MTkzcjInLCAnc2VjcDE5MmsxJywgJ3NlY3AxOTJyMScsICdzZWN0MTYzazEnLCAnc2VjdDE2M3IxJywgJ3NlY3QxNjNyMicsICdzZWNwMTYwazEnLCAnc2VjcDE2MHIxJywgJ3NlY3AxaXRobSAgbGVuZ3RoPTB4MWUgYWxncz1bPFRMU1NpZ25hdHVyZUhhc2hBbGdvcml0aG0gIGhhc2hfYWxnPXNoYTUxMiBzaWdfYWxnPXJzYSB8PiwgPFRMU1NpZ25hdHVyZUhhc2hhbGdvcml0aG09c2hhNTEyIHNpZ19hbGc9ZWNkc2EgfD4sIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtICBoYXNoX2FsZz1zaGEzODQgc2lnX2FsZz1yc2EgfD4sIGhBbGdvcml0aG0gIGhhc2hfYWxnPXNoYTM4NCBzaWdfYWxnPWVjZHNhIHw+LCA8VExTU2lnbmF0dXJlSGFzaEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMjU2IHNpZ25hdHVyZV9hIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtICBoYXNoX2FsZz1zaGEyNTYgc2lnX2FsZz1lY2RzYSB8PiwgPFRMU1NpZ25hdHVyZUhhc2hBbGdvcml0aG0gIGhhc2hfYWxnPXNhbGdvcml0aG09ZHNhIHw+LCA8VExTU2lnbmF0dXJlSGFzaEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMjI0IHNpZ19hbGc9ZWNkc2EgfD4sIDxUTFNTaWduYXR1cmVIYXNoQWxnb3JpdGhtIGExIHNpZ19hbGc9ZHNhIHw+LCA8VExTU2lnbmF0dXJlSGFzaEFsZ29yaXRobSAgaGFzaF9hbGc9c2hhMSBzaWdfYWxnPWVjZHNhIHw+XSB8Pj4sIDxUTFNFeHRlbnNpIHR5cGU9cGFkZGluZyBsZW5ndGg9MHhmMCB8PFJhdyAgbG9hZD0nXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4XFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMCdcbiAgICAgICBwYXJhbXMuaGFuZHNoYWtlLnNlcnZlcj08VExTU2VydmVySGVsbG8gIHZlcnNpb249VExTXzFfMCBnbXRfdW5peF90aW1lPTE0MzUwMDk3NzQgcmFuZG9tX2J5dGVzPSdcXHgxZFxceGMwdSFcXHhiZFxceGY5XFx4YzNcXHhkOWZhXFx4YTU2RlxceGQ4LFxceDA3PVxceGIxOnlcXHgxMlBcXHhjMDRcIlxceGQ0XFx4ZmVcXHg4OGVDfVxceGUxXFx4YWRdXFx4ZGYxJyBjaXBoZXJfc3VpdGU9UlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBIGNvbXByZXNzaW9uX21ldGhvZD1OVXRSZW5lZ290aWF0aW9uSW5mbyAgbGVuZ3RoPTB4MCB8Pj4sIDxUTFNFeHRlbnNpb24gIHR5cGU9aGVhcnRiZWF0IGxlbmd0aD0weDEgfDxUTFNFeHRIZWFydGJlYXQgIG1vZGU9cGVlcl9hbGxvd2VkX3RvX3NlbmQgfD4+XG4gICAgICAgcGFyYW1zLm5lZ290aWF0ZWQudmVyc2lvbj1UTFNfMV8wXG4gICAgICAgcGFyYW1zLm5lZ290aWF0ZWQuY2lwaGVyc3VpdGU9UlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBXG4gICAgICAgcGFyYW1zLm5lZ290aWF0ZWQua2V5X2V4Y2hhbmdlPVJTQVxuICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmVuY3J5cHRpb249KCdBRVMnLCAxNiwgJ0NCQycpXG4gICAgICAgcGFyYW1zLm5lZ290aWF0ZWQubWFjPVNIQVxuICAgICAgIHBhcmFtcy5uZWdvdGlhdGVkLmNvbXByZXNzaW9uPU5VTExcbiAgICAgICBjcnlwdG8uY2xpZW50LmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTM4MDQyYz5cbiAgICAgICBjcnlwdG8uY2xpZW50LmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTMyOTQ0Yz5cbiAgICAgICBjcnlwdG8uc2VydmVyLmVuYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTMyOTQ4Yz5cbiAgICAgICBjcnlwdG8uc2VydmVyLmRlYz08Q3J5cHRvLkNpcGhlci5BRVMuQUVTQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTM0YmQ0Yz5cbiAgICAgICBjcnlwdG8uc2VydmVyLnJzYS5wcml2a2V5PTxDcnlwdG8uQ2lwaGVyLlBLQ1MxX3YxXzUuUEtDUzExNV9DaXBoZXIgaW5zdGFuY2UgYXQgMHg5MzI5NDZjPlxuICAgICAgIGNyeXB0by5zZXJ2ZXIucnNhLnB1YmtleT08Q3J5cHRvLkNpcGhlci5QS0NTMV92MV81LlBLQ1MxMTVfQ2lwaGVyIGluc3RhbmNlIGF0IDB4OTM4MDRlYz5cbiAgICAgICBjcnlwdG8uc2VydmVyLmRzYS5wcml2a2V5PU5vbmVcbiAgICAgICBjcnlwdG8uc2VydmVyLmRzYS5wdWJrZXk9Tm9uZVxuICAgICAgIGNyeXB0by5jbGllbnQuZGgueD1Ob25lXG4gICAgICAgY3J5cHRvLmNsaWVudC5kaC55X2M9Tm9uZVxuICAgICAgIGNyeXB0by5zZXJ2ZXIuZGgucD1Ob25lXG4gICAgICAgY3J5cHRvLnNlcnZlci5kaC5nPU5vbmVcbiAgICAgICBjcnlwdG8uc2VydmVyLmRoLng9Tm9uZVxuICAgICAgIGNyeXB0by5zZXJ2ZXIuZGgueV9zPU5vbmVcbiAgICAgICBjcnlwdG8uY2xpZW50LmVjZGguY3VydmVfbmFtZT1Ob25lXG4gICAgICAgY3J5cHRvLmNsaWVudC5lY2RoLnByaXY9Tm9uZVxuICAgICAgIGNyeXB0by5jbGllbnQuZWNkaC5wdWI9Tm9uZVxuICAgICAgIGNyeXB0by5zZXJ2ZXIuZWNkaC5jdXJ2ZV9uYW1lPU5vbmVcbiAgICAgICBjcnlwdG8uc2VydmVyLmVjZGgucHJpdj1Ob25lXG4gICAgICAgY3J5cHRvLnNlcnZlci5lY2RoLnB1Yj1Ob25lXG4gICAgICAgY3J5cHRvLnNlc3Npb24uZW5jcnlwdGVkX3ByZW1hc3Rlcl9zZWNyZXQ9Tm9uZVxuICAgICAgIGNyeXB0by5zZXNzaW9uLnByZW1hc3Rlcl9zZWNyZXQ9J1xceDAzXFx4MDNVeFxceGZmLFVcXHg4Yk1cXHhmNFxceGY3XFx4OWJcXHhlNFxceGI0XFx4OTVcXHhkZlxceDkwXFx4MDJcXFxcSXs8XFx4YmVcXHg4N3V1aVxceGRjXFx4MTZcXHhmZm5cXHhmXG4gICAgICAgY3J5cHRvLnNlc3Npb24ubWFzdGVyX3NlY3JldD0nXFx4YjdcXHhlMzhcXHg4YVxceGJjXFx0OVFcXHhhYyxcXHJcXHJcXHgwZihcXHhiZFxcXFxcXHI8XFx4YTNGXFx4ZjJcXHhjMFxceGZmXFx4ZmNcXHg4OFxceGUxSlxceGVkXFx4MDhcXHhmOFxceGJjXFx4XG4gICAgICAgY3J5cHRvLnNlc3Npb24ucmFuZG9tYnl0ZXMuY2xpZW50PVwiXFx4MDcxZndVYVxceGMxXFxcXHcyMlxceGM0XFx4MDFzXFx4OGQ+XFx4YzBcXHhkMlxceGE2XFx4ZTJcXHhiNyM0Kl0jXFx4YWZcXHgwMDNcXHhhMydcXHhhMFwiXG4gICAgICAgY3J5cHRvLnNlc3Npb24ucmFuZG9tYnl0ZXMuc2VydmVyPSdVXFx4ODhcXHg4MlxceGVlXFx4MWRcXHhjMHUhXFx4YmRcXHhmOVxceGMzXFx4ZDlcXHhhZG1ZUlxceGI0R1xceDkzXFx4ZWFjWFxceDg4XFx4ZTFxL1xceDA4XFx4MTZ4cCskJ1xuICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5jbGllbnQubWFjPScgZFxceDkwXFx4Y2FcXHhiZFVLZVxceDk2XFx4YzlZXCI6XndcXHhhMFxceDAxXFx4YmQ9XFx4YmMnXG4gICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LmNsaWVudC5lbmNyeXB0aW9uPVwiXFx4YzQvXFx4Y2JcXHhjN1xcblxceDg1XFx4MGJ4XFx4OGNcXHhkOFxceDhlK1xceDgzXFx4OGIne1wiXG4gICAgICAgY3J5cHRvLnNlc3Npb24ua2V5LmNsbGllbnQuaXY9J1xceGRmVlxceGVlXFx4YjFZXFx4ZTFcXHhhZVxceGZkXFx4YjBcXHhlZVxceGQ5XFx4MWV5XFx4ZDJcXHhmN1xceGQ0J1xuICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5zZXJ2ZXIubWFjPSdcXHhjZlxceGUyRlxceDk3XFx4ODFcXHg5Y3dcXHgwM1xceGJjflxceDFlXFx4YWZcXHgxNVxceGRkMkpcXHhkMFxceDA3SVxceDg3J1xuICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5zZXJ2ZXIuZW5jcnlwdGlvbj0nWndcXHhmZFxceDE1XFx4MTVhXFx4MGJoQEZcXHhhY1xceGZlblxceDBlYVxceGE4J1xuICAgICAgIGNyeXB0by5zZXNzaW9uLmtleS5zZXJ2ZXIuaXY9J1xceDE2XFx4Y2IpXFx4ZmFcXHhmY1xceDlmXFx4YWFyL1xceDE5XFx4YjVcXHg4OFxceDg1b1xceDhlXFx4ZTMnXG4gICAgICAgY3J5cHRvLnNlc3Npb24ua2V5Lmxlbmd0aC5tYWM9MjBcbiAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkubGVuZ3RoLmVuY3J5cHRpb249MTZcbiAgICAgICBjcnlwdG8uc2Vzc2lvbi5rZXkubGVuZ3RoLml2PTE2XG4gICAgPlxuICAgIHwgICAxOTIuMTY4LjIyMC4xICAgOjU0OTA4ID0+IDE5Mi4xNjguMjIwLjEzMSA6NDQzICAgfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9aGFuZHNoYWtlIHZlcnNpb249VExTXzFfMCBsZW5nbG9hZD0nXFx4MDFcXHgwMFxceDA4XFx4YTl4UFxceGYzXFx4ZGJcXHhmY1xceDhiLFxceGMwQ15OXFx4OTZBTFFcXHRcXHhhYldcXHhjYlxceDlhXFx4ZTRcXCdcXHhhOTZcXHhiOHlcXHhmOFxceDFkXFx4ZGFcXHg3ZlxceDk3UVxceDgwNFxceDEyXFxuXFx4ZTRcXHhjZWVcXHhhZVdcXHhlNVxceGE0a1xceGM0XlxceDk1XFx4OGVcXHhiYVxcciNcXHhkZlxceGEySkRcXHhjYVxceGEwXFx4OThTXFx4OTMzKjxcXHhjMVxcblxceDE4XFx4MWZcXHhkOVxceGU0XFx4YWRcXHg4MlxceGI2XFx4ZWFcXHg5Y1xceGI4XFx4MTRcXHhhNjFcXHhiMXgwMFxceDBmMVxceDBlXFx4Y2JcXHhjMz1HXj8/XFx4YmFcXHhlZVxceGMzXFx4ZWJcXHgxNlxceGU4XFx4ZjlcXHhkNlxceGRmNWVcXHhiOFxccjUpXFx4YzdcXHhjMVxceGYzXFx4MWRcXHg4NVxceDE4MTovXFx4MWRcXHgxNmpcXHhkY1NgRVxceGE3XFx4YzJEXCJcXHhjNlxceGIwWUBcXHg5MFxceDE4XFx4ZTRcXHgxY1xceGIxXFx4ZjNcXHg5YVxceGU5XFx4ZDlcXHg4MFBcXHhkOFxceGE5XFx4MDFaXFx4OWRcXHgwMDBcXHg5NVxceGJiXFx4ZGRmXFx4MTNcXHhjOScgfD4+Pj4sIDxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwU1JlY29yZCAgY29udGVudF90eXBlPWhhbmRzaGFrZSB2ZXJzaW9uPVRMU18xXzAgbGVuZ3RoPTB4MzAgfDxUTFNDaXBoZXJ0ZXh0ICBkYXRhPScsXFx4OGNcXHhlY0FcXHg4M1xceGE3XFx4OGNcXHhjZVxceGUzXFx4OWVcXHhiMjBcXHhkXFx4MDgnIHw+Pl0gfD5cbiAgICB8LT4gZGVjcnlwdGVkIHJlY29yZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgPFNTTCAgcmVjb3Jkcz1bPFRMU1JlY29yZCAgY29udGVudF90eXBlPWhhbmRzaGFrZSB2ZXJzaW9uPVRMU18xXzAgbGVuZ2llbnRSU0FQYXJhbXMgIGxlbmd0aD0weDEwMCBkYXRhPSdcXHgwOFxceGE5eFBcXHhmM1xceGRiXFx4ZmNcXHg4YixcXHhjMENeTlxceDk2QUxRXFx0XFx4YWJXXFx4Y2JcXHg5YVxceGU0XFwnXFx4YTk2XFx4Yjh5XFx4ZjhcXHgxZFxceGRhXFx4N2ZcXHg5XFx4MDMgXFx4OTFcXHhlMlxceGE5SVxceGVlXFx4YWVXXFx4ZTVcXHhhNGtcXHhjNF5cXHg5NVxceDhlXFx4YmFcXHIjXFx4ZGZcXHhhMkpEXFx4Y2FcXHhhMFxceDk4U1xceDkzMyo8XFx4YzFcXG5cXHgxOFxceDFmXFx4ZDlcXHhlNFxceGFkXFx4ODJcXHhiNlxceGVhXFxcXHhhMFxceDhkSlxceGY5YlxceGU0a1xceDAwXFx4MGYxXFx4MGVcXHhjYlxceGMzPUdePz9cXHhiYVxceGVlXFx4YzNcXHhlYlxceDE2XFx4ZThcXHhmOVxceGQ2XFx4ZGY1ZVxceGI4XFxyNSlcXHhjN1xceGMxXFx4ZjNcXHgxZFxceDg1XFx4MTgxOi9cXHgxZFxceDEwLFVcXHgwY0AtW19cXHgwZVxceGZkXFx4YzZcXHhiMFlAXFx4OTBcXHgxOFxceGU0XFx4MWNcXHhiMVxceGYzXFx4OWFcXHhlOVxceGQ5XFx4ODBQXFx4ZDhcXHhhOVxceDAxWlxceDlkXFx4MDAwXFx4OTVcXHhiYlxceGRkZlxceDEzXFx4YzknIHw+Pj4+LCA8VExzYWdlPSdcXHgwMScgfD4+LCA8VExTUmVjb3JkICBjb250ZW50X3R5cGU9aGFuZHNoYWtlIHZlcnNpb249VExTXzFfMCBsZW5ndGg9MHgzMCB8PFRMU1BsYWludGV4dCAgZGF0YT0nXFx4MTRcXHgwMFxceDAwXFx4MGNcXHhjMlxceGNcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiJyBwYWRkaW5nX2xlbj0weGIgfD4+XSB8PlxuICAgIHwgICAxOTIuMTY4LjIyMC4xMzEgOjQ0MyAgID0+IDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9Y2hhbmdlX2NpcGhlcl9zcGVjIHZlcnNpb249VExTdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD0weDMwIHw8VExTQ2lwaGVydGV4dCAgZGF0YT0nXFx4OTE3XFx4YWNxXFx4MGZcXHg4YVxceGU2XFx4Y2RcXHhjN1xceDBjXFx4ZThcXHhlOShcXHhlMlxceGRhXFx4YmNcXHhlMlxceGNkXFx4OGNiUDkkXFx4Y1xuICAgIHwtPiBkZWNyeXB0ZWQgcmVjb3JkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9Y2hhbmdlX2NpcGhlcl9zcGVjIHZlcnNpb249VExTdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD0weDMwIHw8VExTUGxhaW50ZXh0ICBkYXRhPSdcXHgxNFxceDAwXFx4MDBcXHgwYzFcXHhhOVxceGQ3IHZcXHJcXHhlMVxceDBlXFx4YTRNMngnIG1hYz0nXFx4OWZcXHg4MXdcXHg5NFxceGQxXFx4ZDlwZVxcbmdfbGVuPTB4YiB8Pj5dIHw+XG4gICAgfCAgIDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggPT4gMTkyLjE2OC4yMjAuMTMxIDo0NDMgICB8IDxTU0wgIHJlY29yZHM9WzxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwZT1hcHBsaWNhdGlvbl9kYXRhIHZlcnNpb249VExTXzFkYVxceGEzPy9cXHhjOFxceGUwXFx4YmJSXFx4YzB1XFx4ZGUnIHw+PiwgPFRMU1JlY29yZCAgY29udGVudF90eXBlPWFwcGxpY2F0aW9uX2RhdGEgdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD0weDcwIHw8VExTQ2lwaGVydGV4dCAgZGIyXFx4MWVcXHhkY1xceDk0XFx4Y2NxXFx4MDRcXHhiN1xceDhlXFx4ZTNbXFx4Y2I9XFx4YjFcXHgwYzNcXHhkOFxceDgyXFx4ZWNcXHhhN1xceDk3XFx4ZjJcXHhmZVxceDFmXFx4Y2RwXFx4OTRcXHhjNVxceDA2XVxceGYwXFx4ZWVcXHhhZFpcXHhiNFxceGU3TDxUXFxcXHg5MFxceDk4XFx4YjNcXHhmNlxceDliXFx4MWVcXHg4ZVxceGEwXFx4Y2QnIHw+Pl0gfD5cbiAgICB8LT4gZGVjcnlwdGVkIHJlY29yZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgPFNTTCAgcmVjb3Jkcz1bPFRMU1JlY29yZCAgY29udGVudF90eXBlPWFwcGxpY2F0aW9uX2RhdGEgdmVyc2lvbj1UTFNfMW5nPSdcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiJyBwYWRkaW5nX2xlbj0weGIgfD4+LCA8VExTUmVjb3JkICBjb250ZW50X3R5cGU9YXBwbGljYXRpb25fZGF0YSB2ZXJzaW9uPVRMU182OC4yMjAuMTMxXFxyXFxuQWNjZXB0OiAqLypcXHJcXG5cXHJcXG4nIG1hYz0nXFx4OTZcXHhlZVxceGZmYVxceDEzXFx4ZDNcXHhhNlxceDk3Q1xceGEyXFx4ZDB5XFx4ZjFcXHgwMHIoXFx4MDdcXHgxMlxceGIzXFx4ZmYnIHBhZGRpbmc9J1xceDBjXFx4MGNcXFxuICAgIHwgICAxOTIuMTY4LjIyMC4xMzEgOjQ0MyAgID0+IDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9YXBwbGljYXRpb25fZGF0YSB2ZXJzaW9uPVRMU18xeGVhXFx4OWZcXHgxMlxceDBiXFx4ZDVcXHhmOTRsUlxceDdmXFx4YTZnXFx4ZjMnIHw+PiwgPFRMU1JlY29yZCAgY29udGVudF90eXBlPWFwcGxpY2F0aW9uX2RhdGEgdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD0weGI0MCB8PFRMU0NpcGNlXFx4ODZcXHhiOFxceGM1UlxceGIxXFx4ZjBcXHhjZFxceDkzd1xceGUxWFxcblxceGFmKigwK3RcXHhlN1NcXHhjN1xceGUyXFx4MTVcXHgwZlxceDlmW1xceGFjXFx4OGNcXHhmYldcXHgwNVp2MXxcXHhkZlxceGU5XFx4ZGRUXFx4ZjJcXHgwMlxceDkyYVxceDlmXFx4OTJncFxceDk0XFx4OThcXHhhNlxceGU0XFx4YjZcXHhjNlxceGNlXFx4ZWZUclxceGU4LVxceGRlXFx4ZWFJXFx4ZjBcXHhmNGJKXFx4YTNVXFx4ZWZUZ1xceDA1XFx4ODNcXHhmYVpcXHhjOCBRXFx4MDJcXHhiYVxceGIxXFx4OWVcXHg5NVxceGI1XFx4ZjVcXHhheGJkXFx4ZDAgUFxceDkyXFx4Y2NcXHgxODtcXHhmZl1lXFx4MDBeW1xceGQ2cVxceGYyd1xceGQ5XVxceGU3XFx4ZGVcXHgxY31cXHhkNEJcXHhmMXhcXHhmOFxceDk2NlxceDgxLFxceGVhXFx4YjgjXFx4MWRcXHgxYlxceGM5XFx4YmVyVFFcXHg5OXtdXFx4ZWJcXGNmU1xceDkyZVxceDBjWHxcXHhiOX1cXHhjZChbW2QtXFx4ZjlcXHg5OVxceGMyWGVcXHhlN1xceDkydlxceGVmIFxceGU1fWc7XFx4MTNcXHg5MyBSXFx4OTBzXFx4ZjdcXHgwOFxceGVlXFx4ZGF2XFx4ZTZcXHgxN1xceDg0XFx4OGZiWlxceGEzXFxcXCNcXHhiYVxceGEyXFx4ZTFEXFwnXFx4MTFcXHhiZlxceGZlXFx4ZWJcXHhhOFxceGI5XlxceDhlXFx4OWJZXFx4OWVcXHgxYVxceDk1XFx4YjBGXFx4MTVcXHgxNFxceGQwXFx4ZjkpXFx4YzliV1xceGQyXFx4MTZcXHhiYmJcXHgxNCtcXHhlMVxceDkyPWNse1BcXHhmY1xceDEwXFx4eDE5XFx4MTlcXHhkZnVCJDhcXHhmMlxceGMxXFx4YTZTXFx4ODhcXHhjM1xceGM4XFx4YmRcXHhiNFxceDg3SVxceGVlQVxceGYwXFxuUzhtajZcXHhjOFxceDBiKlxceGMwXFx4OWUtXFx4YzJcXHhjZlxceGVlXFx4ZDkjQkdcXHhiMlxceDFkXFx4ZmQqYnVcXHg4NXgwMFxceDg2XFx4ZjVcXHgxOFxceDE5SFxceGY4MFxceDFmR1xceDAxXlIoXFx4YzdcXHhkMjN6XFx4Y2ZcXHhiZlxceDE2XFx4ODdcXHhjYVJcXHhkMlxceGM2XFx4ZGNcXHhkZVxceGM4Ui1cXHgxYUFGPVxceDE2XFx4ZTJcXHhkNlxceGIyIUlcXHhhOExcXHg5OFxcXFx4ZjlAdVxceGYxXCJcXHg4YVxceGYyXFx4MWZcXHhlOFxceGRjXFx4OWNFVVxceGM1XFx4YTl4XFxcXFxceGQ0XFx4ZWJcXHhkNlxcJ1xceGI2JVxceDhhXFx4MTg7T1xceGI5KVxceGE3XFx4OWNcXHhlNFxceGQ4cVxceDFkXFx4Y2ZcXHg4MFxceGEwXFx4YjlfQyRcXHhkZS1EXFx4MWNcXHgxZVxceDE3XFx4ZTdcXHhjNFxceGFjZVxceGMwXFx4N2ZGVGtcXHg4YUxcXHgwOFxceGZlME0+XFx4ODdcXHgwZVxceDE5QlxceGUyXFx4YWRcXHgxMlEhXFx4YjdcXCdcXHg5ZHJSWlxceDlhXFx4ZTVcXHgwMXFcXHgwNXFcXHgxNVxceGI0XFx4YWRcXHhkOFxceDEyXFx4YjFAXFx4ODhcXHhiZlxceDlmXFx4ZWYzTlxceDk3XFx4ZDhWPlxceDlkI1xceGVlXFx4ZWRcXHg5ZlxceGFjXFx4ZWNcXHgwNlxceGQxXFx4YjlcXHg5OW5cXHhkNVxceGFkVFxceDE1XFx4OWNZXFx4YTl8XFx4YThcXHhjMVBfeDFOXFx4MGNcXHh4Yjh6SlxceDhiXFx4ZjFcXHgwNFxceGFkRlxceGExXFx4YTNcXHg4MlxceDkzXFx4Y2VVXFx4ZGJmXFx4OTdcXHhjMiRUMlxceDljXFx4MWJcXHhjOFxceDg2XFx4MThBXFx4ZjVGeVdcXHhmOFxceGQwXFx4YmFcXHhiOFxceDEyXFx4YjhcXHhkZUJcXHhmNVxceGNmemJcXHhkM1xceGZlQVxceDliXFxyXFx4YTRQQlxceGM0UXkhXFx4ZTBUXFx4MTQpXFx4ZmRiXFx4YjJcXHg5OXdcXHg5MFxceGRlQFxceDBlZ1xceGJiXFx4YTZcXHI5XFx4OTZyZDlcXHhlNlxceDg2OFxceGJlXFx4ODQvXFx0KWd4Uk09XFx4ZTRcXHgwNlxceGExXFx4XFx4OTJcXHhkNVxceGMwdWBcXHhmMTVcXHg5NVxceDA1XFx4OTJqYVxceGUzXFx4ODB3XFx4OTUrXFx4YzRjXFx4YzhLZi9cXHhhZlxceGJkXFx4YzRcXHhjOWVcXHhiYVxceGM0XFx4YjlcXHhkZVxceDlkXFx4MWJcXHg5NlxceDlkXFx4OWIgXFx4ZDZdXFx4ZTNRXFx4NlxceGQ3flxceGU5SFxceGViXFx4OTBcXHg4OFxceGE5XFxuXFx4ODVcXHhjY1xceGFkXFx4MDJcXHgwNEJcXHhkOVxceGNhLVxceGZmayY3XFx4OThcXHhhM1xceGFmXFx4ZGRzbVxceDBmclxceDA1XFx4Zjk9XFx4MTJeXFx4Y2ZcXHhjYVxceDkyXFx4MWN3YVxceDlmeGZlXFx4OWFcXHhkN1RcXHg5MCVxXFx4MWNcXHgxN1xceDk1UVxceGUwblxceGY0NlxceDk3XFx4ZGZcXHhhN3FcXHgxYjpcXHg4OFxceDk4XFx4ZmJ4dVxceDhkKn5oXFxyPFxceGNmXFx4N2ZcXHhiMFxceGQ4XFx4ZDZcXHhjYVxceDhifVxcJ0dcXHhkZmpcXHhmZDdjYlxceGM0S1xceDliM1xceGI5XFx4ZDlGXFx4ZTNcXHhmYVxceGM0L1xceDFmc1xceGM4XFx4OGNcXHgxMVxceGRlXFx4ZDh3XFx4ZDlcXHhlZVxceGQ2PXxcXHgxMiA/XFx4OWZcXHhjOFxceGMyXFx4YTlcXHhkNlxceDhiXFx4MGVcXHhjMlxceGVhSVNcXHhiMVxceGV4ZGRcXHhhNW1cXHhhNlxceDkzXFx4OTJcXHg5YVxceDFjZVxceDkzU1xceGFkbG5cXHhlM1xceGEyXFx4YzBcXHg4Mk1cXHhlMzpcXHhjN1xceGFhXFx4OWVcXHhkNFxceDk5eyU5XFx4ZDVcXHgxYndcXHhkNGN9XFx4ZDdwXFx4YWZcXHhlZVxceGFkeFxcJ0hcXHhjYzA/PlxceGQxXFx4MTdcXHhhMmdcXHhhYVxceGRlXFx4ZjZ0IXtcXHhkN1xceGM3XFx4ZjViXFx4ZTRcXHhmNDVcXHhhOChcXHhkMFxceGRjXFx4YmZcXHg4NlxceGZmXFx4ZjlcXHhjOVxceGZjXFx4OWJcXHhjMlxceGUyQFxceDBiXFx4OGJtXFx4MDZcXHg5OEBcXHhmYWExXFx4YmZfNVxceGMwc1xceDlmXFx4ZmNcXHhmM1xceGIyXFx4ZTBcXHgxNFxceGIwNFxceGE4XFx4ZTJcXHg4ZWNrXFx4ZmVyXFx4ZTJcXHg4MVxceDhhXFx4OWFcXHhmMlxceGJhaVxceGQ2XFx4MTNHXFx4OGJcXHhlNH08L1xceGUzXFx4ZDk9XFx4ZGJcXG5cXHhjMlxceGZkXFx4MTRcXHhmMVQ1XFx4MDJWWFxceGJlYS5cXHg5OHFcXHhmOVxcclxceDE1LFxceGU0XFx4YzZnXFx4ZjJcXHg4M1xceGY2M0F6X2VmXFx4MWRcXHg5NSxcXHhjNDMgXFx4MTZFXFx4Y2E5YlxceDgzSkFhXFx4ZDU/XFx4MGJcXHhmMFxceDdmXFx4ZmVZXFxcXHg5ZSxcXHhkN2xIXFx4YzQmWjlRXlxceDFlXFx4YmZcXHgxY1xceGRidFxceDAwXFx4YmVcXHhhZjdcXHhhOVxcJ15NSFxceGYxXFx4YTNcXHhkN1dbXFx4YmZcXHg5YlxceGUwXFx4MDBcXHhjZVxceGEzXFx4MThcXHgxY3pcXHgxZlxceGVhVj9cXHhhYlxceDhkLTk3I1xceDhlXFx4MDhcXHhkOFxceGM5XFx4MGNkJjkuXFx4YjBcXHg5ZFxceDEzXFx4MDNcXHhlMk48XFx4MGJcXHhkZlxceDk1XFx4OWVcXHhhOVxceGU1UlxceGFjXFx4MTIwMVxceGIwXCJcXHhlOHZdXFx4ODlcXHgwZXp+XFx4MWRlXFx4OTFcXHhhNlxceGNkXFx4ZmE4XFx4OWQyXFx4ZTh8XFx4MDJcXHhlMFxceGIxXFxyXFx4ZjVcXHg5OU4vXFx4MTZcXHhmMWt5XFx4ZmNcXHhiNVxceGY0XFx4ZjVcXHhjM1ZRPWtcXHhlZVxceGI4XFx4OGZnXFx4OWMsXFx4ODV5dVxceDA1Q1xceGMzXFx4ZTUhXFx4MTQ+XFx4ZWUsKHlcXHhkOFxceGY4LVxceDEzXFx4YmFcXHhjMlxceGY2XFx4MThcXHhmZVxceDljXFx4MTBcXHgxNV9cXHg4MFxceGZmRX5nXFx4OTZhXFx4OTFcXHhhZlxceDFmXFx4OGExXFx4MTJBXFx4MDVcXHhhNlRcXHgwMVxceGEwZVxceDllXFx4MGNcXHg5YlxceDliXFx4YzJcXHhkM1xceGQ3ZGNnXFx4ZDhcXG5rXFx4ZThuXFx4MWRcXHg4Y1xceGIxJVxceGI3XFx4OGJsXFx4YzBdRlxceGY0WFxceGU3XFx4OGZFM0tcXHhlM1xceDA2XFx4YTBkXFx4MDhcXHg5OFxceGI0XFx4YjhcXHgwY1xceGE3XFx4YzJcXHhhM09cXHg5M1xceGNjXFx4YzJQQ1xceDg2SlxcZWZcXHhmZHxcXHhhOFxceDE1X19VXFx4ODdcXHJcXHhhZVxceGY4XFx4OTdcXHg5MlxceGQxOVxceDgxcz9VXFx4MDFcXHgwMVxceDlmXFx4ZTAmXFx4OWZcXHg5OVxceDg3XFx4N2ZcXHg4YVxceDg0XFx4MDhuXVxceGM0XFx4MDBcXHhkNnxcXHgxZS1cXHg4M1xceDkwRlxceDhiXFx4YzBcXHhjZFxceGEyK1xcXFxcXHg5Yi56XFx4ZjFcXHgxYlxceGU2R1xceGUxbHNjVlxceDAwXFx4ODdcXHg5ZVxceGYxXFx4OTNcXHhiNVxceGU5XFx4Y2JcXHgxNjRcXHgxNDBnXFx4ZDBcXHhiOVxceDFkNVxceGM3XFx4N2YvXFx4ZGNcXHhiNnt8XFx4Y2JcXHhmZlxceDk1XFx4YjFcXHhhOG1wXFx4ZWNcXHhjYjtcXHg4YU1cXHgxMSZcXHhhZlxceGEzXFx4ZTZcXHJ9XFx4YzZLXFx4ZDl3XFx4ZTNcXHg5OVxceGM0XFxyUVxceDkzQS5cXHgxOVxceGIxOlxceGVjXFx4MWVcXHhiZHt9LFxceDFmXFx4ZmVcXHgxMFxceDk4NFxceDdmXFx4ZTNcXHgxMFxceGU5XFx4ODVLXFx4OWRcXHhmMFxceGEzXFx4OWFcXHhmM1xceDg1XFx4ZjlcXHhjZVxceGJjKmhcXHgxMFxceGMyXFx4ZjlcXHg4Yy9cXHJcXHg4NFxceGY1XFx4ZGYle2lJNyZcXHhmNlxceDA4XFx4MTRNXXlcXHhlOVxceGIwVkhcXHhlM2Y5XFx4MDhcXCdcXHhmZF1UXFx4Y2RcXHhmOEV5XFx4YzZcXHhkOFwiQGNxPlxceGE2XFx4MTJkXFx4YmJcXHhkMlxceDkydXc6I1xceGUyXFx4YWZcXHgxOVxceDAxXFx4N2ZcXHhlOTJYXFx4OGZcXHhhZFxceGUyaE9cXHhmNlxceDE0XFx4YzJjXFx4ZWVcXHg4YVxceFxceDgzXFx4MGVcXHgxNVxceGRhYH1cXHhhNVxceGM5XFx4Y2JNXFx4YzNcXHhmZlxceDE1XFx4YTBcXHg5YnRcXHhiOVxceDhjV3dMXFx4OTFcXHhiZFxceDAwXFx4Y2RBXFxuS1xcXFxLL1xceGQyfnB7XFx4ZjZcXHhlNFxceGFhdlxceDA3WFxcblxceGVmXFx4ZmVcXHg4eGMyXFx4MDhoXFx4ZjNcXHhjM1xceGYxXFx4ZDVsXFx4ZTRcXHhmNSxbXFx4YTAtP1xceDliXFx4MTJcXHg5OVxceGFmXFx4YjVcXHhkMzBcXHhjNktcXHhkM1xceGYwQVxceDkzZVxceGY5XFx4ZjNcXHgwN1xceGUwXFx4ZTJcXHg5YlxceGMzKVxceDAwXFx4YWM2XFx4eDFhXFx4OGVcXHhjNUNcIlxceDhhXFx4MGNcXHhhOVxceGM2XFx4ZTRcXHhlOVxceGY0XFx4YzZTeiVMXFx4ZTVcXHhiNmZcXHg4NlxceDllXFx4MDNiXFx4MDhcXHhiMFxceDg2XFx4YzJcXHgxYlxceGU0XFx4OWJcXHgxZlxceGZiXFx4YThdZmIkXFx4YWVcXHhiM2Z+ZWFcXHhhOFxceGQ0XFx4OTlcXHhlYVxceGI3XFx4ZDRKXFx4OWNcXHhiN1xceGNkXFx4MTBcXHhhNSNcXHhkOD5cXHhjZGVcXHg5YVxceDlmXFx4MTBcXHhlZilcXHhlMVxceGZiLFxceGYzXFx4ZWUwXFx4YTlcXHhhNFxceGUyZlxceGE1X3lcXHhhN1xceGI2XFx4OGIpeGFlMFwiXFx4Y2NcXHgwMW1cXHhlOFxceGU0IFJcXHg4Y1xceGM2LnZcXHg4Y1xceGRjXFx4OThcXHhiY1xceGU1XFx4ZjRcXHhjOFxceGFhXFx4YzJcXHhjNlxceDExaVxceGE3XFx4Y2NcXHhjOVxceDEwXFx4OWNcXHhlYlxceDk2XFx4YzRcXHhkNFxceGQwXFx4ZDBDXFxiOFxceGMyXFx4YWNcXHhkYlxceGFkXFx4ZGFcXHg4NlxceGRlXFx4MGNWY1xceGVhXFx4ZmVcXHhiYi0/OlxceGJiXFx4ZjR8XFx4YjF5aVxceGZiXFx4YWZ3XFx4ZWRcXHhhM106eShcXHhhN1xceGU5ZXROXFx4ZjljR1xceDFkdXhcXHhhZFxcXFxcXHg4Y1xceDg0XFxcXHg5YlxceGY0XFx4YTkxXFx4ZDdcXHhmMlxceGMyXFx4MGZcXHhmMVxceGQ4XFx4OGF+XFx4ZWVcXHgxN1xceGE0XFx4MDVcXHg3ZlxceDBjZS1PXFx4ZDZcXHhhOVxceDk1XFx4YTNcXHhlOVxceGVidVxcbmRcXHhkY1xcdFxceGFhfk9VXFx4ZDhcXHg4Y1xceGZhXFx4YjVcXHgwNFZcIlxceDk2XFx4OGRcXHg4N1xceDkyXFx4YmRcXHg5MFxceGE0XFx4YmJcXHg4MFxceDk2XFx4MWRHXFx4YjJORHpKQnRcXHhhOVxceGY4XFx4Y2NcXHhmNVxceDhjXFx4MWVcXHgxMWZQXFx4YmFcXHhiZVxceGY2NFwic1xceGQ2JFxceGM5VFxceGRhKVxceGRcbiAgICB8LT4gZGVjcnlwdGVkIHJlY29yZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgPFNTTCAgcmVjb3Jkcz1bPFRMU1JlY29yZCAgY29udGVudF90eXBlPWFwcGxpY2F0aW9uX2RhdGEgdmVyc2lvbj1UTFNfMVxceGUxXFx4ZDUnIHBhZGRpbmc9J1xceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGJcXHgwYlxceDBiXFx4MGInIHBhZGRpbmdfbGVuPTB4YiB8Pj4sIDxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwZT1hcHBsaWNhdGlvbl9kYW1sXFxyXFxuXFxyXFxuPEhUTUw+PEJPRFkgQkdDT0xPUj1cIiNmZmZmZmZcIj5cXG48cHJlPlxcblxcbnNfc2VydmVyIC1hY2NlcHQgNDQzIC1jZXJ0IG9wZW5zc2xfMV8wXzFfZl9zZXJ2ZXIucGVtIC10bHMxIC1jaXBoZXIgQUVTMTI4djM6QUVTMTI4LVNIQSAgICAgICAgICAgICAgIFxcbi0tLVxcbkNpcGhlcnMgY29tbW9uIGJldHdlZW4gYm90aCBTU0wgZW5kIHBvaW50czpcXG5FQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODQgRUNESEUtRUNEU0EtQUVTMjUgRUNESEUtRUNEU0EtQUVTMjU2LVNIQSAgICBcXG5ESEUtRFNTLUFFUzI1Ni1HQ00tU0hBMzg0ICBESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0ICBESEUtUlNBLUFFUzI1Ni1TSEEyNTYgICAgIFxcbkRIRS1EU1MtQUVTMjU2IERIRS1EU1MtQ0FNRUxMSUEyNTYtU0hBICAgIEVDREgtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XFxuRUNESC1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NCBFQ0RILVJTQS1BRVMyNTYtU0hBMzg0ICAgICBFQ0RILUVDRFNBLUFFIFxcbkFFUzI1Ni1TSEEyNTYgICAgICAgICAgICAgIEFFUzI1Ni1TSEEgICAgICAgICAgICAgICAgIENBTUVMTElBMjU2LVNIQSAgICAgICAgICAgXFxuRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2IEVDREhFLUVDRFNBLSAgICAgIEVDREhFLUVDRFNBLUFFUzEyOC1TSEEgICAgXFxuREhFLURTUy1BRVMxMjgtR0NNLVNIQTI1NiAgREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NiAgREhFLVJTQS1BRVMxMjgtU0hBMjU2ICAgICBcXG5ESEUtRFNTLUEgICAgICBESEUtRFNTLVNFRUQtU0hBICAgICAgICAgICBESEUtUlNBLUNBTUVMTElBMTI4LVNIQSAgIFxcbkRIRS1EU1MtQ0FNRUxMSUExMjgtU0hBICAgIEVDREgtUlNBLUFFUzEyOC1HQ00tU0hBMjU2IEVDREgtRUNEU0EgICAgICBcXG5FQ0RILUVDRFNBLUFFUzEyOC1TSEEgICAgICBBRVMxMjgtR0NNLVNIQTI1NiAgICAgICAgICBBRVMxMjgtU0hBMjU2ICAgICAgICAgICAgIFxcbkFFUzEyOC1TSEEgICAgICAgICAgICAgICAgIFNFRUQtU0hBLVNIQSAgIEVESC1SU0EtREVTLUNCQzMtU0hBICAgICAgXFxuRURILURTUy1ERVMtQ0JDMy1TSEEgICAgICAgRUNESC1SU0EtREVTLUNCQzMtU0hBICAgICAgRUNESC1FQ0RTQS1ERVMtQ0JDMy1TSEEgICBcXG5ERVMtQ0JDM3BoZXIgICAgOiBBRVMxMjgtU0hBXFxuICAgIFNlc3Npb24tSUQ6IEI0NThFQzY2NkFGQUE1MzY0NkQ4MkMwNzNEQjEzQTc5MTI1MEMwMzQyMkQ0RkU4ODY1NDM3REUxQUQ1RERGMzFcXG4gICAgU2Vzc2lvbi1JRC1jdHg6IDBFNjY1MkRBRjI1NUFGQUNGMEUxNkMyODZBOERcXG4gICAgS2V5LUFyZyAgIDogTm9uZVxcbiAgICBQU0sgaWRlbnRpdHk6IE5vbmVcXG4gICAgUFNLIGlkZW50aXR5IGhpbnQ6IE5vbmVcXG4gICAgU1JQIHVzZXJuYW1lOiBOb25cXG4gICAxIGl0ZW1zIGluIHRoZSBzZXNzaW9uIGNhY2hlXFxuICAgMCBjbGllbnQgY29ubmVjdHMgKFNTTF9jb25uZWN0KCkpXFxuICAgMCBjbGllbnQgcmVuZWdvdGlhdGVzIChTU0xfY29ubmVjdCgpKVxcbiAgIDAgY2xpZW5jZXB0KCkpXFxuICAgMSBzZXJ2ZXIgYWNjZXB0cyB0aGF0IGZpbmlzaGVkXFxuICAgMCBzZXNzaW9uIGNhY2hlIGhpdHNcXG4gICAwIHNlc3Npb24gY2FjaGUgbWlzc2VzXFxuICAgMCBzZXNzaW9uIGNhY2hlIHRpbWVvdXRzXFxuYXZhaWxhYmxlXFxuPC9CT0RZPjwvSFRNTD5cXHJcXG5cXHJcXG4nIG1hYz0nXFx4OTckXFx4MWFcXHgxOFxceDEyQlxccjYsZFxceGIwXFx4OWZNcVxceGRkXFx4ZTZcXHhkMlxcXFxcXG5cXHhlNycgcGFkZGluZz0nXFx4MDhcXHgwOFxceDA4XFx4MDhcXHgwOFxcXG4gICAgfCAgIDE5Mi4xNjguMjIwLjEgICA6NTQ5MDggPT4gMTkyLjE2OC4yMjAuMTMxIDo0NDMgICB8IDxTU0wgIHJlY29yZHM9WzxUTFNSZWNvcmQgIGNvbnRlbnRfdHlwZT1hbGVydCB2ZXJzaW9uPVRMU18xXzAgbGVuZ3RoPTA0XFx4YTBcXHgwN05edlxceGE4M2toXFx4YzBcXHhmZFxceGU5JyB8Pj4+XSB8PlxuICAgIHwtPiBkZWNyeXB0ZWQgcmVjb3JkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCA8U1NMICByZWNvcmRzPVs8VExTUmVjb3JkICBjb250ZW50X3R5cGU9YWxlcnQgdmVyc2lvbj1UTFNfMV8wIGxlbmd0aD0wYW5cXHhmYlpcXHhmNVxceDgyXFx4MTYnIHBhZGRpbmc9J1xcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdFxcdCcgcGFkZGluZ19sZW49MHg5IHw+Pl0gfD5cblxuU1NMIFNlY3VyaXR5IFNjYW5uZXJcbicnJycnJycnJycnJycnJycnJycnXG5cbkFjdGl2ZSBTY2FubmVyOlxuXG46OlxuXG4gICAgIyBweXRob24gZXhhbXBsZXMvc2VjdXJpdHlfc2Nhbm5lci5weSBhY3RpdmUgbG9jYWxob3N0IDQ0MyBcblxuICAgIEFuIGV4YW1wbGUgaW1wbGVtZW50YXRpb24gb2YgYSBwYXNzaXZlIFRMUyBzZWN1cml0eSBzY2FubmVyIHdpdGggY3VzdG9tIHN0YXJ0dGxzIHN1cHBvcnQ6XG5cbiAgICAgICAgVExTU2Nhbm5lcigpIGdlbmVyYXRlcyBUTFMgcHJvYmUgdHJhZmZpYyAgKG9wdGlvbmFsKVxuICAgICAgICBUTFNJbmZvKCkgcGFzc2l2ZWx5IGV2YWx1YXRlcyB0aGUgdHJhZmZpYyBhbmQgZ2VuZXJhdGVzIGV2ZW50cy93YXJuaW5nXG5cbiAgICAgICAgXG5cbiAgICBTY2FubmluZyB3aXRoIDEwIHBhcmFsbGVsIHRocmVhZHMuLi5cbiAgICA9PiBhY2NlcHRlZF9jaXBoZXJzdWl0ZXNcbiAgICA9PiBhY2NlcHRlZF9jaXBoZXJzdWl0ZXNfc3NsMlxuICAgID0+IGNvbXByZXNzaW9uc1xuICAgID0+IGhlYXJ0YmxlZWRcbiAgICA9PiBwb29kbGUyXG4gICAgPT4gc2NzdlxuICAgID0+IHNlY3VyZV9yZW5lZ290aWF0aW9uXG4gICAgPT4gc3VwcG9ydGVkX3Byb3RvY29sX3ZlcnNpb25zXG5cblxuICAgIFsqXSBDYXBhYmlsaXRpZXMgKERlYnVnKVxuICAgIDxUTFNJbmZvXG4gICAgICAgICAgICBwYWNrZXRzLnByb2Nlc3NlZDogNDAzXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNsaWVudC52ZXJzaW9uczogc2V0KFtdKVxuICAgICAgICAgICAgY2xpZW50LmNpcGhlcnM6IHNldChbXSlcbiAgICAgICAgICAgIGNsaWVudC5jb21wcmVzc2lvbnM6IHNldChbXSlcbiAgICAgICAgICAgIGNsaWVudC5wcmVmZXJyZWRfY2lwaGVyczogc2V0KFtdKVxuICAgICAgICAgICAgY2xpZW50LnNlc3Npb25zX2VzdGFibGlzaGVkOiAwXG4gICAgICAgICAgICBjbGllbnQuaGVhcnRiZWF0OiBOb25lXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNlcnZlci52ZXJzaW9uczogc2V0KFs3NjgsIDc2OSwgNzcwLCA3NzFdKVxuICAgICAgICAgICAgc2VydmVyLmNpcGhlcnM6IHNldChbNjUsIDEzMiwgMywgNCwgNSwgNiwgOCwgOSwgMTAsIDQ3LCAxMzYsIDUxLCAyMCwgMjEsIDIyLCAxNTAsIDU3LCAxNTQsIDE1OSwgNjksIDUzXSlcbiAgICAgICAgICAgIHNlcnZlci5jb21wcmVzc2lvbnM6IHNldChbMF0pXG4gICAgICAgICAgICBzZXJ2ZXIuc2Vzc2lvbnNfZXN0YWJsaXNoZWQ6IDBcbiAgICAgICAgICAgIHNlcnZlci5mYWxsYmFja19zY3N2OiBGYWxzZVxuICAgICAgICAgICAgc2VydmVyLmhlYXJ0YmVhdDogMVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXJ2ZXIuY2VydGlmaWNhdGVzOiBzZXQoWzxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+LCA8VExTQ2VydGlmaWNhdGVMaXN0ICBsZW5ndGg9MHgyZDcgY2VydGlmaWNhdGVzPVs8VExTQ2VydGlmaWNhdGUgIGxlbmd0aD0weDJkNCBkYXRhPTxYNTA5Q2VydCAgdmVyc2lvbj08QVNOMV9JTlRFR0VSWzJMXT4gc249PEFTTjFfSU5URUdFUlsxNDE1NTM0MTc0NDAwNjM5ODQ1MExdPiBzaWduX2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2FfdmFsdWU9PEFTTjFfTlVMTFswTF0+IGlzc3Vlcj1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gbm90X2JlZm9yZT08QVNOMV9VVENfVElNRVsnMTMwNDI1MTA1MDAyWiddPiBub3RfYWZ0ZXI9PEFTTjFfVVRDX1RJTUVbJzIzMDQyMzEwNTAwMlonXT4gc3ViamVjdD1bPFg1MDlSRE4gIG9pZD08QVNOMV9PSURbJy4yLjUuNC4zJ10+IHZhbHVlPTxBU04xX1BSSU5UQUJMRV9TVFJJTkdbJ2xvY2FsaG9zdC5sb2NhbGRvbWFpbiddPiB8Pl0gcHVia2V5X2FsZ289PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjEnXT4gcGtfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHB1YmtleT08QVNOMV9CSVRfU1RSSU5HW1wiXFx4MDAwXFx4ODJcXHgwMVxcblxceDAyXFx4ODJcXHgwMVxceDAxXFx4MDBcXHhkY1NcXHhhMyVVXFxyXFx4ZTBcXHhiM1xceGFiNT0kJ1xceDhkXFx4MTNcXHg5NWNwXFx4MGNcXHhlMnBcXHhiNVxceDBlXFx4ZTNKXFx4MWZ5XFx4N2ZcXHg4NzZcXHg5Y0hcXHhkOFpcXHg4ZVxceDFjXFx4MDRcXHhjNENcXHg4ZTxcXHgxYVxceGQxXFx4OTBcXHhiZG1cXHhhYVxceDA4a3U8VHdcXHRcXHhiZHtcXHhiN3dabVxceDljbVdcXFxcb1xceDlkd1xceGRmXFx4YTNcXHhlN31cXHhhYyE6XFx4MTUwXFx4YjdcXHg5OGxDQVxceGVjXFx4MThcXHg5N1xceGJhI0JcXHg4YlxceGExY1xceGQ4YXdcXHhiYlxceGM2XFx4YzRcXHgwZmJzXFx4ODdlVDxFXFx4YmZcXHJcXHg5MlxceGZjXFx4OGJ9N2I3XFx4ZjEyXFx4MTkoXFx4OTV5K1xceDEyb2lXNFxceGQ3XFx4ZjVcXHgwNlxceGYyR1xceGYyXFx4MTVcXHhmY1xceGY2XFx4YTZZXFx4ODNcXHgxMVxceGM3UFxcXFwnXFx4OGJcXHhkMlxceDk2XFx4ZDBcXHhhMlxceGI1MVxceGIzXFx4MDBOXFx4YjlzXFxcXFxceDAzXFx4OTVcXHhiMFxceDEyXFx4ZTFsXFx4OWRcXHg4M1xceDkydVVcXHg5ZFxceGJkXFx4ZGN0fUA2XFxyXFx4YmJcXHhjOVxceGVhQFNcXHhmNERcXHhiZVxceDkzXFx4OTlgeFVqRi5NXFx4ZDhcXHhiY1xceGZjXFx4ZGIgMVxceGFheztcXHhmM1xceGVjKTFcXHhhOVxceGU0XFx4ZmFwbFxceDE4XFx4MDdPXFx4ODhZXFx4YzhcXHhlZFxceGI2M1xceGYyXFx4N2ZcXHhlMn5nXFx4ZTdcXHhmOVxceGM0TFxceDlkXFx4Y2JnXFx4ZGFcXHhkZlxceDFlNVxceGIzQ1xceDA3XFx4ZWF2XFx4ZjBcXHgxM21dXFx4OTRcXHhkYVlcXHhjOFxceGMzP1xceDk5XFx4YjZcXHhiNlxceGI1XFx4YzViTVxceDAyXFx4MDNcXHgwMVxceDAwXFx4MDFcIl0+IHg1MDl2M2V4dD1bPFg1MDl2M0V4dCAgdmFsPTxBU04xX1NFUVVFTkNFW1s8QVNOMV9PSURbJy4yLjUuMjkuMTknXT4sIDxBU04xX1NUUklOR1snMFxceDAwJ10+XV0+IHw+XSBzaWduX2FsZ28yPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhMl92YWx1ZT08QVNOMV9OVUxMWzBMXT4gc2lnbmF0dXJlPTxBU04xX0JJVF9TVFJJTkdbJ1xceDAwWFxceGFmXFx4YTJCXFx4YjRjXFx4ODN9U1xceDA2XFx4MDdcXHhiN1xceGI2XFx4YTRuVFxceGVlQVNcXHhlMFxceDkzXFx4ODFcXHg4MjBcXHg5Y1xceDkyXFx4MTZcXHhiM0hcXHhkMFxceDExWlxceDAyXFxcXGd8XFx4OWZcXHgwYlxceDhmXFx4OTZcXHg4MlxceDFhM1xceDhkXFx4ZTEuM1xceGNkXFx4ZTlcXHhjMktcXHg5OTBcXHg4Y1xceDk4XFx4MWJcXHhmNlxceDAzXFx4MWFcXHgwNlxceGMybDJcXHhjYit4JC1cXHhkOEo5XFx4YWVcXHhjOFxceGRkXFx4OGFcXHg3ZjhcXHgxZVxceGY5elxceDEwXFx4ZGRcXHhmOVxceDg4c1xceGY1XFx4ZDFcXHhmM2lcXHg3ZlxceDhkXFx4YmFoVXtdXFx4OWJUdVxceDgxVFxceGRhXFx4MGVgXFx4ODZcXHhkMVxceGJiXFx4ZTRcXHg5OFxceGIyXFxyXFx4YTJcXHg5YTlOXFx4ZWRtT3cxSVxceGU0XFx4ZTNHQ3dcXHhhZFxceGEyXFx4ZTdcXHgxOFxceDhkXCJcXHhiN1xceDhjfkJcXHhjZVxceGJhXFx4ZmMrXFx4OGFcXHg4MSRcXHhkYlxceGMzM1xceDAxYVxceGQ4XFx4OWFsXFx4YWNrXFx4MDdcXHhiZVxceDE4ZjJcXHgxM1xceGE4XFx4YzJcXHhmMlxceGE0XFx4Y2JcXHg4NnhcXHhkMlxceGE5XFx4ZjJcXHhlZlxceGIzXFx4MTQ8XFx4YjEwXFx4OTFXXFx4YmZBX0ZcXHg4MVxceGU4QVxceDhhY1xceGE5XFxuXFx4ODJcXG5cXG5cXHg5M1xceGZkN1xceGIzWlxceGU5XFx4YWJcXHgxOFxceGMwPVxceDk2XFx4ODRcXHgwMj9VQ1xceGI2XFx4MGVwXFx4ZmFcXHgxOVxceGE2XFx4ZmNiTVxceDlkXFx4MDBcXHhhMVxceDAzYFxceDBjXFx4YmVcXHhkYTsrYFxceDEzXFx4ZDZcXHhiYWx5XFx4ZWJcXHgwMlxceGY3TXJcXHg5YVxceDAwXFx4YzFXN35cXHg4OV42SVxceDFmajV1XFx4YTggcjtcXHg4ZCddPiB8PiB8Pl0gfD4sIDxUTFNDZXJ0aWZpY2F0ZUxpc3QgIGxlbmd0aD0weDJkNyBjZXJ0aWZpY2F0ZXM9WzxUTFNDZXJ0aWZpY2F0ZSAgbGVuZ3RoPTB4MmQ0IGRhdGE9PFg1MDlDZXJ0ICB2ZXJzaW9uPTxBU04xX0lOVEVHRVJbMkxdPiBzbj08QVNOMV9JTlRFR0VSWzE0MTU1MzQxNzQ0MDA2Mzk4NDUwTF0+IHNpZ25fYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYV92YWx1ZT08QVNOMV9OVUxMWzBMXT4gaXNzdWVyPVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBub3RfYmVmb3JlPTxBU04xX1VUQ19USU1FWycxMzA0MjUxMDUwMDJaJ10+IG5vdF9hZnRlcj08QVNOMV9VVENfVElNRVsnMjMwNDIzMTA1MDAyWiddPiBzdWJqZWN0PVs8WDUwOVJETiAgb2lkPTxBU04xX09JRFsnLjIuNS40LjMnXT4gdmFsdWU9PEFTTjFfUFJJTlRBQkxFX1NUUklOR1snbG9jYWxob3N0LmxvY2FsZG9tYWluJ10+IHw+XSBwdWJrZXlfYWxnbz08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuMSddPiBwa192YWx1ZT08QVNOMV9OVUxMWzBMXT4gcHVia2V5PTxBU04xX0JJVF9TVFJJTkdbXCJcXHgwMDBcXHg4MlxceDAxXFxuXFx4MDJcXHg4MlxceDAxXFx4MDFcXHgwMFxceGRjU1xceGEzJVVcXHJcXHhlMFxceGIzXFx4YWI1PSQnXFx4OGRcXHgxM1xceDk1Y3BcXHgwY1xceGUycFxceGI1XFx4MGVcXHhlM0pcXHgxZnlcXHg3ZlxceDg3NlxceDljSFxceGQ4WlxceDhlXFx4MWNcXHgwNFxceGM0Q1xceDhlPFxceDFhXFx4ZDFcXHg5MFxceGJkbVxceGFhXFx4MDhrdTxUd1xcdFxceGJke1xceGI3d1ptXFx4OWNtV1xcXFxvXFx4OWR3XFx4ZGZcXHhhM1xceGU3fVxceGFjITpcXHgxNTBcXHhiN1xceDk4bENBXFx4ZWNcXHgxOFxceDk3XFx4YmEjQlxceDhiXFx4YTFjXFx4ZDhhd1xceGJiXFx4YzZcXHhjNFxceDBmYnNcXHg4N2VUPEVcXHhiZlxcclxceDkyXFx4ZmNcXHg4Yn03YjdcXHhmMTJcXHgxOShcXHg5NXkrXFx4MTJvaVc0XFx4ZDdcXHhmNVxceDA2XFx4ZjJHXFx4ZjJcXHgxNVxceGZjXFx4ZjZcXHhhNllcXHg4M1xceDExXFx4YzdQXFxcXCdcXHg4YlxceGQyXFx4OTZcXHhkMFxceGEyXFx4YjUxXFx4YjNcXHgwME5cXHhiOXNcXFxcXFx4MDNcXHg5NVxceGIwXFx4MTJcXHhlMWxcXHg5ZFxceDgzXFx4OTJ1VVxceDlkXFx4YmRcXHhkY3R9QDZcXHJcXHhiYlxceGM5XFx4ZWFAU1xceGY0RFxceGJlXFx4OTNcXHg5OWB4VWpGLk1cXHhkOFxceGJjXFx4ZmNcXHhkYiAxXFx4YWF7O1xceGYzXFx4ZWMpMVxceGE5XFx4ZTRcXHhmYXBsXFx4MThcXHgwN09cXHg4OFlcXHhjOFxceGVkXFx4YjYzXFx4ZjJcXHg3ZlxceGUyfmdcXHhlN1xceGY5XFx4YzRMXFx4OWRcXHhjYmdcXHhkYVxceGRmXFx4MWU1XFx4YjNDXFx4MDdcXHhlYXZcXHhmMFxceDEzbV1cXHg5NFxceGRhWVxceGM4XFx4YzM/XFx4OTlcXHhiNlxceGI2XFx4YjVcXHhjNWJNXFx4MDJcXHgwM1xceDAxXFx4MDBcXHgwMVwiXT4geDUwOXYzZXh0PVs8WDUwOXYzRXh0ICB2YWw9PEFTTjFfU0VRVUVOQ0VbWzxBU04xX09JRFsnLjIuNS4yOS4xOSddPiwgPEFTTjFfU1RSSU5HWycwXFx4MDAnXT5dXT4gfD5dIHNpZ25fYWxnbzI9PEFTTjFfT0lEWycuMS4yLjg0MC4xMTM1NDkuMS4xLjUnXT4gc2EyX3ZhbHVlPTxBU04xX05VTExbMExdPiBzaWduYXR1cmU9PEFTTjFfQklUX1NUUklOR1snXFx4MDBYXFx4YWZcXHhhMkJcXHhiNGNcXHg4M31TXFx4MDZcXHgwN1xceGI3XFx4YjZcXHhhNG5UXFx4ZWVBU1xceGUwXFx4OTNcXHg4MVxceDgyMFxceDljXFx4OTJcXHgxNlxceGIzSFxceGQwXFx4MTFaXFx4MDJcXFxcZ3xcXHg5ZlxceDBiXFx4OGZcXHg5NlxceDgyXFx4MWEzXFx4OGRcXHhlMS4zXFx4Y2RcXHhlOVxceGMyS1xceDk5MFxceDhjXFx4OThcXHgxYlxceGY2XFx4MDNcXHgxYVxceDA2XFx4YzJsMlxceGNiK3gkLVxceGQ4SjlcXHhhZVxceGM4XFx4ZGRcXHg4YVxceDdmOFxceDFlXFx4Zjl6XFx4MTBcXHhkZFxceGY5XFx4ODhzXFx4ZjVcXHhkMVxceGYzaVxceDdmXFx4OGRcXHhiYWhVe11cXHg5YlR1XFx4ODFUXFx4ZGFcXHgwZWBcXHg4NlxceGQxXFx4YmJcXHhlNFxceDk4XFx4YjJcXHJcXHhhMlxceDlhOU5cXHhlZG1PdzFJXFx4ZTRcXHhlM0dDd1xceGFkXFx4YTJcXHhlN1xceDE4XFx4OGRcIlxceGI3XFx4OGN+QlxceGNlXFx4YmFcXHhmYytcXHg4YVxceDgxJFxceGRiXFx4YzMzXFx4MDFhXFx4ZDhcXHg5YWxcXHhhY2tcXHgwN1xceGJlXFx4MThmMlxceDEzXFx4YThcXHhjMlxceGYyXFx4YTRcXHhjYlxceDg2eFxceGQyXFx4YTlcXHhmMlxceGVmXFx4YjNcXHgxNDxcXHhiMTBcXHg5MVdcXHhiZkFfRlxceDgxXFx4ZThBXFx4OGFjXFx4YTlcXG5cXHg4MlxcblxcblxceDkzXFx4ZmQ3XFx4YjNaXFx4ZTlcXHhhYlxceDE4XFx4YzA9XFx4OTZcXHg4NFxceDAyP1VDXFx4YjZcXHgwZXBcXHhmYVxceDE5XFx4YTZcXHhmY2JNXFx4OWRcXHgwMFxceGExXFx4MDNgXFx4MGNcXHhiZVxceGRhOytgXFx4MTNcXHhkNlxceGJhbHlcXHhlYlxceDAyXFx4ZjdNclxceDlhXFx4MDBcXHhjMVc3flxceDg5XjZJXFx4MWZqNXVcXHhhOCByO1xceDhkJ10+IHw+IHw+XSB8PiwgPFRMU0NlcnRpZmljYXRlTGlzdCAgbGVuZ3RoPTB4MmQ3IGNlcnRpZmljYXRlcz1bPFRMU0NlcnRpZmljYXRlICBsZW5ndGg9MHgyZDQgZGF0YT08WDUwOUNlcnQgIHZlcnNpb249PEFTTjFfSU5URUdFUlsyTF0+IHNuPTxBU04xX0lOVEVHRVJbMTQxNTUzNDE3NDQwMDYzOTg0NTBMXT4gc2lnbl9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS41J10+IHNhX3ZhbHVlPTxBU04xX05VTExbMExdPiBpc3N1ZXI9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIG5vdF9iZWZvcmU9PEFTTjFfVVRDX1RJTUVbJzEzMDQyNTEwNTAwMlonXT4gbm90X2FmdGVyPTxBU04xX1VUQ19USU1FWycyMzA0MjMxMDUwMDJaJ10+IHN1YmplY3Q9WzxYNTA5UkROICBvaWQ9PEFTTjFfT0lEWycuMi41LjQuMyddPiB2YWx1ZT08QVNOMV9QUklOVEFCTEVfU1RSSU5HWydsb2NhbGhvc3QubG9jYWxkb21haW4nXT4gfD5dIHB1YmtleV9hbGdvPTxBU04xX09JRFsnLjEuMi44NDAuMTEzNTQ5LjEuMS4xJ10+IHBrX3ZhbHVlPTxBU04xX05VTExbMExdPiBwdWJrZXk9PEFTTjFfQklUX1NUUklOR1tcIlxceDAwMFxceDgyXFx4MDFcXG5cXHgwMlxceDgyXFx4MDFcXHgwMVxceDAwXFx4ZGNTXFx4YTMlVVxcclxceGUwXFx4YjNcXHhhYjU9JCdcXHg4ZFxceDEzXFx4OTVjcFxceDBjXFx4ZTJwXFx4YjVcXHgwZVxceGUzSlxceDFmeVxceDdmXFx4ODc2XFx4OWNIXFx4ZDhaXFx4OGVcXHgxY1xceDA0XFx4YzRDXFx4OGU8XFx4MWFcXHhkMVxceDkwXFx4YmRtXFx4YWFcXHgwOGt1PFR3XFx0XFx4YmR7XFx4Yjd3Wm1cXHg5Y21XXFxcXG9cXHg5ZHdcXHhkZlxceGEzXFx4ZTd9XFx4YWMhOlxceDE1MFxceGI3XFx4OThsQ0FcXHhlY1xceDE4XFx4OTdcXHhiYSNCXFx4OGJcXHhhMWNcXHhkOGF3XFx4YmJcXHhjNlxceGM0XFx4MGZic1xceDg3ZVQ8RVxceGJmXFxyXFx4OTJcXHhmY1xceDhifTdiN1xceGYxMlxceDE5KFxceDk1eStcXHgxMm9pVzRcXHhkN1xceGY1XFx4MDZcXHhmMkdcXHhmMlxceDE1XFx4ZmNcXHhmNlxceGE2WVxceDgzXFx4MTFcXHhjN1BcXFxcJ1xceDhiXFx4ZDJcXHg5NlxceGQwXFx4YTJcXHhiNTFcXHhiM1xceDAwTlxceGI5c1xcXFxcXHgwM1xceDk1XFx4YjBcXHgxMlxceGUxbFxceDlkXFx4ODNcXHg5MnVVXFx4OWRcXHhiZFxceGRjdH1ANlxcclxceGJiXFx4YzlcXHhlYUBTXFx4ZjREXFx4YmVcXHg5M1xceDk5YHhVakYuTVxceGQ4XFx4YmNcXHhmY1xceGRiIDFcXHhhYXs7XFx4ZjNcXHhlYykxXFx4YTlcXHhlNFxceGZhcGxcXHgxOFxceDA3T1xceDg4WVxceGM4XFx4ZWRcXHhiNjNcXHhmMlxceDdmXFx4ZTJ+Z1xceGU3XFx4ZjlcXHhjNExcXHg5ZFxceGNiZ1xceGRhXFx4ZGZcXHgxZTVcXHhiM0NcXHgwN1xceGVhdlxceGYwXFx4MTNtXVxceDk0XFx4ZGFZXFx4YzhcXHhjMz9cXHg5OVxceGI2XFx4YjZcXHhiNVxceGM1Yk1cXHgwMlxceDAzXFx4MDFcXHgwMFxceDAxXCJdPiB4NTA5djNleHQ9WzxYNTA5djNFeHQgIHZhbD08QVNOMV9TRVFVRU5DRVtbPEFTTjFfT0lEWycuMi41LjI5LjE5J10+LCA8QVNOMV9TVFJJTkdbJzBcXHgwMCddPl1dPiB8Pl0gc2lnbl9hbGdvMj08QVNOMV9PSURbJy4xLjIuODQwLjExMzU0OS4xLjEuNSddPiBzYTJfdmFsdWU9PEFTTjFfTlVMTFswTF0+IHNpZ25hdHVyZT08QVNOMV9CSVRfU1RSSU5HWydcXHgwMFhcXHhhZlxceGEyQlxceGI0Y1xceDgzfVNcXHgwNlxceDA3XFx4YjdcXHhiNlxceGE0blRcXHhlZUFTXFx4ZTBcXHg5M1xceDgxXFx4ODIwXFx4OWNcXHg5MlxceDE2XFx4YjNIXFx4ZDBcXHgxMVpcXHgwMlxcXFxnfFxceDlmXFx4MGJcXHg4ZlxceDk2XFx4ODJcXHgxYTNcXHg4ZFxceGUxLjNcXHhjZFxceGU5XFx4YzJLXFx4OTkwXFx4OGNcXHg5OFxceDFiXFx4ZjZcXHgwM1xceDFhXFx4MDZcXHhjMmwyXFx4Y2IreCQtXFx4ZDhKOVxceGFlXFx4YzhcXHhkZFxceDhhXFx4N2Y4XFx4MWVcXHhmOXpcXHgxMFxceGRkXFx4ZjlcXHg4OHNcXHhmNVxceGQxXFx4ZjNpXFx4N2ZcXHg4ZFxceGJhaFV7XVxceDliVHVcXHg4MVRcXHhkYVxceDBlYFxceDg2XFx4ZDFcXHhiYlxceGU0XFx4OThcXHhiMlxcclxceGEyXFx4OWE5TlxceGVkbU93MUlcXHhlNFxceGUzR0N3XFx4YWRcXHhhMlxceGU3XFx4MThcXHg4ZFwiXFx4YjdcXHg4Y35CXFx4Y2VcXHhiYVxceGZjK1xceDhhXFx4ODEkXFx4ZGJcXHhjMzNcXHgwMWFcXHhkOFxceDlhbFxceGFja1xceDA3XFx4YmVcXHgxOGYyXFx4MTNcXHhhOFxceGMyXFx4ZjJcXHhhNFxceGNiXFx4ODZ4XFx4ZDJcXHhhOVxceGYyXFx4ZWZcXHhiM1xceDE0PFxceGIxMFxceDkxV1xceGJmQV9GXFx4ODFcXHhlOEFcXHg4YWNcXHhhOVxcblxceDgyXFxuXFxuXFx4OTNcXHhmZDdcXHhiM1pcXHhlOVxceGFiXFx4MThcXHhjMD1cXHg5NlxceDg0XFx4MDI/VUNcXHhiNlxceDBlcFxceGZhXFx4MTlcXHhhNlxceGZjYk1cXHg5ZFxceDAwXFx4YTFcXHgwM2BcXHgwY1xceGJlXFx4ZGE7K2BcXHgxM1xceGQ2XFx4YmFseVxceGViXFx4MDJcXHhmN01yXFx4OWFcXHgwMFxceGMxVzd+XFx4ODleNklcXHgxZmo1dVxceGE4IHI7XFx4OGQnXT4gfD4gfD5dIHw+XSlcbiAgICA+XG4gICAgICAgICAgICBcbiAgICBbKl0gc3VwcG9ydGVkIGNpcGhlcnM6IDM0LzMyNlxuICAgICAqIFNTTHYyX1JDNF8xMjhfRVhQT1JUNDBfV0lUSF9NRDUgKDB4MjAwODApXG4gICAgICogRUNESF9hbm9uX1dJVEhfUkM0XzEyOF9TSEEgKDB4YzAxNilcbiAgICAgKiBSU0FfRVhQT1JUX1dJVEhfUkM0XzQwX01ENSAoMHgwMDAzKVxuICAgICAqIFJTQV9XSVRIX0NBTUVMTElBXzI1Nl9DQkNfU0hBICgweDAwODQpXG4gICAgICogUlNBX1dJVEhfUkM0XzEyOF9TSEEgKDB4MDAwNSlcbiAgICAgKiBSU0FfRVhQT1JUX1dJVEhfUkMyX0NCQ180MF9NRDUgKDB4MDAwNilcbiAgICAgKiBSU0FfV0lUSF9JREVBX0NCQ19TSEEgKDB4MDAwNylcbiAgICAgKiBSU0FfRVhQT1JUX1dJVEhfREVTNDBfQ0JDX1NIQSAoMHgwMDA4KVxuICAgICAqIFJTQV9XSVRIX0RFU19DQkNfU0hBICgweDAwMDkpXG4gICAgICogUlNBX1dJVEhfM0RFU19FREVfQ0JDX1NIQSAoMHgwMDBhKVxuICAgICAqIEVDREhfYW5vbl9XSVRIXzNERVNfRURFX0NCQ19TSEEgKDB4YzAxNylcbiAgICAgKiBFQ0RIRV9SU0FfV0lUSF9SQzRfMTI4X1NIQSAoMHhjMDExKVxuICAgICAqIEVDREhFX1JTQV9XSVRIXzNERVNfRURFX0NCQ19TSEEgKDB4YzAxMilcbiAgICAgKiBFQ0RIRV9SU0FfV0lUSF9BRVNfMTI4X0NCQ19TSEEgKDB4YzAxMylcbiAgICAgKiBESEVfUlNBX0VYUE9SVF9XSVRIX0RFUzQwX0NCQ19TSEEgKDB4MDAxNClcbiAgICAgKiBESEVfUlNBX1dJVEhfREVTX0NCQ19TSEEgKDB4MDAxNSlcbiAgICAgKiBESEVfUlNBX1dJVEhfM0RFU19FREVfQ0JDX1NIQSAoMHgwMDE2KVxuICAgICAqIEVDREhfYW5vbl9XSVRIX0FFU18yNTZfQ0JDX1NIQSAoMHhjMDE5KVxuICAgICAqIEVDREhfYW5vbl9XSVRIX0FFU18xMjhfQ0JDX1NIQSAoMHhjMDE4KVxuICAgICAqIFJTQV9XSVRIX1JDNF8xMjhfTUQ1ICgweDAwMDQpXG4gICAgICogREhFX1JTQV9XSVRIX1NFRURfQ0JDX1NIQSAoMHgwMDlhKVxuICAgICAqIFJTQV9XSVRIX1NFRURfQ0JDX1NIQSAoMHgwMDk2KVxuICAgICAqIERIRV9SU0FfV0lUSF9BRVNfMjU2X0dDTV9TSEEzODQgKDB4MDA5ZilcbiAgICAgKiBTU0x2Ml9SQzJfQ0JDXzEyOF9DQkNfV0lUSF9NRDUgKDB4NDAwODApXG4gICAgICogUlNBX1dJVEhfQUVTXzEyOF9DQkNfU0hBICgweDAwMmYpXG4gICAgICogREhFX1JTQV9XSVRIX0NBTUVMTElBXzI1Nl9DQkNfU0hBICgweDAwODgpXG4gICAgICogREhFX1JTQV9XSVRIX0FFU18xMjhfQ0JDX1NIQSAoMHgwMDMzKVxuICAgICAqIFJTQV9XSVRIX0FFU18yNTZfQ0JDX1NIQSAoMHgwMDM1KVxuICAgICAqIERIRV9SU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEgKDB4MDAzOSlcbiAgICAgKiBTU0x2Ml9ERVNfNjRfQ0JDX1dJVEhfTUQ1ICgweDYwMDQwKVxuICAgICAqIFJTQV9XSVRIX0NBTUVMTElBXzEyOF9DQkNfU0hBICgweDAwNDEpXG4gICAgICogREhFX1JTQV9XSVRIX0NBTUVMTElBXzEyOF9DQkNfU0hBICgweDAwNDUpXG4gICAgICogU1NMdjJfUkM0XzEyOF9XSVRIX01ENSAoMHgxMDA4MClcbiAgICAgKiBFQ0RIRV9SU0FfV0lUSF9BRVNfMjU2X0NCQ19TSEEgKDB4YzAxNClcblxuICAgIFsqXSBzdXBwb3J0ZWQgcHJvdG9jb2wgdmVyc2lvbnM6IDUvOFxuICAgICAqIFNTTF8zXzAgKDB4MDMwMClcbiAgICAgKiBUTFNfMV8wICgweDAzMDEpXG4gICAgICogU1NMXzJfMCAoMHgwMDAyKVxuICAgICAqIFRMU18xXzEgKDB4MDMwMilcbiAgICAgKiBUTFNfMV8yICgweDAzMDMpXG5cbiAgICBbKl0gc3VwcG9ydGVkIGNvbXByZXNzaW9ucyBtZXRob2RzOiAxLzNcbiAgICAgKiBOVUxMICgweDAwMDApXG5cbiAgICBbKl0gRXZlbnRzOiAxNlxuICAgICogRVZFTlQgLSBIRUFSVEJMRUVEIC0gdnVsbmVyYWJsZVxuICAgICogRVZFTlQgLSBEUk9XTiAtIFNTTHYyIHdpdGggRVhQT1JUIGNpcGhlcnMgZW5hYmxlZFxuICAgICogRVZFTlQgLSBDSVBIRVJTIC0gRXhwb3J0IGNpcGhlcnMgZW5hYmxlZFxuICAgICogRVZFTlQgLSBDSVBIRVJTIC0gUkM0IGNpcGhlcnMgZW5hYmxlZFxuICAgICogRVZFTlQgLSBDSVBIRVJTIC0gTUQ1IGNpcGhlcnMgZW5hYmxlZFxuICAgICogRVZFTlQgLSBGUkVBSyAtIHNlcnZlciBzdXBwb3J0cyBSU0FfRVhQT1JUIGNpcGhlciBzdWl0ZXNcbiAgICAqIEVWRU5UIC0gTE9HSkFNIC0gc2VydmVyIHN1cHBvcnRzIHdlYWsgREgtR3JvdXAgKDUxMikgKERIRV8qX0VYUE9SVCkgY2lwaGVyIHN1aXRlc1xuICAgICogRVZFTlQgLSBQUk9UT0NPTCBWRVJTSU9OIC0gU1NMdjIgc3VwcG9ydGVkXG4gICAgKiBFVkVOVCAtIFBST1RPQ09MIFZFUlNJT04gLSBTU0x2MyBzdXBwb3J0ZWQgXG4gICAgKiBFVkVOVCAtIEhFQVJUQkVBVCAtIGVuYWJsZWQgKG5vbiBjb25jbHVzaXZlIGhlYXJ0YmxlZWQpIFxuICAgICogRVZFTlQgLSBJTlNVRkZJQ0lFTlQgU0VSVkVSIENFUlQgUFVCS0VZIFNJWkUgLSAyMDQ4ID49IDY0MCBiaXRzXG4gICAgKiBFVkVOVCAtIFNVU1BJQ0lPVVMgU0VSVkVSIENFUlQgUFVCS0VZIFNJWkUgLSA2NDAgbm90IGEgbXVsdGlwbGUgb2YgMjA0OCBiaXRzXG4gICAgKiBFVkVOVCAtIFNFUlZFUiBDRVJUIFBVQktFWSBGQUNUT1JFRCAtIHRyaXZpYWwgcHJpdmF0ZV9rZXkgcmVjb3ZlcnkgcG9zc2libGUgZHVlIHRvIGtub3duIGZhY3RvcnMgbiA9IHAgeCBxLiBTZWUgaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUlNBX251bWJlcnMgfCBncmVwIDMxMDc0MTgyNDA0OTAwNDM3MjEzNTA3NTAwMzU4ODg1Njc5MzAwMzczNDYwMjI4NDI3Mjc1NDU3MjAxNjE5NDg4MjMyMDY0NDA1MTgwODE1MDQ1NTYzNDY4Mjk2NzE3MjMyODY3ODI0Mzc5MTYyNzI4MzgwMzM0MTU0NzEwNzMxMDg1MDE5MTk1NDg1MjkwMDczMzc3MjQ4MjI3ODM1MjU3NDIzODY0NTQwMTQ2OTE3MzY2MDI0Nzc2NTIzNDY2MDlcbiAgICAqIEVWRU5UIC0gRE9XTkdSQURFIC8gUE9PRExFIC0gRkFMTEJBQ0tfU0NTViAtIG5vdCBob25vcmVkXG4gICAgKiBFVkVOVCAtIFRMUyBFWFRFTlNJT04gU0VDVVJFIFJFTkVHT1RJQVRJT04gLSBub3Qgc3VwcG9ydGVkXG4gICAgKiBFVkVOVCAtIEhFQVJUQkVBVCAtIGVuYWJsZWQgKG5vbiBjb25jbHVzaXZlIGhlYXJ0YmxlZWQpXG5cbiAgICBTY2FuIHRvb2s6IDMwLjYwNjIzODg0MjAxc1xuXG5QYXNzaXZlIFNjYW5uZXI6XG5cbjo6XG5cbiAgICAjIHB5dGhvbiBleGFtcGxlcy9zZWN1cml0eV9zY2FubmVyLnB5IHNuaWZmIDE5Mi4xNjguMTM5LjEzMSA0NDMgXG4gICAgQW4gZXhhbXBsZSBpbXBsZW1lbnRhdGlvbiBvZiBhIHBhc3NpdmUgVExTIHNlY3VyaXR5IHNjYW5uZXIgd2l0aCBjdXN0b20gc3RhcnR0bHMgc3VwcG9ydDpcblxuICAgICAgICBUTFNTY2FubmVyKCkgZ2VuZXJhdGVzIFRMUyBwcm9iZSB0cmFmZmljICAob3B0aW9uYWwpXG4gICAgICAgIFRMU0luZm8oKSBwYXNzaXZlbHkgZXZhbHVhdGVzIHRoZSB0cmFmZmljIGFuZCBnZW5lcmF0ZXMgZXZlbnRzL3dhcm5pbmdcblxuICAgICAgICBcblxuICAgIFsqXSBbcGFzc2l2ZV0gU2Nhbm5pbmcgaW4gJ3NuaWZmJyBtb2RlLi4uXG4gICAgQ29ubmVjdGlvbjogMTkyLjE2OC4xMzkuMToxMzY0IDw9PT4gMTkyLjE2OC4xMzkuMTMxOjQ0M1xuICAgICogRVZFTlQgLSBDUklNRSAtIGNsaWVudCBzdXBwb3J0cyBjb21wcmVzc2lvblxuICAgICogRVZFTlQgLSBTTE9USCAtIGNsaWVudCBhbm5vdW5jZXMgY2FwYWJpbGl0eSBvZiBzaWduYXR1cmUvaGFzaCBhbGdvcml0aG06IFJTQS9zaGExXG4gICAgQ29ubmVjdGlvbjogMTkyLjE2OC4xMzkuMTMxOjQ0MyA8PT0+IDE5Mi4xNjguMTM5LjE6MTM2NFxuICAgICogRVZFTlQgLSBDUklNRSAtIGNsaWVudCBzdXBwb3J0cyBjb21wcmVzc2lvblxuICAgICogRVZFTlQgLSBTTE9USCAtIGNsaWVudCBhbm5vdW5jZXMgY2FwYWJpbGl0eSBvZiBzaWduYXR1cmUvaGFzaCBhbGdvcml0aG06IFJTQS9zaGExXG4gICAgQ29ubmVjdGlvbjogMTkyLjE2OC4xMzkuMTMxOjQ0MyA8PT0+IDE5Mi4xNjguMTM5LjE6MTM2NFxuICAgICogRVZFTlQgLSBDUklNRSAtIGNsaWVudCBzdXBwb3J0cyBjb21wcmVzc2lvblxuICAgICogRVZFTlQgLSBTTE9USCAtIGNsaWVudCBhbm5vdW5jZXMgY2FwYWJpbGl0eSBvZiBzaWduYXR1cmUvaGFzaCBhbGdvcml0aG06IFJTQS9zaGExXG4gICAgKiBFVkVOVCAtIENSSU1FIC0gc2VydmVyIHN1cHBvcnRzIGNvbXByZXNzaW9uXG4gICAgKiBFVkVOVCAtIElOU1VGRklDSUVOVCBTRVJWRVIgQ0VSVCBQVUJLRVkgU0laRSAtIDIwNDggPj0gNjQwIGJpdHNcbiAgICAqIEVWRU5UIC0gU1VTUElDSU9VUyBTRVJWRVIgQ0VSVCBQVUJLRVkgU0laRSAtIDY0MCBub3QgYSBtdWx0aXBsZSBvZiAyMDQ4IGJpdHNcbiAgICAqIEVWRU5UIC0gU0VSVkVSIENFUlQgUFVCS0VZIEZBQ1RPUkVEIC0gdHJpdmlhbCBwcml2YXRlX2tleSByZWNvdmVyeSBwb3NzaWJsZSBkdWUgdG8ga25vd24gZmFjdG9ycyBuID0gcCB4IHEuIFNlZSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SU0FfbnVtYmVycyB8IGdyZXAgMzEwNzQxODI0MDQ5MDA0MzcyMTM1MDc1MDAzNTg4ODU2NzkzMDAzNzM0NjAyMjg0MjcyNzU0NTcyMDE2MTk0ODgyMzIwNjQ0MDUxODA4MTUwNDU1NjM0NjgyOTY3MTcyMzI4Njc4MjQzNzkxNjI3MjgzODAzMzQxNTQ3MTA3MzEwODUwMTkxOTU0ODUyOTAwNzMzNzcyNDgyMjc4MzUyNTc0MjM4NjQ1NDAxNDY5MTczNjYwMjQ3NzY1MjM0NjYwOVxuICAgICogRVZFTlQgLSBIRUFSVEJFQVQgLSBlbmFibGVkIChub24gY29uY2x1c2l2ZSBoZWFydGJsZWVkKSBcbiAgICBDb25uZWN0aW9uOiAxOTIuMTY4LjEzOS4xOjEzNjQgPD09PiAxOTIuMTY4LjEzOS4xMzE6NDQzXG5cbkF1dGhvcnMgLyBDb250cmlidXRvcnNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLSAgdGludGlud2ViICggaHR0cDovL29zdHN0cm9tLmNvbSBcXHwgaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYilcbi0gIGFsZXhtZ3IgKCBodHRwczovL2dpdGh1Yi5jb20vYWxleG1nciApXG5cbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9zY2FweS1zc2xfdGxzL3RhcmJhbGwvdjIuMC4wIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9zY2FweS1zc2xfdGxzLyIs
ICAgICJrZXl3b3JkcyI6ICJzY2FweSIs
ICAgICJsaWNlbnNlIjogIkdQTHYyIiw=
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInNjYXB5LXNzbF90bHMiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NhcHktc3NsX3Rscy8iLA==
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NhcHktc3NsX3Rscy8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogImh0dHBzOi8vZ2l0aHViLmNvbS90aW50aW53ZWIvc2NhcHktc3NsX3Rscy90YXJiYWxsL3YyLjAuMCIs
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS90aW50aW53ZWIvc2NhcHktc3NsX3Rscy8i
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc2NhcHktc3NsX3Rscy8yLjAuMC8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIkFuIFNTTC9UTFMgbGF5ZXIgZm9yIHNjYXB5IHRoZSBpbnRlcmFjdGl2ZSBwYWNrZXQgbWFuaXB1bGF0aW9uIHRvb2wiLA==
ICAgICJ2ZXJzaW9uIjogIjIuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAzNTc2MjAzLA==
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjAuMS5wcmUiOiBbXSw=
ICAgICIxLjAiOiBbXSw=
ICAgICIxLjByYzAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyYjVkYzUxODk5ZjdmNzdkYjBjYzI0NGY5ZDlmZmMzOTk2MjhmZTJlOWU2NWZkZTc3MjY0MjY5MjM3Y2MyOWU5Iiw=
ICAgICAgICAgICJtZDUiOiAiYjExZjliYTg4MGI4ZWNhYjI2MDk3YjBlZDZjMGM2ZWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWIwMjEwMThjYzRkMzdiOTE3MzM5YzUyZGM1YjM0ZjFhZWY4OTc5MDZhOTRlNTNjYWQzNWQ2NGMxOTk0Y2ZmMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjByYzAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiMTFmOWJhODgwYjhlY2FiMjYwOTdiMGVkNmMwYzZlZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDU2NDE5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNS0wNS0yNFQyMDowMjowNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNS0wNS0yNFQyMDowMjowNC4xNjE2MDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yYi81ZC9jNTE4OTlmN2Y3N2RiMGNjMjQ0ZjlkOWZmYzM5OTYyOGZlMmU5ZTY1ZmRlNzcyNjQyNjkyMzdjYzI5ZTkvc2NhcHktc3NsX3Rscy0xLjByYzAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3NTRkNWE5MTM5ODdlNjBjNGViOWI2N2YzZjNmNzdiNjliZWE4OWEzMWYwOTRjNmU0MmJmYWY3ZGVkMWU4ZTE0Iiw=
ICAgICAgICAgICJtZDUiOiAiZTViNDE5MmVjZmZlNjQ5NjEwNjU0YWFhNWI4ZjE4NGQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDFiOTY3NTRhYjJkNGEyYmU3OTI4NmVlNzAwZDg5MmRhMzk3YzY1NWJmM2ZiYmNlOGU4MjEzYzBlYjIyZTE3ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjEuemlwIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlNWI0MTkyZWNmZmU2NDk2MTA2NTRhYWE1YjhmMTg0ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDYxMzM5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNS0wNi0wNFQxMTozOTo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNS0wNi0wNFQxMTozOTo1NS4xNzYzMThaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83NS80ZC81YTkxMzk4N2U2MGM0ZWI5YjY3ZjNmM2Y3N2I2OWJlYTg5YTMxZjA5NGM2ZTQyYmZhZjdkZWQxZThlMTQvc2NhcHktc3NsX3Rscy0xLjEuemlwIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4NzRiNDBiMzhlOTlmZWNhZjhkMjU1ZTRhYjI2MWE1ODFmNGI0NzlhYjhjOTRlODU2NjdmMjUzM2RlZjUzNzkwIiw=
ICAgICAgICAgICJtZDUiOiAiZTg0Y2JkM2ZjNzUwY2U3OTk0NTY4NDBhOWZmYzYwMmUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzUyYThkNmYyYjgyNTdjYmQxZGExNGY3M2E3MDI1NjJmM2UzYTdkNjYwNWMwNjZkODQ2MjQ3MDg0YTk0Njk5OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlODRjYmQzZmM3NTBjZTc5OTQ1Njg0MGE5ZmZjNjAyZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDk4MDIxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNS0wNy0xNlQwMTowMzowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNS0wNy0xNlQwMTowMzowNS4yMjgzNjhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Ny80Yi80MGIzOGU5OWZlY2FmOGQyNTVlNGFiMjYxYTU4MWY0YjQ3OWFiOGM5NGU4NTY2N2YyNTMzZGVmNTM3OTAvc2NhcHktc3NsX3Rscy0xLjIudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2Y2I5MjI2MDQxMWIwODk2NWJjODhiMDY1MzExMzMzNDM0MThiYzFmY2EyNmYyZDQ1Mzg1OTIzM2U0MzJlMTNkIiw=
ICAgICAgICAgICJtZDUiOiAiYTM3MWNhZTc3Y2U5M2E3NjQxNDViZWMzNmExMDAxNzQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjU4MjI2OGEyZjI1NGVkYTBjMWEzNWI1MDdiODgyZTJmOGZiZWU4NDM3MjNmMzllZjIxZjVlZjZkMTNjODJmMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhMzcxY2FlNzdjZTkzYTc2NDE0NWJlYzM2YTEwMDE3NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwODk5Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNS0wOC0xNFQxOToyODozMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNS0wOC0xNFQxOToyODozMC4xMjQ5NTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Yy9iOS8yMjYwNDExYjA4OTY1YmM4OGIwNjUzMTEzMzM0MzQxOGJjMWZjYTI2ZjJkNDUzODU5MjMzZTQzMmUxM2Qvc2NhcHktc3NsX3Rscy0xLjIuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwZWUxNDMwYjlkMjhjOTM0NGMwMWY5YThjN2ViMTc1NDQ2NzdmNzMwM2IwNzg0MzZlOTdlNDk5YTZhZTkxOTk0Iiw=
ICAgICAgICAgICJtZDUiOiAiNzEyNTcwOWRiNWMwNzBkYWUxYzgzMzY1NDgyZTNlNzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjJkNzFhZmY4OWRhN2RhZjc0ZjA4NWQxYTYzYmRmNDQ4NTRiODNmMTkwMTdiYmI4ZTZjMjFlODAxZTdmYzcyYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3MTI1NzA5ZGI1YzA3MGRhZTFjODMzNjU0ODJlM2U3MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwNzA5MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNS0xMi0yMVQwMDozMzoyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNS0xMi0yMVQwMDozMzoyMS43ODc5NTdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wZS9lMS80MzBiOWQyOGM5MzQ0YzAxZjlhOGM3ZWIxNzU0NDY3N2Y3MzAzYjA3ODQzNmU5N2U0OTlhNmFlOTE5OTQvc2NhcHktc3NsX3Rscy0xLjIuMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNzU5YWM5Y2Y1YTQ1ZDMzMGM2ZmM0ZDgwNDJhNGE5OGQ2ZWE1MDkwNGY3NjcwYzFkNmNhNzZlZTI1NGM4OWEwIiw=
ICAgICAgICAgICJtZDUiOiAiM2YyNjI4NWNkOWM2NGNlNTBmOGU2NTljMDllYjVjNTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmZlMDJlNDBiY2Y3Zjc0ZmZjYzU3MWExZjI2MGQ1ZjJlMjE5NmM4MWUxZGVhMzQyNjZlNjU4YzFiMDA4NmRmYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMy50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzZjI2Mjg1Y2Q5YzY0Y2U1MGY4ZTY1OWMwOWViNWM1NyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNzIyMyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0xMC0wOFQxMzowMTowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0xMC0wOFQxMzowMTowNS4wMzYyNDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNy81OS9hYzljZjVhNDVkMzMwYzZmYzRkODA0MmE0YTk4ZDZlYTUwOTA0Zjc2NzBjMWQ2Y2E3NmVlMjU0Yzg5YTAvc2NhcHktc3NsX3Rscy0xLjIuMy50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMy4xIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzZmEzMTM0ZDM1MTcyNWYzZTFkMTE2NWQ0OGE5Yzc0NzBhZDAyNGI1OTdmMWVmYjgxODZiMTdmNWI0Y2ExYmJiIiw=
ICAgICAgICAgICJtZDUiOiAiNGMxNjA3OGRiODZiZDUxYzZlYWRjNjU4MzMzNTg1ZjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzBlOGJlYmQyYzFlMGY4NjkxMzIyYmNlYWFjMmU0MWEzMmNlZjRiNTEwN2Q4ZDA0ZTdmZWI1ZTg3NWZhN2Q1NiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMy4xLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0YzE2MDc4ZGI4NmJkNTFjNmVhZGM2NTgzMzM1ODVmNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNzMyMyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0xMS0xMlQxMTozMjoxMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0xMS0xMlQxMTozMjoxMC40OTIyMjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zZi9hMy8xMzRkMzUxNzI1ZjNlMWQxMTY1ZDQ4YTljNzQ3MGFkMDI0YjU5N2YxZWZiODE4NmIxN2Y1YjRjYTFiYmIvc2NhcHktc3NsX3Rscy0xLjIuMy4xLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMy4yIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNDhiZjk2ODg5MThjYThhYzhmZjkwNDBhYmFhZmRkNGJhNmRjNzlkMTM2YWVkMmQ0MDE1NWM4YTQ4ZmVhZTVmIiw=
ICAgICAgICAgICJtZDUiOiAiY2NlNmI1NDlhNzQ4MGU1YjYyMWNlMjFjMTFhZWNiMzYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjI4Nzc3YjQxNGVmMTA0ODAxZjRhNTdiMGNlNzI2NjQ2MTIzYjQ2MzE3MmZjNDRkNmMwODk1OTI3YWY0ZjUyZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMy4yLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjY2U2YjU0OWE3NDgwZTViNjIxY2UyMWMxMWFlY2IzNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNzM0MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNy0wMi0yOFQxOTo0NDozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNy0wMi0yOFQxOTo0NDozNC41NjMzNTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNC84Yi9mOTY4ODkxOGNhOGFjOGZmOTA0MGFiYWFmZGQ0YmE2ZGM3OWQxMzZhZWQyZDQwMTU1YzhhNDhmZWFlNWYvc2NhcHktc3NsX3Rscy0xLjIuMy4yLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMy4zIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkMjlhOTI1MjZkMjkxYmQ5YzkxZDM2ZTMyMjRmODJhMGY0MTc1MWE0YTk3OThiNGU3YWEyN2JjZmQyNTAyNmFiIiw=
ICAgICAgICAgICJtZDUiOiAiZDY3ZWE4YWMzZGJlNDI2MGM3MDgzMGQyM2MxNDJiNzkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjA5MjJiMWI1ODEwYTEzZWMxMzM3YTVlZTRhYWZlZGE4N2JmZTE3NWQxNWE1MzNlMDA3NDE0NTljNGMzZGM1MSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMy4zLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkNjdlYThhYzNkYmU0MjYwYzcwODMwZDIzYzE0MmI3OSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNzM3MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMS0wMVQyMzo0NDowOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMS0wMVQyMzo0NDowOC44OTE2MzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kMi85YS85MjUyNmQyOTFiZDljOTFkMzZlMzIyNGY4MmEwZjQxNzUxYTRhOTc5OGI0ZTdhYTI3YmNmZDI1MDI2YWIvc2NhcHktc3NsX3Rscy0xLjIuMy4zLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMy40IjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3YmU1NDI3NmVmN2JkN2I4NGMyMWQwZmNjY2Y4MDJkODc2NjNjMGNlYTExNDk1ZWMxZjBmZDBkNmFmM2Y2Y2E5Iiw=
ICAgICAgICAgICJtZDUiOiAiMGIyZWE4MWMxM2YyM2I1MzVlMDgyYTg0NTBkYjJjMzAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYWU2OTM5YmNhNjg4NTdjNGU1NzVkMmEwZDQxMzlhOTNiM2Y5YjFmOGQwMWM5MjA3YTA1NTA0MDMzMzVjN2ZlOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0xLjIuMy40LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwYjJlYTgxYzEzZjIzYjUzNWUwODJhODQ1MGRiMmMzMCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNzM0MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMS0yNlQyMTo1ODo0OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMS0yNlQyMTo1ODo0OC4wMTY3NDhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Yi9lNS80Mjc2ZWY3YmQ3Yjg0YzIxZDBmY2NjZjgwMmQ4NzY2M2MwY2VhMTE0OTVlYzFmMGZkMGQ2YWYzZjZjYTkvc2NhcHktc3NsX3Rscy0xLjIuMy40LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1ZTAwMmIxNDU1YzViMzcyZTFjOTljOWE3NmY1OTNhZmQ0ZThjNGNjMzVjY2VlYzc3NzBmOTc4ZjM2YTY1Yzc0Iiw=
ICAgICAgICAgICJtZDUiOiAiOWEwMmVjNzAzZDkwNjYyNDk0YjgxZDFmN2U1NTRjMWUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiM2RiNzEzODgzYTRmMzFjY2U4NjhlMzg5MTljODc5NzgzNjZjYjRiYjc1NWYzZmIzMGUxZTg3YWQyNTVmZjcyYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic2NhcHktc3NsX3Rscy0yLjAuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5YTAyZWM3MDNkOTA2NjI0OTRiODFkMWY3ZTU1NGMxZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzMDI1Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wMi0xMlQyMDoyNzoyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wMi0xMlQyMDoyNzoyMS45OTg5MjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81ZS8wMC8yYjE0NTVjNWIzNzJlMWM5OWM5YTc2ZjU5M2FmZDRlOGM0Y2MzNWNjZWVjNzc3MGY5NzhmMzZhNjVjNzQvc2NhcHktc3NsX3Rscy0yLjAuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNWUwMDJiMTQ1NWM1YjM3MmUxYzk5YzlhNzZmNTkzYWZkNGU4YzRjYzM1Y2NlZWM3NzcwZjk3OGYzNmE2NWM3NCIs
ICAgICAgICAibWQ1IjogIjlhMDJlYzcwM2Q5MDY2MjQ5NGI4MWQxZjdlNTU0YzFlIiw=
ICAgICAgICAic2hhMjU2IjogIjNkYjcxMzg4M2E0ZjMxY2NlODY4ZTM4OTE5Yzg3OTc4MzY2Y2I0YmI3NTVmM2ZiMzBlMWU4N2FkMjU1ZmY3MmMi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInNjYXB5LXNzbF90bHMtMi4wLjAudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiOWEwMmVjNzAzZDkwNjYyNDk0YjgxZDFmN2U1NTRjMWUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAxMzAyNTcs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTgtMDItMTJUMjA6Mjc6MjEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTgtMDItMTJUMjA6Mjc6MjEuOTk4OTI5WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNWUvMDAvMmIxNDU1YzViMzcyZTFjOTljOWE3NmY1OTNhZmQ0ZThjNGNjMzVjY2VlYzc3NzBmOTc4ZjM2YTY1Yzc0L3NjYXB5LXNzbF90bHMtMi4wLjAudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
