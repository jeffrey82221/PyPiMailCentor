ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogQ2hpbmVzZSAoU2ltcGxpZmllZCkiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjIiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjMiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjUiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjYiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlRvcGljIDo6IFV0aWxpdGllcyI=
ICAgIF0s

ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL1BhZGRsZVBhZGRsZS9QYWRkbGVPQ1IuZ2l0Iiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL1BhZGRsZVBhZGRsZS9QYWRkbGVPQ1IiLA==
ICAgICJrZXl3b3JkcyI6ICJvY3IgdGV4dGRldGVjdGlvbiB0ZXh0cmVjb2duaXRpb24gcGFkZGxlb2NyIGNybm4gZWFzdCBzdGFyLW5ldCByb3NldHRhIG9jcmxpdGUgZGIgY2hpbmVzZW9jciBjaGluZXNldGV4dGRldGVjdGlvbiBjaGluZXNldGV4dHJlY29nbml0aW9uIiw=
ICAgICJsaWNlbnNlIjogIkFwYWNoZSBMaWNlbnNlIDIuMCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInBhZGRsZW9jcldvcmRMZXZlbERldGVjdGlvbiIs
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcGFkZGxlb2NyV29yZExldmVsRGV0ZWN0aW9uLyIs
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcGFkZGxlb2NyV29yZExldmVsRGV0ZWN0aW9uLyIs
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogImh0dHBzOi8vZ2l0aHViLmNvbS9QYWRkbGVQYWRkbGUvUGFkZGxlT0NSLmdpdCIs
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9QYWRkbGVQYWRkbGUvUGFkZGxlT0NSIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcGFkZGxlb2NyV29yZExldmVsRGV0ZWN0aW9uLzIuNi4xLjAvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgInNoYXBlbHkiLA==
ICAgICAgInNjaWtpdC1pbWFnZSIs
ICAgICAgImltZ2F1ZyIs
ICAgICAgInB5Y2xpcHBlciIs
ICAgICAgImxtZGIiLA==
ICAgICAgInRxZG0iLA==
ICAgICAgIm51bXB5Iiw=
ICAgICAgInZpc3VhbGRsIiw=
ICAgICAgInJhcGlkZnV6eiIs
ICAgICAgIm9wZW5jdi1weXRob24gKD09NC42LjAuNjYpIiw=
ICAgICAgIm9wZW5jdi1jb250cmliLXB5dGhvbiAoPT00LjYuMC42NikiLA==
ICAgICAgImN5dGhvbiIs
ICAgICAgImx4bWwiLA==
ICAgICAgInByZW1haWxlciIs
ICAgICAgIm9wZW5weXhsIiw=
ICAgICAgImF0dHJkaWN0Iiw=
ICAgICAgIlBvbHlnb24zIiw=
ICAgICAgImxhbm1zLW5lbyAoPT0xLjAuMikiLA==
ICAgICAgIlB5TXVQREYgKDwxLjIxLjApIiw=
ICAgICAgInB5dGhvbi1kb2N4Iiw=
ICAgICAgImJlYXV0aWZ1bHNvdXA0Iiw=
ICAgICAgImZvbnR0b29scyAoPj00LjI0LjApIiw=
ICAgICAgImZpcmUgKD49MC4zLjApIiw=
ICAgICAgInBkZjJkb2N4Ig==
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIkF3ZXNvbWUgT0NSIHRvb2xraXRzIGJhc2VkIG9uIFBhZGRsZVBhZGRsZSDvvIg4LjZNIHVsdHJhLWxpZ2h0d2VpZ2h0IHByZS10cmFpbmVkIG1vZGVsLCBzdXBwb3J0IHRyYWluaW5nIGFuZCBkZXBsb3ltZW50IGFtb25nIHNlcnZlciwgbW9iaWxlLCBlbWJlZGVkIGFuZCBJb1QgZGV2aWNlcyIs
ICAgICJ2ZXJzaW9uIjogIjIuNi4xLjAiLA==
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODA0OTQzMyw=
ICAicmVsZWFzZXMiOiB7
ICAgICIyLjYuMS4wIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4YjU1ZThlMGI4YWQxYTgyNTY0MTZlYTU3MDBhOTdmMzA2NWMwNzk2YTcwZTEyZWI0YzkyNzhjMWVkY2UwZDQ3Iiw=
ICAgICAgICAgICJtZDUiOiAiYWU4YWM4ODY0YzViOGZmMjEyNDI0NTk1YmMyZmVlNDAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYmVlMDc0OGUzNjdjN2FmYjIyOWVhMTU3Mzc2MGE5MDZhMWVkM2E4MzljYjgyNThiMzFjNjA5NzQ3ODFkOWNhYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicGFkZGxlb2NyV29yZExldmVsRGV0ZWN0aW9uLTIuNi4xLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhZThhYzg4NjRjNWI4ZmYyMTI0MjQ1OTViYzJmZWU0MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDQzMzk1OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQxNTo0MDowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQxNTo0MDowMS4zNjg0MDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yi81NS9lOGUwYjhhZDFhODI1NjQxNmVhNTcwMGE5N2YzMDY1YzA3OTZhNzBlMTJlYjRjOTI3OGMxZWRjZTBkNDcvcGFkZGxlb2NyV29yZExldmVsRGV0ZWN0aW9uLTIuNi4xLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOGI1NWU4ZTBiOGFkMWE4MjU2NDE2ZWE1NzAwYTk3ZjMwNjVjMDc5NmE3MGUxMmViNGM5Mjc4YzFlZGNlMGQ0NyIs
ICAgICAgICAibWQ1IjogImFlOGFjODg2NGM1YjhmZjIxMjQyNDU5NWJjMmZlZTQwIiw=
ICAgICAgICAic2hhMjU2IjogImJlZTA3NDhlMzY3YzdhZmIyMjllYTE1NzM3NjBhOTA2YTFlZDNhODM5Y2I4MjU4YjMxYzYwOTc0NzgxZDljYWEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInBhZGRsZW9jcldvcmRMZXZlbERldGVjdGlvbi0yLjYuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYWU4YWM4ODY0YzViOGZmMjEyNDI0NTk1YmMyZmVlNDAiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiA0MzM5NTks
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDUtMTBUMTU6NDA6MDEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDUtMTBUMTU6NDA6MDEuMzY4NDAxWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOGIvNTUvZThlMGI4YWQxYTgyNTY0MTZlYTU3MDBhOTdmMzA2NWMwNzk2YTcwZTEyZWI0YzkyNzhjMWVkY2UwZDQ3L3BhZGRsZW9jcldvcmRMZXZlbERldGVjdGlvbi0yLjYuMS4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
