ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTXVzdGFwaGEgQmVuYWxpIiw=
ICAgICJhdXRob3JfZW1haWwiOiAibXVzdGFwaGFAaGVhZG5ldC5kayIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkZyYW1ld29yayA6OiBCdWlsZG91dCIs
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IFpvcGUgUHVibGljIExpY2Vuc2UiLA==
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IEJ1aWxkIFRvb2xzIiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyA6OiBQeXRob24gTW9kdWxlcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBjb250ZW50czo6XG5cbi0gQ29kZSByZXBvc2l0b3J5OiBodHRwczovL3N2bi5wbG9uZS5vcmcvc3ZuL2NvbGxlY3RpdmUvYnVpbGRvdXQvY29sbGVjdGl2ZS5yZWNpcGUuc3VwZXJ2aXNvclxuXG5DaGFuZ2UgaGlzdG9yeVxuKioqKioqKioqKioqKipcblxuMC4xOCAoVW5rbm93bilcbj09PT09PT09PT09PT09PT09XG5cblxuMC4xNyAoMjAxMS0wNy0yOClcbj09PT09PT09PT09PT09PT09PT09XG4tIEFkZGVkIHN1cHBvcnQgZm9yIHByb2Nlc3MgZ3JvdXBzXG4gIFtudWVjZXNdXG5cbjAuMTYgKDIwMTEtMDMtMDcpXG49PT09PT09PT09PT09PT09PVxuXG4tIEZpeCBzdXBlcnZpc29yY3RsIHRvIHVzZSB1bml4X2h0dHBfc2VydmVyIGlmIHVzZWRcbiAgW0RvbWVuIEtvxb5hciwgTml0ZW9XZWIuIFdvcmsgc3BvbnNvcmVkIGJ5IEhleGFnb24gSVRdXG5cbjAuMTUgKDIwMTEtMDMtMDUpXG49PT09PT09PT09PT09PT09PVxuXG4tIEFkZGVkIHN1cHBvcnQgZm9yIHVuaXhfaHR0cF9zZXJ2ZXIgYWRkaXRpb25hbGx5IHRvIGluZXRfaHR0cF9zZXJ2ZXJcbiAgW0RvbWVuIEtvxb5hciwgTml0ZW9XZWIuIFdvcmsgc3BvbnNvcmVkIGJ5IEhleGFnb24gSVRdXG5cbjAuMTQgKDIwMTAtMTItMTApXG49PT09PT09PT09PT09PT09PVxuXG4gLSBBZGRlZCBzdXBwb3J0IGZvciB0aGUgdW1hc2sgb3B0aW9uIG9mIHN1cGVydmlzb3JkXG4gICBbc2VydmlsaW9AbWNtYXN0ZXIuY2FdXG5cbiAtIE1vdmUgdGhlIGNyZWRlbnRpYWxzIG5lZWRlZCBmb3IgYXV0aGVudGljYXRpbmcgd2l0aCB0aGUgc3VwZXJ2aXNvcmRcbiAgIHByb2Nlc3MgZnJvbSB0aGUgc3VwZXJ2aXNvcmN0bCBzY3JpcHQgdG8gdGhlIGNvbmZpZ3VyYXRpb25cbiAgIGZpbGUuIEJlY2F1c2Ugb2YgYnVnIDE4MDcwNSBvZiB6Yy5idWlsZG91dCwgc2NyaXB0cyBhcmUgbWFkZVxuICAgd29ybGQtcmVhZGFibGUuIFtzZXJ2aWxpb0BtY21hc3Rlci5jYV1cblxuMC4xMyAoMjAxMC0xMi0wNylcbj09PT09PT09PT09PT09PT09XG5cbiAtICdub2NsZWFudXAnIG9wdGlvbiBvZiBTdXBlcnZpc29yIGlzIG5vdyBjb25maWd1cmFibGUgZnJvbSBCdWlsZG91dFxuICAgUGF0Y2ggZnJvbSBEYW1pZW4gTGV0b3VybmVsXG5cbjAuMTIgKDIwMTAtMDgtMDQpXG49PT09PT09PT09PT09PT09PVxuXG4gLSBRdW90ZSB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIHRoYXQgYXJlIHdyaXR0ZW4gaW4gdGhlIHN1cGVydmlzb3JcbiAgIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgZXZlbnRsaXN0ZW5lcnMsIG90aGVyd2lzZSBzdXBlcnZpc29yIHdpbGwgbm90IHBhc3NcbiAgIHRoZW0gb24gY29ycmVjdGx5IHRvIGZvciBleGFtcGxlIG1lbW1vbiBbRnJlZCB2YW4gRGlqa11cblxuMC4xMSAoMjAxMC0wOC0wMilcbj09PT09PT09PT09PT09PT09XG5cbiAtICdjaGlsZGxvZ2Rpcicgb3B0aW9uIG9mIFN1cGVydmlzb3IgaXMgbm93IGNvbmZpZ3VyYWJsZSBmcm9tIEJ1aWxkb3V0XG4gICBbSm9uYXRoYW4gQmFsbGV0XVxuXG4gLSBbaW5jbHVkZV0gZnVuY3Rpb25uYWxpdHkgaW4gdGhlIHN1cGVydmlzb3IgY29uZmlndXJhdGlvbiBmaWxlLlxuICAgU2VlIGh0dHA6Ly9zdXBlcnZpc29yZC5vcmcvY29uZmlndXJhdGlvbi5odG1sI2luY2x1ZGVcbiAgIFt5Y2Fkb3VyXVxuXG4wLjEwLjEgKDIwMTAtMDctMjcpXG49PT09PT09PT09PT09PT09PT09XG4tIFVwZGF0ZWQgZG9jdW1lbnRhdGlvbiBhYm91dCBob3cgdG8gdXNlIHRoZSBtZW1tb24gZXZlbnQgbGlzdGVuZXIgW2x1Y2llbGVqYXJkXVxuXG4wLjEwICgyMDEwLTA2LTAzKVxuPT09PT09PT09PT09PT09PT1cbiAtIEFkZGVkIGFuIG9wdGlvbiBmb3IgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBBVEhcbiAgIFtsdWNpZWxlamFyZF1cbiAtIEFkZGVkIHN1cHBvcnQgZm9yIGRpc2FibGluZyBzdXBlcnZpc29yIHNlY3Rpb25zIChzdWNoIGFzIGh0dHAsIHJwYyBhbmQgY3RsKSBbRG9tZW4gS296YXJdXG5cblxuMC45ICgyMDA5LTExLTA0KVxuPT09PT09PT09PT09PT09PVxuXG4gLSBBcHBsaWVkIEpvbmF0aGFuIEJhbGxldCdzIHBhdGNoOiBUaGUgZ2VuZXJhdGVkIGNvbnRyb2wgc2NyaXB0IGRvZXNuJ3QgXG4gICBhdXRvbWF0aWNhbGx5IGNvbm5lY3Qgb24gdGhlIGNyZWF0ZWQgc3VwZXJ2aXNvcmQgd2hlbiBydW5uaW5nIG9uIGEgY3VzdG9tIHBvcnQuIFxuXG4wLjggKDIwMDktMDQtMjcpXG49PT09PT09PT09PT09PT09XG5cbiAtIE1ha2UgaXQgcG9zc2libGUgdG8gc2V0IGFkZGl0aW9uYWwgb3B0aW9ucyBwZXIgcHJvY2VzcyBpbiB0aGUgY29udHJvbCBzY3JpcHQuXG4gICBbbmtyeXB0aWNdXG5cbjAuNyAoMjAwOS0wMS0yNylcbj09PT09PT09PT09PT09PT1cblxuIC0gQWRkZWQgJ3BsdWdpbnMnIG9wdGlvbiBzbyB3ZSBjYW4gaW5zdGFsbCBleHRyYSBlZ2dzIChzdXBlcnZpc29yIHBsdWdpbnMpXG4gICBbbXVzdGFwaGFdXG5cbiAtIFNvbWUgZml4ZXMgZm9yIGV2ZW50bGlzdG5lciBwYXJ0IFttdXN0YXBoYV1cblxuIC0gVXBkYXRlZCB0ZXN0c1xuXG4wLjYgKDIwMDgtMTEtMTApXG49PT09PT09PT09PT09PT09XG5cbiAtIE9uZSBjYW4gbm93IHNwZWNpZnkgdGhlIHVzZXIgYWNjb3VudCB0aGF0IHdpbGwgYmUgdXNlZCBhcyB0aGUgYWNjb3VudCBcbiAgIHdoaWNoIHJ1bnMgdGhlIHByb2dyYW0uXG4gICBbYW1vc11cblxuMC41ICgyMDA4LTA4LTIzKVxuPT09PT09PT09PT09PT09PVxuXG4gLSBBZGRpbmcgZXZlbnRsaXN0bmVycyBvcHRpb24gZm9yIHVzZSBhcyBldmVudCBub3RpZmljYXRpb24gZnJhbWV3b3JrLiAgXG4gICBUYXJnZXR0aW5nIHVzZSB3aXRoIHN1cGVydmlzb3IncyBtZW1tb24gZXZlbnQgbGlzdGVuZXJcbiAgIFthYnVya2hhbHRlcl1cbiBcbjAuNCAoMjAwOC0wNi0xMilcbj09PT09PT09PT09PT09PT1cblxuIC0gVXNlIGR5bmFtaWMgc2NyaXB0IG5hbWVzIHRvIGFsbG93IG11bHRpcGxlIGNsdXN0ZXJcbiAgIFtnYXdlbF1cblxuIC0gRW5zdXJlIHRoYXQgdGhlIGxvZyBkaXIgaXMgY3JlYXRlZCB3aGVuIHVzZWQgd2l0aG91dCB6b3BlJ3MgcmVjaXBlc1xuICAgW2dhd2VsXVxuXG5cbjAuMyAoMjAwOC0wNi0wMSlcbj09PT09PT09PT09PT09PT1cblxuIC0gVXBkYXRlZCBkb2NzIGFuZCB0ZXN0c1xuICAgW211c3RhcGhhXVxuIFxuIC0gcGVwOCBjb3NtZXRpY3NcbiAgIFttdXN0YXBoYV1cblxuIC0gTWFrZSBpdCBwb3NzaWJsZSB0byBwYXNzIGluIGFyZ3VtZW50cyB0byB0aGUgY29udHJvbCBzY3JpcHQuXG4gICBbaGFubm9zY2hdXG5cbiAtIFB1dCBhbGwgc3BlY2lmaWVkIG9wdGlvbnMsIGxpa2Ugc2VydmVyIHVybCBhbmQgdXNlcm5hbWUgaW50byB0aGUgZ2VuZXJhdGVkXG4gICBjb250cm9sIHNjcmlwdC4gVGhpcyBhbGxvd3MgdG8gcnVuIGl0IGFzIGlzLlxuICAgW2hhbm5vc2NoXVxuXG4wLjIgKDIwMDgtMDQtMjMpXG49PT09PT09PT09PT09PT09XG5cbiAtIE1ha2UgcG9zc2libGUgdG8gcGFzcyBhcmd1bWVudHMgdG8gdGhlIGNvbW1hbmQgc28gb25lIGNhbiB1c2UgY3RsIHNjcmlwdHNcbiAgIHdpdGggc3VwZXJ2aXNvciB3aXRoIGFyZ3VtZW50cyBsaWtlICdmZycgZm9yIHpvcGUgaW5zdGFuY2VzIG9yIC0tbm8tZGV0YWNoIFxuICAgb3Igc29tZXRoaW5nIHNpbWlsYXIgZm9yIG90aGVyIHByb2dyYW1zXG4gICBbbXVzdGFwaGFdXG5cbiAtIHVwZGF0ZWQgdGVzdHNcbiAgIFttdXN0YXBoYV1cblxuMC4xICgyMDA4LTA0LTIxKVxuPT09PT09PT09PT09PT09PVxuXG4gLSBDcmVhdGVkIHJlY2lwZSB3aXRoIFpvcGVTa2VsIFtNdXN0YXBoYSBCZW5hbGldLlxuXG5EZXRhaWxlZCBEb2N1bWVudGF0aW9uXG4qKioqKioqKioqKioqKioqKioqKioqXG5cblRoaXMgcmVjaXBlIHdoZW4gdXNlZCB3aWxsIGRvIHRoZSBmb2xsb3dpbmc6XG5cbiAqIGluc3RhbGwgYGBzdXBlcnZpc29yYGAgYW5kIGFsbCBpdHMgZGVwZW5kZWNpZXMuXG5cbiAqIGdlbmVyYXRlcyB0aGUgc3VwZXJ2aXNvcmQsIHN1cGVydmlzb3JjdGwsIGFuZCBtZW1tb24gc2NyaXB0cyBpbiB0aGUgYmluIFxuICAgZGlyZWN0b3J5IFxuXG4gKiBnZW5lcmF0ZXMgYSBjb25maWd1cmF0aW9uIGZpbGUgdG8gYmUgdXNlZCBieSBzdXBlcnZpc29yZCBhbmQgc3VwZXJ2aXNvcmN0bFxuICAgc2NyaXB0c1xuXG5TdXBwb3J0ZWQgb3B0aW9uc1xuPT09PT09PT09PT09PT09PT1cblxuVGhlIHJlY2lwZSBzdXBwb3J0cyB0aGUgZm9sbG93aW5nIG9wdGlvbnM6XG5cbnNlY3Rpb25zXG4gICAgTGlzdCBvZiBlbmFibGVkIHN1cGVydmlzb3Igc2VjdGlvbnMuXG4gICAgRGVmYXVsdHMgdG8gXCJodHRwIGN0bCBycGNcIlxuXG5wbHVnaW5zXG4gICAgRXh0cmEgZWdncyB5b3Ugd2FudCB0aGUgcmVjaXBlIHRvIGluc3RhbGwuIGllOiBzdXBlcmxhbmNlXG4gICAgICAgIFxuaHR0cC1zb2NrZXRcbiAgICBcImluZXRcIiBvciBcInVuaXhcIiBzb2NrZXQgdG8gdXNlIGZvciBodHRwIGFkbWluaXN0cmF0aW9uLiBEZWZhdWx0cyB0byBcImluZXRcIi5cblxuZmlsZVxuICAgIEEgcGF0aCB0byBhIFVOSVggZG9tYWluIHNvY2tldCAoZS5nLiAvdG1wL3N1cGVydmlzb3JkLnNvY2spIG9uIHdoaWNoXG4gICAgc3VwZXJ2aXNvciB3aWxsIGxpc3RlbiBmb3IgSFRUUC9YTUwtUlBDIHJlcXVlc3RzLlxuXG5jaG1vZFxuICAgIENoYW5nZSB0aGUgVU5JWCBwZXJtaXNzaW9uIG1vZGUgYml0cyBvZiB0aGUgVU5JWCBkb21haW4gc29ja2V0IHRvIHRoaXMgdmFsdWUgYXQgc3RhcnR1cC5cblxucG9ydFxuICAgIFRoZSBwb3J0IG51bW1iZXIgc3VwZXJ2aXNvcmQgbGlzdGVuIHRvLiBpZTogOTAwMS4gQ2FuIGJlIGdpdmVuIGFzIGhvc3Q6cG9ydFxuICAgIGxpa2UgMTI3LjAuMC4xOjkwMDEuIERlZmF1bHRzIHRvIDEyNy4wLjAuMTo5MDAxXG5cbnVzZXJcbiAgICBUaGUgdXNlcm5hbWUgcmVxdWlyZWQgZm9yIGF1dGhlbnRpY2F0aW9uIHRvIHN1cGVydmlzb3JkXG5cbnBhc3N3b3JkXG4gICAgVGhlIHBhc3N3b3JkIHJlcXVpcmVkIGZvciBhdXRoZW50aWNhdGlvbiB0byBzdXBlcnZpc29yZFxuXG5zdXBlcnZpc29yZC1jb25mXG4gICAgRnVsbCBwYXRoIHRvIHdoZXJlIHRoZSByZWNpcGUgcHV0cyB0aGUgc3VwZXJ2aXNvcmQgY29uZmlndXJhdGlvbiBmaWxlLiBcbiAgICBEZWZhdWx0cyB0byAke2J1aWxkb3V0OmRpcmVjdG9yeX0vcGFydHMvJHtuYW1lfS9zdXBlcnZpc29yZC5jb25mXG5cbmNoaWxkbG9nZGlyXG4gICAgVGhlIGZ1bGwgcGF0aCBvZiB0aGUgZGlyZWN0b3J5IHdoZXJlIGxvZyBmaWxlcyBvZiBwcm9jZXNzZXMgbWFuYWdlZCBieVxuICAgIFN1cGVydmlzb3Igd2hpbGUgYmUgc3RvcmVkLiBEZWZhdWx0cyB0byAke2J1aWxkb3V0OmRpcmVjdG9yeX0vdmFyL2xvZ1xuXG5sb2dmaWxlXG4gICAgVGhlIGZ1bGwgcGF0aCB0byB0aGUgc3VwZXJ2aXNvcmQgbG9nIGZpbGUuIERlZmF1bHRzIHRvIFxuICAgICR7YnVpbGRvdXQ6ZGlyZWN0b3J5fS92YXIvbG9nL3N1cGVydmlzb3JkLmxvZ1xuXG5waWRmaWxlXG4gICAgVGhlIHBpZCBmaWxlIG9mIHN1cGVydmlzb3JkLiBEZWZhdWx0cyB0byBcbiAgICAke2J1aWxkb3V0OmRpcmVjdG9yeX0vdmFyL3N1cGVydmlzb3JkLnBpZFxuXG5sb2dmaWxlLW1heGJ5dGVzXG4gICAgVGhlIG1heGltdW0gbnVtYmVyIG9mIGJ5dGVzIHRoYXQgbWF5IGJlIGNvbnN1bWVkIGJ5IHRoZSBhY3Rpdml0eSBsb2cgZmlsZSBcbiAgICBiZWZvcmUgaXQgaXMgcm90YXRlZC4gRGVmYXVsdHMgdG8gNTBNQlxuXG5sb2dmaWxlLWJhY2t1cHNcbiAgICBUaGUgbnVtYmVyIG9mIGJhY2t1cHMgdG8ga2VlcCBhcm91bmQgcmVzdWx0aW5nIGZyb20gYWN0aXZpdHkgbG9nIGZpbGUgXG4gICAgcm90YXRpb24uIERlZmF1bHRzIHRvIDEwXG5cbmxvZ2xldmVsXG4gICBUaGUgbG9nZ2luZyBsZXZlbC4gQ2FuIGJlIG9uZSBvZiBjcml0aWNhbCwgZXJyb3IsIHdhcm4sIGluZm8sIGRlYnVnLCB0cmFjZSwgXG4gICBvciBibGF0aGVyLiBEZWZhdWx0cyB0byBpbmZvXG5cbnVtYXNrXG4gICBUaGUgdW1hc2sgb2YgdGhlIHN1cGVydmlzb3JkIHByb2Nlc3MuIERlZmF1bHRzIHRvIDAyMi5cblxubm9kYWVtb25cbiAgIElmIHRydWUsIHN1cGVydmlzb3JkIHdpbGwgc3RhcnQgaW4gdGhlIGZvcmVncm91bmQgaW5zdGVhZCBvZiBkYWVtb25pemluZy5cbiAgIERlZmF1bHRzIHRvIGZhbHNlXG5cbm5vY2xlYW51cFxuICBQcmV2ZW50IHN1cGVydmlzb3JkIGZyb20gY2xlYXJpbmcgYW55IGV4aXN0aW5nIEFVVE8gY2hpbGQgbG9nIGZpbGVzIGF0XG4gIHN0YXJ0dXAgdGltZS4gVXNlZnVsIGZvciBkZWJ1Z2dpbmcuIERlZmF1bHRzIHRvIGZhbHNlXG5cbnNlcnZlcnVybFxuICAgVGhlIFVSTCB0aGF0IHNob3VsZCBiZSB1c2VkIHRvIGFjY2VzcyB0aGUgc3VwZXJ2aXNvcmQgc2VydmVyLiBEZWZhdWx0cyB0b1xuICAgaHR0cDovLzEyNy4wLjAuMTo5MDAxXG5cbnByb2dyYW1zXG4gICBBIGxpc3Qgb2YgcHJvZ3JhbXMgeW91IHdhbnQgdGhlIHN1cGVydmlzb3JkIHRvIGNvbnRyb2wuIE9uZSBwZXIgbGluZS4gXG4gICBUaGUgZm9ybWF0IG9mIGEgbGluZSBpcyBhcyBmb2xsb3c6XG4gICBcbiAgICAgICBwcmlvcml0eSBwcm9jZXNzX25hbWUgWyhwcm9jZXNzX29wdHMpXSBjb21tYW5kIFtbYXJnc10gW2RpcmVjdG9yeV0gW1tyZWRpcmVjdF9zdGRlcnJdXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt1c2VyXV1cbiAgIFxuICAgVGhlIFthcmdzXSBpcyBhbnkgbnVtYmVyIG9mIGFyZ3VtZW50cyB5b3Ugd2FudCB0byBwYXNzIHRvIHRoZSBgYGNvbW1hbmRgYFxuICAgSXQgaGFzIHRvIGJlIGdpdmVuIGJldHdlZW4gW10gKGllLjogWy12IGZnXSkuIFNlZSBleGFtcGxlcyBiZWxvdy5cbiAgIElmIG5vdCBnaXZlbiB0aGUgcmVkaXJlY3Rfc3RkZXJyIGRlZmF1bHRzIHRvIGZhbHNlLlxuICAgSWYgbm90IGdpdmVuIHRoZSBkaXJlY3Rvcnkgb3B0aW9uIGRlZmF1bHRzIHRvIHRoZSBkaXJlY3RvcnkgY29udGFpbmluZyB0aGVcbiAgIHRoZSBjb21tYW5kLlxuICAgVGhlIG9wdGlvbmFsIHByb2Nlc3Nfb3B0cyBhcmd1bWVudCBzZXRzIGFkZGl0aW9uYWwgb3B0aW9ucyBvbiB0aGUgcHJvY2Nlc3NcbiAgIGluIHRoZSBzdXBlcnZpc29yZCBjb25maWd1cmF0aW9uLiAgXG4gICBJdCBoYXMgdG8gYmUgZ2l2ZW4gYmV0d2VlbiBgYCgpYGAgYW5kIG11c3QgY29udGFpbiBvcHRpb25zIGluIGBga2V5PXZhbHVlYGAgZm9ybWF0XG4gICB3aXRoIHNwYWNlcyBvbmx5IGZvciBzZXBhcmF0aW5nIG9wdGlvbnMgLSBpZS46IChhdXRvc3RhcnQ9ZmFsc2Ugc3RhcnRzZWNzPTEwKS5cbiAgIFRoZSBvcHRpb25hbCB1c2VyIGFyZ3VtZW50IGdpdmVzIHRoZSB1c2VyaWQgdGhhdCB0aGUgcHJvY2VzcyBzaG91bGQgYmUgcnVuXG4gICBhcyAoaWYgc3VwZXJ2aXNvcmQgaXMgcnVuIGFzIHJvb3QpLlxuXG4gICBJbiBtb3N0IGNhc2VzIHlvdSB3aWxsIG9ubHkgbmVlZCB0byBnaXZlIHRoZSA0IGZpcnN0IHBhcnRzOlxuXG4gICAgICAgcHJpb3JpdHkgcHJvY2Vzc19uYW1lIGNvbW1hbmQgW1thcmdzXV1cblxuZXZlbnRsaXN0ZW5lcnNcbiAgICBBIGxpc3Qgb2YgZXZlbnRsaXN0ZW5lcnMgeW91J2QgbGlrZSBzdXBlcnZpc29yZCB0byBydW4gYXMgc3VicHJvY2Vzc2VzIHRvXG4gICAgc3Vic2NyaWJlIHRvIGV2ZW50IG5vdGlmaWNhdGlvbnMuIE9uZSBwZXIgbGluZS4gUmVsZXZhbnQgc3VwZXJ2aXNvciBcbiAgICBkb2N1bWVudGF0aW9uIGFib3V0IGV2ZW50cyBhdCBcbiAgICBodHRwOi8vc3VwZXJ2aXNvcmQub3JnL21hbnVhbC9jdXJyZW50L2V2ZW50cy5odG1sLlxuICAgIFxuICAgICAgICBwcm9jZXNzbmFtZSBldmVudHMgY29tbWFuZCBbW2FyZ3NdXVxuICAgIFxuICAgIGBgZXZlbnRzYGAgaXMgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCAod2l0aG91dCBzcGFjZXMpIG9mIGV2ZW50IHR5cGUgbmFtZXMgXG4gICAgdGhhdCB0aGUgbGlzdGVuZXIgaXMgXCJpbnRlcmVzdGVkXCIgaW4gcmVjZWl2aW5nIG5vdGlmaWNhdGlvbnMgZm9yLlxuICAgIFxuICAgIFN1cGVydmlzb3IgcHJvdmlkZXMgb25lIGV2ZW50IGxpc3RlbmVyIGNhbGxlZCBtZW1tb24gd2hpY2ggY2FuIGJlIHVzZWQgdG9cbiAgICByZXN0YXJ0IHN1cGVydmlzb3JkIGNoaWxkIHByb2Nlc3Mgb25jZSB0aGV5IHJlYWNoIGEgY2VydGFpbiBtZW1vcnkgbGltaXQuXG4gICAgTm90ZSB0aGF0IHlvdSBuZWVkIHRvIGRlZmluZSB0aGUgdmFyaWFibGVzIGBgdXNlcmBgLCBgYHBhc3N3b3JkYGAgYW5kIGBgc2VydmVydXJsYGBcbiAgICAoZGVzY3JpYmVkIGluIHRoZSBzdXBwb3J0ZWQgb3B0aW9ucyBhYm92ZSkgdG8gYmUgYWJsZSB0byB1c2UgdGhlIG1lbW1vbiBsaXN0ZW5lci5cbiAgICBBbiBleGFtcGxlIG9mIGRlZmluaW5nIGEgbWVtbW9uIGV2ZW50IGxpc3RlbmVyLCB3aGljaCBhbmFseXplcyBtZW1vcnkgdXNhZ2UgXG4gICAgZXZlcnkgNjAgc2Vjb25kcyBhbmQgcmVzdGFydHMgYXMgbmVlZGVkIGNvdWxkIGxvb2sgbGlrZTpcbiAgICBcbiAgICAgICBNZW1vcnlNb25pdG9yIFRJQ0tfNjAgJHtidWlsZG91dDpiaW4tZGlyZWN0b3J5fS9tZW1tb24gWy1wIHByb2Nlc3NfbmFtZT0yMDBNQl1cbiAgICBcbmdyb3Vwc1xuICAgQSBsaXN0IG9mIHByb2dyYW1zIHRoYXQgYmVjb21lIHBhcnQgb2YgYSBncm91cC4gT25lIHBlciBsaW5lLlxuICAgVGhlIGZvcm1hdCBvZiBhIGxpbmUgaXMgYXMgZm9sbG93OlxuICAgIFxuICAgICAgIHByaW9yaXR5IGdyb3VwX25hbWUgcHJvZ3JhbV9uYW1lc1xuICAgIFxuICAgVGhlIHByb2dyYW1zX25hbWUgaXMgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBwcm9ncmFtIG5hbWVzLlxuICAgIFxuZW52LXBhdGhcbiAgICBUaGUgZW52aXJvbm1lbnQgdmFyaWFibGUgUEFUSCwgZS5nLiAvYmluOi9zYmluOi91c3IvYmluOi91c3Ivc2JpbjovdXNyL2xvY2FsL2JpblxuXG5cbkV4YW1wbGUgdXNhZ2Vcbj09PT09PT09PT09PT1cblxuV2UnbGwgc3RhcnQgYnkgY3JlYXRpbmcgYSBidWlsZG91dCB0aGF0IHVzZXMgdGhlIHJlY2lwZTo6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsXG4gICAgLi4uIFwiXCJcIlxuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID0gc3VwZXJ2aXNvclxuICAgIC4uLiBpbmRleCA9IGh0dHA6Ly9weXBpLnB5dGhvbi5vcmcvc2ltcGxlXG4gICAgLi4uIFt6ZW9dXG4gICAgLi4uIGxvY2F0aW9uID0gL2EvYi9jXG4gICAgLi4uIFtpbnN0YW5jZTFdXG4gICAgLi4uIGxvY2F0aW9uID0gL2UvZlxuICAgIC4uLiBbaW5zdGFuY2UyXVxuICAgIC4uLiBsb2NhdGlvbiA9IC9nL2hcbiAgICAuLi5cbiAgICAuLi4gW3N1cGVydmlzb3JdXG4gICAgLi4uIHJlY2lwZSA9IGZvdXJkaWdpdHMucmVjaXBlLnN1cGVydmlzb3JcbiAgICAuLi4gcGx1Z2lucyA9XG4gICAgLi4uICAgICAgIHN1cGVybGFuY2VcbiAgICAuLi4gcG9ydCA9IDkwMDFcbiAgICAuLi4gdXNlciA9IG11c3RhcGhhXG4gICAgLi4uIHBhc3N3b3JkID0gc2VjcmV0XG4gICAgLi4uIHNlcnZlcnVybCA9IGh0dHA6Ly9zdXBlcnZpc29yLm11c3RhcC5jb21cbiAgICAuLi4gcHJvZ3JhbXMgPVxuICAgIC4uLiAgICAgICAxMCB6ZW8gJHt6ZW86bG9jYXRpb259L2Jpbi9ydW56ZW8gJHt6ZW86bG9jYXRpb259XG4gICAgLi4uICAgICAgIDIwIGluc3RhbmNlMSAke2luc3RhbmNlMTpsb2NhdGlvbn0vYmluL3J1bnpvcGUgJHtpbnN0YW5jZTE6bG9jYXRpb259IHRydWVcbiAgICAuLi4gICAgICAgMzAgaW5zdGFuY2UyIChhdXRvc3RhcnQ9ZmFsc2UpICR7aW5zdGFuY2UyOmxvY2F0aW9ufS9iaW4vcnVuem9wZSB0cnVlXG4gICAgLi4uICAgICAgIDQwIG1haWxkcm9waG9zdCAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L21haWxkcm9wY3RsIHRydWVcbiAgICAuLi4gICAgICAgNTAgb3RoZXIgJHtidWlsZG91dDpiaW4tZGlyZWN0b3J5fS9vdGhlciBbLW4gMTAwXSAvdG1wXG4gICAgLi4uICAgICAgIDYwIG90aGVyMiAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L290aGVyMiBbLW4gMTAwXSB0cnVlXG4gICAgLi4uICAgICAgIDcwIG90aGVyMyAoc3RhcnRzZWNzPTEwKSAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L290aGVyMyBbLW4gLWggLXYgLS1uby1kZXRhY2hdIC90bXAzIHRydWUgd3d3LWRhdGFcbiAgICAuLi4gZXZlbnRsaXN0ZW5lcnMgPVxuICAgIC4uLiAgICAgICBNZW1tb24gVElDS182MCAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L21lbW1vbiBbLXAgaW5zdGFuY2UxPTIwME1CXVxuICAgIC4uLiAgICAgICBIdHRwT2sgVElDS182MCAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L2h0dHBvayBbLXAgc2l0ZTEgLXQgMjAgaHR0cDovL2xvY2FsaG9zdDo4MDgwL11cbiAgICAuLi4gZ3JvdXBzID1cbiAgICAuLi4gICAgICAgMTAgc2VydmljZXMgemVvLGluc3RhbmNlMVxuICAgIC4uLiAgICAgICAyMCBvdGhlcnMgb3RoZXIsb3RoZXIyLG90aGVyM1xuICAgIC4uLiBcIlwiXCIpXG5cbkNocmlzIE1jIERvbm91Z2ggc2FpZDo6XG5cbiAgICAgTm90ZSBob3dldmVyIHRoYXQgdGhlIFwiaW5zdGFuY2VcIiBzY3JpcHQgUGxvbmUgdXNlcyB0byBzdGFydCBab3BlIHdoZW5cbiAgICAgcGFzc2VkIFwiZmdcIiBhcHBlYXJzIHRvIHVzZSBvcy5zeXN0ZW0sIHNvIHRoZSBwcm9jZXNzIHRoYXQgc3VwZXJ2aXNvciBpcyBcbiAgICAgY29udHJvbGxpbmcgaXNudCBhY3R1YWxseSBQbG9uZSwgaXQncyB0aGUgY29udHJvbGxlciBzY3JpcHQuIFRoaXMgbWVhbnMgXG4gICAgIHRoYXQgXCJzdG9wXCIgYW5kIFwic3RhcnRcIiB0ZW5kIHRvIG5vdCBkbyB3aGF0IHlvdSB3YW50LiBJdCdzIGZhciBiZXR0ZXIgdG8gXG4gICAgIHVzZSBcInJ1bnpvcGVcIiwgd2hpY2ggYWN0dWFsbHkgZXhlY3MgdGhlIFB5dGhvbiBwcm9jZXNzIHdoaWNoIGJlY29tZXMgWm9wZVxuICAgICBTZWUgYWxzbyBcbiAgICAgaHR0cDovL3N1cGVydmlzb3JkLm9yZy9tYW51YWwvY3VycmVudC9zdWJwcm9jZXNzZXMuaHRtbCNub25kYWVtb25pemluZ19vZl9zdWJwcm9jZXNzZXNcblxuUnVubmluZyB0aGUgYnVpbGRvdXQgZ2l2ZXMgdXM6OlxuXG4gICAgPj4+IHByaW50IHN5c3RlbShidWlsZG91dClcbiAgICBHZXR0aW5nIGRpc3RyaWJ1dGlvbiBmb3IgJ3pjLnJlY2lwZS5lZ2cnLlxuICAgIC4uLlxuICAgIEluc3RhbGxpbmcgc3VwZXJ2aXNvci5cbiAgICAuLi5cbiAgICBHZW5lcmF0ZWQgc2NyaXB0ICcvc2FtcGxlLWJ1aWxkb3V0L2Jpbi9zdXBlcnZpc29yY3RsJy5cbiAgICA8QkxBTktMSU5FPlxuXG5DaGVjayB0aGF0IHdlIGhhdmUgdGhlICdjcmFzaG1haWwnLCAnbWVtbW9uJyBhbmQgJ2h0dHBvaycgc2NyaXB0cyBmcm9tIHN1cGVybGFuY2U6OlxuXG4gICAgPj4+IGxzKHNhbXBsZV9idWlsZG91dCwgJ2JpbicpXG4gICAgLSAgYnVpbGRvdXRcbiAgICAtICBjcmFzaG1haWxcbiAgICAtICBodHRwb2tcbiAgICAtICBtZW1tb25cbiAgICAtICBzdXBlcnZpc29yY3RsXG4gICAgLSAgc3VwZXJ2aXNvcmRcbiAgICBcblxuWW91IGNhbiBub3cganVzdCBydW4gdGhlIHN1cGVydmlzb3JkIGxpa2UgdGhpczo6XG5cbiAgICAkIGJpbi9zdXBlcnZpc29yZFxuXG5hbmQgY29udHJvbCBpdCB3aXRoIHN1cGVydmlzb3JjdGw6OlxuXG4gICAgJCBiaW4vc3VwZXJ2aXNvcmN0bFxuXG5NZW1vcnkgbW9uaXRvcmluZyB2aWEgc3VwZXJ2aXNvcidzIG1lbW1vbiBldmVudCBsaXN0ZW5lciB3aWxsIGJlIGV4ZWN1dGVkIHZpYVxuc3VwZXJ2aXNvcmQgd2l0aCB0aGUgZm9sbG93aW5nOjpcblxuICAgICQgYmluL21lbW1vblxuXG5ub3csIGdldCBhIGxvb2sgdG8gdGhlIGdlbmVyYXRlZCBzdXBlcnZpc29yZC5jb25mIGZpbGU6OlxuXG4gICAgPj4+IGNhdCgncGFydHMnLCAnc3VwZXJ2aXNvcicsICdzdXBlcnZpc29yZC5jb25mJykgI2RvY3Rlc3Q6ICtSRVBPUlRfTkRJRkZcbiAgICA8QkxBTktMSU5FPlxuICAgIFtzdXBlcnZpc29yZF1cbiAgICBjaGlsZGxvZ2RpciA9IC9zYW1wbGUtYnVpbGRvdXQvdmFyL2xvZ1xuICAgIGxvZ2ZpbGUgPSAvc2FtcGxlLWJ1aWxkb3V0L3Zhci9sb2cvc3VwZXJ2aXNvcmQubG9nXG4gICAgbG9nZmlsZV9tYXhieXRlcyA9IDUwTUJcbiAgICBsb2dmaWxlX2JhY2t1cHMgPSAxMFxuICAgIGxvZ2xldmVsID0gaW5mb1xuICAgIHBpZGZpbGUgPSAvc2FtcGxlLWJ1aWxkb3V0L3Zhci9zdXBlcnZpc29yZC5waWRcbiAgICB1bWFzayA9IDAyMlxuICAgIG5vZGFlbW9uID0gZmFsc2VcbiAgICBub2NsZWFudXAgPSBmYWxzZVxuICAgIDxCTEFOS0xJTkU+XG4gICAgW2luZXRfaHR0cF9zZXJ2ZXJdXG4gICAgcG9ydCA9IDkwMDFcbiAgICB1c2VybmFtZSA9IG11c3RhcGhhXG4gICAgcGFzc3dvcmQgPSBzZWNyZXRcbiAgICA8QkxBTktMSU5FPlxuICAgIFtzdXBlcnZpc29yY3RsXVxuICAgIHNlcnZlcnVybCA9IGh0dHA6Ly9zdXBlcnZpc29yLm11c3RhcC5jb21cbiAgICB1c2VybmFtZSA9IG11c3RhcGhhXG4gICAgcGFzc3dvcmQgPSBzZWNyZXRcbiAgICA8QkxBTktMSU5FPlxuICAgIFtycGNpbnRlcmZhY2U6c3VwZXJ2aXNvcl1cbiAgICBzdXBlcnZpc29yLnJwY2ludGVyZmFjZV9mYWN0b3J5PXN1cGVydmlzb3IucnBjaW50ZXJmYWNlOm1ha2VfbWFpbl9ycGNpbnRlcmZhY2VcbiAgICA8QkxBTktMSU5FPlxuICAgIFtwcm9ncmFtOnplb11cbiAgICBjb21tYW5kID0gL2EvYi9jL2Jpbi9ydW56ZW8gXG4gICAgcHJvY2Vzc19uYW1lID0gemVvXG4gICAgZGlyZWN0b3J5ID0gL2EvYi9jXG4gICAgcHJpb3JpdHkgPSAxMFxuICAgIHJlZGlyZWN0X3N0ZGVyciA9IGZhbHNlXG4gICAgPEJMQU5LTElORT5cbiAgICA8QkxBTktMSU5FPlxuICAgIFtwcm9ncmFtOmluc3RhbmNlMV1cbiAgICBjb21tYW5kID0gL2UvZi9iaW4vcnVuem9wZSBcbiAgICBwcm9jZXNzX25hbWUgPSBpbnN0YW5jZTFcbiAgICBkaXJlY3RvcnkgPSAvZS9mXG4gICAgcHJpb3JpdHkgPSAyMFxuICAgIHJlZGlyZWN0X3N0ZGVyciA9IHRydWVcbiAgICA8QkxBTktMSU5FPlxuICAgIDxCTEFOS0xJTkU+XG4gICAgW3Byb2dyYW06aW5zdGFuY2UyXVxuICAgIGNvbW1hbmQgPSAvZy9oL2Jpbi9ydW56b3BlIFxuICAgIHByb2Nlc3NfbmFtZSA9IGluc3RhbmNlMlxuICAgIGRpcmVjdG9yeSA9IC9nL2gvYmluXG4gICAgcHJpb3JpdHkgPSAzMFxuICAgIHJlZGlyZWN0X3N0ZGVyciA9IHRydWVcbiAgICBhdXRvc3RhcnQgPSBmYWxzZVxuICAgIDxCTEFOS0xJTkU+XG4gICAgW3Byb2dyYW06bWFpbGRyb3Bob3N0XVxuICAgIGNvbW1hbmQgPSAvc2FtcGxlLWJ1aWxkb3V0L2Jpbi9tYWlsZHJvcGN0bCBcbiAgICBwcm9jZXNzX25hbWUgPSBtYWlsZHJvcGhvc3RcbiAgICBkaXJlY3RvcnkgPSAvc2FtcGxlLWJ1aWxkb3V0L2JpblxuICAgIHByaW9yaXR5ID0gNDBcbiAgICByZWRpcmVjdF9zdGRlcnIgPSB0cnVlXG4gICAgPEJMQU5LTElORT5cbiAgICA8QkxBTktMSU5FPlxuICAgIFtwcm9ncmFtOm90aGVyXVxuICAgIGNvbW1hbmQgPSAvc2FtcGxlLWJ1aWxkb3V0L2Jpbi9vdGhlciAtbiAxMDBcbiAgICBwcm9jZXNzX25hbWUgPSBvdGhlclxuICAgIGRpcmVjdG9yeSA9IC90bXBcbiAgICBwcmlvcml0eSA9IDUwXG4gICAgcmVkaXJlY3Rfc3RkZXJyID0gZmFsc2VcbiAgICA8QkxBTktMSU5FPlxuICAgIDxCTEFOS0xJTkU+XG4gICAgW3Byb2dyYW06b3RoZXIyXVxuICAgIGNvbW1hbmQgPSAvc2FtcGxlLWJ1aWxkb3V0L2Jpbi9vdGhlcjIgLW4gMTAwXG4gICAgcHJvY2Vzc19uYW1lID0gb3RoZXIyXG4gICAgZGlyZWN0b3J5ID0gL3NhbXBsZS1idWlsZG91dC9iaW5cbiAgICBwcmlvcml0eSA9IDYwXG4gICAgcmVkaXJlY3Rfc3RkZXJyID0gdHJ1ZVxuICAgIDxCTEFOS0xJTkU+XG4gICAgPEJMQU5LTElORT5cbiAgICBbcHJvZ3JhbTpvdGhlcjNdXG4gICAgY29tbWFuZCA9IC9zYW1wbGUtYnVpbGRvdXQvYmluL290aGVyMyAtbiAtaCAtdiAtLW5vLWRldGFjaFxuICAgIHByb2Nlc3NfbmFtZSA9IG90aGVyM1xuICAgIGRpcmVjdG9yeSA9IC90bXAzXG4gICAgcHJpb3JpdHkgPSA3MFxuICAgIHJlZGlyZWN0X3N0ZGVyciA9IHRydWVcbiAgICB1c2VyID0gd3d3LWRhdGFcbiAgICBzdGFydHNlY3MgPSAxMFxuICAgIDxCTEFOS0xJTkU+XG4gICAgW2V2ZW50bGlzdGVuZXI6TWVtbW9uXVxuICAgIGNvbW1hbmQgPSAvc2FtcGxlLWJ1aWxkb3V0L2Jpbi9tZW1tb24gLXAgaW5zdGFuY2UxPTIwME1CXG4gICAgZXZlbnRzID0gVElDS182MFxuICAgIHByb2Nlc3NfbmFtZT1NZW1tb25cbiAgICBlbnZpcm9ubWVudD1TVVBFUlZJU09SX1VTRVJOQU1FPSdtdXN0YXBoYScsU1VQRVJWSVNPUl9QQVNTV09SRD0nc2VjcmV0JyxTVVBFUlZJU09SX1NFUlZFUl9VUkw9J2h0dHA6Ly9zdXBlcnZpc29yLm11c3RhcC5jb20nXG4gICAgPEJMQU5LTElORT5cbiAgICBbZXZlbnRsaXN0ZW5lcjpIdHRwT2tdXG4gICAgY29tbWFuZCA9IC9zYW1wbGUtYnVpbGRvdXQvYmluL2h0dHBvayAtcCBzaXRlMSAtdCAyMCBodHRwOi8vbG9jYWxob3N0OjgwODAvXG4gICAgZXZlbnRzID0gVElDS182MFxuICAgIHByb2Nlc3NfbmFtZT1IdHRwT2tcbiAgICBlbnZpcm9ubWVudD1TVVBFUlZJU09SX1VTRVJOQU1FPSdtdXN0YXBoYScsU1VQRVJWSVNPUl9QQVNTV09SRD0nc2VjcmV0JyxTVVBFUlZJU09SX1NFUlZFUl9VUkw9J2h0dHA6Ly9zdXBlcnZpc29yLm11c3RhcC5jb20nXG4gICAgPEJMQU5LTElORT5cbiAgICBbZ3JvdXA6c2VydmljZXNdXG4gICAgcHJvZ3JhbXMgPSB6ZW8saW5zdGFuY2UxXG4gICAgcHJpb3JpdHkgPSAxMFxuICAgIDxCTEFOS0xJTkU+XG4gICAgW2dyb3VwOm90aGVyc11cbiAgICBwcm9ncmFtcyA9IG90aGVyLG90aGVyMixvdGhlcjNcbiAgICBwcmlvcml0eSA9IDIwXG5cblxuYW5kIGlmIHdlIGxvb2sgdG8gZ2VuZXJhdGVkIHN1cGVydmlzb3JkIHNjcmlwdCB3ZSB3aWxsIHNlZSB0aGF0IHRoZSBcbmNvbmZpZ3VyYXRpb24gZmlsZSBpcyBnaXZlbiBhcyBhcmd1bWVudCB3aXRoIHRoZSAnLWMnIG9wdGlvbjo6XG5cbiAgICA+Pj4gY2F0KCdiaW4nLCAnc3VwZXJ2aXNvcmQnKVxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICBpbXBvcnQgc3lzOyBzeXMuYXJndi5leHRlbmQoW1wiLWNcIixcIi9zYW1wbGUtYnVpbGRvdXQvcGFydHMvc3VwZXJ2aXNvci9zdXBlcnZpc29yZC5jb25mXCJdKVxuICAgIDxCTEFOS0xJTkU+XG4gICAgaW1wb3J0IHN1cGVydmlzb3Iuc3VwZXJ2aXNvcmRcbiAgICA8QkxBTktMSU5FPlxuICAgIGlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6XG4gICAgICAgIHN1cGVydmlzb3Iuc3VwZXJ2aXNvcmQubWFpbigpXG5cblRoZSBjb250cm9sIHNjcmlwdCBjb250YWlucyBhbGwgc3BlY2lmaWVkIG9wdGlvbnMsIGxpa2Ugc2VydmVyIHVybCBhbmQgXG51c2VybmFtZS4gVGhpcyBhbGxvd3MgdG8gcnVuIGl0IGFzIGlzOjpcblxuICAgID4+PiBjYXQoJ2JpbicsICdzdXBlcnZpc29yY3RsJylcbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG4gICAgaW1wb3J0IHN5czsgc3lzLmFyZ3ZbMToxXSA9IFtcIi1jXCIsXCIvc2FtcGxlLWJ1aWxkb3V0L3BhcnRzL3N1cGVydmlzb3Ivc3VwZXJ2aXNvcmQuY29uZlwiXVxuICAgIDxCTEFOS0xJTkU+XG4gICAgaW1wb3J0IHN1cGVydmlzb3Iuc3VwZXJ2aXNvcmN0bFxuICAgIDxCTEFOS0xJTkU+XG4gICAgaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzpcbiAgICAgICAgc3VwZXJ2aXNvci5zdXBlcnZpc29yY3RsLm1haW4oc3lzLmFyZ3ZbMTpdKVxuXG5NZW1tb24gZGVsZWdhdGVzIGFsbCB3b3JrIHRvIHRoZSBlZ2cncyBtZW1tb24gUHl0aG9uIHNjcmlwdCBpdHNlbGY6OlxuXG4gICAgPj4+IGNhdCgnYmluJywgJ21lbW1vbicpXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIGltcG9ydCBzdXBlcmxhbmNlLm1lbW1vblxuICAgIDxCTEFOS0xJTkU+XG4gICAgaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzpcbiAgICAgICAgc3VwZXJsYW5jZS5tZW1tb24ubWFpbigpXG5cblRoZSBsb2cgZGlyZWN0b3J5IGlzIGNyZWF0ZWQgYnkgdGhlIHJlY2lwZTo6XG5cbiAgICA+Pj4gbHMoc2FtcGxlX2J1aWxkb3V0LCAndmFyJylcbiAgICBkICBsb2dcblxuWW91IGNhbiBhbHNvIHNwZWNpZnkgYSBjdXN0b20gcG9ydCB0byBydW4gdGhlIHN1cGVydmlzb3Igb24sIGFuZCB0aGUgY29udHJvbFxuc2NyaXB0IHdpbGwgYXV0b21hdGljYWxseSB0cnkgdG8gY29ubmVjdCB0byB0aGUgc3BlY2lmaWVkIHBvcnQ6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsXG4gICAgLi4uIFwiXCJcIlxuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID0gc3VwZXJ2aXNvclxuICAgIC4uLiBpbmRleCA9IGh0dHA6Ly9weXBpLnB5dGhvbi5vcmcvc2ltcGxlL1xuICAgIC4uLlxuICAgIC4uLiBbc3VwZXJ2aXNvcl1cbiAgICAuLi4gcmVjaXBlID0gZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvclxuICAgIC4uLiBwb3J0ID0gOTAwNVxuICAgIC4uLiBwcm9ncmFtcyA9XG4gICAgLi4uICAgICAgIDUwIG90aGVyICR7YnVpbGRvdXQ6YmluLWRpcmVjdG9yeX0vb3RoZXIgWy1uIDEwMF0gL3RtcFxuICAgIC4uLiBcIlwiXCIpXG5cbkhlcmUgd2Ugc3BlY2lmaWVkIHRoYXQgdGhlIHN1cGVydmlzb3Igd2lsbCBiZSBsYXVuY2hlZCBvbiBwb3J0IDkwMDUuIFdlIGNhbiBzZWVcbnRoYXQgdGhpcyBpcyBhbHNvIHNldCBpbiB0aGUgY29udHJvbCBzY3JpcHQ6XG5cbiAgICA+Pj4gXyA9IHN5c3RlbShidWlsZG91dClcbiAgICA+Pj4gY2F0KCdiaW4nLCAnc3VwZXJ2aXNvcmN0bCcpXG4gICAgLi4uXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIGltcG9ydCBzeXM7IHN5cy5hcmd2WzE6MV0gPSBbXCItY1wiLFwiL3NhbXBsZS1idWlsZG91dC9wYXJ0cy9zdXBlcnZpc29yL3N1cGVydmlzb3JkLmNvbmZcIl1cbiAgICA8QkxBTktMSU5FPlxuICAgIGltcG9ydCBzdXBlcnZpc29yLnN1cGVydmlzb3JjdGxcbiAgICA8QkxBTktMSU5FPlxuICAgIGlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6XG4gICAgICAgIHN1cGVydmlzb3Iuc3VwZXJ2aXNvcmN0bC5tYWluKHN5cy5hcmd2WzE6XSlcblxuSXQgaXMgcG9zc2libGUgdG8gcnVuIGh0dHAgc2VydmVyIHRocm91Z2ggYHVuaXggc29ja2V0XG48aHR0cDovL3N1cGVydmlzb3JkLm9yZy9jb25maWd1cmF0aW9uLmh0bWwjdW5peC1odHRwLXNlcnZlci1zZWN0aW9uLXZhbHVlcz5gXyByYXRoZXIgdGhhbiB0Y3A6XG5cbiAgICA+Pj4gd3JpdGUoJ2J1aWxkb3V0LmNmZycsXG4gICAgLi4uIFwiXCJcIlxuICAgIC4uLiBbYnVpbGRvdXRdXG4gICAgLi4uIHBhcnRzID0gc3VwZXJ2aXNvclxuICAgIC4uLiBpbmRleCA9IGh0dHA6Ly9weXBpLnB5dGhvbi5vcmcvc2ltcGxlL1xuICAgIC4uLlxuICAgIC4uLiBbc3VwZXJ2aXNvcl1cbiAgICAuLi4gcmVjaXBlID0gZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvclxuICAgIC4uLiBodHRwLXNvY2tldCA9IHVuaXhcbiAgICAuLi4gdXNlciA9IGZvb2JhclxuICAgIC4uLiBwYXNzd29yZCA9IGZvb2JhclxuICAgIC4uLiBmaWxlID0gL3RtcC9zdXBlcnZpc29yLnNvY2tcbiAgICAuLi4gcHJvZ3JhbXMgPVxuICAgIC4uLiAgICAgICA1MCBvdGhlciAke2J1aWxkb3V0OmJpbi1kaXJlY3Rvcnl9L290aGVyIFstbiAxMDBdIC90bXBcbiAgICAuLi4gXCJcIlwiKVxuICAgID4+PiBfID0gc3lzdGVtKGJ1aWxkb3V0KVxuICAgID4+PiBjYXQoJ3BhcnRzJywgJ3N1cGVydmlzb3InLCAnc3VwZXJ2aXNvcmQuY29uZicpICNkb2N0ZXN0OiArUkVQT1JUX05ESUZGXG4gICAgPEJMQU5LTElORT5cbiAgICAuLi5cbiAgICA8QkxBTktMSU5FPlxuICAgIFt1bml4X2h0dHBfc2VydmVyXVxuICAgIGZpbGUgPSAvdG1wL3N1cGVydmlzb3Iuc29ja1xuICAgIHVzZXJuYW1lID0gZm9vYmFyXG4gICAgcGFzc3dvcmQgPSBmb29iYXJcbiAgICBjaG1vZCA9IDA3MDBcbiAgICA8QkxBTktMSU5FPlxuICAgIFtzdXBlcnZpc29yY3RsXVxuICAgIHNlcnZlcnVybCA9IHVuaXg6Ly8vdG1wL3N1cGVydmlzb3Iuc29ja1xuICAgIHVzZXJuYW1lID0gZm9vYmFyXG4gICAgcGFzc3dvcmQgPSBmb29iYXJcbiAgICA8QkxBTktMSU5FPlxuICAgIC4uLlxuICAgIDxCTEFOS0xJTkU+XG5cbkNvbnRyaWJ1dG9yc1xuKioqKioqKioqKioqXG5cbi0gTXVzdGFwaGEgQmVuYWxpLCBBdXRob3Jcbi0gSGFubm8gU2NobGljaHRpbmcsIENvbnRyaWJ1dG9yXG4tIGdhd2VsLCBDb250cmlidXRvclxuLSBhYnVya2hhbHRlciwgQ29udHJpYnV0b3Jcbi0gQW1vcyBMYXR0ZWllciwgQ29udHJpYnV0b3Jcbi0gSmFjb2IgUmFkZm9yZCwgQ29udHJpYnV0b3Jcbi0gSm9uYXRoYW4gQmFsbGV0LCBDb250cmlidXRvclxuLSBEb21lbiBLb3phciwgQ29udHJpYnV0b3Jcbi0gTHVjaWUgTGVqYXJkLCBDb250cmlidXRvclxuLSBTZXJ2aWxpbyBBZnJlIFB1ZW50ZXMsIENvbnRyaWJ1dG9yXG4tIEp1YW4gQS4gRGlheiAobnVlY2VzKSwgQ29udHJpYnV0b3JcblxuRG93bmxvYWRcbioqKioqKioqIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiVU5LTk9XTiIs
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL3B5cGkucHl0aG9uLm9yZy9weXBpL2ZvdXJkaWdpdHMucmVjaXBlLnN1cGVydmlzb3IiLA==
ICAgICJrZXl3b3JkcyI6ICJidWlsZG91dCByZWNpcGUgc3VwZXJ2aXNvciIs
ICAgICJsaWNlbnNlIjogIlpQTCIs
ICAgICJtYWludGFpbmVyIjogbnVsbCw=
ICAgICJtYWludGFpbmVyX2VtYWlsIjogbnVsbCw=
ICAgICJuYW1lIjogImZvdXJkaWdpdHMucmVjaXBlLnN1cGVydmlzb3IiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvci8iLA==
ICAgICJwbGF0Zm9ybSI6ICJVTktOT1dOIiw=
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvci8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogIlVOS05PV04iLA==
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaS9mb3VyZGlnaXRzLnJlY2lwZS5zdXBlcnZpc29yIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvci8wLjE4ZGV2LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiBudWxsLA==
ICAgICJzdW1tYXJ5IjogIkEgYnVpbGRvdXQgcmVjaXBlIHRvIGluc3RhbGwgc3VwZXJ2aXNvciIs
ICAgICJ2ZXJzaW9uIjogIjAuMThkZXYiLA==
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA3OTIxMjks
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjE4ZGV2IjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyMTExOTBlNDBiMThlMWViZjU3MWM4YjQ4M2Q5YWViMWY0OTk2ZTNkNTBjOTdjN2JlNTMxNWUxZTE0ZGEyMzNlIiw=
ICAgICAgICAgICJtZDUiOiAiZjBmOWUxZWQ3ZTgyYTdlYjdkYWNjMjFjZjU5YzBkY2IiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmE1NzI1MzMwMzRkZjg3NWE0ZjdiNzE5MDE2NzEyZTcxOTY3MTZlZGJmNjZjZmRiOGFjMjQyMWY2NzE0YzA3MSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvci0wLjE4ZGV2LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMGY5ZTFlZDdlODJhN2ViN2RhY2MyMWNmNTljMGRjYiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzNjg1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxMi0wMS0xN1QxMzoyNzoxNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxMi0wMS0xN1QxMzoyNzoxNi42NjgwMTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yMS8xMS85MGU0MGIxOGUxZWJmNTcxYzhiNDgzZDlhZWIxZjQ5OTZlM2Q1MGM5N2M3YmU1MzE1ZTFlMTRkYTIzM2UvZm91cmRpZ2l0cy5yZWNpcGUuc3VwZXJ2aXNvci0wLjE4ZGV2LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMjExMTkwZTQwYjE4ZTFlYmY1NzFjOGI0ODNkOWFlYjFmNDk5NmUzZDUwYzk3YzdiZTUzMTVlMWUxNGRhMjMzZSIs
ICAgICAgICAibWQ1IjogImYwZjllMWVkN2U4MmE3ZWI3ZGFjYzIxY2Y1OWMwZGNiIiw=
ICAgICAgICAic2hhMjU2IjogIjJhNTcyNTMzMDM0ZGY4NzVhNGY3YjcxOTAxNjcxMmU3MTk2NzE2ZWRiZjY2Y2ZkYjhhYzI0MjFmNjcxNGMwNzEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImZvdXJkaWdpdHMucmVjaXBlLnN1cGVydmlzb3ItMC4xOGRldi50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZjBmOWUxZWQ3ZTgyYTdlYjdkYWNjMjFjZjU5YzBkY2IiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAxMzY4NSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTItMDEtMTdUMTM6Mjc6MTYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTItMDEtMTdUMTM6Mjc6MTYuNjY4MDE2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMjEvMTEvOTBlNDBiMThlMWViZjU3MWM4YjQ4M2Q5YWViMWY0OTk2ZTNkNTBjOTdjN2JlNTMxNWUxZTE0ZGEyMzNlL2ZvdXJkaWdpdHMucmVjaXBlLnN1cGVydmlzb3ItMC4xOGRldi50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
