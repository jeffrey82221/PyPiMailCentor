ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTWlrZVRoZVdhdGNoR3V5Iiw=
ICAgICJhdXRob3JfZW1haWwiOiAibWlrZUBQeVNpbXBsZUdVSS5jb20iLA==
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2MyBvciBsYXRlciAoTEdQTHYzKykiLA==
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAyLjciLA==
ICAgICAgIlRvcGljIDo6IE11bHRpbWVkaWEgOjogR3JhcGhpY3Mi
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIhW3B5c2ltcGxlZ3VpX2xvZ29dKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQzMTY1ODY3LWZlMDJlM2IyLThmNjItMTFlOC05ZmQwLWNjN2M4NmIxMTc3Mi5wbmcpXG5cblshW0Rvd25sb2Fkc10oaHR0cDovL3BlcHkudGVjaC9iYWRnZS9weXNpbXBsZWd1aSldKGh0dHA6Ly9wZXB5LnRlY2gvcHJvamVjdC9weXNpbXBsZWd1aSkgdGtpbnRlclxuXG5bIVtEb3dubG9hZHMgXShodHRwczovL3BlcHkudGVjaC9iYWRnZS9weXNpbXBsZWd1aTI3KV0oaHR0cHM6Ly9wZXB5LnRlY2gvcHJvamVjdC9weXNpbXBsZWd1aTI3KSB0a2ludGVyIDIuN1xuXG5bIVtEb3dubG9hZHNdKGh0dHBzOi8vcGVweS50ZWNoL2JhZGdlL3B5c2ltcGxlZ3VpcXQpXShodHRwczovL3BlcHkudGVjaC9wcm9qZWN0L3B5c2ltcGxlZ3VpcXQpIFF0XG5cblshW0Rvd25sb2Fkc10oaHR0cHM6Ly9wZXB5LnRlY2gvYmFkZ2UvcHlzaW1wbGVndWl3eCldKGh0dHBzOi8vcGVweS50ZWNoL3Byb2plY3QvcHlzaW1wbGVndWlXeCkgV3hQeXRob25cblxuWyFbRG93bmxvYWRzXShodHRwczovL3BlcHkudGVjaC9iYWRnZS9weXNpbXBsZWd1aXdlYildKGh0dHBzOi8vcGVweS50ZWNoL3Byb2plY3QvcHlzaW1wbGVndWlXZWIpIFdlYiAoUmVtaSlcblxuIVtEb2N1bWVudGF0aW9uIFN0YXR1c10oaHR0cHM6Ly9yZWFkdGhlZG9jcy5vcmcvcHJvamVjdHMvcHlzaW1wbGVndWkvYmFkZ2UvP3ZlcnNpb249bGF0ZXN0KVxuXG4hW0F3ZXNvbWUgTWV0ZXJdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvQXdlc29tZV9tZXRlci0xMDAteWVsbG93LnN2ZylcblxuIVtQeXRob24gVmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9QeXRob24tMi43XzMueC15ZWxsb3cuc3ZnKVxuXG4hW1B5dGhvbiBWZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1B5U2ltcGxlR1VJX0Zvcl9QeXRob25fMy54X1ZlcnNpb24tNC40LjEtcmVkLnN2Zz9sb25nQ2FjaGU9dHJ1ZSZzdHlsZT1mb3ItdGhlLWJhZGdlKVxuXG4hW1B5dGhvbiBWZXJzaW9uXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL1B5U2ltcGxlR1VJX0Zvcl9QeXRob25fMi43X1ZlcnNpb24tMi40LjEtYmx1ZS5zdmc/bG9uZ0NhY2hlPXRydWUmc3R5bGU9Zm9yLXRoZS1iYWRnZSlcblxuIVtQeXRob24gVmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9QeVNpbXBsZUdVSVF0X1ZlcnNpb24tMC4yNi4wLW9yYW5nZS5zdmc/bG9uZ0NhY2hlPXRydWUmc3R5bGU9Zm9yLXRoZS1iYWRnZSlcblxuIVtQeXRob24gVmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9QeVNpbXBsZUdVSVd4X3ZlcnNpb24tMC4xMS4wLW9yYW5nZS5zdmc/bG9uZ0NhY2hlPXRydWUmc3R5bGU9Zm9yLXRoZS1iYWRnZSlcblxuIVtQeXRob24gVmVyc2lvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9iYWRnZS9QeVNpbXBsZUdVSVdlYl9WZXJzaW9uLTAuMjguMS1vcmFuZ2Uuc3ZnP2xvbmdDYWNoZT10cnVlJnN0eWxlPWZvci10aGUtYmFkZ2UpXG5cbiMgUHlTaW1wbGVHVUkgVXNlcidzIE1hbnVhbFxuIyMgVGhpcyBtYW51YWwgaXMgY3JhbW1lZCBmdWxsIG9mIGFuc3dlcnMgc28gc3RhcnQgeW91ciBzZWFyY2ggZm9yIGFuc3dlcnMgaGVyZS4gUmVhZC9TZWFyY2ggdGhpcyBQUklPUiB0byBvcGVuaW5nIGFuIElzc3VlIG9uIEdpdEh1Yi5cblxuIyMgUHl0aG9uIEdVSSBGb3IgSHVtYW5zIC0gVHJhbnNmb3JtcyB0a2ludGVyLCBRdCwgUmVtaSwgV3hQeXRob24gaW50byBwb3J0YWJsZSBwZW9wbGUtZnJpZW5kbHkgUHl0aG9uaWMgaW50ZXJmYWNlc1xuXG4jIyMjIEp1bHktMjAxOSBOb3RlIC0gVGhpcyByZWFkbWUgaXMgYmVpbmcgZ2VuZXJhdGVkIGZyb20gdGhlIFB5U2ltcGxlR1VJLnB5IGZpbGUgbG9jYXRlZCBvbiBHaXRIdWIuICBBcyBhIHJlc3VsdCwgc29tZSBvZiB0aGUgY2FsbHMgb3IgcGFyYW1ldGVycyBtYXkgbm90IG1hdGNoIHRoZSBQeVNpbXBsZUdVSSB0aGF0IHlvdSBwaXAgaW5zdGFsbGVkLlxuXG4jIyMjIExvb2tpbmcgZm9yIGEgR1VJIHBhY2thZ2U/ICAgICBBcmUgeW91Li4uLlxuXG4qIGxvb2tpbmcgdG8gdGFrZSB5b3VyIFB5dGhvbiBjb2RlIGZyb20gdGhlIHdvcmxkIG9mIGNvbW1hbmQgbGluZXMgYW5kIGludG8gdGhlIGNvbnZlbmllbmNlIG9mIGEgR1VJPyBcbiogc2l0dGluZyBvbiBhIFJhc3BiZXJyeSAqKlBpKiogd2l0aCBhIHRvdWNoc2NyZWVuIHRoYXQncyBnb2luZyB0byB3YXN0ZSBiZWNhdXNlIHlvdSBkb24ndCBoYXZlIHRoZSB0aW1lIHRvIGxlYXJuIGEgR1VJIFNESz9cbiogaW50byBNYWNoaW5lIExlYXJuaW5nIGFuZCBhcmUgc2ljayBvZiB0aGUgY29tbWFuZCBsaW5lP1xuKiBhbiBJVCBndXkvZ2FsIHRoYXQgaGFzIHdyaXR0ZW4gc29tZSBjb29sIHRvb2xzIGJ1dCBkdWUgdG8gY29ycG9yYXRlIHBvbGljaWVzIGFyZSB1bmFibGUgdG8gc2hhcmUgdW5sZXNzIGFuIEVYRSBmaWxlP1xuKiB3YW50aW5nIHRvIGRpc3RyaWJ1dGUgeW91ciBQeXRob24gY29kZSB0byBXaW5kb3dzIHVzZXJzIGFzIGEgc2luZ2xlIC5FWEUgZmlsZSB0aGF0IGxhdW5jaGVzIHN0cmFpZ2h0IGludG8gYSBHVUksIG11Y2ggbGlrZSBhIFdpbkZvcm1zIGFwcD9cbiogd2FudCB0byBzaGFyZSB5b3VyIHByb2dyYW0gd2l0aCB5b3VyIGZyaWVuZHMgb3IgZmFtaWxpZXMgKHRoYXQgYXJlbid0IHNvIGZyZWFraXNoIHRoYXQgdGhleSBoYXZlIFB5dGhvbiBydW5uaW5nKVxuKiB3YW50aW5nIHRvIHJ1biBhIHByb2dyYW0gaW4geW91ciBzeXN0ZW0gdHJheT9cbiogYSB0ZWFjaGVyIHdhbnRpbmcgdG8gdGVhY2ggeW91ciBzdHVkZW50cyBob3cgdG8gcHJvZ3JhbSB1c2luZyBhIEdVST9cbiogYSBzdHVkZW50IHRoYXQgd2FudHMgdG8gcHV0IGEgR1VJIG9udG8geW91ciBwcm9qZWN0IHRoYXQgd2lsbCBibG93IGF3YXkgeW91ciB0ZWFjaGVyP1xuKiBsb29raW5nIGZvciBhIEdVSSBwYWNrYWdlIHRoYXQgaXMgXCJzdXBwb3J0ZWRcIiBhbmQgaXMgYmVpbmcgY29uc3RhbnRseSBkZXZlbG9wZWQgdG8gaW1wcm92ZSBpdD9cbiogbG9uZ2luZyBmb3IgZG9jdW1lbnRhdGlvbiBhbmQgc2NvcmVzIG9mIGV4YW1wbGVzP1xuXG4qKkxvb2sgbm8gZnVydGhlciwgeW91J3ZlIGZvdW5kIHlvdXIgR1VJIHBhY2thZ2UqKi5cblxuIyMjIyBUaGUgYmFzaWNzXG5cbiogQ3JlYXRlIHdpbmRvd3MgdGhhdCBsb29rIGFuZCBvcGVyYXRlIF9pZGVudGljYWxseV8gdG8gdGhvc2UgY3JlYXRlZCBkaXJlY3RseSB3aXRoIHRraW50ZXIsIFF0LCBXeFB5dGhvbiwgYW5kIFJlbWkuXG4qIFJlcXVpcmVzIDEvMiB0byAxLzEwdGggdGhlIGFtb3VudCBvZiBjb2RlIGFzIHVuZGVybHlpbmcgZnJhbWV3b3Jrcy5cbiogT25lIGFmdGVybm9vbiBpcyBhbGwgdGhhdCBpcyByZXF1aXJlZCB0byBsZWFybiB0aGUgUHlTaW1wbGVHVUkgcGFja2FnZSBfYW5kXyB3cml0ZSB5b3VyIGZpcnN0IGN1c3RvbSBHVUkuXG4qIFN0dWRlbnRzIGNhbiBiZWdpbiB1c2luZyB3aXRoaW4gdGhlaXIgZmlyc3Qgd2VlayBvZiBQeXRob24gZWR1Y2F0aW9uLlxuKiBObyBjYWxsYmFjayBmdW5jdGlvbnMuIFlvdSBkbyBub3QgbmVlZCB0byB3cml0ZSB0aGUgd29yZCBgY2xhc3NgIF9hbnl3aGVyZV8gaW4geW91ciBjb2RlLlxuKiBBY2Nlc3MgdG8gbmVhcmx5IGV2ZXJ5IHVuZGVybHlpbmcgR1VJIEZyYW1ld29yaydzIFdpZGdldHMuXG4qIFN1cHBvcnRzIGJvdGggUHl0aG9uIDIuNyAmIDMgd2hlbiB1c2luZyB0a2ludGVyXG4qIFN1cHBvcnRzIGJvdGggUHlTaWRlMiBhbmQgUHlRdDUgKGxpbWl0ZWQgc3VwcG9ydClcbiogRWZmb3J0bGVzc2x5IG1vdmUgYWNyb3NzIHRraW50ZXIsIFF0LCBXeFB5dGhvbiwgYW5kIHRoZSBXZWIgKFJlbWkpIGJ5IGNoYW5naW5nIG9ubHkgdGhlIGltcG9ydCBzdGF0ZW1lbnRcbiogVGhlICpvbmx5KiB3YXkgdG8gd3JpdGUgYm90aCBkZXNrdG9wIGFuZCB3ZWIgYmFzZWQgR1VJcyBhdCB0aGUgc2FtZSB0aW1lIGluIFB5dGhvblxuKiBEZXZlbG9wZWQgZnJvbSBub3RoaW5nIGFzIGEgcHVyZSBQeXRob24gaW1wZWxlbWVudGF0aW9uIHdpdGggUHl0aG9uIGZyaWVuZGx5IGludGVyZmFjZXMuXG4qIFJ1biB5b3VyIHByb2dyYW0gaW4gdGhlIFN5c3RlbSBUcmF5IHVzaW5nIFd4UHl0aG9uLiBPciwgY2hhbmdlIHRoZSBpbXBvcnQgYW5kIHJ1biBpdCBvbiBRdCB3aXRoIG5vIG90aGVyIGNoYW5nZXMuXG4qIFdvcmtzIHdpdGggUXQgRGVzaWduZXJcbiogQnVpbHQgaW4gRGVidWdnZXJcbiogQWN0aXZlbHkgbWFpbnRhaW5lZCBhbmQgZW5oYW5jZWQgLSA0IHBvcnRzIGFyZSB1bmRlcndheSwgYWxsIGJlaW5nIHVzZWQgYnkgdXNlcnMuXG4qIENvcnBvcmF0ZSBhcyB3ZWxsIGFzIGhvbWUgdXNlcnMuXG4qIEFwcGVhbGluZyB0byBib3RoIG5ld2NvbWVycyB0byBQeXRob24gYW5kIGV4cGVyaWVuZWQgUHl0aG9uaXN0YXMuIFxuKiBUaGUgZm9jdXMgaXMgZW50aXJlbHkgb24gdGhlIGRldmVsb3BlciAoeW91KSBhbmQgbWFraW5nIHRoZWlyIGxpZmUgZWFzaWVyLCBzaW1wbGlmaWVkLCBhbmQgaW4gY29udHJvbC5cbiogMTcwKyBEZW1vIFByb2dyYW1zIHRlYWNoIHlvdSBob3cgdG8gaW50ZWdyYXRlIHdpdGggbWFueSBwb3B1bGFyIHBhY2thZ2VzIGxpa2UgT3BlbkNWLCBNYXRwbG90bGliLCBQeUdhbWUsIGV0Yy4gXG4qIDIwMCBwYWdlcyBvZiBkb2N1bWVudGF0aW9uLCBhIENvb2tib29rLCBidWlsdC1pbiBoZWxwIHVzaW5nIGRvY3N0cmluZ3MsIGluIHNob3J0IGl0J3MgaGVhdmlseSBkb2N1bWVudGVkXG5cbiMjIEdVSSBEZXZlbG9wbWVudCBkb2VzIG5vdCBoYXZlIHRvIGJlIGRpZmZpY3VsdCBub3IgcGFpbmZ1bC4gIEl0IGNhbiBiZSBGVU5cblxuIyMjIyBXaGF0IHVzZXJzIGFyZSBzYXlpbmcgYWJvdXQgUHlTaW1wbGVHVUlcbioqKihOb25lIG9mIHRoZXNlIGNvbW1lbnRzIHdlcmUgc29saWNpdGVkICYgYXJlIG5vdCBwYWlkIGVuZG9yc2VtZW50cyAtIG90aGVyIHRoYW4gYSBodWdlIHRoYW5rIHlvdSB0aGV5IHJlY2VpdmVkISkqKipcblxuXCJJJ3ZlIGJlZW4gd29ya2luZyB0byBsZWFybiBQeVFUIGZvciB0aGUgcGFzdCB3ZWVrIGluIG15IG9mZiB0aW1lIGFzIGFuIGludHJvIHRvIEdVSSBkZXNpZ24gYW5kIGhvdyB0byBhcHBseSBpdCB0byBteSBleGlzdGluZyBzY3JpcHRzLi4uIFRvb2sgbWUgfjMwIG1pbnV0ZXMgdG8gZmlndXJlIG91dCBQeVNpbXBsZUdVSSBhbmQgZ2V0IG15IHNjcmlwdHMgd29ya2luZyB3aXRoIGEgR1VJLlwiXG5cblwiUHl0aG9uIGhhcyBiZWVuIGFuIGFic29sdXRlIG5pZ2h0bWFyZSBmb3IgbWUgYW5kIEkndmUgYXZvaWRlZCBpdCBsaWtlIHRoZSBwbGFndWUuICBVbnRpbCBJIHNhdyBQeXNpbXBsZUdVSS5cIlxuXG5cIkkndmUgYmVlbiBwcmV0dHkgYW1hemVkIGF0IGhvdyBtdWNoIG1vcmUgaW50dWl0aXZlIGl0IGlzIHRoYW4gcmF3IHRrL3F0LiBUaGUgZHVkZSBkZXZlbG9waW5nIGl0IGlzIHN1cGVyIGFjdGl2ZSBvbiB0aGUgcHJvamVjdCB0b28gc28gaWYgeW91IGNvbWUgYWNyb3NzIHNpdHVhdGlvbnMgdGhhdCB5b3UganVzdCBjYW4ndCBnZXQgdGhlIGNvZGUgdG8gZG8gd2hhdCB5b3Ugd2FudCB5b3UgY2FuIG1ha2UgYnVnL2VuaGFuY2VtZW50IGlzc3VlcyB0aGF0IGFyZSBhbG1vc3QgYXNzdXJlZCB0byBnZXQgYSBtZWFuaW5nZnVsIHJlc3BvbnNlLlwiXG5cblwiVGhpcyBsaWJyYXJ5IGlzIHRoZSBlYXNpZXN0IHdheSBvZiBndWkgcHJvZ3JhbW1pbmcgaW4gcHl0aG9uISBJJ20gdG90YWxseSBpbiBsb3ZlIHdpdGggaXRcIlxuXG5cIldvdyB0aGF0IHJlYWRtZSBpcyBleHRlbnNpdmUgYW5kIGdyZWF0LlwiIChoZWFyIHRoZSBsb3ZlIGZvciBkb2NzIG9mdGVuKVxuXG5cIkNvbWluZyBmcm9tIFIsIFB5dGhvbiBpcyBhYnNvbHV0ZWx5IHNsaWNrIGZvciBHVUlzLiBQeVNpbXBsZUdVSSBpcyBhIGRyZWFtLlwiXG5cblwiSSBoYXZlIGJlZW4gd3JpdGluZyBQeXRob24gcHJvZ3JhbXMgZm9yIGFib3V0IDQgb3IgNSBtb250aHMgbm93LiBVcCB1bnRpbCB0aGlzIHdlZWsgSSBuZXZlciBoYWQgbHVjayB3aXRoIGFueSBVSSBsaWJyYXJpZXMgbGlrZSBUa2ludGVyLCBRdCwgS2l2eS4gIEkgd2VudCBmcm9tIG5vdCBldmVuIGJlaW5nIGFibGUgdG8gbG9hZCBhIHdpbmRvdyBpbiBUa2ludGVyIHJlbGlhYmx5IHRvIG1ha2luZyBhIGxvYWRpbmcgc2NyZWVuLCBhbmQgZnVsbCBwcm9ncmFtIGluIG9uZSBuaWdodCB3aXRoIFB5U2ltcGxlR1VJLlwiXG5cblwiSSBsb3ZlIFB5U2ltcGxlR1VJISBJJ3ZlIGJlZW4gdGVhY2hpbmcgaXQgaW4gbXkgUHl0aG9uIGNsYXNzZXMgaW5zdGVhZCBvZiBUa2ludGVyLlwiXG5cbiMjIyBTVEFSVCBIRVJFIC0gVXNlciBNYW51YWwgd2l0aCBUYWJsZSBvZiBDb250ZW50c1xuXG5bUmVhZFRoZURvY3NdKGh0dHA6Ly93d3cuUHlTaW1wbGVHVUkub3JnKSAgPC0tLS0tLSBUSEUgYmVzdCBwbGFjZSB0byByZWFkIHRoZSBkb2NzIGR1ZSB0byBUT0MsIGFsbCBkb2NzIGluIDEgcGxhY2UsIGFuZCBiZXR0ZXIgZm9ybWF0dGluZy4gU1RBUlQgaGVyZSBpbiB5b3VyIGVkdWNhdGlvbi4gIEVhc3kgdG8gcmVtZW1iZXIgUHlTaW1wbGVHVUkub3JnLlxuXG4jIyMjIFF1aWNrIExpbmtzIFRvIEhlbHAgYW5kIFRoZSBMYXRlc3QgTmV3cyBhbmQgUmVsZWFzZXNcblxuW0hvbWVwYWdlIC0gTGFzdGVzdCBSZWFkbWUgYW5kIENvZGUgLSBHaXRIdWJdKGh0dHA6Ly93d3cuUHlTaW1wbGVHVUkuY29tKSAgRWFzeSB0byByZW1lbWJlcjogUHlTaW1wbGVHVUkuY29tXG5cbltBbm5vdW5jZW1lbnRzIG9mIExhdGVzdCBEZXZlbG9wbWVudHMsIFJlbGVhc2UgbmV3cywgTWlzY10oaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL2lzc3Vlcy8xNDIpXG5cbltDT09LQk9PSyFdKGh0dHA6Ly9Db29rYm9vay5QeVNpbXBsZUdVSS5vcmcpXG5cbltCcmllZiBUdXRvcmlhbF0oaHR0cDovL1R1dG9yaWFsLlB5U2ltcGxlR1VJLm9yZylcblxuW0xhdGVzdCBEZW1vcyBhbmQgTWFzdGVyIEJyYW5jaCBvbiBHaXRIdWJdKGh0dHAvL3d3dy5QeVNpbXBsZUdVSS5jb20pXG5cbltSZXBsLml0IEhvbWUgZm9yIFB5U2ltcGxlR1VJXShodHRwczovL3JlcGwuaXQvQFB5U2ltcGxlR1VJKVxuXG5bTG90cyBvZiBzY3JlZW5zaG90c10oaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL2lzc3Vlcy8xKVxuXG5bSG93IHRvIHN1Ym1pdCBhbiBJc3N1ZV0oaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL2lzc3Vlcy8xNjQ2KVxuXG5UaGUgWW91VHViZSB2aWRlb3MgLSBJZiB5b3UgbGlrZSBpbnN0cnVjdGlvbmFsIHZpZGVvcywgdGhlcmUgYXJlIG92ZXIgMTUgdmlkZW9zXG4tIFs1IHBhcnQgc2VyaWVzIG9mIGJhc2ljc10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vcGxheWxpc3Q/bGlzdD1QTGw4ZEQwZG95cnZITW9KR1RkTXRnTHVIeW1hcUpWanp0KVxuLSBbMTAgcGFydCBzZXJpZXMgb2YgbW9yZSBkZXRhaWxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXlsaXN0P2xpc3Q9UExsOGREMGRveXJ2R3lYak9STnZpclRJWnhLb3BKcjhzMClcbi0gW1RoZSBOYWtlZCBUcnV0aCAoQW4gdXBkYWF0ZSBvbiB0aGUgdGVjaG5vbG9neSldKGh0dHBzOi8veW91dHUuYmUvQkZUeEJtaWhzVVkpXG4tIFRoZXJlIGFyZSBudW1lcm91cyBzaG9ydCB2aWRlb3MgYWxzbyBvbiB0aGF0IGNoYW5uZWwgdGhhdCBkZW1vbnN0cmF0ZSBQeVNpbXBsZUdVSSBiZWluZyB1c2VkXG5cbiMgQWJvdXQgVGhlIFB5U2ltcGxlR1VJIERvY3VtZW50YXRpb24gU3lzdGVtXG5cblRoaXMgVXNlcidzIE1hbnVhbCAoYWxzbyB0aGUgcHJvamVjdCdzIHJlYWRtZSkgaXMgb25lICoqKnZpdGFsKioqIHBhcnQgb2YgdGhlIFB5U2ltcGxlR1VJIHByb2dyYW1taW5nIGVudmlyb25tZW50LiAgXG5cbklmIHlvdSBhcmUgYSBwcm9mZXNzaW9uYWwgb3Igc2tpbGxlZCBpbiBob3cgdG8gZGV2ZWxvcCBzb2Z0d2FyZSwgdGhlbiB5b3UgdW5kZXJzdGFuZCB0aGUgcm9sZSBvZiBkb2N1bWVudGF0aW9uIGluIHRoZSB3b3JsZCBvZiB0ZWNobm9sb2d5IGRldmVsb3BtZW50LiAgWW91IGNhbiBza2lwIHRoaXMgYml0Li4uLiBsb29rIGZvciB0aGUgYm9sZCBcIioqR08gVE8gSEVSRSoqXCIgYmVsb3cuXG5cblJURk0gaXMgbm90IGEgbmV3IGFjcm9ueW0uIEl0IHN0cmV0Y2hlcyBiYWNrIHRvIDE5NzksIHRoZSBkYXduIG9mIHRoZSBjb21wdXRlci1lcmEgYW5kIGluIHBhcnRpY3VsYXIgdGhlIG1pY3JvcHJvY2Vzc29yLiAgVGhlIHBvaW50IGlzIHRoYXQgdGhpcyBpcyBub3QgYSBuZXcgcHJvYmxlbS4gIEl0J3MgYSB2ZXJ5IG9sZCBwcm9ibGVtLlxuXG5CbHVudG5lc3MgaXMgcmVxdWlyZWQgaGVyZSBhcyB0aGUgc3VidGxlIGFwcHJvYWNoIGhhcyBub3Qgd29ya2VkIGluIHRoZSBwYXN0OlxuXG4qKipJdCBXSUxMIGJlIHJlcXVpcmVkLCBhdCB0aW1lcywgZm9yIHlvdSB0byByZWFkIG9yIHNlYXJjaCB0aGlzIGRvY3VtZW50IGluIG9yZGVyIHRvIGJlIHN1Y2Nlc3NmdWwuKioqXG5cblJlLXJlYWQgdGhhdCBzdGF0ZW1lbnQuICBUaGlzICoqd2lsbCoqIGJlIGEgc2VyaW91cyBwcm9ibGVtIGZvciB5b3UgaWYgeW91J3JlIHRoZSB0eXBlIG9mIHBlcnNvbiB0aGF0IGZpbmRzIGl0IFwicXVpY2tlciBhbmQgZWFzaWVyIHRvIHBvc3Qgb24gU3RhY2tPdmVyZmxvdyByYXRoZXIgdGhhbiByZWFkaW5nIGRvY3VtZW50YXRpb25cIi4gIFxuXG5JZiB5b3UgaGF2ZSBub3QgeWV0IG1hdHVyZWQgdG8gdGhlIHBvaW50IHlvdSBhcmUgYWJsZSB0byB1bmRlcnRhbmQgdGhpcyBza2lsbCBvciBjaG9vc2UgdG8gbm90IGZvbGxvdyBpdCwgdGhlbiBwbGVhc2Ugc2F2ZSAqKipldmVyeW9uZSoqKiB0aGUgcGFpbiBvZiBkb2luZyAqKmZvciB5b3UqKiB3aGF0IHlvdSwgYXMgYSBkZXZlbG9wZXIsIHNvZnR3YXJlIGVuZ2luZWVyLCBvciB3YW5uYSBiZSBjb2RlciwgbXVzdCBkbyBvbiB5b3VyIG93bi4gIEl0J3MgYSB2aXRhbCBza2lsbCBmb3IgeW91IHRvIGxlYXJuLiAgXG5cbldhbnQgdG8gYmUgYSBcInJlYWwgZW5naW5lZXJcIj8gVGhlbiBmb2xsb3cgXCJyZWFsIGVuZ2luZWVyaW5nIHByYWN0aWNlc1wiIHN1Y2ggYXMgXCJyZWFkaW5nXCIuICBZb3UgYXJlIGxlYXJuaW5nIGEgTkVXIEdVSSBwYWNrYWdlLiAgWW91J3ZlIG5vdCBzZWVuIGFueXRoaW5nIGxpa2UgaXQuICBEb24ndCBiZSBzbyBhcnJvZ2FudCBhcyB0byBiZWxpZXZlIHlvdSB3aWxsIG5ldmVyIG5lZWQgdG8gcmVhZCBkb2N1bWVudGF0aW9uLlxuXG5VR0gsIHdoeSBkb2VzIHRoaXMgbmVlZCB0byBiZSBzYWlkP1xuXG4qKipHTyBUTyBIRVJFKioqIGlmIGluc3RydWN0ZWQgYWJvdmUuXG5cbkkgYXBwb2xvZ2l6ZSB0byB0aGUgb3RoZXIgOTUlIG9mIHlvdSB0aGF0IHRoaXMuLi4uLiBwYXRoZXRpYy4uLi4gcmVtaW5kZXIgbmVlZHMgdG8gYmUgYWRkZWQsIGJ1dCBzYWRseSB0aGVyZSdzIGEgbmVlZCBmb3IgaXQuXG5cblRoZXJlIGFyZSA1IHJlc291cmNlcyB0aGF0IHdvcmsgdG9nZXRoZXIgdG8gcHJvdmlkZSB0byB5b3UgdGhlIGZhc3Rlc3QgcGF0aCB0byBzdWNjZXNzLiAgVGhleSBhcmU6XG5cbjEuIFRoaXMgVXNlcidzIE1hbnVhbFxuMi4gVGhlIENvb2tib29rXG4zLiBUaGUgMTcwKyBEZW1vIFByb2dyYW1zXG40LiBEb2NzdHJpbmdzIGVuYWJsZSB5b3UgdG8gYWNjZXNzIGhlbHAgZGlyZWN0bHkgZnJvbSBQeXRob24gb3IgeW91ciBJREVcbjUuIFNlYXJjaGluZyB0aGUgR2l0SHViIElzc3VlcyBhcyBhIGxhc3QgcmVzb3J0IChzZWFyY2ggYm90aCBvcGVuIGFuZCBjbG9zZWQgaXNzdWVzKVxuXG5QYWNlIHlvdXJzZWxmLiAgVGhlIGludGlhbCBwcm9ncmVzcyBpcyBleGNpdGluZyBhbmQgRkFTVCBQQUNFRC4gIEhvd2V2ZXIsIEdVSXMgdGFrZSB0aW1lIGFuZCB0aG91Z2h0IHRvIGJ1aWxkLiAgVGFrZSBhIGRlZXAgYnJlYXRoIGFuZCB1c2UgdGhlIHByb3ZpZGVkIG1hdGVyaWFscyBhbmQgeW91J2xsIGRvIGZpbmUuICBEb24ndCBza2lwIHRoZSBkZXNpZ24gcGhhc2Ugb2YgeW91ciBHVUkgYWZ0ZXIgeW91IHJ1biBzb21lIGRlbW9zIGFuZCBnZXQgdGhlIGhhbmcgb2YgdGhpbmdzLiAgSWYgeW91J3ZlIHRyaWVkIG90aGVyIEdVSSBmcmFtZXdvcmtzIGJlZm9yZSwgc3VjY2Vzc2Z1bCBvciBub3QsIHRoZW4geW91IGtub3cgeW91J3JlIGFscmVhZHkgd2F5IGFoZWFkIG9mIHRoZSBnYW1lIHVzaW5nIFB5U2ltcGxlR1VJIHZlcnN1cyB0aGUgdW5kZXJseWluZyBHVUkgZnJhbWV3b3Jrcy4gIEl0IG1heSBmZWVsIGxpa2UgdGhlIDMgZGF5cyB5b3UndmUgYmVlbiB3b3JraW5nIG9uIHlvdXIgY29kZSBoYXMgYmVlbiBmb3JldmVyLCBidXQgYnkgY29tcGFyaXNvbiBvZiAzIGRheXMgbGVhcm5pbmcgUXQsIFB5U2ltcGxlR1VJIHdpbGwgbG9vayB0cml2aWFsIHRvIGxlYXJuLlxuXG5JdCBpcyBub3QgYnkgYWNjaWRlbnQgdGhhdCB0aGlzIHNlY3Rpb24sIGFib3V0IGRvY3VtZW50YXRpb24sIGlzIGF0IHRoZSBUT1Agb2YgdGhpcyBkb2N1bWVudC5cblxuVGhpcyBkb2N1bWVudGF0aW9uIGlzIG5vdCBIVUdFIGluIGxlbmd0aCBmb3IgYSBwYWNrYWdlIHRoaXMgc2l6ZS4gSW4gZmFjdCBpdCdzIHN0aWxsIG9uZSBkb2N1bWVudCBhbmQgaXQncyB0aGUgcmVhZG1lIGZvciB0aGUgR2l0SHViLiAgSXQncyBub3Qgd3JpdHRlbiBpbiBjb21wbGV4IGVuZ2xpc2guICBJdCBpcyB1bmRlcnN0YW5kYWJsZSBieSBjb21wbGV0ZSBiZWdpbm5lcnMuICBBbmQgcHJlc3NpbmcgYENvbnRyb2wrRmAgaXMgYWxsIHlvdSBuZWVkIHRvIGRvIHRvIHNlYXJjaCB0aGlzIGRvY3VtZW50LiAgVVNVQUxMWSB5b3UnbGwgZmluZCBsZXNzIHRoYW4gNiBtYXRjaGVzLlxuXG4jIyBEb2N1bWVudGF0aW9uIGFuZCBEZW1vcyBHZXQgT3V0IG9mIERhdGVcblxuU29tZXRpbWVzIHRoZSBkb2N1bWVuYXRpb24gZG9lc24ndCBtYXRjaCBleGFjdGx5IHRoZSB2ZXJzaW9uIG9mIHRoZSBjb2RlIHlvdSdyZSBydW5uaW5nLiAgU29tZXRpbWVzIGRlbW8gcHJvZ3JhbXMgaGF2ZW4ndCBiZWVuIHVwZGF0ZWQgdG8gbWF0Y2ggYSBjaGFuZ2UgbWFkZSB0byB0aGUgU0RLLiAgVGhpbmdzIGRvbid0IGhhcHBlbiBzaW11bHRhbmVvdXNseSBnZW5lcmFsbHkgc3BlYWtpbmcuICBTbywgaXQgbWF5IHZlcnkgd2VsbCBiZSB0aGF0IHlvdSBmaW5kIGFuIGVycm9yIG9yIGluY29uc2lzdGVuY3kgb3Igc29tZXRoaW5nIG5vIGxvbmdlciB3b3JrcyB3aXRoIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBhbiBleHRlcm5hbCBsaWJyYXJ5LlxuXG5JZiB5b3UndmUgZm91bmQgb25lIG9mIHRoZXNlIHByb2JsZW1zLCBhbmQgeW91J3ZlIHNlYXJjaGVkIHRvIG1ha2Ugc3VyZSBpdCdzIG5vdCBhIHNpbXBsZSBtaXN0YWtlIG9uIHlvdXIgcGFydCwgdGhlbiBieSBBTEwgbWVhbnMgbG9nIGFuIElzc3VlIG9uIHRoZSBHaXRIdWIuICBEb24ndCBiZSBhZnJhaWQgdG8gcmVwb3J0IHByb2JsZW1zIGlmIHlvdSd2ZSB0YWtlbiB0aGUgc2ltcGxlIHN0ZXBzIG9mIGNoZWNraW5nIG91dCB0aGUgZG9jcyBmaXJzdC5cblxuIyBQbGF0Zm9ybXNcblxuIyMgSGFyZHdhcmUgYW5kIE9TIFN1cHBvcnRcblxuUHlTaW1wbGVHVUkgcnVucyBvbiBXaW5kb3dzLCBMaW51eCBhbmQgTWFjLCBqdXN0IGxpa2UgdGtpbnRlciwgUXQsIFd4UHl0aG9uIGFuZCBSZW1pIGRvLiAgSWYgeW91IGNhbiBnZXQgdGhlIHVuZGVybHlpbmcgR1VJIEZyYW1ld29yayBpbnN0YWxsZWQgLyBydW5uaW5nIG9uIHlvdXIgbWFjaGluZSB0aGVuIFB5U2ltcGxlR1VJIHdpbGwgYWxzbyBydW4gdGhlcmUuXG5cbiMjIyBIYXJkd2FyZVxuXG4qIFBDJ3MsIERlc2t0b3AsIExhcHRvcHNcbiogTWFjcyBvZiBhbGwgdHlwZXNcbiogUmFzcGJlcnJ5IFBpXG4qIEFuZHJvaWQgZGV2aWNlcyBsaWtlIHBob25lcyBhbmQgdGFibGV0c1xuKiBWaXJ0dWFsIG1hY2hpbmUgb25saW5lIChubyBoYXJkd2FyZSkgLSByZXBsLml0XG5cbiMjIyBPU1xuXG4qIFdpbmRvd3MgNywgOCwgMTBcbiogTGludXggb24gUEMgLSBUZXN0ZWQgb24gKiptYW55KiogZGlzdHJpYnV0aW9uc1xuKiBMaW51eCBvbiBSYXNwYm5lcnJ5IFBpXG4qIExpbnV4IG9uIEFuZHJvaWQgLSBDYW4gdXNlIGVpdGhlciBUZXJtdXggb3IgUHlEcm9pZDNcbiogTWFjIE9TIChTb3JyeSBkb24ndCBrbm93IG11Y2ggYWJvdXQgTWFjcyBvdGhlciB0aGFuIE1hY3MgZG9uJ3QgbGlrZSB0a2ludGVyKVxuXG4jIyMjIFB5dGhvbiB2ZXJzaW9uc1xuXG5BcyBvZiA5LzI1LzIwMTggKipib3RoIFB5dGhvbiAzIGFuZCBQeXRob24gMi43IGFyZSBzdXBwb3J0ZWQqKiB3aGVuIHVzaW5nICoqdGtpbnRlciB2ZXJzaW9uKiogb2YgUHlTaW1wbGVHVUkhIFRoZSBQeXRob24gMyB2ZXJzaW9uIGlzIG5hbWVkIGBQeVNpbXBsZUdVSWAuIFRoZSBQeXRob24gMi43IHZlcnNpb24gaXMgYFB5U2ltcGxlR1VJMjdgLiAgVGhleSBhcmUgaW5zdGFsbGVkIHNlcGFyYXRlbHkgYW5kIHRoZSBpbXBvcnRzIGFyZSBkaWZmZXJlbnQuIFNlZSBpbnN0cnVjdGlvbnMgaW4gSW5zdGFsbGF0aW9uIHNlY3Rpb24gZm9yIG1vcmUgaW5mby4gICoqTm9uZSoqIG9mIHRoZSBvdGhlciBwb3J0cyBjYW4gdXNlIFB5dGhvbiAyLlxuXG5Ob3RlIHRoYXQgdGhlIDIuNyBwb3J0IHdpbGwgKmNlYXNlIHRvIGV4aXN0IG9uIHRoaXMgR2l0SHViKiBvbiBKYW4gMSwgMjAyMC4gIElmIHlvdSB3b3VsZCBsaWtlIHRvIGtub3cgaG93IG11Y2ggdGltZSB5b3UgaGF2ZSB0byBtb3ZlIG92ZXIgdG8gdGhlIFB5dGhvbiAzIHZlcnNpb24gb2YgUHlTaW1wbGVHVUksIHRoZW4gZ28gaGVyZTogaHR0cHM6Ly9weXRob25jbG9jay5vcmcvLiAgVGhlIG9ubHkgdGhpbmcgdGhhdCB3aWxsIGJlIGF2YWlsYWJsZSBpcyBhbiB1bnN1cHBvcnRlZCBQeVBJIHJlbGVhc2Ugb2YgUHlTaW1wbGVHVUkyNy5cblxuQnkgXCJ3aWxsIGNlYXNlIHRvIGV4aXN0IG9uIHRoaXMgR2l0SHViXCIgSSBtZWFuLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZW50aXJlbHkuICBObyBzb3VyY2UgY29kZSwgbm8gc3VwcG9ydGluZyBwcm9ncmFtcy4gIE5vdGhpbmcuICBJZiB5b3UncmUgc3R1Y2sgdXNpbmcgMi43IGluIERlY2VtYmVyLCBpdCB3b3VsZCBiZWhvb3ZlIHlvdSB0byBmb3JrIHRoZSAyLjcgY29kZSBvbiBEZWMgMzEsIDIwMTkuICBMZWdhY3kgUHl0aG9uIGRvZXNuJ3QgaGF2ZSBhIHBlcm1hbmVudCBob21lIGhlcmUuXG5cbiMjIE91dHB1dCBEZXZpY2VzXG5cbkluIGFkZGl0aW9uIHRvIHJ1bm5pbmcgYXMgYSBkZXNrdG9wIEdVSSwgeW91IGNhbiBhbHNvIHJ1biB5b3VyIEdVSSBpbiBhIHdlYiBicm93c2VyIGJ5IHJ1bm5pbmcgUHlTaW1wbGVHVUlXZWIuIFxuXG5UaGlzIGlzIGlkZWFsIGZvciBcImhlYWRsZXNzXCIgc2V0dXBzIGxpa2UgYSBSYXNwYmVycnkgUGkgdGhhdCBpcyBhdCB0aGUgY29yZSBvZiBhIHJvYm90IG9yIG90aGVyIGRlc2lnbiB0aGF0IGRvZXMgbm90IGhhdmUgYSBub3JtYWwgZGlzcGxheSBzY3JlZW4uICBGb3IgdGhlc2UgZGV2aWNlcywgcnVuIGEgUHlTaW1wbGVHVUlXZWIgcHJvZ3JhbSB0aGF0IG5ldmVyIGV4aXRzLiAgXG5cblRoZW4gY29ubmVjdCB0byB5b3VyIGFwcGxpY2F0aW9uIGJ5IGdvaW5nIHRvIHRoZSBQaSdzIElQIGFkZHJlc3MgKGFuZCBwb3J0ICMpIHVzaW5nIGEgYnJvd3NlciBhbmQgeW91J2xsIGJlIGluIGNvbW11bmljYXRpb24gd2l0aCB5b3VyIGFwcGxpY2F0aW9uLiAgWW91IGNhbiB1c2UgaXQgdG8gbWFrZSBjb25maWd1cmF0aW9uIGNoYW5nZXMgb3IgZXZlbiBjb250cm9sIGEgcm9ib3Qgb3Igb3RoZXIgcGllY2Ugb2YgaGFyZHdhcmQgdXNpbmcgYnV0dG9ucyBpbiB5b3VyIEdVSVxuXG4jIyBBIENvbXBsZXRlIFB5U2ltcGxlR1VJIFByb2dyYW0gKEdldHRpbmcgVGhlIEdpc3QpXG5cbkJlZm9yZSBkaXZpbmcgaW50byBkZXRhaWxzLCBoZXJlJ3MgYSBkZXNjcmlwdGlvbiBvZiB3aGF0IFB5U2ltcGxlR1VJIGlzL2RvZXMgYW5kIHdoeSB0aGF0IGlzIHNvIHBvd2VyZnVsLlxuXG5Zb3Uga2VlcCBoZWFyaW5nIFwiY3VzdG9tIHdpbmRvd1wiIGluIHRoaXMgZG9jdW1lbnQgYmVjYXVzZSB0aGF0J3Mgd2hhdCB5b3UncmUgbWFraW5nIGFuZCB1c2luZy4uLiB5b3VyIG93biBjdXN0b20gd2luZG93cy5cblxuKipFTEVNRU5UUyoqIGlzIGEgd29yZCB5b3UnbGwgc2VlIGV2ZXJ5d2hlcmUuLi4gaW4gdGhlIGNvZGUsIGRvY3VtZW50YXRpb24sIC4uLiBFbGVtZW50cyA9PSBQeVNpbXBsZUdVSSdzIFdpZGdldHMuICBBcyB0byBub3QgY29uZnVzZSBhIHRraW50ZXIgQnV0dG9uIFdpZGdldCB3aXRoIGEgUHlTaW1wbGVHVUkgQnV0dG9uIEVsZW1lbnQsIGl0IHdhcyBkZWNpZGVkIHRoYXQgUHlTaW1wbGVHVUkncyBXaWRnZXRzIHdpbGwgYmUgY2FsbGVkIEVsZW1lbnRzIHRvIGF2b2lkIGNvbmZ1c2lvbi5cblxuV291bGRuJ3QgaXQgYmUgbmljZSBpZiBhIEdVSSB3aXRoIDMgXCJyb3dzXCIgb2YgRWxlbWVudHMgd2FzIGRlZmluZWQgaW4gMyBsaW5lcyBvZiBjb2RlPyAgVGhhdCdzIGV4YWN0bHkgaG93IGl0J3MgZG9uZS4gIEVhY2ggcm93IG9mIEVsZW1lbnRzIGlzIGEgbGlzdC4gIFB1dCBhbGwgdGhvc2UgbGlzdHMgdG9nZXRoZXIgYW5kIHlvdSd2ZSBnb3QgYSB3aW5kb3cuXG5cbldoYXQgYWJvdXQgaGFuZGxpbmcgYnV0dG9uIGNsaWNrcyBhbmQgc3R1ZmYuICBUaGF0J3MgNCBsaW5lcyBvZiB0aGUgY29kZSBiZWxvdyBiZWdpbm5pbmcgd2l0aCB0aGUgd2hpbGUgbG9vcC4gIFxuXG5Ob3cgbG9vayBhdCB0aGUgYGxheW91dGAgdmFyaWFibGUgYW5kIHRoZW4gbG9vayBhdCB0aGUgd2luZG93IGdyYXBoaWMgYmVsb3cuICBEZWZpbmluZyBhIHdpbmRvdyBpcyB0YWtpbmcgYSBkZXNpZ24geW91IGNhbiBzZWUgdmlzdWFsbHkgYW5kIHRoZW4gdmlzdWFsbHkgY3JlYXRpbmcgaXQgaW4gY29kZS4gIE9uZSByb3cgb2YgRWxlbWVudHMgPSAxIGxpbmUgb2YgY29kZSAoY2FuIHNwYW4gbW9yZSBpZiB5b3VyIHdpbmRvdyBpcyBjcm93ZGVkKS4gIFRoZSB3aW5kb3cgaXMgZXhhY3RseSB3aGF0IHdlIHNlZSBpbiB0aGUgY29kZS4gIEEgbGluZSBvZiB0ZXh0LCBhIGxpbmUgb2YgdGV4dCBhbmQgYW4gaW5wdXQgYXJlYSwgYW5kIGZpbmFsbHkgb2sgYW5kIGNhbmNlbCBidXR0b25zLlxuXG5UaGlzIG1ha2VzIHRoZSBjb2RpbmcgcHJvY2VzcyBleHRyZW1lbHkgcXVpY2sgYW5kIHRoZSBhbW91bnQgb2YgY29kZSB2ZXJ5IHNtYWxsXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG4jIEFsbCB0aGUgc3R1ZmYgaW5zaWRlIHlvdXIgd2luZG93LiBUaGlzIGlzIHRoZSBQU0cgbWFnaWMgY29kZSBjb21wYWN0b3IuLi5cbmxheW91dCA9IFsgIFtzZy5UZXh0KCdTb21lIHRleHQgb24gUm93IDEnKV0sXG4gICAgICAgICAgICBbc2cuVGV4dCgnRW50ZXIgc29tZXRoaW5nIG9uIFJvdyAyJyksIHNnLklucHV0VGV4dCgpXSxcbiAgICAgICAgICAgIFtzZy5PSygpLCBzZy5DYW5jZWwoKV1dXG5cbiMgQ3JlYXRlIHRoZSBXaW5kb3dcbndpbmRvdyA9IHNnLldpbmRvdygnV2luZG93IFRpdGxlJywgbGF5b3V0KVxuIyBFdmVudCBMb29wIHRvIHByb2Nlc3MgXCJldmVudHNcIlxud2hpbGUgVHJ1ZTogICAgICAgICAgICAgXG4gICAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbiAgICBpZiBldmVudCBpbiAoTm9uZSwgJ0NhbmNlbCcpOlxuICAgICAgICBicmVha1xuXG53aW5kb3cuQ2xvc2UoKVxuYGBgXG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYxMDc3MTUzLWNkZmMwYjAwLWEzZWItMTFlOS05ZTkzLWQ2ZWMyZmZiNDQyYS5wbmcpXG5cbllvdSBnb3R0YSBhZG1pdCB0aGF0IHRoZSBjb2RlIGFib3ZlIGlzIGEgbG90IG1vcmUgXCJmdW5cIiBsb29raW5nIHRoYXQgdGtpbnRlciBjb2RlIHlvdSd2ZSBzdHVkaWVkIGJlZm9yZS4gIEFkZGluZyBzdHVmZiB0byB5b3VyIEdVSSBpcyAqKip0cml2aWFsKioqLiAgWW91IGNhbiBjbGVhcmx5IHNlZSB0aGUgXCJtYXBwaW5nXCIgb2YgdGhvc2UgMyBsaW5lcyBvZiBjb2RlIHRvIHNwZWNpZmljIEVsZW1lbnRzIGxhaWQgb3V0IGluIGEgV2luZG93LiAgIEl0J3Mgbm90IGEgdHJpY2suICBJdCdzIGhvdyBlYXN5IGl0IGlzIHRvIGNvZGUgaW4gUHlTaW1wbGVHVUkuICBXaXRoIHRoaXMgc2ltcGxlIGNvbmNlcHQgY29tZXMgdGhlIGFiaWxpdHkgdG8gY3JlYXRlIGFueSB3aW5kb3cgbGF5b3V0IHlvdSB3aXNoLiAgVGhlcmUgYXJlIHBhcmFtZXRlcnMgdG8gbW92ZSBlbGVtZW50cyBhcm91bmQgaW5zaWRlIHRoZSB3aW5kb3cgc2hvdWxkIHlvdSBuZWVkIG1vcmUgY29udHJvbC5cblxuSXQncyBhIHRocmlsbCB0byBjb21wbGV0ZSB5b3VyIEdVSSBwcm9qZWN0IHdheSBhaGVhZCBvZiB3aGF0IHlvdSBlc3RpbWF0ZWQuICBTb21lIHBlb3BsZSB0YWtlIHRoYXQgZXh0cmEgdGltZSB0byBwb2xpc2ggdGhlaXIgR1VJIHRvIG1ha2UgaXQgZXZlbiBuaWNlciwgYWRkaW5nIG1vcmUgYmVsbHMgYW5kIHdoaXN0bGVzIGJlY2F1c2UgaXQncyBzbyBlYXN5IGFuZCBpdCdzIGEgbG90IG9mIGZ1biB0byBzZWUgc3VjY2VzcyBhZnRlciBzdWNjZXNzIGFzIHlvdSB3cml0ZSB5b3VyIHByb2dyYW0uXG5cblNvbWUgYXJlIG1vcmUgYWR2YW5jZWQgdXNlcnMgYW5kIHB1c2ggdGhlIGJvdW5kYXJpZXMgb3V0IGFuZCBleHRlbmQgUHlTaW1wbGVHVUkgdXNpbmcgdGhlaXIgb3duIGV4dGVuc2lvbnMuXG5cbk90aGVycywgbGlrZSBJVCBwZW9wbGUgYW5kIGhhY2tlcnMgYXJlIGJ1c2lseSBjcmFua2luZyBvdXQgR1VJIHByb2dyYW0gYWZ0ZXIgR1VJIHByb2dyYW0sIGFuZCBjcmVhdGluZyB0b29scyB0aGF0IG90aGVycyBjYW4gdXNlLiAgRmluYWxseSB0aGVyZSdzIGFuIGVhc3kgd2F5IHRvIHRocm93IGEgR1VJIG9udG8geW91ciBwcm9ncmFtIGFuZCBnaXZlIGl0IHRvIHNvbWVvbmUuICBJdCdzIGEgcHJldHR5IGJpZyBsZWFwIGluIGNhcGFiaWxpdHkgZm9yIHNvbWUgcGVvcGxlLiAgSXQncyBHUkVBVCB0byBoZWFyIHRoZXNlIHN1Y2Nlc3Nlcy4gIEl0J3MgbW90aXZhdGluZyBmb3IgZXZlcnlvbmUgaW4gdGhlIGVuZC4gIFlvdXIgc3VjY2VzcyBjYW4gZWFzaWx5IG1vdGl2YXRlIHRoZSBuZXh0IHBlcnNvbiB0byBnaXZlIGl0IGEgdHJ5IGFuZCBhbHNvIHBvdGVudGlhbGx5IGJlIHN1Y2Nlc3NmdWwuXG5cblVzdWFsbHkgdGhlcmUncyBhIG9uZSB0byBvbmUgbWFwcGluZyBvZiBhIFB5U2ltcGxlR1VJIEVsZW1lbnQgdG8gYSBHVUkgV2lkZ2V0LiBBIFwiVGV4dCBFbGVtZW50XCIgaW4gUHlTaW1wbGVHVUkgPT0gXCJMYWJlbCBXaWRnZXRcIiBpbiB0a2ludGVyLiAgV2hhdCByZW1haW5zIGNvbnN0YW50IGZvciB5b3UgYWNyb3NzIGFsbCBQeVNpbXBsZUdVSSBwbGF0Zm9ybXMgaXMgdGhhdCBubyBtYXR0ZXIgd2hhdCB0aGUgdW5kZXJseWluZyBHVUkgZnJhbWV3b3JrIGNhbGxzIHRoZSB0aGluZyB0aGF0IHBsYWNlcyB0ZXh0IGluIHlvdXIgd2luZG93LCB5b3UnbGwgYWx3YXlzIHVzZSB0aGUgUHlTaW1wbGVHVUkgVGV4dCBFbGVtZW50IHRvIGFjY2VzcyBpdC5cblxuIyMjIFRoZSBmaW5hbCBiaXQgb2YgbWFnaWMgaXMgaW4gaG93IEVsZW1lbnRzIGFyZSBjcmVhdGVkIGFuZCBjaGFuZ2VkLiAgXG5cblNvIGZhciB5b3UndmUgc2VlbiBzaW1wbHkgbGF5b3V0cyB3aXRoIG5vIGN1c3RvbWl6YXRpb24gb2YgdGhlIEVsZW1lbnRzLiAgQ3VzdG9taXppbmcgYW5kIGNvbmZpZ3VyaW5nIEVsZW1lbnRzIGlzIGFub3RoZXIgcGxhY2UgUHlTaW1wbGVHVUkgdXRpbGl6ZXMgdGhlIFB5dGhvbiBsYW5ndWFnZSB0byBtYWtlIHlvdXIgbGlmZSBlYXNpZXIuICBcblxuV2hhdCBhYm91dCBFbGVtZW50cyB0aGF0IGhhdmUgc2V0dGluZ3Mgb3RoZXIgdGhhbiB0aGUgc3RhbmRhcmQgc3lzdGVtIHNldHRpbmdzPyAgIFdoYXQgaWYgSSB3YW50IG15IFRleHQgdG8gYmUgYmx1ZSwgd2l0aCBhIENvdXJpZXIgZm9udCBvbiBhIGdyZWVuIGJhY2tncm91bmQuICBJdCdzIHdyaXR0ZW4gcXVpdGUgc2ltcGx5OlxuXG5gYGBweXRob25cblRleHQoJ1RoaXMgaXMgc29tZSB0ZXh0JywgZm9udD0nQ291cmllciAxMicsIHRleHRfY29sb3I9J2JsdWUnLCBiYWNrZ3JvdW5kX2NvbG9yPSdncmVlbicpXG5gYGBcblxuVGhlIFB5dGhvbiBuYW1lZCBwYXJhbWV0ZXJzIGFyZSAqKipleHRlbnNpdmVseSoqKiBpbiBQeVNpbXBsZUdVSS4gVGhleSBhcmUga2V5IGluIG1ha2luZyB0aGUgY29kZSBjb21wYWN0LCByZWFkYWJsZSwgYW5kIHRyaXZpYWwgdG8gd3JpdGUuXG5cbkFzIHlvdSdsbCBsZWFybiBpbiBsYXRlciBzZWN0aW9ucyB0aGF0IGRpc2N1c3MgdGhlIHBhcmFtZXRlcnMgdG8gdGhlIEVsZW1lbnRzLCB0aGVyZSBhcmUgYSBMT1Qgb2Ygb3B0aW9ucyBhdmlsYWJsZSB0byB5b3Ugc2hvdWxkIHlvdSBjaG9vc2UgdG8gdXNlIHRoZW0uICBUaGUgYFRleHQgRWxlbWVudGAgaGFzIDE1IHBhcmFtZXRlcnMgdGhhdCB5b3UgY2FuIGNoYW5nZS4gIFRoaXMgaXMgb25lIHJlYXNvbiB3aHkgUHlDaGFybSBpcyBzdWdnZXN0ZWQgYXMgeW91ciBJREUuLi4gaXQgZG9lcyBhIGZhbnRhc3RpYyBqb2Igb2YgZGlzcGxheWluZyBkb2N1bWVudGF0aW9uIGFzIHlvdSB0eXBlIGluIHlvdXIgY29kZS5cblxuIyMjIFRoYXQncyAqVGhlKiAqQmFzaWNzKlxuXG5XaGF0IGRvIHlvdSB0aGluaz8gIEVhc2llciBzbyBmYXIgdGhhbiB5b3VyIHByZXZpb3VzIHJ1bi1pbnMgd2l0aCBHVUlzIGluIFB5dGhvbj8gIFNvbWUgcHJvZ3JhbXMsIG1hbnkgaW4gZmFjdCwgYXJlIGFzIHNpbXBsZSBhcyB0aGlzIGV4YW1wbGUgaGFzIGJlZW4uXG5cbkJ1dCBQeVNpbXBsZUdVSSBjZXJ0YWlubHkgZG9lcyAqKm5vdCoqIGVuZCBoZXJlLiAgVGhpcyBpcyB0aGUgYmVnaW5uaW5nLiBUaGUgc2NhZmZvbGRpbmcgeW91J2xsIGJ1aWxkIHVwb24uXG5cbiMjIFRoZSBVbmRlcmx5aW5nIEdVSSBGcmFtZXdvcmtzICYgU3RhdHVzIG9mIEVhY2hcblxuQXQgdGhlIG1vbWVudCB0aGVyZSBhcmUgNCBhY2l0dmVseSBkZXZlbG9wZWQgYW5kIG1haW50YWluZWQgXCJwb3J0c1wiIG9mIFB5U2ltcGxlR1VJLiAgVGhlc2UgaW5jbHVkZTpcblxuMS4gdGtpbnRlciAtIEZ1bGx5IGNvbXBsZXRlXG4yLiBRdCB1c2luZyBQeXNpZGUyIC0gQWxwaGEgc3RhZ2UuICBOb3QgYWxsIGZlYXR1cmVzIGZvciBhbGwgRWxlbWVudHMgYXJlIGRvbmVcbjMuIFd4UHl0aG9uIC0gRGV2ZWxvcG1lbnQgc3RhZ2UsIHByZS1yZWxlYXNlci4gIE5vdCBhbGwgRWxlbWVudHMgYXJlIGRvbmUuIFNvbWUga25vd24gcHJvYmxlbXMgd2l0aCBtdWx0aXBsZSB3aW5kb3dzXG40LiBSZW1pIChXZWIgYnJvd3NlciBzdXBwb3J0KSAtIERldmVsb3BtZW50IHN0YWdlLCBwcmUtcmVsZWFzZS5cblxuV2hpbGUgUHlTaW1wbGVHVUksIHRoZSB0a2ludGVyIHBvcnQsIGlzIHRoZSBvbmx5IDEwMCUgY29tcGxldGVkIHZlcnNpb24gb2YgUHlTaW1wbGVHVUksIHRoZSBvdGhlciAzIHBvcnRzIGhhdmUgYSBMT1Qgb2YgZnVuY3Rpb25hbGl0eSBpbiB0aGVtIGFuZCBhcmUgaW4gYWN0aXZlIHVzZSBieSBhIGxhcmdlIHBvcnRpb24gb2YgdGhlIGluc3RhbGxhdGlvbnMuICBZb3UgY2FuIHNlZSB0aGUgbnVtYmVyIG9mIFBpcCBpbnN0YWxscyBhdCB0aGUgdmVyeSB0b3Agb2YgdGhpcyBkb2N1bWVudCB0byBnZXQgYSBjb21wYXJpc29uIGFzIHRvIHRoZSBzaXplIG9mIHRoZSBpbnN0YWxsIGJhc2UgZm9yIGVhY2ggcG9ydC4gIFRoZSBcImJhZGdlc1wiIGFyZSByaWdodCBhZnRlciB0aGUgbG9nby5cblxuIyBUaGUgUHlTaW1wbGVHVUkgXCJGYW1pbHlcIlxuXG4jIyBXaGF0J3MgVGhlIEJpZyBEZWFsPyBXaGF0IGlzIGl0P1xuXG5QeVNpbXBsZUdVSSB3cmFwcyB0a2ludGVyLCBRdCwgV3hQeXRob24gYW5kIFJlbWkgc28gdGhhdCB5b3UgZ2V0IGFsbCB0aGUgc2FtZSB3aWRnZXRzLCBidXQgeW91IGludGVyYWN0IHdpdGggdGhlbSBpbiBhIG1vcmUgZnJpZW5kbHkgd2F5IHRoYXQncyBjb21tb24gYWNyb3NzIHRoZSBwb3J0cy4gXG5cbldoYXQgZG9lcyBhIHdyYXBwZXIgZG8gKFlvISBQU0cgaW4gdGhlIGhvdXNlISk/ICBJdCBkb2VzIHRoZSBsYXlvdXQsIGJvaWxlcnBsYXRlIGNvZGUsIGNyZWF0ZXMgYW5kIG1hbmFnZXMgdGhlIEdVSSBXaWRnZXRzIGZvciB5b3UgYW5kIHByZXNlbnRzIHlvdSB3aXRoIGEgKipzaW1wbGUsIGVmZmljaWVudCBpbnRlcmZhY2UuKiogICBNb3N0IGltcG9ydGFudGx5LCBpdCBtYXBzIHRoZSBXaWRnZXRzIGluIHRraW50ZXIvUXQvV3gvUmVtaSBpbnRvIFB5U2ltcGxlR1VJIEVsZW1lbnRzLiAgRmluYWxseSwgaXQgcmVwbGFjZXMgdGhlIEdVSXMnIGV2ZW50IGxvb3Agd2l0aCBvbmUgb2Ygb3VyIG93bi4gIFxuXG5Zb3UndmUgc2VlbiBleGFtcGxlcyBvZiB0aGUgY29kZSBhbHJlYWR5LiAgVGhlIGJpZyBkZWFsIG9mIGFsbCB0aGlzIGlzIHRoYXQgYW55b25lIGNhbiBjcmVhdGUgYSBHVUkgc2ltcGx5IGFuZCBxdWlja2x5IHRoYXQgbWF0Y2hlcyBHVUlzIHdyaXR0ZW4gaW4gdGhlIG5hdGl2ZSBHVUkgZnJhbWV3b3JrLiAgWW91IGNhbiBjcmVhdGUgY29tcGxleCBsYXlvdXRzIHdpdGggY29tcGxleCBlbGVtZW50IGludGVyYWN0aW9ucy4gIEFuZCwgdGhhdCBjb2RlIHlvdSB3cm90ZSB0byBydW4gb24gdGtpbnRlciB3aWxsIGFsc28gcnVuIG9uIFF0IGJ5IGNoYW5naW5nIHlvdXIgaW1wb3J0IHN0YXRlbWVudC5cblxuSWYgeW91IHdhbnQgYSBkZWVwZXIgZXhwbGFuYXRpb24gYWJvdXQgdGhlIFthcmNoaXRlY3R1cmUgb2YgUHlTaW1wbGVHVUldKGh0dHBzOi8vcHlzaW1wbGVndWkucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2FyY2hpdGVjdHVyZS8pLCB5b3UnbGwgZmluZCBpdCBvbiBSZWFkVGhlRG9jcyBpbiB0aGUgc2FtZSBkb2N1bWVudCBhcyB0aGUgUmVhZG1lICYgQ29va2Jvb2suIFRoZXJlIGlzIGEgdGFiIGF0IHRoZSB0b3Agd2l0aCBsYWJlbHMgZm9yIGVhY2ggZG9jdW1lbnQuXG5cbiMjIFRoZSBcIlBvcnRzXCJcblxuVGhlcmUgYXJlIGRpc3RpbmN0IHBvcnRzIGhhcHBlbmluZyBhcyBtZW50aW9uZWQgYWJvdmUuICBFYWNoIGhhdmUgdGhlaXIgb3duIGxvY2F0aW9uIG9uIEdpdEh1YiB1bmRlciB0aGUgbWFpbiBwcm9qZWN0LiAgVGhleSBoYXZlIHRoZWlyIG93biBSZWFkbWUgd2l0aCBpcyBhbiAqYXVnbWVudGF0aW9uKiBvZiB0aGlzIGRvY3VtZW50Li4uIHRoZXkgYXJlIG1lYW50IHRvIGJlIHVzZWQgdG9nZXRoZXIuXG5cblB5U2ltcGxlR1VJIGlzIHJlbGVhc2VkIG9uIFB5UEkgYXMgNSBkaXN0aW5jdCBwYWNrYWdlcy5cbjEuIFB5U2ltcGxlR1VJIC0gdGtpbnRlciB2ZXJzaW9uXG4yLiBQeVNpbXBsZUdVSTI3IC0gdGtpbnRlciB2ZXJzaW9uIHRoYXQgcnVucyBvbiAyLjdcbjMuIFB5U2ltcGxlR1VJV3ggLSBXeFB5dGhvbiB2ZXJzaW9uXG40LiBQeVNpbXBsZUdVSVF0IC0gUHlTaWRlZDIgdmVyc2lvblxuNS4gUHlTaW1wbGVHVUlXZWIgLSBUaGUgd2ViIChSZW1pKSB2ZXJzaW9uXG5cbllvdSB3aWxsIG5lZWQgdG8gaW5zdGFsbCB0aGVtIHNlcGFyYXRlbHlcblxuVGhlcmUgaXMgYWxzbyBhbiBhY2NvbXBhbnlpbmcgZGVidWdnZXIga25vd24gYXMgYGltd2F0Y2hpbmd5b3VgLiAgSWYgeW91IGFyZSBydW5uaW5nIHRoZSB0a2ludGVyIHZlcnNpb24gb2YgUHlTaW1wbGVHVUksIHlvdSB3aWxsIG5vdCBuZWVkIHRvIGluc3RhbGwgdGhlIGRlYnVnZ2VyIGFzIHRoZXJlIGlzIGEgdmVyc2lvbiBlbWJlZGRlZCBkaXJlY3RseSBpbnRvIFB5U2ltcGxlR1VJLlxuXG4jIyBRdCBWZXJzaW9uXG5cblF0IHdhcyB0aGUgc2Vjb25kIHBvcnQgYWZ0ZXIgdGtpbnRlci4gIEl0IGlzIHRoZSAybmQgbW9zdCBjb21wbGV0ZSB3aXRoIHRoZSBvcmlnaW5hbCBQeVNpbXBsZUdVSSAodGtpbnRlcikgYmVpbmcgdGhlIG1vc3QgY29tcGxldGUgYW5kIGlzIGxpa2VseSB0byBjb250aW51ZSB0byBiZSB0aGUgZnJvbnQtcnVubmVyLiAgQWxsIG9mIHRoZSBFbGVtZW50cyBhcmUgYXZhaWxhYmxlIG9uIFB5U2ltcGxlR1VJUXQuXG5cbkFzIG1lbnRpb25lZCBwcmV2aW91c2x5IGVhY2ggcG9ydCBoYXMgYW4gYXJlYS4gIEZvciBRdCwgeW91IGNhbiBsZWFybiBtb3JlIG9uIHRoZSBbUHlTaW1wbGVHVUlRdCBHaXRIdWIgc2l0ZV0oaHR0cHM6Ly9naXRodWIuY29tL01pa2VUaGVXYXRjaEd1eS9QeVNpbXBsZUdVSS90cmVlL21hc3Rlci9QeVNpbXBsZUdVSVF0KS4gICoqVGhlcmUgaXMgYSBzZXBhcmF0ZSBSZWFkbWUgZmlsZSBmb3IgdGhlIFF0IHZlcnNpb24qKiB0aGF0IHlvdSdsbCBmaW5kIHRoZXJlLiAgVGhpcyBpcyB0cnVlIGZvciBhbGwgb2YgdGhlIFB5U2ltcGxlR1VJIHBvcnRzLlxuXG5HaXZlIGl0IGEgc2hvdCBpZiB5b3UncmUgbG9va2luZyBmb3Igc29tZXRoaW5nIGEgYml0IG1vcmUgXCJtb2Rlcm5cIi4gIFB5U2ltcGxlR1VJUXQgaXMgY3VycmVudGx5IGluICoqQWxwaGEqKi4gICpBbGwgb2YgdGhlIHdpZGdldHMgYXJlIG9wZXJhdGlvbmFsIGJ1dCBzb21lIG1heSBub3QgeWV0IGJlIGZ1bGwtZmVhdHVyZWQuKiAgSWYgb25lIGlzIG1pc3NpbmcgYW5kIHlvdXIgcHJvamVjdCBuZWVkcyBpdCwgbG9nIGFuIElzc3VlLiAgSXQncyBob3cgbmV3IGZlYXR1cmVzIGFyZSBib3JuLlxuXG5IZXJlIGlzIGEgc3VtbWFyeSBvZiB0aGUgUXQgRWxlbWVudHMgd2l0aCBubyByZWFsIGVmZm9ydCBzcGVudCBvbiBkZXNpZ24gY2xlYXJseS4gIEl0J3MgYW4gZXhhbXBsZSBvZiB0aGUgXCJ0ZXN0IGhhcm5lc3NcIiB0aGF0IGlzIGEgcGFydCBvZiBlYWNoIHBvcnQuIElmIHlvdSBydW4gdGhlIFB5U2ltcGxlR1VJLnB5IGZpbGUgaXRzZWxmIHRoZW4geW91J2xsIHNlZSBvbmUgb2YgdGhlc2UgdGVzdHMuXG5cbkFzIHlvdSBjYW4gc2VlLCB5b3UndmUgZ290IGEgZnVsbCBhcnJheSBvZiBHVUkgRWxlbWVudHMgdG8gd29yayB3aXRoLiAgQWxsIHRoZSBzdGFuZGFyZCBvbmVzIGFyZSB0aGVyZSBpbiBhIHNpbmdsZSB3aW5kb3cuICBTbyBkb24ndCBiZSBmb29sZWQgaW50byB0aGlua2luZyBQeVNpbXBsZUdVSVF0IGlzIGJhcmVseSB3b3JraW5nIG9yIGRvZXNuJ3QgaGF2ZSBtYW55IHdpZGdldHMgdG8gY2hvb3NlIGZyb20uICBZb3UgZXZlbiBnZXQgVFdPIFwiQm9udXMgRWxlbWVudHNcIiAtIGBEaWFsYCBhbmQgYFN0cmV0Y2hgXG5cbiMjIFd4UHl0aG9uIFZlcnNpb25cblxuW1B5U2ltcGxlR1VJV3ggR2l0SHViIHNpdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9QeVNpbXBsZUdVSS9QeVNpbXBsZUdVSS90cmVlL21hc3Rlci9QeVNpbXBsZUdVSVd4KS4gICoqVGhlcmUgaXMgYSBzZXBhcmF0ZSBSZWFkbWUgZmlsZSBmb3IgdGhlIFd4UHl0aG9uIHZlcnNpb24qKi5cblxuU3RhcnRlZCBpbiBsYXRlIERlY2VtYmVyIDIwMTggUHlTaW1wbGVHVUlXeCBzdGFydGVkIHdpdGggdGhlIFN5c3RlbVRyYXkgSWNvbiBmZWF0dXJlLiAgICBUaGlzIGVuYWJsZWQgdGhlIHBhY2thZ2UgdG8gaGF2ZSBvbmUgZnVsbHkgZnVuY3Rpb25pbmcgZmVhdHVyZSB0aGF0IGNhbiBiZSB1c2VkIGFsb25nIHdpdGggdGtpbnRlciB0byBwcm92aWRlIGEgY29tcGxldGUgcHJvZ3JhbS4gICAgVGhlIFN5c3RlbSBUcmF5IGZlYXR1cmUgaXMgY29tcGxldGUgYW5kIHdvcmtpbmcgdmVyeSB3ZWxsLiAgSXQgd2FzIHVzZWQgbm90IGxvbmcgYWdvIGluIGEgY29ycG9yYXRlIHNldHRpbmcgYW5kIGhhcyBiZWVuIHBlcmZvcm1pbmcgd2l0aCBmZXcgcHJvYmxlbXMgcmVwb3J0ZWQuXG5cblRoZSBXaW5kb3dpbmcgY29kZSB3YXMgY29taW5nIHRvZ2V0aGVyIHdpdGggUmVhZHMgb3BlcmF0aW9uYWwuICBUaGUgZWxlbWVudHMgd2VyZSBnZXR0aW5nIGNvbXBsZXRlZCBvbiBhIHJlZ3VsYXIgYmFzaXMuIEJ1dCBJIHJhbiBpbnRvIG11bHRpd2luZG93IHByb2JsZW1zLiAgQW5kIGl0IHdhcyBhdCBhYm91dCB0aGlzIHRpbWUgdGhhdCBSZW1pIHdhcyBzdWdnZXN0ZWQgYXMgYSBwb3J0LlxuXG5SZW1pICh0aGUgXCJ3ZWIgcG9ydFwiKSBvdmVybmlnaHQgbGVwdCB0aGUgV3hQeXRob24gZWZmb3J0IGFuZCBXZWIgYmVjYW1lIGEgIzEgcHJpb3JpdHkgYW5kIGNvbnRpbnVlcyB0byBiZS4gIFRoZSB0aG91Z2h0IGlzIHRoYXQgdGhlIGRlc2t0b3Agd2FzIHdlbGwgcmVwcmVzZW50ZWQgd2l0aCBQeVNpbXBsZUdVSSwgUHlTaW1wbGVHVUlRdCwgYW5kIFB5U2ltcGxlR1VJV3guICBCZXR3ZWVuIHRob3NlIHBvcnRzIGlzIGEgc29saWQgd2lub3dpbmcgc3lzdGVtIGFuZCAyIHN5c3RlbSB0cmF5IGltcGxlbWVudGF0aW9ucyBhbmQgYSBuZWFybHkgZmVhdHVyZSBjb21wbGV0ZSBRdCBlZmZvcnQuICBTbywgdGhlIHRlYW0gd2FzIHN3aXRjaGVkIG92ZXIgdG8gUHlTaW1wbGVHVUlXZWIuXG5cbiMjIFdlYiBWZXJzaW9uIChSZW1pKVxuXG5bUHlTaW1wbGVHVUlXZWIgR2l0SHViIHNpdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9QeVNpbXBsZUdVSS9QeVNpbXBsZUdVSS90cmVlL21hc3Rlci9QeVNpbXBsZUdVSVdlYikuICAqKlRoZXJlIGlzIGEgc2VwYXJhdGUgUmVhZG1lIGZpbGUgZm9yIHRoZSBXZWIgdmVyc2lvbioqLlxuXG5OZXcgZm9yIDIwMTksIFB5U2ltcGxlR1VJV2ViLiAgVGhpcyBpcyBhbiBleGNpdGluZyBkZXZlbG9wbWVudCEgIFB5U2ltcGxlR1VJIGluIHlvdXIgV2ViIEJyb3dzZXIhXG5cblRoZSB1bmRlcmx5aW5nIGZyYW1ld29yayBzdXBwbHlpbmcgdGhlIHdlYiBjYXBhYmlsaXR5IGlzIHRoZSBQeXRob24gcGFja2FnZSBSZW1pLiAgaHR0cHM6Ly9naXRodWIuY29tL2RkZG9tb2Rvc3NvbGEvcmVtaSAgUmVtaSBwcm92aWRlcyB0aGUgd2lkZ2V0cyBhcyB3ZWxsIGFzIGEgd2ViIHNlcnZlciBmb3IgeW91IHRvIGNvbm5lY3QgdG8uICBJdCdzIGFuIGV4aXRpbmcgbmV3IHBsYXRmb3JtIHRvIGJlIHJ1bm5pbmcgb24gYW5kIGhhcyB0ZW1wb3JhcmlseSBidW1wZWQgdGhlIFd4UHl0aG9uIHBvcnQgZnJvbSB0aGUgaGlnaGVzdCBwcmlvcml0eS4gIFB5U2ltcGxlR1VJV2ViIGlzIHRoZSBjdXJyZW50IGhpZ2ggcHJpb3JpdHkgcHJvamVjdC5cblxuKipVc2UgdGhpcyBzb2x1dGlvbiBmb3IgeW91ciBQaSBwcm9qZWN0cyoqIHRoYXQgZG9uJ3QgaGF2ZSBhbnl0aGluZyBjb25uZWN0ZWQgaW4gdGVybXMgb2YgaW5wdXQgZGV2aWNlcyBvciBkaXNwbGF5LiAgUnVuIHlvdXIgUGkgaW4gXCJoZWFkbGVzc1wiIG1vZGUgYW5kIHRoZW4gYWNjZXNzIGl0IHZpYSB0aGUgV2ViIGludGVyZmFjZS4gIFRoaXMgYWxsb3dzIHlvdSB0byBlYXNpbHkgYWNjZXNzIGFuZCBtYWtlIGNoYW5nZXMgdG8geW91ciBQaSB3aXRob3V0IGhhdmluZyB0byBob29rIHVwIGFueXRoaW5nIHRvIGl0LlxuXG4qKioqSXQncyBub3QgbWVhbnQgdG8gXCJzZXJ2ZSB1cCB3ZWIgcGFnZXNcIioqKipcblxuUHlTaW1wbGVHVUlXZWIgaXMgZmlyc3QgYW5kIGZvcmVtb3N0IGEgKipHVUkqKiwgYSBwcm9ncmFtJ3MgZnJvbnQtZW5kLiBJdCBpcyBkZXNpZ25lZCB0byBoYXZlIGEgc2luZ2xlIHVzZXIgY29ubmVjdCBhbmQgaW50ZXJhY3Qgd2l0aCB0aGUgKipHVUkqKi5cblxuSWYgbW9yZSB0aGFuIDEgcGVyc29uIGNvbm5lY3RzIGF0IGEgdGltZSwgdGhlbiBib3RoIHVzZXJzIHdpbGwgc2VlIHRoZSBleGFjdCBzYW1lIHN0dWZmIGFuZCB3aWxsIGJlIGludGVyYWN0aW5nIHdpdGggdGhlIHByb2dyYW0gYXMgaWYgYSBzaW5nbGUgdXNlciB3YXMgdXNpbmcgaXQuXG5cbiMjIFNvdXJjZSBjb2RlIGNvbXBhdGliaWxpdHlcblxuSW4gdGhlb3J5LCB5b3VyIHNvdXJjZSBjb2RlIGlzIGNvbXBsZXRlbHkgcG9ydGFibGUgZnJvbSBvbmUgcGxhdGZvcm0gdG8gYW5vdGhlciBieSBzaW1wbHkgY2hhbmdpbmcgdGhlIGltcG9ydCBzdGF0ZW1lbnQuICBUaGF0J3MgdGhlIEdPQUwgYW5kIHN1cHJpc2luZ2x5IG1hbnkgdGltZXMgdGhpcyAxLWxpbmUgY2hhbmdlIHdvcmtzLiAgU2VlaW5nIHlvdXIgY29kZSBydW4gb24gdGtpbnRlciwgdGhlbiBjaGFuZ2UgdGhlIGltcG9ydCB0byBgaW1wb3J0ICBQeVNpbXBsZUdVSVdlYiBhcyBzZ2AgYW5kIGluc3RlYWQgb2YgYSB0a2ludGVyIHdpbmRvdywgdXAgcG9wcyB5b3VyIGRlZmF1bHQgYnJvd3NlciB3aXRoIHlvdXIgd2luZG93IHJ1bm5pbmcgb24gaXQgaXMgYW4gaW5jcmVkaWJsZSBmZWVsaW5nLlxuXG5CdXQsICoqKmNhdXRpb24gaXMgYWR2aXNlZC4qKiogIEFzIHlvdSd2ZSByZWFkIGFscmVhZHksIHNvbWUgcG9ydHMgYXJlIGZ1cnRoZXIgYWxvbmcgdGhhbiBvdGhlcnMuICBUaGF0IG1lYW5zIHdoZW4geW91IG1vdmUgZnJvbSBvbmUgcG9ydCB0byBhbm90aGVyLCBzb21lIGZlYXR1cmVzIG1heSBub3Qgd29yay4gIFRoZXJlIGFsc28gbWF5IGJlIHNvbWUgYWxpZ25tZW50IHR3ZWFrcyBpZiB5b3UgaGF2ZSBhbiBhcHBsaWNhdGlvbiB0aGF0IHByZWNpc2VseSBhbGlnbnMgRWxlbWVudHMuXG5cbldoYXQgZG9lcyB0aGlzIG1lYW4sIGFzc3VtaW5nIGl0IHdvcmtzPyAgSXQgbWVhbnMgaXQgdGFrZXMgYSB0cml2aWFsIGFtb3VudCBvZiBlZmZvcnQgdG8gbW92ZSBhY3Jvc3MgR1VJIEZyYW1ld29ya3MuICBEb24ndCBsaWtlIHRoZSB3YXkgeW91ciBHVUkgbG9va3Mgb24gdGtpbnRlcj8gIE5vIHByb2JsZW0sIGNoYW5nZSBvdmVyIHRvIHRyeSBQeVNpbXBsZUdVSVF0LiAgTWFkZSBhIG5pY2UgZGVza3RvcCBhcHAgYnV0IHdhbnQgdG8gYnJpbmcgaXQgdG8gdGhlIHdlYiB0b28/ICBBZ2Fpbiwgbm8gcHJvYmxlbSwgdXNlIFB5U2ltcGxlR1VJV2ViLlxuXG4jIyByZXBsLml0IFZlcnNpb25cblxuKioqV2FudCB0byByZWFsbHkgZ2V0IHlvdXIgbWluZCBibG93bj8qKiogIENoZWNrIG91dCB0aGlzIFtQeVNpbXBsZUdVSSBwcm9ncmFtXShodHRwczovL3JlcGwuaXQvQFB5U2ltcGxlR1VJL1B5U2ltcGxlR1VJV2ViLURlbW9zKSBydW5uaW5nIGluIHlvdXIgd2ViIGJyb3dzZXIuXG5cblRoYW5rcyB0byB0aGUgbWFnaWMgb2YgcmVwbC5pdCBhbmQgUmVtaSBpdCdzIHBvc3NpYmxlIHRvIHJ1biBQeVNpbXBsZUdVSSBjb2RlIGluIGEgYnJvd3NlciB3aW5kb3cgd2l0aG91dCBoYXZpbmcgUHl0aG9uIHJ1bm5pbmcgb24geW91ciBjb21wdXRlci4gIFRoaXMgc2hvdWxkIGJlIHZpZXdlZCBhcyBhIHRlYWNoaW5nIGFuZCBkZW1vbnN0cmF0aW9uIGFpZC4gIEl0IGlzIG5vdCBtZWFudCB0byBiZSBhIHdheSBvZiBzZXJ2aW5nIHVwIHdlYiBwYWdlcy4gSXQgd291bGRuJ3Qgd29yayBhbnkgd2F5IGFzIGVhY2ggdXNlciBmb3JrcyBhbmQgZ2V0cyB0aGVpciBvd24sIGNvbXBsZXRlbHkgZGlmZmVyZW50LCB3b3Jrc3BhY2UuXG5cblRoZXJlIGFyZSAyIHBvcnRzIG9mIFB5U2ltcGxlR1VJIHRoYXQgcnVuIG9uIHJlcGwuaXQgLSBQeVNpbXBsZUdVSSBhbmQgUHlTaW1wbGVHVUlXZWIuXG5cbiMjIyBQeVNpbXBsZUdVSSAodGtpbnRlciBiYXNlZClcblxuVGhlIHByaW1hcnkgUHlTaW1wbGVHVUkgcG9ydCB3b3JrcyB2ZXJ5IHdlbGwgb24gcmVwbC5pdCBkdWUgdG8gdGhlIGZhY3QgdGhleSd2ZSBkb25lIGFuIG91dHN0YW5kaW5nIGpvYiBnZXR0aW5nIHRraW50ZXIgdG8gcnVuIG9uIHRoZXNlIHZpcnR1YWwgbWFjaGluZXMuICBDcmVhdGluZyBhIHByb2dyYW0gZnJvbSBzY3JhdGNoLCB5b3Ugd2lsbCB3YW50IHRvIGNob29zZSB0aGUgXCJQeXRob24gd2l0aCB0a2ludGVyXCIgcHJvamVjdCB0eXBlLlxuXG5UaGUgdmlydHVhbCBzY3JlZW4gc2l6ZSBmb3IgdGhlIHJlbmRlcmVkIHdpbmRvd3MgaXNuJ3QgdmVyeSBsYXJnZSwgc28gYmUgbWluZGZ1bCBvZiB5b3VyIHdpbmRvdydzIHNpemUgb3IgZWxzZSB5b3UgbWF5IGVuZCB1cCB3aXRoIGJ1dHRvbnMgeW91IGNhbid0IGdldCB0by5cblxuWW91IG1heSBoYXZlIHRvIFwiaW5zdGFsbFwiIHRoZSBQeVNpbXBsZUdVSSBwYWNrYWdlIGZvciB5b3VyIHByb2plY3QuICBJZiBpdCBkb2Vzbid0IGF1dG9tYXRpY2FsbHkgaW5zdGFsbCBpdCBmb3IgeW91LCB0aGVuIGNsaWNrIG9uIHRoZSBjdWJlIGFsb25nIHRoZSBsZWZ0IGVkZ2Ugb2YgdGhlIGJyb3dzZXIgd2luZG93IGFuZCB0aGVuIHR5cGUgaW4gUHlTaW1wbGVHVUkgb3IgUHlTaW1wbGVHVUlXZWIgZGVwZW5kaW5nIG9uIHdoaWNoIHlvdSdyZSB1c2luZy5cblxuIyMjIFB5U2ltcGxlR1VJV2ViIChSZW1pIGJhc2VkKVxuXG5Gb3IgUHlTaW1wbGVHVUlXZWIgcHJvZ3JhbXMgeW91IHJ1biB1c2luZyByZXBsLml0IHdpbGwgYXV0b21hdGljYWxseSBkb3dubG9hZCBhbmQgaW5zdGFsbCB0aGUgbGF0ZXN0IFB5U2ltcGxlR1VJV2ViIGZyb20gUHlQSSBvbnRvIGEgdmlydHVhbCBQeXRob24gZW52aXJvbm1lbnQuICBBbGwgdGhhdCBpcyByZXF1aXJlZCBpcyB0byB0eXBlIGBpbXBvcnQgUHlTaW1wbGVHVUlXZWJgIHlvdSdsbCBoYXZlIGEgUHl0aG9uIGVudmlyb25tZW50IHVwIGFuZCBydW5uaW5nIHdpdGggdGhlIGxhdGVzdCBQeVBJIHJlbGVhc2Ugb2YgUHlTaW1wbGVHVUlXZWIuXG5cbiMjIyBDcmVhdGluZyBhIHJlcGwuaXQgcHJvamVjdCBmcm9tIHNjcmF0Y2ggLyB0cm91Ymxlc2hvb3RpbmdcblxuVG8gY3JlYXRlIHlvdXIgb3duIHJlcGwuaXQgUHlTaW1wbGVHVUkgcHJvamVjdCBmcm9tIHNjcmF0Y2gsIGZpcnN0IGNob29zZSB0aGUgdHlwZSBvZiBQeXRob24gdmlydHVhbCBtYWNoaW5lIHlvdSB3YW50LiAgRm9yIFB5U2ltcGxlR1VJIHByb2dyYW1zLCBjaG9vc2UgdGhlIFwiUHl0aG9uIHdpdGggdGtpbnRlclwiIHByb2plY3QgdHlwZS4gIEZvciBQeVNpbXBsZUdVSVdlYiwgY2hvb3NlIHRoZSBub3JtYWwgUHl0aG9uIHByb2plY3QuXG5cblRoZXJlIGhhdmUgYmVlbiB0aW1lcyB3aGVyZSByZXBsLml0IGRpZG4ndCBkbyB0aGUgYXV0byBpbXBvcnQgdGhpbmcuICBJZiB0aGF0IGRvZXNuJ3Qgd29yayBmb3Igc29tZSByZWFzb24sIHlvdSBjYW4gaW5zdGFsbCBwYWNrYWdlcyBieSBjbGlja2luZyBvbiB0aGUgcGFja2FnZSBidXR0b24gb24gdGhlIGxlZnQgc2lkZSBvZiB0aGUgaW50ZXJmYWNlLCB0eXBpbmcgaW4gdGhlIHBhY2thZ2UgbmFtZSAoUHlTaW1wbGVHVUkgb3IgUHlTaW1wbGVHVUlXZWIpIGFuZCBpbnN0YWxsIGl0LiBcblxuIyMjIFdoeSB0aGlzIGlzIHNvIGNvb2wgKGxpc3RlbiB1cCBUZWFjaGVycywgdHV0b3JpYWwgd3JpdGVycylcblxuKioqRWR1Y2F0b3JzKioqIGluIHBhcnRpY3VsYXIgc2hvdWxkIGJlIGludGVyZXN0ZWQuICBTdHVkZW50cyBjYW4gbm90IG9ubHkgcG9zdCB0aGVpciBob21ld29yayBlYXNpbHkgZm9yIHRoZWlyIHRlYWNoZXIgdG8gYWNjZXNzLCBidXQgdGVhY2hlcnMgY2FuIGFsc28gcnVuIHRoZSBzdHVkZW50cyBwcm9ncmFtcyBvbmxpbmUuICBObyBkb3dubG9hZGluZyBuZWVkZWQuICBSdW4gaXQgYW5kIGNoZWNrIHRoZSByZXN1bHRzLlxuXG5Gb3IgcGVvcGxlIHdhbnRpbmcgdG8gc2hhcmUgdGhlaXIgY29kZSwgZXNwZWNpYWxseSB3aGVuIGhlbHBpbmcgc29tZW9uZSB3aXRoIGEgcHJvYmxlbSwgaXQncyBhIGdyZWF0IHBsYWNlIHRvIGRvIGl0LiAgVGhvc2Ugd2lzaGluZyB0byBzZWUgeW91ciB3b3JrIGRvIG5vdCBoYXZlIHRvIGJlIHJ1bm5pbmcgUHl0aG9uIG5vciBoYXZlIFB5U2ltcGxlR1VJIGluc3RhbGxlZC5cblxuVGhlIHdheSBJIHVzZSBpdCBpcyB0byBmaXJzdCB3cml0ZSBteSBQeVNpbXBsZUdVSSBjb2RlIG9uIFdpbmRvd3MsIHRoZW4gY29weSBhbmQgcGFzdGUgaXQgaW50byBSZXBsLml0LlxuXG5GaW5hbGx5LCB5b3UgY2FuIGVtYmVkIHRoZXNlIFJlcGwuaXQgd2luZG93cyBpbnRvIHdlYiBwYWdlcywgZm9ydW0gcG9zdHMsIGV0Yy4gIFRoZSBcIlNoYXJlXCIgYnV0dG9uIGlzIGNhcGFibGUgb2YgZ2l2aW5nIHlvdSB0aGUgYmxvY2sgb2YgY29kZSBmb3IgYW4gXCJpZnJhbWVcIiB0aGF0IHdpbGwgcmVuZGVyIGludG8gYSB3b3JraW5nIHJlcGwuaXQgcHJvZ3JhbSBpbiB5b3VyIHBhZ2UuICBJdCdzIGFtYXppbmcgdG8gc2VlLCBidXQgaXQgY2FuIGJlIHNsb3cgdG8gbG9hZC5cblxuIyMjIFJlcGwuaXQgaXMgTk9UIGEgd2ViIHNlcnZlciBmb3IgeW91IHRvIFwiZGVwbG95XCIgYXBwbGljYXRpb25zIVxuXG5SZXBsLml0IGlzIG5vdCBtZWFudCB0byBzZXJ2ZSB1cCBhcHBsaWNhdGlvbnMgYW5kIHdlYiBwYWdlcy4gIFRyeWluZyB0byB1c2UgaXQgdGhhdCB3YXkgd2lsbCBub3QgcmVzc3VsdCBpbiBzYXRpc2ZhY3RvcnkgcmVzdWx0cy4gIEl0J3Mgc2ltcGx5IHRvbyBzbG93IGFuZCB0b28gdGVjaG5pY2FsIG9mIGFuIGludGVyZmFjZSBmb3IgdHJ5aW5nIHRvIFwiZGVwbG95XCIgdXNpbmcgaXQuICBQeVNpbXBsZUdVSVdlYiBpc24ndCBhIGdyZWF0IGNob2ljZSBpbiBzZXJ2aW5nIHdlYiBwYWdlcy4gIEl0J3MgcHVycG9zZSBpcyBtb3JlIHRvIGJ1aWxkIGEgR1VJIHRoYXQgcnVucyBpbiBhIGJyb3dzZXIuXG5cbiMjIE1hY3NcblxuSXQncyBzdXJwcmlzaW5nIHRoYXQgUHl0aG9uIEdVSSBjb2RlIGlzIGNvbXBsZXRlbHkgY3Jvc3MgcGxhdGZvcm0gZnJvbSBXaW5kb3dzIHRvIE1hYyB0byBMaW51eC4gIE5vIHNvdXJjZSBjb2RlIGNoYW5nZXMuICBUaGlzIGlzIHRydWUgZm9yIGJvdGggIFB5U2ltcGxlR1VJIGFuZCBQeVNpbXBsZUdVSVF0LlxuXG5Ib3dldmVyLCAqKk1hY3MqKiBzdWNrLiAgVGhleSBzdWNrIG9uIHRraW50ZXIgaW4gcGFydGljdWxhci4gIFRoZSBcIkxvb2sgYW5kIGZlZWxcIiBjYWxscyBhcmUgZGlzYWJsZWQgZm9yIE1hY3MuICBDb2xvcmVkIGJ1dHRvbnMgaW4gcGFydGljdWxhciBhcmUgYnJva2VuLiAgQW5kLCB5b3UgYXJlIHVuYWJsZSB0byBzcGVjaWZ5IGZpbGV0eXBlcyB3aGVuIHVzaW5nIHRoZSBGaWxlQnJvd3NlIGJ1dHRvbi4gIE5vbmUgb2YgdGhpcyBpcyBQeVNpbXBsZUdVSSBjb2RlIGlzc3Vlcywgb2YgY291cnNlLCB0aGV5J3JlIGFsbCBpbiB0a2ludGVyLiAgQ29uc2lkZXIgdXNpbmcgUXQgaW5zdGVhZCBvZiB0a2ludGVyIG9uIHRoZSBNYWMuICBPciwgaWYgdXNpbmcgdGtpbnRlciwgY3JlYXRlIHlvdXIgb3duIGJ1dHRvbiBpbWFnZXMuICBcblxuKioqTG9vayB0aHJvdWdoIHRoZSBvcGVuIGFuZCBjbG9zZWQgaXNzdWVzIGlmIHlvdSdyZSBhICBNYWMgcGVyc29uIHdpdGggYSBwcm9ibGVtLiBJdCdzIGhpZ2hseSBsaWtlbHkgdGhlIHByb2JsZW0gaGFzIGJlZW4gYXQgbGVhc3Qgc2VlbiBwcmV2aW91c2x5IGFuZCB0aGVyZSBtYXkgZXZlbiBiZSBhIGZpeCBvciB3b3JrYXJvdW5kKioqXG5cbipTd2l0Y2hpbmcgdG8gXCJMaWdodCBNb2RlXCIgaXMga25vd24gdG8gZml4IHNvbWUgb2YgdGhlIHByb2JsZW1zLiogIFRoZXkgaG9uZXN0bHkgYXJlIHRraW50ZXIvTWFjIHByb2JsZW1zLlxuXG5NYWtlIHN1cmUgeW91J3JlIHJ1bm5pbmcgdGtpbnRlciA4LjYgYW5kIHVwLiAgSG93ZXZlciwgYXMgSSdtIGxlYXJuaW5nIDguNiBjYW4gbWVhbiBhbG1vc3QgYW55dGhpbmcgYXMgdGhlIG1pbm9yIHJlbGVhc2UgbnVtYmVycyBhcmUgbm90IHByb3ZpZGVkICg4LjYuMSwgZXRjKS4gIFR1cm5zIG91dCA4LjYgaGFzIGJlZW4gaW4gZGV2ZWxvcG1lbnQgZm9yIFlFQVJTLiAgVGhlIDguNiB0aGF0IGNvbWVzIHdpdGggUHl0aG9uIDMuNy40IGRvZXNuJ3Qgc3VwcG9ydCB0YWJsZSBjb2xvcnMgZm9yIGV4YW1wbGUgZXZlbiB0aG91Z2ggaXQncyB2ZXJzaW9uIDguNi5cblxuIyBTdXBwb3J0XG5cbiMjIERvbid0IFN1ZmZlciBTaWxlbnRseVxuXG5UaGUgR2l0SHViIElzc3VlcyBhcmUgY2hlY2tlZCAqb2Z0ZW4qLiAgVmVyeSBvZnRlbi4gICoqUGxlYXNlKiogcG9zdCB5b3VyIHF1ZXN0aW9ucyBhbmQgcHJvYmxlbXMgdGhlcmUgYW5kIHRoZXJlIG9ubHkuICBQbGVhc2UgZG9uJ3QgcG9zdCBvbiBSZWRkaXQsIFN0YWNrb3ZlcmZsb3csIG9uIGZvcnVtcywgdW50aWwgeW91J3ZlIHRyaWVkIHBvc3Rpbmcgb24gdGhlIEdpdEh1Yi5cblxuV2h5PyAgKkl0IHdpbGwgZ2V0IHlvdSB0aGUgYmVzdCBzdXBwb3J0IHBvc3NpYmxlLiogIFNlY29uZCwgeW91J2xsIGJlIGhlbHBpbmcgdGhlIHByb2plY3QgYXMgd2hhdCB5b3UncmUgZXhwZXJpZW5jaW5nIG1pZ2h0IHZlcnkgd2VsbCBiZSBhIGJ1Zywgb3IgZXZlbiBhICprbm93biogYnVnLiBXaHkgc3BlbmQgaG91cnMgdGhyYXNoaW5nLCBmaWdodGluZyBhZ2FpbnN0IGEga25vd24gYnVnP1xuXG5JdCdzIG5vdCBhIHN1cGVyLWJ1Z2d5IHBhY2thZ2UsIGJ1dCB1c2VycyBkbyBleHBlcmllbmNlIHByb2JsZW1zIGp1c3QgdGhlIHNhbWUuICBNYXliZSBzb21ldGhpbmcncyBub3QgZXhwbGFpbmVkIHdlbGwgZW5vdWdoIGluIHRoZSBkb2NzLiAgTWF5YmUgeW91J3JlIG1ha2luZyBhIGNvbW1vbiBtaXN0YWtlLiAgTWF5YmUgdGhhdCBmZWF0dXJlIGlzbid0IGNvbXBsZXRlIHlldC5cblxuWW91IHdvbid0IGxvb2sgc3R1cGlkIHBvc3RpbmcgYW4gSXNzdWUgb24gR2l0SHViLiAgSXQncyBqdXN0IHRoZSBvcHBvc2l0ZS5cblxuIyMjIEhvdyB0byBsb2cgaXNzdWVzXG5cbioqUHlTaW1wbGVHVUkgaXMgYW4gYWN0aXZlIHByb2plY3QuKiogIEJ1Z3MgYXJlIGZpeGVkLCBmZWF0dXJlcyBhcmUgYWRkZWQsIG9mdGVuLiAgU2hvdWxkIHlvdSBydW4gaW50byB0cm91YmxlLCAqKm9wZW4gYW4gaXNzdWUqKiBvbiB0aGUgW0dpdEh1YiBzaXRlXShodHRwOi8vd3d3LlB5U2ltcGxlR1VJLmNvbSkgYW5kIHlvdSdsbCByZWNlaXZlIGhlbHAuICBQb3N0aW5nIHF1ZXN0aW9ucyBvbiBTdGFja092ZXJmbG93LCBGb3J1bXMsIE1haWxpbmcgbGlzdHMsIFJlZGRpdCwgZXRjLCBpcyBub3QgdGhlIGZhc3Rlc3QgcGF0aCB0byBzdXBwb3J0IGFuZCB0YWtpbmcgaXQgbWF5IHZlcnkgd2VsbCBsZWFkIHlvdSBhc3RyYXkgYXMgZm9sa3Mgbm90IGZhbWlsaWFyIHdpdGggdGhlIHBhY2thZ2Ugc3RydWdnbGUgdG8gaGVscCB5b3UuIFlvdSBtYXkgYWxzbyBydW4gaW50byB0aGUgY29tbW9uIHJlc3BvbnNlIG9mIFwiSSBkb24ndCBrbm93IFB5U2ltcGxlR1VJIChhbmQgcGVyaGFwcyBkaXNsaWtlIGl0IGFzIGEgcmVzdWx0KSwgYnV0IEkga25vdyB5b3UgY2FuIGRvIHRoYXQgd2l0aCBRdFwiLlxuXG5XaHkgb25seSAxIGxvY2F0aW9uPyAgSXQncyBzaW1wbGUuLi4uIGl0J3Mgd2hlcmUgdGhlIGJ1Z3MsIGVuaGFuY2VtZW50cywgZXRjIGFyZSB0cmFja2VkLiAgSXQncyBUSEUgc3BvdCBvbiB0aGUgSW50ZXJuZXQgZm9yIHRoaXMgcHJvamVjdC4gIEl0J3Mgbm90IHNvbWUgZnJlYWtpc2ggYmVpbmcgaW4gY29udHJvbCwgdGVsbGluZyBwZW9wbGUgaG93IHRvIGRvIHRoaW5ncy4gIEl0J3Mgc28gdGhhdCBZT1UgZ2V0IHRoZSBiZXN0IGFuZCBxdWlja2VzdCBzdXBwb3J0IHBvc3NpYmxlLlxuXG5TbywgW29wZW4gYW4gSXNzdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9QeVNpbXBsZUdVSS9QeVNpbXBsZUdVSS9pc3N1ZXMvbmV3L2Nob29zZSksIGNob29zZSBcImN1c3RvbSBmb3JtXCIgYW5kIGZpbGwgaXQgb3V0IGNvbXBsZXRlbHkuICBUaGVyZSBhcmUgdmVyeSBnb29kIHJlYXNvbnMgYmVoaW5kIGFsbCBvZiB0aGUgcXVlc3Rpb25zLiAgQ3V0dGluZyBjb3JuZXJzIG9ubHkgY3V0cyB5b3VyIGNoYW5jZXMgb2YgZ2V0dGluZyBoZWxwIGFuZCBnZXR0aW5nIHF1YWxpdHkgaGVscCBhcyBpdCdzIGRpZmZpY3VsdCBlbm91Z2ggdG8gZGVidWcgcmVtb3RlbHkuICBEb24ndCBoYW5kaWNhcCBwZW9wbGUgdGhhdCB3YW50IHRvIGhlbHAgYnkgbm90IHByb3ZpZGluZyBlbm91Z2ggaW5mb3JtYXRpb24uXG5cbioqQmUgc3VyZSBhbmQgcnVuIHlvdXIgcHJvZ3JhbSBvdXRzaWRlIG9mIHlvdXIgSURFKiogKioqZmlyc3QqKiouICBTdGFydCB5b3VyIHByb2dyYW0gZnJvbSB0aGUgc2hlbGwgdXNpbmcgYHB5dGhvbmAgb3IgYHB5dGhvbjNgIGNvbW1hbmQuICBPbiBudW1lcm91cyBvY2Nhc3Npb25zIG11Y2ggdGltZSB3YXMgc3BlbnQgY2hhc2luZyBwcm9ibGVtcyBjYXVzZWQgYnkgdGhlIElERS4gIEJ5IHJ1bm5pbmcgZnJvbSBhIGNvbW1hbmQgbGluZSwgeW91IHRha2UgdGhhdCB3aG9sZSBxdWVzdGlvbiBvdXQgb2YgdGhlIHByb2JsZW0sIGFuIGltcG9ydGFudCBzdGVwLlxuXG4qKipEb24ndCBzaXQgYW5kIHN0ZXcsIHRyeWluZyB0aGUgc2FtZSB0aGluZyBvdmVyIGFuZCBvdmVyKioqLCB1bnRpbCB5b3UgaGF0ZSBsaWZlLi4uIHN0b3AsIGFuZCBwb3N0IGFuIElzc3VlIG9uIHRoZSBHaXRIdWIuICBTb21lb25lICoqV0lMTCoqIGFuc3dlciB5b3UuICBTdXBwb3J0IGlzIGluY2x1ZGVkIGluIHRoZSBwdXJjaGFzZSBwcmljZSBmb3IgdGhpcyBwYWNrYWdlICh0aGUgcXVhbGl0eSBsZXZlbCBtYXRjaGVzIHRoZSBwcmljZSBhcyB3ZWxsIEknbSBhZnJhaWQpLiAgSnVzdCBkb24ndCBiZSB0b28gdXBzZXQgd2hlbiB5b3VyIGZyZWUgc3VwcG9ydCB0dXJucyBvdXQgdG8gYmUgYSBsaXR0bGUgYml0IGNyYXBweSwgYnV0IGl0J3MgZnJlZSBhbmQgdHlwaWNhbGx5IGdvb2QgYWR2aWNlLlxuXG4jIyMgUHlTaW1wbGVHVUkgVHJvbGxzXG5cblllYSwgdGhleSdyZSBvdXQgdGhlcmUuICBXb3VsZCBoYXZlIE5FVkVSIGluIGEgYmlsbGlvbiB5ZWFycyBndWVzc2VkIHRoYXQgdGhlcmUgd291bGQgYmUgb2JqZWN0aW9uIHRvIHRoaXMgcGFja2FnZSwgY29taW5nIGZyb20gYSBzbWFsbCwgYnV0IHZvY2FsLCBudW1iZXIgb2YgcGVvcGxlLiAgSSBuYWl2ZWx5IGJlbGlldmVkIGV2ZXJ5b25lIHdvdWxkIGJlIHN1cHBvcnRpdmUsIHNlZSB0aGUgdmFsdWUsIGhvbGQgaGFuZHMgYXJvdW5kIHRoZSBmaXJlLCBzaW5nIHNvbmdzLCBhbmQgaW4gdGhlIHZlcnkgbGVhc3QgYmUgdHJ1dGhmdWwuICBCdXQsIHRoaXMgYWluJ3QgS2Fuc2FzIGFuZCB0aGUgSW50ZXJuZXQgaXMgd2VsbC4uLiAgV1RGIGlzIGl0IHdpdGggcGVvcGxlP1xuXG5JZiBzb21lb25lIGlzIGFjdGl2ZWx5IGRpc2NvdXJhZ2luZyB5b3UgZnJvbSB1c2luZyB0aGlzIHBhY2thZ2UsIHRoZW4ga25vdyB5b3UgYXJlIG9uIHRoZSByaWdodCB0cmFjayBhbmQgeW91IHNob3VsZCBnaXZlIGl0IGEgdHJ5LiAgU3R1ZmYgbGlrZSB0aGlzIHNvbWV0aW1lcyBoYXBwZW5zIGJlY2F1c2UgdGhlIHBlcnNvbiB3b3JrcyBmb3IgYSBwYXJ0aWN1bGFyIGNvbXBhbnkgb3IgdGhleSBoYXZlIGEgR1VJIHBhY2thZ2Ugb2YgdGhlaXIgb3duLi4uLiB0aGF0J3Mgbm90IHBvcHVwbGFyLCBvciB0aGV5IGp1c3QgbGlrZSB0byB0ZWFyIHRoaW5ncyBkb3duLlxuXG5JIHByb21pc2UgeW91J3JlIG5vdCBnb2luZyB0byBiZSB3cmVja2VkIGZvciBsaWZlIChhcyBoYXMgYmVlbiBjbGFpbWVkKS4gIEl0IHdpbGwgbm90IGNhdXNlIHlvdSB0byBiZSBhIGJhZCBwcm9ncmFtbWVyIHdpdGggYmFkIGhhYml0cy4gIEl0IHdpbGwgbm90IHJ1aW4geW91ciBjYXJlZXIuICBJdCdzIG5vdCBnb2luZyB0byB0ZWFjaCB5b3UgYmFkIGhhYml0cy4gIE9uZSBwZXJzb24gSSBrbm93IGdvdCBhIGJvbnVzIGJhc2VkIG9uIGEgUHlTaW1wbGVHVUkgcHJvZ3JhbSBoZSB3cm90ZS5cblxuU28gZmVhciBub3QuICAqKipIb3cgYWJvdXQgc3VjY2VzcyBiZWluZyB0aGUgZ29hbD8qKiogIFNwZW5kIHRpbWUgcG9saXNoaW5nIHlvdXIgR1VJIGFuZCB3b3JraW5nIG9uIHlvdXIgcHJpbWFyeSBjb2RlIGluc3RlYWQgb2Ygc3RydWdnbGluZyB5b3VyIHdheSB0aHJvdWdoIHRoZSBtb3VudGFpbnMgb2YgZG9jdW1lbnRhdGlvbiBpbiB0aGUgUXQgbGlicmFyeSwgdHJ5aW5nIHRvIHNldCB0aGUgY29sb3Igb2Ygc29tZXRoaW5nLiAgXG5cblN0YXJ0IHdpdGggUHlTaW1wbGVHVUksIHRoZW4gaW4gdGhlIGZ1dHVyZSBpZiB5b3Ugd2FudCB0byBjb2RlIGRpcmVjdGx5IGluIFF0IHRvIGdldCBtb3JlIGNvbnRyb2wsIGl0J3Mgbm90IGxpa2UgeW91IHdvbid0IGJlIGFibGUgdG8gcGljayB1cCBRdCBkdWUgdG8geW91ciBQeVNpbXBsZUdVSSBrbm93bGVkZ2UuICBJZiBhbnl0aGluZywgeW91J2xsIGhhdmUgbW9yZSBrbm93bGVkZ2UgZ29pbmcgaXQgdGhhbiBtb3N0IHBlb3BsZSB0aGF0IGFyZSBqdXN0IHN0YXJ0aW5nIGJlY2F1c2UgeW91J2xsIGhhdmUgYWxyZWFkeSBidWlsdCB3b3JraW5nIEdVSXMsIHBlcmhhcHMgbWFueSBvZiB0aGVtIGFuZCB1bmRlcnN0YW5kIGhvdyB0byBsYXlvdXQgYW4gZWZmaWNpZW50IGludGVyZmFjZSBhcyB3ZWxsIGFzIGhhdmluZyBhIGdvb2QgZWR1Y2F0aW9uIGluIEdVSSBXaWRnZXRzIGFuZCBob3cgdGhleSB3b3JrLlxuXG4jIyMgVGFyZ2V0IEF1ZGllbmNlXG5cblB5U2ltcGxlR1VJIGlzIHRyeWluZyB0byBzZXJ2ZSB0aGUgODAlIG9mIEdVSSAqcHJvYmxlbXMqLiBUaGUgb3RoZXIgMjAlIGdvIHN0cmFpZ2h0IHRvIHRraW50ZXIsIFF0LCBXeFB5dGhvbiwgUmVtaSwgb3Igd2hhdGV2ZXIgZmlsbHMgdGhhdCBuZWVkLiAgVGhhdCA4MCUgaXMgYSBodWdlIHByb2JsZW0gc3BhY2UuICBBZ2FpbiwgdGhlIFwiU2ltcGxlXCIgb2YgUHlTaW1wbGVHVUkgZGVzY3JpYmVzIGhvdyBlYXN5IGl0IGlzIHRvIHVzZSwgbm90IHRoZSBuYXR1cmUgb2YgdGhlIHByb2JsZW0gc3BhY2UgaXQgc29sdmVzLiAgTm90ZSB0aGF0IHBlb3BsZSBhcmUgbm90IHBhcnQgb2YgdGhhdCBkZXNjcmlwdGlvbi4gIEl0J3Mgbm90IHRyeWluZyB0byBzb2x2ZSBHVUkgcHJvYmxlbXMgZm9yIDgwJSBvZiB0aGUgcGVvcGxlIHRyeWluZyBpdC4gIFB5U2ltcGxlR1VJIHRyaWVzIHRvIHNvbHZlIDgwJSBvZiBHVUkgKioqcHJvYmxlbXMqKiosIHJlZ2FyZGxlc3Mgb2YgdGhlIHByb2dyYW1tZXIncyBleHBlcmllbmNlIGxldmVsLlxuXG5QeVNpbXBsZUdVSSBpcyBkZXNpZ25lZCB3aXRoIGJvdGggdGhlIGJlZ2lubmVyIGFuZCB0aGUgZXhwZXJpZW5jZWVkIGRldmVsb3BlciBpbiBtaW5kLiAgV2h5PyAgQmVjYXVzZSBib3RoIHRlbmQgdG8gbGlrZSBjb21wYWN0IGNvZGUuICBNb3N0IGxpa2UgcGVvcGxlLCB3ZSBqdXN0IHdhbnQgdG8gZ2V0IHNoXFwqdCBkb25lLCByaWdodD8gIFxuXG5UaGUgYmVnaW5uZXJzIGNhbiBiZWdpbiB3b3JraW5nIHdpdGggR1VJcyAqKippbiB0aGVpciBmaXJzdCB3ZWVrIG9mIFB5dGhvbiBlZHVjYXRpb24qKiouICBUaGUgcHJvZmVzc2lvbmFscyBjYW4ganVtcCByaWdodCBpbnRvIHRoZSBkZWVwIGVuZCBvZiB0aGUgcG9vbCB0byB1c2UgdGhlIGVudGlyZSBhcnJheSBvZiBFbGVtZW50cyBhbmQgdGhlaXIgY2FwYWJpbGl0aWVzIHRvIGJ1aWxkIHN0dWZmIGxpa2UgYSBkYXRhYmFzZSBhcHBsaWNhdGlvbi5cblxuSGVyZSdzIGEgZ29vZCBleGFtcGxlIG9mIGhvdyBQeVNpbXBsZUdVSSBzZXJ2ZXMgdGhlc2UgMiBncm91cHMuLi4uIHRoZSBgSW5wdXRUZXh0YCBFbGVtZW50IGhhcyAxNiBwb3RlbnRpYWwgcGFyYW1ldGVycywgeWV0IHlvdSdsbCBmaW5kIDAgb3IgMSBwYXJhbWV0ZXJzIHNldCBieSBiZWdpbm5lcnMuIExvb2sgYXQgdGhlIGV4YW1wbGVzIHRocm91Z2hvdXQgdGhpcyBkb2N1bWVudCBhbmQgeW91J2xsIHNlZSB0aGUgY29kZSBmcmFnbWVudHMgdXRpbGl6ZSBhIHRpbnkgZnJhY3Rpb24gb2YgdGhlIHBvdGVudGlhbCBwYXJhbWV0ZXJzIC8gc2V0dGluZ3MuICBTaW1wbGUuLi4gKiprZWVwIGl0IHNpbXBsZSBmb3IgdGhlIGRlZmF1bHQgY2FzZSoqLiAgVGhpcyBpcyBwYXJ0IG9mIHRoZSBQeVNpbXBsZUdVSSBtaXNzaW9uLiAgXG5cblNvbWUgZGV2ZWxvcGVycyBhcmUgaGVhdmlseSB3ZWRkZWQgdG8gdGhlIGV4aXN0aW5nIEdVSSBGcmFtZXdvcmsgQXJjaGl0ZWN0dXJlcyAoUXQsIFd4UHl0b24sIHRraW50ZXIpLiAgVGhleSBsaWtlIHRoZSBleGlzdGluZyBHVUkgYXJjaGl0ZWN0dXJlcyAodGhleSdyZSBhbGwgcm91Z2hseSB0aGUgc2FtZSwgZXhjZXB0IHRoaXMgb25lKS4gIElmIHlvdSdyZSBpbiB0aGF0IGNyb3dkLCBqb2luIHRoZSBcIjIwJSBDbHViXCIganVzdCBkb3duIHRoZSBzdHJlZXQuICBUaGVyZSdzIHBsZW50eSBvZiByb29tIHRoZXJlIHdpdGggcGxlbnR5IG9mIHBvc3NpYmxlIHNvbHV0aW9ucy5cblxuQnV0IGhvdyBhYm91dCBhIHF1aWNrIHN0b3AtaW4gZm9yIHNvbWUgb3BlbiBtaW5kZWRuZXNzIGV4ZXJjaXNlcy4gIE1heWJlIHlvdSB3aWxsIGNvbWUgdXAgd2l0aCBhbiBpbnRlcmVzdGluZyBzdWdnZXN0aW9uIGV2ZW4gaWYgeW91IGRvbid0IHVzZSBpdC4gIE9yIG1heWJlIFB5U2ltcGxlR1VJIGRvZXMgc29tZXRoaW5nIHRoYXQgaW5zcGlyZXMgeW91IHRvIHdyaXRlIHNvbWV0aGluZyBzaW1pbGFyIGRpcmVjdGx5IGluIFF0LiAgQW5kIHBsZWFzZSwgYXQgbGVhc3QgYmUgY2l2aWwgYWJvdXQgaXQuICBUaGVyZSBpcyByb29tIGZvciBtdWx0aXBsZSBhcmNoaXRlY3R1cmVzLiAgUmVtZW1iZXIsIHlvdSB3aWxsIG5vdCBiZSAqaGFybWVkKiBieSB3cml0aW5nIHNvbWUgUHlTaW1wbGVHVUkgY29kZSBqdXN0IGxpa2UgeW91IHdvbid0IGJ5IHdyaXRpbmcgc29tZSB0a2ludGVyIG9yIFF0IGNvZGUuICBZb3VyIGNoYW5jZXMgb2YgZmVlbGluZyBoYXJtZWQgaXMgbW9yZSBsaWtlbHkgZnJvbSBvbmUgb2YgdGhvc2UgMi5cblxuIyMjIyBCZWdpbm5lcnMgJiBFYXNpZXIgUHJvZ3JhbXNcblxuVGhlcmUgYXJlIGEgY291cGxlIG9mIHJlYXNvbnMgYmVnaW5uZXJzIHN0b3AgaW4gZm9yIGEgbG9vay4gIFRoZSBmaXJzdCBpcyB0byBzaW1wbHkgdGhyb3cgYSBzaW1wbGUgR1VJIG9udG8gdGhlIGZyb250IG9mIGFuIGV4aXN0aW5nIGNvbW1hbmQgbGluZSBhcHBsaWNhdGlvbi4gIE9yIG1heWJlIHlvdSBuZWVkIHRvIHBvcHVwIGEgYm94IHRvIGdldCBhIGZpbGVuYW1lLiAgVGhlc2UgY2FuIG9mdGVuIGJlIHNpbXBsZSAxLWxpbmUgYFBvcHVwYCBjYWxscy4gIE9mIGNvdXJzZSwgeW91IGRvbid0IGhhdmUgdG8gYmUgYSBiZWdpbm5lciB0byBhZGQgYSBHVUkgb250byBvbmUgb2YgeW91ciBleGlzdGluZyBjb21tYW5kIGxpbmUgcHJvZ3JhbXMuICBEb24ndCBmZWVsIGxpa2UgYmVjYXVzZSB5b3UncmUgYW4gYWR2YW5jZWQgcHJvZ3JhbW1lciwgeW91IG5lZWQgdG8gaGF2ZSBhbiBhZHZhbmNlZCBzb2x1dGlvbi5cblxuSWYgeW91IGhhdmUgYSBtb3JlIGludHJpY2F0ZSwgY29tcGxldGUsIHBlcmhhcHMgbXVsdGktd2luZG93IGRlc2lnbiBpbiBtaW5kLCB0aGVuIFB5U2ltcGxlR1VJIHN0aWxsIGNvdWxkIGJlIHlvdXIgYmVzdCBjaG9pY2UuXG5cblRoaXMgcGFja2FnZSBpcyBub3Qgb25seSBncmVhdCB0byB1c2UgYXMgeW91ciBmaXJzdCBHVUkgcGFja2FnZSwgYnV0IGl0IGFsc28gdGVhY2hlcyBob3cgdG8gZGVzaWduIGFuZCB1dGlsaXplIGEgR1VJLiBJdCBkb2VzIGl0IGJldHRlciB0aGFuIHRoZSBleGlzdGluZyBHVUlzIGJ5IHJlbW92aW5nIHRoZSBzeW50YXgsIGFuZCBsZW5ndGh5IGNvZGUgdGhhdCBjYW4gdGFrZSBhbiBvdGhlcndpc2UgdmVyeSBzaW1wbGUgYXBwZWFyaW5nIHByb2dyYW0gaW50byBzb21ldGhpbmcgdGhhdCdzIGNvbXBsZXRlbHkgdW5yZWNvZ25pemFibGUuICBXaXRoIFB5U2ltcGxlR1VJIHlvdXIgJ2xheW91dCcgaXMgYWxsIHlvdSBuZWVkIHRvIGV4YW1pbmUgdG8gc2VlIHRoZSBkaWZmZXJlbnQgR1VJIEVsZW1lbnRzIHRoYXQgYXJlIGJlaW5nIHVzZWQuXG5cbldoeSBkb2VzIFB5U2ltcGxlR1VJIG1ha2UgaXQgYW55IGVhc2llciB0byBsZWFybiBhYm91dCBHVUlzPyAgQmVjYXVzZSBpdCByZW1vdmVzIHRoZSBjbGFzc2VzLCBjYWxsYmFjayBmdW5jdGlvbnMsIG9iamVjdCBvcmllbnRlZCBkZXNpZ24gdG8gYmV0dGVyIGdldCBvdXQgb2YgeW91ciB3YXkgYW5kIGxldCB5b3UgZm9jdXMgZW50aXJlbHkgb24geW91ciBHVUkgYW5kIG5vdCBob3cgdG8gcmVwcmVzZW50IGl0IGluIGNvZGUuICBcblxuVGhlIHJlc3VsdCBpcyAxLzIgdG8gMS8xMCB0aCB0aGUgYW1vdW50IG9mIGNvZGUgdGhhdCBpbXBsZW1lbnRzIHRoZSBleGFjdCBzYW1lIGxheW91dCBhbmQgd2lkZ2V0cyBhcyB5b3Ugd291bGQgZ2V0IGZyb20gY29kaW5nIHlvdXJzZWxmIGRpcmVjdGx5IGluIFF0NS4gIEl0J3MgYmVlbiB0ZXN0ZWQgbWFueSB0aW1lcy4uLiBhZ2FpbiBhbmQgYWdhaW4sIFB5U2ltcGxlR1VJIHByb2R1Y2VzIHNpZ25pZmljYW50bHkgbGVzcyBjb2RlIHRoYW4gUXQgYW5kIHRoZSBmcmFtZXdvcmtzIGl0IHJ1bnMgb24uXG5cbkZvcmdldCBzeW50YXggY29tcGxldGVseSBhbmQganVzdCBsb29rIG9uIHRoZSBvdmVyYWxsIGFjdGl2aXRpZXMgb2YgYSBQeVNpbXBsZUdVSSBwcm9ncmFtbWVyLiAgWW91IGhhdmUgdG8gZGVzaWduIHlvdXIgd2luZG93Li4uLiBkZXRlcm1pbmUgeW91ciBpbnB1dHMgYW5kIHlvdXIgb3V0cHV0cywgcGxhY2UgYnV0dG9ucyBpbiBzdHJhdGVnaWMgcGxhY2VzLCBjcmVhdGUgbWVudXMsIC4uLi4gWW91J2xsIGJlIGJ1c3kganVzdCBkb2luZyBhbGwgdGhvc2UgdGhpbmdzIHRvIGRlc2lnbiBhbmQgZGVmaW5lIHlvdXIgR1VJIGNvbXBsZXRlbHkgaW5kZXBlbmRlbnQgdXBvbiB0aGUgdW5kZXJseWluZyBmcmFtZXdvcmsuIFxuXG5BZnRlciB5b3UgZ2V0IGFsbCB0aG9zZSBkZXNpZ24gdGhpbmdzIGRvbmUgYW5kIGFyZSByZWFkeSB0byBidWlsZCB5b3VyIEdVSSwgaXQncyB0aGVuIHRoYXQgeW91IGZhY2UgdGhlIHRhc2sgb2YgbGVhcm5pbmcgYSBHVUkgU0RLLiAgV2h5IG5vdCBzdGFydCB3aXRoIHRoZSBlYXN5IG9uZSB0aGF0IGdpdmVzIHlvdSBtYW55IHN1Y2Nlc3Nlcz8gIFlvdSdyZSBKVVNUIGdldHRpbmcgKioqc3RhcnRlZCoqKiwgc28gY3V0IHlvdXJzZWxmIGEgYnJlYWsgYW5kIHVzZSBQeVNpbXBsZUdVSSBzbyB0aGF0IHlvdSBjYW4gcXVpY2tseSBnZXQgdGhlIGpvYiBkb25lIGFuZCBtb3ZlIG9uIHRvIHRoZSBuZXh0IEdVSSBjaGFsbGVuZ2UuXG5cbiMjIyMgQWR2YW5jZWQgUHJvZ3JhbW1lcnMsIFNoYXJwIE9sZC1UaW1lcnMsIENvZGUgU2xpbmdlcnMgYW5kIENvZGUgSm9ja2V5c1xuXG5JdCdzIG5vdCBwZXJmZWN0LCBidXQgUHlTaW1wbGVHVUkgaXMgYW4gYW1hemluZyBiaXQgb2YgdGVjaG5vbG9neS4gIEl0J3MgdGhlIHByb2dyYW1tZXIsIHRoZSBjb21wdXRlciBzY2llbnRpc3QsIHRoYXQgaGFzIGV4cGVyaWVuY2Ugd29ya2luZyB3aXRoIEdVSXMgaW4gdGhlIHBhc3QgdGhhdCB3aWxsIHJlY29nbml6ZSB0aGUgcG93ZXIgb2YgdGhpcyBzaW1wbGUgYXJjaGl0ZWN0dXJlLlxuXG5XaGF0IEkgaGVhciBmcm9tIHNlYXNvbmVkIHByb2Zlc3Npb25hbHMgaXMgdGhhdCBQeVNpbXBsZUdVSSBzYXZlcyB0aGVtIGEgKip0b24qKiBvZiB0aW1lLiAgVGhleSd2ZSB3cml0dGVuIEdVSSBjb2RlIGJlZm9yZS4gIFRoZXkga25vdyBob3cgdG8gbGF5IG91dCBhIHdpbmRvdy4gIFRoZXNlIGZvbGtzIGp1c3Qgd2FudCB0byBnZXQgdGhlaXIgd2luZG93IHdvcmtpbmcgYW5kIHF1aWNrLlxuXG5XaXRoIHRoZSBoZWxwIG9mIElERSdzIGxpa2UgUHlDaGFybSwgVmlzdWFsIFN0dWRpbyBhbmQgV2luZyAodGhlIG9mZmljYWxseSBzdXBwb3J0ZWQgSURFIGxpc3QpIHlvdSBnZXQgaW5zdGFudCBkb2N1bWVudGF0aW9uIG9uIHRoZSBjYWxscyB5b3UgYXJlIG1ha2luZy4gIE9uIFB5Q2hhcm0geW91IGluc3RhbnRseSBzZWUgYm90aCB0aGUgY2FsbCBzaWduYXR1cmUgYnV0IGFsc28gdGhlIGV4cGxhbmF0aW9ucyBhYm91dCBlYWNoIHBhcmFtZXRlci5cblxuSWYgdGhlIHNjcmVlbnNob3RzLCBkZW1vIHByb2dyYW1zIGFuZCBkb2N1bWVudGF0aW9uIGRvbid0IGNvbnZpbmNlIHlvdSB0byBhdCBsZWFzdCAqKmdpdmUgaXQgYSB0cnksIG9uY2UqKiwgdGhlbiB5b3UncmUgd2F5IHRvbyBidXN5LCBvciAuLi4uLiAgSSBkdW5ubywgSSBzdG9wcGVkIGd1ZXNzaW5nIFwid2h5P1wiIHNvbWUgdGltZSBhZ28uICBcblxuU29tZSBvZiB0aGUgbW9zdCByZWx1Y3RhbnQgb2YgcGVvcGxlIHRvIHRyeSBQeVNpbXBsZUdVSSBoYXZlIHR1cm5lZCBvdXQgdG8gYmUgc29tZSBvZiB0aGUgYmlnZ2VzdCBzdXBwb3J0ZXJzLlxuXG4jIyMjIEEgTW9tZW50IG9mIFRoYW5rcyBUbyBUaGUgUHlTaW1wbGVHVUkgVXNlcnNcblxuSSB3YW50IHRvIHRoYW5rIHRoZSBlYXJseSB1c2VycyBvZiBQeVNpbXBsZUdVSSB0aGF0IHN0YXJ0ZWQgaW4gMjAxOC4gIFlvdXIgc3VnZ2VzdGlvbnMgaGVscGVkIHNoYXBlIHRoZSBwYWNrYWdlIGFuZCBoYXZlIGtlcHQgaXQgbW92aW5nIGZvcndhcmQgYXQgYSBmYXN0IHBhY2UuXG5cbkZvciBhbGwgdGhlIHVzZXJzLCB3aGlsZSBJIGNhbid0IHRlbGwgeW91IHRoZSBjb3VudCBvZiB0aGUgbnVtYmVyIG9mIHRpbWVzIHNvbWVvbmUgaGFzIHNhaWQgXCJ0aGFuayB5b3UgZm9yIFB5U2ltcGxlR1VJXCIgYXMgcGFydCBvZiBsb2dnaW5nIGFuZCBJc3N1ZSwgb3IgYSBwcml2YXRlIG1lc3NhZ2Ugb3IgZW1haWwsIGJ1dCBJIGNhbiB0ZWxsIHlvdSB0aGF0IGl0J3MgYmVlbiBzaWduaWZpY2FudC5cblxuKioqRVZFUlkgb25lIG9mIHRob3NlIFwidGhhbmsgeW91XCIgcGhyYXNlcywgbm8gbWF0dGVyIGhvdyBzbWFsbCB5b3UgbWF5IHRoaW5rIGl0IGlzLCBoZWxwcyB0cmVtZW5kb3VzbHkuKioqXG5cblNvbWV0aW1lcyBpdCdzIHdoYXQgZ2V0cyBtZSBwYXN0IGEgcHJvYmxlbSBvciBnZXRzIG1lIHRvIHdyaXRlIHlldCBtb3JlIGRvY3VtZW50YXRpb24gdG8gdHJ5IGFuZCBoZWxwIHBlb3BsZSB1bmRlcnN0YW5kIHF1aWNrZXIgYW5kIGJldHRlci4gIExldCdzIGp1c3Qgc2F5IHRoZSBlZmZlY3QgaXMgYWx3YXlzIHBvc2l0aXZlIGFuZCBvZnRlbiBzaWduaWZpY2FudC5cblxuUHlTaW1wbGVHVUkgdXNlcnMgaGF2ZSBiZWVuIHN1cGVyLW5pY2UuICBJIGRvdWJ0IGFsbCBPcGVuIFNvdXJjZSBQcm9qZWN0cyBhcmUgdGhpcyB3YXksIGJ1dCBJIGNvdWxkIGJlIHdyb25nIGFuZCBldmVyeSBHaXRIdWIgcmVwb3NpdG9yeSBoYXMgYXdlc29tZSB1c2Vycy4gIElmIHNvLCB0aGF0J3MgZXZlbiBtb3JlIGF3ZXNvbWUhXG5cbioqVEhBTksgWU9VIFB5U2ltcGxlR1VJIFVTRVJTISoqXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS1cblxuIyBMZWFybmluZyBSZXNvdXJjZXNcblxuKioqVGhpcyBkb2N1bWVudC4uLi4geW91IG11c3QgYmUgd2lsbGluZyB0byByZWFkIHRoaXMgZG9jdW1lbnQgaWYgeW91IGV4cGVjdCB0byBsZWFybiBhbmQgdXNlIFB5U2ltcGxlR1VJLioqKiBcblxuSWYgeW91J3JlIHVud2lsbGluZyB0byBldmVuIHRyeSB0byBmaWd1cmUgb3V0IGhvdyB0byBkbyBzb21ldGhpbmcgb3IgZmluZCBhIHNvbHV0aW9uIHRvIGEgcHJvYmxlbSBhbmQgaGF2ZSBkZXRlcm1pbmVkIGl0J3MgXCJlYXNpZXIgdG8gcG9zdCBhIHF1ZXN0aW9uIGZpcnN0IHRoYW4gdG8gbG9vayBhdCB0aGUgZG9jc1wiLCB0aGVuIHRoaXMgaXMgbm90IHRoZSBHVUkgcGFja2FnZSBmb3IgeW91LiAgKklmIHlvdSdyZSB1bndpbGxpbmcgdG8gaGVscCB5b3Vyc2VsZiwgdGhlbiBkb24ndCBleHBlY3Qgc29tZW9uZSBlbHNlIHRvIHRyeSBmaXJzdC4qICBZb3UgbmVlZCB0byBob2xkIHVwIHlvdXIgZW5kIG9mIHRoZSBiYXJnYWluIGJ5IGF0IGxlYXN0IGRvaW5nIHNvbWUgc2VhcmNoZXMgb2YgdGhpcyBkb2N1bWVudC5cblxuV2hpbGUgUHlTaW1wbGVHVUkgZW5hYmxlcyB5b3UgdG8gd3JpdGUgY29kZSBlYXNpbHksIGl0IGRvZXNuJ3QgbWVhbiB0aGF0IGl0IG1hZ2ljYWxseSBmaWxscyB5b3VyIGhlYWQgd2l0aCBrbm93bGVkZ2Ugb24gaG93IHRvIHVzZSBpdC4gIFRoZSBidWlsdC1pbiBkb2NzdHJpbmdzIGhlbHAsIGJ1dCB0aGV5IGNhbiBvbmx5IGdvIHNvIGZhci4gIFxuXG4qKipTZWFyY2hpbmcgdGhpcyBkb2N1bWVudCBpcyBhcyBlYXN5IGFzIHByZXNzaW5nIENvbnRyb2wgKyBGLioqKlxuXG5UaGlzIGRvY3VtZW50IGlzIG9uIHRoZSBHaXRIdWIgaG9tZXBhZ2UsIGFzIHRoZSByZWFkbWUuIGh0dHA6Ly93d3cuUHlTaW1wbGVHVUkuY29tIHdpbGwgZ2V0IHlvdSB0aGVyZS4gIElmIHlvdSBwcmVmZXIgYSB2ZXJzaW9uIHdpdGggYSBUYWJsZSBvZiBDb250ZW50cyBvbiB0aGUgbGVmdCBlZGdlIHRoZW4geW91IHdhbnQgdG8gZ28gdG8gaHR0cDovL3d3dy5QeVNpbXBsZUdVSS5vcmcgLiAgXG5cbiMjIFRoZSBQeVNpbXBsZUdVSSwgRGV2ZWxvcGVyLUNlbnRyaWMgTW9kZWxcblxuWW91IG1heSB0aGluayB0aGF0IHlvdSdyZSBiZWluZyBmZWQgYSBsaW5lIGFib3V0IGFsbCB0aGVzZSBjbGFpbXMgdGhhdCBQeVNpbXBsZUdVSSBpcyBidWlsdCBzcGVjaWZpY2FsbHkgdG8gbWFrZSB5b3VyIGxpZmUgZWFzaWVyIGFuZCBhIGxvdCBtb3JlIGZ1biB0aGFuIHRoZSBhbHRlcm5hdGl2ZXMuLi4uIGVzcGVjaWFsbHkgYWZ0ZXIgcmVhZGluZyB0aGUgYml0IGFib3ZlIGFib3V0IHJlYWRpbmcgdGhpcyBtYW51YWwuXG5cbiMjIyBQc3ljaG9sb2dpY2FsIFdhcmZhcmVcblxuQnJhaW53YXNoZWQuIEtub3cgdGhhdCB0aGVyZSBpcyBhbiBhY3RpdmUgY2FtcGFpZ24gdG8gZ2V0IHlvdSB0byBiZSBzdWNjZXNzZnVsIHVzaW5nIFB5U2ltcGxlR1VJLiAgVGhlIFwiSG9va1wiIHRvIGRyYXcgeW91IGluIGFuZCBrZWVwIHlvdSB3b3JraW5nIG9uIHlvdXIgcHJvZ3JhbSB1bnRpbCB5b3UncmUgc2F0aXNmaWVkIGlzIHRvIHdvcmsgb24gdGhlIGRvcGFtaW5lIGluIHlvdXIgYnJhaW4uIFllcywgeW91ciBhIFB5U2ltcGxlR1VJIHJhdCwgcHJlc3Npbmcgb24gdGhhdCBiYXIgdGhhdCBkcm9wcyBhIGZvb2QgcGVsbGV0IHJld2FyZCBpbiB0aGUgZm9ybSBvZiBhIHdvcmtpbmcgcHJvZ3JhbS5cblxuVGhlIHdheSB0aGlzIHdvcmtzIGlzIHRvIGdpdmUgeW91IHN1Y2Nlc3MgYWZ0ZXIgc3VjY2Vzcywgd2l0aCB2ZXJ5IHNob3J0IGludGVydmFscyBiZXR3ZWVuLiAgRm9yIHRoaXMgdG8gd29yaywgd2hhdCB5b3UncmUgZG9pbmcgbXVzdCB3b3JrLiAgVGhlIGNvZGUgeW91IHJ1biBtdXN0IHdvcmsuICBNYWtlIHNtYWxsIGNoYW5nZXMgdG8geW91ciBwcm9ncmFtIGFuZCBydW4gaXQgb3ZlciBhbmQgb3ZlciBhbmQgb3ZlciBpbnN0ZWFkIG9mIHRyeWluZyB0byBkbyBvbmUgYmlnIG1hc3NpdmUgc2V0IG9mIGNoYW5nZXMuICBUdXJuIG9uZSBrbm9iIGF0IGEgdGltZSBhbmQgeW91J2xsIGJlIGZpbmUuXG5cbkZpbmQgdGhlIGtleWJvYXJkIHNob3J0Y3V0IGZvciB5b3VyIElERSB0byBydW4gdGhlIGN1cnJlbnRseSBzaG93biBwcm9ncmFtIHNvIHRoYXQgcnVubmluZyB0aGUgY29kZSByZXF1aXJlcyAxIGtleXN0cm9rZS4gIE9uIFB5Q2hhcm0sIHRoZSBrZXkgdG8gcnVuIHdoYXQgeW91IHNlZSBpcyBDb250cm9sICsgU2hpZnQgKyBGMTAuICBUaGF0J3MgYSBsb3QgdG8gaG9sZCBkb3duIGF0IG9uY2UuICBJIHByb2dyYW1tZWQgYSBob3RrZXkgb24gbXkga2V5Ym9hcmQgc28gdGhhdCBpdCBlbWl0cyB0aGF0IGNvbWJpbmF0aW9uIG9mIGtleXMgd2hlbiBJIHByZXNzIGl0LiAgUmVzdWx0IGlzIGEgc2luZ2xlIGJ1dHRvbiB0byBydW4uXG5cbiMjIyBUb29sc1xuXG5UaGVzZSB0b29scyB3ZXJlIGNyZWF0ZWQgdG8gaGVscCB5b3UgYWNoaWV2ZSBhIHN0ZWFkeSBzdHJlYW0gb2YgdGhlc2UgbGl0dGxlIHN1Y2Nlc3NzZXMuXG5cbiogVGhpcyByZWFkbWUgYW5kIGl0cyBleGFtcGxlIHBpZWNlcyBvZiBjb2RlXG4qIFRoZSBDb29rYm9vayAtIENvcHksIHBhc3RlLCBydW4sIHN1Y2Nlc3NcbiogRGVtbyBQcm9ncmFtcyAtIENvcHkgdGhlc2Ugc21hbGwgcHJvZ3JhbXMgdG8gZ2l2ZSB5b3Vyc2VsZiBhbiBpbnN0YW50IGhlYWRzdGFydFxuKiBEb2N1bWVudGF0aW9uIHNob3duIGluIHlvdXIgSURFIChkb2NzdHJpbmdzKSBtZWFucyB5b3UgZG8gbm90IG5lZWQgdG8gb3BlbiBhbnkgZG9jdW1lbnQgdG8gZ2V0IHRoZSBmdWxsIGFzc29ydG1lbnQgb2Ygb3B0aW9ucyBhdmFpbGFibGUgdG8geW91IGZvciBlYWNoIEVsZW1lbnQgJiBmdW5jdGlvbiBjYWxsXG5cblRoZSBpbml0aWFsIFwiZ2V0IHVwIGFuZCBydW5uaW5nXCIgcG9ydGlvbiBvZiBQeVNpbXBsZUdVSSBzaG91bGQgdGFrZSB5b3UgbGVzcyB0aGFuIDUgbWludXRlcy4gIFRoZSBnb2FsIGlzIDUgbWludXRlcyBmcm9tIHlvdXIgZGVjaXNpb24gXCJJJ2xsIGdpdmUgaXQgYSB0cnlcIiB0byBoYXZpbmcgeW91ciBmaXJzdCB3aW5kb3cgdXAgb24gdGhlIHNjcmVlbiBcIk9oIHdvdywgaXQgd2FzIHRoYXQgZWFzeT8hXCJcblxuVGhlIHByaW1hcnkgbGVhcm5pbmcgcGF0aGVzIGZvciBQeVNpbXBsZUdVSSBhcmU6XG5cbiogVGhpcyByZWFkbWUgZG9jdW1lbnQgb3ZlciAxMDAgcGFnZXMgb2YgUHlTaW1wbGVHVUkgVXNlciBNYW51YWwgXG5cdCogaHR0cDovL3d3dy5QeVNpbXBsZUdVSS5vcmdcbiogVGhlIENvb2tib29rIC0gUmVjaXBlcyB0byBnZXQgeW91IGdvaW5nIGFuZCBxdWlja1xuXHQqIGh0dHA6Ly9Db29rYm9vay5QeVNpbXBsZUdVSS5vcmdcbiogVGhlIERlbW8gUHJvZ3JhbXMgLSBTdGFydCBoYWNraW5nIG9uIG9uZSBvZiB0aGVzZSBydW5uaW5nIHNvbHVpdGlvbnNcblx0KiBodHRwOi8vd3d3LlB5U2ltcGxlR1VJLmNvbVxuKiBUaGUgWW91VHViZSB2aWRlb3MgLSBJZiB5b3UgbGlrZSBpbnN0cnVjdGlvbmFsIHZpZGVvcywgdGhlcmUgYXJlIDE1KyB2aWRlb3Ncblx0KiBbNSBwYXJ0IHNlcmllcyBvZiBiYXNpY3NdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXlsaXN0P2xpc3Q9UExsOGREMGRveXJ2SE1vSkdUZE10Z0x1SHltYXFKVmp6dClcblx0KiBbMTAgcGFydCBzZXJpZXMgb2YgbW9yZSBkZXRhaWxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3BsYXlsaXN0P2xpc3Q9UExsOGREMGRveXJ2R3lYak9STnZpclRJWnhLb3BKcjhzMClcblxuRXZlcnl0aGluZyBpcyBnZWFyZWQgdG93YXJkcyBnaXZpbmcgeW91IGEgXCJxdWljayBzdGFydFwiIHdoZXRoZXIgdGhhdCBiZSBhIFJlY2lwZSBvciBhIERlbW8gUHJvZ3JhbS4gIFRoZSBpZGVhIGlzIHRvIGdpdmUgeW91IHNvbWV0aGluZyBydW5uaW5nIGFuZCBsZXQgeW91IGhhY2sgYXdheSBhdCBpdC4gIEFzIGEgZGV2ZWxvcGVyIHRoaXMgc2F2ZXMgdHJlbWVuZG91cyBhbW91bnRzIG9mIHRpbWUuXG5cbllvdSAqKnN0YXJ0Kiogd2l0aCBhIHdvcmtpbmcgcHJvZ3JhbSwgYSBHVUkgb24gdGhlIHNjcmVlbi4gIFRoZW4gaGF2ZSBhdCBpdC4gIElmIHlvdSBicmVhayBzb21ldGhpbmcgKGBcImEgaGFwcHkgbGl0dGxlIGFjY2lkZW50XCJgIGFzIEJvYiBSb3NzIHB1dCBpdCksIHRoZW4geW91IGNhbiBhbHdheXMgYmFja3RyYWNrIGEgbGl0dGxlIHRvIGEga25vd24gd29ya2luZyBwb2ludC5cblxuQSBoaWdoIHBlcmNlbnRhZ2Ugb2YgdXNlcnMgcmVwb3J0IGJvdGggbGVhcm5pbmcgUHlTaW1wbGVHVUkgYW5kIGNvbXBsZXRpbmcgdGhlaXIgcHJvamVjdCBpbiBhIHNpbmdsZSBkYXkuXG5cblRoaXMgaXNuJ3QgYSByYXJlIGV2ZW50IGFuZCBpdCdzIG5vdCBicmFnZ2luZy4gIEdVSSBwcm9ncmFtbWluZyBkb2Vzbid0IEhBVkUgdG8gYmUgZGlmZmljdWx0IGJ5IGRlZmluaXRpb24gYW5kIFB5U2ltcGxlR1VJIGhhcyBjZXJ0YWlubHkgbWFkZSBpdCBtdWNoIG11Y2ggbW9yZSBhcHByb2FjaGFibGUgYW5kIGVhc2llciAobm90IHRvIG1lbnRpb24gc2ltcGxlcikuXG5cbkJ1dCwgeW91IG5lZWQgdG8gbG9vayBhdCB0aGlzIGRvY3VtZW50IHdoZW4gcHVzaGluZyBpbnRvIG5ldywgdW5rbm93biB0ZXJyaXRvcnkuICBEb24ndCBndWVzcy4uLiBvciBtb3JlIHNwZWNpZmljYWxseSwgZG9uJ3QgZ3Vlc3MgYW5kIHRoZW4gZ2l2ZSB1cCB3aGVuIGl0IGRvZXNuJ3Qgd29yay5cblxuIyMgVGhpcyBSZWFkbWUgYW5kIENvb2tib29rXG5cblRoZSByZWFkbWUgYW5kIENvb2tib29rLCBldGMgYXJlIGJlc3Qgdmlld2VkIG9uIFJlYWRUaGVEb2NzLiAgVGhlIHF1aWNrZXN0IHdheSB0aGVyZSBpcyB0byB2aXNpdDpcbmh0dHA6Ly93d3cuUHlTaW1wbGVHVUkub3JnXG5cbllvdSB3aWxsIGJlIGF1dG8tZm9yd2FyZGVkIHRvIHRoZSByaWdodCBkZXN0aW5hdGlvbi4gIFRoZXJlIGFyZSBtdWx0aXBsZSB0YWJzIG9uIFJlYWRUaGVEb2NzLiAgT25lIGZvciB0aGUgbWFpbiByZWFkbWUgYW5kIG9uZSBmb3IgdGhlIENvb2tib29rLiAgVGhlcmUgYXJlIG90aGVyIGRvY3VtZW50cyB0aGVyZSBsaWtlIGFuIGFyY2hpdGVjdHVyYWwgZGVzaWduIGRvYy5cblxuVGhlIENvb2tib29rIGhhcyBhcHByb3ggMjcgXCJSZWNpcGVzXCIgb3Igc2hvcnQgcHJvZ3JhbXMgdGhhdCBjYW4gYmUgZWFzaWx5IGNvcGllZCBhbmQgcGFzdGVkLlxuXG4jIyBEZW1vIFByb2dyYW1zXG5cblRoZSBHaXRIdWIgcmVwbyBoYXMgdGhlIERlbW8gUHJvZ3JhbXMuICBUaGVyZSBhcmUgb25lcyBidWlsdCBmb3IgcGxhaW4gUHlTaW1wbGVHVUkgdGhhdCBhcmUgdXN1YWxseSBwb3J0cmFibGUgdG8gb3RoZXIgdmVyc2lvbnMgb2YgUHlTaW1wbGVHVUkuICBBbmQgdGhlcmUgYXJlIHNvbWUgdGhhdCBhcmUgYXNzb2NpYXRlZCB3aXRoIG9uZSBvZiB0aGUgb3RoZXIgcG9ydHMuICBUaGUgZWFzaWVzdCB3YXkgdG8gdGhlIEdpdEh1YjpcblxuaHR0cDovL3d3dy5QeVNpbXBsZUdVSS5jb21cblxuQXMgb2YgdGhpcyB3cml0aW5nLCBvbiAyMDE5LTA3LTEwIHRoZXJlIGFyZSAxNzcgRGVtbyBQcm9ncmFtcyBmb3IgeW91IHRvIGNob29zZSBmcm9tLiAgXG5cblRoZXNlIHByb2dyYW1zIGRlbW9uc3RyYXRlIHRvIHlvdSBob3cgdG8gdXNlIHRoZSBFbGVtZW50cyBhbmQgZXNwZWNpYWxseSBob3cgdG8gaW50ZWd0YXRlIFB5U2ltcGxlR1VJIHdpdGggc29tZSBvZiB0aGUgcG9wdWxhciBvcGVuIHNvdXJjZSB0ZWNobm9sb2dpZXMgc3VjaCBhcyBPcGVuQ1YsIFB5R2FtZSwgUHlQbG90LCBhbmQgTWF0cGxvdGxpYiB0byBuYW1lIGEgZmV3LlxuXG5NYW55IERlbW8gUHJvZ3JhbXMgdGhhdCBhcmUgaW4gdGhlIG1haW4gZm9sZGVyIHdpbGwgcnVuIG9uIG11bHRpcGxlIHBvcnRzIG9mIFB5U2ltcGxlR1VJLiAgVGhlcmUgYXJlIGFsc2UgcG9ydC1zcGVjaWZpYyBEZW1vIFByb2dyYW1zLiAgWW91J2xsIGZpbmQgdGhvc2UgaW4gdGhlIGZvbGRlciB3aXRoIHRoZSBwb3J0LiAgU28sIFF0IHNwZWNpZmljIERlbW8gUHJvZ3JhbXMgYXJlIGluIHRoZSBQeVNpbXBsZUdVSVF0IGZvbGRlci5cblxuLS0tXG5cbiMgVGhlIFF1aWNrIFRvdXJcblxuTGV0J3MgdGFrZSBhIHN1cGVyLWJyaWVmIHRvdXIgYXJvdW5kIFB5U2ltcGxlR1VJIGJlZm9yZSBkaWdnaW5nIGludG8gdGhlIGRldGFpbHMuICBUaGVyZSBhcmUgMiBsZXZlbHMgb2Ygd2luZG93aW5nIHN1cHBvcnQgaW4gUHlTaW1wbGVHVUkgLSAgSGlnaCBMZXZlbCBhbmQgQ3VzdG9taXplZC5cblxuVGhlIGhpZ2gtbGV2ZWwgY2FsbHMgYXJlIHRob3NlIHRoYXQgcGVyZm9ybSBhIGxvdCBvZiB3b3JrIGZvciB5b3UuIFRoZXNlIGFyZSBub3QgY3VzdG9tIG1hZGUgd2luZG93cyAodGhvc2UgYXJlIHRoZSBvdGhlciB3YXkgb2YgaW50ZXJhY3Rpbmcgd2l0aCBQeVNpbXBsZUdVSSkuXG5cbkxldCdzIHVzZSBvbmUgb2YgdGhlc2UgaGlnaCBsZXZlbCBjYWxscywgdGhlIGBQb3B1cGAgYW5kIHVzZSBpdCB0byBjcmVhdGUgb3VyIGZpcnN0IHdpbmRvdywgdGhlIG9ibGlnYXRvcnkgXCJIZWxsbyBXb3JsZFwiLiAgSXQncyBhIHNpbmdsZSBsaW5lIG9mIGNvZGUuICBZb3UgY2FuIHVzZSB0aGVzZSBjYWxscyBsaWtlIHByaW50IHN0YXRlbWVudHMsIGFkZGluZyBhcyBtYW55IHBhcmFtZXRlcnMgYW5kIHR5cGVzIGFzIHlvdSBkZXNpcmUuXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbnNnLlBvcHVwKCdIZWxsbyBGcm9tIFB5U2ltcGxlR1VJIScsICdUaGlzIGlzIHRoZSBzaG9ydGVzdCBHVUkgcHJvZ3JhbSBldmVyIScpXG5gYGBcblxuIVtoZWxsbyB3b3JsZF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NjAwNDctMWY3ZjYzODAtYWVjNi0xMWU4LTlkNWUtMTJlZjkzNWJjYWRlLmpwZylcblxuT3IgaG93IGFib3V0IGEgKioqY3VzdG9tIEdVSSoqKiBpbiAxIGxpbmUgb2YgY29kZT8gIE5vIGtpZGRpbmcgdGhpcyBpcyBhIHZhbGlkIHByb2dyYW0gYW5kIGl0IHVzZXMgRWxlbWVudHMgYW5kIHByb2R1Y2UgdGhlIHNhbWUgV2lkZ2V0cyBsaWtlIHlvdSBub3JtYWxseSB3b3VsZCBpbiBhIHRraW50ZXIgcHJvZ3JhbS4gIEl0J3MganVzdCBiZWVuIGNvbXBhY3RlZCB0b2dldGhlciBpcyBhbGwsIHN0cmljdGx5IGZvciBkZW1vbnN0cmF0aW9uIHB1cnBvc2VzIGFzIHRoZXJlJ3Mgbm8gbmVlZCB0byBnbyB0aGF0IGV4dHJlbWUgaW4gY29tcGFjdG5lc3MsIHVubGVzcyB5b3UgaGF2ZSBhIHJlYXNvbiB0byBhbmQgdGhlbiB5b3UgY2FuIGJlIHRoYW5rZnVsIGl0J3MgcG9zc2libGUgdG8gZG8uXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbmV2ZW50LCB2YWx1ZXMgPSBzZy5XaW5kb3coJ0dldCBmaWxlbmFtZSBleGFtcGxlJywgW1tzZy5UZXh0KCdGaWxlbmFtZScpXSwgW3NnLklucHV0KCksIHNnLkZpbGVCcm93c2UoKV0sIFtzZy5PSygpLCBzZy5DYW5jZWwoKV0gXSkuUmVhZCgpXG5gYGBcblxuIVtnZXQgZmlsZW5hbWVdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTYwMDM5LWYxMDE4ODgwLWFlYzUtMTFlOC04YTQzLTNkN2Y4ZmY5M2I2Ny5qcGcpXG5cbiMjIFRoZSBCZWF1dHkgb2YgU2ltcGxpY2l0eVxuXG4+IE9uZSBkYXkgSSB3aWxsIGZpbmQgdGhlIHJpZ2h0IHdvcmRzLCBhbmQgdGhleSB3aWxsIGJlIHNpbXBsZS5cbsOi4oKs4oCiIEphY2sgS2Vyb3VhY1xuXG5UaGF0J3MgbmljZSB0aGF0IHlvdSBjYW4gY3J1bmNoIHRoaW5ncyBpbnRvIDEgbGluZSwgbGlrZSBpbiB0aGUgYWJvdmUgZXhhbXBsZSwgYnV0IGl0J3Mgbm90IHJlYWRhYmxlLiAgTGV0J3MgYWRkIHNvbWUgd2hpdGVzcGFjZSBzbyB5b3UgY2FuIHNlZSB0aGUgKipiZWF1dHkqKiBvZiB0aGUgUHlTaW1wbGVHVUkgY29kZS5cblxuVGFrZSBhIG1vbWVudCBhbmQgbG9vayBhdCB0aGUgY29kZSBiZWxvdy4gIENhbiB5b3UgXCJzZWVcIiB0aGUgd2luZG93IGxvb2tpbmcgYXQgdGhlIGBsYXlvdXRgIHZhcmlhYmxlLCBrbm93aW5nIHRoYXQgZWFjaCBsaW5lIG9mIGNvZGUgcmVwcmVzZW50cyBhIHNpbmdsZSByb3cgb2YgRWxlbWVudHM/ICBUaGVyZSBhcmUgMyBcInJvd3NcIiBvZiBFbGVtZW50cyBzaG93biBpbiB0aGUgd2luZG93IGFuZCB0aGVyZSBhcmUgMyBsaW5lcyBvZiBjb2RlIHRoYXQgZGVmaW5lIGl0LlxuXG5DcmVhdGluZyBhbmQgcmVhZGluZyB0aGUgdXNlcidzIGlucHV0cyBmb3IgdGhlIHdpbmRvdyBvY2N1cHkgdGhlIGxhc3QgMiBsaW5lcyBvZiBjb2RlLCBvbmUgdG8gY3JlYXRlIHRoZSB3aW5kb3csIHRoZSBsYXN0IGxpbmUgc2hvd3MgdGhlIHdpbmRvdyB0byB0aGUgdXNlciBhbmQgZ2V0cyB0aGUgaW5wdXQgdmFsdWVzICh3aGF0IGJ1dHRvbiB0aGV5IGNsaWNrZWQsIHdoYXQgd2FzIGlucHV0IGluIHRoZSBJbnB1dCBFbGVtZW50KVxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbW3NnLlRleHQoJ0ZpbGVuYW1lJyldLFxuICAgICAgICAgIFtzZy5JbnB1dCgpLCBzZy5GaWxlQnJvd3NlKCldLCBcblx0ICBbc2cuT0soKSwgc2cuQ2FuY2VsKCldXSBcblxud2luZG93ID0gc2cuV2luZG93KCdHZXQgZmlsZW5hbWUgZXhhbXBsZScsIGxheW91dClcblxuZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbmBgYFxuXG4hW2dldCBmaWxlbmFtZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NjAwMzktZjEwMTg4ODAtYWVjNS0xMWU4LThhNDMtM2Q3ZjhmZjkzYjY3LmpwZylcblxuVW5saWtlIG90aGVyIEdVSSBTREtzLCB5b3UgY2FuIGxpa2VseSB1bmRlcnN0YW5kIGV2ZXJ5IGxpbmUgb2YgY29kZSB5b3UganVzdCByZWFkLCBldmVuIHRob3VnaCB5b3UgaGF2ZSBub3QgeWV0IHJlYWQgYSBzaW5nbGUgaW5zdHJ1Y3Rpb25hbCBsaW5lIGZyb20gdGhpcyBkb2N1bWVudCBhYm91dCBob3cgeW91IHdyaXRlIEVsZW1lbnRzIGluIGEgbGF5b3V0LlxuXG5UaGVyZSBhcmUgbm8gcGVza3kgY2xhc3NlcyB5b3UgYXJlICpyZXF1aXJlZCogdG8gd3JpdGUsIG5vIGNhbGxiYWNrIGZ1bmN0aW9ucyB0byB3b3JyeSBhYm91dC4gIE5vbmUgb2YgdGhhdCBpcyByZXF1aXJlZCB0byBzaG93IGEgd2luZG93IHdpdGggc29tZSB0ZXh0LCBhbiBpbnB1dCBhcmVhIGFuZCAyIGJ1dHRvbnMgdXNpbmcgUHlTaW1wbGVHVUkuICBcblxuVGhlIHNhbWUgY29kZSwgaW4gdGt0aW50ZXIsIGlzIDUgdGltZXMgbG9uZ2VyIGFuZCBJJ20gZ3Vlc3NpbmcgeW91IHdvbid0IGJlIGFibGUgdG8ganVzdCByZWFkIGl0IGFuZCB1bmRlcnN0YW5kIGl0LiAgV2hpbGUgeW91IHdlcmUgcmVhZGluZyB0aHJvdWdoIHRoZSBjb2RlLCBkaWQgeW91IG5vdGljZSB0aGVyZSBhcmUgbm8gY29tbWVudHMsIHlldCB5b3Ugc3RpbGwgd2VyZSBhYmxlIHRvIHVuZGVyc3RhbmQsIHVzaW5nIGludHVpdGlvbiBhbG9uZS5cblxuWW91IHdpbGwgZmluZCB0aGlzIHRoZW1lIG9mIFNpbXBsZSBldmVyeXdoZXJlIGluIGFuZCBhcm91bmQgUHlTaW1wbGVHVUkuICBJdCdzIGEgd2F5IG9mIHRoaW5raW5nIGFzIHdlbGwgYXMgYW4gYXJjaGl0ZWN0dXJlIGRpcmVjdGlvbi4gIFJlbWVtYmVyLCB5b3UsIE1yLi9Ncy4gRGV2ZWxvcGVyLCBhcmUgYXQgdGhlIGNlbnRlciBvZiB0aGUgcGFja2FnZS4gIFNvLCBmcm9tIHlvdXIgdmFudGFnZSBwb2ludCwgb2YgY291cnNlIGV2ZXJ5dGhpbmcgc2hvdWxkIGxvb2sgYW5kIGZlZWwgc2ltcGxlLlxuXG5Ob3Qgb25seSB0aGF0LCBpdCdzIHRoZSBQeXRob25pYyB0aGluZyB0byBkby4gIEhhdmUgYSBsb29rIGF0IGxpbmUgMyBvZiB0aGUgXCJaZW4gb2YgUHl0aG9uXCIuXG5cbj4gVGhlIFplbiBvZiBQeXRob24sIGJ5IFRpbSBQZXRlcnNcbj5cbj4gQmVhdXRpZnVsIGlzIGJldHRlciB0aGFuIHVnbHkuXG4+IEV4cGxpY2l0IGlzIGJldHRlciB0aGFuIGltcGxpY2l0LlxuPiBTaW1wbGUgaXMgYmV0dGVyIHRoYW4gY29tcGxleC5cbj4gQ29tcGxleCBpcyBiZXR0ZXIgdGhhbiBjb21wbGljYXRlZC5cbj4gRmxhdCBpcyBiZXR0ZXIgdGhhbiBuZXN0ZWQuXG4+IFNwYXJzZSBpcyBiZXR0ZXIgdGhhbiBkZW5zZS5cbj4gUmVhZGFiaWxpdHkgY291bnRzLlxuPiBTcGVjaWFsIGNhc2VzIGFyZW4ndCBzcGVjaWFsIGVub3VnaCB0byBicmVhayB0aGUgcnVsZXMuXG4+IEFsdGhvdWdoIHByYWN0aWNhbGl0eSBiZWF0cyBwdXJpdHkuXG4+IEVycm9ycyBzaG91bGQgbmV2ZXIgcGFzcyBzaWxlbnRseS5cbj4gVW5sZXNzIGV4cGxpY2l0bHkgc2lsZW5jZWQuXG4+IEluIHRoZSBmYWNlIG9mIGFtYmlndWl0eSwgcmVmdXNlIHRoZSB0ZW1wdGF0aW9uIHRvIGd1ZXNzLlxuPiBUaGVyZSBzaG91bGQgYmUgb25lLS0gYW5kIHByZWZlcmFibHkgb25seSBvbmUgLS1vYnZpb3VzIHdheSB0byBkbyBpdC5cbj4gQWx0aG91Z2ggdGhhdCB3YXkgbWF5IG5vdCBiZSBvYnZpb3VzIGF0IGZpcnN0IHVubGVzcyB5b3UncmUgRHV0Y2guXG4+IE5vdyBpcyBiZXR0ZXIgdGhhbiBuZXZlci5cbj4gQWx0aG91Z2ggbmV2ZXIgaXMgb2Z0ZW4gYmV0dGVyIHRoYW4gKnJpZ2h0KiBub3cuXG4+IElmIHRoZSBpbXBsZW1lbnRhdGlvbiBpcyBoYXJkIHRvIGV4cGxhaW4sIGl0J3MgYSBiYWQgaWRlYS5cbj4gSWYgdGhlIGltcGxlbWVudGF0aW9uIGlzIGVhc3kgdG8gZXhwbGFpbiwgaXQgbWF5IGJlIGEgZ29vZCBpZGVhLlxuPiBOYW1lc3BhY2VzIGFyZSBvbmUgaG9ua2luZyBncmVhdCBpZGVhIC0tIGxldCdzIGRvIG1vcmUgb2YgdGhvc2UhXG5cbkkganVzdCBob3BlIHJlYWRpbmcgYWxsIHRoZXNlIHBhZ2VzIG9mIGRvY3VtZW50YXRpb24gaXMgZ29pbmcgdG8gbWFrZSB5b3UgYmVsaWV2ZSB0aGF0IHdlJ3JlIGJyZWFraW5nIHN1Z2dlc3Rpb246XG4+IElmIHRoZSBpbXBsZW1lbnRhdGlvbiBpcyBoYXJkIHRvIGV4cGxhaW4sIGl0J3MgYSBiYWQgaWRlYS5cbj4gSWYgdGhlIGltcGxlbWVudGF0aW9uIGlzIGVhc3kgdG8gZXhwbGFpbiwgaXQgbWF5IGJlIGEgZ29vZCBpZGVhLlxuXG5JIGRvbid0IHRoaW5rIFB5U2ltcGxlR1VJIGlzICoqKmRpZmZpY3VsdCoqKiB0byBleHBsYWluLCBidXQgSSBhbSBzdHJpdmluZyB0byBmdWxseSBleHBsYWluIGl0IHNvIHRoYXQgeW91IGRvbid0IGRvIHRoaXM6XG5cbj4gSW4gdGhlIGZhY2Ugb2YgYW1iaWd1aXR5LCByZWZ1c2UgdGhlIHRlbXB0YXRpb24gdG8gZ3Vlc3MuXG5cblNvbWV0aW1lcyB5b3UgY2FuIGd1ZXNzIGFuZCBiZSBmaW5lLiAgT3RoZXIgdGltZXMsIHRoaW5ncyBtYXkgd29yaywgYnV0IHRoZSBzaWRlIGVmZmVjdHMgYXJlIHBvdGVudGlhbGx5IHNpZ25pZmljYW50LiAgVGhlcmUgbWF5IGJlIGEgbXVjaCBiZXR0ZXIgd2F5IHRvIHNvbHZlIGEgcHJvYmxlbSAtIExvZyBhbiBJc3N1ZSBvbiBHaXRIdWIhICBcblxuLS0tLS0tXG5cbiMgU29tZSBFeGFtcGxlc1xuXG4jIyBQb2xpc2hpbmcgWW91ciBXaW5kb3dzID0gQnVpbGRpbmcgXCJCZWF1dGlmdWwgV2luZG93c1wiXG5cbkFuZCBTVElMTCB0aGUgWmVuIG9mIFB5dGhvbiBmaXRzOlxuXG4+IEJlYXV0aWZ1bCBpcyBiZXR0ZXIgdGhhbiB1Z2x5LlxuXG5idXQgdGhpcyBmaXRzIHRvbzpcblxuPiBBbHRob3VnaCBwcmFjdGljYWxpdHkgYmVhdHMgcHVyaXR5LlxuXG5GaW5kIGEgYmFsYW5jZSB0aGF0IHdvcmtzIGZvciB5b3UuXG5cblwiQnV0IHRraW50ZXIgc3Vja3NcIlxuXCJJdCBsb29rcyBsaWtlIHRoZSAxOTkwc1wiICh0aGlzIG9uZSBpcyBvZnRlbiBzYWlkIGJ5IHBlb3BsZSB0aGF0IHdlcmUgbm90IGFsaXZlIGluIHRoZSAxOTkwcylcblwiV2hhdCBQeXRob24gR1VJIFNESyB3aWxsIG1ha2UgbXkgd2luZG93IGxvb2sgYmVhdXRpZnVsP1wiICAocG9zdGVkIHRvIFJlZGRpdCBhdCBsZWFzdCBldmVyeSAyIHdlZWtzKVxuXG5UaGVzZSB3aW5kb3dzIGJlbG93IHdlcmUgQUxMIG1hZGUgdXNpbmcgUHlTaW1wbGVHVUksIHRoZSB0a2ludGVyIHZlcnNpb24gYW5kIHRoZXkgbG9vayBnb29kIGVub3VnaCB0byBub3QgYmUgc2ltcGx5IHNjb2ZmZWQgYXQgYW5kIGRpc21pc3NlZC4gIFJlbWVtYmVyLCBkZXZlbG9wZXIsIHlvdSBoYXZlIGEgcmF0aGVyIHNpZ25pZmljYW50IGhhbmQgaW4gaG93IHlvdXIgYXBwbGljYXRpb24gbG9va3MgYW5kIG9wZXJhdGVzLiAgWW91IGNlcnRhaW5seSBjYW5ub3QgcGluIGl0IGFsbCBvbiB0aGUgR1VJcyB5b3UncmUgdXNpbmcuXG5cblNvIG1hbnkgcG9zdHMgb24gUmVkZGl0IGFza2luZyB3aGljaCBHVUkgaXMgZ29pbmcgdG8gcmVzdWx0IGluIGEgXCJiZWF1dGlmdWwgd2luZG93XCIsIGFzIGlmIHRoZXJlJ3MgYSBtYWdpYyBHVUkgbGlicmFyeSB0aGF0IHByZXR0aWVzIHRoaW5ncyB1cCBmb3IgeW91LiAgVGhlcmUgYXJlIHNvbWUgY2FsbHMgaW4gUHlTaW1wbGVHVUkgdGhhdCB3aWxsIGhlbHAgeW91LiAgRm9yIGV4YW1wbGUsIHlvdSBjYW4gbWFrZSBhIHNpbmdsZSBjYWxsIHRvIFwiQ2hhbmcgdGhlIGxvb2sgYW5kIGZlZWxcIiB3aGljaCBsb2FkcyBwcmVkZWZpbmVkIGNvbG9yIHBhbGxldHMgc28geW91ciB3aW5kb3dzIGNhbiBoYXZlIHNvbWUgaW5zdGFudCBjb2xvciBhbmQgaXQgbWF0Y2hlcy5cblxuQmVhdXRpZnVsIHdpbmRvd3MgYXJlIGNyZWF0ZWQsIG5vdCBzaW1wbHkgZ2l2ZW4gdG8geW91LiAgVGhlcmUgYXJlIHBlb3BsZSB0aGF0IGRlc2lnbiBhbmQgY3JlYXRlIGFydHdvcmsgZm9yIHVzZXIgaW50ZXJmYWNlcywgeW91IGtub3cgdGhhdCByaWdodD8gIEFydGlzdHMgZHJhdyBidXR0b25zLCBhcnR3b3JrIHRoYXQgeW91IGluY2x1ZGUgaW4gdGhlIHdpbmRvdyB0byBtYWtlIGl0IG5pY2VyLlxuXG5Tb21lIG9mIHRoZXNlIGhhdmUgYmVlbiBcInBvbGlzaGVkXCIsIG90aGVycyBsaWtlIHRoZSBNYXRwbG90bGliIGV4YW1wbGUgaXMgbW9yZSBhIGZ1bmN0aW9uYWwgZXhhbXBsZSB0byBzaG93IHlvdSBpdCB3b3Jrcy5cblxuIVtiYXR0ZXJ1cDJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzUwMzc4OTAyLTZhYTJiYjAwLTA2MGEtMTFlOS04ZjJmLWQ3NDY2OTRmYTRlZS5naWYpXG5cbiFbdW5vX2ZpbmFsXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80OTk0NTIzMi02Nzk1MjU4MC1mZWJhLTExZTgtOTBjOC03ZGMzMWM1ZjdjNjcuZ2lmKVxuXG5UaGlzIGNoZXNzIHByb2dyYW0gaXMgY2FwYWJsZSBvZiBydW5uaW5nIG11bHRpcGxlIEFJIGNoZXNzIGVuZ2luZXMgYW5kIHdhcyB3cml0dGVuIGJ5IGFub3RoZXIgdXNlciB1c2luZyBQeVNpbXBsZUdVSS5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjEwODMxMDItZTkyMTQ3ODAtYTNmOC0xMWU5LTlkMWQtN2MwYTM4ODYyNWJlLnBuZylcblxuVGhpcyBkb3dubG9hZGVyIGNhbiBkb3dubG9hZCBmaWxlcyBhcyB3ZWxsIGFzIFlvdVR1YmUgdmlkZW9zIGFuZCBtZXRhZGF0YS4gIElmIHlvdSdyZSB3b3JyaWVkIGFib3V0IG11bHRpcGxlIHdpbmRvd3Mgd29ya2luZywgZG9uJ3QuICBXb3JyaWVkIHlvdXIgcHJvamVjdCBpcyBcInRvbyBtdWNoXCIgb3IgXCJ0b28gY29tcGxleFwiIGZvciBQeVNpbXBsZUdVST8gIERvIGFuIGluaXRpYWwgYXNzZXNzbWVudCBpZiB5b3Ugd2FudC4gIENoZWNrIG91dCB3aGF0IG90aGVycyBoYXZlIGRvbmUuICBcblxuWW91ciBwcm9ncmFtIGhhdmUgMiBvciAzIHdpbmRvd3MgYW5kIHlvdSdyZSBjb25jZXJuZWQ/ICBCZWxvdyB5b3UnbGwgc2VlIDExIHdpbmRvd3Mgb3BlbiwgZWFjaCBydW5uaW5nIGluZGVwZW5kZW50bHkgd2l0aCBtdWx0aXBsZSB0YWJzIHBlciB3aW5kb3cgYW5kIHByb2dyZXNzIG1ldGVycyB0aGF0IGFyZSBhbGwgYmVpbmcgdXBkYXRlZCBjb25jdXJyZW50bHkuICBcblxuIVtjb25jdXJyZW50X3dpbmRvd3NdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYyODMyNDQ4LTNlYjk2MTgwLWJiZmMtMTFlOS04Nzc3LTZmMjY2OTU2NmM5My5wbmcpXG5cbiFbcHlwbG90IDFdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0NjgzMzM2LTExZDQ2NDgwLWFhMTQtMTFlOC05ZDZjLWY2NTY3OTZmYzkxNS5qcGcpXG5cbk1ha2UgYmVhdXRpZnVsIGxvb2tpbmcsIGFscGhhLWJsZW5kZWQgKHBhcnRpYWxseSB0cmFuc3BhcmVudCkgUmFpbm1ldGVyLXN0eWxlIERlc2t0b3AgV2lkZ2V0cyB0aGF0IHJ1biBpbiB0aGUgYmFja2dyb3VuZC5cblxuIVtjcHUgY29yZXMgZGFzaGJvYXJkIDJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ3NjExNzQ5LTE4OTY0YzgwLWRhNDItMTFlOC05M2M0LTY4MjFhNmZjZTQ4OC5naWYpXG5cbldhbnQgdG8gYnVpbGQgYSBDcm9zc3dvcmQgUHV6emxlPyAgTm8gcHJvYmxlbSwgdGhlIGRyYXdpbmcgcHJpbWl0aXZlcyBhcmUgdGhlcmUgZm9yIHlvdS5cblxuIVtzbmFnLTAxODVdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ3OTY4MzQwLTk4YmE0NDgwLWUwMzYtMTFlOC05ZDQ0LThhMzlhYzE3NDUzMy5qcGcpXG5cblRoZXJlIGFyZSBidWlsdC1pbiBkcmF3aW5nIHByaW1pdGl2ZXNcblxuIVtzbmFnLTAxNjhdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ3NzUzMjI1LTJlZDQyMDgwLWRjNmQtMTFlOC04OGQxLWNmODMzZGI2YzdlZi5qcGcpXG5cbkZyYW1lIGZyb20gaW50ZWdyYXRpb24gd2l0aCBhIFlPTE8gTWFjaGluZSBMZWFybmluZyBwcm9ncmFtIHRoYXQgZG9lcyBvYmplY3QgaWRlbnRpZmljYXRpb24gaW4gcmVhbHRpbWUgd2hpbGUgYWxsb3dpbmcgdGhlIHVzZXIgdG8gYWRqdXN0IHRoZSBhbGdvcml0aG1zIHNldHRpbmdzIHVzaW5nIHRoZSBzbGlkZXJzIHVuZGVyIHRoZSBpbWFnZS4gIFRoaXMgbGV2ZWwgb2YgaW50ZXJhY3Rpdml0eSB3aXRoIGFuIEFJIGFsZ29yaXRobSBpcyBzdGlsbCB1bnVzdWFsIHRvIGZpbmQgZHVlIHRvIGRpZmZpY3VsdHkgb2YgbWVyZ2luZyB0aGUgdGVjaG5vbG9naWVzIG9mIEFJIGFuZCBHVUkuICBJdCdzIG5vIGxvbmdlciBkaWZmaWN1bHQuICBUaGlzIHByb2dyYW0gaXMgdW5kZXIgMjAwIGxpbmVzIG9mIGNvZGUuXG5cbiFbc25hZy0wMjc4XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80ODg0NTU4My1lNDc1Mjk4MC1lZDZhLTExZTgtOWIyZi02YzNkNWQyNDQyYmEuanBnKVxuXG4jIFBpIFdpbmRvd3NcblxuUGVyaGFwcyB5b3UncmUgbG9va2luZyBmb3IgYSB3YXkgdG8gaW50ZXJhY3Qgd2l0aCB5b3VyICoqUmFzcGJlcnJ5IFBpKiogaW4gYSBtb3JlIGZyaWVuZGx5IHdheS4gIFlvdXIgUHlTaW1wbGVHVUkgY29kZSB3aWxsIHJ1biBvbiBhIFBpIHdpdGggbm8gcHJvYmxlbS4gIFRraW50ZXIgaXMgYWxpdmUgYW5kIHdlbGwgb24gdGhlIFBpIHBsYXRmb3JtLiBIZXJlIGlzIGEgc2VsZWN0aW9uIG9mIHNvbWUgb2YgdGhlIEVsZW1lbnRzIHNob3duIG9uIHRoZSBQaS4gIFlvdSBnZXQgdGhlIHNhbWUgRWxlbWVudHMgb24gdGhlIFBpIGFzIHlvdSBkbyBXaW5kb3dzIGFuZCBMaW51eC5cblxuIVtyYXNwYmVycnkgcGkgZXZlcnl0aGluZyBkZW1vXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDI3OTY5NC01YjU4Y2U4MC1hMjIwLTExZTgtOWFiNi1kNjAyMWY1YTk0NGYuanBnKVxuXG5Zb3UgY2FuIGFkZCBjdXN0b20gYXJ0d29yayB0byBtYWtlIGl0IGxvb2sgbmljZSwgbGlrZSB0aGUgRGVtbyBQcm9ncmFtIC0gV2VhdGhlciBGb3JlY2FzdCBzaG93biBpbiB0aGlzIGltYWdlOlxuXG4hW3dlYXRoZXIgcGldKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ3MzA1MzI0LTFkNGNhMjAwLWQ1ZjctMTFlOC04NTg0LTI0YTM5OTIyODNlZS5qcGcpXG5cbiFbd2VhdGhlciBhbG9uZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDczMDUzMjMtMWQ0Y2EyMDAtZDVmNy0xMWU4LThmYjEtNDRiMGE3YTQ1ODBmLmpwZylcblxuT25lIHRoaW5nIHRvIGJlIGF3YXJlIG9mIHdpdGggUGkgV2luZG93cywgeW91IGNhbm5vdCBtYWtlIHRoZW0gc2VtaS10cmFuc3BhcmVudC4gIFRoaXMgbWVhbnMgdGhhdCB0aGUgYFdpbmRvdy5EaXNhcHBlYXJgIG1ldGhvZCB3aWxsIG5vdCB3b3JrLiAgWW91ciB3aW5kb3cgd2lsbCBub3QgZGlzYXBwZWFyLiAgU2V0dGluZyB0aGUgQWxwaGEgQ2hhbm5lbCB3aWxsIGhhdmUgbm8gZWZmZWN0LlxuXG5Eb24ndCBmb3JnZXQgdGhhdCB5b3UgY2FuIHVzZSBjdXN0b20gYXJ0d29yayBhbnl3aGVyZSwgaW5jbHVkaW5nIG9uIHRoZSBQaS4gIFRoZSB3ZWF0aGVyIGFwcGxpY2F0aW9uIGxvb2tzIGJlYXV0aWZ1bCBvbiB0aGUgUGkuICBOb3RpY2UgdGhlcmUgYXJlIG5vIGJ1dHRvbnMgb3IgYW55IG9mIHRoZSBub3JtYWwgbG9va2luZyBFbGVtZW50cyB2aXNpYmxlLiAgSXQncyBwb3NzaWJsZSB0byBidWlsZCBuaWNlIGxvb2tpbmcgYXBwbGljYXRpb25zLCBldmVuIG9uIHRoZSBsb3dlci1lbmQgcGxhdGZvcm1zLlxuXG4jIEdhbWVzXG5cbkl0J3MgcG9zc2libGUgdG8gY3JlYXRlIHNvbWUgY29vbCBnYW1lcyBieSBzaW1wbHkgdXNpbmcgdGhlIGJ1aWx0LWluIFB5U2ltcGxlR1VJIGdyYXBoaWMgcHJpbWl2aXRlcyBsaWtlIHRob3NlIHVzZWQgaW4gdGhpcyBnYW1lIG9mIHBvbmcuICBQeUdhbWUgY2FuIGFsc28gYmUgZW1iZWRkZWQgaW50byBhIFB5U2ltcGxlR1VJIHdpbmRvdyBhbmQgY29kZSBpcyBwcm92aWRlZCB0byB5b3UgZGVtb25zdHJhdGluZyBob3cuICBUaGVyZSBpcyBhbHNvIGEgZGVtb25zdHJhdGlvbiBvZiB1c2luZyB0aGUgcHltdW5rIHBoeXNpY3MgcGFja2FnZSB0aGF0IGNhbiBhbHNvIGJlIHVzZWQgZm9yIGdhbWVzLlxuXG5HYW1lcyBoYXZlbid0IG5vdCBiZWVuIGV4cGxvcmVkIG11Y2gsIHlldCwgdXNpbmcgUHlTaW1wbGVHVUkuXG5cbiFbcG9uZ10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDU4NjAwMTItMmQ4ZDBiMDAtYmQzMy0xMWU4LTllZmQtM2VhZjRjMzBmMzI0LmdpZilcblxuIyBXaW5kb3dzIFByb2dyYW1zIFRoYXQgTG9vayBMaWtlIFdpbmRvd3MgUHJvZ3JhbXNcblxuKioqRG8geW91IGhhdmUgdGhlIGRlc2lyZSB0byBzaGFyZSB5b3VyIGNvZGUgd2l0aCBvdGhlciBwZW9wbGUgaW4geW91ciBkZXBhcnRtZW50LCBvciB3aXRoIGZyaWVuZHMgYW5kIGZhbWlseT8qKiogTWFueSBvZiB0aGVtIG1heSBub3QgaGF2ZSBQeXRob24gb24gdGhlaXIgY29tcHV0ZXIuICBBbmQgaW4gdGhlIGNvcnBvcmF0ZSBlbnZpcm9ubWVudCwgaXQgbWF5IG5vdCBiZSBwb3NzaWJsZSBmb3IgeW91IHRvIGluc3RhbGwgUHl0aG9uIG9uIHRoZWlyIGNvbXB1dGVyLlxuXG5gUHlTaW1wbGVHVUkgKyBQeUluc3RhbGxlcmAgdG8gdGhlIHJlc2N1ZSEhXG5cbkNvbWJpbmluZyBQeVNpbXBsZUdVSSB3aXRoIFB5SW5zdGFsbGVyIGNyZWF0ZXMgc29tZXRoaW5nIHRydWx5IHJlbWFya2FibGUgYW5kIHNwZWNpYWwsIGEgUHl0aG9uIHByb2dyYW0gdGhhdCBsb29rcyBsaWtlIGEgV2luZG93cyBXaW5Gb3JtcyBhcHBsaWNhdGlvbi4gIFxuXG5UaGUgYXBwbGljYXRpb24geW91IHNlZSBiZWxvdyB3aXRoIGEgd29ya2luZyBtZW51IHdhcyBjcmVhdGVkIGluIDIwIGxpbmVzIG9mIFB5dGhvbiBjb2RlLiAgSXQgaXMgYSBzaW5nbGUgLkVYRSBmaWxlIHRoYXQgbGF1bmNoZXMgc3RyYWlnaHQgaW50byB0aGUgc2NyZWVuIHlvdSBzZWUuICBBbmQgbW9yZSBnb29kIG5ld3MsIHRoZSBvbmx5IGljb24geW91IHNlZSBvbiB0aGUgdGFza2JhciBpcyB0aGUgd2luZG93IGl0c2VsZi4uLiB0aGVyZSBpcyBubyBwZXNreSBzaGVsbCB3aW5kb3cuICBOaWNlLCBodWg/IFxuXG4hW21lbnUgZGVtb10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDU5MjMwOTctOGZiYzRjMDAtYmVhYS0xMWU4LTg3ZDItMDFhNTMzMTgxMWM4LmdpZilcblxuV2l0aCBhIHNpbXBsZSBHVUksIGl0IGJlY29tZXMgcHJhY3RpY2FsIHRvIFwiYXNzb2NpYXRlXCIgLnB5IGZpbGVzIHdpdGggdGhlIHB5dGhvbiBpbnRlcnByZXRlciBvbiBXaW5kb3dzLiAgRG91YmxlIGNsaWNrIGEgcHkgZmlsZSBhbmQgdXAgcG9wcyBhIEdVSSB3aW5kb3csIGEgbW9yZSBwbGVhc2FudCBleHBlcmllbmNlIHRoYW4gb3BlbmluZyBhIGRvcyBXaW5kb3cgYW5kIHR5cGluZyBhIGNvbW1hbmQgbGluZS5cblxuVGhlcmUgaXMgZXZlbiBhIFB5U2ltcGxlR1VJIHByb2dyYW0gdGhhdCB3aWxsIHRha2UgeW91ciBQeVNpbXBsZUdVSSBwcm9ncmFtIGFuZCB0dXJuIGl0IGludG8gYW4gRVhFLiAgSXQncyBuaWNlIGJlY2F1c2UgeW91IGNhbiB1c2UgYSBHVUkgdG8gc2VsZWN0IHlvdXIgZmlsZSBhbmQgYWxsIG9mIHRoZSBvdXRwdXQgaXMgc2hvd24gaW4gdGhlIHByb2dyYW0ncyB3aW5kb3csIGluIHJlYWx0aW1lLlxuXG4jIEJhY2tncm91bmQgLSBXaHkgUHlTaW1wbGVHVUkgQ2FtZSB0byBCZVxuXG5GZWVsIGZyZWUgdG8gc2tpcCBhbGwgdGhpcyBpZiB5b3UgZG9uJ3QgY2FyZSB0byBrbm93IHRoZSBiYWNrc3RvcnkgYW5kIHJlYXNvbnMgYmVoaW5kIGRlY2lzaW9ucy5cblxuVGhlcmUgd2FzIGEgcHJvamVjdCBsb29taW5nIGFuZCBhIEdVSSB3YXMgbmVlZGVkLiAgSXQgd2Fzbid0IGEgdmVyeSBjb21wbGV4IEdVSSBzbyB0aHVzIGJlZ2FuIGEgc2VhcmNoIGZvciBhIHNpbXBsaWZpZWQgR1VJIHBhY2thZ2UgdGhhdCB3b3VsZCBlbmFibGUgbWUgdG8gd29yayB3aXRoIHRraW50ZXIgZWFzaWVyLiAgSSBmb3VuZCBhIGZldywgYW5kIHRoZXkgd2VyZSBwcmV0dHkgcG9wdWxhciB0b28sIGJ1dCB0aGV5IGxhY2tlZCB0aGUgZnVsbC1jb21wbGltZW50IG9mIFdpZGdldHMgYW5kIGl0IHdhcyBpbXBvc3NpYmxlIHRvIGRlZmluZSBteSBvd24gd2luZG93IHVzaW5nIHRob3NlIHdpZGdldHMuXG5cbkEgd2hhY2t5IGlkZWEgY2FtZSB0byBtaW5kLi4uIHdoYXQgaWYgSSB3cm90ZSBhIHNpbXBsaWZpZWQgR1VJIGFuZCB0aGVuIHVzZWQgVEhBVCB0byB3cml0ZSBteSBhcHBsaWNhdGlvbi4gIEl0IHdvdWxkIGJlIGEgbG90IGxlc3MgY29kZSBhbmQgaXQgd291bGQgYmUgXCJlYXN5XCIgdG8gd3JpdGUgbXkgYXBwbGljYXRpb24gdGhlbi4gIEFuZCB0aGF0IGlzIGV4YWN0bHkgd2hhdCB3YXMgZG9uZS5cblxuRmlyc3QgYW4gZWFybHkgdmVyc2lvbiBvZiBQeVNpbXBsZUdVSSB3YXMgd3JpdHRlbiB0aGF0IGhhZCBhIHN1YnNldCBvZiB0aGUgRWxlbWVudHMgYXZhaWFibGUgdG9kYXkuICBJdCBoYWQganVzdCBlbm91Z2ggZm9yIG15IGFwcGxpY2F0aW9uLiAgVGhlbiBJIHdyb3RlIG15IGFwcGxpY2F0aW9uIGluIFB5U2ltcGxlR1VJLlxuXG5UaHVzIFB5U2ltcGxlR1VJIHdhcyBib3JuIG91dCBvZiBuZWNlc3NpdHkgYW5kIGl0J3MgYmVlbiB0aGUgbmVjZXNzaXR5IG9mIG90aGVycyB0aGF0IGhhdmUgaGVscGVkIGV2b2x2ZSBpdCBpbnRvIHRoZSBwYWNrYWdlIGl0IGlzIHRvZGF5LiAgSXQgd291bGQgbm90IGJlIDEvMiBhcyBnb29kIHdpdGhvdXQgdGhlIGhlbHAgb2YgdGhlIGNvbW11bml0eS5cblxuT25jZSBQeVNpbXBsZUdVSSB3YXMgZG9uZSwgaXQgd2FzIHRpbWUgdG8gc3RhcnQgd29ya2luZyBvbiBcInRoZSBwb3J0c1wiLiAgQW5kLCBvZiBjb3Vyc2UsIGFsc28gdGhpcyBkb2N1bWVudGF0aW9uLlxuXG4jIyBUaGUgTm9uLU9PIGFuZCBOb24tRXZlbnQtRHJpdmVuIE1vZGVsXG5cblRoZSB0d28gXCJhZHZhbmNlZCBjb25jZXB0c1wiIHRoYXQgYmVnaW5uaW5nIFB5dGhvbiBzdHVkZW50cyBoYXZlIHdpdGggR1VJcyBhcmUgdGhlIHVzZSBvZiBjbGFzc2VzIGFuZCBjYWxsYmFja3Mgd2l0aCB0aGVpciBhc3NvY2lhdGVkIGNvbW11bmljYXRpb24gYW5kIGNvb3JkaW5hdGlvbiBtZWNoYW5pc21zIChzZW1hcGhvcmVzLCBxdWV1ZXMsIGV0YylcblxuSG93IGRvIHlvdSBtYWtlIGEgR1VJIGludGVyZmFjZSBlYXN5IGVub3VnaCBmb3IgZmlyc3QgV0VFSyBQeXRob24gc3R1ZGVudHM/IFxuXG5UaGlzIG1lYW50IGNsYXNzZXMgY291bGQgYmUgdXNlZCB0byBidWlsZCBhbmQgdXNlIGl0LCBidXQgY2xhc3NlcyBjYW4gbm90IGJlIHBhcnQgb2YgdGhlIGNvZGUgdGhlIHVzZXIgd3JpdGVzLiAgT2YgY291cnNlLCBhbiBPTyBkZXNpZ24gaXMgcXVpdGUgcG9zc2libGUgdG8gdXNlIHdpdGggUHlTaW1wbGVHVUksIGJ1dCBpdCdzIG5vdCBhICoqKnJlcXVpcmVtZW50KioqLiAgVGhlIHNhbXBsZSBjb2RlIGFuZCBkb2NzIHN0YXkgYXdheSBmcm9tIHdyaXRpbmcgbmV3IGNsYXNzZXMgaW4gdGhlIHVzZXIgc3BhY2UgZm9yIHRoZSBtb3N0IHBhcnQuXG5cbldoYXQgYWJvdXQgdGhvc2UgcGVza3kgY2FsbGJhY2tzPyAgVGhleSdyZSBkaWZmaWN1bHQgZm9yIGJlZ2lubmVycyB0byBncmFzcCBhbmQgdGhleSdyZSBhIGJpdCBvZiBhIHBhaW4gaW4gdGhlIGFzcyB0byBkZWFsIHdpdGguICBUaGUgd2F5IFB5U2ltcGxlR1VJIGdvdCBhcm91bmQgZXZlbnRzIHdhcyB0byB1dGlsaXplICoqKmEgXCJtZXNzYWdlIHBhc3NpbmdcIiBhcmNoaXRlY3R1cmUqKiogaW5zdGVhZC4gIFxuXG5JbnN0ZWFkIG9mIGEgdXNlciBmdW5jdGlvbiBiZWluZyBjYWxsZWQgd2hlbiB0aGVyZSdzIHNvbWUgZXZlbnQsIGluc3RlYWQgdGhlIGluZm9ybWF0aW9uIGlzIFwicGFzc2VkXCIgdG8gdGhlIHVzZXIgd2hlbiB0aGV5IGNhbGwgdGhlIGZ1bmN0aW9uIGBXaW5kb3cuUmVhZCgpYCBcblxuKioqRXZlcnl0aGluZyoqKiBpcyByZXR1cm5lZCB0aHJvdWdoIHRoaXMgYFdpbmRvdy5SZWFkYCBjYWxsLiAgT2YgY291cnNlIHRoZSB1bmRlcmx5aW5nIEdVSSBmcmFtZXdvcmtzIHN0aWxsIHBlcmZvcm0gY2FsbGJhY2tzLCBidXQgdGhleSBhbGwgaGFwcGVuIGluc2lkZSBvZiBQeVNpbXBsZUdVSSB3aGVyZSB0aGV5IGFyZSB0dXJuZWQgaW50byBtZXNzYWdlcyB0byBwYXNzIHRvIHlvdS5cblxuQWxsIG9mIHRoZSBib2lsZXJwbGF0ZSBjb2RlLCB0aGUgZXZlbnQgaGFuZGxpbmcsIHdpZGdldCBjcmVhdGlvbiwgZnJhbWVzIGNvbnRhaW5pbmcgd2lkZ2V0cywgZXRjLCBhcmUgKipleGFjdGx5IHRoZSBzYW1lKiogb2JqZWN0cyBhbmQgY2FsbHMgdGhhdCB5b3Ugd291bGQgYmUgd3JpdGluZyBpZiB5b3Ugd3JvdGUgZGlyZWN0bHkgaW4gdGt0aW5lciwgUXQsIGV0Yy4gIFdpdGggYWxsIG9mIHRoaXMgY29kZSBvdXQgb2YgdGhlIHdheSBhbmQgZG9uZSBmb3IgeW91LCB0aGF0IGxlYXZlcyB5b3Ugd2l0aCB0aGUgdGFzayBvZiBkb2luZyBzb21ldGhpbmcgdXNlZnVsIHdpdGggdGhlIGluZm9ybWF0aW9uIHRoZSB1c2VyIGVudGVyZWQuICBUSEFULCBhZnRlcmFsbCwgaXMgdGhlIGdvYWwgaGVyZS4uLi4gZ2V0dGluZyB1c2VyIGluZm9ybWF0aW9uIGFuZCBhY3Rpbmcgb24gaXQuXG5cblRoZSBmdWxsIGNvbXBsZW1lbnQgb2YgV2lkZ2V0cyBhcmUgYXZhaWxhYmxlIHRvIHlvdSB2aWEgUHlTaW1wbGVHVUkgRWxlbWVudHMuICBBbmQgdGhvc2Ugd2lkZ2V0cyBhcmUgcHJlc2VudGVkIHRvIHlvdSBpbiBhIHVuaXF1ZSBhbmQgZnVuIHdheS5cblxuSWYgeW91IHdpc2ggdG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgQXJjaGl0ZWN0dXJlIG9mIFB5U2ltcGxlR1VJLCB0YWtlIGEgbG9vayBhdCB0aGUgW0FyY2hpdGVjdHVyZSBkb2N1bWVudCBsb2NhdGVkIG9uIFJlYWRUaGVEb2NzXShodHRwczovL3B5c2ltcGxlZ3VpLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9hcmNoaXRlY3R1cmUvKS5cblxuIyMjIFRoZSBSZXN1bHRcblxuQSBHVUkgdGhhdCdzIGFwcGVhbGluZyB0byBhIGJyb2FkIGF1ZGllbmNlIHRoYXQgaXMgaGlnaGx5IGN1c3RvbWl6YWJsZSwgZWFzeSB0byBwcm9ncmFtLCBhbmQgaXMgc29saWQgd2l0aCBmZXcgYnVncyBhbmQgcmFyZWx5IGNyYXNoZXMgKDk5JSBvZiB0aGUgdGltZSBpdCdzIHNvbWUgb3RoZXIgZXJyb3IgdGhhdCBjYXVzZXMgYSBjcmFzaCkuXG5cblB5U2ltcGxlR1VJIGlzIGJlY29taW5nIG1vcmUgYW5kIG1vcmUgcG9wdWxhci4gVGhlIG51bWJlciBvZiBpbnN0YWxscyBhbmQgdGhlIG51bWJlciBvZiBzdWNjZXNzZXMgZ3Jvd3MgZGFpbHkuICBQaXAgaW5zdGFsbHMgaGF2ZSBleGNlZWRlZCAzNTAsMDAwIGluIHRoZSBmaXJzdCB5ZWFyIG9mIGV4aXN0YW5jZS4gIE92ZXIgMzAwIHBlb3BsZSBhIGRheSB2aXNpdCB0aGUgR2l0SHViIGFuZCB0aGUgcHJvamVjdCBoYXMgMSw4MDAgc3RhcnMgKHRoYW5rIHlvdSBhd2Vlc29tZSB1c2VycyEpXG5cblRoZSBudW1iZXIgb2YgcG9ydHMgaXMgdXAgdG8gNC4gIFRoZSBudW1iZXIgb2YgaW50ZWdyYXRpb25zIHdpdGggb3RoZXIgdGVjaG5vbG9naWVzIGlzIGNvbnN0YW50bHkgYmVpbmcgZXhwYW5kZWQuICBJdCdzIGEgZ3JlYXQgdGltZSB0byB0cnkgUHlTaW1wbGVHVUkhICBZb3UndmUgZ290IG5vIG1vcmUgdGhhbiA1IG9yIDEwIG1pbnV0ZXMgdG8gbG9zZS5cblxuQ2F1dGlvbiBpcyBuZWVkZWQsIGhvd2V2ZXIsIHdoZW4gd29ya2luZyB3aXRoIHRoZSB1bmZpbmlzaGVkIHBvcnRzLiAgUHlTaW1wbGVHVUksIHRoZSB0a2ludGVyIHZlcnNpb24sIGlzIHRoZSBvbmx5IGZ1bGx5IGNvbXBsZXRlIHBvcnQuICBRdCBpcyBuZXh0LiAgQWxsIG9mIGl0cyBFbGVtZW50cyBhcmUgY29tcGxldGVkLCBidXQgbm90IGFsbCBvZiB0aGUgb3B0aW9ucyBvZiBlYWNoIGVsZW1lbnQgYXJlIGRvbmUuICBQeVNpbXBsZUdVSVdlYiBpcyBuZXh0IGluIG9yZGVyIG9mIGNvbXBsZXRuZXNzIGFuZCB0aGVuIGZpbmFsbHkgUHlTaW1wbGVHVUlXeC5cblxuIyBGZWF0dXJlc1xuXG5XaGlsZSBzaW1wbGUgdG8gdXNlLCBQeVNpbXBsZUdVSSBoYXMgc2lnbmlmaWNhbnQgZGVwdGggdG8gYmUgZXhwbG9yZWQgYnkgbW9yZSBhZHZhbmNlZCBwcm9ncmFtbWVycy4gIFRoZSBmZWF0dXJlIHNldCBnb2VzIHdheSBiZXlvbmQgdGhlIHJlcXVpcmVtZW50cyBvZiBhIGJlZ2lubmVyIHByb2dyYW1tZXIsIGFuZCBpbnRvIHRoZSAgcmVxdWlyZWQgZmVhdHVyZXMgbmVlZGVkIGZvciBjb21wbGV4IG11bHRpLXdpbmRvd2VkIEdVSXMuXG5cbkZvciB0aG9zZSBvZiB5b3UgdGhhdCBoYXZlIGhlYXJkIFB5U2ltcGxlR1VJIGlzIG9ubHkgZ29vZCBmb3IgZG9pbmcgdGhlIG1vc3Qgc2ltcGxlc3Qgb2YgR1VJcywgdGhpcyBmZWF0dXJlIGxpc3Qgc2hvdWxkIHB1dCB0aGF0IG15dGggdG8gcmVzdC4gICoqVGhlIFNJTVBMRSBwYXJ0IG9mIFB5U2ltcGxlR1VJIGlzIGhvdyBtdWNoIGVmZm9ydCBfeW91XyBleHBlbmQgdG8gd3JpdGUgYSBHVUksIG5vdCB0aGUgY29tcGxleGl0eSBvZiB0aGUgcHJvZ3JhbSB5b3UgYXJlIGFibGUgdG8gY3JlYXRlLioqICBJdCdzIGxpdGVyYWxseSBcInNpbXBsZVwiIHRvIGRvLi4uIGFuZCBpdCBpcyBub3QgbGltaXRlZCB0byBzaW1wbGUgcHJvYmxlbXMuXG5cbkZlYXR1cmVzIG9mIFB5U2ltcGxlR1VJIGluY2x1ZGU6XG5cbi0gU3VwcG9ydCBmb3IgUHl0aG9uIHZlcnNpb25zIDIuNyBhbmQgM1xuLSBUZXh0XG4tIFNpbmdsZSBMaW5lIElucHV0XG4tIEJ1dHRvbnMgaW5jbHVkaW5nIHRoZXNlIHR5cGVzOlxuXHQtIEZpbGUgQnJvd3NlXG5cdC0gRmlsZXMgQnJvd3NlXG5cdC0gRm9sZGVyIEJyb3dzZVxuXHQtIFNhdmVBc1xuXHQtIE5vcm1hbCBidXR0b24gdGhhdCByZXR1cm5zIGV2ZW50XG5cdC0gQ2xvc2Ugd2luZG93XG5cdC0gUmVhbHRpbWVcblx0LSBDYWxlbmRhciBjaG9vc2VyXG5cdC0gQ29sb3IgY2hvb3NlclxuXHQtIEJ1dHRvbiBNZW51XG4tIENoZWNrYm94ZXNcbi0gUmFkaW8gQnV0dG9uc1xuLSBMaXN0Ym94XG4tIE9wdGlvbiBNZW51XG4tIE1lbnViYXJcbi0gQnV0dG9uIE1lbnVcbi0gU2xpZGVyXG4tIFNwaW5uZXJcbi0gRGlhbFxuLSBHcmFwaFxuLSBGcmFtZSB3aXRoIHRpdGxlXG4tIEljb25zXG4tIE11bHRpLWxpbmUgVGV4dCBJbnB1dFxuLSBTY3JvbGwtYWJsZSBPdXRwdXRcbi0gSW1hZ2VzXG4tIFRhYmxlc1xuLSBUcmVlc1xuLSBQcm9ncmVzcyBCYXIgICAgICAgICAgICBBc3luYy9Ob24tQmxvY2tpbmcgV2luZG93c1xuLSBUYWJiZWQgd2luZG93c1xuLSBQYW5lZCB3aW5kb3dzXG4tIFBlcnNpc3RlbnQgV2luZG93c1xuLSBNdWx0aXBsZSBXaW5kb3dzIC0gVW5saW1pdGVkIG51bWJlciBvZiB3aW5kb3dzIGNhbiBiZSBvcGVuIGF0IHRoZSBzYW1lIHRpbWVcbi0gUmVkaXJlY3QgUHl0aG9uIE91dHB1dC9FcnJvcnMgdG8gc2Nyb2xsaW5nIHdpbmRvd1xuLSAnSGlnaGVyIGxldmVsJyBBUElzIChlLmcuIE1lc3NhZ2VCb3gsIFllc05vYm94LCAuLi4pXG4tIFNpbmdsZS1MaW5lLU9mLUNvZGUgUHJvcmVzcyBCYXIgJiBEZWJ1ZyBQcmludFxuLSBDb21wbGV0ZSBjb250cm9sIG9mIGNvbG9ycywgbG9vayBhbmQgZmVlbFxuLSBTZWxlY3Rpb24gb2YgcHJlLWRlZmluZWQgcGFsZXR0ZXNcbi0gQnV0dG9uIGltYWdlc1xuLSBIb3Jpem9udGFsIGFuZCBWZXJ0aWNsZSBTZXBhcmF0b3JzXG4tIFJldHVybiB2YWx1ZXMgYXMgZGljdGlvbmFyeVxuLSBTZXQgZm9jdXNcbi0gQmluZCByZXR1cm4ga2V5IHRvIGJ1dHRvbnNcbi0gR3JvdXAgd2lkZ2V0cyBpbnRvIGEgY29sdW1uIGFuZCBwbGFjZSBpbnRvIHdpbmRvdyBhbnl3aGVyZVxuLSBTY3JvbGxhYmxlIGNvbHVtbnNcbi0gS2V5Ym9hcmQgbG93LWxldmVsIGtleSBjYXB0dXJlXG4tIE1vdXNlIHNjcm9sbC13aGVlbCBzdXBwb3J0XG4tIEdldCBMaXN0Ym94IHZhbHVlcyBhcyB0aGV5IGFyZSBzZWxlY3RlZFxuLSBHZXQgc2xpZGVyLCBzcGlubmVyLCBjb21ibyBhcyB0aGV5IGFyZSBjaGFuZ2VkXG4tIFVwZGF0ZSBlbGVtZW50cyBpbiBhIGxpdmUgd2luZG93XG4tIEJ1bGsgd2luZG93LWZpbGwgb3BlcmF0aW9uXG4tIFNhdmUgLyBMb2FkIHdpbmRvdyB0by9mcm9tIGRpc2tcbi0gQm9yZGVybGVzcyAobm8gdGl0bGViYXIpIHdpbmRvd3MgKHZlcnkgY2xhc3N5IGxvb2tpbmcpXG4tIEFsd2F5cyBvbiB0b3Agd2luZG93c1xuLSBNZW51cyB3aXRoIEFMVC1ob3RrZXlcbi0gUmlnaHQgY2xpY2sgcG9wLXVwIG1lbnVcbi0gVG9vbHRpcHNcbi0gQ2xpY2thYmxlIHRleHRcbi0gVHJhbnNwYXJlbnQgd2luZG93c1xuLSBNb3ZhYmxlIHdpbmRvd3Ncbi0gQW5pbWF0ZWQgR0lGc1xuLSBObyBhc3luYyBwcm9ncmFtbWluZyByZXF1aXJlZCAobm8gY2FsbGJhY2tzIHRvIHdvcnJ5IGFib3V0KVxuLSBCdWlsdC1pbiBkZWJ1Z2dlciBhbmQgUkVQTFxuLSBVc2VyIGV4cGFuZGFibGUgYnkgYWNjZXNzaW5nIHVuZGVybHlpbmcgR1VJIEZyYW1ld29yayB3aWRnZXRzIGRpcmVjdGx5XG5cbi0tLVxuXG4jIyBEZXNpZ24gR29hbHNcblxuV2l0aCB0aGUgZGV2ZWxvcGVyIGJlaW5nIHRoZSBmb2N1cywgdGhlIGNlbnRlciBvZiBpdCBhbGwsIGl0IHdhcyBpbXBvcnRhbnQgdG8ga2VlcCB0aGlzIG1pbmRzZXQgYXQgYWxsIHRpbWVzLCBpbmNsdWRpbmcgbm93LCB0b2RheS4gIFdoeSBpcyB0aGlzIHN1Y2ggYSBiaWcgZGVhbD8gIEJlY2F1c2UgdGhpcyBwYWNrYWdlIHdhcyB3cml0dGVuIHNvIHRoYXQgdGhlIHVuaXZlcnNlIG9mIFB5dGhvbiBhcHBsaWNhdGlvbnMgY2FuIGdyb3cgYW5kIGNhbiAqKmluY2x1ZGUgRVZFUllPTkUgaW50byB0aGUgR1VJIHRlbnQuKiogIFxuXG4+IFVwIGluIDUgbWludXRlc1xuXG5TdWNjZXNzICMxIGhhcyB0byBoYXBwZW4gaW1tZWRpYXRlbHkuICBJbnN0YWxsaW5nIGFuZCB0aGVuIHJ1bm5pbmcgeW91ciBmaXJzdCBHVUkgcHJvZ3JhbS4gIEZJVkUgbWludXRlcyBpcyB0aGUgdGFyZ2V0LiAgVGhlIFBpcCBpbnN0YWxsIGlzIHVuZGVyIDEgbWludXRlLiAgRGVwZW5kaW5nIG9uIHlvdXIgSURFIGFuZCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCwgcnVubmluZyB5b3VyIGZpcnN0IHBpZWNlIG9mIGNvZGUgY291bGQgYmUgYSBjb3B5LCBwYXN0ZSwgYW5kIHJ1bi4gIFRoaXMgaXNuJ3QgYSBqb2tlIHRhcmdldDsgaXQncyBmb3IgcmVhbCBzZXJpb3VzLlxuXG4+IEJlZ2luZXJzIGFuZCBBZHZhbnRlZCBUb2dldGhlclxuXG5EZXNpZ24gYW4gaW50ZXJmYWNlIHRoYXQgYm90aCB0aGUgY29tcGxldGUgYmVnaW5uZXIgY2FuIHVuZGVyc3RhbmQgYW5kIHVzZSB0aGF0IGhhcyBlbm91Z2ggZGVwdGggdGhhdCBhbiBhZHZhbmNlZCBwcm9ncmFtbWVyIGNhbiBtYWtlIHNvbWUgdmVyeSBuaWNlIGxvb2tpbmcgR1VJcyBhbWQgbm90IGZlZWwgbGlrZSB0aGV5J3JlIHBsYXlpbmcgd2l0aCBhIFwidG95XCIuXG5cbj4gU3VjY2VzcyBBZnRlciBTdWNjZXNzXG5cblN1Y2Nlc3MgYWZ0ZXIgc3VjY2Vzcy4uLi4gdGhpcyBpcyB0aGUgbW9kZWwgdGhhdCB3aWxsIHdpbiBkZXZlbG9wZXIncyBoZWFydHMuICBUaGlzIGlzIHdoYXQgdXNlcnMgbG92ZSBhYm91dCBQeVNpbXBsZUdVSS4gIE1ha2UgeW91ciBkZXZlbG9wbWVudCBwcm9ncmVzcyBpbiBhIHdheSB5b3UgY2FuIHJ1biBhbmQgdGVzdCB5b3VyIGNvZGUgb2Z0ZW4uICBBZGQgYSBsaXR0bGUgYml0LCBydW4gaXQsIHNlZSBpdCBvbiB5b3VyIHNjcmVlbiwgc21pbGUsIG1vdmUgb24uXG5cbj4gQ29weSwgUGFzdGUsIFJ1bi5cblxuVGhlIENvb2tib29rIGFuZCBEZW1vIFByb2dyYW1zIGFyZSB0aGVyZSB0byBmdWxmaWxsIHRoaXMgZ29hbC4gIEZpcnN0IGdldCB0aGUgdXNlciBzZWVpbmcgb24gdGhlaXIgc2NyZWVuIGEgd29ya2luZyBHVUkgdGhhdCdzIHNpbWlsYXIgaW4gc29tZSB3YXkgdG8gd2hhdCB0aGV5IHdhbnQgdG8gY3JlYXRlLiAgXG5cbklmIHlvdSdyZSB3YW50aW5nIHRvIHBsYXkgd2l0aCBPcGVuQ1YgZG93bmxvYWQgdGhlIE9wZW5DViBEZW1vIFByb2dyYW1zIGFuZCBnaXZlIHRoZW0gYSB0cnkuICBTZWVpbmcgeW91ciB3ZWJjYW0gcnVubmluZyBpbiB0aGUgbWlkZGxlIG9mIGEgR1VJIHdpbmRvdyBpcyBxdWl0ZSBhIHRocmlsbCBpZiB5b3UncmUgdHJ5aW5nIHRvIGludGVncmF0ZSB3aXRoIHRoZSBPcGVuQ1YgcGFja2FnZS4gIFxuXG5cIlBvb2ZcIiBpbnN0YW50IHJ1bm5pbmcgT3BlbkNWIGJhc2VkIGFwcGxpY2F0aW9uID09IEhhcHB5IERldmVsb3BlclxuXG4+IE1ha2UgU2ltcGxlciBUaGFuIEV4cGVjdGVkIEludGVyZmFjZXNcblxuVGhlIFNpbmdsZSBMaW5lIFByb2dyZXNzIE1ldGVyIGlzIGEgZ29vZCBleGFtcGxlLiBJdCByZXF1aXJlcyBvbmUgYW5kIG9ubHkgMSBsaW5lIG9mIGNvZGUuICBQcmludGluZyB0byBhIGRlYnVnIHdpbmRvdyBpcyBhcyBlYXN5IGFzIHJlcGxhY2luZyBgcHJpbnRgIHdpdGggYHNnLlByaW50YCB3aGljaCB3aWxsIHJvdXRlIHlvdXIgY29uc29sZSBvdXRwdXQgdG8gYSBzY3JvbGxpbmcgZGVidWcgd2luZG93LlxuXG4+IEJlIFB5dGhvbmljXG5cbkJlIFB5dGhvbmljLi4uIFxuXG5UaGlzIG9uZSBpcyBkaWZmaWN1bHQgZm9yIG1lIHRvIGRlZmluZS4gIFRoZSBjb2RlIGltcGxlbWVudGluZyBQeVNpbXBsZUdVSSBpc24ndCBQRVA4IGNvbXBsaWFudCwgYnV0IGl0IGlzIGNvbnNpc3RlbnQuICBUaGUgaW1wb3J0YW50IHRoaW5nIHdhcyB3aGF0IHRoZSB1c2VyIHNhdyBhbmQgZXhwZXJpZW5jZWQgd2hpbGUgY29kaW5nLCBOT1QgdGhlIGNob2ljZXMgZm9yIG5hbWluZyBjb252ZW50aW9ucyBpbiB0aGUgaW1wbGVtZW50YXRpb24gY29kZS4gIFRoZSB1c2VyIGludGVyZmFjZSB0byBQeVNpbXBsZUdVSSBub3cgaGFzIGEgUEVQOCBjb21wbGlhbnQgaW50ZXJmYWNlLiAgVGhlIG1ldGhvZHMgYXJlIHNuYWtlX2Nhc2Ugbm93IChpbiBhZGRpdGlvbiB0byByZXRhaW5pbmcgdGhlIG9sZGVyIENhbWVsQ2FzZSBuYW1lcylcblxuSSBlbmRlZCB1cCBkZWZpbmluZyBpdCBhcyAtIGF0dGVtcHQgdG8gdXNlIGxhbmd1YWdlIGNvbnN0cnVjdHMgaW4gYSBuYXR1cmFsIHdheSBhbmQgdG8gZXhwbG9pdCBzb21lIG9mIFB5dGhvbidzIGludGVyZXN0aW5nIGZlYXR1cmVzLiAgSXQncyBQeXRob24ncyBsaXN0cyBhbmQgb3B0aW9uYWwgcGFyYW1ldGVycyBtYWtlIFB5U2ltcGxlR1VJIHdvcmsgc21vb3RobHkuIFxuXG5IZXJlIGFyZSBzb21lIFB5dGhvbi1mcmllbmRseSBhc3BlY3RzIHRvIFB5U2ltcGxlR1VJOlxuXG4tIFdpbmRvd3MgYXJlIHJlcHJlc2VudGVkIGFzIFB5dGhvbiBsaXN0cyBvZiBFbGVtZW50cyBcbi0gUmV0dXJuIHZhbHVlcyBhcmUgYW4gXCJldmVudFwiIHN1Y2ggYSBidXR0b24gcHVzaCBhbmQgYSBsaXN0L2RpY3Rpb25hcnkgb2YgaW5wdXQgdmFsdWVzXG4tIFRoZSBTREsgY2FsbHMgY29sbGFwc2UgZG93biBpbnRvIGEgc2luZ2xlIGxpbmUgb2YgUHl0aG9uIGNvZGUgdGhhdCBwcmVzZW50cyBhIGN1c3RvbSBHVUkgYW5kIHJldHVybnMgdmFsdWVzIHNob3VsZCB5b3Ugd2FudCB0aGF0IGV4dHJlbWUgb2YgYSBzaW5nbGUtbGluZSBzb2x1aXRpb25cbi0gRWxlbWVudHMgYXJlIGFsbCBjbGFzc2VzLiBVc2VycyBpbnRlcmFjdCB3aXRoIGVsZW1lbnRzIHVzaW5nIGNsYXNzIG1ldGhvZHMgYnV0IGFyZSBub3QgcmVxdWlyZWQgdG8gd3JpdGUgdGhlaXIgb3duIGNsYXNzZXNcbi0gQWxsb3cga2V5cyBhbmQgb3RoZXIgaWRlbnRpZmllcnMgYmUgYW55IGZvcm1hdCB5b3Ugd2FudC4gRG9uJ3QgbGltaXQgdXNlciB0byBwYXJ0aWN1bGFyIHR5cGVzIG5lZWRsZXNzbHkuXG4tIFdoaWxlIHNvbWUgZGlzYWdyZWUgd2l0aCB0aGUgc2luZ2xlIHNvdXJjZSBmaWxlLCBJIGZpbmQgdGhlIGJlbmVmaXRzIGdyZWF0bHkgb3V0d2VpZ2ggdGhlIG5lZ2F0aXZlc1xuXG4jIyMjIExvZnR5IEdvYWxzXG5cbj4gVGVhY2ggR1VJIFByb2dyYW1taW5nIHRvIEJlZ2lubmVyc1xuXG5CeSBhbmQgbGFyZ2UgUHlTaW1wbGVHVUkgaXMgYSBcInBhdHRlcm4gYmFzZWRcIiBTREsuICBDb21wbGV0ZSBiZWdpbm5lcnMgY2FuIGNvcHkgdGhlc2Ugc3RhbmRhcmQgZGVzaWduIHBhdHRlcm5zIG9yIGRlbW8gcHJvZ3JhbXMgYW5kIG1vZGlmeSB0aGVtIHdpdGhvdXQgbmVjZXNzYXJpbHkgdW5kZXJzdGFuZGluZyBhbGwgb2YgdGhlIG51dHMgYW5kIGJvbHRzIG9mIHdoYXQncyBoYXBwZW5pbmcuICBGb3IgZXhhbXBsZSwgdGhleSBjYW4gbW9kaWZ5IGEgbGF5b3V0IGJ5IGFkZGluZyBlbGVtZW50cyBldmVuIHRob3VnaCB0aGV5IG1heSBub3QgeWV0IGdyYXNwIHRoZSBsaXN0IG9mIGxpc3RzIGNvbmNlcHQgb2YgbGF5b3V0cy4gIFxuXG5CZWdpbm5lcnMgY2VydGFpbmx5IGNhbiBhZGQgbW9yZSBgaWYgZXZlbnQgPT0gJ215IGJ1dHRvbic6YCBzdGF0ZW1lbnRzIHRvIHRoZSBldmVudCBsb29wIHRoYXQgdGhleSBjb3BpZWQgZnJvbSB0aGUgc2FtZSBkZXNpZ24gcGF0dGVybi4gIFRoZXkgd2lsbCBub3QgaGF2ZSB0byB3cml0ZSBjbGFzc2VzIHRvIHVzZSB0aGlzIHBhY2thZ2UuXG5cbj4gQ2FwdHVyZSBCdWRkaW5nIEdyYXBoaWMgRGVzaWduZXJzICYgTm9uLVByb2dyYW1tZXJzXG5cblRoZSBob3BlIGlzIHRoYXQgYmVnaW5uZXJzIHRoYXQgYXJlIGludGVyZXN0ZWQgaW4gZ3JhcGhpYyBkZXNpZ24sIGFuZCBhcmUgdGFraW5nIGEgUHl0aG9uIGNvdXJzZSwgd2lsbCBoYXZlIGFuIGVhc3kgd2F5IHRvIGV4cHJlc3MgdGhlbXNlbHZlcywgcmlnaHQgZnJvbSB0aGUgc3RhcnQgb2YgdGhlaXIgUHl0aG9uIGV4cGVyaWVuY2UuICBFdmVuIGlmIHRoZXkncmUgbm90IHRoZSBiZXN0IHByb2dyYW1tZXJzIHRoZXkgd2lsbCBiZSBhYmxlIGV4cHJlc3MgdGhlbXNlbHZlcyB0byBzaG93IGN1c3RvbSBHVUkgbGF5b3V0cywgY29sb3JzIGFuZCBhcnR3b3JrIHdpdGggZWFzZS5cblxuPiBGaWxsIHRoZSBHVUkgR2FwXG5cblRoZXJlIGlzIGEgbm90aWNlYWJsZSBnYXAgaW4gdGhlIFB5dGhvbiBHVUkgc29sdXRpb24uICBGaWxsIHRoYXQgZ2FwIGFuZCB3aG8ga25vd3Mgd2hhdCB3aWxsIGhhcHBlbi4gIEF0IHRoZSBtb21lbnQsIHRvIG1ha2UgYSB0cmFkaWlvbmFsIEdVSSB3aW5kb3cgdXNpbmcgdGtpbnRlciwgUXQsIFd4UHl0aG9uIGFuZCBSZW1pLCBpdCB0YWtlcyBtdWNoIG1vcmUgdGhhbiBhIHdlZWssIG9yIGEgbW9udGggb2YgUHl0aG9uIGVkdWNhdGlvbiB0byB1c2UgdGhlc2UgR1VJIHBhY2thZ2VzLiAgXG5cblRoZXkgYXJlIG91dCBvZiByZWFjaCBvZiB0aGUgYmVnaW5uZXJzLiAgT2Z0ZW4gV0FZIG91dCBvZiByZWFjaC4gIEFuZCB5ZXQsIHRpbWUgYW5kIHRpbWUgYWdhaW4sIGJlZ2lubmVycyB0aGF0IHNheSB0aGV5IEpVU1QgU1RBUlRFRCB3aXRoIFB5dGhvbiB3aWxsIGFzayBvbiBhIEZvcnVtIG9yIFJlZGRpdCBmb3IgYSBHVUkgcGFjYWthZ2UgcmVjb21tZW5kYXRpb24uICA5IHRpbWVzIG91dCBvZiAxMCBRdCBpcyByZWNvbW1lbmRlZC4gIChzbWFja2luZyBoZWFkIHdpdGggaGFuZCkuICBXaGF0IGEgd2FzdGUgb2YgY2hhcmFjdGVycy4gIFlvdSBtaWdodCBhcyB3ZWxsIGhhdmUganVzdCB0b2xkIHRoZW0sIFwiZ2l2ZSB1cFwiLlxuXG4+IElzIFRoZXJlIGEgVGhlcmU/XG5cbk1heWJlIHRoZXJlJ3Mgbm8gXCJ0aGVyZSB0aGVyZVwiLiAgKioqT3IqKiogbWF5YmUgYSBzaW1wbGUgR1VJIEFQSSB3aWxsIGVuYWJsZSBQeXRob24gdG8gZG9taW5hdGUgeWV0IGFub3RoZXIgY29tcHV0aW5nIGRpc2NpcGxpbmUgbGlrZSBpdCBoYXMgc28gbWFueSBvdGhlcnMuICBUaGlzIGlzIG9uZSBhdHRlbXB0IHRvIGZpbmQgb3V0LiAgU28gZmFyLCBpdCBzdXJlIGxvb2tzIGxpa2UgdGhlcmUncyBQTEVOVFkgb2YgZGVtYW5kIGluIHRoaXMgYXJlYS5cblxuIyBHZXR0aW5nIFN0YXJ0ZWQgd2l0aCBQeVNpbXBsZUdVSVxuXG5UaGVyZSBpcyBhIFwiVHJvdWJsZXNob290aW5nXCIgc2VjdGlvbiB0b3dhcmRzIHRoZSBlbmQgb2YgdGhpcyBkb2N1bWVudCBzaG91bGQgeW91IHJ1biBpbnRvIHJlYWwgdHJvdWJsZS4gIEl0IGdvZXMgaW50byBtb3JlIGRldGFpbCBhYm91dCB3aGF0IHlvdSBjYW4gZG8gdG8gaGVscCB5b3Vyc2VsZi5cblxuIyMgSW5zdGFsbGluZyBQeVNpbXBsZUdVSVxuXG5PZiBjb3Vyc2UgaWYgeW91J3JlIGluc3RhbGxpbmcgZm9yIFF0LCBXeFB5dGhvbiwgV2ViLCB5b3UnbGwgdXNlIFB5U2ltcGxlR1VJUXQsIFB5U2ltcGxlR1VJV3gsIGFuZCBQeVNpbXBsZUdVSVdlYiBpbnN0ZWFkIG9mIHN0cmFpZ2h0IFB5U2ltcGxlR1VJIGluIHRoZSBpbnN0cnVjdGlvbnMgYmVsb3cuICBZb3Ugc2hvdWxkIGFscmVhZHkgaGF2ZSB0aGUgdW5kZXJseWluZyBHVUkgRnJhbWV3b3JrIGluc3RhbGxlZCBhbmQgcGVyaGFwcyB0ZXN0ZWQuICBUaGlzIGluY2x1ZGVzIHRraW50ZXIsIFB5U2lkZTIsIFd4UHl0aG9uLCBSZW1pXG5cbiMjIyBJbnN0YWxsaW5nIG9uIFB5dGhvbiAzXG5cbmBwaXAgaW5zdGFsbCAtLXVwZ3JhZGUgUHlTaW1wbGVHVUlgXG5cbk9uIHNvbWUgc3lzdGVtcyB5b3UgbmVlZCB0byBydW4gcGlwMy4gKExpbnV4IGFuZCBNYWMpXG5cbmBwaXAzIGluc3RhbGwgLS11cGdyYWRlIFB5U2ltcGxlR1VJYFxuXG5PbiBhIFJhc3BiZXJyeSBQaSwgdGhpcyBpcyBzaG91bGQgd29yazpcblxuYHN1ZG8gcGlwMyBpbnN0YWxsIC0tdXBncmFkZSBweXNpbXBsZWd1aWBcblxuU29tZSB1c2VycyBoYXZlIGZvdW5kIHRoYXQgdXBncmFkaW5nIHJlcXVpcmVkIHVzaW5nIGFuIGV4dHJhIGZsYWcgb24gdGhlIHBpcCBgLS1uby1jYWNoZS1kaXJgLlxuXG5gcGlwIGluc3RhbGwgLS11cGdyYWRlIC0tbm8tY2FjaGUtZGlyIFB5U2ltcGxlR1VJYFxuXG5PbiBzb21lIHZlcnNpb25zIG9mIExpbnV4IHlvdSB3aWxsIG5lZWQgdG8gZmlyc3QgaW5zdGFsbCBwaXAuICBOZWVkIHRoZSBDaGlja2VuIGJlZm9yZSB5b3UgY2FuIGdldCB0aGUgRWdnIChnZXQgaXQuLi4gRWdnPylcblxuYHN1ZG8gYXB0IGluc3RhbGwgcHl0aG9uMy1waXBgXG5cbmB0a2ludGVyYCBpcyBhIHJlcXVpcmVtZW50IGZvciBQeVNpbXBsZUdVSSAodGhlIG9ubHkgcmVxdWlyZW1lbnQpLiAgU29tZSBPUyB2YXJpYW50cywgc3VjaCBhcyBVYnVudHUsIGRvIG5vdCBzb21lIHdpdGggYHRraW50ZXJgIGFscmVhZHkgaW5zdGFsbGVkLiAgSWYgeW91IGdldCBhbiBlcnJvciBzaW1pbGFyIHRvOlxuXG5gSW1wb3J0RXJyb3I6IE5vIG1vZHVsZSBuYW1lZCB0a2ludGVyYFxuXG50aGVuIHlvdSBuZWVkIHRvIGluc3RhbGwgYHRraW50ZXJgLlxuXG5Gb3IgcHl0aG9uIDIuN1xuXG5gc3VkbyBhcHQtZ2V0IGluc3RhbGwgcHl0aG9uLXRrYFxuXG5Gb3IgcHl0aG9uIDNcbmBzdWRvIGFwdC1nZXQgaW5zdGFsbCBweXRob24zLXRrYFxuXG5Nb3JlIGluZm9ybWF0aW9uIGFib3V0IGluc3RhbGxpbmcgdGtpbnRlciBjYW4gYmUgZm91bmQgaGVyZTogaHR0cHM6Ly93d3cudGVjaGluZmVjdGVkLm5ldC8yMDE1LzA5L2hvdy10by1pbnN0YWxsLWFuZC11c2UtdGtpbnRlci1pbi11YnVudHUtZGViaWFuLWxpbnV4LW1pbnQuaHRtbFxuXG4jIyMgSW5zdGFsbGluZyBmb3IgUHl0aG9uIDIuN1xuXG5gcGlwIGluc3RhbGwgLS11cGdyYWRlIFB5U2ltcGxlR1VJMjdgXG5vclxuYHBpcDIgaW5zdGFsbCAtLXVwZ3JhZGUgUHlTaW1wbGVHVUkyN2BcblxuWW91IG1heSBuZWVkIHRvIGFsc28gaW5zdGFsbCBcImZ1dHVyZVwiIGZvciB2ZXJzaW9uIDIuN1xuXG5gcGlwIGluc3RhbGwgZnV0dXJlYFxub3JcbmBwaXAyIGluc3RhbGwgZnV0dXJlYFxuXG5QeXRob24gMi43IHN1cHBvcnQgaXMgcmVsYXRpdmVseSBuZXcgYW5kIHRoZSBidWdzIGFyZSBzdGlsbCBiZWluZyB3b3JrZWQgb3V0LiAgSSdtIHVuc3VyZSB3aGF0IG1heSBuZWVkIHRvIGJlIGRvbmUgdG8gaW5zdGFsbCB0a2ludGVyIGZvciBQeXRob24gMi43LiAgV2lsbCB1cGRhdGUgdGhpcyByZWFkbWUgd2hlbiBtb3JlIGluZm8gaXMgYXZhaWxhYmxlXG5cbkxpa2UgYWJvdmUsIHlvdSBtYXkgaGF2ZSB0byBpbnN0YWxsIGVpdGhlciBwaXAgb3IgdGtpbnRlci4gIFRvIGRvIHRoaXMgb24gUHl0aG9uIDIuNzpcblxuYHN1ZG8gYXB0IGluc3RhbGwgcHl0aG9uLXBpcGBcblxuYHN1ZG8gYXB0IGluc3RhbGwgcHl0aG9uLXRraW50ZXJgXG5cbiMjIyBUZXN0aW5nIHlvdXIgaW5zdGFsbGF0aW9uIGFuZCBUcm91Ymxlc2hvb3RpbmdcblxuT25jZSB5b3UgaGF2ZSBpbnN0YWxsZWQsIG9yIGNvcGllZCB0aGUgLnB5IGZpbGUgdG8geW91ciBhcHAgZm9sZGVyLCB5b3UgY2FuIHRlc3QgdGhlIGluc3RhbGxhdGlvbiB1c2luZyBweXRob24uICBBdCB0aGUgY29tbWFuZCBwcm9tcHQgc3RhcnQgdXAgUHl0aG9uLlxuXG4jIyMjIFRoZSBRdWljayBUZXN0XG5cbkZyb20geW91ciBjb21tYW50IGxpbmUgdHlwZTpcbmBweXRob24gLW0gUHlTaW1wbGVHVUlgXG5cbk9mIGNvdXJzZSBpZiB5b3UncmUgb24gTGludXgvTWFjIGFuZCBuZWVkIHRvIHJ1biB1c2luZyB0aGUgY29tbWFuZCBgcHl0aG9uM2AgdGhlbiBvZiBjb3Vyc2UgdHlwZSB0aGF0LlxuXG5UaGlzIHdpbGwgZGlzcGxheSB0aGUgc2FtZSB3aW5kb3cgYXMgdGhlc2UgaW5zdHJ1Y3Rpb25zOlxuXG4jIyMjIEluc3RydWN0aW9ucyBmb3IgVGVzdGluZyBQeXRob24gMi43OlxuYGBgcHl0aG9uXG4+Pj4gaW1wb3J0IFB5U2ltcGxlR1VJMjdcbj4+PiBQeVNpbXBsZUdVSTI3Lm1haW4oKVxuYGBgXG5cbiMjIyMgSW5zdHJ1Y3Rpb25zIGZvciBUZXN0aW5nIFB5dGhvbiAzOlxuXG5gYGBweXRob24zXG4+Pj4gaW1wb3J0IFB5U2ltcGxlR1VJXG4+Pj4gUHlTaW1wbGVHVUkubWFpbigpXG5gYGBcblxuWW91IHdpbGwgc2VlIGEgXCJ0ZXN0IGhhcm5lc3NcIiB0aGF0IGV4ZXJjaXNlcyB0aGUgU0RLLCB0ZWxscyB5b3UgdGhlIHZlcnNpb24gbnVtYmVyLCBhbGxvd3MgeW91IHRvIHRyeSBcblxuIyMjIEZpbmRpbmcgT3V0IFdoZXJlIFlvdXIgUHlTaW1wbGVHVUkgSXMgQ29taW5nIEZyb21cblxuSXQncyAqKmNyaXRpY2FsKiogZm9yIHlvdSB0byBiZSBjZXJ0YWluIHdoZXJlIHlvdXIgY29kZSBpcyBjb21pbmcgZnJvbSBhbmQgd2hpY2ggdmVyc2lvbiB5b3UncmUgcnVubmluZy5cblxuU29tZXRpbWVzIHdoZW4gZGVidWdnaW5nLCBxdWVzdGlvbnMgYXJpc2UgYXMgdG8gZXhhY3RseSB3aGljaCBQeVNpbXBsZUdVSSB5b3UgYXJlIHJ1bm5pbmcuICBUaGUgcXVpY2sgd2F5IHRvIGZpbmQgdGhpcyBvdXQgaXMgdG8gYWdhaW4sIHJ1biBQeXRob24gZnJvbSB0aGUgY29tbWFuZCBsaW5lLiAgVGhpcyB0aW1lIHlvdSdsbCB0eXBlOlxuXG5gYGBweXRob24zXG4+Pj4gaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG4+Pj4gc2dcbmBgYFxuXG5XaGVuIHlvdSB0eXBlIHNnLCBQeXRob24gd2lsbCB0ZWxsIHlvdSB0aGUgZnVsbCBwYXRjaCB0byB5b3VyIFB5U2ltcGxlR1VJIGZpbGUgLyBwYWNrYWdlLiAgVGhpcyBpcyBjcml0aWNhbCBpbmZvcm1hdGlvbiB0byBrbm93IHdoZW4gZGVidWdnaW5nIGJlY2F1c2UgaXQncyByZWFsbHkgZWFzeSB0byBmb3JnZXQgeW91J3ZlIGdvdCBhbiBvbGQgY29weSBvZiBQeVNpbXBsZUdVSSBsYXlpbmcgYXJvdW5kIHNvbWV3aGVyZS5cblxuIyMjIEZpbmRpbmcgT3V0IFdoZXJlIFlvdXIgUHlTaW1wbGVHVUkgSXMgQ29taW5nIEZyb20gKGZyb20gd2l0aGluIHlvdXIgY29kZSlcblxuSWYgeW91IGNvbnRpbnVlIHRvIGhhdmUgdHJvdWJsZXMgd2l0aCBnZXR0aW5nIHRoZSByaWdodCB2ZXJzaW9uIG9mIFB5U2ltcGxlR1VJIGxvYWRlZCwgVEhFICoqKmRlZmluaXRpdmUqKiogd2F5IHRvIGRldGVybWluZSB3aGVyZSB5b3VyIHByb2dyYW0gaXMgZ2V0dGluZyBQeVNpbXBsZUdVSSBmcm9tIGlzIHRvIGFkZCBhIHByaW50IHRvIHlvdXIgcHJvZ3JhbS4gIEl0J3MgdGhhdCAqc2ltcGxlKiEgIFlvdSBjYW4gYWxzbyBnZXQgdGhlIHZlcnNpb24geW91IGFyZSBydW5uaW5nIGJ5IGFsc28gcHJpbnRpbmdcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxucHJpbnQoc2cpXG5wcmludChzZy52ZXJzaW9uKVxuYGBgXG5cbkp1c3QgbGlrZSB3aGVuIHVzaW5nIHRoZSBSRVBMID4+PiB0byBkZXRlcm1pbmUgdGhlIGxvY2F0aW9uLCB0aGlzIGBwcmludGAgaW4geW91ciBjb2RlIHdpbGwgZGlzcGxheSB0aGUgc2FtZSBwYXRoIGluZm9ybWF0aW9uLlxuXG4jIyMgTWFudWFsIGluc3RhbGxhdGlvblxuXG5JZiB5b3UncmUgbm90IGNvbm5lY3RlZCB0byB0aGUgbmV0IG9uIHlvdXIgdGFyZ2V0IG1hY2hpbmUsIG9yIHBpcCBpc24ndCB3b3JraW5nLCBvciB5b3Ugd2FudCB0byBydW4gdGhlIGxhdGVzdCBjb2RlIGZyb20gR2l0SHViLCB0aGVuIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBwbGFjZSB0aGUgc2luZ2xlIFB5U2ltcGxlR1VJIHNvdXJjZSBmaWxlIGBQeVNpbXBsZUdVSS5weWAgKGZvciB0a2ludGVyIHBvcnQpIGFuZCBwbGFjZSBpdCBpbiB5b3VyIGFwcGxpY2F0aW9uJ3MgZm9sZGVyICh0aGUgZm9sZGVyIHdoZXJlIHRoZSBweSBmaWxlIGlzIHRoYXQgaW1wb3J0cyBQeVNpbXBsZUdVSSkuICBZb3VyIGFwcGxpY2F0aW9uIHdpbGwgbG9hZCB0aGF0IGxvY2FsIGNvcHkgb2YgUHlTaW1wbGVHVUkgYXMgaWYgaXQgd2VyZSBhIHBhY2thZ2UuXG5cbkJlICoqKnN1cmUqKiogdGhhdCB5b3UgZGVsZXRlIHRoaXMgUHlTaW1wbGVHVUkucHkgZmlsZSBpZiB5b3UgaW5zdGFsbCBhIG5ld2VyIHBpcCB2ZXJzaW9uLiAgT2Z0ZW4gdGhlIHNlcXVlbmNlIG9mIGV2ZW50cyBpcyB0aGF0IGEgYnVnIHlvdSd2ZSByZXBvcnRlZCB3YXMgZml4ZWQgYW5kIGNoZWNrZWQgaW50byBHaXRIdWIuICBZb3UgZG93bmxvYWQgdGhlIFB5U2ltcGxlR1VJLnB5IGZpbGUgKG9yIHRoZSBhcHByb3ByaWF0ZWx5IG5hbWVkIG9uZSBmb3IgeW91ciBwb3J0KSBhbmQgcHV0IHdpdGggeW91ciBhcHAuICBUaGVuIGxhdGVyIHlvdXIgZml4IGlzIHBvc3RlZCB3aXRoIGEgbmV3IHJlbGVhc2Ugb24gUHlQSS4gIFlvdSdsbCB3YW50IHRvIGRlbGV0ZSB0aGUgR2l0SHViIG9uZSBiZWZvcmUgeW91IGluc3RhbGwgZnJvbSBwaXAuXG5cbiMjIyBQcmVyZXF1aXNpdGVzXG5cblB5dGhvbiAyLjcgb3IgUHl0aG9uIDNcbnRraW50ZXJcblxuUHlTaW1wbGVHVUkgUnVucyBvbiBhbGwgUHl0aG9uMyBwbGF0Zm9ybXMgdGhhdCBoYXZlIHRraW50ZXIgcnVubmluZyBvbiB0aGVtLiAgSXQgaGFzIGJlZW4gdGVzdGVkIG9uIFdpbmRvd3MsIE1hYywgTGludXgsIFJhc3BiZXJyeSBQaS4gIEV2ZW4gcnVucyBvbiBgcHlweTNgLlxuXG4jIyMgRVhFIGZpbGUgY3JlYXRpb25cblxuSWYgeW91IHdpc2ggdG8gY3JlYXRlIGFuIEVYRSBmcm9tIHlvdXIgUHlTaW1wbGVHVUkgYXBwbGljYXRpb24sIHlvdSB3aWxsIG5lZWQgdG8gaW5zdGFsbCBgUHlJbnN0YWxsZXJgLiAgVGhlcmUgYXJlIGluc3RydWN0aW9ucyBvbiBob3cgdG8gY3JlYXRlIGFuIEVYRSBhdCB0aGUgYm90dG9tIG9mIHRoaXMgZG9jdW1lbnQuXG5cbiMjIElERXNcblxuQSBsb3Qgb2YgcGVvcGxlIGFzayBhYm91dCBJREVzLCBhbmQgbWFueSBvdXRyaWdodCBmZWFyIFB5Q2hhcm0uICBMaXN0ZW4gdXAuLi4uIGNvbXBhcmVkIHRvIHlvdXIgam91cm5leSBvZiBsZWFybmluZyBQeXRob24sIGxlYXJuaW5nIHRvIHVzZSBQeUNoYXJtIGFzIHlvdXIgSURFIGlzIE5PVEhJTkcuICBJdCdzIGEgREFZIHR5cGljYWxseSAoZnJvbSAxIHRvIDggaG91cnMpLiAgT3IsIGlmIHlvdSdyZSByZWFsbHkgcmVhbGx5IG5ldywgcGVyaGFwcyBhcyBtdWNoIGFzIGEgd2VlayAqdG8gZ2V0IHVzZWQgdG8qLiAgU28sIHdlJ3JlIG5vdCB0YWxraW5nIGFib3V0IHlvdSBuZWVkaW5nIHRvIGxlYXJuIHRvIGZsYXAgeW91ciBhcm1zIGFuZCBmbHkuXG5cblRvIHN1bSB1cCB0aGF0IHBhcmFncmFwaCwgc3RvcCB3aGluaW5nIGxpa2UgYSBsaXR0bGUgYip0Y2guICBZb3UncmUgYSBncm93biBtYW4vd29tYW4sIGFjdCBsaWtlIGl0LiAgXCJCdXQgaXQncyBoYXJkLi4uXCIgIElmIHlvdSBmb3VuZCB0aGlzIHBhY2thZ2UsIHRoZW4geW91J3JlIGEgYnJpZ2h0IHBlcnNvbiA6LSkgIEhhdmUgc29tZSBjb25maWRlbmNlIGluIHlvdXJzZWxmIGZvciBDaHJpc3Qgc2FrZS4uLi4gSSBkby4gIE5vdCBnb2luZyB0byBsZWFkIHlvdSBvZmYgc29tZSBjbGlmZiwgcHJvbWlzZSFcblxuU29tZSBJREVzIHByb3ZpZGUgdmlydHVhbCBlbnZpcm9ubWVudHMsIGJ1dCBpdCdzIG9wdGlvbmFsLiAgUHlDaGFybSBpcyBvbmUgZXhhbXBsZS4gIEZvciB0aGVzZSwgeW91IHdpbGwgZWl0aGVyIHVzZSB0aGVpciBHVUkgaW50ZXJmYWNlIHRvIGFkZCBwYWNrYWdlcyBvciB1c2UgdGhlaXIgYnVpbHQtaW4gdGVybWluYWwgdG8gZG8gcGlwIGluc3RhbGxzLiAgKipJdCdzIG5vdCByZWNvbW1lbmRlZCBmb3IgYmVnaW5uZXJzIHRvIGJlIHdvcmtpbmcgd2l0aCBWaXJ0dWFsIEVudmlyb25tZW50cy4qKiAgVGhleSBjYW4gYmUgcXVpdGUgY29uZnVzaW5nLiAgSG93ZXZlciwgaWYgeW91IGFyZSBhIHNlYXNvbmVkIHByb2Zlc3Npb25hbCBkZXZlbG9wZXIgYW5kIGtub3cgd2hhdCB5b3UncmUgZG9pbmcsIHRoZXJlIGlzIG5vdGhpbmcgYWJvdXQgUHlTaW1wbGVHVUkgdGhhdCB3aWxsIHByZXZlbnQgeW91IGZyb20gd29ya2luZyB0aGlzIHdheS4gIEl0J3MgbW9zdGx5IGEgY2F1dGlvbiBmb3IgYmVnaW5uZXJzIGJlY2F1c2UgbW9yZSBvZnRlbiB0aGFuIG5vdCwgdGhleSBnZXQgcmVhbGx5IG1lc3NlZCB1cCBhbmQgY29uZnVzZWQuXG5cbiMjIyBPZmZpY2lhbGx5IFN1cHBvcnRlZCBJREVzXG5cbkEgbnVtYmVyIG9mIElERXMgaGF2ZSAqKmtub3duIHByb2JsZW1zIHdpdGggUHlTaW1wbGVHVUkqKi4gIElETEUsIFNweWRlciwgYW5kIFRob25ueSBhbGwgaGF2ZSBrbm93biwgZGVtb25zdHJhYmxlLCBwcm9ibGVtcyB3aXRoIGludGVybWl0dGVudCBvciBpbmNvbnNpc3RlbnQgcmVzdWx0cywgKiplc3BlY2lhbGx5IHdoZW4gYSBwcm9ncmFtIGV4aXRzKiogYW5kIHlvdSB3YW50IHRvIGNvbnRpbnVlIHRvIHdvcmsgd2l0aCBpdC4gKioqIEFueSBJREUgdGhhdCBpcyBiYXNlZCBvbiB0a2ludGVyIGlzIGdvaW5nIHRvIGhhdmUgaXNzdWVzIHdpdGggdGhlIHN0cmFpZ2h0IFB5U2ltcGxlR1VJIHBvcnQuKioqICBUaGlzIGlzIE5PVCBhIFB5U2ltcGxlR1VJIHByb2JsZW0uXG5cblRoZSBvZmZpY2lhbCBsaXN0IG9mIHN1cHBvcnRlZCBJREVzIGlzOlxuMS4gUHlDaGFybSAob3IgY291cnNlIHRoaXMgaXMgVEhFIElERSB0byB1c2UgZm9yIHVzZSB3aXRoIFB5U2ltcGxlR1VJKVxuMi4gV2luZ1xuMy4gVmlzdWFsIFN0dWRpb1xuXG5JZiB5b3UncmUgb24gYSBSYXNwYmVycnkgUGkgb3Igc29tZSBvdGhlciBsaW1pdGVkIGVudmlyb25tZW50LCB0aGVuIHlvdSdsbCBtYXkgaGF2ZSB0byB1c2UgSURMRSBvciBUaG9ubnkuICBKdXN0IGJlIGF3YXJlIHRoZXJlIGNvdWxkIGJlIHByb2JsZW1zIHVzaW5nIHRoZSBkZWJ1Z2dlciB0byBkZWJ1ZyBkdWUgdG8gYm90aCB1c2luZyB0a2ludGVyLlxuXG4jIyMgVXNpbmcgVGhlIERvY3N0cmluZ3MgKERvbid0IHNraXAgdGhpcyBzZWN0aW9uKVxuXG5CZWdpbm5pbmcgd2l0aCB0aGUgNC4wIHJlbGVhc2Ugb2YgUHlTaW1wbGVHVUksIHRoZSB0a2ludGVyIHBvcnQsIGEgd2hvbGUgbmV3IHdvcmxkIG9wZW5lZCB1cCBmb3IgUHlTaW1wbGVHVUkgcHJvZ3JhbW1lcnMsIG9uZSB3aGVyZSByZWZlcmVuY2luZyB0aGUgcmVhZG1lIGFuZCBSZWFkVGhlRG9jcyBkb2N1bWVudGF0aW9uIGlzIG5vIGxvbmdlciBuZWVkZWQuICBQeUNoYXJtIGFuZCBXaW5nIGJvdGggc3VwcG9ydCB0aGVzZSBkb2NzdHJpbmdzIFJFQUxMWSB3ZWxsIGFuZCBJJ20gc3VyZSBWaXN1YWwgU3R1ZGlvIGRvZXMgdG9vLiAgV2h5IGlzIHRoaXMgaW1wb3J0YW50PyAgQmVjYXVzZSBpdCB3aWxsIHRlYWNoIHlvdSB0aGUgUHlTaW1wbGVHVUkgU0RLIGFzIHlvdSB1c2UgdGhlIHBhY2thZ2UuICBcblxuRG9uJ3Qga25vdyB0aGUgcGFyYW1ldGVycyBhbmQgdmFyaW91cyBvcHRpb25zIGZvciB0aGUgYElucHV0VGV4dGAgRWxlbWVudD8gIEl0J3MgYSBwaWVjZSBvZiBjYWtlIHdpdGggUHlDaGFybS4gIFlvdSBjYW4gc2V0IFB5Q2hhcm0gdG8gYXV0b21hdGljYWxseSBkaXNwbGF5IGRvY3VtZW50YXRpb24gYWJvdXQgdGhlIGNsYXNzLCBmdW5jdGlvbiwgbWV0aG9kLCBldGMsIHRoYXQgeW91ciBjdXJzb3IgaXMgY3VycmVudGx5IHNpdHRpbmcgb24uICBZb3UgY2FuIGFsc28gbWFudWFsbHkgYnJpbmcgdXAgdGhlIGRvY3VtZW50YXRpb24gYnkgcHJlc3NpbmcgQ09OVFJPTCtRLiAgV2hlbiB5b3UgZG8sIHlvdSdsbCBiZSB0cmVhdGVkIHRvIGEgd2luZG93IHNpbWlsYXIgdG8gdGhpczpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjE5OTc1NjUtNDZmODk1MDAtYjA3MS0xMWU5LTk2OGUtODNhOTllY2I3MThhLnBuZylcblxuTm90ZSB0aGF0IG15IGN1cnNvciBpcyBvbiBgSW5wdXRUZXh0YC4gIE9uIHRoZSBsZWZ0IHNpZGUgb2YgdGhlIHNjcmVlbiwgdGhlIGBJbnB1dFRleHRgIGVsZW1lbnQncyBwYXJhbWV0ZXJzIGFyZSBub3QganVzdCBzaG93biB0byB5b3UsIGJ1dCB0aGV5IGFyZSBlYWNoIGluZGl2aWR1YWxseSBkZXNjcmliZWQgdG8geW91LCBhbmQsIHRoZSB0eXBlIGlzIHNob3duIGFzIHdlbGwuICAqSSBtZWFuLCBob25lc3RseSwgaG93IG11Y2ggbW9yZSBjb3VsZCB5b3UgYXNrIGZvcj8qXG5cbk9LLCBJIHN1cHBvc2UgeW91IGNvdWxkIGFzayBmb3IgYSBzbWFsbGVyIHdpbmRvdyB0aGF0IGp1c3Qgc2hvd3MgdGhlIHBhcmFtZXRlcnMgYXJlIHlvdSdyZSB0eXBpbmcgdGhlbSBpbi4gIFdlbGwsIE9LLCBpbiBQeUNoYXJtLCB3aGVuIHlvdXIgY3Vyc29yIGlzIGJldHdlZW4gdGhlICBgKCAgIClgIHByZXNzIENPTlRST0wrUC4gIFdoZW4geW91IGRvLCB5b3UnbGwgYmUgdHJlYXRlZCB0byBhIGxpdHRsZSB3aW5kb3cgbGlrZSB0aGlzIG9uZTpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjE5OTc1OTAtYWE4MmMyODAtYjA3MS0xMWU5LThkNzYtN2Q5YzgxMWY4ZmNjLnBuZylcblxuU2VlLi4uLiB3cml0dGVuIHdpdGggdGhlIFwiRGV2ZWxvcGVyXCIgaW4gbWluZCwgYXQgYWxsIHRpbWVzLiAgSXQncyBhYm91dCBZT1UsIE1yL01zIERldmVsb3BlciEgIFNvIGVuam95IHlvdXIgcGFja2FnZS5cblxuVGhlIG90aGVyIHBvcnRzIG9mIFB5U2ltcGxlR1VJIChRdCwgV3hQeXRob24sIFdlYikgaGF2ZSBub3QgeWV0IGhhZCB0aGVpciBkb2NzdHJpbmdzIHVwZGF0ZWQuICBUaGV5J3JlIE5FWFQgaW4gbGluZSB0byBiZSBiZXR0ZXIgZG9jdW1lbnRlZC4gIFdvcmsgb24gYSB0b29sIGhhcyBhbHJlYWR5IGJlZ3VuIHRvIG1ha2UgdGhhdCBoYXBwZW4gc29vbmVyIHRoYW4gbGF0ZXIuXG5cbiMjIFVzaW5nICAtIFB5dGhvbiAzXG5cblRvIHVzZSBpbiB5b3VyIGNvZGUsIHNpbXBseSBpbXBvcnQuLi4uXG5gaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnYFxuXG5UaGVuIHVzZSBlaXRoZXIgXCJoaWdoIGxldmVsXCIgQVBJIGNhbGxzIG9yIGJ1aWxkIHlvdXIgb3duIHdpbmRvd3MuXG5cbmBzZy5Qb3B1cCgnVGhpcyBpcyBteSBmaXJzdCBQb3B1cCcpYFxuXG4hW2ZpcnN0IHBvcHVwXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1NzMwMC1jNzgxMzY4MC1hZTllLTExZTgtOWE4Yy1jNzAxOThkYjc5MDcuanBnKVxuXG5ZZXMsIGl0J3MganVzdCB0aGF0IGVhc3kgdG8gaGF2ZSBhIHdpbmRvdyBhcHBlYXIgb24gdGhlIHNjcmVlbiB1c2luZyBQeXRob24uICBXaXRoIFB5U2ltcGxlR1VJLCBtYWtpbmcgYSBjdXN0b20gd2luZG93IGFwcGVhciBpc24ndCBtdWNoIG1vcmUgZGlmZmljdWx0LiAgVGhlIGdvYWwgaXMgdG8gZ2V0IHlvdSBydW5uaW5nIG9uIHlvdXIgR1VJIHdpdGhpbiAqKiptaW51dGVzKioqLCBub3QgaG91cnMgbm9yIGRheXMuXG5cbioqKldBUk5JTkcqKiogRG8gTk9UIHVzZSBQeVNpbXBsZUdVSSB3aXRoIFB5dGhvbiAzLjcuMyBhbmQgMy43LjQuICB0a2l0ZXIgaXMgaGF2aW5nIGlzc3VlcyB3aXRoIHRoYXQgcmVsZWFzZS4gIFRoaW5ncyBsaWtlIFRhYmxlIGNvbG9ycyBzdG9wcGVkIHdvcmtpbmcgZW50aXJlbHkuICBOb25lIG9mIHVzIHdhbnQgdG8gZGVidWcgdGtpbnRlciBjb2RlLiAgSXQncyBkaWZmaWN1bHQgZW5vdWdoIGRlYnVnZ2luZyB5b3VyIGNvZGUgYW5kIFB5U2ltcGxlR1VJIGNvZGUuICBBIGxvdCBvZiB0aW1lIGhhcyBhbHJlYWR5IGJlZW4gc3BlbnQgZGVidWdnaW5nIHRoaXMgb25lIHNvIG5vIG5lZWQgZm9yIHlvdSB0byBzdWZmZXIgdG9vLlxuXG4jIyMgUHl0aG9uIDMuN1xuXG5JdCBwdXp6bGVzIG1lIHdoeSBhIGJlZ2lubmVyIHdvdWxkIGluc3RhbGwgMy43LiAgT3IgZXZlbiBhIHNlYXNvbmVkIHByb2dyYW1tZXIuICBXaGF0IHNwZWNpZmljIGZlYXR1cmUgb2YgMy43IGFyZSB5b3UgdXNpbmcgdGhhdCBpcyBub3QgaW4gMy42PyAgSWYgeW91IGFyZSB1bmFibGUgdG8gYW5zd2VyIHRoaXMsIHRoZW4gKioqaXQncyBzdHJvbmdseSBzdWdnZXN0ZWQgdGhhdCB5b3UgcnVuIDMuNioqKiwgYW4gaW1tZW5zZWx5IHNvbGlkIHJlbGVhc2Ugb2YgUHl0aG9uIHdpdGggYWxsIHRob3NlIGdvb2RpZSBpbnNpZGUgbGlrZSBmLXN0cmluZ3MuICBJZiB5b3UgbXVzdCBydW4gMy43LCB0cnkgMy43LjIgaW5zdGVhZC4gIEl0IGRvZXMgd29yayB3aXRoIFB5U2ltcGxlR1VJIHdpdGggbm8ga25vd24gaXNzdWVzLlxuXG4jIyBVc2luZyAgLSBQeXRob24gMi43XG5cblRob3NlIHVzaW5nIFB5dGhvbiAyLjcgd2lsbCBpbXBvcnQgYSBkaWZmZXJlbnQgbW9kdWxlIG5hbWVcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkyNyBhcyBzZ1xuYGBgXG5cbiMjIENvZGUgdG8gQXV0b21hdGljYWxseSBJbXBvcnQgQ29ycmVjdCBWZXJzaW9uXG5cbk1hbnkgb2YgdGhlIGRlbW8gcHJvZ3JhbXMgdXNlIHRoaXMgY2hlY2sgdG8gc2VlIHdoaWNoIHBhY2thZ2UgdG8gdXNlOlxuYGBgcHl0aG9uXG5pbXBvcnQgc3lzXG5pZiBzeXMudmVyc2lvbl9pbmZvWzBdID49IDM6XG4gICAgaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5lbHNlOlxuICAgIGltcG9ydCBQeVNpbXBsZUdVSTI3IGFzIHNnXG5gYGBcblxuVGhpcyB3aWxsIGF1dG9tYXRpY2FsbHkgaW1wb3J0IHRoZSBjb3JyZWN0IGxpYnJhcnkgYmFzZWQgb24gdGhlIFB5dGhvbiB2ZXJzaW9uIG51bWJlciByZXBvcnRlZCBieSB0aGUgUHl0aG9uIGludGVycHJldGVyLlxuXG5OT1RFOiBJdCdzIDIwMTkgYW5kIDIuNyBzdXBwb3J0IGlzIGJlaW5nIHN5c3RlbWF0aWNhbGx5IHJlbW92ZWQuICBUaGlzIGNvbnN0cnVjdCB3aWxsIGJlIHJlbW92ZWQgZnJvbSB0aGUgZGVtbyBwcm9ncmFtcyBzaG9ydGx5LiAgMi43IHVzZXJzIGNhbiBzdGlsbCBydW4gdGhlc2UgZGVtb3MsIGJ1dCB0aGV5IHdpbGwgbmVlZCB0byBjaGFuZ2UgdGhlIGltcG9ydCBmcm9tIFB5U2ltcGxlR1VJIHRvIFB5U2ltcGxlR1VJMjcuICBJdCBzYXZlIDQgbGluZXMgb2YgY29kZSBhbmQgYW4gaW1wb3J0IGZyb20gc3lzIGluIHRoZSBwcm9jZXNzLlxuXG4tLS1cblxuIyBQRVA4IEJpbmRpbmdzIEZvciBNZXRob2RzIGFuZCBGdW5jdGlvbnNcblxuQmVnaW5uaW5nIHdpdGggcmVsZWFzZSA0LjMgb2YgUHlTaW1wbGVHVUksICoqKmFsbCBtZXRob2RzIGFuZCBmdW5jdGlvbiBjYWxscyoqKiBoYXZlIFBFUDggZXF1aXZhbGVudHMuICBUaGlzIGNhcGFiaWxpdHkgaXMgb25seSBhdmFpbGFibGUsIGZvciB0aGUgbW9tZW50LCBvbiB0aGUgUHlTaW1wbGVHVUkgdGtpbnRlciBwb3J0LiAgSXQgaXMgYmVpbmcgYWRkZWQsIGFzIHF1aWNrbHkgYXMgcG9zc2libGUsIHRvIGFsbCBvZiB0aGUgcG9ydHMuXG5cbkFzIGxvbmcgYXMgeW91IGtub3cgeW91J3JlIHN0aWNraW5nIHdpdGggdGtpbnRlciBmb3IgdGhlIHNob3J0IHRlcm0sIGl0J3Mgc2FmZSB0byB1c2UgdGhlIG5ldyBiaW5kaW5ncy5cblxuIyMgVGhlIE5vbi1QRVA4IE1ldGhvZHMgYW5kIEZ1bmN0aW9uc1xuXG5XaHkgdGhlIG5lZWQgZm9yIHRoZXNlIGJpbmRpbmdzPyAgU2ltcGx5IHB1dCwgdGhlIFB5U2ltcGxlR1VJIFNESyBoYXMgYSBQRVA4IHZpb2xhdGlvbiBpbiB0aGUgbWV0aG9kIGFuZCBmdW5jdGlvbiBuYW1lcy4gIFB5U2ltcGxlR1VJIHVzZXMgQ2FtZWxDYXNlIG5hbWVzIGZvciBtZXRob2RzIGFuZCBmdW5jdGlvbnMuICBQRVA4IHN1Z2dlc3RzIHVzaW5nIHNuYWtlX2Nhc2VfdmFyaWFibGVzIGluc3RlYWQuICBcblxuVGhpcyBoYXMgbm90IGNhdXNlZCBhbnkgcHJvYmxlbXMgYW5kIGZldyBjb21wbGFpbnRzLCBidXQgaXQncyBpbXBvcnRhbnQgdGhlIHRoZSBpbnRlcmZhY2VzIGludG8gUHlTaW1wbGVHVUkgYmUgY29tcGxpYW50LiAgUGVyaGFwcyBvbmUgb2YgdGhlIHJlYXNvbnMgZm9yIGxhY2sgb2YgY29tcGxhaW50cyBpcyB0aGF0IHRoZSBRdCBsaWJyYXJ5IGFsc28gdXNlcyBTbmFrZUNhc2UgZm9yIGl0cyBtZXRob2RzLiAgVGhpcyBwcmFjdGljZSBoYXMgdGhlIGVmZmVjdCBvZiBsYWJlbGxpbmcgYSBwYWNrYWdlIGFzIGJlaW5nIFwibm90IFB5dGhvbmljXCIgYW5kIGFsc28gc3VnZ2VzdHMgdGhhdCB0aHMgcGFja2FnZSB3YXMgb3JpZ2luYWxseSB1c2VkIGluIGFub3RoZXIgbGFuZ3VhZ2UgYW5kIHRoZW4gcG9ydGVkIHRvIFB5dGhvbi4gIFRoaXMgaXMgZXhhY3RseSB0aGUgc2l0dWF0aW9uIHdpdGggUXQuICBJdCB3YXMgd3JpdHRlbiBmb3IgQysrIGFuZCB0aGUgaW50ZXJmYWNlcyBjb250aW51ZSB0byB1c2UgQysrIGNvbnZlbnRpb25zLlxuXG4qKipQeVNpbXBsZUdVSSB3YXMgd3JpdHRlbiBpbiBQeXRob24sIGZvciBQeXRob24uKioqICBUaGUgcmVhc29uIGZvciB0aGUgbmFtZSBwcm9ibGVtIHdhcyBvbmUgb2YgaWdub3JhbmNlLiAgVGhlIFBFUDggY29udmVudGlvbiB3YXNuJ3QgdW5kZXJzdG9vZCBieSB0aGUgZGV2ZWxvcGVycyB3aGVuIFB5U2ltcGxlR1VJIHdhcyBkZXNpZ25lZCBhbmQgaW1wbGVtZW50ZWQuICBcblxuWW91IGNhbiwgYW5kIHdpbGwgYmUgYWJsZSB0byBmb3Igc29tZSB0aW1lLCB1c2UgYm90aCBuYW1lcy4gIEhvd2V2ZXIsIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGZ1dHVyZSwgdGhlIENhbWVsQ2FzZSBuYW1lcyB3aWxsIGRpc2FwcGVhci4gIEEgdXRpbGl0eSBpcyBwbGFubmVkIHRvIGRvIHRoZSBjb252ZXJzaW9uIGZvciB0aGUgZGV2ZWxvcGVyIHdoZW4gdGhlIG9sZCBuYW1lcyBhcmUgcmVtb3ZlIGZyb20gUHlTaW1wbGVHVUkuXG5cblRoZSBoZWxwIHN5c3RlbSB3aWxsIHdvcmsgd2l0aCBib3RoIG5hbWVzIGFzIHdpbGwgeW91ciBJREUncyBkb2NzdHJpbmcgdmlld2luZy4gIEhvd2V2ZXIsIHRoZSByZXN1bHQgZm91bmQgd2lsbCBzaG93IHRoZSBDYW1lbENhc2UgbmFtZXMuICBGb3IgZXhhbXBsZSBgaGVscChzZy5XaW5kb3cucmVhZClgIHdpbGwgc2hvdyB0aGUgQ2FtZWxDYXNlIG5hbWUgb2YgdGhlIG1ldGhvZC9mdW5jdGlvbi4gIFRoaXMgaXMgd2hhdCB3aWxsIGJlIHJldHVybmVkOlxuXG5gUmVhZChzZWxmLCB0aW1lb3V0PU5vbmUsIHRpbWVvdXRfa2V5PSdfX1RJTUVPVVRfXycpYFxuXG4jIyBUaGUgUmVuYW1pbmcgQ29udmVudGlvblxuXG5UbyBjb252ZXJ0IGEgQ2FtZWxDYXNlIG1ldGhvZC9mdW5jdGlvbiBuYW1lIHRvIHNuYWtlX2Nhc2UsIHlvdSBzaW1wbHkgcGxhY2UgYW4gYF9gIHdoZXJlIHRoZSBVcHBlciBDYXNlIGxldHRlciBpcyBsb2NhdGVkLiAgSWYgdGhlcmUgYXJlIG5vbmUsIHRoZW4gb25seSB0aGUgZmlyc3QgbGV0dGVyIGlzIGNoYW5nZWQuXG5cbmBXaW5kb3cuRmluZEVsZW1lbnRgIGJlY29tZXMgYFdpbmRvdy5maW5kX2VsZW1lbnRgXG5cbiMjIENsYXNzIFZhcmlhYmxlc1xuXG5Gb3IgdGhlIHRpbWUgYmVpbmcsIGNsYXNzIHZhcmlhYmxlcyB3aWxsIHJlbWFpbiB0aGUgd2F5IHRoZXkgYXJlIGN1cnJlbnRseS4gIEl0IGlzIHVudXN1YWwsIGluIFB5U2ltcGxlR1VJLCBmb3IgY2xhc3MgdmFyaWFibGVzIHRvIGJlIG1vZGlmaWVkIG9yIHJlYWQgYnkgdGhlIHVzZXIgY29kZSBzbyB0aGUgaW1wYWN0IG9mIGxlYXZpbmcgdGhlbSBpcyByYXJlbHkgc2VlbiBpbiB5b3VyIGNvZGUuXG5cbiMgSGlnaCBMZXZlbCBBUEkgQ2FsbHMgIC0gUG9wdXAnc1xuXG5cIkhpZ2ggbGV2ZWwgY2FsbHNcIiBhcmUgdGhvc2UgdGhhdCBzdGFydCB3aXRoIFwiUG9wdXBcIi4gICAgVGhleSBhcmUgdGhlIG1vc3QgYmFzaWMgZm9ybSBvZiBjb21tdW5pY2F0aW9ucyB3aXRoIHRoZSB1c2VyLiAgIFRoZXkgYXJlIG5hbWVkIGFmdGVyIHRoZSB0eXBlIG9mIHdpbmRvdyB0aGV5IGNyZWF0ZSwgYSBwb3AtdXAgd2luZG93LiAgVGhlc2Ugd2luZG93cyBhcmUgbWVhbnQgdG8gYmUgc2hvcnQgbGl2ZWQgd2hpbGUsIGVpdGhlciBkZWxpdmVyaW5nIGluZm9ybWF0aW9uIG9yIGNvbGxlY3RpbmcgaXQsIGFuZCB0aGVuIHF1aWNrbHkgZGlzYXBwZWFyaW5nLlxuXG5UaGluayBvZiBQb3B1cHMgYXMgeW91ciBmaXJzdCB3aW5kb3dzLCBzb3J0YSBsaWtlIHlvdXIgZmlyc3QgYmljeWNsZS4gSXQgd29ya2VkIHdlbGwsIGJ1dCB3YXMgbGltaXRlZC4gIEl0IHByb2JhYmx5IHdhc24ndCBsb25nIGJlZm9yZSB5b3Ugd2FudGVkIG1vcmUgZmVhdHVyZXMgYW5kIGl0IHNlZW1lZCB0b28gbGltaXRpbmcgZm9yIHlvdXIgbmV3bHkgZm91bmQgc2Vuc2Ugb2YgYWR2ZW50dXJlLlxuXG5XaGVuIHlvdSd2ZSByZWFjaGVkIHRoZSBwb2ludCB3aXRoIFBvcHVwcyB0aGF0IHlvdSBhcmUgdGhpbmtpbmcgb2YgZmlsaW5nIGEgR2l0SHViIFwiRW5oYW5jZW1lbnQgSXNzdWVcIiB0byBnZXQgdGhlIFBvcHVwIGNhbGwgZXh0ZW5kZWQgdG8gaW5jbHVkZSBhIG5ldyBmZWF0dXJlIHRoYXQgeW91IHRoaW5rIHdvdWxkIGJlIGhlbHBmdWwuLi4uIG5vdCBqdXN0IHRvIHlvdSBidXQgb3RoZXJzIGlzIHdoYXQgeW91IGhhZCBpbiBtaW5kLCByaWdodD8gIEZvciB0aGUgZ29vZCBvZiBvdGhlcnMuXG5cbkl0J3MgYXQgVEhJUyB0aW1lIHRoYXQgeW91IHNob3VsZCBpbW1lZGlhdGVseSB0dXJuIHRvIHRoZSBzZWN0aW9uIGVudGl0bGVkIFwiQ3VzdG9tIFdpbmRvdyBBUEkgQ2FsbHMgLSBZb3VyIEZpcnN0IFdpbmRvd1wiLiAgQ29uZ3JhdHVsYXRpb25zLCB5b3UganVzdCBncmFkdWF0ZWQgYW5kIGFyZSBub3QgYW4gb2ZmaWNpYWwgXCJHVUkgRGVzaWduZXJcIi4gIE9oLCBuZXZlcm1pbmQgdGhhdCB5b3Ugb25seSBzdGFydGVkIGxlYXJuaW5nIFB5dGhvbiAyIHdlZWtzIGFnbywgeW91J3JlIGEgcmVhbCBHVUkgRGVzaWduZXIgbm93IHNvIGJ1Y2sgdXAgYW5kIHN0YXJ0IGFjdGluZyBsaWtlIG9uZS5cblxuQnV0LCBmb3Igbm93LCBsZXQncyBzdGljayB3aXRoIHRoZXNlIDEtbGluZSB3aW5kb3cgY2FsbHMsIHRoZSBQb3B1cHMuXG5cbiMjIFBvcHVwIE91dHB1dFxuXG5UaGluayBvZiB0aGUgYFBvcHVwYCBjYWxsIGFzIHRoZSBHVUkgZXF1aXZhbGVudCBvZiBhICBgcHJpbnRgIHN0YXRlbWVudC4gIEl0J3MgeW91ciB3YXkgb2YgZGlzcGxheWluZyByZXN1bHRzIHRvIGEgdXNlciBpbiB0aGUgd2luZG93ZWQgd29ybGQuICBFYWNoIGNhbGwgdG8gUG9wdXAgd2lsbCBjcmVhdGUgYSBuZXcgUG9wdXAgd2luZG93LlxuXG5gUG9wdXBgIGNhbGxzIGFyZSBub3JtYWxseSBibG9ja2luZy4gIHlvdXIgcHJvZ3JhbSB3aWxsIHN0b3AgZXhlY3V0aW5nIHVudGlsIHRoZSB1c2VyIGhhcyBjbG9zZWQgdGhlIFBvcHVwIHdpbmRvdy4gIEEgbm9uLWJsb2NraW5nIHdpbmRvdyBvZiBQb3B1cCBkaXNjdXNzZWQgaW4gdGhlIGFzeW5jIHNlY3Rpb24uXG5cbkp1c3QgbGlrZSBhIHByaW50IHN0YXRlbWVudCwgeW91IGNhbiBwYXNzIGFueSBudW1iZXIgb2YgYXJndW1lbnRzIHlvdSB3aXNoLiAgVGhleSB3aWxsIGFsbCBiZSB0dXJuZWQgaW50byBzdHJpbmdzIGFuZCBkaXNwbGF5ZWQgaW4gdGhlIHBvcHVwIHdpbmRvdy5cblxuVGhlcmUgYXJlIGEgbnVtYmVyIG9mIFBvcHVwIG91dHB1dCBjYWxscywgZWFjaCB3aXRoIGEgc2xpZ2h0bHkgZGlmZmVyZW50IGxvb2sgKGUuZy4gZGlmZmVyZW50IGJ1dHRvbiBsYWJlbHMpLlxuXG5UaGUgbGlzdCBvZiBQb3B1cCBvdXRwdXQgZnVuY3Rpb25zIGFyZTpcbi0gUG9wdXBcbi0gUG9wdXBPa1xuLSBQb3B1cFllc05vXG4tIFBvcHVwQ2FuY2VsXG4tIFBvcHVwT2tDYW5jZWxcbi0gUG9wdXBFcnJvclxuLSBQb3B1cFRpbWVkLCBQb3B1cEF1dG9DbG9zZVxuLSBQb3B1cE5vV2FpdCwgUG9wdXBOb25CbG9ja2luZ1xuXG5UaGUgdHJhaWxpbmcgcG9ydGlvbiBvZiB0aGUgZnVuY3Rpb24gbmFtZSBhZnRlciBQb3B1cCBpbmRpY2F0ZXMgd2hhdCBidXR0b25zIGFyZSBzaG93bi4gIGBQb3B1cFllc05vYCBzaG93cyBhIHBhaXIgb2YgYnV0dG9uIHdpdGggWWVzIGFuZCBObyBvbiB0aGVtLiAgIGBQb3B1cENhbmNlbGAgaGFzIGEgQ2FuY2VsIGJ1dHRvbiwgZXRjLlxuXG5XaGlsZSB0aGVzZSBhcmUgXCJvdXRwdXRcIiB3aW5kb3dzLCB0aGV5IGRvIGNvbGxlY3QgaW5wdXQgaW4gdGhlIGZvcm0gb2YgYnV0dG9ucy4gIFRoZSBQb3B1cCBmdW5jdGlvbnMgcmV0dXJuIHRoZSBidXR0b24gdGhhdCB3YXMgY2xpY2tlZC4gIElmIHRoZSBPayBidXR0b24gd2FzIGNsaWNrZWQsIHRoZW4gUG9wdXAgcmV0dXJucyB0aGUgc3RyaW5nICdPaycuICBJZiB0aGUgdXNlciBjbGlja2VkIHRoZSBYIGJ1dHRvbiB0byBjbG9zZSB0aGUgd2luZG93LCB0aGVuIHRoZSBidXR0b24gdmFsdWUgcmV0dXJuZWQgaXMgYE5vbmVgLlxuXG5UaGUgZnVuY3Rpb24gYFBvcHVwVGltZWRgIG9yIGBQb3B1cEF1dG9DbG9zZWAgYXJlIHBvcHVwIHdpbmRvd3MgdGhhdCB3aWxsIGF1dG9tYXRpY2FsbHkgY2xvc2UgYWZ0ZXIgY29tZSBwZXJpb2Qgb2YgdGltZS5cblxuSGVyZSBpcyBhIHF1aWNrLXJlZmVyZW5jZSBzaG93aW5nIGhvdyB0aGUgUG9wdXAgY2FsbHMgbG9vay5cblxuYGBgcHl0aG9uXG5zZy5Qb3B1cCgnUG9wdXAnKSAgIyBTaG93cyBPSyBidXR0b25cbnNnLlBvcHVwT2soJ1BvcHVwT2snKSAgIyBTaG93cyBPSyBidXR0b25cbnNnLlBvcHVwWWVzTm8oJ1BvcHVwWWVzTm8nKSAgIyBTaG93cyBZZXMgYW5kIE5vIGJ1dHRvbnNcbnNnLlBvcHVwQ2FuY2VsKCdQb3B1cENhbmNlbCcpICAjIFNob3dzIENhbmNlbGxlZCBidXR0b25cbnNnLlBvcHVwT0tDYW5jZWwoJ1BvcHVwT0tDYW5jZWwnKSAgIyBTaG93cyBPSyBhbmQgQ2FuY2VsIGJ1dHRvbnNcbnNnLlBvcHVwRXJyb3IoJ1BvcHVwRXJyb3InKSAgIyBTaG93cyByZWQgZXJyb3IgYnV0dG9uXG5zZy5Qb3B1cFRpbWVkKCdQb3B1cFRpbWVkJykgICMgQXV0b21hdGljYWxseSBjbG9zZXNcbnNnLlBvcHVwQXV0b0Nsb3NlKCdQb3B1cEF1dG9DbG9zZScpICAjIFNhbWUgYXMgUG9wdXBUaW1lZFxuYGBgXG5cblByZXZpZXcgb2YgcG9wdXBzOlxuXG48cCBzdHlsZT1cImRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XCI+XG5cdDxpbWcgc3JjPVwiaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTczOTQtMTM4MGFiMDAtYWVhMC0xMWU4LTk4YjEtMWFiN2Q3YmQ1YjM3LmpwZ1wiPlxuXHQ8aW1nIHNyYz1cImh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU3NDAwLTE2N2I5YjgwLWFlYTAtMTFlOC05ZDQyLTIzMTRmMjRlNjJkZS5qcGdcIj5cblx0PGltZyBzcmM9XCJodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1NzM5OS0xNTRhNmU4MC1hZWEwLTExZTgtOTU4MC1lNzE2ZjgzOWQ0MDAuanBnXCI+XG48L3A+XG5cbjxwIHN0eWxlPVwiZGlzcGxheTogZmxleDtqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcIj5cblx0PGltZyBzcmM9XCJodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1NzM5OC0xNGIxZDgwMC1hZWEwLTExZTgtOWU4OC1jMmIzNmEyNDg0NDcuanBnXCI+XG5cdDxpbWcgc3JjPVwiaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTczOTctMTRiMWQ4MDAtYWVhMC0xMWU4LTk1MGItNmQwYjRmMzM4NDFhLmpwZ1wiPlxuXHQ8aW1nIHNyYz1cImh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU3Mzk2LTE0MTk0MTgwLWFlYTAtMTFlOC04ZWVmLWJiMmUxMTkzZWNmYS5qcGdcIj5cblx0PGltZyBzcmM9XCJodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1NzU5NS05ZTE1ZGEwMC1hZWExLTExZTgtODkwOS02YjYxMjFiNzQ1MDkuanBnXCI+XG48L3A+XG5cblBvcHVwIC0gRGlzcGxheSBhIHBvcHVwIFdpbmRvdyB3aXRoIGFzIG1hbnkgcGFybXMgYXMgeW91IHdpc2ggdG8gaW5jbHVkZS4gIFRoaXMgaXMgdGhlIEdVSSBlcXVpdmFsZW50IG9mIHRoZVxuXCJwcmludFwiIHN0YXRlbWVudC4gIEl0J3MgYWxzbyBncmVhdCBmb3IgXCJwYXVzaW5nXCIgeW91ciBwcm9ncmFtJ3MgZmxvdyB1bnRpbCB0aGUgdXNlciBjYW4gcmVhZCBzb21lIGVycm9yIG1lc3NhZ2VzLlxuXG5gYGBcblBvcHVwKGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGJ1dHRvbl90eXBlPTAsXG4gICAgYXV0b19jbG9zZT1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgY3VzdG9tX3RleHQ9KE5vbmUsIE5vbmUpLFxuICAgIG5vbl9ibG9ja2luZz1GYWxzZSxcbiAgICBpY29uPU5vbmUsXG4gICAgbGluZV93aWR0aD1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBub190aXRsZWJhcj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIGxvY2F0aW9uPShOb25lLCBOb25lKSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8KEFueSkgVmFyaWFibGUgbnVtYmVyIG9mIHlvdXIgYXJndW1lbnRzLiBMb2FkIHVwIHRoZSBjYWxsIHdpdGggc3R1ZmYgdG8gc2VlIXxcbnx0aXRsZXwoc3RyKSBPcHRpb25hbCB0aXRsZSBmb3IgdGhlIHdpbmRvdy4gSWYgbm9uZSBwcm92aWRlZCwgdGhlIGZpcnN0IGFyZyB3aWxsIGJlIHVzZWQgaW5zdGVhZC58XG58YnV0dG9uX2NvbG9yfFR1cGxlW3N0ciwgc3RyXSBDb2xvciBvZiB0aGUgYnV0dG9ucyBzaG93biAodGV4dCBjb2xvciwgYnV0dG9uIGNvbG9yKXxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIFdpbmRvdydzIGJhY2tncm91bmQgY29sb3J8XG58dGV4dF9jb2xvcnwoc3RyKSB0ZXh0IGNvbG9yfFxufGJ1dHRvbl90eXBlfChlbnVtKSBOT1QgVVNFUiBTRVQhIERldGVybWluZXMgd2hpY2ggcHJlLWRlZmluZWQgYnV0dG9ucyB3aWxsIGJlIHNob3duIChEZWZhdWx0IHZhbHVlID0gUE9QVVBfQlVUVE9OU19PSykuIFRoZXJlIGFyZSBtYW55IFBvcHVwIGZ1bmN0aW9ucyBhbmQgdGhleSBjYWxsIFBvcHVwLCBjaGFuZ2luZyB0aGlzIHBhcmFtZXRlciB0byBnZXQgdGhlIGRlc2lyZWQgZWZmZWN0LnxcbnxhdXRvX2Nsb3NlfChib29sKSBJZiBUcnVlIHRoZSB3aW5kb3cgd2lsbCBhdXRvbWF0aWNhbGx5IGNsb3NlfFxufGF1dG9fY2xvc2VfZHVyYXRpb258KGludCkgdGltZSBpbiBzZWNvbmRzIHRvIGtlZXAgd2luZG93IG9wZW4gYmVmb3JlIGNsb3NpbmcgaXQgYXV0b21hdGljYWxseXxcbnxjdXN0b21fdGV4dHxVbmlvbltUdXBsZVtzdHIsIHN0cl0sIHN0cl0gQSBzdHJpbmcgb3IgcGFpciBvZiBzdHJpbmdzIHRoYXQgY29udGFpbiB0aGUgdGV4dCB0byBkaXNwbGF5IG9uIHRoZSBidXR0b25zfFxufG5vbl9ibG9ja2luZ3woYm9vbCkgSWYgVHJ1ZSB0aGVuIHdpbGwgaW1tZWRpYXRlbHkgcmV0dXJuIGZyb20gdGhlIGZ1bmN0aW9uIHdpdGhvdXQgd2FpdGluZyBmb3IgdGhlIHVzZXIncyBpbnB1dC58XG58aWNvbnxVbmlvbltzdHIsIGJ5dGVzXSBpY29uIHRvIGRpc3BsYXkgb24gdGhlIHdpbmRvdy4gU2FtZSBmb3JtYXQgYXMgYSBXaW5kb3cgY2FsbHxcbnxsaW5lX3dpZHRofChpbnQpIFdpZHRoIG9mIGxpbmVzIGluIGNoYXJhY3RlcnMuIERlZmF1bHRzIHRvIE1FU1NBR0VfQk9YX0xJTkVfV0lEVEh8XG58Zm9udHxVbmlvbltzdHIsIHR1cGxlKGZvbnQgbmFtZSwgc2l6ZSwgbW9kaWZpZXJzKSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58bm9fdGl0bGViYXJ8KGJvb2wpIElmIFRydWUgd2lsbCBub3Qgc2hvdyB0aGUgZnJhbWUgYXJvdW5kIHRoZSB3aW5kb3cgYW5kIHRoZSB0aXRsZWJhciBhY3Jvc3MgdGhlIHRvcHxcbnxncmFiX2FueXdoZXJlfChib29sKSBJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdy4gSWYgbm9fdGl0bGViYXIgaXMgVHJ1ZSwgZ3JhYl9hbnl3aGVyZSBzaG91bGQgbGlrZWx5IGJlIGVuYWJsZWQgdG9vfFxufGxvY2F0aW9ufFR1cGxlW2ludCwgaW50XSBMb2NhdGlvbiBvbiBzY3JlZW4gdG8gZGlzcGxheSB0aGUgdG9wIGxlZnQgY29ybmVyIG9mIHdpbmRvdy4gRGVmYXVsdHMgdG8gd2luZG93IGNlbnRlcmVkIG9uIHNjcmVlbnxcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25bc3RyLCBOb25lXSBSZXR1cm5zIHRleHQgb2YgdGhlIGJ1dHRvbiB0aGF0IHdhcyBwcmVzc2VkLiAgTm9uZSB3aWxsIGJlIHJldHVybmVkIGlmIHVzZXIgY2xvc2VkIHdpbmRvdyB3aXRoIFggfFxuXG5UaGUgb3RoZXIgb3V0cHV0IFBvcHVwcyBhcmUgdmFyaWF0aW9ucyBvbiBwYXJhbWV0ZXJzLiAgVXN1YWxseSB0aGUgYnV0dG9uX3R5cGUgcGFyYW1ldGVyIGlzIHRoZSBwcmltYXJ5IG9uZSBjaGFuZ2VkLlxuXG5UaGUgb3RoZXIgb3V0cHV0IFBvcHVwcyBhcmUgdmFyaWF0aW9ucyBvbiBwYXJhbWV0ZXJzLiAgVXN1YWxseSB0aGUgYnV0dG9uX3R5cGUgcGFyYW1ldGVyIGlzIHRoZSBwcmltYXJ5IG9uZSBjaGFuZ2VkLlxuXG5UaGUgY2hvaWNlcyBmb3IgYnV0dG9uX3R5cGUgYXJlOlxuYGBgXG5QT1BVUF9CVVRUT05TX1lFU19OT1xuUE9QVVBfQlVUVE9OU19DQU5DRUxMRURcblBPUFVQX0JVVFRPTlNfRVJST1JcblBPUFVQX0JVVFRPTlNfT0tfQ0FOQ0VMXG5QT1BVUF9CVVRUT05TX09LXG5QT1BVUF9CVVRUT05TX05PX0JVVFRPTlNcbmBgYFxuXG4qKk5vdGUgdGhhdCB5b3Ugc2hvdWxkIG5vdCBjYWxsIFBvcHVwIHlvdXJzZWxmIHdpdGggZGlmZmVyZW50IGJ1dHRvbl90eXBlcy4qKiAgUmVseSBvbiB0aGUgUG9wdXAgZnVuY3Rpb24gbmFtZWQgdGhhdCBzZXRzIHRoYXQgdmFsdWUgZm9yIHlvdS4gIEZvciBleGFtcGxlIFBvcHVwWWVzTm8gd2lsbCBzZXQgdGhlIGJ1dHRvbiB0eXBlIHRvIFBPUFVQX0JVVFRPTlNfWUVTX05PIGZvciB5b3UuXG5cbiMjIyMgU2Nyb2xsZWQgT3V0cHV0XG5UaGVyZSBpcyBhIHNjcm9sbGVkIHZlcnNpb24gb2YgUG9wdXBzIHNob3VsZCB5b3UgaGF2ZSBhIGxvdCBvZiBpbmZvcm1hdGlvbiB0byBkaXNwbGF5LlxuXG5TaG93IGEgc2Nyb2xsZWQgUG9wdXAgd2luZG93IGNvbnRhaW5pbmcgdGhlIHVzZXIncyB0ZXh0IHRoYXQgd2FzIHN1cHBsaWVkLiAgVXNlIHdpdGggYXMgbWFueSBpdGVtcyB0byBwcmludCBhcyB5b3VcbndhbnQsIGp1c3QgbGlrZSBhIHByaW50IHN0YXRlbWVudC5cblxuYGBgXG5Qb3B1cFNjcm9sbGVkKGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICB5ZXNfbm89RmFsc2UsXG4gICAgYXV0b19jbG9zZT1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIG5vbl9ibG9ja2luZz1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8KEFueSkgVmFyaWFibGUgbnVtYmVyIG9mIGl0ZW1zIHRvIGRpc3BsYXl8XG58dGl0bGV8KHN0cikgVGl0bGUgdG8gZGlzcGxheSBpbiB0aGUgd2luZG93LnxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdIGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58eWVzX25vfChib29sKSBJZiBUcnVlLCBkaXNwbGF5cyBZZXMgYW5kIE5vIGJ1dHRvbnMgaW5zdGVhZCBvZiBPa3xcbnxhdXRvX2Nsb3NlfChib29sKSBpZiBUcnVlIHdpbmRvdyB3aWxsIGNsb3NlIGl0c2VsZnxcbnxhdXRvX2Nsb3NlX2R1cmF0aW9ufFVuaW9uW2ludCwgZmxvYXRdIE9sZGVyIHZlcnNpb25zIG9ubHkgYWNjZXB0IGludC4gVGltZSBpbiBzZWNvbmRzIHVudGlsIHdpbmRvdyB3aWxsIGNsb3NlfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gTG9jYXRpb24gb24gdGhlIHNjcmVlbiB0byBwbGFjZSB0aGUgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIHdpbmRvd3xcbnxub25fYmxvY2tpbmd8KGJvb2wpIGlmIFRydWUgdGhlIGNhbGwgd2lsbCBpbW1lZGlhdGVseSByZXR1cm4gcmF0aGVyIHRoYW4gd2FpdGluZyBvbiB1c2VyIGlucHV0fFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltzdHIsIE5vbmUsIFRJTUVPVVRfS0VZXSBSZXR1cm5zIHRleHQgb2YgdGhlIGJ1dHRvbiB0aGF0IHdhcyBwcmVzc2VkLiAgTm9uZSB3aWxsIGJlIHJldHVybmVkIGlmIHVzZXIgY2xvc2VkIHdpbmRvdyB3aXRoIFggfFxuXG5gYGBweXRob25cblBvcHVwU2Nyb2xsZWQoKmFyZ3MsIGJ1dHRvbl9jb2xvcj1Ob25lLCB5ZXNfbm89RmFsc2UsIGF1dG9fY2xvc2U9RmFsc2UsIGF1dG9fY2xvc2VfZHVyYXRpb249Tm9uZSwgc2l6ZT0oTm9uZSwgTm9uZSksIGxvY2F0aW9uPShOb25lLCBOb25lKSwgdGl0bGU9Tm9uZSwgbm9uX2Jsb2NraW5nPUZhbHNlKVxuYGBgXG5UeXBpY2FsIHVzYWdlOlxuXG5gYGBweXRob25cbnNnLlBvcHVwU2Nyb2xsZWQobXlfdGV4dClcbmBgYFxuXG4hW3Njcm9sbGVkdGV4dGJveCAyXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80MzY2NzMyNC03MTJhYTBkNC05NzQ1LTExZTgtODNhOS1hMGQwNTcwZDA4NjUuanBnKVxuXG5UaGUgYFBvcHVwU2Nyb2xsZWRgIHdpbGwgYXV0by1maXQgdGhlIHdpbmRvdyBzaXplIHRvIHRoZSBzaXplIG9mIHRoZSB0ZXh0LiAgU3BlY2lmeSBgTm9uZWAgaW4gdGhlIGhlaWdodCBmaWVsZCBvZiBhIGBzaXplYCBwYXJhbWV0ZXIgdG8gZ2V0IGF1dG8tc2l6ZWQgaGVpZ2h0LiBcblxuVGhpcyBjYWxsIHdpbGwgY3JlYXRlIGEgc2Nyb2xsZWQgYm94IDgwIGNoYXJhY3RlcnMgd2lkZSBhbmQgYSBoZWlnaHQgZGVwZW5kZW50IHVwb24gdGhlIG51bWJlciBvZiBsaW5lcyBvZiB0ZXh0LiBcblxuYHNnLlBvcHVwU2Nyb2xsZWQobXlfdGV4dCwgc2l6ZT0oODAsIE5vbmUpKWAgIFxuXG5Ob3RlIHRoYXQgdGhlIGRlZmF1bHQgbWF4IG51bWJlciBvZiBsaW5lcyBiZWZvcmUgc2Nyb2xsaW5nIGhhcHBlbnMgaXMgc2V0IHRvIDUwLiBBdCA1MCBsaW5lcyB0aGUgc2Nyb2xsaW5nIHdpbGwgYmVnaW4uIFxuXG5JZiBgbm9uX2Jsb2NraW5nYCBwYXJhbWV0ZXIgaXMgc2V0LCB0aGVuICB0aGUgY2FsbCB3aWxsIG5vdCBibG9ja2luZyB3YWl0aW5nIGZvciB0aGUgdXNlciB0byBjbG9zZSB0aGUgd2luZG93LiAgRXhlY3V0aW9uIHdpbGwgaW1tZWRpYXRlbHkgcmV0dXJuIHRvIHRoZSB1c2VyLiAgSGFuZHkgd2hlbiB5b3Ugd2FudCB0byBkdW1wIG91dCBkZWJ1ZyBpbmZvIHdpdGhvdXQgZGlzcnVwdGluZyB0aGUgcHJvZ3JhbSBmbG93LiBcblxuIyMjIFBvcHVwTm9XYWl0XG5cblNob3cgUG9wdXAgd2luZG93IGFuZCBpbW1lZGlhdGVseSByZXR1cm4gKGRvZXMgbm90IGJsb2NrKVxuXG5gYGBcblBvcHVwTm9XYWl0KGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fdHlwZT0wLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgYXV0b19jbG9zZT1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgbm9uX2Jsb2NraW5nPVRydWUsXG4gICAgaWNvbj1Ob25lLFxuICAgIGxpbmVfd2lkdGg9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgbm9fdGl0bGViYXI9RmFsc2UsXG4gICAgZ3JhYl9hbnl3aGVyZT1GYWxzZSxcbiAgICBrZWVwX29uX3RvcD1GYWxzZSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSkpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCphcmdzfHxcbnx0aXRsZXx8XG58YnV0dG9uX3R5cGV8KERlZmF1bHQgdmFsdWUgPSBQT1BVUF9CVVRUT05TX09LKXxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxiYWNrZ3JvdW5kX2NvbG9yfGNvbG9yIG9mIGJhY2tncm91bmR8XG58dGV4dF9jb2xvcnxjb2xvciBvZiB0aGUgdGV4dHxcbnxhdXRvX2Nsb3NlfChEZWZhdWx0ID0gRmFsc2UpfFxufGF1dG9fY2xvc2VfZHVyYXRpb258fFxufG5vbl9ibG9ja2luZ3woRGVmYXVsdCA9IFRydWUpfFxufGljb258SWNvbiB0byBkaXNwbGF5fFxufGxpbmVfd2lkdGh8V2lkdGggb2YgbGluZXMgaW4gY2hhcmFjdGVyc3xcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoRGVmYXVsdCA9IEZhbHNlKXxcbnxncmFiX2FueXdoZXJlfElmIFRydWUgY2FuIGdyYWIgYW55d2hlcmUgdG8gbW92ZSB0aGUgd2luZG93IChEZWZhdWx0ID0gRmFsc2UpfFxufGxvY2F0aW9ufHxcblxuVGhlIFBvcHVwIGNhbGwgUG9wdXBOb1dhaXQgb3IgUG9wdXBOb25CbG9ja2luZyB3aWxsIGNyZWF0ZSBhIHBvcHVwIHdpbmRvdyBhbmQgdGhlbiBpbW1lZGlhdGVseSByZXR1cm4gY29udHJvbCBiYWNrIHRvIHlvdS4gIEFsbCBvdGhlciBwb3B1cCBmdW5jdGlvbnMgd2lsbCBibG9jaywgd2FpdGluZyBmb3IgdGhlIHVzZXIgdG8gY2xvc2UgdGhlIHBvcHVwIHdpbmRvdy4gXG5cblRoaXMgZnVuY3Rpb24gaXMgdmVyeSBoYW5keSBmb3Igd2hlbiB5b3UncmUgKipkZWJ1Z2dpbmcqKiBhbmQgd2FudCB0byBkaXNwbGF5IHNvbWV0aGluZyBhcyBvdXRwdXQgYnV0IGRvbid0IHdhbnQgdG8gY2hhbmdlIHRoZSBwcm9ncmFtcydzIG92ZXJhbGwgdGltaW5nIGJ5IGJsb2NraW5nLiAgVGhpbmsgb2YgaXQgbGlrZSBhIGBwcmludGAgc3RhdGVtZW50LiBUaGVyZSBhcmUgbm8gcmV0dXJuIHZhbHVlcyBvbiBvbmUgb2YgdGhlc2UgUG9wdXBzLiBcblxuIyMgUG9wdXAgSW5wdXRcblRoZXJlIGFyZSBQb3B1cCBjYWxscyBmb3Igc2luZ2xlLWl0ZW0gaW5wdXRzLiBUaGVzZSBmb2xsb3cgdGhlIHBhdHRlcm4gb2YgYFBvcHVwYCBmb2xsb3dlZCBieSBgR2V0YCBhbmQgdGhlbiB0aGUgdHlwZSBvZiBpdGVtIHRvIGdldC4gIFRoZXJlIGFyZSAzIG9mIHRoZXNlIGlucHV0IFBvcHVwcyB0byBjaG9vc2UgZnJvbSwgZWFjaCB3aXRoIHNldHRpbmdzIGVuYWJsaW5nIGN1c3RvbWl6YXRpb24uXG4tIGBQb3B1cEdldFRleHRgIC0gZ2V0IGEgc2luZ2xlIGxpbmUgb2YgdGV4dFxuLSBgUG9wdXBHZXRGaWxlYCAtIGdldCBhIGZpbGVuYW1lXG4tIGBQb3B1cEdldEZvbGRlcmAgLSBnZXQgYSBmb2xkZXIgbmFtZVxuXG5Vc2UgdGhlc2UgUG9wdXBzIGluc3RlYWQgb2YgbWFraW5nICBhIGN1c3RvbSB3aW5kb3cgdG8gZ2V0IG9uZSBkYXRhIHZhbHVlLCBjYWxsIHRoZSBQb3B1cCBpbnB1dCBmdW5jdGlvbiB0byBnZXQgdGhlIGl0ZW0gZnJvbSB0aGUgdXNlci4gIElmIHlvdSBmaW5kIHRoZSBwYXJhbWV0ZXJzIGFyZSB1bmFibGUgdG8gY3JlYXRlIHRoZSBraW5kIG9mIHdpbmRvdyB5b3UgYXJlIGxvb2tpbmcgZm9yLCB0aGVuIGl0J3MgdGltZSBmb3IgeW91IHRvIGNyZWF0ZSB5b3VyIG93biB3aW5kb3cuXG4jIyMgUG9wdXBHZXRUZXh0XG5Vc2UgdGhpcyBQb3B1cCB0byBnZXQgYSBsaW5lIG9mIHRleHQgZnJvbSB0aGUgdXNlci5cblxuRGlzcGxheSBQb3B1cCB3aXRoIHRleHQgZW50cnkgZmllbGQuIFJldHVybnMgdGhlIHRleHQgZW50ZXJlZCBvciBOb25lIGlmIGNsb3NlZCAvIGNhbmNlbGxlZFxuXG5gYGBcblBvcHVwR2V0VGV4dChtZXNzYWdlLFxuICAgIHRpdGxlPU5vbmUsXG4gICAgZGVmYXVsdF90ZXh0PVwiXCIsXG4gICAgcGFzc3dvcmRfY2hhcj1cIlwiLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgaWNvbj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBub190aXRsZWJhcj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIGxvY2F0aW9uPShOb25lLCBOb25lKSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58bWVzc2FnZXwoc3RyKSBtZXNzYWdlIGRpc3BsYXllZCB0byB1c2VyfFxufHRpdGxlfChzdHIpIFdpbmRvdyB0aXRsZXxcbnxkZWZhdWx0X3RleHR8KHN0cikgZGVmYXVsdCB2YWx1ZSB0byBwdXQgaW50byBpbnB1dCBhcmVhfFxufHBhc3N3b3JkX2NoYXJ8KHN0cikgY2hhcmFjdGVyIHRvIGJlIHNob3duIGluc3RlYWQgb2YgYWN0dWFsbHkgdHlwZWQgY2hhcmFjdGVyc3xcbnxzaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgb2YgdGhlIElucHV0VGV4dCBFbGVtZW50fFxufGJ1dHRvbl9jb2xvcnxUdXBsZVtzdHIsIHN0cl0gQ29sb3Igb2YgdGhlIGJ1dHRvbiAodGV4dCwgYmFja2dyb3VuZCl8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBiYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBlbnRpcmUgd2luZG93fFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIG1lc3NhZ2UgdGV4dHxcbnxpY29ufFVuaW9uW2J5dGVzLCBzdHJdIGZpbGVuYW1lIG9yIGJhc2U2NCBzdHJpbmcgdG8gYmUgdXNlZCBmb3IgdGhlIHdpbmRvdydzIGljb258XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufG5vX3RpdGxlYmFyfChib29sKSBJZiBUcnVlIG5vIHRpdGxlYmFyIHdpbGwgYmUgc2hvd258XG58Z3JhYl9hbnl3aGVyZXwoYm9vbCkgSWYgVHJ1ZSBjYW4gY2xpY2sgYW5kIGRyYWcgYW55d2hlcmUgaW4gdGhlIHdpbmRvdyB0byBtb3ZlIHRoZSB3aW5kb3d8XG58a2VlcF9vbl90b3B8KGJvb2wpIElmIFRydWUgdGhlIHdpbmRvdyB3aWxsIHJlbWFpbiBhYm92ZSBhbGwgY3VycmVudCB3aW5kb3dzfFxufGxvY2F0aW9ufFR1eXBsZVtpbnQsIGludF0gKHgseSkgTG9jYXRpb24gb24gc2NyZWVuIHRvIGRpc3BsYXkgdGhlIHVwcGVyIGxlZnQgY29ybmVyIG9mIHdpbmRvd3xcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25bc3RyLCBOb25lXSBUZXh0IGVudGVyZWQgb3IgTm9uZSBpZiB3aW5kb3cgd2FzIGNsb3NlZCBvciBjYW5jZWwgYnV0dG9uIGNsaWNrZWQgfFxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xudGV4dCA9IHNnLlBvcHVwR2V0VGV4dCgnVGl0bGUnLCAnUGxlYXNlIGlucHV0IHNvbWV0aGluZycpXG5zZy5Qb3B1cCgnUmVzdWx0cycsICdUaGUgdmFsdWUgcmV0dXJuZWQgZnJvbSBQb3B1cEdldFRleHQnLCB0ZXh0KVxuYGBgXG5cbiFbcG9wdXBnZXR0ZXh0XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1NzI4MS04NzIxYjg4MC1hZTllLTExZTgtOThjZC1kMDYzNjlmNDE4N2UuanBnKVxuXG4hW3BvcHVwIGdldHRleHQgcmVzcG9uc2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU3MjgyLTg3MjFiODgwLWFlOWUtMTFlOC04NGFlLWRjOGJiMzA1MDRhMC5qcGcpXG5cbiMjIyBQb3B1cEdldEZpbGVcbkdldHMgYSBmaWxlbmFtZSBmcm9tIHRoZSB1c2VyLiAgVGhlcmUgYXJlIG9wdGlvbnMgdG8gY29uZmlndXJlIHRoZSB0eXBlIG9mIGRpYWxvZyBib3ggdG8gc2hvdy4gIE5vcm1hbGx5IGFuIFwiT3BlbiBGaWxlXCIgZGlhbG9nIGJveCBpcyBzaG93bi5cblxuRGlzcGxheSBwb3B1cCB3aW5kb3cgd2l0aCB0ZXh0IGVudHJ5IGZpZWxkIGFuZCBicm93c2UgYnV0dG9uIHNvIHRoYXQgYSBmaWxlIGNhbiBiZSBjaG9zZW4gYnkgdXNlci5cblxuYGBgXG5Qb3B1cEdldEZpbGUobWVzc2FnZSxcbiAgICB0aXRsZT1Ob25lLFxuICAgIGRlZmF1bHRfcGF0aD1cIlwiLFxuICAgIGRlZmF1bHRfZXh0ZW5zaW9uPVwiXCIsXG4gICAgc2F2ZV9hcz1GYWxzZSxcbiAgICBtdWx0aXBsZV9maWxlcz1GYWxzZSxcbiAgICBmaWxlX3R5cGVzPSgoJ0FMTCBGaWxlcycsICcqLionKSwpLFxuICAgIG5vX3dpbmRvdz1GYWxzZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGljb249Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgbm9fdGl0bGViYXI9RmFsc2UsXG4gICAgZ3JhYl9hbnl3aGVyZT1GYWxzZSxcbiAgICBrZWVwX29uX3RvcD1GYWxzZSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSksXG4gICAgaW5pdGlhbF9mb2xkZXI9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58bWVzc2FnZXwoc3RyKSBtZXNzYWdlIGRpc3BsYXllZCB0byB1c2VyfFxufHRpdGxlfChzdHIpIFdpbmRvdyB0aXRsZXxcbnxkZWZhdWx0X3BhdGh8KHN0cikgcGF0aCB0byBkaXNwbGF5IHRvIHVzZXIgYXMgc3RhcnRpbmcgcG9pbnQgKGZpbGxlZCBpbnRvIHRoZSBpbnB1dCBmaWVsZCl8XG58ZGVmYXVsdF9leHRlbnNpb258KHN0cikgSWYgbm8gZXh0ZW5zaW9uIGVudGVyZWQgYnkgdXNlciwgYWRkIHRoaXMgdG8gZmlsZW5hbWUgKG9ubHkgdXNlZCBpbiBzYXZlYXMgZGlhbG9ncyl8XG58c2F2ZV9hc3woYm9vbCkgaWYgVHJ1ZSwgdGhlIFwic2F2ZSBhc1wiIGRpYWxvZyBpcyBzaG93biB3aGljaCB3aWxsIHZlcmlmeSBiZWZvcmUgb3ZlcndyaXRpbmd8XG58bXVsdGlwbGVfZmlsZXN8KGJvb2wpIGlmIFRydWUsIHRoZW4gYWxsb3dzIG11bHRpcGxlIGZpbGVzIHRvIGJlIHNlbGVjdGVkIHRoYXQgYXJlIHJldHVybmVkIHdpdGggJzsnIGJldHdlZW4gZWFjaCBmaWxlbmFtZXxcbnxmaWxlX3R5cGVzfFR1cGxlW1R1cGxlW3N0cixzdHJdXSBMaXN0IG9mIGV4dGVuc2lvbnMgdG8gc2hvdyB1c2luZyB3aWxkY2FyZHMuIEFsbCBmaWxlcyAodGhlIGRlZmF1bHQpID0gKChcIkFMTCBGaWxlc1wiLCBcIiouKlwiKSwpfFxufG5vX3dpbmRvd3woYm9vbCkgaWYgVHJ1ZSwgbm8gUHlTaW1wbGVHVUkgd2luZG93IHdpbGwgYmUgc2hvd24uIEluc3RlYWQganVzdCB0aGUgdGtpbnRlciBkaWFsb2cgaXMgc2hvd258XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIG9mIHRoZSBJbnB1dFRleHQgRWxlbWVudHxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdIENvbG9yIG9mIHRoZSBidXR0b24gKHRleHQsIGJhY2tncm91bmQpfFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgZW50aXJlIHdpbmRvd3xcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSBtZXNzYWdlIHRleHR8XG58aWNvbnxVbmlvbltieXRlcywgc3RyXSBmaWxlbmFtZSBvciBiYXNlNjQgc3RyaW5nIHRvIGJlIHVzZWQgZm9yIHRoZSB3aW5kb3cncyBpY29ufFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoYm9vbCkgSWYgVHJ1ZSBubyB0aXRsZWJhciB3aWxsIGJlIHNob3dufFxufGdyYWJfYW55d2hlcmV8KGJvb2wpIElmIFRydWUgY2FuIGNsaWNrIGFuZCBkcmFnIGFueXdoZXJlIGluIHRoZSB3aW5kb3cgdG8gbW92ZSB0aGUgd2luZG93fFxufGtlZXBfb25fdG9wfChib29sKSBJZiBUcnVlIHRoZSB3aW5kb3cgd2lsbCByZW1haW4gYWJvdmUgYWxsIGN1cnJlbnQgd2luZG93c3xcbnxsb2NhdGlvbnxUdXlwbGVbaW50LCBpbnRdICh4LHkpIExvY2F0aW9uIG9uIHNjcmVlbiB0byBkaXNwbGF5IHRoZSB1cHBlciBsZWZ0IGNvcm5lciBvZiB3aW5kb3d8XG58aW5pdGlhbF9mb2xkZXJ8KHN0cikgbG9jYXRpb24gaW4gZmlsZXN5c3RlbSB0byBiZWdpbiBicm93c2luZ3xcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25bc3RyLCBOb25lXSAgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZmlsZShzKSBjaG9zZW4sIE5vbmUgaWYgY2FuY2VsbGVkIG9yIHdpbmRvdyBjbG9zZWQgd2l0aCBYIHxcblxuSWYgY29uZmlndXJlZCBhcyBhbiBPcGVuIEZpbGUgUG9wdXAgdGhlbiAoc2F2ZV9hcyBpcyBub3QgVHJ1ZSkgIHRoZSBkaWFsb2cgYm94IHdpbGwgbG9vayBsaWtlIHRoaXMuIFxuXG4hW3NuYWctMDA2MF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDY3NjEwNTAtOTgzMWM2ODAtY2NhMS0xMWU4LThkZTktNjhiMTVlZmUyYzQ2LmpwZylcblxuSWYgeW91IHNldCB0aGUgcGFyYW1ldGVyIHNhdmVfQXMgdG8gVHJ1ZSwgdGhlbiB0aGUgZGlhbG9nIGJveCBsb29rcyBsaWtlIHRoaXM6XG5cbiFbc25hZy0wMDYxXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80Njc2MTMzMC0yYjZhZmMwMC1jY2EyLTExZTgtOTUzYi1mNmI1YzVjZTU3ZjUuanBnKVxuXG5JZiB5b3UgY2hvb3NlIGEgZmlsZW5hbWUgdGhhdCBhbHJlYWR5IGV4aXN0cywgeW91J2xsIGdldCBhIHdhcm5pbmcgcG9wdXAgYm94IGFza2luZyBpZiBpdCdzIE9LLiAgWW91IGNhbiBhbHNvIHNwZWNpZnkgYSBmaWxlIHRoYXQgZG9lc24ndCBleGlzdC4gIFdpdGggYW4gXCJPcGVuXCIgZGlhbG9nIGJveCB5b3UgY2Fubm90IGNob29zZSBhIG5vbi1leGlzdGluZyBmaWxlLlxuXG5BIHR5cGljYWwgY2FsbCBwcm9kdWNlcyB0aGlzIHdpbmRvdy5cblxuYGBgcHl0aG9uXG50ZXh0ID0gc2cuUG9wdXBHZXRGaWxlKCdQbGVhc2UgZW50ZXIgYSBmaWxlIG5hbWUnKVxuc2cuUG9wdXAoJ1Jlc3VsdHMnLCAnVGhlIHZhbHVlIHJldHVybmVkIGZyb20gUG9wdXBHZXRGaWxlJywgdGV4dClcbmBgYFxuXG4hW3BvcHVwZ2V0ZmlsZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTc4NTctMmZkMzE2ODAtYWVhNS0xMWU4LThlYjctZjZiOTFjMjAyY2M4LmpwZylcblxuIyMjIFBvcHVwR2V0Rm9sZGVyXG5cblRoZSB3aW5kb3cgY3JlYXRlZCB0byBnZXQgYSBmb2xkZXIgbmFtZSBsb29rcyB0aGUgc2FtZSBhcyB0aGUgZ2V0IGEgZmlsZSBuYW1lLiAgVGhlIGRpZmZlcmVuY2UgaXMgaW4gd2hhdCB0aGUgYnJvd3NlIGJ1dHRvbiBkb2VzLiAgYFBvcHVwR2V0RmlsZWAgc2hvd3MgYW4gT3BlbiBGaWxlIGRpYWxvZyBib3ggd2hpbGUgYFBvcHVwR2V0Rm9sZGVyYCAgc2hvd3MgYW4gT3BlbiBGb2xkZXIgZGlhbG9nIGJveC5cblxuRGlzcGxheSBwb3B1cCB3aXRoIHRleHQgZW50cnkgZmllbGQgYW5kIGJyb3dzZSBidXR0b24gc28gdGhhdCBhIGZvbGRlciBjYW4gYmUgY2hvc2VuLlxuXG5gYGBcblBvcHVwR2V0Rm9sZGVyKG1lc3NhZ2UsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBkZWZhdWx0X3BhdGg9XCJcIixcbiAgICBub193aW5kb3c9RmFsc2UsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBpY29uPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPUZhbHNlLFxuICAgIGdyYWJfYW55d2hlcmU9RmFsc2UsXG4gICAga2VlcF9vbl90b3A9RmFsc2UsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIGluaXRpYWxfZm9sZGVyPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufG1lc3NhZ2V8KHN0cikgbWVzc2FnZSBkaXNwbGF5ZWQgdG8gdXNlcnxcbnx0aXRsZXwoc3RyKSBXaW5kb3cgdGl0bGV8XG58ZGVmYXVsdF9wYXRofChzdHIpIHBhdGggdG8gZGlzcGxheSB0byB1c2VyIGFzIHN0YXJ0aW5nIHBvaW50IChmaWxsZWQgaW50byB0aGUgaW5wdXQgZmllbGQpfFxufG5vX3dpbmRvd3woYm9vbCkgaWYgVHJ1ZSwgbm8gUHlTaW1wbGVHVUkgd2luZG93IHdpbGwgYmUgc2hvd24uIEluc3RlYWQganVzdCB0aGUgdGtpbnRlciBkaWFsb2cgaXMgc2hvd258XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIG9mIHRoZSBJbnB1dFRleHQgRWxlbWVudHxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdIENvbG9yIG9mIHRoZSBidXR0b24gKHRleHQsIGJhY2tncm91bmQpfFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgZW50aXJlIHdpbmRvd3xcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSBtZXNzYWdlIHRleHR8XG58aWNvbnxVbmlvbltieXRlcywgc3RyXSBmaWxlbmFtZSBvciBiYXNlNjQgc3RyaW5nIHRvIGJlIHVzZWQgZm9yIHRoZSB3aW5kb3cncyBpY29ufFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoYm9vbCkgSWYgVHJ1ZSBubyB0aXRsZWJhciB3aWxsIGJlIHNob3dufFxufGdyYWJfYW55d2hlcmV8KGJvb2wpIElmIFRydWUgY2FuIGNsaWNrIGFuZCBkcmFnIGFueXdoZXJlIGluIHRoZSB3aW5kb3cgdG8gbW92ZSB0aGUgd2luZG93fFxufGtlZXBfb25fdG9wfChib29sKSBJZiBUcnVlIHRoZSB3aW5kb3cgd2lsbCByZW1haW4gYWJvdmUgYWxsIGN1cnJlbnQgd2luZG93c3xcbnxsb2NhdGlvbnxUdXlwbGVbaW50LCBpbnRdICh4LHkpIExvY2F0aW9uIG9uIHNjcmVlbiB0byBkaXNwbGF5IHRoZSB1cHBlciBsZWZ0IGNvcm5lciBvZiB3aW5kb3d8XG58aW5pdGlhbF9mb2xkZXJ8KHN0cikgbG9jYXRpb24gaW4gZmlsZXN5c3RlbSB0byBiZWdpbiBicm93c2luZ3xcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25bc3RyLCBOb25lXSAgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgcGF0aCBjaG9zZW4sIE5vbmUgaWYgY2FuY2VsbGVkIG9yIHdpbmRvdyBjbG9zZWQgd2l0aCBYIHxcblxuVGhpcyBpcyBhIHR5cHBpY2FsIGNhbGxcblxuYGBgcHl0aG9uXG5cdHRleHQgPSBzZy5Qb3B1cEdldEZvbGRlcignUGxlYXNlIGVudGVyIGEgZm9sZGVyIG5hbWUnKVxuXHRzZy5Qb3B1cCgnUmVzdWx0cycsICdUaGUgdmFsdWUgcmV0dXJuZWQgZnJvbSBQb3B1cEdldEZvbGRlcicsIHRleHQpXG5gYGBcblxuIVtwb3B1cGdldGZvbGRlcl0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTc4NjEtNDU0ODQwODAtYWVhNS0xMWU4LTkyNmMtY2Y2MDdhNDUyNTFjLmpwZylcblxuIyMjIFBvcHVwQW5pbWF0ZWRcblxuIVtyaW5nXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My81MTI5Njc0My02ZWU0YWQwMC0xOWViLTExZTktOTFmNS1jZDgwODZhZDFiNTAuZ2lmKVxuXG5UaGUgYW5pbWF0ZWQgUG9wdXAgZW5hYmxlcyB5b3UgdG8gZWFzaWx5IGRpc3BsYXkgYSBcImxvYWRpbmdcIiBzdHlsZSBhbmltYXRpb24gc3BlY2lmaWVkIHRocm91Z2ggYSBHSUYgZmlsZSB0aGF0IGlzIGVpdGhlciBzdG9yZWQgaW4gYSBmaWxlIG9yIGEgYmFzZTY0IHZhcmlhYmxlLlxuXG5TaG93IGFuaW1hdGlvbiBvbmUgZnJhbWUgYXQgYSB0aW1lLiAgVGhpcyBmdW5jdGlvbiBoYXMgaXRzIG93biBpbnRlcm5hbCBjbG9ja2luZyBtZWFuaW5nIHlvdSBjYW4gY2FsbCBpdCBhdCBhbnkgZnJlcXVlbmN5XG4gYW5kIHRoZSByYXRlIHRoZSBmcmFtZXMgb2YgdmlkZW8gaXMgc2hvd24gcmVtYWlucyBjb25zdGFudC4gIE1heWJlIHlvdXIgZnJhbWVzIHVwZGF0ZSBldmVyeSAzMCBtcyBidXQgeW91clxuIGV2ZW50IGxvb3AgaXMgcnVubmluZyBldmVyeSAxMCBtcy4gIFlvdSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGRlbGF5aW5nLCBqdXN0IGNhbGwgaXQgZXZlcnkgdGltZSB0aHJvdWdoIHRoZVxuIGxvb3AuXG5cbmBgYFxuUG9wdXBBbmltYXRlZChpbWFnZV9zb3VyY2UsXG4gICAgbWVzc2FnZT1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPVRydWUsXG4gICAgZ3JhYl9hbnl3aGVyZT1UcnVlLFxuICAgIGtlZXBfb25fdG9wPVRydWUsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIGFscGhhX2NoYW5uZWw9Tm9uZSxcbiAgICB0aW1lX2JldHdlZW5fZnJhbWVzPTAsXG4gICAgdHJhbnNwYXJlbnRfY29sb3I9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58aW1hZ2Vfc291cmNlfFVuaW9uW3N0ciwgYnl0ZXNdIEVpdGhlciBhIGZpbGVuYW1lIG9yIGEgYmFzZTY0IHN0cmluZy58XG58bWVzc2FnZXwoc3RyKSBBbiBvcHRpb25hbCBtZXNzYWdlIHRvIGJlIHNob3duIHdpdGggdGhlIGFuaW1hdGlvbnxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58dGV4dF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgdGV4dHxcbnxmb250fFVuaW9uW3N0ciwgdHVwbGUpIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoYm9vbCkgSWYgVHJ1ZSB0aGVuIHRoZSB0aXRsZWJhciBhbmQgd2luZG93IGZyYW1lIHdpbGwgbm90IGJlIHNob3dufFxufGdyYWJfYW55d2hlcmV8KGJvb2wpIElmIFRydWUgdGhlbiB5b3UgY2FuIG1vdmUgdGhlIHdpbmRvdyBqdXN0IGNsaWNraW5nIGFueXdoZXJlIG9uIHdpbmRvdywgaG9sZCBhbmQgZHJhZ3xcbnxrZWVwX29uX3RvcHwoYm9vbCkgSWYgVHJ1ZSB0aGVuIFdpbmRvdyB3aWxsIHJlbWFpbiBvbiB0b3Agb2YgYWxsIG90aGVyIHdpbmRvd3MgY3VycmVudGx5IHNob3dubnxcbnxsb2NhdGlvbnwoaW50LCBpbnQpICh4LHkpIGxvY2F0aW9uIG9uIHRoZSBzY3JlZW4gdG8gcGxhY2UgdGhlIHRvcCBsZWZ0IGNvcm5lciBvZiB5b3VyIHdpbmRvdy4gRGVmYXVsdCBpcyB0byBjZW50ZXIgb24gc2NyZWVufFxufGFscGhhX2NoYW5uZWx8KGZsb2F0KSBXaW5kb3cgdHJhbnNwYXJlbmN5IDAgPSBpbnZpc2libGUgMSA9IGNvbXBsZXRlbHkgdmlzaWJsZS4gVmFsdWVzIGJldHdlZW4gYXJlIHNlZSB0aHJvdWdofFxufHRpbWVfYmV0d2Vlbl9mcmFtZXN8KGludCkgQW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGJldHdlZW4gZWFjaCBmcmFtZXxcbnx0cmFuc3BhcmVudF9jb2xvcnwoc3RyKSBUaGlzIGNvbG9yIHdpbGwgYmUgY29tcGxldGVseSBzZWUtdGhyb3VnaCBpbiB5b3VyIHdpbmRvdy4gQ2FuIGV2ZW4gY2xpY2sgdGhyb3VnaHxcblxuKioqVG8gY2xvc2UgYW5pbWF0ZWQgcG9wdXBzKioqLCBjYWxsIFBvcHVwQW5pbWF0ZWQgd2l0aCBgaW1hZ2Vfc291cmNlPU5vbmVgLiAgVGhpcyB3aWxsIGNsb3NlIGFsbCBvZiB0aGUgY3VycmVudGx5IG9wZW4gUG9wdXBBbmltYXRlZCB3aW5kb3dzLlxuXG4jIFByb2dyZXNzIE1ldGVycyFcbldlIGFsbCBoYXZlIGxvb3BzIGluIG91ciBjb2RlLiAgJ0lzbid0IGl0IGpveWZ1bCB3YWl0aW5nLCB3YXRjaGluZyBhIGNvdW50ZXIgc2Nyb2xsaW5nIHBhc3QgaW4gYSB0ZXh0IHdpbmRvdz8gIEhvdyBhYm91dCBvbmUgbGluZSBvZiBjb2RlIHRvIGdldCBhIHByb2dyZXNzIG1ldGVyLCB0aGF0IGNvbnRhaW5zIHN0YXRpc3RpY3MgYWJvdXQgeW91ciBjb2RlP1xuXG5gYGBcbk9uZUxpbmVQcm9ncmVzc01ldGVyKHRpdGxlLFxuXHRcdFx0Y3VycmVudF92YWx1ZSxcblx0XHRcdG1heF92YWx1ZSxcblx0XHRcdGtleSxcblx0XHRcdCphcmdzLFxuXHRcdFx0b3JpZW50YXRpb249Tm9uZSxcblx0XHRcdGJhcl9jb2xvcj1ERUZBVUxUX1BST0dSRVNTX0JBUl9DT0xPUixcblx0XHRcdGJ1dHRvbl9jb2xvcj1Ob25lLFxuXHRcdFx0c2l6ZT1ERUZBVUxUX1BST0dSRVNTX0JBUl9TSVpFLFxuXHRcdFx0Ym9yZGVyX3dpZHRoPURFRkFVTFRfUFJPR1JFU1NfQkFSX0JPUkRFUl9XSURUSCk6XG5gYGBcblxuSGVyZSdzIHRoZSBvbmUtbGluZSBQcm9ncmVzcyBNZXRlciBpbiBhY3Rpb24hXG5cbmBgYHB5dGhvblxuZm9yIGkgaW4gcmFuZ2UoMSwxMDAwMCk6XG5cdHNnLk9uZUxpbmVQcm9ncmVzc01ldGVyKCdNeSBNZXRlcicsIGkrMSwgMTAwMDAsICdrZXknLCdPcHRpb25hbCBtZXNzYWdlJylcbmBgYFxuXG5UaGF0IGxpbmUgb2YgY29kZSByZXN1bHRlZCBpbiB0aGlzIHdpbmRvdyBwb3BwaW5nIHVwIGFuZCB1cGRhdGluZy5cblxuIVtwcmVvZ3Jlc3MgbWV0ZXJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQzNjY3NjI1LWQ0N2RhNzAyLTk3NDYtMTFlOC05MWU2LWU1MTc3ODgzYWJhZS5qcGcpXG5cbkEgbWV0ZXIgQU5EIGZ1biBzdGF0aXN0aWNzIHRvIHdhdGNoIHdoaWxlIHlvdXIgbWFjaGluZSBncmluZHMgYXdheSwgYWxsIGZvciB0aGUgcHJpY2Ugb2YgMSBsaW5lIG9mIGNvZGUuXG5XaXRoIGEgbGl0dGxlIHRyaWNrZXJ5IHlvdSBjYW4gcHJvdmlkZSBhIHdheSB0byBicmVhayBvdXQgb2YgeW91ciBsb29wIHVzaW5nIHRoZSBQcm9ncmVzcyBNZXRlciB3aW5kb3cuICBUaGUgY2FuY2VsIGJ1dHRvbiByZXN1bHRzIGluIGEgYEZhbHNlYCByZXR1cm4gdmFsdWUgZnJvbSBgT25lTGluZVByb2dyZXNzTWV0ZXJgLiAgSXQgbm9ybWFsbHkgcmV0dXJucyBgVHJ1ZWAuXG5cbioqKkJlIHN1cmUgYW5kIGFkZCBvbmUgdG8geW91ciBsb29wIGNvdW50ZXIqKiogc28gdGhhdCB5b3VyIGNvdW50ZXIgZ29lcyBmcm9tIDEgdG8gdGhlIG1heCB2YWx1ZS4gIElmIHlvdSBkbyBub3QgYWRkIG9uZSwgeW91ciBjb3VudGVyIHdpbGwgbmV2ZXIgaGl0IHRoZSBtYXggdmFsdWUuICBJbnN0ZWFkIGl0IHdpbGwgZ28gZnJvbSAwIHRvIG1heC0xLlxuXG4jIERlYnVnIE91dHB1dCAoRWFzeVByaW50ID0gUHJpbnQgPSBlcHJpbnQpXG5cbkFub3RoZXIgY2FsbCBpbiB0aGUgJ0Vhc3knIGZhbWlsaWVzIG9mIEFQSXMgaXMgYEVhc3lQcmludGAuICBBcyBpcyB3aXRoIG90aGVyIGNvbW1vbmx5IHVzZWQgUHlTaW1wbGVHVUkgY2FsbHMsIHRoZXJlIGFyZSBvdGhlciBuYW1lcyBmb3IgdGhlIHNhbWUgY2FsbC4gIFlvdSBjYW4gdXNlIGBQcmludGAgb3IgYGVwcmludGAgaW4gYWRkaXRpb24gdG8gYEVhc3lQcmludGAuICBUaGV5IGFsbCBkbyB0aGUgc2FtZSB0aGluZywgb3V0cHV0IHRvIGEgZGVidWcgd2luZG93LiAgSWYgdGhlIGRlYnVnIHdpbmRvdyBpc24ndCBvcGVuLCB0aGVuIHRoZSBmaXJzdCBjYWxsIHdpbGwgb3BlbiBpdC4gIE5vIG5lZWQgdG8gZG8gYW55dGhpbmcgYnV0IHN0aWNrIGFuICdzZy5QcmludCcgY2FsbCBpbiB5b3VyIGNvZGUuIFlvdSBjYW4gZXZlbiByZXBsYWNlIHlvdXIgJ3ByaW50JyBjYWxscyB3aXRoIGNhbGxzIHRvIEVhc3lQcmludCBieSBzaW1wbHkgc3RpY2tpbmcgdGhlIHN0YXRlbWVudFxuXG5gYGBweXRob25cbnByaW50ID0gc2cuRWFzeVByaW50XG5gYGBcblxuYXQgdGhlIHRvcCBvZiB5b3VyIGNvZGUuXG5cbmBQcmludGAgaXMgb25lIG9mIHRoZSBiZXR0ZXIgb25lcyB0byB1c2UgYXMgaXQncyBlYXN5IHRvIHJlbWVtYmVyLiAgIEl0IGlzIHNpbXBseSBgcHJpbnRgIHdpdGggYSBjYXBpdGFsIFAuIGBzZy5QcmludCgndGhpcyB3aWxsIGdvIHRvIHRoZSBkZWJ1ZyB3aW5kb3cnKWBcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxuZm9yIGkgaW4gcmFuZ2UoMTAwKTpcblx0c2cuUHJpbnQoaSlcbmBgYFxuXG4hW3NuYXAwMTI1XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80MzExNDk3OS1hNjk2MTg5ZS04ZWNmLTExZTgtODNjNy00NzNmY2YwY2NjNjYuanBnKVxuXG5PciBpZiB5b3UgZGlkbid0IHdhbnQgdG8gY2hhbmdlIHlvdXIgY29kZTpcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxucHJpbnQ9c2cuUHJpbnRcbmZvciBpIGluIHJhbmdlKDEwMCk6XG5wcmludChpKVxuYGBgXG5cbkp1c3QgbGlrZSB0aGUgc3RhbmRhcmQgcHJpbnQgY2FsbCwgYEVhc3lQcmludGAgc3VwcG9ydHMgdGhlIGBzZXBgIGFuZCBgZW5kYCBrZXl3b3JkIGFyZ3VtZW50cy4gIE90aGVyIG5hbWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2FsbCBgRWFzeVByaW50YCBpbmNsdWRlIGBQcmludGAsIGBlcHJpbnRgLCAgIElmIHlvdSB3YW50IHRvIGNsb3NlIHRoZSB3aW5kb3csIGNhbGwgdGhlIGZ1bmN0aW9uIGBFYXN5UHJpbnRDbG9zZWAuXG5cbllvdSBjYW4gY2hhbmdlIHRoZSBzaXplIG9mIHRoZSBkZWJ1ZyB3aW5kb3cgdXNpbmcgdGhlIGBTZXRPcHRpb25zYCBjYWxsIHdpdGggdGhlIGBkZWJ1Z193aW5fc2l6ZWAgcGFyYW1ldGVyLlxuXG5UaGVyZSBpcyBhbiBvcHRpb24gdG8gdGVsbCBQeVNpbXBsZUdVSSB0byByZXJvdXRlIGFsbCBvZiB5b3VyIHN0ZG91dCBhbmQgc3RkZXJyIG91dHB1dCB0byB0aGlzIHdpbmRvdy4gIFRvIGRvIHNvIGNhbGwgRWFzeVByaW50IHdpdGggdGhlIHBhcmFtZXRlciBgZG9fbm90X3Jlcm91dGVfc3Rkb3V0YCBzZXQgdG8gYEZhbHNlYC4gIEFmdGVyIGNhbGxpbmcgaXQgb25jZSB3aXRoIHRoaXMgcGFyYW1ldGVyIHNldCB0byBUcnVlLCBhbGwgZnV0dXJlIGNhbGxzIHRvIGEgbm9ybWFsYHByaW50YCB3aWxsIGdvIHRvIHRoZSBkZWJ1ZyB3aW5kb3cuXG5cbklmIHlvdSBjbG9zZSB0aGUgZGVidWcgd2luZG93IGl0IHdpbGwgcmUtb3BlbiB0aGUgbmV4dCB0aW1lIHlvdSBQcmludCB0byBpdC4gIElmIHlvdSB3aXNoIHRvIGNsb3NlIHRoZSB3aW5kb3cgdXNpbmcgeW91ciBjb2RlLCB0aGVuIHlvdSBjYW4gY2FsbCBlaXRoZXIgYEVhc3lQcmludENsb3NlKClgIG9yIGBQcmludENsb3NlKClgXG5cbi0tLVxuIyBDdXN0b20gd2luZG93IEFQSSBDYWxscyAgKFlvdXIgRmlyc3Qgd2luZG93KVxuXG5UaGlzIGlzIHRoZSBGVU4gcGFydCBvZiB0aGUgcHJvZ3JhbW1pbmcgb2YgdGhpcyBHVUkuICBJbiBvcmRlciB0byByZWFsbHkgZ2V0IHRoZSBtb3N0IG91dCBvZiB0aGUgQVBJLCB5b3Ugc2hvdWxkIGJlIHVzaW5nIGFuIElERSB0aGF0IHN1cHBvcnRzIGF1dG8gY29tcGxldGUgb3Igd2lsbCBzaG93IHlvdSB0aGUgZGVmaW5pdGlvbiBvZiB0aGUgZnVuY3Rpb24uICBUaGlzIHdpbGwgbWFrZSBjdXN0b21pemluZyBnbyAgc21vb3RoZXIuXG5cblRoaXMgZmlyc3Qgc2VjdGlvbiBvbiBjdXN0b20gd2luZG93cyBpcyBmb3IgeW91ciB0eXBpY2FsLCBibG9ja2luZywgbm9uLXBlcnNpc3RlbnQgd2luZG93LiAgQnkgdGhpcyBJIG1lYW4sIHdoZW4geW91IFwic2hvd1wiIHRoZSB3aW5kb3csIHRoZSBmdW5jdGlvbiB3aWxsIG5vdCByZXR1cm4gdW50aWwgdGhlIHVzZXIgaGFzIGNsaWNrZWQgYSBidXR0b24gb3IgY2xvc2VkIHRoZSB3aW5kb3cgd2l0aCBhbiBYLlxuXG5Ud28gb3RoZXIgdHlwZXMgb2Ygd2luZG93cyBleGlzdC5cbjEuIFBlcnNpc3RlbnQgd2luZG93IC0gdGhlIGBXaW5kb3cuUmVhZCgpYCBtZXRob2QgcmV0dXJucyBhbmQgdGhlIHdpbmRvdyBjb250aW51ZXMgdG8gYmUgdmlzaWJsZS4gIFRoaXMgaXMgZ29vZCBmb3IgYXBwbGljYXRpb25zIGxpa2UgYSBjaGF0IHdpbmRvdyBvciBhIHRpbWVyIG9yIGFueXRoaW5nIHRoYXQgc3RheXMgYWN0aXZlIG9uIHRoZSBzY3JlZW4gZm9yIGEgd2hpbGUuXG4yLiBBc3luY2hyb25vdXMgd2luZG93IC0gdGhlIHRyaWNraWVzdCBvZiB0aGUgbG90LiBHcmVhdCBjYXJlIG11c3QgYmUgZXhlcmNpc2VkLiAgRXhhbXBsZXMgYXJlIGFuIE1QMyBwbGF5ZXIgb3Igc3RhdHVzIGRhc2hib2FyZC4gIEFzeW5jIHdpbmRvd3MgYXJlIHVwZGF0ZWQgKHJlZnJlc2hlZCkgb24gYSBwZXJpb2RpYyBiYXNpcy4gIFlvdSBjYW4gc3BvdCB0aGVtIGVhc2lseSBhcyB0aGV5IHdpbGwgaGF2ZSBhIGB0aW1lb3V0YCBwYXJhbWV0ZXIgb24gdGhlIGNhbGwgdG8gcmVhZC4gICAgIGBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQodGltZW91dD0xMDApYFxuXG5JdCdzIGJvdGggbm90IGVuam95YWJsZSBub3IgaGVscGZ1bCB0byBpbW1lZGlhdGVseSBqdW1wIGludG8gdHdlYWtpbmcgZWFjaCBhbmQgZXZlcnkgbGl0dGxlIHRoaW5nIGF2YWlsYWJsZSB0byB5b3UuICBNYWtlIHNvbWUgc2ltcGxlIHdpbmRvd3MuICBVc2UgdGhlIENvb2tib29rIGFuZCB0aGUgRGVtbyBQcm9ncmFtcyBhcyBhIHdheSB0byBsZWFybiBhbmQgYXMgYSBcInN0YXJ0aW5nIHBvaW50XCIuXG5cbiMjIFRoZSB3aW5kb3cgRGVzaWduZXJcblxuVGhlIGdvb2QgbmV3cyB0byBuZXdjb21lcnMgdG8gR1VJIHByb2dyYW1taW5nIGlzIHRoYXQgUHlTaW1wbGVHVUkgaGFzIGEgd2luZG93IGRlc2lnbmVyLiAgQmV0dGVyIHlldCwgdGhlIHdpbmRvdyBkZXNpZ25lciByZXF1aXJlcyBubyB0cmFpbmluZywgbm8gZG93bmxvYWRzLCBhbmQgZXZlcnlvbmUga25vd3MgaG93IHRvIHVzZSBpdC5cblxuIVtndWkwXzFdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0MTU5NTk4LWUyMjU3NDAwLWEwODUtMTFlOC05YjAyLTM0M2U3MmNjNzVjMy5KUEcpXG5cbkl0J3MgYSBtYW51YWwgcHJvY2VzcywgYnV0IGlmIHlvdSBmb2xsb3cgdGhlIGluc3RydWN0aW9ucywgaXQgd2lsbCB0YWtlIG9ubHkgYSBtaW51dGUgdG8gZG8gYW5kIHRoZSByZXN1bHQgd2lsbCBiZSBhIG5pY2UgbG9va2luZyBHVUkuICBUaGUgc3RlcHMgeW91J2xsIHRha2UgYXJlOlxuMS4gU2tldGNoIHlvdXIgR1VJIG9uIHBhcGVyXG4yLiBEaXZpZGUgeW91ciBHVUkgdXAgaW50byByb3dzXG4zLiBMYWJlbCBlYWNoIEVsZW1lbnQgd2l0aCB0aGUgRWxlbWVudCBuYW1lXG40LiBXcml0ZSB5b3VyIFB5dGhvbiBjb2RlIHVzaW5nIHRoZSBsYWJlbHMgYXMgcHNldWRvLWNvZGVcblxuTGV0J3MgdGFrZSBhIGNvdXBsZSBvZiBleGFtcGxlcy5cblxuKipFbnRlciBhIG51bWJlcioqLi4uLiBQb3B1bGFyIGJlZ2lubmVyIHByb2dyYW1zIGFyZSBvZnRlbiBiYXNlZCBvbiBhIGdhbWUgb3IgbG9naWMgcHV6emxlIHRoYXQgcmVxdWlyZXMgdGhlIHVzZXIgdG8gZW50ZXIgc29tZXRoaW5nLCBsaWtlIGEgbnVtYmVyLiAgVGhlIFwiaGlnaC1sb3dcIiBhbnN3ZXIgZ2FtZSBjb21lcyB0byBtaW5kIHdoZXJlIHlvdSB0cnkgdG8gZ3Vlc3MgdGhlIG51bWJlciBiYXNlZCBvbiBoaWdoIG9yIGxvdyB0aXBzLlxuXG4qKlN0ZXAgMS0gU2tldGNoIHRoZSBHVUkqKlxuIVtndWkxXzFdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0MTYwMTI3LTZhNTg0OTAwLWEwODctMTFlOC04ZmVjLTA5MDk5YThlMTZmNi5KUEcpXG5cbioqU3RlcCAyIC0gRGl2aWRlIGludG8gcm93cyoqXG5cbiFbZ3VpMl8xXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDE2MDEyOC02YTU4NDkwMC1hMDg3LTExZTgtOTk3My1hZjg2NmZiOTRjNTYuSlBHKVxuXG5TdGVwIDMgLSBMYWJlbCBlbGVtZW50c1xuXG4hW2d1aTZfMV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQxNjAxMTYtNjQ2MjY4MDAtYTA4Ny0xMWU4LThiNTctNjcxYzA0NjFiNTA4LkpQRylcblxuU3RlcCA0IC0gV3JpdGUgdGhlIGNvZGVcblRoZSBjb2RlIHdlJ3JlIHdyaXRpbmcgaXMgdGhlIGxheW91dCBvZiB0aGUgR1VJIGl0c2VsZi4gIFRoaXMgdHV0b3JpYWwgb25seSBmb2N1c2VzIG9uIGdldHRpbmcgdGhlIHdpbmRvdyBjb2RlIHdyaXR0ZW4sIG5vdCB0aGUgc3R1ZmYgdG8gZGlzcGxheSBpdCwgZ2V0IHJlc3VsdHMuXG5cbldlIGhhdmUgb25seSAxIGVsZW1lbnQgb24gdGhlIGZpcnN0IHJvdywgc29tZSB0ZXh0LiAgUm93cyBhcmUgd3JpdHRlbiBhcyBhIFwibGlzdCBvZiBlbGVtZW50c1wiLCBzbyB3ZSdsbCBuZWVkIFsgIF0gdG8gbWFrZSBhIGxpc3QuICBIZXJlJ3MgdGhlIGNvZGUgZm9yIHJvdyAxXG5cbmBgYFxuWyBzZy5UZXh0KCdFbnRlciBhIG51bWJlcicpIF1cbmBgYFxuXG5Sb3cgMiBoYXMgMSBlbGVtZW50cywgYW4gaW5wdXQgZmllbGQuXG5cbmBgYFxuWyBzZy5JbnB1dCgpIF1cbmBgYFxuXG5Sb3cgMyBoYXMgYW4gT0sgYnV0dG9uXG5cbmBgYFxuWyBzZy5PSygpIF1cbmBgYFxuXG5Ob3cgdGhhdCB3ZSd2ZSBnb3QgdGhlIDMgcm93cyBkZWZpbmVkLCB0aGV5IGFyZSBwdXQgaW50byBhIGxpc3QgdGhhdCByZXByZXNlbnRzIHRoZSBlbnRpcmUgd2luZG93LlxuXG5gYGBcbmxheW91dCA9IFsgW3NnLlRleHQoJ0VudGVyIGEgTnVtYmVyJyldLFxuICAgICAgICAgICBbc2cuSW5wdXQoKV0sXG4gICAgICAgICAgIFtzZy5PSygpXSBdXG5gYGBcblxuRmluYWxseSB3ZSBjYW4gcHV0IGl0IGFsbCB0b2dldGhlciBpbnRvIGEgcHJvZ3JhbSB0aGF0IHdpbGwgZGlzcGxheSBvdXIgd2luZG93LlxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbW3NnLlRleHQoJ0VudGVyIGEgTnVtYmVyJyldLFxuICAgICAgICAgIFtzZy5JbnB1dCgpXSxcbiAgICAgICAgICBbc2cuT0soKV0gXVxuXG5ldmVudCwgdmFsdWVzID0gc2cuV2luZG93KCdFbnRlciBhIG51bWJlciBleGFtcGxlJywgbGF5b3V0KS5SZWFkKClcblxuc2cuUG9wdXAoZXZlbnQsIHZhbHVlc1swXSlcbmBgYFxuXG5Zb3VyIGNhbGwgdG8gYFJlYWRgIHdpbGwgcmV0dXJuIGEgZGljdGlvbmFyeSwgYnV0IHdpbGwgXCJsb29rIGxpa2UgYSBsaXN0XCIgaW4gaG93IHlvdSBhY2Nlc3MgaXQuICBUaGUgZmlyc3QgaW5wdXQgZmllbGQgd2lsbCBiZSBlbnRyeSAwLCB0aGUgbmV4dCBvbmUgaXMgMSwgZXRjLiAgTGF0ZXIgeW91J2xsIGxlYXJuIGFib3V0IHRoZSBga2V5YCBwYXJhbWV0ZXIgd2hpY2ggYWxsb3dzIHlvdSB0byB1c2UgeW91ciBvd24gdmFsdWVzIHRvIGlkZW50aWZ5IGVsZW1lbnRzIGluc3RlYWQgb2YgdGhlbSBiZWluZyBudW1iZXJlZCBmb3IgeW91LlxuXG4jIyMgRXhhbXBsZSAyIC0gR2V0IGEgZmlsZW5hbWVcbkxldCdzIHNheSB5b3UndmUgZ290IGEgdXRpbGl0eSB5b3UndmUgd3JpdHRlbiB0aGF0IG9wZXJhdGVzIG9uIHNvbWUgaW5wdXQgZmlsZSBhbmQgeW91J3JlIHJlYWR5IHRvIHVzZSBhIEdVSSB0byBlbnRlciB0aGFuIGZpbGVuYW1lIHJhdGhlciB0aGFuIHRoZSBjb21tYW5kIGxpbmUuICBGb2xsb3cgdGhlIHNhbWUgc3RlcHMgYXMgdGhlIHByZXZpb3VzIGV4YW1wbGUgLSBkcmF3IHlvdXIgd2luZG93IG9uIHBhcGVyLCBicmVhayBpdCB1cCBpbnRvIHJvd3MsIGxhYmVsIHRoZSBlbGVtZW50cy5cblxuIVtndWk0XzFdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0MTYwMTMyLTZhNTg0OTAwLWEwODctMTFlOC04NjJmLTdkNzkxYTY3ZWU1ZC5KUEcpXG4hW2d1aTVfMV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQxNjAxMzMtNmFmMGRmODAtYTA4Ny0xMWU4LTlkZWMtYmI0ZDRjNTkzOTNkLkpQRylcblxuV3JpdGluZyB0aGUgY29kZSBmb3IgdGhpcyBvbmUgaXMganVzdCBhcyBzdHJhaWdodGZvcndhcmQuICBUaGVyZSBpcyBvbmUgdHJpY2t5IHRoaW5nLCB0aGF0IGJyb3dzZSBmb3IgYSBmaWxlIGJ1dHRvbi4gIFRoYW5rZnVsbHkgUHlTaW1wbGVHVUkgdGFrZXMgY2FyZSBvZiBhc3NvY2lhdGluZyBpdCB3aXRoIHRoZSBpbnB1dCBmaWVsZCBuZXh0IHRvIGl0LiAgQXMgYSByZXN1bHQsIHRoZSBjb2RlIGxvb2tzIGFsbW9zdCBleGFjdGx5IGxpa2UgdGhlIHdpbmRvdyBvbiB0aGUgcGFwZXIuXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbmxheW91dCA9IFtbc2cuVGV4dCgnRmlsZW5hbWUnKV0sXG5cdFx0XHRbc2cuSW5wdXQoKSwgc2cuRmlsZUJyb3dzZSgpXSxcblx0XHRcdFtzZy5PSygpLCBzZy5DYW5jZWwoKV0gXVxuXG5ldmVudCwgdmFsdWVzID0gc2cuV2luZG93KCdHZXQgZmlsZW5hbWUgZXhhbXBsZScsIGxheW91dCkuUmVhZCgpXG5cbnNnLlBvcHVwKGV2ZW50LCB2YWx1ZXNbMF0pXG5gYGBcblxuUmVhZCBvbiBmb3IgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIG9uIHRoZSBjYWxscyB0aGF0IHNob3cgdGhlIHdpbmRvdyBhbmQgcmV0dXJuIHlvdXIgcmVzdWx0cy5cblxuIyBDb3B5IHRoZXNlIGRlc2lnbiBwYXR0ZXJucyFcblxuQWxsIG9mIHlvdXIgUHlTaW1wbGVHVUkgcHJvZ3JhbXMgd2lsbCB1dGlsaXplIG9uZSBvZiB0aGVzZSAyIGRlc2lnbiBwYXR0ZXJucyBkZXBlbmRpbmcgb24gdGhlIHR5cGUgb2Ygd2luZG93IHlvdSdyZSBpbXBsZW1lbnRpbmcuXG5cbiMjIFBhdHRlcm4gMSAtIFwiT25lLXNob3QgV2luZG93XCIgLSBSZWFkIGEgd2luZG93IG9uZSB0aW1lIHRoZW4gY2xvc2UgaXRcblxuVGhpcyB3aWxsIGJlIHRoZSBtb3N0IGNvbW1vbiBwYXR0ZXJuIHlvdSdsbCBmb2xsb3cgaWYgeW91IGFyZSBub3QgdXNpbmcgYW4gXCJldmVudCBsb29wXCIgKG5vdCByZWFkaW5nIHRoZSB3aW5kb3cgbXVsdGlwbGUgdGltZXMpLiAgVGhlIHdpbmRvdyBpcyByZWFkIGFuZCBjbG9zZWQuXG5cblRoZSBpbnB1dCBmaWVsZHMgaW4geW91ciB3aW5kb3cgd2lsbCBiZSByZXR1cm5lZCB0byB5b3UgYXMgYSBkaWN0aW9uYXJ5IChzeW50YWN0aWNhbGx5IGl0IGxvb2tzIGp1c3QgbGlrZSBhIGxpc3QgbG9va3VwKVxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbW3NnLlRleHQoJ1NIQS0xIGFuZCBTSEEtMjU2IEhhc2hlcyBmb3IgdGhlIGZpbGUnKV0sXG5cdFx0XHRcdCBbc2cuSW5wdXRUZXh0KCksIHNnLkZpbGVCcm93c2UoKV0sXG5cdFx0XHRcdCBbc2cuU3VibWl0KCksIHNnLkNhbmNlbCgpXV1cblxud2luZG93ID0gc2cuV2luZG93KCdTSEEtMSAmIDI1NiBIYXNoJywgbGF5b3V0KVxuXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxud2luZG93LkNsb3NlKClcblxuc291cmNlX2ZpbGVuYW1lID0gdmFsdWVzWzBdICAgICAjIHRoZSBmaXJzdCBpbnB1dCBlbGVtZW50IGlzIHZhbHVlc1swXVxuYGBgXG5cbiMjIFBhdHRlcm4gMiBBIC0gUGVyc2lzdGVudCB3aW5kb3cgKG11bHRpcGxlIHJlYWRzIHVzaW5nIGFuIGV2ZW50IGxvb3ApXG5cblNvbWUgb2YgdGhlIG1vcmUgYWR2YW5jZWQgcHJvZ3JhbXMgb3BlcmF0ZSB3aXRoIHRoZSB3aW5kb3cgcmVtYWluaW5nIHZpc2libGUgb24gdGhlIHNjcmVlbi4gIElucHV0IHZhbHVlcyBhcmUgY29sbGVjdGVkLCBidXQgcmF0aGVyIHRoYW4gY2xvc2luZyB0aGUgd2luZG93LCBpdCBpcyBrZXB0IHZpc2libGUgYWN0aW5nIGFzIGEgd2F5IHRvIGJvdGggb3V0cHV0IGluZm9ybWF0aW9uIHRvIHRoZSB1c2VyIGFuZCBnYXRoZXIgaW5wdXQgZGF0YS5cblxuVGhpcyBjb2RlIHdpbGwgcHJlc2VudCBhIHdpbmRvdyBhbmQgd2lsbCBwcmludCB2YWx1ZXMgdW50aWwgdGhlIHVzZXIgY2xpY2tzIHRoZSBleGl0IGJ1dHRvbiBvciBjbG9zZXMgd2luZG93IHVzaW5nIGFuIFguXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbmxheW91dCA9IFtbc2cuVGV4dCgnUGVyc2lzdGVudCB3aW5kb3cnKV0sXG5cdFx0ICBbc2cuSW5wdXQoKV0sXG5cdFx0ICBbc2cuQnV0dG9uKCdSZWFkJyksIHNnLkV4aXQoKV1dXG5cbndpbmRvdyA9IHNnLldpbmRvdygnV2luZG93IHRoYXQgc3RheXMgb3BlbicsIGxheW91dClcblxud2hpbGUgVHJ1ZTpcblx0ZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcblx0aWYgZXZlbnQgaXMgTm9uZSBvciBldmVudCA9PSAnRXhpdCc6XG5cdFx0YnJlYWtcblx0cHJpbnQoZXZlbnQsIHZhbHVlcylcblxud2luZG93LkNsb3NlKClcbmBgYFxuXG4jIyBQYXR0ZXJuIDIgQiAtIFBlcnNpc3RlbnQgd2luZG93IChtdWx0aXBsZSByZWFkcyB1c2luZyBhbiBldmVudCBsb29wICsgdXBkYXRlcyBkYXRhIGluIHdpbmRvdylcblxuVGhpcyBpcyBhIHNsaWdodGx5IG1vcmUgY29tcGxleCwgYnV0IG1heWJlIG1vcmUgcmVhbGlzdGljIHZlcnNpb24gdGhhdCByZWFkcyBpbnB1dCBmcm9tIHRoZSB1c2VyIGFuZCBkaXNwbGF5cyB0aGF0IGlucHV0IGFzIHRleHQgaW4gdGhlIHdpbmRvdy4gIFlvdXIgcHJvZ3JhbSBpcyBsaWtlbHkgdG8gYmUgZG9pbmcgYm90aCBvZiB0aG9zZSBhY3Rpdml0aWVzIChpbnB1dCBhbmQgb3V0cHV0KSBzbyB0aGlzIHdpbGwgZ2l2ZSB5b3UgYSBiaWcganVtcC1zdGFydC5cblxuRG8gbm90IHdvcnJ5IHlldCB3aGF0IGFsbCBvZiB0aGVzZSBzdGF0ZW1lbnRzIG1lYW4uICAgSnVzdCBjb3B5IGl0IHNvIHlvdSBjYW4gYmVnaW4gdG8gcGxheSB3aXRoIGl0LCBtYWtlIHNvbWUgY2hhbmdlcy4gIEV4cGVyaW1lbnQgdG8gc2VlIGhvdyB0aGluZyB3b3JrLlxuXG5BIGZpbmFsIG5vdGUuLi4gdGhlIHBhcmFtZXRlciBgZG9fbm90X2NsZWFyYCBpbiB0aGUgaW5wdXQgY2FsbCBkZXRlcm1pbmVzIHRoZSBhY3Rpb24gb2YgdGhlIGlucHV0IGZpZWxkIGFmdGVyIGEgYnV0dG9uIGV2ZW50LiAgSWYgdGhpcyB2YWx1ZSBpcyBUcnVlLCB0aGUgaW5wdXQgdmFsdWUgcmVtYWlucyB2aXNpYmxlIGZvbGxvd2luZyBidXR0b24gY2xpY2tzLiAgSWYgRmFsc2UsIHRoZW4gdGhlIGlucHV0IGZpZWxkIGlzIENMRUFSRUQgb2Ygd2hhdGV2ZXIgd2FzIGlucHV0LiAgSWYgeW91IGFyZSBidWlsZGluZyBhIFwiRm9ybVwiIHR5cGUgb2Ygd2luZG93IHdpdGggZGF0YSBlbnRyeSwgeW91IGxpa2VseSB3YW50IEZhbHNlLiBUaGUgZGVmYXVsdCBpcyB0byBOT1QgY2xlYXIgdGhlIGlucHV0IGVsZW1lbnQgKGBkb19ub3RfY2xlYXI9VHJ1ZWApLlxuXG5UaGlzIGV4YW1wbGUgaW50cm9kdWNlcyB0aGUgY29uY2VwdCBvZiBcImtleXNcIi4gIEtleXMgYXJlIHN1cGVyIGltcG9ydGFudCBpbiBQeVNpbXBsZUdVSSBhcyB0aGV5IGVuYWJsZSB5b3UgdG8gaWRlbnRpZnkgYW5kIHdvcmsgd2l0aCBFbGVtZW50cyB1c2luZyBuYW1lcyB5b3Ugd2FudCB0byB1c2UuICBLZXlzIGNhbiBiZSBBTllUSElORywgZXhjZXB0IGBOb25lYC4gIFRvIGFjY2VzcyBhbiBpbnB1dCBlbGVtZW50J3MgZGF0YSB0aGF0IGlzIHJlYWQgaW4gdGhlIGV4YW1wbGUgYmVsb3csIHlvdSB3aWxsIHVzZSBgdmFsdWVzWydfSU5fJ11gIGluc3RlYWQgb2YgYHZhbHVlc1swXWAgbGlrZSBiZWZvcmUuICBcblxuYGBgcHl0aG9uXG5pbXBvcnQgc3lzXG5pZiBzeXMudmVyc2lvbl9pbmZvWzBdID49IDM6XG5cdGltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuZWxzZTpcblx0aW1wb3J0IFB5U2ltcGxlR1VJMjcgYXMgc2dcblxubGF5b3V0ID0gW1tzZy5UZXh0KCdZb3VyIHR5cGVkIGNoYXJzIGFwcGVhciBoZXJlOicpLCBzZy5UZXh0KCcnLCBrZXk9J19PVVRQVVRfJykgXSxcblx0XHQgIFtzZy5JbnB1dChrZXk9J19JTl8nKV0sXG5cdFx0ICBbc2cuQnV0dG9uKCdTaG93JyksIHNnLkJ1dHRvbignRXhpdCcpXV1cblxud2luZG93ID0gc2cuV2luZG93KCdXaW5kb3cgVGl0bGUnLCBsYXlvdXQpXG5cbndoaWxlIFRydWU6ICAgICAgICAgICAgICAgICAjIEV2ZW50IExvb3BcbiAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbiAgcHJpbnQoZXZlbnQsIHZhbHVlcylcbiAgaWYgZXZlbnQgaXMgTm9uZSBvciBldmVudCA9PSAnRXhpdCc6XG5cdCAgYnJlYWtcbiAgaWYgZXZlbnQgPT0gJ1Nob3cnOlxuXHQgICMgY2hhbmdlIHRoZSBcIm91dHB1dFwiIGVsZW1lbnQgdG8gYmUgdGhlIHZhbHVlIG9mIFwiaW5wdXRcIiBlbGVtZW50XG5cdCAgd2luZG93LkVsZW1lbnQoJ19PVVRQVVRfJykuVXBkYXRlKHZhbHVlc1snX0lOXyddKVxuXG53aW5kb3cuQ2xvc2UoKVxuYGBgXG5cbiMjIyBRdCBEZXNpZ25lclxuXG5UaGVyZSBhY3R1YWxseSBpcyBhIFB5U2ltcGxlR1VJIFdpbmRvdyBEZXNpZ25lciB0aGF0IHVzZXMgUXQncyB3aW5kb3cgZGVzaWduZXIuICBJdCdzIG91dHNpZGUgdGhlIHNjb3BlIG9mIHRoaXMgZG9jdW1lbnQgaG93ZXZlci4gIFlvdSdsbCBmaW5kIHRoZSBwcm9qZWN0IGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9ubmdvZ29sL1B5U2ltcGxlR1VJRGVzaWduZXJcblxuSSBob3BlIHRvIHN0YXJ0IHVzaW5nIGl0IG1vcmUgc29vbi4gIFxuXG4jIyBIb3cgR1VJIFByb2dyYW1taW5nIGluIFB5dGhvbiBTaG91bGQgTG9vaz8gIEF0IGxlYXN0IGZvciBiZWdpbm5lcnMgP1xuXG5XaGlsZSBvbmUgZ29hbCB3YXMgbWFraW5nIGl0IHNpbXBsZSB0byBjcmVhdGUgYSBHVUkgYW5vdGhlciBqdXN0IGFzIGltcG9ydGFudCBnb2FsIHdhcyB0byBkbyBpdCBpbiBhIFB5dGhvbmljIG1hbm5lci4gV2hldGhlciBpdCBhY2hpZXZlZCB0aGVzZSBnb2FscyBpcyBkZWJhdGFibGUsIGJ1dCBpdCB3YXMgYW4gYXR0ZW1wdCBqdXN0IHRoZSBzYW1lLlxuXG5UaGUga2V5IHRvIGN1c3RvbSB3aW5kb3dzIGluIFB5U2ltcGxlR1VJIGlzIHRvIHZpZXcgd2luZG93cyBhcyBST1dTIG9mIEdVSSAgRWxlbWVudHMuICBFYWNoIHJvdyBpcyBzcGVjaWZpZWQgYXMgYSBsaXN0IG9mIHRoZXNlIEVsZW1lbnRzLiAgUHV0IHRoZSByb3dzIHRvZ2V0aGVyIGFuZCB5b3UndmUgZ290IGEgd2luZG93LiAgVGhpcyBtZWFucyB0aGUgR1VJIGlzIGRlZmluZWQgYXMgYSBzZXJpZXMgb2YgTGlzdHMsIGEgUHl0aG9uaWMgd2F5IG9mIGxvb2tpbmcgYXQgdGhpbmdzLlxuXG5MZXQncyBkaXNzZWN0IHRoaXMgbGl0dGxlIHByb2dyYW1cblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxubGF5b3V0ID0gW1tzZy5UZXh0KCdSZW5hbWUgZmlsZXMgb3IgZm9sZGVycycpXSxcblx0XHRcdFtzZy5UZXh0KCdTb3VyY2UgZm9yIEZvbGRlcnMnLCBzaXplPSgxNSwgMSkpLCBzZy5JbnB1dFRleHQoKSwgc2cuRm9sZGVyQnJvd3NlKCldLFxuXHRcdFx0W3NnLlRleHQoJ1NvdXJjZSBmb3IgRmlsZXMgJywgc2l6ZT0oMTUsIDEpKSwgc2cuSW5wdXRUZXh0KCksIHNnLkZvbGRlckJyb3dzZSgpXSxcblx0XHRcdFtzZy5TdWJtaXQoKSwgc2cuQ2FuY2VsKCldXVxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ1JlbmFtZSBGaWxlcyBvciBGb2xkZXJzJywgbGF5b3V0KVxuXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuXG5mb2xkZXJfcGF0aCwgZmlsZV9wYXRoID0gdmFsdWVzWzBdLCB2YWx1ZXNbMV0gICAgICAgIyBnZXQgdGhlIGRhdGEgZnJvbSB0aGUgdmFsdWVzIGRpY3Rpb25hcnlcbnByaW50KGZvbGRlcl9wYXRoLCBmaWxlX3BhdGgpXG5gYGBcblxuIVtzbmFwMDEzMV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDM0MTcwMDctZGY2ZDg0MDgtOTQwNy0xMWU4LTk5ODYtMzBmMDQxNWYwOGE1LmpwZylcblxuTGV0J3MgYWdyZWUgdGhlIHdpbmRvdyBoYXMgNCByb3dzLlxuXG5UaGUgZmlyc3Qgcm93IG9ubHkgaGFzICoqdGV4dCoqIHRoYXQgcmVhZHMgYFJlbmFtZSBmaWxlcyBvciBmb2xkZXJzYFxuXG5UaGUgc2Vjb25kIHJvdyBoYXMgMyBlbGVtZW50cyBpbiBpdC4gIEZpcnN0IHRoZSAqKnRleHQqKiBgU291cmNlIGZvciBGb2xkZXJzYCwgdGhlbiBhbiAqKmlucHV0KiogZmllbGQsIHRoZW4gYSAqKmJyb3dzZSoqIGJ1dHRvbi5cblxuTm93IGxldCdzIGxvb2sgYXQgaG93IHRob3NlIDIgcm93cyBhbmQgdGhlIG90aGVyIHR3byByb3cgZnJvbSBQeXRob24gY29kZTpcblxuYGBgcHl0aG9uXG5sYXlvdXQgPSBbW3NnLlRleHQoJ1JlbmFtZSBmaWxlcyBvciBmb2xkZXJzJyldLFxuXHRcdFx0W3NnLlRleHQoJ1NvdXJjZSBmb3IgRm9sZGVycycsIHNpemU9KDE1LCAxKSksIHNnLklucHV0VGV4dCgpLCBzZy5Gb2xkZXJCcm93c2UoKV0sXG5cdFx0XHRbc2cuVGV4dCgnU291cmNlIGZvciBGaWxlcyAnLCBzaXplPSgxNSwgMSkpLCBzZy5JbnB1dFRleHQoKSwgc2cuRm9sZGVyQnJvd3NlKCldLFxuXHRcdFx0W3NnLlN1Ym1pdCgpLCBzZy5DYW5jZWwoKV1dXG5gYGBcblxuU2VlIGhvdyB0aGUgc291cmNlIGNvZGUgbWlycm9ycyB0aGUgbGF5b3V0PyAgWW91IHNpbXBseSBtYWtlIGxpc3RzIGZvciBlYWNoIHJvdywgdGhlbiBzdWJtaXQgdGhhdCB0YWJsZSB0byBQeVNpbXBsZUdVSSB0byBzaG93IGFuZCBnZXQgdmFsdWVzIGZyb20uXG5cbkFuZCB3aGF0IGFib3V0IHRob3NlIHJldHVybiB2YWx1ZXM/ICBNb3N0IHBlb3BsZSBzaW1wbHkgd2FudCB0byBzaG93IGEgd2luZG93LCBnZXQgdGhlIGlucHV0IHZhbHVlcyBhbmQgZG8gc29tZXRoaW5nIHdpdGggdGhlbS4gIFNvIHdoeSBicmVhayB1cCB0aGUgY29kZSBpbnRvIGJ1dHRvbiBjYWxsYmFja3MsIGV0Yywgd2hlbiBJIHNpbXBseSB3YW50IG15IHdpbmRvdydzIGlucHV0IHZhbHVlcyB0byBiZSBnaXZlbiB0byBtZS5cblxuRm9yIHJldHVybiB2YWx1ZXMgdGhlIHdpbmRvdyBpcyBzY2FubmVkIGZyb20gdG9wIHRvIGJvdHRvbSwgbGVmdCB0byByaWdodC4gIEVhY2ggZmllbGQgdGhhdCdzIGFuIGlucHV0IGZpZWxkIHdpbGwgb2NjdXB5IGEgc3BvdCBpbiB0aGUgcmV0dXJuIHZhbHVlcy5cblxuSW4gb3VyIGV4YW1wbGUgd2luZG93LCB0aGVyZSBhcmUgMiBmaWVsZHMsIHNvIHRoZSByZXR1cm4gdmFsdWVzIGZyb20gdGhpcyB3aW5kb3cgd2lsbCBiZSBhIGRpY3Rpb25hcnkgd2l0aCAyIHZhbHVlcyBpbiBpdC4gIFJlbWVtYmVyLCBpZiB5b3UgZG8gbm90IHNwZWNpZnkgYSBga2V5YCB3aGVuIGNyZWF0aW5nIGFuIGVsZW1lbnQsIG9uZSB3aWxsIGJlIGNyZWF0ZWQgZm9yIHlvdS4gIFRoZXkgYXJlIGludHMgc3RhcnRpbmcgd2l0aCAwLiAgSW4gdGhpcyBleGFtcGxlLCB3ZSBoYXZlIDIgaW5wdXQgZWxlbWVudHMuICBUaGV5IHdpbGwgYmUgYWRkcmVzc2FibGUgYXMgdmFsdWVzWzBdIGFuZCB2YWx1ZXNbMV1cblxuYGBgcHl0aG9uXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuZm9sZGVyX3BhdGgsIGZpbGVfcGF0aCA9IHZhbHVlc1swXSwgdmFsdWVzWzFdXG5gYGBcblxuSW4gb25lIHN0YXRlbWVudCB3ZSBib3RoIHNob3cgdGhlIHdpbmRvdyBhbmQgcmVhZCB0aGUgdXNlcidzIGlucHV0cy4gIEluIHRoZSBuZXh0IGxpbmUgb2YgY29kZSB0aGUgKmRpY3Rpb25hcnkqIG9mIHJldHVybiB2YWx1ZXMgaXMgc3BsaXQgaW50byBpbmRpdmlkdWFsIHZhcmlhYmxlcyBgZm9sZGVyX3BhdGhgIGFuZCBgZmlsZV9wYXRoYC5cblxuSXNuJ3QgdGhpcyB3aGF0IGEgUHl0aG9uIHByb2dyYW1tZXIgbG9va2luZyBmb3IgYSBHVUkgd2FudHM/IFNvbWV0aGluZyBlYXN5IHRvIHdvcmsgd2l0aCB0byBnZXQgdGhlIHZhbHVlcyBhbmQgbW92ZSBvbiB0byB0aGUgcmVzdCBvZiB0aGUgcHJvZ3JhbSwgd2hlcmUgdGhlIHJlYWwgYWN0aW9uIGlzIHRha2luZyBwbGFjZS4gIFdoeSB3cml0ZSBwYWdlcyBvZiBHVUkgY29kZSB3aGVuIHRoZSBzYW1lIGxheW91dCBjYW4gYmUgYWNoaWV2ZWQgd2l0aCBQeVNpbXBsZUdVSSBpbiAzIG9yIDQgbGluZXMgb2YgY29kZS4gIDQgbGluZXMgb3IgNDA/ICBNb3N0IHdvdWxkIGNob29zZSA0LlxuXG4jIyBSZXR1cm4gdmFsdWVzXG5cblRoZXJlIGFyZSAyIHJldHVybiB2YWx1ZXMgZnJvbSBhIGNhbGwgdG8gYFdpbmRvdy5SZWFkKClgLCBhbiBgZXZlbnRgIHRoYXQgY2F1c2VkIHRoZSBgUmVhZGAgdG8gcmV0dXJuIGFuZCBgdmFsdWVzYCBhIGxpc3Qgb3IgZGljdGlvbmFyeSBvZiB2YWx1ZXMuICBJZiB0aGVyZSBhcmUgbm8gZWxlbWVudHMgd2l0aCBrZXlzIGluIHRoZSBsYXlvdXQsIHRoZW4gaXQgd2lsbCBiZSBhIGxpc3QuICBIb3dldmVyLCBzb21lIGVsZW1lbnRzLCBsaWtlIHNvbWUgYnV0dG9ucywgaGF2ZSBhIGtleSBhdXRvbWF0aWNhbGx5IGFkZGVkIHRvIHRoZW0uICAqKkl0J3MgYmVzdCB0byB1c2Uga2V5cyBvbiBhbGwgb2YgeW91ciBpbnB1dCB0eXBlIGVsZW1lbnRzLioqXG5cbiMjIyBUd28gUmV0dXJuIFZhbHVlc1xuXG5BbGwgV2luZG93IFJlYWQgY2FsbHMgcmV0dXJuIDIgdmFsdWVzLiAgQnkgY29udmVudGlvbiBhIHJlYWQgc3RhdGVtZW50IGlzIHdyaXR0ZW46XG5cbmBgYHB5dGhvblxuZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbmBgYFxuXG5Zb3UgZG9uJ3QgSEFWRSB0byB3cml0ZSB5b3VyIHJlYWRzIGluIHRoaXMgd2F5LiBZb3UgY2FuIG5hbWUgeW91ciB2YXJpYWJsZXMgaG93ZXZlciB5b3Ugd2FudC4gIEJ1dCBpZiB5b3Ugd2FudCB0byBjb2RlIHRoZW0gaW4gYSB3YXkgdGhhdCBvdGhlciBwcm9ncmFtbWVycyB1c2luZyBQeVNpbXBsZUdVSSBhcmUgdXNlZCB0bywgdGhlbiB1c2UgdGhpcyBzdGF0ZW1lbnQuXG5cbiMjIEV2ZW50c1xuXG5UaGUgZmlyc3QgcGFyYW1ldGVyIGBldmVudGAgZGVzY3JpYmVzICoqd2h5KiogdGhlIHJlYWQgY29tcGxldGVkLiAgRXZlbnRzIGFyZSBvbmUgb2YgdGhlc2U6XG5cbkZvciBhbGwgV2luZG93czpcblxuKiBCdXR0b24gY2xpY2tcbiogV2luZG93IGNsb3NlZCB1c2luZyBYXG5cbkZvciBXaW5kb3dzIHRoYXQgaGF2ZSBzcGVjaWZpY2FsbHkgZW5hYmxlZCB0aGVzZS4gIFBsZWFzZSBzZWUgdGhlIGFwcHJvcHJpYXRlIHNlY3Rpb24gaW4gdGhpcyBkb2N1bWVudCB0byBsZWFybiBhYm91dCBob3cgdG8gZW5hYmxlIHRoZXNlIGFuZCB3aGF0IHRoZSBldmVudCByZXR1cm4gdmFsdWVzIGFyZS5cblxuKiBLZXlib2FyZCBrZXkgcHJlc3NcbiogTW91c2Ugd2hlZWwgdXAvZG93blxuKiBNZW51IGl0ZW0gc2VsZWN0ZWRcbiogQW4gRWxlbWVudCBDaGFuZ2VkIChzbGlkZXIsIHNwaW5uZXIsIGV0YylcbiogQSBsaXN0IGl0ZW0gd2FzIGNsaWNrZWRcbiogUmV0dXJuIGtleSB3YXMgcHJlc3NlZCBpbiBpbnB1dCBlbGVtZW50XG4qIFRpbWVvdXQgd2FpdGluZyBmb3IgZXZlbnRcbiogVGV4dCB3YXMgY2xpY2tlZFxuKiBDb21ib2JveCBpdGVtIGNob3NlblxuKiBUYWJsZSByb3cgc2VsZWN0ZWRcbiogZXRjXG5cbioqKk1vc3QqKiogb2YgdGhlIHRpbWUgdGhlIGV2ZW50IHdpbGwgYmUgYSBidXR0b24gY2xpY2sgb3IgdGhlIHdpbmRvdyB3YXMgY2xvc2VkLiAgVGhlIG90aGVyIEVsZW1lbnQtc3BlY2lmaWMga2luZHMgb2YgZXZlbnRzIGhhcHBlbiB3aGVuIHlvdSBzZXQgYGVuYWJsZV9ldmVudHM9VHJ1ZWAgd2hlbiB5b3UgY3JlYXRlIHRoZSBFbGVtZW50LlxuXG4jIyMgV2luZG93IGNsb3NlZCBldmVudFxuXG5Bbm90aGVyIGNvbnZlbnRpb24gdG8gZm9sbG93IGlzIHRoZSBjaGVjayBmb3Igd2luZG93cyBiZWluZyBjbG9zZWQgd2l0aCBhbiBYLiAgKlRoaXMgaXMgYW4gY3JpdGljYWxseSBpbXBvcnRhbnQgZXZlbnQgdG8gY2F0Y2gqLiAgSWYgeW91IGRvbid0IGNoZWNrIGZvciB0aGlzIGFuZCB5b3UgYXR0ZW1wdCB0byB1c2UgdGhlIHdpbmRvdywgeW91ciBwcm9ncmFtIHdpbGwgY3Jhc2guICBQbGVhc2UgY2hlY2sgZm9yIGNsb3NlZCB3aW5kb3cgYW5kIGV4aXQgeW91ciBwcm9ncmFtIGdyYWNlZnVsbHkuICBZb3VyIHVzZXJzIHdpbGwgbGlrZSB5b3UgZm9yIGl0LiAgXG5cbkNsb3NlIHlvdXIgd2luZG93cyB3aGVuIHlvdSdyZSBkb25lIHdpdGggdGhlbSBldmVuIHRob3VnaCBleGl0aW5nIHRoZSBwcm9ncmFtIHdpbGwgYWxzbyBjbG9zZSB0aGVtLiAgdGtpbnRlciBjYW4gZ2VuZXJhdGUgYW4gZXJyb3Ivd2FybmluZyBzb21ldGltZXMgaWYgeW91IGRvbid0IGNsb3NlIHRoZSB3aW5kb3cuICBGb3Igb3RoZXIgcG9ydHMsIHN1Y2ggYXMgUHlTaW1wbGVHVUlXZWIsIG5vdCBjbG9zaW5nIHRoZSBXaW5kb3cgd2lsbCBwb3RlbnRpYWxseSBjYXVzZSB5b3VyIHByb2dyYW0gdG8gY29udGludWUgdG8gcnVuIGluIHRoZSBiYWNrZ3JvdW5kLlxuXG5UbyBjaGVjayBmb3IgYSBjbG9zZWQgd2luZG93IHVzZSB0aGlzIGxpbmUgb2YgY29kZTpcblxuYGBgcHl0aG9uXG5pZiBldmVudCBpcyBOb25lOlxuYGBgXG5cblB1dHRpbmcgaXQgYWxsIHRvZ2V0aGVyIHdlIGVuZCB1cCB3aXRoIGFuIFwiZXZlbnQgbG9vcFwiIHRoYXQgbG9va3Mgc29tZXRoaW5nIGxpa2UgdGhpczpcblxuYGBgcHl0aG9uXG53aGlsZSBUcnVlOlxuXHRldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuXHRpZiBldmVudCBpcyBOb25lOlxuXHRcdGJyZWFrXG53aW5kb3cuQ2xvc2UoKVxuYGBgXG5cbllvdSB3aWxsIHZlcnkgb2Z0ZW4gc2VlIHRoZSBleGFtcGxlcyBhbmQgZGVtbyBwcm9ncmFtcyB3cml0ZSB0aGlzIGNoZWNrIGFzOlxuXG5gYGBweXRob25cblx0ZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcblx0aWYgZXZlbnQgaW4gKE5vbmUsICdFeGl0Jyk6XG5cdFx0YnJlYWtcbmBgYFxuXG5UaGlzIGlmIHN0YXRlbWVudCBpcyB0aGUgc2FtZSBhczpcbmBgYHB5dGhvblxuXHRpZiBldmVudCBpcyBOb25lIG9yIGV2ZW50ID09ICdFeGl0Jzpcblx0XHRicmVha1xuYGBgXG5cbkluc3RlYWQgb2YgYCdFeGl0J2AgdXNlIHRoZSBuYW1lL2tleSBvZiB0aGUgYnV0dG9uIHlvdSB3YW50IHRvIGV4aXQgdGhlIHdpbmRvdyAoQ2FuY2VsLCBRdWl0LCBldGMpXG5cbiMjIyBCdXR0b24gQ2xpY2sgRXZlbnRzXG5cbkJ5IGRlZmF1bHQgYnV0dG9ucyB3aWxsIGFsd2F5cyByZXR1cm4gYSBjbGljayBldmVudCwgb3IgaW4gdGhlIGNhc2Ugb2YgcmVhbHRpbWUgYnV0dG9ucywgYSBidXR0b24gZG93biBldmVudC4gIFlvdSBkb24ndCBoYXZlIHRvIGRvIGFueXRoaW5nIHRvIGVuYWJsZSBidXR0b24gY2xpY2tzLiAgVG8gZGlzYWJsZSB0aGUgZXZlbnRzLCBkaXNhYmxlIHRoZSBidXR0b24gdXNpbmcgaXRzIFVwZGF0ZSBtZXRob2QuXG5cbllvdSBjYW4gZW5hYmxlIGFuIGFkZGl0aW9uYWwgXCJCdXR0b24gTW9kaWZpZWRcIiBldmVudCBieSBzZXR0aW5nIGBlbmFibGVfZXZlbnRzPVRydWVgIGluIHRoZSBCdXR0b24gY2FsbC4gIFRoZXNlIGV2ZW50cyBhcmUgdHJpZ2dlcmVkIHdoZW4gc29tZXRoaW5nICd3cml0ZXMnIHRvIGEgYnV0dG9uLCAqKip1c3VhbGx5KioqIGl0J3MgYmVjYXVzZSB0aGUgYnV0dG9uIGlzIGxpc3RlZCBhcyBhIFwidGFyZ2V0XCIgaW4gYW5vdGhlciBidXR0b24uXG5cblRoZSBidXR0b24gdmFsdWUgZnJvbSBhIFJlYWQgY2FsbCB3aWxsIGJlIG9uZSBvZiAyIHZhbHVlczpcbjEuIFRoZSBCdXR0b24ncyB0ZXh0ICAgICAtIERlZmF1bHRcbjIuIFRoZSBCdXR0b24ncyBrZXkgICAgICAtIElmIGEga2V5IGlzIHNwZWNpZmllZFxuXG5JZiBhIGJ1dHRvbiBoYXMgYSBrZXkgc2V0IHdoZW4gaXQgd2FzIGNyZWF0ZWQsIHRoZW4gdGhhdCBrZXkgd2lsbCBiZSByZXR1cm5lZCwgcmVnYXJkbGVzcyBvZiB3aGF0IHRleHQgaXMgc2hvd24gb24gdGhlIGJ1dHRvbi4gIElmIG5vIGtleSBpcyBzZXQsIHRoZW4gdGhlIGJ1dHRvbiB0ZXh0IGlzIHJldHVybmVkLiAgSWYgbm8gYnV0dG9uIHdhcyBjbGlja2VkLCBidXQgdGhlIHdpbmRvdyByZXR1cm5lZCBhbnl3YXksIHRoZSBldmVudCB2YWx1ZSBpcyB0aGUga2V5IHRoYXQgY2F1c2VkIHRoZSBldmVudCB0byBiZSBnZW5lcmF0ZWQuICBGb3IgZXhhbXBsZSwgaWYgYGVuYWJsZV9ldmVudHNgIGlzIHNldCBvbiBhbiBgSW5wdXRgIEVsZW1lbnQgYW5kIHNvbWVvbmUgdHlwZXMgYSBjaGFyYWN0ZXIgaW50byB0aGF0IGBJbnB1dGAgYm94LCB0aGVuIHRoZSBldmVudCB3aWxsIGJlIHRoZSBrZXkgb2YgdGhlIGlucHV0IGJveC5cblxuIyMjICoqTm9uZSBpcyByZXR1cm5lZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgWCB0byBjbG9zZSBhIHdpbmRvdy4qKlxuXG5JZiB5b3VyIHdpbmRvdyBoYXMgYW4gZXZlbnQgbG9vcCB3aGVyZSBpdCBpcyByZWFkIG92ZXIgYW5kIG92ZXIsIHJlbWVtYmVyIHRvIGdpdmUgeW91ciB1c2VyIGFuIFwib3V0XCIuICBZb3Ugc2hvdWxkICoqKmFsd2F5cyBjaGVjayBmb3IgYSBOb25lIHZhbHVlKioqIGFuZCBpdCdzIGEgZ29vZCBwcmFjdGljZSB0byBwcm92aWRlIGFuIEV4aXQgYnV0dG9uIG9mIHNvbWUga2luZC4gVGh1cyBkZXNpZ24gcGF0dGVybnMgb2Z0ZW4gcmVzZW1ibGUgdGhpcyBFdmVudCBMb29wOlxuXG5gYGBweXRob25cbndoaWxlIFRydWU6XG5cdGV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCgpXG5cdGlmIGV2ZW50IGlzIE5vbmUgb3IgZXZlbnQgPT0gJ1F1aXQnOlxuXHRcdGJyZWFrXG5gYGBcblxuQWN0dWFsbHksIHRoZSBtb3JlIFwiUHl0aG9uaWMgdmVyc2lvblwiIGlzIHVzZWQgaW4gbW9zdCBEZW1vIFByb2dyYW1zIGFuZCBleGFtcGxlcy4gICBUaGV5IGRvICAqKmV4YWN0bHkqKiB0aGUgc2FtZSB0aGluZy5cblxuYGBgcHl0aG9uXG53aGlsZSBUcnVlOlxuXHRldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuXHRpZiBldmVudCBpbiAoTm9uZSwgJ1F1aXQnKTpcblx0XHRicmVha1xuYGBgXG5cbiMjIyBFbGVtZW50IEV2ZW50c1xuXG5Tb21lIGVsZW1lbnRzIGFyZSBjYXBhYmxlIG9mIGdlbmVyYXRpbmcgZXZlbnRzIHdoZW4gc29tZXRoaW5nIGhhcHBlbnMgdG8gdGhlbS4gIEZvciBleGFtcGxlLCB3aGVuIGEgc2xpZGVyIGlzIG1vdmVkLCBvciBsaXN0IGl0ZW0gY2xpY2tlZCBvbiBvciB0YWJsZSByb3cgY2xpY2tlZCBvbi4gIFRoZXNlIGV2ZW50cyBhcmUgbm90IGVuYWJsZWQgYnkgZGVmYXVsdC4gIFRvIGVuYWJsZSBldmVudHMgZm9yIGFuIEVsZW1lbnQsIHNldCB0aGUgcGFyYW1ldGVyIGBlbmFibGVfZXZlbnRzPVRydWVgLiAgVGhpcyBpcyB0aGUgc2FtZSBhcyB0aGUgb2xkZXIgYGNsaWNrX3N1Ym1pdHNgIHBhcmFtZXRlci4gIFlvdSB3aWxsIGZpbmQgdGhlIGBjbGlja19zdWJtaXRzYCBwYXJhbWV0ZXIgc3RpbGwgaW4gdGhlIGZ1bmN0aW9uIGRlZmluaXRpb24uICBZb3UgY2FuIGNvbnRpbnVlIHRvIHVzZSBpdC4gVGhleSBhcmUgdGhlIHNhbWUgc2V0dGluZy4gIEFuICdvcicgb2YgdGhlIHR3byB2YWx1ZXMgaXMgdXNlZC4gIEluIHRoZSBmdXR1cmUsIGNsaWNrX3N1Ym1pdHMgd2lsbCBiZSByZW1vdmVkIHNvIHBsZWFzZSBtaWdyYXRlIHlvdXIgY29kZSB0byB1c2luZyBgZW5hYmxlX2V2ZW50c2AuXG5cbnxOYW1lfGV2ZW50c3xcbnwgLS0tICB8IC0tLSB8XG58IElucHV0VGV4dCB8IGFueSBjaGFuZ2UgfFxufCBDb21ibyB8IGl0ZW0gY2hvc2VuIHxcbnwgT3B0aW9uIG1lbnUgfCBpdGVtIGNob3NlbiB8XG58IExpc3Rib3ggfCBzZWxlY3Rpb24gY2hhbmdlZCB8XG58IFJhZGlvIHwgc2VsZWN0aW9uIGNoYW5nZWQgfFxufCBDaGVja2JveCB8IHNlbGVjdGlvbiBjaGFuZ2VkIHxcbnwgU3Bpbm5lciB8IG5ldyBpdGVtIHNlbGVjdGVkIHxcbnwgTXVsdGlsaW5lIHwgYW55IGNoYW5nZSB8XG58IFRleHQgfCBjbGlja2VkIHxcbnwgU3RhdHVzIEJhciB8IGNsaWNrZWQgfFxufCBHcmFwaCB8IGNsaWNrZWQgfFxufCBUYWJHcm91cCB8IHRhYiBjbGlja2VkIHxcbnwgU2xpZGVyIHwgc2xpZGVyIG1vdmVkIHxcbnwgVGFibGUgfCByb3cgc2VsZWN0ZWQgfFxufCBUcmVlIHwgbm9kZSBzZWxlY3RlZCB8XG58IEJ1dHRvbk1lbnUgfCBtZW51IGl0ZW0gY2hvc2VuIHxcbnwgUmlnaHQgY2xpY2sgbWVudSB8IG1lbnUgaXRlbSBjaG9zZW4gfFxuXG4jIyMgT3RoZXIgRXZlbnRzXG5cbiMjIyMgTWVudWJhciBtZW51IGl0ZW0gY2hvc2VuIGZvciBNZW51QmFyIG1lbnVzIGFuZCBCdXR0b25NZW51IG1lbnVzXG5cbllvdSB3aWxsIHJlY2VpdmUgdGhlIGtleSBmb3IgdGhlIE1lbnVCYXIgYW5kIEJ1dHRvbk1lbnUuICBVc2UgdGhhdCBrZXkgdG8gcmVhZCB0aGUgdmFsdWUgaW4gdGhlIHJldHVybiB2YWx1ZXMgZGljdGlvbmFyeS4gIFRoZSB2YWx1ZSBzaG93biB3aWxsIGJlIHRoZSBmdWxsIHRleHQgcGx1cyBrZXkgZm9yIHRoZSBtZW51IGl0ZW0gY2hvc2VuLiAgUmVtZW1iZXIgdGhhdCB5b3UgY2FuIHB1dCBrZXlzIG9udG8gbWVudSBpdGVtcy4gIFlvdSB3aWxsIGdldCB0aGUgdGV4dCBhbmQgdGhlIGtleSB0b2dldGhlciBhcyB5b3UgZGVmaW5lZCBpdCBpbiB0aGUgbWVudVxuZGVmaW5pdGlvbi5cblxuIyMjIyBSaWdodCBDbGljayBtZW51IGl0ZW0gY2hvc2VuXG5cblVubGlrZSBtZW51IGJhciBhbmQgYnV0dG9uIG1lbnVzLCB5b3Ugd2lsbCBkaXJlY3RseSByZWNlaXZlIHRoZSBtZW51IGl0ZW0gdGV4dCBhbmQgaXRzIGtleSB2YWx1ZS4gIFlvdSB3aWxsIG5vdCBkbyBhIGRpY3Rpb25hcnkgbG9va3VwIHRvIGdldCB0aGUgdmFsdWUuICBJdCBpcyB0aGUgZXZlbnQgY29kZSByZXR1cm5lZCBmcm9tIFdpbmRvd1JlYWQoKS5cblxuIyMjIyBXaW5kb3dzIC0ga2V5Ym9hcmQsIG1vdXNlIHNjcm9sbCB3aGVlbFxuXG5XaW5kb3dzIGFyZSBjYXBhYmxlIG9mIHJldHVybmluZyBrZXlib2FyZCBldmVudHMuICBUaGVzZSBhcmUgcmV0dXJuZWQgYXMgZWl0aGVyIGEgc2luZ2xlIGNoYXJhY3RlciBvciBhIHN0cmluZyBpZiBpdCdzIGEgc3BlY2lhbCBrZXkuICBFeHBlcmltZW50IGlzIGFsbCBJIGNhbiBzYXkuIFRoZSBtb3VzZSBzY3JvbGwgd2hlZWwgZXZlbnRzIGFyZSBhbHNvIHN0cmluZ3MuICBQdXQgYSBwcmludCBpbiB5b3VyIGNvZGUgdG8gc2VlIHdoYXQncyByZXR1cm5lZC5cblxuIyMjIyBUaW1lb3V0c1xuXG5JZiB5b3Ugc2V0IGEgdGltZW91dCBwYXJhbWV0ZXIgaW4geW91ciByZWFkLCB0aGVuIHRoZSBzeXN0ZW0gVElNRU9VVF9LRVkgd2lsbCBiZSByZXR1cm5lZC4gIElmIHlvdSBzcGVjaWZpZWQgeW91ciBvd24gdGltZW91dCBrZXkgaW4gdGhlIFJlYWQgY2FsbCB0aGVuIHRoYXQgdmFsdWUgd2lsbCBiZSB3aGF0J3MgcmV0dXJuZWQgaW5zdGVhZC5cblxuIyMjIFRoZSBgdmFsdWVzYCBWYXJpYWJsZSAtIFJldHVybiB2YWx1ZXMgYXMgYSBsaXN0XG5cblRoZSBzZWNvbmQgcGFyYW1ldGVyIGZyb20gYSBSZWFkIGNhbGwgaXMgZWl0aGVyIGEgbGlzdCBvciBhIGRpY3Rpb25hcnkgb2YgdGhlIGlucHV0IGZpZWxkcyBvbiB0aGUgV2luZG93LlxuXG5CeSBkZWZhdWx0IHJldHVybiB2YWx1ZXMgYXJlIGEgbGlzdCBvZiB2YWx1ZXMsIG9uZSBlbnRyeSBmb3IgZWFjaCBpbnB1dCBmaWVsZCwgYnV0IGZvciBhbGwgYnV0IHRoZSBzaW1wbGVzdCBvZiB3aW5kb3dzIHRoZSByZXR1cm4gdmFsdWVzIHdpbGwgYmUgYSBkaWN0aW9uYXJ5LiAgVGhpcyBpcyBiZWNhdXNlIHlvdSBhcmUgbGlrZWx5IHRvIHVzZSBhICdrZXknIGluIHlvdXIgbGF5b3V0LiAgV2hlbiB5b3UgZG8sIGl0IGZvcmNlcyB0aGUgcmV0dXJuIHZhbHVlcyB0byBiZSBhIGRpY3Rpb25hcnkuXG5cbkVhY2ggb2YgdGhlIEVsZW1lbnRzIHRoYXQgYXJlIElucHV0IEVsZW1lbnRzIHdpbGwgaGF2ZSBhIHZhbHVlIGluIHRoZSBsaXN0IG9mIHJldHVybiB2YWx1ZXMuICBJZiB5b3Uga25vdyBmb3Igc3VyZSB0aGF0IHRoZSB2YWx1ZXMgd2lsbCBiZSByZXR1cm5lZCBhcyBhIGxpc3QsIHRoZW4geW91IGNvdWxkIGdldCBjbGV2ZXIgYW5kIHVucGFjayBkaXJlY3RseSBpbnRvIHZhcmlhYmxlcy5cblxuZXZlbnQsIChmaWxlbmFtZSwgZm9sZGVyMSwgZm9sZGVyMiwgc2hvdWxkX292ZXJ3cml0ZSkgPSBzZy5XaW5kb3coJ015IHRpdGxlJywgd2luZG93X3Jvd3MpLlJlYWQoKVxuXG5PciwgbW9yZSBjb21tb25seSwgeW91IGNhbiB1bnBhY2sgdGhlIHJldHVybiByZXN1bHRzIHNlcGFyYXRlbHkuICBUaGlzIGlzIHRoZSBwcmVmZXJyZWQgbWV0aG9kIGJlY2F1c2UgaXQgd29ya3MgZm9yICoqYm90aCoqIGxpc3QgYW5kIGRpY3Rpb25hcnkgcmV0dXJuIHZhbHVlcy5cblxuYGBgcHl0aG9uXG5ldmVudCwgdmFsdWVzID0gc2cuV2luZG93KCdNeSB0aXRsZScsIHdpbmRvd19yb3dzKS5SZWFkKClcbmV2ZW50LCB2YWx1ZV9saXN0ID0gd2luZG93LlJlYWQoKVxudmFsdWUxID0gdmFsdWVfbGlzdFswXVxudmFsdWUyID0gdmFsdWVfbGlzdFsxXVxuXHQgLi4uXG5gYGBcblxuSG93ZXZlciwgdGhpcyBtZXRob2QgaXNuJ3QgZ29vZCB3aGVuIHlvdSBoYXZlIGEgbG90IG9mIGlucHV0IGZpZWxkcy4gIElmIHlvdSBpbnNlcnQgYSBuZXcgZWxlbWVudCBpbnRvIHlvdXIgd2luZG93IHRoZW4geW91IHdpbGwgaGF2ZSB0byBzaHVmZmxlIHlvdXIgdW5wYWNrcyBkb3duLCBtb2RpZnlpbmcgZWFjaCBvZiB0aGUgc3RhdGVtZW50cyB0byByZWZlcmVuY2UgYHZhbHVlX2xpc3RbeF1gLlxuXG5UaGUgbW9yZSBjb21tb24gbWV0aG9kIGlzIHRvIHJlcXVlc3QgeW91ciB2YWx1ZXMgYmUgcmV0dXJuZWQgYXMgYSBkaWN0aW9uYXJ5IGJ5IHBsYWNpbmcga2V5cyBvbiB0aGUgXCJpbXBvcnRhbnRcIiBlbGVtZW50cyAodGhvc2UgdGhhdCB5b3Ugd2lzaCB0byBnZXQgdmFsdWVzIGZyb20gYW5kIHdhbnQgdG8gaW50ZXJhY3Qgd2l0aClcblxuIyMjIGB2YWx1ZXNgIFZhcmlhYmxlIC0gUmV0dXJuIHZhbHVlcyBhcyBhIGRpY3Rpb25hcnlcblxuRm9yIHRob3NlIG9mIHlvdSB0aGF0IGhhdmUgbm90IGVuY291bnRlcmVkIGEgUHl0aG9uIGRpY3Rpb25hcnksIGRvbid0IGZyZWFrIG91dCEgIEp1c3QgY29weSBhbmQgcGFzdGUgdGhlIHNhbXBsZSBjb2RlIGFuZCBtb2RpZnkgaXQuIEZvbGxvdyB0aGlzIGRlc2lnbiBwYXR0ZXJuIGFuZCB5b3UnbGwgYmUgZmluZS4gIEFuZCB5b3UgbWlnaHQgbGVhcm4gc29tZXRoaW5nIGFsb25nIHRoZSB3YXkuXG5cbkZvciB3aW5kb3dzIGxvbmdlciB0aGFuIDMgb3IgNCBmaWVsZHMgeW91IHdpbGwgd2FudCB0byB1c2UgYSBkaWN0aW9uYXJ5IHRvIGhlbHAgeW91IG9yZ2FuaXplIHlvdXIgcmV0dXJuIHZhbHVlcy4gSW4gYWxtb3N0IGFsbCAoaWYgbm90IGFsbCkgb2YgdGhlIGRlbW8gcHJvZ3JhbXMgeW91J2xsIGZpbmQgdGhlIHJldHVybiB2YWx1ZXMgYmVpbmcgcGFzc2VkIGFzIGEgZGljdGlvbmFyeS4gIEl0IGlzIG5vdCBhIGRpZmZpY3VsdCBjb25jZXB0IHRvIGdyYXNwLCB0aGUgc3ludGF4IGlzIGVhc3kgdG8gdW5kZXJzdGFuZCwgYW5kIGl0IG1ha2VzIGZvciB2ZXJ5IHJlYWRhYmxlIGNvZGUuXG5cblRoZSBtb3N0IGNvbW1vbiB3aW5kb3cgcmVhZCBzdGF0ZW1lbnQgeW91J2xsIGVuY291bnRlciBsb29rcyBzb21ldGhpbmcgbGlrZSB0aGlzOlxuXG5gd2luZG93ID0gc2cuV2luZG93KFwiTXkgdGl0bGVcIiwgbGF5b3V0KS5SZWFkKClgXG5cblRvIHVzZSBhIGRpY3Rpb25hcnksIHlvdSB3aWxsIG5lZWQgdG86XG4qIE1hcmsgZWFjaCBpbnB1dCBlbGVtZW50IHlvdSB3aXNoIHRvIGJlIGluIHRoZSBkaWN0aW9uYXJ5IHdpdGggdGhlIGtleXdvcmQgYGtleWAuXG5cbklmICoqYW55KiogZWxlbWVudCBpbiB0aGUgd2luZG93IGhhcyBhIGBrZXlgLCB0aGVuICoqYWxsKiogb2YgdGhlIHJldHVybiB2YWx1ZXMgYXJlIHJldHVybmVkIHZpYSBhIGRpY3Rpb25hcnkuICBJZiBzb21lIGVsZW1lbnRzIGRvIG5vdCBoYXZlIGEga2V5LCB0aGVuIHRoZXkgYXJlIG51bWJlcmVkIHN0YXJ0aW5nIGF0IHplcm8uXG5cbkxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgZmlyc3QgZGljdGlvbmFyeS1iYXNlZCB3aW5kb3cuXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbmxheW91dCA9IFtcblx0XHRcdFtzZy5UZXh0KCdQbGVhc2UgZW50ZXIgeW91ciBOYW1lLCBBZGRyZXNzLCBQaG9uZScpXSxcblx0XHRcdFtzZy5UZXh0KCdOYW1lJywgc2l6ZT0oMTUsIDEpKSwgc2cuSW5wdXRUZXh0KCcxJywga2V5PSdfTkFNRV8nKV0sXG5cdFx0XHRbc2cuVGV4dCgnQWRkcmVzcycsIHNpemU9KDE1LCAxKSksIHNnLklucHV0VGV4dCgnMicsIGtleT0nX0FERFJFU1NfJyldLFxuXHRcdFx0W3NnLlRleHQoJ1Bob25lJywgc2l6ZT0oMTUsIDEpKSwgc2cuSW5wdXRUZXh0KCczJywga2V5PSdfUEhPTkVfJyldLFxuXHRcdFx0W3NnLlN1Ym1pdCgpLCBzZy5DYW5jZWwoKV1cblx0XHRcdF1cblxud2luZG93ID0gc2cuV2luZG93KCdTaW1wbGUgZGF0YSBlbnRyeSB3aW5kb3cnLCBsYXlvdXQpXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxud2luZG93LkNsb3NlKClcblxuc2cuUG9wdXAoZXZlbnQsIHZhbHVlcywgdmFsdWVzWydfTkFNRV8nXSwgdmFsdWVzWydfQUREUkVTU18nXSwgdmFsdWVzWydfUEhPTkVfJ10pXG5gYGBcblxuVG8gZ2V0IHRoZSB2YWx1ZSBvZiBhbiBpbnB1dCBmaWVsZCwgeW91IHVzZSB3aGF0ZXZlciB2YWx1ZSB1c2VkIGFzIHRoZSBga2V5YCB2YWx1ZSBhcyB0aGUgaW5kZXggdmFsdWUuICBUaHVzIHRvIGdldCB0aGUgdmFsdWUgb2YgdGhlIG5hbWUgZmllbGQsIGl0IGlzIHdyaXR0ZW4gYXNcblxuXHR2YWx1ZXNbJ19OQU1FXyddXG5cblRoaW5rIG9mIHRoZSB2YXJpYWJsZSB2YWx1ZXMgaW4gdGhlIHNhbWUgd2F5IGFzIHlvdSB3b3VsZCBhIGxpc3QsIGhvd2V2ZXIsIGluc3RlYWQgb2YgdXNpbmcgMCwxLDIsIHRvIHJlZmVyZW5jZSBlYWNoIGl0ZW0gaW4gdGhlIGxpc3QsIHVzZSB0aGUgdmFsdWVzIG9mIHRoZSBrZXkuICBUaGUgTmFtZSBmaWVsZCBpbiB0aGUgd2luZG93IGFib3ZlIGlzIHJlZmVyZW5jZWQgYnkgYHZhbHVlc1snX05BTUVfJ11gLlxuXG5Zb3Ugd2lsbCBmaW5kIHRoZSBrZXkgZmllbGQgdXNlZCBxdWl0ZSBoZWF2aWx5IGluIG1vc3QgUHlTaW1wbGVHVUkgd2luZG93cyB1bmxlc3MgdGhlIHdpbmRvdyBpcyB2ZXJ5IHNpbXBsZS5cblxuT25lIGNvbnZlbnRpb24geW91J2xsIHNlZSBpbiBtYW55IG9mIHRoZSBkZW1vIHByb2dyYW1zIGlzIGtleXMgYmVpbmcgbmFtZWQgaW4gYWxsIGNhcHMgd2l0aCBhbiB1bmRlcnNjb3JlcyBhdCB0aGUgYmVnaW5uaW5nIGFuZCB0aGUgZW5kLiAgWW91IGRvbid0IEhBVkUgdG8gZG8gdGhpcy4uLiB5b3VyIGtleSB2YWx1ZSBtYXkgbG9vayBsaWtlIHRoaXM6XG5ga2V5ID0gJ19OQU1FX18nYFxuXG5UaGUgcmVhc29uIGZvciB0aGlzIG5hbWluZyBjb252ZW50aW9uIGlzIHRoYXQgd2hlbiB5b3UgYXJlIHNjYW5uaW5nIHRoZSBjb2RlLCB0aGVzZSBrZXkgdmFsdWVzIGp1bXAgb3V0IGF0IHlvdS4gICBZb3UgaW5zdGFudGx5IGtub3cgaXQncyBhIGtleS4gIFRyeSBzY2FubmluZyB0aGUgY29kZSBhYm92ZSBhbmQgc2VlIGlmIHRob3NlIGtleXMgcG9wIG91dC5cbmBrZXkgPSAnX05BTUVfXydgXG5cbiMjIFRoZSBFdmVudCBMb29wIC8gQ2FsbGJhY2sgRnVuY3Rpb25zXG5cbkFsbCBHVUlzIGhhdmUgb25lIHRoaW5nIGluIGNvbW1vbiwgYW4gXCJldmVudCBsb29wXCIuICBVc3VhbGx5IHRoZSBHVUkgZnJhbWV3b3JrIHJ1bnMgdGhlIGV2ZW50IGxvb3AgZm9yIHlvdSwgYnV0IHNvbWV0aW1lcyB5b3Ugd2FudCBncmVhdGVyIGNvbnRyb2wgYW5kIHdpbGwgcnVuIHlvdXIgb3duIGV2ZW50IGxvb3AuICBZb3Ugb2Z0ZW4gaGVhciB0aGUgdGVybSBldmVudCBsb29wIHdoZW4gZGlzY3Vzc2luZyBlbWJlZGRlZCBzeXN0ZW1zIG9yIG9uIGEgUmFzcGJlcnJ5IFBpLlxuXG5XaXRoIFB5U2ltcGxlR1VJIGlmIHlvdXIgd2luZG93IHdpbGwgcmVtYWluIG9wZW4gZm9sbG93aW5nIGJ1dHRvbiBjbGlja3MsIHRoZW4geW91ciBjb2RlIHdpbGwgaGF2ZSBhbiBldmVudCBsb29wLiBJZiB5b3VyIHByb2dyYW0gc2hvd3MgYSBzaW5nbGUgXCJvbmUtc2hvdFwiICB3aW5kb3csIGNvbGxlY3RzIHRoZSBkYXRhIGFuZCB0aGVuIGhhcyBubyBvdGhlciBHVUkgaW50ZXJhY3Rpb24sIHRoZW4geW91IGRvbid0IG5lZWQgYW4gZXZlbnQgbG9vcC5cblxuVGhlcmUncyBub3RoaW5nIG15c3RlcmlvdXMgYWJvdXQgZXZlbnQgbG9vcHMuLi4gdGhleSBhcmUgbG9vcHMgd2hlcmUgeW91IHRha2UgY2FyZSBvZi4uLi4gd2FpdCBmb3IgaXQuLi4uLiAqZXZlbnRzKi4gIEV2ZW50cyBhcmUgdGhpbmdzIGxpa2UgYnV0dG9uIGNsaWNrcywga2V5IHN0cm9rZXMsIG1vdXNlIHNjcm9sbC13aGVlbCB1cC9kb3duLlxuXG5UaGlzIGxpdHRsZSBwcm9ncmFtIGhhcyBhIHR5cGljYWwgUHlTaW1wbGVHVUkgRXZlbnQgTG9vcC5cblxuVGhlIGFuYXRvbXkgb2YgYSBQeVNpbXBsZUdVSSBldmVudCBsb29wIGlzIGFzIGZvbGxvd3MsICpnZW5lcmFsbHkgc3BlYWtpbmcqLlxuKiBUaGUgYWN0dWFsIFwibG9vcFwiIHBhcnQgaXMgYSBgd2hpbGUgVHJ1ZWAgbG9vcFxuKiBcIlJlYWRcIiB0aGUgZXZlbnQgYW5kIGFueSBpbnB1dCB2YWx1ZXMgdGhlIHdpbmRvdyBoYXNcbiogQ2hlY2sgdG8gc2VlIGlmIHdpbmRvdyB3YXMgY2xvc2VkIG9yIHVzZXIgd2lzaGVzIHRvIGV4aXRcbiogQSBzZXJpZXMgb2YgYGlmIGV2ZW50IC4uLi5gIHN0YXRlbWVudHNcblxuSGVyZSBpcyBhIGNvbXBsZXRlLCBzaG9ydCBwcm9ncmFtIHRvIGRlbW9uc3RyYXRlIGVhY2ggb2YgdGhlc2UgY29uY2VwdHMuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5zZy5DaGFuZ2VMb29rQW5kRmVlbCgnR3JlZW5UYW4nKVxuXG4jIC0tLS0tLSBNZW51IERlZmluaXRpb24gLS0tLS0tICNcbm1lbnVfZGVmID0gW1snJkZpbGUnLCBbJyZPcGVuJywgJyZTYXZlJywgJ0UmeGl0JywgJ1Byb3BlcnRpZXMnXV0sXG4gICAgICAgICAgICBbJyZFZGl0JywgWydQYXN0ZScsIFsnU3BlY2lhbCcsICdOb3JtYWwnLCBdLCAnVW5kbyddLCBdLFxuICAgICAgICAgICAgWycmSGVscCcsICcmQWJvdXQuLi4nXSwgXVxuXG4jIC0tLS0tLSBDb2x1bW4gRGVmaW5pdGlvbiAtLS0tLS0gI1xuY29sdW1uMSA9IFtbc2cuVGV4dCgnQ29sdW1uIDEnLCBiYWNrZ3JvdW5kX2NvbG9yPSdsaWdodGJsdWUnLCBqdXN0aWZpY2F0aW9uPSdjZW50ZXInLCBzaXplPSgxMCwgMSkpXSxcbiAgICAgICAgICAgW3NnLlNwaW4odmFsdWVzPSgnU3BpbiBCb3ggMScsICcyJywgJzMnKSwgaW5pdGlhbF92YWx1ZT0nU3BpbiBCb3ggMScpXSxcbiAgICAgICAgICAgW3NnLlNwaW4odmFsdWVzPSgnU3BpbiBCb3ggMScsICcyJywgJzMnKSwgaW5pdGlhbF92YWx1ZT0nU3BpbiBCb3ggMicpXSxcbiAgICAgICAgICAgW3NnLlNwaW4odmFsdWVzPSgnU3BpbiBCb3ggMScsICcyJywgJzMnKSwgaW5pdGlhbF92YWx1ZT0nU3BpbiBCb3ggMycpXV1cblxubGF5b3V0ID0gW1xuICAgIFtzZy5NZW51KG1lbnVfZGVmLCB0ZWFyb2ZmPVRydWUpXSxcbiAgICBbc2cuVGV4dCgnKEFsbW9zdCkgQWxsIHdpZGdldHMgaW4gb25lIFdpbmRvdyEnLCBzaXplPSgzMCwgMSksIGp1c3RpZmljYXRpb249J2NlbnRlcicsIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDI1KSwgcmVsaWVmPXNnLlJFTElFRl9SSURHRSldLFxuICAgIFtzZy5UZXh0KCdIZXJlIGlzIHNvbWUgdGV4dC4uLi4gYW5kIGEgcGxhY2UgdG8gZW50ZXIgdGV4dCcpXSxcbiAgICBbc2cuSW5wdXRUZXh0KCdUaGlzIGlzIG15IHRleHQnKV0sXG4gICAgW3NnLkZyYW1lKGxheW91dD1bXG4gICAgW3NnLkNoZWNrYm94KCdDaGVja2JveCcsIHNpemU9KDEwLDEpKSwgIHNnLkNoZWNrYm94KCdNeSBzZWNvbmQgY2hlY2tib3ghJywgZGVmYXVsdD1UcnVlKV0sXG4gICAgW3NnLlJhZGlvKCdNeSBmaXJzdCBSYWRpbyEgICAgICcsIFwiUkFESU8xXCIsIGRlZmF1bHQ9VHJ1ZSwgc2l6ZT0oMTAsMSkpLCBzZy5SYWRpbygnTXkgc2Vjb25kIFJhZGlvIScsIFwiUkFESU8xXCIpXV0sIHRpdGxlPSdPcHRpb25zJyx0aXRsZV9jb2xvcj0ncmVkJywgcmVsaWVmPXNnLlJFTElFRl9TVU5LRU4sIHRvb2x0aXA9J1VzZSB0aGVzZSB0byBzZXQgZmxhZ3MnKV0sXG4gICAgW3NnLk11bHRpbGluZShkZWZhdWx0X3RleHQ9J1RoaXMgaXMgdGhlIGRlZmF1bHQgVGV4dCBzaG91bGQgeW91IGRlY2lkZSBub3QgdG8gdHlwZSBhbnl0aGluZycsIHNpemU9KDM1LCAzKSksXG4gICAgIHNnLk11bHRpbGluZShkZWZhdWx0X3RleHQ9J0Egc2Vjb25kIG11bHRpLWxpbmUnLCBzaXplPSgzNSwgMykpXSxcbiAgICBbc2cuSW5wdXRDb21ibygoJ0NvbWJvYm94IDEnLCAnQ29tYm9ib3ggMicpLCBzaXplPSgyMCwgMSkpLFxuICAgICBzZy5TbGlkZXIocmFuZ2U9KDEsIDEwMCksIG9yaWVudGF0aW9uPSdoJywgc2l6ZT0oMzQsIDIwKSwgZGVmYXVsdF92YWx1ZT04NSldLFxuICAgIFtzZy5JbnB1dE9wdGlvbk1lbnUoKCdNZW51IE9wdGlvbiAxJywgJ01lbnUgT3B0aW9uIDInLCAnTWVudSBPcHRpb24gMycpKV0sXG4gICAgW3NnLkxpc3Rib3godmFsdWVzPSgnTGlzdGJveCAxJywgJ0xpc3Rib3ggMicsICdMaXN0Ym94IDMnKSwgc2l6ZT0oMzAsIDMpKSxcbiAgICAgc2cuRnJhbWUoJ0xhYmVsbGVkIEdyb3VwJyxbW1xuICAgICBzZy5TbGlkZXIocmFuZ2U9KDEsIDEwMCksIG9yaWVudGF0aW9uPSd2Jywgc2l6ZT0oNSwgMjApLCBkZWZhdWx0X3ZhbHVlPTI1LCB0aWNrX2ludGVydmFsPTI1KSxcbiAgICAgc2cuU2xpZGVyKHJhbmdlPSgxLCAxMDApLCBvcmllbnRhdGlvbj0ndicsIHNpemU9KDUsIDIwKSwgZGVmYXVsdF92YWx1ZT03NSksXG4gICAgIHNnLlNsaWRlcihyYW5nZT0oMSwgMTAwKSwgb3JpZW50YXRpb249J3YnLCBzaXplPSg1LCAyMCksIGRlZmF1bHRfdmFsdWU9MTApLFxuICAgICBzZy5Db2x1bW4oY29sdW1uMSwgYmFja2dyb3VuZF9jb2xvcj0nbGlnaHRibHVlJyldXSldLFxuICAgIFtzZy5UZXh0KCdfJyAqIDgwKV0sXG4gICAgW3NnLlRleHQoJ0Nob29zZSBBIEZvbGRlcicsIHNpemU9KDM1LCAxKSldLFxuICAgIFtzZy5UZXh0KCdZb3VyIEZvbGRlcicsIHNpemU9KDE1LCAxKSwgYXV0b19zaXplX3RleHQ9RmFsc2UsIGp1c3RpZmljYXRpb249J3JpZ2h0JyksXG4gICAgIHNnLklucHV0VGV4dCgnRGVmYXVsdCBGb2xkZXInKSwgc2cuRm9sZGVyQnJvd3NlKCldLFxuICAgIFtzZy5TdWJtaXQodG9vbHRpcD0nQ2xpY2sgdG8gc3VibWl0IHRoaXMgZm9ybScpLCBzZy5DYW5jZWwoKV1dXG5cbndpbmRvdyA9IHNnLldpbmRvdygnRXZlcnl0aGluZyBiYWdlbCcsIGxheW91dCwgZGVmYXVsdF9lbGVtZW50X3NpemU9KDQwLCAxKSwgZ3JhYl9hbnl3aGVyZT1GYWxzZSlcbmV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCgpXG5cbnNnLlBvcHVwKCdUaXRsZScsXG4gICAgICAgICAnVGhlIHJlc3VsdHMgb2YgdGhlIHdpbmRvdy4nLFxuICAgICAgICAgJ1RoZSBidXR0b24gY2xpY2tlZCB3YXMgXCJ7fVwiJy5mb3JtYXQoZXZlbnQpLFxuICAgICAgICAgJ1RoZSB2YWx1ZXMgYXJlJywgdmFsdWVzKVxuXG5gYGBcblRoaXMgaXMgYSBjb21wbGV4IHdpbmRvdyB3aXRoIHF1aXRlIGEgYml0IG9mIGN1c3RvbSBzaXppbmcgdG8gbWFrZSB0aGluZ3MgbGluZSB1cCB3ZWxsLiAgVGhpcyBpcyBjb2RlIHlvdSBvbmx5IGhhdmUgdG8gd3JpdGUgb25jZS4gIFdoZW4gbG9va2luZyBhdCB0aGUgY29kZSwgcmVtZW1iZXIgdGhhdCB3aGF0IHlvdSdyZSBzZWVpbmcgaXMgYSBsaXN0IG9mIGxpc3RzLiAgRWFjaCByb3cgY29udGFpbnMgYSBsaXN0IG9mIEdyYXBoaWNhbCBFbGVtZW50cyB0aGF0IGFyZSB1c2VkIHRvIGNyZWF0ZSB0aGUgd2luZG93LiAgSWYgeW91IHNlZSBhIHBhaXIgb2Ygc3F1YXJlIGJyYWNrZXRzIFsgXSB0aGVuIHlvdSBrbm93IHlvdSdyZSByZWFkaW5nIG9uZSBvZiB0aGUgcm93cy4gIEVhY2ggcm93IG9mIHlvdXIgR1VJIHdpbGwgYmUgb25lIG9mIHRoZXNlIGxpc3RzLlxuXG5UaGlzIHdpbmRvdyBtYXkgbG9vayBcInVnbHlcIiB0byB5b3Ugd2hpY2ggaXMgYmVjYXVzZSBubyBlZmZvcnQgaGFzIGJlZW4gbWFkZSB0byBtYWtlIGl0IGxvb2sgbmljZS4gSXQncyBwdXJlbHkgZnVuY3Rpb25hbC4gVGhlcmUgYXJlIDMwIEVsZW1lbnRzIGluIHRoZSB3aW5kb3cuICBUSElSVFkgRWxlbWVudHMuIENvbnNpZGVyaW5nIHdoYXQgaXQgZG9lcywgaXQncyBtaXJhY3Vsb3VzIG9yIGluIHRoZSBsZWFzdCBpbmNyZWRpYmx5IGltcHJlc3NpdmUuICBXaHk/ICBCZWNhdXNlIGluIGxlc3MgdGhhbiA1MCBsaW5lcyBvZiBjb2RlIHRoYXQgd2luZG93IHdhcyBjcmVhdGVkLCBzaG93biwgY29sbGVjdGVkIHRoZSByZXN1bHRzIGFuZCBzaG93ZWQgdGhlIHJlc3VsdHMgaW4gYW5vdGhlciB3aW5kb3cuXG5cbjUwIGxpbmVzLiAgSXQnbGwgdGFrZSB5b3UgNTAgbGluZXMgb2YgdGtpbnRlciBvciBRdCBjb2RlIHRvIGdldCB0aGUgZmlyc3QgMyBlbGVtZW50cyBvZiB0aGUgd2luZG93IHdyaXR0ZW4sIGlmIHlvdSBjYW4gZXZlbiBkbyB0aGF0LiAgXG5cbk5vLCBsZXQncyBiZSBjbGVhciBoZXJlLi4uIHRoaXMgd2luZG93IHdpbGwgdGFrZSBhIG1hc3NpdmUgYW1vdW50IG9mIGNvZGUgdXNpbmcgdGhlIGNvbnZlbnRpb25hbCBQeXRob24gR1VJIHBhY2thZ2VzLiAgSXQncyBhIGZhY3QgYW5kIGlmIHlvdSBjYXJlIHRvIHByb3ZlIG1lIHdyb25nLCB0aGVuIGJ5IEFMTCBtZWFucyBQTEVBU0UgZG8gaXQuICBQbGVhc2Ugd3JpdGUgdGhpcyB3aW5kb3cgdXNpbmcgdGtpbnRlciwgUXQsIG9yIFd4UHl0aG9uIGFuZCBzZW5kIHRoZSBjb2RlIVxuXG5Ob3RlIHRoaXMgd2luZG93IGV2ZW4gaGFzIGEgbWVudWJhciBhY3Jvc3MgdGhlIHRvcCwgc29tZXRoaW5nIGVhc3kgdG8gbWlzcy5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjIyMzQ3MzAtNDI5NWVhMDAtYjM5OS0xMWU5LTkyODEtNWRlZmI5MTg4NmY2LnBuZylcblxuQ2xpY2tpbmcgdGhlIFN1Ym1pdCBidXR0b24gY2F1c2VkIHRoZSB3aW5kb3cgY2FsbCB0byByZXR1cm4uICBUaGUgY2FsbCB0byBQb3B1cCByZXN1bHRlZCBpbiB0aGlzIHdpbmRvdy5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjIyMzQ3MzctNDdmMzM0ODAtYjM5OS0xMWU5LThhMmMtMDg3Y2M0OTg2OGNkLnBuZylcblxuKipgTm90ZSwgZXZlbnQgdmFsdWVzIGNhbiBiZSBOb25lYCoqLiAgVGhlIHZhbHVlIGZvciBgZXZlbnRgIHdpbGwgYmUgdGhlIHRleHQgdGhhdCBpcyBkaXNwbGF5ZWQgb24gdGhlIGJ1dHRvbiBlbGVtZW50IHdoZW4gaXQgd2FzIGNyZWF0ZWQgb3IgdGhlIGtleSBmb3IgdGhlIGJ1dHRvbi4gIElmIHRoZSB1c2VyIGNsb3NlZCB0aGUgd2luZG93IHVzaW5nIHRoZSBcIlhcIiBpbiB0aGUgdXBwZXIgcmlnaHQgY29ybmVyIG9mIHRoZSB3aW5kb3csIHRoZW4gYGV2ZW50YCB3aWxsIGJlIGBOb25lYC4gICBJdCBpcyAqKip2aXRhbGx5KioqICoqKmltcG9ydGFudCoqKiB0aGF0IHlvdXIgY29kZSBjb250YWluIHRoZSBwcm9wZXIgY2hlY2tzIGZvciBOb25lLiBcblxuRm9yIFwicGVyc2lzdGVudCB3aW5kb3dzXCIsICAqKmFsd2F5cyBnaXZlIHlvdXIgdXNlcnMgYSB3YXkgb3V0IG9mIHRoZSB3aW5kb3cqKi4gIE90aGVyd2lzZSB5b3UnbGwgZW5kIHVwICB3aXRoIHdpbmRvd3MgdGhhdCBuZXZlciBwcm9wZXJseSBjbG9zZS4gIEl0J3MgbGl0ZXJhbGx5IDIgbGluZXMgb2YgY29kZSB0aGF0IHlvdSdsbCBmaW5kIGluIGV2ZXJ5IERlbW8gUHJvZ3JhbS4gIFdoaWxlIHlvdSdyZSBhdCBpdCwgbWFrZSBzdXJlIGEgYHdpbmRvdy5DbG9zZSgpYCBjYWxsIGlzIGFmdGVyIHlvdXIgZXZlbnQgbG9vcCBzbyB0aGF0IHlvdXIgd2luZG93IGNsb3NlcyBmb3Igc3VyZS5cblxuWW91IGNhbiBzZWUgaW4gdGhlIHJlc3VsdHMgUG9wdXAgd2luZG93IHRoYXQgdGhlIHZhbHVlcyByZXR1cm5lZCBhcmUgYSBkaWN0aW9uYXJ5LiAgRWFjaCBpbnB1dCBmaWVsZCBpbiB0aGUgd2luZG93IGdlbmVyYXRlcyBvbmUgaXRlbSBpbiB0aGUgcmV0dXJuIHZhbHVlcyBsaXN0LiAgSW5wdXQgZmllbGRzIG9mdGVuIHJldHVybiBhIGBzdHJpbmdgLiBDaGVjayBCb3hlcyBhbmQgUmFkaW8gQnV0dG9ucyByZXR1cm4gYGJvb2xgLiAgU2xpZGVycyByZXR1cm4gZmxvYXQgb3IgcGVyaGFwcyBpbnQgZGVwZW5kaW5nIG9uIGhvdyB5b3UgY29uZmlndXJlZCBpdCBvciB3aGljaCBwb3J0IHlvdSdyZSB1c2luZy5cblxuSWYgeW91ciB3aW5kb3cgaGFzIG5vIGtleXMgYW5kIGl0IGhhcyBubyBidXR0b25zIHRoYXQgYXJlIFwiYnJvd3NlXCIgdHlwZSBvZiBidXR0b25zLCB0aGVuIGl0IHdpbGwgcmV0dXJuIHZhbHVlcyB0byB5b3UgYXMgYSBsaXN0IGluc3RlYWQgb2YgYSBkaWN0aW9uYXJ5LiAgSWYgcG9zc2libGUgUHlTaW1wbGVHVUkgdHJpZXMgdG8gcmV0dXJuIHRoZSB2YWx1ZXMgYXMgYSBsaXN0IHRvIGtlZXAgdGhpbmdzIHNpbXBsZS5cblxuTm90ZSBpbiB0aGUgbGlzdCBvZiByZXR1cm4gdmFsdWVzIGluIHRoaXMgZXhhbXBsZSwgbWFueSBvZiB0aGUga2V5cyBhcmUgbnVtYmVycy4gIFRoYXQncyBiZWNhdXNlIG5vIGtleXMgd2VyZSBzcGVjaWZpZWQgb24gYW55IG9mIHRoZSBlbGVtZW50cyAoYWx0aG91Z2ggb25lIHdhcyBhdXRvbWF0aWNhbGx5IG1hZGUgZm9yIHlvdSkuICBJZiB5b3UgZG9uJ3Qgc3BlY2lmeSBhIGtleSBmb3IgeW91ciBlbGVtZW50LCB0aGVuIGEgbnVtYmVyIHdpbGwgYmUgc2VxdWVudGlhbGx5IGFzc2lnbmVkLiAgRm9yIGVsZW1lbnRzIHRoYXQgeW91IGRvbid0IHBsYW4gb24gbW9kaWZ5aW5nIG9yIHJlYWRpbmcgdmFsdWVzIGZyb20sIGxpa2UgYSBUZXh0IEVsZW1lbnQsIHlvdSBjYW4gc2tpcCBhZGRpbmcga2V5cy4gIEZvciBvdGhlciBlbGVtZW50cywgeW91J2xsIGxpa2VseSB3YW50IHRvIGFkZCBrZXlzIHNvIHRoYXQgeW91IGNhbiBlYXNpbHkgYWNjZXNzIHRoZSB2YWx1ZXMgYW5kIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiB0aGVtLlxuXG4jIyMgT3BlcmF0aW9ucyBUaGF0IFRha2UgYSBcIkxvbmcgVGltZVwiXG5cbklmIHlvdSdyZSBhIFdpbmRvd3MgdXNlciB5b3UndmUgc2VlbiB3aW5kb3dzIHNob3cgaW4gdGhlaXIgdGl0bGUgYmFyIFwiTm90IFJlc3BvbmRpbmdcIiB3aGljaCBpcyBzb29uIGZvbGxvd2VkIGJ5IGEgV2luZG93cyBwb3BvcCBzdGF0aW5nIHRoYXQgXCJZb3VyIHByb2dyYW0gaGFzIHN0b3BwZWQgcmVzcG9uZGluZ1wiLiAgV2VsbCwgeW91IHRvbyBjYW4gbWFrZSB0aGF0IG1lc3NhZ2UgYW5kIHBvcHVwIGFwcGVhciBpZiB5b3Ugc28gd2lzaCEgIEFsbCB5b3UgbmVlZCB0byBkbyBpcyBleGVjdXRlIGFuIG9wZXJhdGlvbiB0aGF0IHRha2VzIFwidG9vIGxvbmdcIiAoaS5lLiBhIGZldyBzZWNvbmRzKSBpbnNpZGUgeW91ciBldmVudCBsb29wLlxuXG5Zb3UgaGF2ZSBhIGNvdXBsZSBvZiBvcHRpb25zIGZvciBkZWFsaW5nIHRoaXMgd2l0aC4gIElmIHlvdXIgb3BlcmF0aW9uIGNhbiBiZSBicm9rZW4gdXAgaW50byBzbWFsbGVyIHBhcnRzLCB0aGVuIHlvdSBjYW4gY2FsbCBgV2luZG93LlJlZnJlc2goKWAgb2NjYXNzaW9uYWxseSB0byBhdm9pZCB0aGlzIG1lc3NhZ2UuICBJZiB5b3UncmUgcnVubmluZyBhIGxvb3AgZm9yIGV4YW1wbGUsIGRyb3AgdGhhdCBjYWxsIGluIHdpdGggeW91ciBvdGhlciB3b3JrLiAgVGhpcyB3aWxsIGtlZXAgdGhlIEdVSSBoYXBweSBhbmQgV2luZG93J3Mgd29uJ3QgY29tcGxhaW4uXG5cbklmLCBvbiB0aGUgb3RoZXIgaGFuZCwgeW91ciBvcGVyYXRpb24gaXMgbm90IHVuZGVyIHlvdXIgY29udHJvbCBvciB5b3UgYXJlIHVuYWJsZSB0byBhZGQgYFJlZnJlc2hgIGNhbGxzLCB0aGVuIHRoZSBuZXh0IG9wdGlvbiBhdmFpbGFibGUgdG8geW91IGlzIHRvIG1vdmUgeW91ciBsb25nIG9wZXJhdGlvbnMgaW50byBhIHRocmVhZC5cblxuVGhlcmUgYXJlIGEgY291cGxlIG9mIGRlbW8gcHJvZ3JhbXMgYXZhaWxhYmxlIGZvciB5b3UgdG8gc2VlIGhvdyB0byBkbyB0aGlzLiAgWW91IGJhc2ljYWxseSBwdXQgeW91ciB3b3JrIGludG8gYSB0aHJlYWQuICBXaGVuIHRoZSB0aHJlYWQgaXMgY29tcGxldGVkLCBpdCB0ZWxscyB0aGUgR1VJIGJ5IHNlbmRpbmcgYSBtZXNzYWdlIHRocm91Z2ggYSBxdWV1ZS4gIFRoZSBldmVudCBsb29wIHdpbGwgcnVuIHdpdGggYSB0aW1lciBzZXQgdG8gYSB2YWx1ZSB0aGF0IHJlcHJlc2VudHMgaG93IFwicmVzcG9uc2l2ZVwiIHlvdSB3YW50IHlvdXIgR1VJIHRvIGJlIHRvIHRoZSB3b3JrIGNvbXBsZXRpbmcuICBcblxuVGhlc2UgMiBkZW1vIHByb2dyYW1zIGFyZSBjYWxsZWRcbmBgYHB5dGhvblxuRGVtb19UaHJlYWRlZF9Xb3JrLnB5IC0gQmVzdCBkb2N1bWVudGVkLiAgU2luZ2xlIHRocmVhZCB1c2VkIGZvciBsb25nIHRhc2tcbkRlbW9fTXVsdGl0aHJlYWRlZF9Mb25nX1Rhc2tzLnB5IC0gU2ltaWxhciB0byBhYm92ZSwgYnV0IHdpdGggbGVzcyBmYW5jeSBHVUkuIEFsbG93cyB5b3UgdG8gc2V0IGFtb3VudCBvZiB0aW1lXG5gYGBcblxuVGhlc2UgMiBwYXJ0aWN1bGFyIGRlbW9zIGhhdmUgYSBMT1Qgb2YgY29tbWVudHMgc2hvd2luZyB5b3Ugd2hlcmUgdG8gYWRkIHlvdXIgY29kZSwgZXRjLiAgVGhlIGFtb3VudCBvZiBjb2RlIHRvIGRvIHRoaXMgaXMgYWN0dWFsbHkgcXVpdGUgc21hbGwgYW5kIHlvdSBkb24ndCBuZWVkIHRvIHVuZGVyc3RhbmQgdGhlIG1lY2hhbmlzbXMgdXNlZCBpZiB5b3Ugc2ltcGx5IGZvbGxvdyB0aGUgZGVtbyB0aGF0J3MgYmVlbiBwcmVwYXJlZCBmb3IgeW91LlxuXG4jIyMgTXVsdGl0aGVhZGVkIFByb2dyYW1zXG5cbldoaWxlIG9uIHRoZSB0b3BpYyBvZiBtdWx0aXBsZSB0aHJlYWRzLCBhbm90aGVyIGRlbW8gd2FzIHByZXBhcmVkIHRoYXQgc2hvd3MgaG93IHlvdSBjYW4gcnVuIG11bHRpcGxlIHRocmVhZHMgaW4geW91ciBwcm9ncmFtIHRoYXQgYWxsIGNvbW11bmljYXRlIHdpdGggdGhlIGV2ZW50IGxvb3AgaW4gb3JkZXIgdG8gZGlzcGxheSBzb21ldGhpbmcgaW4gdGhlIEdVSSB3aW5kb3cuICBSZWNhbGwgdGhhdCBmb3IgUHlTaW1wbGVHVUkgKGF0IGxlYXN0IHRoZSB0a2ludGVyIHBvcnQpIHlvdSBjYW5ub3QgbWFrZSBQeVNpbXBsZUdVSSBjYWxscyBpbiB0aHJlYWRzIG90aGVyIHRoYW4gdGhlIG1haW4gcHJvZ3JhbSB0aHJlYWQuXG5cblRoZSBrZXkgdG8gdGhlc2UgdGhyZWFkZWQgcHJvZ3JhbXMgaXMgY29tbXVuaWNhdGlvbiBmcm9tIHRoZSB0aHJlYWRzIHRvIHlvdXIgZXZlbnQgbG9vcC4gIFRoZSBtZWNoYW5pc20gY2hvc2VuIGZvciB0aGVzZSBkZW1vbnN0cmF0aW9ucyB1c2VzIHRoZSBQeXRob24gYnVpbHQtaW4gYHF1ZXVlYCBtb2R1bGUuICBUaGUgZXZlbnQgbG9vcCBwb2xscyB0aGVzZSBxdWV1ZXMgdG8gc2VlIGlmIHNvbWV0aGluZyBoYXMgYmVlbiBzZW50IG92ZXIgZnJvbSBvbmUgb2YgdGhlIHRocmVhZHMgdG8gYmUgZGlzcGxheWVkLlxuXG5Zb3UnbGwgZmluZCB0aGUgZGVtbyB0aGF0IHNob3dzIG11bHRpcGxlIHRocmVhZHMgY29tbXVuaWNhdGluZyB3aXRoIGEgc2luZ2xlIEdVSSBpcyBjYWxsZWQ6XG5cbmBgYHB5dGhvblxuRGVtb19NdWx0aXRocmVhZGVkX1F1ZXVlZC5weVxuYGBgXG5cbk9uY2UgYWdhaW4gYSAqKndhcm5pbmcqKiBpcyBpbiBvcmRlciBmb3IgcGxhaW4gUHlTaW1wbGVHVUkgKHRraW50ZXIgYmFzZWQpIC0geW91ciBHVUkgbXVzdCBuZXZlciBydW4gYXMgYW55dGhpbmcgYnV0IHRoZSBtYWluIHByb2dyYW0gdGhyZWFkIGFuZCBubyB0aHJlYWRzIGNhbiBkaXJlY3RseSBjYWxsIFB5U2ltcGxlR1VJIGNhbGxzLlxuXG4tLS1cblxuIyBCdWlsZGluZyBDdXN0b20gV2luZG93c1xuXG5Zb3Ugd2lsbCBmaW5kIGl0ICoqKm11Y2ggZWFzaWVyKioqIHRvIHdyaXRlIGNvZGUgdXNpbmcgUHlTaW1wbGVHVUkgaWYgeW91IHVzZSBhbiBJREUgc3VjaCBhcyAqKipQeUNoYXJtKioqLiAgVGhlIGZlYXR1cmVzIHRoYXQgc2hvdyB5b3UgZG9jdW1lbnRhdGlvbiBhYm91dCB0aGUgQVBJIGNhbGwgeW91IGFyZSBtYWtpbmcgd2lsbCBoZWxwIHlvdSBkZXRlcm1pbmUgd2hpY2ggc2V0dGluZ3MgeW91IHdhbnQgdG8gY2hhbmdlLCBpZiBhbnkuICBJbiBQeUNoYXJtLCB0d28gY29tbWFuZHMgYXJlIHBhcnRpY3VsYXJseSBoZWxwZnVsLlxuXG5cdENvbnRyb2wtUSAod2hlbiBjdXJzb3IgaXMgb24gZnVuY3Rpb24gbmFtZSkgYnJpbmdzIHVwIGEgYm94IHdpdGggdGhlIGZ1bmN0aW9uIGRlZmluaXRpb25cblx0Q29udHJvbC1QICh3aGVuIGN1cnNvciBpbnNpZGUgZnVuY3Rpb24gY2FsbCBcIigpXCIpIHNob3dzIGEgbGlzdCBvZiBwYXJhbWV0ZXJzIGFuZCB0aGVpciBkZWZhdWx0IHZhbHVlc1xuXG4jIyBTeW5jaHJvbm91cyAvIEFzeW5jaHJvbm91cyBXaW5kb3dzXG5cblRoZSBtb3N0IGNvbW1vbiB1c2Ugb2YgUHlTaW1wbGVHVUkgaXMgdG8gZGlzcGxheSBhbmQgY29sbGVjdCBpbmZvcm1hdGlvbiBmcm9tIHRoZSB1c2VyLiAgVGhlIG1vc3Qgc3RyYWlnaHRmb3J3YXJkIHdheSB0byBkbyB0aGlzIGlzIHVzaW5nIGEgXCJibG9ja2luZ1wiIEdVSSBjYWxsLiAgRXhlY3V0aW9uIGlzIFwiYmxvY2tlZFwiIHdoaWxlIHdhaXRpbmcgZm9yIHRoZSB1c2VyIHRvIGNsb3NlIHRoZSBHVUkgd2luZG93L2RpYWxvZyBib3guXG5cbllvdSd2ZSBhbHJlYWR5IHNlZW4gYSBudW1iZXIgb2YgZXhhbXBsZXMgYWJvdmUgdGhhdCB1c2UgYmxvY2tpbmcgd2luZG93cy4gIFlvdSdsbCBrbm93IGl0IGJsb2NrcyBpZiB0aGUgYFJlYWRgIGNhbGwgaGFzIG5vIHRpbWVvdXQgcGFyYW1ldGVyLlxuXG5BIGJsb2NraW5nIFJlYWQgKG9uZSB0aGF0IHdhaXRzIHVudGlsIGFuIGV2ZW50IGhhcHBlbnMpIGxvb2sgbGlrZSB0aGlzOlxuXG5gYGBweXRob25cbmV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCgpXG5gYGBcblxuQSBub24tYmxvY2tpbmcgLyBBc3luYyBSZWFkIGNhbGwgbG9va3MgbGlrZSB0aGlzOlxuXG5gYGBweXRob25cbmV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCh0aW1lb3V0PTEwMClcbmBgYFxuXG5Zb3UgY2FuIGxlYXJuIG1vcmUgYWJvdXQgdGhlc2UgYXN5bmMgLyBub24tYmxvY2tpbmcgd2luZG93cyB0b3dhcmQgdGhlIGVuZCBvZiB0aGlzIGRvY3VtZW50LlxuXG4jIFdpbmRvdyBPYmplY3QgLSBCZWdpbm5pbmcgYSB3aW5kb3dcblxuVGhlIGZpcnN0IHN0ZXAgaXMgdG8gY3JlYXRlIHRoZSB3aW5kb3cgb2JqZWN0IHVzaW5nIHRoZSBkZXNpcmVkIHdpbmRvdyBjdXN0b21pemF0aW9ucy4gIFxuXG4qKklNUE9SVEFOVCoqIC0gTWFueSBvZiB0aGUgYFdpbmRvd2AgbWV0aG9kcyByZXF1aXJlIHlvdSB0byBlaXRoZXIgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIChvciBzZXQgYGZpbmFsaXplPVRydWVgIGluIHlvdXIgYFdpbmRvd2AgY2FsbCkgYmVmb3JlIHlvdSBjYWxsIHRoZSBtZXRob2QuIFRoaXMgaXMgYmVjYXVzZSB0aGVzZSAyIGNhbGxzIGFyZSB3aGF0IGFjdHVhbGx5IGNyZWF0ZXMgdGhlIHdpbmRvdyB1c2luZyB0aGUgdW5kZXJseWluZyBHVUkgRnJhbWV3b3JrLiAgUHJpb3IgdG8gb25lIG9mIHRob3NlIGNhbGxzLCB0aGUgbWV0aG9kcyBhcmUgbGlrZWx5IHRvIGNyYXNoIGFzIHRoZXkgd2lsbCBub3QgeWV0IGhhdmUgdGhlaXIgdW5kZXJseWluZyB3aWRnZXRzIGNyZWF0ZWQuXG5cbiMjIyBXaW5kb3cgTG9jYXRpb25cblxuUHlTaW1wbGVHVUkgY29tcHV0ZXMgdGhlIGV4YWN0IGNlbnRlciBvZiB5b3VyIHdpbmRvdyBhbmQgY2VudGVycyB0aGUgd2luZG93IG9uIHRoZSBzY3JlZW4uICBJZiB5b3Ugd2FudCB0byBsb2NhdGUgeW91ciB3aW5kb3cgZWxzZXdoZXJlLCBzdWNoIGFzIHRoZSBzeXN0ZW0gZGVmYXVsdCBvZiAoMCwwKSwgaWYgeW91IGhhdmUgMiB3YXlzIG9mIGRvaW5nIHRoaXMuIFRoZSBmaXJzdCBpcyB3aGVuIHRoZSB3aW5kb3cgaXMgY3JlYXRlZC4gIFVzZSB0aGUgYGxvY2F0aW9uYCBwYXJhbWV0ZXIgdG8gc2V0IHdoZXJlIHRoZSB3aW5kb3cuICBUaGUgc2Vjb25kIHdheSBvZiBkb2luZyB0aGlzIGlzIHRvIHVzZSB0aGUgYFNldE9wdGlvbnNgIGNhbGwgd2hpY2ggd2lsbCBzZXQgdGhlIGRlZmF1bHQgd2luZG93IGxvY2F0aW9uIGZvciBhbGwgd2luZG93cyBpbiB0aGUgZnV0dXJlLlxuXG4jIyMgV2luZG93IFNpemVcblxuWW91IGNhbiBnZXQgeW91ciB3aW5kb3cncyBzaXplIGJ5IGFjY2VzcyB0aGUgYFNpemVgIHByb3BlcnR5LiAgVGhlIHdpbmRvdyBoYXMgdG8gYmUgUmVhZCBvbmNlIG9yIEZpbmFsaXplZCBpbiBvcmRlciBmb3IgdGhlIHZhbHVlIHRvIGJlIGNvcnJlY3QuIE5vdGUgdGhhdCBpdCdzIGEgcHJvcGVydHksIG5vdCBhIGNhbGwuXG5cbmBteV93aW5kb3dzX3NpemUgPSB3aW5kb3cuU2l6ZWBcblxuVG8gZmluYWxpemUgeW91ciB3aW5kb3c6XG5cbmBgYHB5dGhvblxud2luZG93ID0gV2luZG93KCdNeSBUaXRsZScsIGxheW91dCkuRmluYWxpemUoKVxuYGBgXG5cbklmIHVzaW5nIFB5U2ltcGxlR1VJIDQuMiBhbmQgbGF0ZXI6XG5cbmBgYHB5dGhvblxud2luZG93ID0gV2luZG93KCdNeSBUaXRsZScsIGxheW91dCwgZmluYWxpemU9VHJ1ZSlcbmBgYFxuXG4jIyMgRWxlbWVudCBTaXplc1xuXG5UaGVyZSBhcmUgbXVsdGlwbGUgd2F5cyB0byBzZXQgdGhlIHNpemUgb2YgRWxlbWVudHMuICBUaGV5IGFyZTpcblxuMS4gVGhlIGdsb2JhbCBkZWZhdWx0IHNpemUgLSBjaGFuZ2UgdXNpbmcgYFNldE9wdGlvbnNgIGZ1bmN0aW9uXG4yLiBBdCB0aGUgV2luZG93IGxldmVsIC0gY2hhbmdlIHVzaW5nIHRoZSBwYXJhbWV0ZXIgYGRlZmF1bHRfZWxlbWVudF9zaXplYCBpbiB5b3VyIGNhbGwgdG8gYFdpbmRvd2BcbjMuIEF0IHRoZSBFbGVtZW50IGxldmVsIC0gZWFjaCBlbGVtZW50IGhhcyBhIGBzaXplYCBwYXJhbWV0ZXJcblxuRWxlbWVudCBzaXplcyBhcmUgbWVhc3VyZWQgaW4gY2hhcmFjdGVycyAodGhlcmUgYXJlIGV4Y2VwdGlvbnMpLiAgQSBUZXh0IEVsZW1lbnQgd2l0aCAgYHNpemUgPSAoMjAsMSlgIGhhcyBhIHNpemUgb2YgMjAgY2hhcmFjdGVycyB3aWRlIGJ5IDEgY2hhcmFjdGVyIHRhbGwuXG5cblRoZSBkZWZhdWx0IEVsZW1lbnQgc2l6ZSBmb3IgUHlTaW1wbGVHVUkgaXMgYCg0NSwxKWAuXG5cblRoZXJlIGFyZSBhIGNvdXBsZSBvZiB3aWRnZXRzIHdoZXJlIG9uZSBvZiB0aGUgc2l6ZSB2YWx1ZXMgaXMgaW4gcGl4ZWxzIHJhdGhlciB0aGFuIGNoYXJhY3RlcnMuICBUaGlzIGlzIHRydWUgZm9yIFByb2dyZXNzIE1ldGVycyBhbmQgU2xpZGVycy4gIFRoZSBzZWNvbmQgcGFyYW1ldGVyIGlzIHRoZSAnaGVpZ2h0JyBpbiBwaXhlbHMuXG5cbiMjIyBObyBUaXRsZWJhclxuXG5TaG91bGQgeW91IHdpc2ggdG8gY3JlYXRlIGNvb2wgbG9va2luZyB3aW5kb3dzIHRoYXQgYXJlIGNsZWFuIHdpdGggbm8gd2luZG93cyB0aXRsZWJhciwgdXNlIHRoZSBub190aXRsZWJhciBvcHRpb24gd2hlbiBjcmVhdGluZyB0aGUgd2luZG93LlxuXG5CZSBzdXJlIGFuIHByb3ZpZGUgeW91ciB1c2VyIGFuIFwiZXhpdFwiIGJ1dHRvbiBvciB0aGV5IHdpbGwgbm90IGJlIGFibGUgdG8gY2xvc2UgdGhlIHdpbmRvdyEgIFdoZW4gbm8gdGl0bGViYXIgaXMgZW5hYmxlZCwgdGhlcmUgd2lsbCBiZSBubyBpY29uIG9uIHlvdXIgdGFza2JhciBmb3IgdGhlIHdpbmRvdy4gIFdpdGhvdXQgYW4gZXhpdCBidXR0b24geW91IHdpbGwgbmVlZCB0byBraWxsIHZpYSB0YXNrbWFuYWdlci4uLiBub3QgZnVuLlxuXG5XaW5kb3dzIHdpdGggbm8gdGl0bGViYXIgcmVseSBvbiB0aGUgZ3JhYiBhbnl3aGVyZSBvcHRpb24gdG8gYmUgZW5hYmxlZCBvciBlbHNlIHlvdSB3aWxsIGJlIHVuYWJsZSB0byBtb3ZlIHRoZSB3aW5kb3cuXG5cbldpbmRvd3Mgd2l0aG91dCBhIHRpdGxlYmFyIGNhbiBiZSB1c2VkIHRvIGVhc2lseSBjcmVhdGUgYSBmbG9hdGluZyBsYXVuY2hlci5cblxuTGludXggdXNlcnMhICBOb3RlIHRoYXQgdGhpcyBzZXR0aW5nIGhhcyBzaWRlIGVmZmVjdHMgZm9yIHNvbWUgb2YgdGhlIG90aGVyIEVsZW1lbnRzLiAgTXVsdGktbGluZSBpbnB1dCBkb2Vzbid0IHdvcmsgYXQgYWxsLCBmb3IgZXhhbXBsZSAgU28sIHVzZSB3aXRoIGNhdXRpb24uXG5cbiFbZmxvYXRpbmcgbGF1bmNoZXJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ1MjU4MjQ2LTcxYmFmYjgwLWIzODItMTFlOC05ZjVlLTc5NDIxZTZjMDBiYi5qcGcpXG5cbiMjIyBHcmFiIEFueXdoZXJlXG5cblRoaXMgaXMgYSBmZWF0dXJlIHVuaXF1ZSB0byBQeVNpbXBsZUdVSS5cblxuTm90ZSAtIHRoZXJlIGlzIGEgd2FybmluZyBtZXNzYWdlIHByaW50ZWQgb3V0IGlmIHRoZSB1c2VyIGNsb3NlcyBhIG5vbi1ibG9ja2luZyB3aW5kb3cgdXNpbmcgYSBidXR0b24gd2l0aCBncmFiX2FueXdoZXJlIGVuYWJsZWQuICBUaGVyZSBpcyBubyBoYXJtIGluIHRoZXNlIG1lc3NhZ2VzLCBidXQgaXQgbWF5IGJlIGRpc3RyZXNzaW5nIHRvIHRoZSB1c2VyLiAgICBTaG91bGQgeW91IHdpc2ggdG8gZW5hYmxlIGZvciBhIG5vbi1ibG9ja2luZyB3aW5kb3csIHNpbXBseSBnZXQgZ3JhYl9hbnl3aGVyZSA9IFRydWUgd2hlbiB5b3UgY3JlYXRlIHRoZSB3aW5kb3cuXG5cbiMjIyBBbHdheXMgb24gdG9wXG5cblRvIGtlZXAgYSB3aW5kb3cgb24gdG9wIG9mIGFsbCBvdGhlciB3aW5kb3dzIG9uIHRoZSBzY3JlZW4sIHNldCBrZWVwX29uX3RvcCA9IFRydWUgd2hlbiB0aGUgd2luZG93IGlzIGNyZWF0ZWQuICBUaGlzIGZlYXR1cmUgbWFrZXMgZm9yIGZsb2F0aW5nIHRvb2xiYXJzIHRoYXQgYXJlIHZlcnkgaGVscGZ1bCBhbmQgYWx3YXlzIHZpc2libGUgb24geW91ciBkZXNrdG9wLlxuXG4jIyMgRm9jdXNcblxuUHlTaW1wbGVHVUkgd2lsbCBzZXQgYSBkZWZhdWx0IGZvY3VzIGxvY2F0aW9uIGZvciB5b3UuICBUaGlzIGdlbmVyYWxseSBtZWFucyB0aGUgZmlyc3QgaW5wdXQgZmllbGQuICBZb3UgY2FuIHNldCB0aGUgZm9jdXMgdG8gYSBwYXJ0aWN1bGFyIGVsZW1lbnQuICBJZiB5b3UgYXJlIGdvaW5nIHRvIHNldCB0aGUgZm9jdXMgeW91cnNlbGYsIHRoZW4geW91IHNob3VsZCB0dXJuIG9mZiB0aGUgYXV0b21hdGljIGZvY3VzIGJ5IHNldHRpbmcgYHVzZV9kZWZhdWx0X2ZvY3VzPUZhbHNlYCBpbiB5b3VyIFdpbmRvdyBjYWxsLlxuXG4jIyBXaW5kb3cgTWV0aG9kcyBUaGF0IENvbXBsZXRlIEZvcm1hdGlvbiBvZiBXaW5kb3dcblxuQWZ0ZXIgeW91IGhhdmUgY29tcGxldGVkIG1ha2luZyB5b3VyIGxheW91dCwgc3RvcmVkIGluIGEgdmFyaWFibGUgY2FsbGVkIGBsYXlvdXRgIGluIHRoZXNlIGV4YW1wbGVzLCB5b3Ugd2lsbCBjcmVhdGUgeW91ciB3aW5kb3cuXG5cblRoZSBjcmVhdGlvbiBwYXJ0IG9mIGEgd2luZG93IGludm9sdmVzIDMgc3RlcHMuXG5cbjEuIENyZWF0ZSBhIGBXaW5kb3dgIG9iamVjdFxuMi4gQWRkaW5nIHlvdXIgTGF5b3V0IHRvIHRoZSB3aW5kb3dcbjMuIE9wdGlvbmFsIC0gRmluYWxpemUgaWYgd2FudCB0byBtYWtlIGNoYW5nZXMgcHJpb3IgdG8gYFJlYWRgIGNhbGxcblxuT3ZlciB0aW1lIHRoZSBQeVNpbXBsZUdVSSBjb2RlIGhhcyBjb250aW51ZWQgdG8gY29tcGFjdCwgY29tcHJlc3MsIHNvIHRoYXQgYXMgbGl0dGxlIGNvZGUgYXMgcG9zc2libGUgd2lsbCBuZWVkIHRvIGJlIHdyaXR0ZW4gYnkgdGhlIHByb2dyYW1tZXIuXG5cbiMjIyBUaGUgSW5kaXZpZHVhbCBDYWxsc1xuXG5UaGlzIGlzIHRoZSBcImxvbmcgZm9ybVwiIGFzIGVhY2ggbWV0aG9kIGlzIGNhbGxlZCBpbmRpdmlkdWFsbHkuXG5cbmBgYHB5dGhvblxud2luZG93ID0gc2cuV2luZG93KCdNeSBUaXRsZScpXG53aW5kb3cuTGF5b3V0KGxheW91dClcbndpbmRvdy5GaW5hbGl6ZSgpXG5gYGBcblxuIyMjIENoYWluaW5nIFRoZSBDYWxsc1xuXG5UaGUgbmV4dCBsZXZlbCAgb2YgY29tcHJlc3Npb24gdGhhdCB3YXMgZG9uZSB3YXMgdG8gY2hhaW4gdGhlIGNhbGxzIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgbGluZSBvZiBjb2RlLlxuXG5gYGBweXRob25cbndpbmRvdyA9IHNnLldpbmRvdygnTXkgVGl0bGUnKS5MYXlvdXQobGF5b3V0KS5GaW5hbGl6ZSgpXG5gYGBcblxuIyMjIFVzaW5nIFBhcmFtZXRlcnMgSW5zdGVhZCBvZiBDYWxscyAoTmV3IFByZWZlcnJlZCBNZXRob2QpXG5cbkhlcmUncyBhIG5vdmVsIGNvbmNlcHQsIGluc3RlYWQgb2YgdXNpbmcgY2hhaW5pbmcsIHNvbWV0aGluZyB0aGF0J3MgZm9yZWlnbiB0byBiZWdpbm5lcnMsIHVzZSBwYXJhbWV0ZXJzIHRvIHRoZSBgV2luZG93YCBjYWxsLiAgQW5kIHRoYXQgaXMgZXhhY3RseSB3aGF0J3MgaGFwcGVuZWQgYXMgb2YgNC4yIG9mIHRoZSBQeVNpbXBsZUdVSSBwb3J0LlxuXG5gYGBweXRob25cbndpbmRvdyA9IHNnLldpbmRvdygnTXkgVGl0bGUnLCBsYXlvdXQsIGZpbmFsaXplPVRydWUpXG5gYGBcblxuUmF0aGVyIHRoYW4gcHVzaGluZyB0aGUgd29yayBvbnRvIHRoZSB1c2VyIG9mIGRvaW5nIHRoZSBsYXlvdXQgYW5kIGZpbmFsaXphdGlvbiBjYWxscywgbGV0IHRoZSBXaW5kb3cgaW5pdGlhbGl6YXRpb24gY29kZSBkbyBpdCBmb3IgeW91LiBZZWEsIGl0IHNvdW5kcyB0b3RhbGx5IG9idmlvdXMgbm93LCBidXQgaXQgZGlkbid0IGEgZmV3IG1vbnRocyBhZ28uXG5cblRoaXMgY2FwYWJpbGl0eSBoYXMgYmVlbiBhZGRlZCB0byBhbGwgNCBQeVNpbXBsZUdVSSBwb3J0cyBidXQgbm9uZSBhcmUgb24gUHlQSSBqdXN0IHlldCBhcyB0aGVyZSBpcyBzb21lIHJ1bnRpbWUgcmVxdWlyZWQgZmlyc3QgdG8gbWFrZSBzdXJlIG5vdGhpbmcgdHJ1bHkgYmFkIGlzIGdvaW5nIHRvIGhhcHBlbi5cblxuQ2FsbCB0byBzZXQgdGhlIHdpbmRvdyBsYXlvdXQuICBNdXN0IGJlIGNhbGxlZCBwcmlvciB0byBgUmVhZGAuICBNb3N0IGxpa2VseSBcImNoYWluZWRcIiBpbiBsaW5lIHdpdGggdGhlIFdpbmRvdyBjcmVhdGlvbi5cblxuYGBgcHl0aG9uXG53aW5kb3cgPSBzZy5XaW5kb3coJ015IHdpbmRvdyB0aXRsZScsIGxheW91dClcbmBgYFxuXG4jIyMjIGBGaW5hbGl6ZSgpYCBvciBgV2luZG93YCBwYXJhbWV0ZXIgYGZpbmFsaXplPVRydWVgXG5cbkNhbGwgdG8gZm9yY2UgYSB3aW5kb3cgdG8gZ28gdGhyb3VnaCB0aGUgZmluYWwgc3RhZ2VzIG9mIGluaXRpYWxpemF0aW9uLiAgVGhpcyB3aWxsIGNhdXNlIHRoZSB0a2ludGVyIHJlc291cmNlcyB0byBiZSBhbGxvY2F0ZWQgc28gdGhhdCB0aGV5IGNhbiB0aGVuIGJlIG1vZGlmaWVkLiAgVGhpcyBhbHNvIGNhdXNlcyB5b3VyIHdpbmRvdyB0byBhcHBlYXIuICBJZiB5b3UgZG8gbm90IHdhbnQgeW91ciB3aW5kb3cgdG8gYXBwZWFyIHdoZW4gRmluYWxpemUgaXMgY2FsbGVkLCB0aGVuIHNldCB0aGUgQWxwaGEgdG8gMCBpbiB5b3VyIHdpbmRvdydzIGNyZWF0aW9uIHBhcmFtZXRlcnMuXG5cbklmIHlvdSB3YW50IHRvIGNhbGwgYW4gZWxlbWVudCdzIGBVcGRhdGVgIG1ldGhvZCBvciBjYWxsIGEgYEdyYXBoYCBlbGVtZW50J3MgZHJhd2luZyBwcmltaXRpdmVzLCB5b3UgKioqbXVzdCoqKiBlaXRoZXIgY2FsbCBgUmVhZGAgb3IgYEZpbmFsaXplYCBwcmlvciB0byBtYWtpbmcgdGhvc2UgY2FsbHMuXG5cbiMjIyMgUmVhZCh0aW1lb3V0PU5vbmUsIHRpbWVvdXRfa2V5PVRJTUVPVVRfS0VZKVxuXG5SZWFkIHRoZSBXaW5kb3cncyBpbnB1dCB2YWx1ZXMgYW5kIGJ1dHRvbiBjbGlja3MgaW4gYSBibG9ja2luZy1mYXNoaW9uXG5cblJldHVybnMgZXZlbnQsIHZhbHVlcy4gIEFkZGluZyBhIHRpbWVvdXQgY2FuIGJlIGFjaGlldmVkIGJ5IHNldHRpbmcgdGltZW91dD0qbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyogYmVmb3JlIHRoZSBSZWFkIHRpbWVzIG91dCBhZnRlciB3aGljaCBhIFwidGltZW91dCBldmVudFwiIGlzIHJldHVybmVkLiAgVGhlIHZhbHVlIG9mIHRpbWVvdXRfa2V5IHdpbGwgYmUgcmV0dXJuZWQgYXMgdGhlIGV2ZW50LiAgIElmIHlvdSBkbyBub3Qgc3BlY2lmeSBhIHRpbWVvdXQga2V5LCB0aGVuIHRoZSB2YWx1ZSBgVElNRU9VVF9LRVlgIHdpbGwgYmUgcmV0dXJuZWQuXG5cbklmIHlvdSBzZXQgdGhlIHRpbWVvdXQgPSAwLCB0aGVuIHRoZSBSZWFkIHdpbGwgaW1tZWRpYXRlbHkgcmV0dXJuIHJhdGhlciB0aGFuIHdhaXRpbmcgZm9yIGlucHV0IG9yIGZvciBhIHRpbWVvdXQuICBJdCdzIGEgdHJ1bHkgbm9uLWJsb2NraW5nIFwicmVhZFwiIG9mIHRoZSB3aW5kb3cuXG5cbiMgTGF5b3V0c1xuXG5XaGlsZSBhdCB0aGlzIHBvaW50IGluIHRoZSBkb2N1bWVudGF0aW9uIHlvdSd2ZSBub3QgYmVlbiBzaG93biB2ZXJ5IG11Y2ggYWJvdXQgZWFjaCBFbGVtZW50IGF2YWlsYWJsZSwgeW91IHNob3VsZCByZWFkIHRoaXMgc2VjdGlvbiBjYXJlZnVsbHkgYXMgeW91IGNhbiB1c2UgdGhlIHRlY2huaXF1ZXMgeW91IGxlYXJuIGluIGhlcmUgdG8gYnVpbGQgYmV0dGVyLCBzaG9ydGVyLCBhbmQgZWFzaWVyIHRvIHVuZGVyc3RhbmQgUHlTaW1wbGVHVUkgY29kZS5cblxuSWYgaXQgZmVlbHMgbGlrZSB0aGlzIGxheW91dCBzZWN0aW9uIGlzIHRvbyBtdWNoIHRvbyBzb29uLCB0aGVuIGNvbWUgYmFjayB0byB0aGlzIHNlY3Rpb24gYWZ0ZXIgeW91J3JlIGxlYXJuZWQgYWJvdXQgZWFjaCBFbGVtZW50LiAgKipXaGF0ZXZlciBvcmRlciB5b3UgZmluZCB0aGUgbGVhc3QgY29uZnVzaW5nIGlzIHRoZSBiZXN0LioqXG5cbldoaWxlIHlvdSd2ZSBub3QgbGVhcm5lZCBhYm91dCBFbGVtZW50cyB5ZXQsIGl0IG1ha2VzIHNlbnNlIGZvciB0aGlzIHNlY3Rpb24gdG8gYmUgdXAgZnJvbnQgc28gdGhhdCB5b3UnbGwgaGF2ZSBsZWFybmVkIGhvdyB0byB1c2UgdGhlIGVsZW1lbnRzIHByaW9yIHRvIGxlYXJuaW5nIGhvdyBlYWNoIGVsZW1lbnQgd29ya3MuICBBdCB0aGlzIHBvaW50IGluIHlvdXIgUHlTaW1wbGVHVUkgZWR1Y2F0aW9uLCBpdCBpcyBiZXR0ZXIgZm9yIHlvdSB0byBncmFzcCB0aW1lIGVmZmljaWVudCB3YXlzIG9mIHdvcmtpbmcgd2l0aCBFbGVtZW50cyB0aGFuIHdoYXQgZWFjaCBFbGVtZW50IGRvZXMuICBCeSBsZWFybmluZyBub3cgaG93IHRvIGFzc2VtYmxlIEVsZW1lbnRzIG5vdywgeW91J2xsIGhhdmUgYSBnb29kIG1vZGVsIHRvIHB1dCB0aGUgZWxlbWVudHMgeW91IGxlYXJuIGludG8uXG5cblRoZXJlIGFyZSAqc2V2ZXJhbCogYXNwZWN0cyBvZiBQeVNpbXBsZUdVSSB0aGF0IG1ha2UgaXQgbW9yZSBcIlB5dGhvbmljXCIgdGhhbiBvdGhlciBQeXRob24gR1VJIFNES3MuICBPbmUgb2YgdGhlIGFyZWFzIHRoYXQgaXMgdW5pcXVlIHRvIFB5U2ltcGxlR1VJIGlzIGhvdyBhIHdpbmRvdydzIFwibGF5b3V0XCIgaXMgZGVmaW5lZCwgc3BlY2lmaWVkIG9yIGJ1aWx0LiAgQSB3aW5kb3cncyBcImxheW91dFwiIGlzIHNpbXBseSBhIGxpc3Qgb2YgbGlzdHMgb2YgZWxlbWVudHMuICBBcyB5b3UndmUgYWxyZWFkeSBsZWFybmVkLCB0aGVzZSBsaXN0cyBjb21iaW5lIHRvIGZvcm0gYSBjb21wbGV0ZSB3aW5kb3cuICBUaGlzIG1ldGhvZCBvZiBkZWZpbmluZyBhIHdpbmRvdyBpcyBzdXBlci1wb3dlcmZ1bCBiZWNhdXNlIGxpc3RzIGFyZSBjb3JlIHRvIHRoZSBQeXRob24gbGFuZ3VhZ2UgYXMgYSB3aG9sZSBhbmQgdGh1cyBhcmUgdmVyeSBlYXN5IHRvIGNyZWF0ZSBhbmQgbWFudXB1bGF0ZS4gIFxuXG5UaGluayBhYm91dCB0aGF0IGZvciBhIG1vbWVudCBhbmQgY29tcGFyZS9jb250cmFzdCB3aXRoIFF0LCB0a2ludGVyLCBldGMuICBXaXRoIFB5U2ltcGxlR1VJIHRoZSBsb2NhdGlvbiBvZiB5b3VyIGVsZW1lbnQgaW4gYSBtYXRyaXggZGV0ZXJtaW5lcyB3aGVyZSB0aGF0IEVsZW1lbnQgaXMgc2hvd24gaW4gdGhlIHdpbmRvdy4gIEl0J3Mgc28gKioqc2ltcGxlKioqIGFuZCB0aGF0IG1ha2VzIGl0IGluY3JlZGlibHkgcG93ZXJmdWwuICBXYW50IHRvIHN3aXRjaCBhIHJvdyBpbiB5b3VyIEdVSSB0aGF0IGhhcyB0ZXh0IHdpdGggdGhlIG9uZSBiZWxvdyBpdCB0aGF0IGhhcyBhbiBpbnB1dCBlbGVtZW50PyAgTm8gcHJvYmxlbSwgc3dhcCB0aGUgbGluZXMgb2YgY29kZSBhbmQgeW91J3JlIGRvbmUuXG5cbkxheW91dHMgd2VyZSBkZXNpZ25lZCB0byBiZSB2aXN1YWwuIFRoZSBpZGVhIGlzIGZvciB5b3UgdG8gYmUgYWJsZSB0byBlbnZpc2lvbiBob3cgYSB3aW5kb3cgd2lsbCBsb29rIGJ5IHNpbXBseWggbG9va2luZyBhdCB0aGUgbGF5b3V0IGluIHRoZSBjb2RlLiAgVGhlIENPREUgaXRzZWxmIG1hdGNoZXMgd2hhdCBpcyBkcmF3biBvbiB0aGUgc2NyZWVuLiAgUHlTaW1wbGVHVUkgaXMgYSBjcm9zcyBiZXR3ZWVuIHN0cmFpZ2h0IFB5dGhvbiBjb2RlIGFuZCBhIHZpc3VhbCBHVUkgZGVzaWduZXIuXG5cbkluIHRoZSBwcm9jZXNzIG9mIGNyZWF0aW5nIHlvdXIgd2luZG93LCB5b3UgY2FuIG1hbmlwdWxhdGUgdGhlc2UgbGlzdHMgb2YgZWxlbWVudHMgd2l0aG91dCBoYXZpbmcgYW4gaW1wYWN0IG9uIHRoZSBlbGVtZW50cyBvciBvbiB5b3VyIHdpbmRvdy4gIFVudGlsIHlvdSBwZXJmb3JtIGEgXCJsYXlvdXRcIiBvZiB0aGUgbGlzdCwgdGhleSBhcmUgbm90aGluZyBtb3JlIHRoYW4gbGlzdHMgY29udGFpbmluZyBvYmplY3RzICh0aGV5IGp1c3QgaGFwcGVuIHRvIGJlIHlvdXIgd2luZG93J3MgZWxlbWVudHMpLlxuXG5NYW55IHRpbWVzIHlvdXIgd2luZG93IGRlZmluaXRpb24gLyBsYXlvdXQgd2lsbCBiZSBhIHN0YXRpYywgc3RyYWlnaHRmb3J3YXJkIHRvIGNyZWF0ZS4gIFxuXG5Ib3dldmVyLCB3aW5kb3cgbGF5b3V0cyBhcmUgbm90IGxpbWl0ZWQgdG8gYmVpbmcgb25lIG9mIHRoZXNlIHN0YXRpY2x5IGRlZmluZWQgbGlzdCBvZiBFbGVtZW50cy5cblxuIyBHZW5lcmF0ZWQgTGF5b3V0cyAoRm9yIHN1cmUgd2FudCB0byByZWFkIGlmIHlvdSBoYXZlID4gNSByZXBlYXRpbmcgZWxlbWVudHMvcm93cylcblxuVGhlcmUgYXJlIDUgc3BlY2lmaWMgdGVjaG5pcXVlcyBvZiBnZW5lcmF0aW5nIGxheW91dHMgZGlzY3Vzc2VkIGluIHRoaXMgc2VjdGlvbi4gVGhleSBjYW4gYmUgdXNlZCBhbG9uZSBvciBpbiBjb21iaW5hdGlvbiB3aXRoIGVhY2ggb3RoZXIuXG5cbjEuIExheW91dCArIExheW91dCBjb25jYXRlbmF0aW9uIGBbW0FdXSArIFtbQl1dID0gW1tBXSwgW0JdXWBcbjIuIEVsZW1lbnQgQWRkaXRpb24gb24gU2FtZSBSb3cgIGBbW0FdICsgW0JdXSA9IFtbQSwgQl1dYFxuMy4gTGlzdCBDb21wcmVoZW5zaW9uIHRvIGdlbmVyYXRlIGEgcm93IGBbQSBmb3IgeCBpbiByYW5nZSgxMCldID0gW0EsQSxBLEEsQS4uLl1gXG40LiBMaXN0IENvbXByZWhlbnNpb24gdG8gZ2VuZXJhdGUgbXVsdGlwbGUgcm93cyBgW1tBXSBmb3IgeCBpbiByYW5nZSgxMCldID0gW1tBXSxbQV0sLi4uXWBcbjUuIFVzZXIgRGVmaW5lZCBFbGVtZW50cyAvIENvbW91bmQgRWxlbWVudHNcblxuIyMgRXhhbXBsZSAtIExpc3QgQ29tcHJlaGVuc2lvbiBUbyBDb25jYXRlbmF0ZSBNdWx0aXBsZSBSb3dzIC0gXCJUbyBEb1wiIExpc3QgRXhhbXBsZVxuXG5MZXQncyBjcmVhdGUgYSBsaXR0bGUgbGF5b3V0IHRoYXQgd2lsbCBiZSB1c2VkIHRvIG1ha2UgYSB0by1kbyBsaXN0IHVzaW5nIFB5U2ltcGxlR1VJLlxuXG4jIyMgQnJ1dGUgRm9yY2VcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxubGF5b3V0ID0gW1xuICAgICAgICAgICAgW3NnLlRleHQoJzEuICcpLCBzZy5JbihrZXk9MSldLFxuICAgICAgICAgICAgW3NnLlRleHQoJzIuICcpLCBzZy5JbihrZXk9MildLFxuICAgICAgICAgICAgW3NnLlRleHQoJzMuICcpLCBzZy5JbihrZXk9MyldLFxuICAgICAgICAgICAgW3NnLlRleHQoJzQuICcpLCBzZy5JbihrZXk9NCldLFxuICAgICAgICAgICAgW3NnLlRleHQoJzUuICcpLCBzZy5JbihrZXk9NSldLFxuICAgICAgICAgICAgW3NnLkJ1dHRvbignU2F2ZScpLCBzZy5CdXR0b24oJ0V4aXQnKV1cbiAgICAgICAgIF1cblxud2luZG93ID0gc2cuV2luZG93KCdUbyBEbyBMaXN0IEV4YW1wbGUnLCBsYXlvdXQpXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuYGBgXG5cblRoZSBvdXRwdXQgZnJvbSB0aGlzIHNjcmlwdCB3YXMgdGhpcyB3aW5kb3c6XG5cbiFbU05BRy0wNDUxXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS80NjE2MzU1NS82MzU2Mzg0OS05MGNkODE4MC1jNTMwLTExZTktODBkNy00OTU0YjExZGVlYmQuanBnKVxuXG5UYWtlIGEgbW9tZW50IGFuZCBsb29rIGF0IHRoZSBjb2RlIGFuZCB0aGUgd2luZG93IHRoYXQncyBnZW5lcmF0ZWQuICBBcmUgeW91IGFibGUgdG8gbG9vayBhdCB0aGUgbGF5b3V0IGFuZCBlbnZpc2lvbiB0aGUgV2luZG93IG9uIHRoZSBzY3JlZW4/XG5cbiMjIyBCdWlsZCBCeSBDb25jYXRlbmF0aW5nIFJvd3NcblxuVGhlIGJydXRlIGZvcmNlIG1ldGhvZCB3b3JrcyBncmVhdCBvbiBhIGxpc3QgdGhhdCdzIDUgaXRlbXMgbG9uZywgYnV0IHdoYXQgaWYgeW91ciB0b2RvIGxpc3QgaGFkIDQwIGl0ZW1zIG9uIGl0LiBUSEVOIHdoYXQ/ICBXZWxsLCB0aGF0J3Mgd2hlbiB3ZSB0dXJuIHRvIGEgXCJnZW5lcmF0ZWRcIiBsYXlvdXQsIGEgbGF5b3V0IHRoYXQgaXMgZ2VuZXJhdGVkIGJ5IHlvdXIgY29kZS4gIFJlcGxhY2UgdGhlIGxheW91dD0gc3R1ZmYgZnJvbSB0aGUgcHJldmlvdXMgZXhhbXBsZSB3aXRoIHRoaXMgZGVmaW5pdGlvbiBvZiB0aGUgbGF5b3V0LlxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbXVxuZm9yIGkgaW4gcmFuZ2UoMSw2KTpcbiAgICBsYXlvdXQgKz0gW3NnLlRleHQoZid7aX0uICcpLCBzZy5JbihrZXk9aSldLFxubGF5b3V0ICs9IFtbc2cuQnV0dG9uKCdTYXZlJyksIHNnLkJ1dHRvbignRXhpdCcpXV1cblxud2luZG93ID0gc2cuV2luZG93KCdUbyBEbyBMaXN0IEV4YW1wbGUnLCBsYXlvdXQpXG5ldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuYGBgXG5cbkl0IHByb2R1Y2VzIHRoZSBleGFjdCBzYW1lIHdpbmRvdyBvZiBjb3Vyc2UuICBUaGF0J3MgcHJvZ3Jlc3MuLi4uIHdlbnQgZnJvbSB3cml0aW5nIG91dCBldmVyeSByb3cgb2YgdGhlIEdVSSB0byBnZW5lcmF0aW5nIGV2ZXJ5IHJvdy4gSWYgd2Ugd2FudCA0OCBpdGVtcyBhcyBzdWdnZXN0ZWQsIGNoYW5nZSB0aGUgcmFuZ2UoMSw2KSB0byByYW5nZSgxLDQ4KS4gIEVhY2ggdGltZSB0aHJvdWdoIHRoZSBsaXN0IGFub3RoZXIgcm93IGlzIGFkZGVkIG9udG8gdGhlIGxheW91dC5cblxuIyMjIENyZWF0ZSBTZXZlcmFsIFJvd3MgVXNpbmcgTGlzdCBDb21wcmVoZW5zaW9uXG5cbkJVVCwgd2UncmUgbm90IGRvbmUgeWV0IVxuXG5UaGlzIGlzICoqUHl0aG9uKiosIHdlJ3JlIHVzaW5nIGxpc3RzIHRvIGJ1aWxkIHNvbWV0aGluZyB1cCwgc28gd2Ugc2hvdWxkIGJlIGxvb2tpbmcgYXQgKioqKmxpc3QgY29tcHJlaGVuc2lvbnMqKioqLiAgTGV0J3MgY2hhbmdlIHRoZSBgZm9yYCBsb29wIGludG8gYSBsaXN0IGNvbXByZWhlbnNpb24uICBSZWNhbGwgdGhhdCBvdXIgYGZvcmAgbG9vcCB3YXMgdXNlZCB0byBjb25jYXRlbmF0ZSA2IHJvd3MgaW50byBhIGxheW91dC5cblxuYGBgcHl0aG9uXG5sYXlvdXQgPSAgW1tzZy5UZXh0KGYne2l9LiAnKSwgc2cuSW4oa2V5PWkpXSBmb3IgaSBpbiByYW5nZSgxLDYpXSBcbmBgYFxuXG5IZXJlIHdlJ3ZlIG1vdmVkIHRoZSBgZm9yYCBsb29wIHRvIGluc2lkZSBvZiB0aGUgbGlzdCBkZWZpbml0aW9uIChhIGxpc3QgY29tcHJlaGVuc2lvbilcblxuIyMjIENvbmNhdGVuYXRpbmcgTXVsdGlwbGUgUm93c1xuXG5XZSBoYXZlIG91ciByb3dzIGJ1aWx0IHVzaW5nIHRoZSBsaXN0IGNvbXByZWhlbnNpb24sIG5vdyB3ZSBqdXN0IG5lZWQgdGhlIGJ1dHRvbnMuICBUaGV5IGNhbiBiZSBlYXNpbHkgXCJ0YWNrZWQgb250byB0aGUgZW5kXCIgYnkgc2ltcGxlIGFkZGl0aW9uLlxuXG5gYGBweXRob25cbmxheW91dCA9ICBbW3NnLlRleHQoZid7aX0uICcpLCBzZy5JbihrZXk9aSldIGZvciBpIGluIHJhbmdlKDEsNildIFxubGF5b3V0ICs9IFtbc2cuQnV0dG9uKCdTYXZlJyksIHNnLkJ1dHRvbignRXhpdCcpXV1cbmBgYFxuXG5Bbnl0aW1lIHlvdSBoYXZlIDIgbGF5b3V0cywgeW91IGNhbiBjb25jYXRlbmF0ZSB0aGVtIGJ5IHNpbXBsZSBhZGRpdGlvbi4gIE1ha2Ugc3VyZSB5b3VyIGxheW91dCBpcyBhIFwibGlzdCBvZiBsaXN0c1wiIGxheW91dC4gIEluIHRoZSBhYm92ZSBleGFtcGxlLCB3ZSBrbm93IHRoZSBmaXJzdCBsaW5lIGlzIGEgZ2VuZXJhdGVkIGxheW91dCBvZiB0aGUgaW5wdXQgcm93cy4gIFRoZSBsYXN0IGxpbmUgYWRkcyBvbnRvIHRoZSBsYXlvdXQgYW5vdGhlciBsYXlvdXQuLi4gbm90ZSB0aGUgZm9ybWF0IGJlaW5nIFsgWyBdIF0uXG5cblRoaXMgYnV0dG9uIGRlZmluaXRpb24gaXMgYW4gZW50aXJlIGxheW91dCwgbWFraW5nIGl0IHBvc3NpYmxlIHRvIGFkZCB0byBvdXIgbGlzdCBjb21wcmVoZW5zaW9uXG5cbmBbW3NnLkJ1dHRvbignU2F2ZScpLCBzZy5CdXR0b24oJ0V4aXQnKV1dYFxuXG5JdCdzIHF1aXRlIHJlYWRhYmxlIGNvZGUuICBUaGUgMiBsYXlvdXRzIGxpbmUgdXAgdmlzdWFsbHkgcXVpdGUgd2VsbC5cblxuQnV0IGxldCdzIG5vdCBzdG9wIHRoZXJlIHdpdGggY29tcHJlc3NpbmcgdGhlIGNvZGUuICBIb3cgYWJvdXQgcmVtb3ZpbmcgdGhhdCArPSBhbmQgaW5zdGVhZCBjaGFuZ2UgdGhlIGxheW91dCBpbnRvIGEgc2luZ2xlIGxpbmUgd2l0aCBqdXN0IGEgYCtgIGJldHdlZW4gdGhlIHR3byBzZXRzIG9mIHJvdy5cblxuRG9pbmcgdGhpcyBjb25jYXRlbmF0aW9uIG9uIG9uZSBsaW5lLCB3ZSBlbmQgdXAgd2l0aCB0aGlzIHNpbmdsZSBzdGF0ZW1lbnQgdGhhdCBjcmVhdGVzIHRoZSAqKmVudGlyZSBsYXlvdXQqKiBmb3IgdGhlIEdVSTpcblxuYGBgcHl0aG9uXG5sYXlvdXQgPSAgW1tzZy5UZXh0KGYne2l9LiAnKSwgc2cuSW4oa2V5PWkpXSBmb3IgaSBpbiByYW5nZSgxLDYpXSArIFtbc2cuQnV0dG9uKCdTYXZlJyksIHNnLkJ1dHRvbignRXhpdCcpXV1cbmBgYFxuXG4jIyMgRmluYWwgXCJUbyBEbyBMaXN0XCIgUHJvZ3JhbVxuXG5BbmQgaGVyZSB3ZSBoYXZlIG91ciBmaW5hbCBwcm9ncmFtLi4uIGFsbCAqKjQqKiBsaW5lcy5cblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxubGF5b3V0ICA9IFtbc2cuVGV4dChmJ3tpfS4gJyksIHNnLkluKGtleT1pKV0gZm9yIGkgaW4gcmFuZ2UoMSw2KV0gKyBbW3NnLkJ1dHRvbignU2F2ZScpLCBzZy5CdXR0b24oJ0V4aXQnKV1dXG5cbndpbmRvdyA9IHNnLldpbmRvdygnVG8gRG8gTGlzdCBFeGFtcGxlJywgbGF5b3V0KVxuXG5ldmVudCwgdmFsdWVzID0gd2luZG93LnJlYWQoKVxuYGBgXG5cbklmIHlvdSByZWFsbHkgd2FudGVkIHRvIGNydW5jaCB0aGluZ3MgZG93biwgeW91IGNhbiBtYWtlIGl0IGEgMiBsaW5lIHByb2dyYW0gKGFuIGltcG9ydCBhbmQgMSBsaW5lIG9mIGNvZGUpIGJ5IG1vdmluZyB0aGUgbGF5b3V0IGludG8gdGhlIGNhbGwgdG8gYFdpbmRvd2BcblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxuZXZlbnQsIHZhbHVlcyA9IHNnLldpbmRvdygnVG8gRG8gTGlzdCBFeGFtcGxlJywgbGF5b3V0PVtbc2cuVGV4dChmJ3tpfS4gJyksIHNnLkluKGtleT1pKV0gZm9yIGkgaW4gcmFuZ2UoMSw2KV0gKyBbW3NnLkJ1dHRvbignU2F2ZScpLCBzZy5CdXR0b24oJ0V4aXQnKV1dKS5SZWFkKClcbmBgYFxuXG4jIyBFeGFtcGxlIC0gTGlzdCBDb21wcmVoZW5zaW9uIHRvIEJ1aWxkIFJvd3MgLSBUYWJsZSBTaW11bGF0aW9uIC0gR3JpZCBvZiBJbnB1dHNcblxuSW4gdGhpcyBleGFtcGxlIHdlJ3JlIGJ1aWxkaW5nIGEgXCJ0YWJsZVwiIHRoYXQgaXMgNCB3aWRlIGJ5IDEwIGhpZ2ggdXNpbmcgYElucHV0YCBlbGVtZW50cyBcblxuVGhlIGVuZCByZXN1bHRzIHdlJ3JlIHNlZWtpbmcgaXMgc29tZXRoaW5nIGxpa2UgdGhpczpcblxuYGBgXG5IRUFERVIgMSAgICBIRUFERVIgMiAgICBIRUFERVIgMyAgICBIRUFERVIgNFxuSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVRcbklOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUXG5JTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVFxuSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVRcbklOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUXG5JTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVFxuSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVRcbklOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUICAgICAgIElOUFVUXG5JTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVCAgICAgICBJTlBVVFxuSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVQgICAgICAgSU5QVVRcbmBgYFxuXG5PbmNlIHRoZSBjb2RlIGlzIGNvbXBsZXRlZCwgaGVyZSBpcyBob3cgdGhlIHJlc3VsdCB3aWxsIGFwcGVhcjpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vNDYxNjM1NTUvNjM2MjYzMjgtYjQ0ODA5MDAtYzVkMC0xMWU5LTljODEtNTJlM2IwNTE2YmRlLnBuZylcblxuV2UncmUgZ29pbmcgdG8gYmUgYnVpbGRpbmcgZWFjaCByb3cgdXNpbmcgYSBsaXN0IGNvbXByZWhlbnNpb24gYW5kIHdlJ2xsIGJ1aWxkIHRoZSB0YWJsZSBieSBjb25jYXRlbmF0aW5nIHJvd3MgdXNpbmcgYW5vdGhlciBsaXN0IGNvbXByZWhlbnNpb24uICBUaGF0J3MgYSBsaXN0IGNvbXByZWhlbnNpb24gdGhhdCBnb2VzIGFjcm9zcyBhbmQgYW5vdGhlciBsaXN0IGNvbXByZWhlbnNpb24gdGhhdCBnb2VzIGRvd24gdGhlIGxheW91dCwgYWRkaW5nIG9uZSByb3cgYWZ0ZXIgYW5vdGhlci5cblxuIyMjIEJ1aWxkaW5nIHRoZSBIZWFkZXJcblxuRmlyc3QgbGV0J3MgYnVpbGQgdGhlIGhlYWRlci4gIFRoZXJlIGFyZSAyIGNvbmNlcHRzIHRvIG5vdGljZSBoZXJlOlxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5oZWFkaW5ncyA9IFsnSEVBREVSIDEnLCAnSEVBREVSIDInLCAnSEVBREVSIDMnLCdIRUFERVIgNCddICAjIHRoZSB0ZXh0IG9mIHRoZSBoZWFkaW5nc1xuaGVhZGVyID0gIFtbc2cuVGV4dCgnICAnKV0gKyBbc2cuVGV4dChoLCBzaXplPSgxNCwxKSkgZm9yIGggaW4gaGVhZGluZ3NdXSAgIyBidWlsZCBoZWFkZXIgbGF5b3V0XG5gYGBcblxuVGhlcmUgYXJlIDIgdGhpbmdzIGluIHRoaXMgY29kZSB0byBub3RlXG4xLiBUaGUgbGlzdCBjb21wcmVoZW5zaW9uIHRoYXQgbWFrZXMgdGhlIGhlYWRpbmcgZWxlbWVudHNcbjIuIFRoZSBzcGFjZXMgYWRkZWQgb250byB0aGUgZnJvbnRcblxuTGV0J3Mgc3RhcnQgd2l0aCB0aGUgaGVhZGVycyB0aGVtc2VsdmVzLlxuXG5UaGlzIGlzIHRoZSBjb2RlIHRoYXQgbWFrZXMgYSByb3cgb2YgVGV4dCBFbGVtZW50cyBjb250YWluaW5nIHRoZSB0ZXh0IGZvciB0aGUgaGVhZGVycy4gIFRoZSByZXN1bHQgaXMgYSBsaXN0IG9mIFRleHQgRWxlbWVudHMsIGEgcm93LlxuXG5gYGBweXRob25cbltzZy5UZXh0KGgsIHNpemU9KDE0LDEpKSBmb3IgaCBpbiBoZWFkaW5nc11cbmBgYFxuXG5UaGVuIHdlIGFkZCBvbiBhIGZldyBzcGFjZXMgdG8gc2hpZnQgdGhlIGhlYWRlcnMgb3ZlciBzbyB0aGV5IGFyZSBjZW50ZXJlZCBvdmVyIHRoZWlyIGNvbHVtbnMuICBXZSBkbyB0aGlzIGJ5IHNpbXBseSBhZGRpbmcgYSBgVGV4dGAgRWxlbWVudCBvbnRvIHRoZSBmcm9udCBvZiB0aGF0IGxpc3Qgb2YgaGVhZGluZ3MuXG5cbmBgYHB5dGhvblxuaGVhZGVyID0gIFtbc2cuVGV4dCgnICAnKV0gKyBbc2cuVGV4dChoLCBzaXplPSgxNCwxKSkgZm9yIGggaW4gaGVhZGluZ3NdXVxuYGBgXG5cblRoaXMgYGhlYWRlcmAgdmFyaWFibGUgaXMgYSBsYXlvdXQgd2l0aCAxIHJvdyB0aGF0IGhhcyBhIGJ1bmNoIG9mIGBUZXh0YCBlbGVtZW50cyB3aXRoIHRoZSBoZWFkaW5ncy5cblxuIyMjIEJ1aWxkaW5nIHRoZSBJbnB1dCBFbGVtZW50c1xuXG5UaGUgYElucHV0YCBlbGVtZW50cyBhcmUgYXJyYW5nZWQgaW4gYSBncmlkLiAgVG8gZG8gdGhpcyB3ZSB3aWxsIGJlIHVzaW5nIGEgZG91YmxlIGxpc3QgY29tcHJlaGVuc2lvbi4gIE9uZSB3aWxsIGJ1aWxkIHRoZSByb3cgdGhlIG90aGVyIHdpbGwgYWRkIHRoZSByb3dzIHRvZ2V0aGVyIHRvIG1ha2UgdGhlIGdyaWQuICBIZXJlJ3MgdGhlIGxpbmUgb2YgY29kZSB0aGF0IGRvZXMgdGhhdDpcblxuYGBgcHl0aG9uXG5pbnB1dF9yb3dzID0gW1tzZy5JbnB1dChzaXplPSgxNSwxKSwgcGFkPSgwLDApKSBmb3IgY29sIGluIHJhbmdlKDQpXSBmb3Igcm93IGluIHJhbmdlKDEwKV1cbmBgYFxuXG5UaGlzIHBvcnRpb24gb2YgdGhlIHN0YXRlbWVudCBtYWtlcyBhIHNpbmdsZSByb3cgb2YgNCBgSW5wdXRgIEVsZW1lbnRzXG5cbmBgYHB5dGhvblxuW3NnLklucHV0KHNpemU9KDE1LDEpLCBwYWQ9KDAsMCkpIGZvciBjb2wgaW4gcmFuZ2UoNCldXG5gYGBcblxuTmV4dCB3ZSB0YWtlIHRoYXQgbGlzdCBvZiBgSW5wdXRgIEVsZW1lbnRzIGFuZCBtYWtlIGFzIG1hbnkgb2YgdGhlbSBhcyB0aGVyZSBhcmUgcm93cywgMTAgaW4gdGhpcyBjYXNlLiAgV2UncmUgYWdhaW4gdXNpbmcgUHl0aG9uJ3MgYXdlc29tZSBsaXN0IGNvbXByZWhlbnNpb25zIHRvIGFkZCB0aGVzZSByb3dzIHRvZ2V0aGVyLlxuXG5gYGBweXRob25cbmlucHV0X3Jvd3MgPSBbW3NnLklucHV0KHNpemU9KDE1LDEpLCBwYWQ9KDAsMCkpIGZvciBjb2wgaW4gcmFuZ2UoNCldIGZvciByb3cgaW4gcmFuZ2UoMTApXVxuYGBgXG5cblRoZSBmaXJzdCBwYXJ0IHNob3VsZCBsb29rIGZhbWlsaWFyIHNpbmNlIGl0IHdhcyBqdXN0IGRpc2N1c3NlZCBhcyBiZWluZyB3aGF0IGJ1aWxkcyBhIHNpbmdsZSByb3cuICBUbyBtYWtlIHRoZSBtYXRyaXgsIHdlIHNpbXBseSB0YWtlIHRoYXQgc2luZ2xlIHJvdyBhbmQgY3JlYXRlIDEwIG9mIHRoZW0sIGVhY2ggYmVpbmcgYSBsaXN0LlxuXG4jIyMgUHV0dGluZyBpdCBhbGwgdG9nZXRoZXJcblxuSGVyZSBpcyBvdXIgZmluYWwgcHJvZ3JhbSB0aGF0IHVzZXMgc2ltcGxlIGFkZGl0aW9uIHRvIGFkZCB0aGUgaGVhZGVycyBvbnRvIHRoZSB0b3Agb2YgdGhlIGlucHV0IG1hdHJpeC5cblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxuaGVhZGluZ3MgPSBbJ0hFQURFUiAxJywgJ0hFQURFUiAyJywgJ0hFQURFUiAzJywnSEVBREVSIDQnXVxuaGVhZGVyID0gIFtbc2cuVGV4dCgnICAnKV0gKyBbc2cuVGV4dChoLCBzaXplPSgxNCwxKSkgZm9yIGggaW4gaGVhZGluZ3NdXVxuXG5pbnB1dF9yb3dzID0gW1tzZy5JbnB1dChzaXplPSgxNSwxKSwgcGFkPSgwLDApKSBmb3IgY29sIGluIHJhbmdlKDQpXSBmb3Igcm93IGluIHJhbmdlKDEwKV1cblxubGF5b3V0ID0gaGVhZGVyICsgaW5wdXRfcm93c1xuXG53aW5kb3cgPSBzZy5XaW5kb3coJ1RhYmxlIFNpbXVsYXRpb24nLCBsYXlvdXQsIGZvbnQ9J0NvdXJpZXIgMTInKVxuZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbmBgYFxuXG4jIyBVc2VyIERlZmluZWQgRWxlbWVudHMgLyBDb21wb3VuZCBFbGVtZW50c1xuXG5cIlVzZXIgRGVmaW5lZCBFbGVtZW50c1wiIGFuZCBcIkNvbXBvdW5kIEVsZW1lbnRzXCIgYXJlIG9uZSBvciBtb3JlIFB5U2ltcGxlR1VJIEVsZW1lbnRzIHRoYXQgYXJlIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiBkZWZpbml0aW9uLiBJbiBhIGxheW91dCwgdGhleSBoYXZlIHRoZSBhcHBlYXJhbmNlIG9mIGJlaW5nIGEgY3VzdG9tIGVsZW1lbnRzIG9mIHNvbWUgdHlwZS5cblxuVXNlciBEZWZpbmVkIEVsZW1lbnRzIGFyZSBwYXJ0aWN1bGFybHkgdXNlZnVsIHdoZW4geW91IHNldCBhIGxvdCBvZiBwYXJhbWV0ZXJzIG9uIGFuIGVsZW1lbnQgdGhhdCB5b3UgdXNlIG92ZXIgYW5kIG92ZXIgaW4geW91ciBsYXlvdXQuXG5cbiMjIyBFeGFtcGxlIC0gQSBHcmlkIG9mIEJ1dHRvbnMgZm9yIENhbGN1bGF0b3IgQXBwXG5cbkxldCdzIHNheSB5b3UncmUgbWFraW5nIGEgY2FsY3VsYXRvciBhcHBsaWNhdGlvbiB3aXRoIGJ1dHRvbnMgdGhhdCBoYXZlIHRoZXNlIHNldHRpbmdzOlxuXG4qIGZvbnQgPSBIZWx2ZXRpY2EgMjBcbiogc2l6ZSA9IDUsMVxuKiBidXR0b24gY29sb3IgPSB3aGl0ZSBvbiBibHVlXG5cblRoZSBjb2RlIGZvciAqKm9uZSoqIG9mIHRoZXNlIGJ1dHRvbnMgaXM6XG5cbmBgYHB5dGhvblxuc2cuQnV0dG9uKCcxJywgYnV0dG9uX2NvbG9yPSgnd2hpdGUnLCAnYmx1ZScpLCBzaXplPSg1LCAxKSwgZm9udD0oXCJIZWx2ZXRpY2FcIiwgMjApKVxuYGBgXG5cbklmIHlvdSBoYXZlIDYgYnV0dG9ucyBhY3Jvc3MgYW5kIDUgZG93biwgeW91ciBsYXlvdXQgd2lsbCBoYXZlIDMwIG9mIHRoZXNlIGxpbmVzIG9mIHRleHQuXG5cbk9uZSByb3cgb2YgdGhlc2UgYnV0dG9ucyBjb3VsZCBiZSB3cml0dGVuOlxuYGBgcHl0aG9uXG4gICAgW3NnLkJ1dHRvbignMScsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2JsdWUnKSwgc2l6ZT0oNSwgMSksIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDIwKSksXG4gICAgIHNnLkJ1dHRvbignMicsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2JsdWUnKSwgc2l6ZT0oNSwgMSksIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDIwKSksXG4gICAgIHNnLkJ1dHRvbignMycsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2JsdWUnKSwgc2l6ZT0oNSwgMSksIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDIwKSksXG4gICAgIHNnLkJ1dHRvbignbG9nJywgYnV0dG9uX2NvbG9yPSgnd2hpdGUnLCAnYmx1ZScpLCBzaXplPSg1LCAxKSwgZm9udD0oXCJIZWx2ZXRpY2FcIiwgMjApKSxcbiAgICAgc2cuQnV0dG9uKCdsbicsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2JsdWUnKSwgc2l6ZT0oNSwgMSksIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDIwKSksXG4gICAgIHNnLkJ1dHRvbignLScsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2JsdWUnKSwgc2l6ZT0oNSwgMSksIGZvbnQ9KFwiSGVsdmV0aWNhXCIsIDIwKSldLFxuYGBgXG5cbkJ5IHVzaW5nIFVzZXIgRGVmaW5lZCBFbGVtZW50cywgeW91IGNhbiBzaWduaWZpY2FudGx5IHNob3J0ZW4geW91ciBsYXlvdXRzLiAgTGV0J3MgY2FsbCBvdXIgZWxlbWVudCBgQ0J0bmAuICBJdCB3b3VsZCBiZSB3cml0dGVuIGxpa2UgdGhpczpcblxuYGBgcHl0aG9uXG5kZWYgQ0J0bihidXR0b25fdGV4dCk6XG4gICAgcmV0dXJuIHNnLkJ1dHRvbihidXR0b25fdGV4dCwgYnV0dG9uX2NvbG9yPSgnd2hpdGUnLCAnYmx1ZScpLCBzaXplPSg1LCAxKSwgZm9udD0oXCJIZWx2ZXRpY2FcIiwgMjApKVxuYGBgXG5cblVzaW5nIHlvdXIgbmV3IGBDQnRuYCBFbGVtZW50LCB5b3UgY291bGQgcmV3cml0ZSB0aGUgcm93IG9mIGJ1dHRvbnMgYWJvdmUgYXM6XG5gYGBweXRob25cbltDQnRuKCcxJyksIENCdG4oJzInKSwgQ0J0bignMycpLCBDQnRuKCdsb2cnKSwgQ0J0bignbG4nKSwgQ0J0bignLScpXSxcbmBgYFxuXG5TZWUgdGhlIHRyZW1lbmRvdXMgYW1vdW50IG9mIGNvZGUgeW91IGRvIG5vdCBoYXZldyB0byB3cml0ZSEgIFVTRSB0aGlzIGNvbnN0cnVjdCBhbnkgdGltZSB5b3UgZmluZCB5b3Vyc2VsZiBjb3B5aW5nIGFuIGVsZW1lbnQgbWFueSB0aW1lcy4gIFxuXG5CdXQgbGV0J3Mgbm90IHN0b3AgdGhlcmUuICBcblxuU2luY2Ugd2UndmUgYmVlbiBkaXNjdXNzaW5nIGxpc3QgY29tcHJlaGVuc2lvbnMsIGxldCdzIHVzZSB0aGVtIHRvIGNyZWF0ZSB0aGlzIHJvdy4gIFRoZSB3YXkgdG8gZG8gdGhhdCBpcyB0byBtYWtlIGEgbGlzdCBvZiB0aGUgc3ltYm9scyB0aGF0IGdvIGFjcm9zcyB0aGUgcm93IG1ha2UgYSBsb29wIHRoYXQgc3RlcHMgdGhyb3VnaCB0aGF0IGxpc3QuICBUaGUgcmVzdWx0IGlzIGEgbGlzdCB0aGF0IGxvb2tzIGxpa2UgdGhpczpcblxuYGBgcHl0aG9uXG5bQ0J0bih0KSBmb3IgdCBpbiAoJzEnLCcyJywnMycsICdsb2cnLCAnbG4nLCAnLScpXSxcbmBgYFxuXG5UaGF0IGNvZGUgcHJvZHVjZXMgdGhlIHNhbWUgbGlzdCBhcyB0aGlzIG9uZSB3ZSBjcmVhdGVkIGJ5IGhhbmQ6XG5cbmBgYHB5dGhvblxuW0NCdG4oJzEnKSwgQ0J0bignMicpLCBDQnRuKCczJyksIENCdG4oJ2xvZycpLCBDQnRuKCdsbicpLCBDQnRuKCctJyldLFxuYGBgXG5cbiMjIyBDb21wb3VuZCBFbGVtZW50c1xuXG5KdXN0IGxpa2UgYSBgQnV0dG9uYCBjYW4gYmUgcmV0dXJuZWQgZnJvbSBhIFVzZXIgRGVmaW5lZCBFbGVtZW50LCBzbyBjYW4gbXVsdGlwbGUgRWxlbWVudHMuXG5cbkdvaW5nIGJhY2sgdG8gdGhlIFRvLURvIExpc3QgZXhhbXBsZSB3ZSBkaWQgZWFybGllciwgd2UgY291bGQgaGF2ZSBkZWZpbmVkIGEgVXNlciBEZWZpbmVkIEVsZW1lbnQgdGhhdCByZXByZXNlbnRlZCBhIFRvLURvIEl0ZW0gYW5kIHRoaXMgdGltZSB3ZSdyZSBhZGRpbmcgYSBjaGVja2JveC4gQSBzaW5nbGUgbGluZSBmcm9tIHRoaXMgbGlzdCB3aWxsIGJlOlxuXG4qIFRoZSBpdGVtICMgKGEgYFRleHRgIEVsZW1lbnQpXG4qIEEgYENoZWNrYm94YCBFbGVtZW50IHRvIGluZGljYXRlIGNvbXBsZXRlZFxuKiBBbiBgSW5wdXRgIEVsZW1lbnQgdG8gdHlwZSBpbiB3aGF0IHRvIGRvXG5cblRoZSBkZWZpbml0aW9uIG9mIG91ciBVc2VyIEVsZW1lbnQgaXMgdGhpcyBgVG9Eb0l0ZW1gIGZ1bmN0aW9uLiAgSXQgaXMgYSBzaW5nbGUgVXNlciBFbGVtZW50IHRoYXQgaXMgYSBjb21iaW5hdGlvbiBvZiAzIFB5U2ltcGxlR1VJIEVsZW1lbnRzLlxuXG5gYGBweXRob25cbmRlZiBUb0RvSXRlbShudW0pOlxuICAgIHJldHVybiBbc2cuVGV4dChmJ3tudW19LiAnKSwgc2cuQ0JveCgnJyksIHNnLkluKCldXG5gYGBcblxuVGhpcyBtYWtlcyBjcmVhdGluZyBhIGxpc3Qgb2YgNSB0by1kbyBpdGVtcyBkb3ducmlnaHQgdHJpdmlhbCB3aGVuIGNvbWJpbmVkIHdpdGggdGhlIGxpc3QgY29tcHJlaGVuc2lvbiB0ZWNobmlxdWVzIHdlIGxlYXJuZWQgZWFybGllci4gIEhlcmUgaXMgdGhlIGNvZGUgcmVxdWlyZWQgdG8gY3JlYXRlIDUgZW50cmllcyBpbiBvdXIgdG8tZG8gbGlzdC5cblxuYGBgcHl0aG9uXG5sYXlvdXQgPSBbVG9Eb0l0ZW0oeCkgZm9yIHggaW4gcmFuZ2UoMSw2KV1cbmBgYFxuXG5XZSBjYW4gdGhlbiBsaXRlcmFsbHkgYWRkIG9uIHRoZSBidXR0b25zXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1RvRG9JdGVtKHgpIGZvciB4IGluIHJhbmdlKDEsNildICsgW1tzZy5CdXR0b24oJ1NhdmUnKSwgc2cuQnV0dG9uKCdFeGl0JyldXVxuYGBgXG5cbkFuZCBoZXJlIGlzIG91ciBmaW5hbCBwcm9ncmFtXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5kZWYgVG9Eb0l0ZW0obnVtKTpcbiAgICByZXR1cm4gW3NnLlRleHQoZid7bnVtfS4gJyksIHNnLkNCb3goJycpLCBzZy5JbigpXVxuXG5sYXlvdXQgPSBbVG9Eb0l0ZW0oeCkgZm9yIHggaW4gcmFuZ2UoMSw2KV0gKyBbW3NnLkJ1dHRvbignU2F2ZScpLCBzZy5CdXR0b24oJ0V4aXQnKV1dXG5cbndpbmRvdyA9IHNnLldpbmRvdygnVG8gRG8gTGlzdCBFeGFtcGxlJywgbGF5b3V0KVxuZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5yZWFkKClcbmBgYFxuXG5BbmQgdGhlIHdpbmRvdyBpdCBjcmVhdGVzIGxvb2tzIGxpa2UgdGhpczpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vNDYxNjM1NTUvNjM2Mjg2ODItY2RhMjgyODAtYzVkYi0xMWU5LTkyYTQtNDRlYzJjYjZjY2Y5LnBuZylcblxuLS0tXG5cbiMgRWxlbWVudHNcblxuWW91IHdpbGwgZmluZCBpbmZvcm1hdGlvbiBvbiBFbGVtZW50cyBhbmQgYWxsIG90aGVyIGNsYXNzZXMgYW5kIGZ1bmN0aW9ucyBhcmUgbG9jYXRlZCBuZWFyIHRoZSBlbmQgb2YgdGhpcyBtYW51YWwuICBUaGV5IGFyZSBpbiAxIGxhcmdlIHNlY3Rpb24gb2YgdGhlIHJlYWRtZSwgaW4gYWxwaGFiZXRpY2FsIG9yZGVyIGZvciBlYXN5IGxvb2t1cHMuICBUaGlzIHNlY3Rpb24ncyBkaXNjdXNzaW9uIG9mIEVsZW1lbnRzIGlzIG1lYW50IHRvIHRlYWNoIHlvdSBob3cgdGhleSB3b3JrLiAgVGhlIG90aGVyIHNlY3Rpb24gaGFzIGRldGFpbGVkIGNhbGwgc2lnbmF0dXJlcyBhbmQgcGFyYW1ldGVyIGRlZmluaXRpb25zLlxuXG5cIkVsZW1lbnRzXCIgYXJlIHRoZSBidWlsZGluZyBibG9ja3MgdXNlZCB0byBjcmVhdGUgd2luZG93cy4gIFNvbWUgR1VJIEFQSXMgdXNlIHRoZSB0ZXJtIFwiV2lkZ2V0XCIgdG8gZGVzY3JpYmUgdGhlc2UgZ3JhcGhpYyBlbGVtZW50cy5cblxuLSBUZXh0XG4tIFNpbmdsZSBMaW5lIElucHV0XG4tIEJ1dHRvbnMgaW5jbHVkaW5nIHRoZXNlIHR5cGVzOlxuXHQtIEZpbGUgQnJvd3NlXG5cdC0gRm9sZGVyIEJyb3dzZVxuXHQtIENhbGVuZGFyIHBpY2tlclxuXHQtIERhdGUgQ2hvb3NlclxuXHQtIFJlYWQgd2luZG93XG5cdC0gQ2xvc2Ugd2luZG93IChcIkJ1dHRvblwiICYgYWxsIHNob3J0Y3V0IGJ1dHRvbnMpXG5cdC0gUmVhbHRpbWVcbi0gQ2hlY2tib3hlc1xuLSBSYWRpbyBCdXR0b25zXG4tIExpc3Rib3hcbi0gU2xpZGVyXG4tIE11bHRpLWxpbmUgVGV4dCBJbnB1dC9PdXRwdXRcbi0gTXVsdGktbGluZSBUZXh0IE91dHB1dCAobm90IG9uIHRraW50ZXIgdmVyc2lvbilcbi0gU2Nyb2xsLWFibGUgT3V0cHV0XG4tIFZlcnRpY2FsIFNlcGFyYXRvclxuLSBQcm9ncmVzcyBCYXJcbi0gT3B0aW9uIE1lbnVcbi0gTWVudVxuLSBCdXR0b25NZW51XG4tIEZyYW1lXG4tIENvbHVtblxuLSBHcmFwaFxuLSBJbWFnZVxuLSBUYWJsZVxuLSBUcmVlXG4tIFRhYiwgVGFiR3JvdXBcbi0gU3RhdHVzQmFyXG4tIFBhbmVcbi0gU3RyZXRjaCAoUXQgb25seSlcbi0gU2l6ZXIgKHBsYWluIFB5U2ltcGxlR1VJIG9ubHkpXG5cbiMjIENvbW1vbiBFbGVtZW50IFBhcmFtZXRlcnNcblxuU29tZSBwYXJhbWV0ZXJzIHRoYXQgeW91ICB3aWxsIHNlZSBvbiBhbG1vc3QgYWxsIEVsZW1lbnQgY3JlYXRpb24gY2FsbHMgaW5jbHVkZTpcblxuLSBrZXkgICAtICBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXNcbi0gdG9vbHRpcCAgIC0gSG92ZXIgeW91ciBtb3VzZSBvdmVyIHRoZSBlbGVtbnQgYW5kIHlvdSdsbCBnZXQgYSBwb3B1cCB3aXRoIHRoaXMgdGV4dFxuLSBzaXplICAtICh3aWR0aCwgaGVpZ2h0KSAtIHVzdWFsbHkgbWVhc3VyZWQgaW4gY2hhcmFjdGVycy13aWRlLCByb3dzLWhpZ2guICBTb21ldGltZXMgdGhleSBtZWFuIHBpeGVsc1xuLSBmb250IC0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjXG4tIGNvbG9ycyAtIENvbG9yIG5hbWUgb3IgI1JSR0dCQiBzdHJpbmdcbi0gcGFkIC0gQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50XG4tIGVuYWJsZV9ldmVudHMgLSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHNcbi0gdmlzaWJsZSAtIE1ha2UgZWxlbWVudHMgYXBwZWFyIGFuZCBkaXNhcHBlYXJcblxuIyMjIyBUb29sdGlwXG5cblRvb2x0aXBzIGFyZSB0ZXh0IGJveGVzIHRoYXQgcG9wdXAgbmV4dCB0byBhbiBlbGVtZW50IGlmIHlvdSBob2xkIHlvdXIgbW91c2Ugb3ZlciB0aGUgdG9wIG9mIGl0LiAgSWYgeW91IHdhbnQgdG8gYmUgZXh0cmEga2luZCB0byB5b3VyIHdpbmRvdydzIHVzZXIsIHRoZW4geW91IGNhbiBjcmVhdGUgdG9vbHRpcHMgZm9yIHRoZW0gYnkgc2V0dGluZyB0aGUgcGFyYW1ldGVyIGB0b29sdGlwYCB0byBzb21lIHRleHQgc3RyaW5nLiAgWW91IHdpbGwgbmVlZCB0byBzdXBwbHkgeW91ciBvd24gbGluZSBicmVha3MgLyB0ZXh0IHdyYXBwaW5nLiAgSWYgeW91IGRvbid0IHdhbnQgdG8gbWFudWFsbHkgYWRkIHRoZW0sIHRoZW4gdGFrZSBhIGxvb2sgYXQgdGhlIHN0YW5kYXJkIGxpYnJhcnkgcGFja2FnZSBgdGV4dHdyYXBgLlxuXG5Ub29sdGlwcyBhcmUgb25lIG9mIHRob3NlIFwicG9saXNoXCIgaXRlbXMgdGhhdCByZWFsbHkgZHJlc3MtdXAgYSBHVUkgYW5kIHNob3cncyBhIGxldmVsIG9mIHNvcGhpc3RpY2F0aW9uLiAgR28gYWhlYWQsIGltcHJlc3MgcGVvcGxlLCB0aHJvdyBzb21lIHRvb2x0aXBzIGludG8geW91ciBHVUkuICBZb3UgY2FuIGNoYW5nZSB0aGUgY29sb3Igb2YgdGhlIGJhY2tncm91bmQgb2YgdGhlIHRvb2x0aXAgb24gdGhlIHRraW50ZXIgdmVyc2lvbiBvZiBQeVNpbXBsZUdVSSBieSBzZXR0aW5nIGBUT09MVElQX0JBQ0tHUk9VTkRfQ09MT1JgIHRvIHRoZSBjb2xvciBzdHJpbmcgb2YgeW91ciBjaG9pY2UuICBUaGUgZGVmYXVsdCB2YWx1ZSBmb3IgdGhlIGNvbG9yIGlzOlxuXG5gVE9PTFRJUF9CQUNLR1JPVU5EX0NPTE9SID0gXCIjZmZmZmUwXCJgXG5cbiMjIyMgU2l6ZVxuXG5JbmZvIG9uIHNldHRpbmcgZGVmYXVsdCBlbGVtZW50IHNpemVzIGlzIGRpc2N1c3NlZCBpbiB0aGUgV2luZG93IHNlY3Rpb24gYWJvdmUuXG5cblNwZWNpZmllcyB0aGUgYW1vdW50IG9mIHJvb20gcmVzZXJ2ZWQgZm9yIHRoZSBFbGVtZW50LiAgRm9yIGVsZW1lbnRzIHRoYXQgYXJlIGNoYXJhY3RlciBiYXNlZCwgc3VjaCBhIFRleHQsIGl0IGlzICgjIGNoYXJhY3RlcnMsICMgcm93cykuICBTb21ldGltZXMgaXQgaXMgYSBwaXhlbCBtZWFzdXJlbWVudCBzdWNoIGFzIHRoZSBJbWFnZSBlbGVtZW50LiAgQW5kIHNvbWV0aW1lcyBhIG1peCBsaWtlIG9uIHRoZSBTbGlkZXIgZWxlbWVudCAoY2hhcmFjdGVycyBsb25nIGJ5IHBpeGVscyB3aWRlKS4gIFxuXG5Tb21lIGVsZW1lbnRzLCBUZXh0IGFuZCBCdXR0b24sIGhhdmUgYW4gYXV0by1zaXplIHNldHRpbmcgdGhhdCBpcyBgb25gIGJ5IGRlZmF1bHQuIEl0IHdpbGwgc2l6ZSB0aGUgZWxlbWVudCBiYXNlZCBvbiB0aGUgY29udGVudHMuICBUaGUgcmVzdWx0IGlzIHRoYXQgYnV0dG9ucyBhbmQgdGV4dCBmaWVsZHMgd2lsbCBiZSB0aGUgc2l6ZSBvZiB0aGUgc3RyaW5nIGNyZWF0aW5nIHRoZW0uICBZb3UgY2FuIHR1cm4gaXQgb2ZmLiAgRm9yIGV4YW1wbGUsIGZvciBCdXR0b25zLCB0aGUgZWZmZWN0IHdpbGwgYmUgdGhhdCBhbGwgYnV0dG9ucyB3aWxsIGJlIHRoZSBzYW1lIHNpemUgaW4gdGhhdCB3aW5kb3cuXG5cbiMjIyMgRWxlbWVudCBTaXplcyAtIE5vbi10a2ludGVyIFBvcnRzIChRdCwgV3hQeXRob24sIFdlYilcblxuSW4gbm9uLXRraW50ZXIgcG9ydHMgeW91IGNhbiBzZXQgdGhlIHNwZWNpZmljIGVsZW1lbnQgc2l6ZXMgaW4gMiB3YXlzLiAgT25lIGlzIHRvIHVzZSB0aGUgbm9ybWFsIGBzaXplYCBwYXJhbWV0ZXIgbGlrZSB5b3UncmUgdXNlZCB0byB1c2luZy4gIFRoaXMgd2lsbCBiZSBpbiBjaGFyYWN0ZXJzIGFuZCByb3dzLlxuXG5UaGUgb3RoZXIgd2F5IGlzIHRvIHVzZSBhIG5ldyBwYXJhbWV0ZXIsIGBzaXplX3B4YC4gIFRoaXMgcGFyYW1ldGVyIGFsbG93cyB5b3UgdG8gc3BlY2lmeSB0aGUgc2l6ZSBkaXJlY3RseSBpbiBwaXhlbHMuICBBIHNldHRpbmcgb2YgYHNpemVfcHg9KDMwMCwyMDApYCB3aWxsIGNyZWF0ZSBhbiBFbGVtZW50IHRoYXQgaXMgMzAwIHggMjAwIHBpeGVscy5cblxuQWRkaXRpb25hbGx5LCB5b3UgY2FuIGFsc28gaW5kaWNhdGUgcGl4ZWxzIHVzaW5nIHRoZSBgc2l6ZWAgcGFyYW1ldGVyLCAqKmlmIHRoZSBzaXplIGV4Y2VlZHMgdGhlIHRocmVzaG9sZCBmb3IgY29udmVyc2lvbi4qKiAgV2hhdCBkb2VzIHRoYXQgbWVhbj8gIEl0IG1lYW5zIGlmIHlvdXIgd2lkdGggaXMgPiAyMCAoYERFRkFVTFRfUElYRUxfVE9fQ0hBUlNfQ1VUT0ZGYCksIHRoZW4gaXQgaXMgYXNzdW1lZCB5b3UncmUgdGFsa2luZyBwaXhlbHMsIG5vdCBjaGFyYWN0ZXJzLiAgSG93ZXZlciwgc29tZSBvZiB0aGUgXCJub3JtYWxseSBsYXJnZVwiIEVsZW1lbnRzIGhhdmUgYSBjdXRvZmYgdmFsdWUgb2YgMTAwLiAgVGhlc2UgaW5jbHVkZSwgZm9yIGV4YW1wbGUsIHRoZSBgTXVsdGxpbmVgIGFuZCBgT3V0cHV0YCBlbGVtZW50cy5cblxuSWYgeW91J3JlIGN1cmlvdXMgYWJvdXQgdGhlIG1hdGggdXNlZCB0byBkbyB0aGUgY2hhcmFjdGVyIHRvIHBpeGVscyBjb252ZXJzaW9uLCBpdCdzIHF1aXRlIGNydWRlLCBidXQgZnVuY3Rpb25hbC4gIFRoZSBjb252ZXJzaW9uIGlzIGNvbXBsZXRlZCB3aXRoIHRoZSBoZWxwIG9mIHRoaXMgdmFyaWFibGU6XG5cbmBERUZBVUxUX1BJWEVMU19UT19DSEFSU19TQ0FMSU5HID0gKDEwLDI2KWBcblxuVGhlIGNvbnZlcnNpb24gc2ltcGx5IHRha2VzIHlvdXIgYHNpemVbMF1gIGFuZCBtdWx0aXBsaWVzIGJ5IDEwIGFuZCB5b3VyIGBzaXplWzFdYCBhbmQgbXVsdGlwbGllcyBpdCBieSAyNi5cblxuIyMjIyBDb2xvcnNcblxuQSBzdHJpbmcgcmVwcmVzZW50aW5nIGNvbG9yLiAgQW55dGltZSBjb2xvcnMgYXJlIGludm9sdmVkLCB5b3UgY2FuIHNwZWNpZnkgdGhlIHRraW50ZXIgY29sb3IgbmFtZSBzdWNoIGFzICdsaWdodGJsdWUnIG9yIGFuIFJHQiBoZXggdmFsdWUgJyNSUkdHQkInLiAgRm9yIGJ1dHRvbnMsIHRoZSBjb2xvciBwYXJhbWV0ZXIgaXMgYSB0dXBsZSAodGV4dCBjb2xvciwgYmFja2dyb3VuZCBjb2xvcilcblxuQW55dGltZSBjb2xvcnMgYXJlIHdyaXR0ZW4gYXMgYSB0dXBsZSBpbiBQeVNpbXBsZUdVSSwgdGhlIHdheSB0byBmaWd1cmUgb3V0IHdoaWNoIGNvbG9yIGlzIHRoZSBiYWNrZ3JvdW5kIGlzIHRvIHJlcGxhY2UgdGhlIFwiLFwiIHdpdGggdGhlIHdvcmQgXCJvblwiLiAgKCd3aGl0ZScsICdyZWQnKSBzcGVjaWZpZXMgYSBidXR0b24gdGhhdCBpcyBcIndoaXRlIG9uIHJlZFwiLiAgV29ya3MgYW55d2hlcmUgdGhlcmUncyBhIGNvbG9yIHR1cGxlLlxuXG4jIyMjIFBhZFxuXG5UaGUgYW1vdW50IG9mIHJvb20gYXJvdW5kIHRoZSBlbGVtZW50IGluIHBpeGVscy4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgKDUsMykgd2hpY2ggbWVhbnMgbGVhdmUgNSBwaXhlbHMgb24gZWFjaCBzaWRlIG9mIHRoZSB4LWF4aXMgYW5kIDMgcGl4ZWxzIG9uIGVhY2ggc2lkZSBvZiB0aGUgeS1heGlzLiAgWW91IGNhbiBjaGFuZ2UgdGhpcyBvbiBhIGdsb2JhbCBiYXNpcyB1c2luZyBhIGNhbGwgdG8gU2V0T3B0aW9ucywgb3Igb24gYW4gZWxlbWVudCBiYXNpcy5cblxuSWYgeW91IHdhbnQgbW9yZSBwaXhlbHMgb24gb25lIHNpZGUgdGhhbiB0aGUgb3RoZXIsIHRoZW4geW91IGNhbiBzcGxpdCB0aGUgbnVtYmVyIGludG8gMiBudW1iZXIuICBJZiB5b3Ugd2FudCAyMDAgcGl4ZWxzIG9uIHRoZSBsZWZ0IHNpZGUsIGFuZCAzIHBpeGVscyBvbiB0aGUgcmlnaHQsIHRoZSBwYWQgd291bGQgYmUgKCgyMDAsMyksIDMpLiAgSW4gdGhpcyBleGFtcGxlLCBvbmx5IHRoZSB4LWF4aXMgaXMgc3BsaXQuXG5cbiMjIyMgRm9udFxuXG5TcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBhbmQgc3R5bGUuICBGb250IGZhbWlsaWVzIG9uIFdpbmRvd3MgaW5jbHVkZTpcbiogQXJpYWxcbiogQ291cmllclxuKiBDb21pYyxcbiogRml4ZWRzeXNcbiogVGltZXNcbiogVmVyZGFuYVxuKiBIZWx2ZXRpY2EgKHRoZSBkZWZhdWx0IEkgdGhpbmspXG5cblRoZSBmb250cyB3aWxsIHZhcnkgZnJvbSBzeXN0ZW0gdG8gc3lzdGVtLCBob3dldmVyLCBUayA4LjAgYXV0b21hdGljYWxseSBtYXBzIENvdXJpZXIsIEhlbHZldGljYSBhbmQgVGltZXMgdG8gdGhlaXIgY29ycmVzcG9uZGluZyBuYXRpdmUgZmFtaWx5IG5hbWVzIG9uIGFsbCBwbGF0Zm9ybXMuICBBbHNvLCBmb250IGZhbWlsaWVzIGNhbm5vdCBjYXVzZSBhIGZvbnQgc3BlY2lmaWNhdGlvbiB0byBmYWlsIG9uIFRrIDguMCBhbmQgZ3JlYXRlci5cblxuSWYgeW91IHdpc2ggdG8gbGVhdmUgdGhlIGZvbnQgZmFtaWx5IHNldCB0byB0aGUgZGVmYXVsdCwgeW91IGNhbiBwdXQgYW55dGhpbmcgbm90IGEgZm9udCBuYW1lIGFzIHRoZSBmYW1pbHkuICBUaGUgUHlTaW1wbGVHVUkgRGVtbyBwcm9ncmFtcyBhbmQgZG9jdW1lbnRhdGlvbiB1c2UgdGhlIGZhbWlseSAnQW55JyB0byBkZW1vbnN0cmF0ZSB0aGlzIGZhY3QuLiAgWW91IGNvdWxkIHVzZSBcImRlZmF1bHRcIiBpZiB0aGF0J3MgbW9yZSBjbGVhciB0byB5b3UuXG5cblRoZXJlIGFyZSAyIGZvcm1hdHMgdGhhdCBjYW4gYmUgdXNlZCB0byBzcGVjaWZ5IGEgZm9udC4uLiBhIHN0cmluZywgYW5kIGEgdHVwbGVcblR1cGxlIC0gKGZhbWlseSwgc2l6ZSwgc3R5bGVzKVxuU3RyaW5nIC0gXCJGYW1pbHkgU2l6ZSBTdHlsZXNcIlxuXG5UbyBzcGVjaWZ5IGFuIHVuZGVybGluZWQsIEhlbHZldGljYSBmb250IHdpdGggYSBzaXplIG9mIDE1IHRoZSB2YWx1ZXM6XG4oJ0hlbHZldGljYScsIDE1LCAndW5kZXJsaW5lIGl0YWxpY3MnKVxuJ0hlbHZldGljYSAxNSB1bmRlcmxpbmUgaXRhbGljcydcblxuIyMjIyBLZXlcblxuSWYgeW91IGFyZSBnb2luZyB0byBkbyBhbnl0aGluZyBiZXlvbmQgdGhlIGJhc2ljIHN0dWZmIHdpdGggeW91ciBHVUksIHRoZW4geW91IG5lZWQgdG8gdW5kZXJzdGFuZCBrZXlzLlxuS2V5cyBhcmUgYSB3YXkgZm9yIHlvdSB0byBcInRhZ1wiIGFuIEVsZW1lbnQgd2l0aCBhIHZhbHVlIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGlkZW50aWZ5IHRoYXQgZWxlbWVudC4gIEFmdGVyIHlvdSBwdXQgYSBrZXkgaW4gYW4gZWxlbWVudCdzIGRlZmluaXRpb24sIHRoZSB2YWx1ZXMgcmV0dXJuZWQgZnJvbSBSZWFkIHdpbGwgdXNlIHRoYXQga2V5IHRvIHRlbGwgeW91IHRoZSB2YWx1ZS4gIEZvciBleGFtcGxlLCBpZiB5b3UgaGF2ZSBhbiBpbnB1dCBmaWVsZDpcblxuYElucHV0KGtleT0nbXlrZXknKWBcblxuQW5kIHlvdXIgcmVhZCBsb29rcyBsaWtlIHRoaXM6IGBldmVudCwgdmFsdWVzID0gUmVhZCgpYFxuXG5UaGVuIHRvIGdldCB0aGUgaW5wdXQgdmFsdWUgZnJvbSB0aGUgcmVhZCBpdCB3b3VsZCBiZTogYHZhbHVlc1snbXlrZXknXWBcblxuWW91IGFsc28gdXNlIHRoZSBzYW1lIGtleSBpZiB5b3Ugd2FudCB0byBjYWxsIFVwZGF0ZSBvbiBhbiBlbGVtZW50LiAgUGxlYXNlIHNlZSB0aGUgc2VjdGlvbiBiZWxvdyBvbiBVcGRhdGVzIHRvIHVuZGVyc3RhbmQgdGhhdCB1c2FnZS5cblxuS2V5cyBjYW4gYmUgQU5ZVEhJTkcuICBMZXQncyBzYXkgeW91IGhhdmUgYSB3aW5kb3cgd2l0aCBhIGdyaWQgb2YgaW5wdXQgZWxlbWVudHMuICBZb3UgY291bGQgdXNlIHRoZWlyIHJvdyBhbmQgY29sdW1uIGxvY2F0aW9uIGFzIGEga2V5IChhIHR1cGxlKVxuXG5ga2V5PShyb3csIGNvbClgXG5cblRoZW4gd2hlbiB5b3UgcmVhZCB0aGUgYHZhbHVlc2AgdmFyaWFibGUgdGhhdCdzIHJldHVybmVkIHRvIHlvdSBmcm9tIGNhbGxpbmcgYFdpbmRvdy5SZWFkKClgLCB0aGUga2V5IGluIHRoZSBgdmFsdWVzYCB2YXJpYWJsZSB3aWxsIGJlIHdoYXRldmVyIHlvdSB1c2VkIHRvIGNyZWF0ZSB0aGUgZWxlbWVudC4gSW4gdGhpcyBjYXNlIHlvdSB3b3VsZCByZWFkIHRoZSB2YWx1ZXMgYXM6XG5gdmFsdWVzWyhyb3csIGNvbCldYFxuXG5Nb3N0IG9mIHRoZSB0aW1lIHRoZXkgYXJlIHNpbXBsZSB0ZXh0IHN0cmluZ3MuICBJbiB0aGUgRGVtbyBQcm9ncmFtcywga2V5cyBhcmUgd3JpdHRlbiB3aXRoIHRoaXMgY29udmVudGlvbjpcbmBfS0VZX05BTUVfYCAodW5kZXJzY29yZSBhdCBiZWdpbm5pbmcgYW5kIGVuZCB3aXRoIGFsbCBjYXBzIGxldHRlcnMpIG9yICctS0VZX05BTUUtLiAgWW91IGRvbid0IGhhdmUgdG8gZm9sbG93IHRoYXQgY29udmVudGlvbi4gIEl0J3MgdXNlZCBzbyB0aGF0IHlvdSBjYW4gcXVpY2tseSBzcG90IHdoZW4gYSBrZXkgaXMgYmVpbmcgdXNlZC5cblxuVG8gZmluZCBhbiBlbGVtZW50J3Mga2V5LCBhY2Nlc3MgdGhlIG1lbWJlciB2YXJpYWJsZSBgLktleWAgZm9yIHRoZSBlbGVtZW50LiAgVGhpcyBhc3N1bWVzIHlvdSd2ZSBnb3QgdGhlIGVsZW1lbnQgaW4gYSB2YXJpYWJsZSBhbHJlYWR5LiBcblxuYGBgcHl0aG9uXG50ZXh0X2VsZW0gPSBzZy5UZXh0KCcnLCBrZXk9Jy1URVhULScpXG5cbnRoZV9rZXkgPSB0ZXh0X2VsZW0uS2V5XG5gYGBcblxuIyMjIyBWaXNpYmxlXG5cbkJlZ2lubmluZyBpbiB2ZXJzaW9uIDMuMTcgeW91IGNhbiBjcmVhdGUgRWxlbWVudHMgdGhhdCBhcmUgaW5pdGlhbGx5IGludmlzaWJsZSB0aGF0IHlvdSBjYW4gbGF0ZXIgbWFrZSB2aXNpYmxlLlxuXG5UbyBjcmVhdGUgYW4gaW52aXNpYmxlIEVsZW1lbnQsIHBsYWNlIHRoZSBlbGVtZW50IGluIHRoZSBsYXlvdXQgbGlrZSB5b3Ugbm9ybWFsbHkgd291bGQgYW5kIGFkZCB0aGUgcGFyYW1ldGVyIFxuXG5gdmlzaWJsZT1GYWxzZWAuXG5cbkxhdGVyIHdoZW4geW91IHdhbnQgdG8gbWFrZSB0aGF0IEVsZW1lbnQgdmlzaWJsZSB5b3Ugc2ltcGx5IGNhbGwgdGhlIEVsZW1lbnQncyBgVXBkYXRlYCBtZXRob2QgYW5kIHBhc3MgaW4gdGhlIHBhcmFtZXRlciBgdmlzaWJsZT1UcnVlYFxuXG5UaGlzIGZlYXR1cmUgd29ya3MgYmVzdCBvbiBRdCwgYnV0IGRvZXMgd29yayBvbiB0aGUgdGtpbnRlciB2ZXJzaW9uIGFzIHdlbGwuICBUaGUgdmlzaWJsZSBwYXJhbWV0ZXIgY2FuIGFsc28gYmUgdXNlZCB3aXRoIHRoZSBDb2x1bW4gYW5kIEZyYW1lIFwiY29udGFpbmVyXCIgRWxlbWVudHMuXG5cbiMjIFNob3J0Y3V0IEZ1bmN0aW9ucyAvIE11bHRpcGxlIEZ1bmN0aW9uIE5hbWVzXG5cblBlcmhhcHMgbm90IHRoZSBiZXN0IGlkZWEsIGJ1dCBvbmUgdGhhdCdzIGRvbmUgbm9uZSB0aGUgbGVzcyBpcyB0aGUgbmFtaW5nIG9mIG1ldGhvZHMgYW5kIGZ1bmN0aW9ucy4gIFNvbWUgb2YgdGhlIG1vcmUgXCJIZWF2aWx5IFRyYXZlbGxlZCBFbGVtZW50c1wiIChhbmQgbWV0aG9kcy9mdW5jdGlvbnMpIGhhdmUgXCJzaG9ydGN1dHNcIi4gIFxuXG5JbiBvdGhlciB3b3JkcywgSSBhbSBsYXp5IGFuZCBkb24ndCBsaWtlIHRvIHR5cGUuIFRoZSByZXN1bHQgaXMgbXVsdGlwbGUgd2F5cyB0byBkbyBleGFjdGx5IHRoZSBzYW1lIHRoaW5nLiAgVHlwaWNhbGx5LCB0aGUgRGVtbyBQcm9ncmFtcyBhbmQgb3RoZXIgZXhhbXBsZXMgdXNlIHRoZSBmdWxsIG5hbWUsIG9yIGF0IGxlYXN0IGEgbG9uZ2VyIG5hbWUuICBUaGFua2Z1bGx5IFB5Q2hhcm0gd2lsbCBzaG93IHlvdSB0aGUgc2FtZSBkb2N1bWVudGF0aW9uIHJlZ2FyZGxlc3Mgd2hpY2ggeW91IHVzZS5cblxuVGhpcyBlbmFibGVzIHlvdSB0byBjb2RlIG11Y2ggcXVpY2tlciBvbmNlIHlvdSBhcmUgdXNlZCB0byB1c2luZyB0aGUgU0RLLiAgVGhlIFRleHQgRWxlbWVudCwgZm9yIGV4YW1wbGUsIGhhcyAzIGRpZmZlcmVudCBuYW1lcyBgVGV4dGAsIGBUeHRgIG9yYFRgLiAgSW5wdXRUZXh0IGNhbiBhbHNvIGJlIHdyaXR0ZW4gYElucHV0YCBvciBgSW5gIC4gIFRoZSBzaG9ydGN1dHMgYXJlbid0IGxpbWl0ZWQgdG8gRWxlbWVudHMuICBUaGUgYFdpbmRvd2AgbWV0aG9kIGBXaW5kb3cuRmluZEVsZW1lbnRgIGNhbiBiZSB3cml0dGVuIGFzIGBXaW5kb3cuRWxlbWVudGAgYmVjYXVzZSBpdCdzIHN1Y2ggYSBjb21tb25seSB1c2VkIGZ1bmN0aW9uLiAgXG5cbkl0J3MgYW4gb25nb2luZyB0aGluZy4gIElmIHlvdSBkb24ndCBzdGF5IHVwIHRvIGRhdGUgYW5kIG9uZSBvZiB0aGUgbmV3ZXIgc2hvcnRjdXRzIGlzIHVzZWQsIHlvdSdsbCBuZWVkIHRvIHNpbXBseSByZW5hbWUgdGhhdCBzaG9ydGN1dC4gXG5cbiMjIFRleHQgRWxlbWVudCB8IGBUID09IFR4dCA9PSBUZXh0YFxuXG5CYXNpYyBFbGVtZW50LiBJdCBkaXNwbGF5cyB0ZXh0LlxuXG5gYGBweXRob25cbmxheW91dCA9IFtcbiAgICAgICAgICAgIFtzZy5UZXh0KCdUaGlzIGlzIHdoYXQgYSBUZXh0IEVsZW1lbnQgbG9va3MgbGlrZScpXSxcbiAgICAgICAgIF1cbmBgYFxuIVtzaW1wbGUgdGV4dF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTk4NzctZTlkOTdiMDAtYWVjMy0xMWU4LTlkMjQtYjQ0MDVlZTRhMTQ4LmpwZylcblxuLS0tXG5cbiMjIGBXaW5kb3cuRmluZEVsZW1lbnQoa2V5KWAgU2hvcnRjdXQgYFdpbmRvd1trZXldYFxuXG5UaGVyZSdzIGJlZW4gYSBmYW50YXN0aWMgbGVhcCBmb3J3YXJkIGluIG1ha2luZyBQeVNpbXBsZUdVSSBjb2RlIG1vcmUgY29tcGFjdC4gIFxuXG5JbnN0ZWFkIG9mIHdyaXRpbmc6XG5gYGBweXRob25cbndpbmRvdy5GaW5kRWxlbWVudChrZXkpLlVwZGF0ZShuZXdfdmFsdWUpXG4gYGBgXG5cbllvdSBjYW4gbm93IHdyaXRlIGl0IGFzOlxuXG5gYGBweXRob25cbndpbmRvd1trZXldLlVwZGF0ZShuZXdfdmFsdWUpXG4gYGBgXG5cblRoaXMgY2hhbmdlIGhhcyBiZWVuIHJlbGVhc2VkIHRvIFB5UEkgZm9yIFB5U2ltcGxlR1VJXG5JdCAqKmhhcyBub3QgeWV0IGJlZW4gcmVsZWFzZWQgdG8gUHlQSSoqIGZvciB0aGUgb3RoZXIgcG9ydHMgb2YgUHlTaW1wbGVHVUkgKFF0LCBXeCwgV2ViKS4gIFlvdSdsbCBmaW5kIHRoZSBjaGFuZ2Ugb24gR2l0SHViIGhvd2V2ZXIgZm9yIFF0IGFuZCBXZWIgKHN0aWxsIHdvcmtpbmcgb24gV3gpLlxuXG5NQU5ZIFRoYW5rcyBpcyBvd2VkIHRvIHRoZSBwZXJzb24gdGhhdCBzdWdnZXN0ZWQgYW5kIHNob3dlZCBtZSBob3cgdG8gZG8gdGhpcy4gIEl0J3MgYW4gaW5jcmVkaWJsZSBmaW5kLlxuXG4jIyBgRWxlbWVudC5VcGRhdGUoKWAgU2hvcnRjdXQgYEVsZW1lbnQoKWBcblxuVGhpcyBoYXMgdG8gYmUgb25lIG9mIHRoZSBzdHJhbmdlc3Qgc3ludGFjdGljYWwgY29udHJ1Y3RzIEkndmUgZXZlciB3cml0dGVuLiAgXG5cbkl0IGlzIGJlc3QgdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRoIGBGaW5kRWxlbWVudGAgKHNlZSBwcmlvciBzZWN0aW9uIG9uIGhvdyB0byBzaG9ydGN1dCBgRmluZEVsZW1lbnRgKS4gIFdoZW4gdXNlZCB3aXRoIHRoZSBgRmluZEVsZW1lbnRgIHNob3J0Y3V0LCB0aGUgY29kZSB0byB1cGRhdGUgYW4gZWxlbWVudCBjYW4gYmUgc2hvcnRlbmVkIHRvIHRoaXMgdW51c3VhbCBsb29raW5nIGNhbGw6XG5cbmBgYHB5dGhvblxud2luZG93W2tleV0obmV3X3ZhbHVlKVxuYGBgXG5cblllcywgdGhhdCdzIGEgdmFsaWQgc3RhdGVtZW50IGluIFB5dGhvbi5cblxuSXQgaXMgY29uZnVzaW5nIGxvb2tpbmcgaG93ZXZlciBzbyB3aGVuIHVzZWQsIGl0IG1pZ2h0IGJlIGEgZ29vZCBpZGVhIHRvIHdyaXRlIGEgY29tbWVudCBhdCB0aGUgZW5kIG9mIHRoZSBzdGF0ZW1lbnQgdG8gaGVscCBvdXQgdGhlIHBvb3IgYmVnaW5uZXIgcHJvZ3JhbW1lciBjb21pbmcgYWxvbmcgYmVoaW5kIHlvdS5cblxuU3RpbGwgZGViYXRpbmcgd2hldGhlciB0byBiZWdpbiB0byBpbW1lZGlhdGVseSB1c2UgdGhpcyBmb3IgYWxsIGRlbW9zIGdvaW5nIGZvcndhcmQgYW5kIGFsc28gaWYgc2hvdWxkIGdvIGJhY2sgYW5kIGNoYW5nZSB0aGUgZG9jcyBhbmQgZGVtbyBwcm9ncmFtcywgZXNzZW50aWFsbHkgcmVtb3ZpbmcgdGhlIG90aGVyIHRlY2huaXF1ZSBmb3IgZG9pbmcgYW4gdXBkYXRlLlxuXG5JdCBkb2VzIG5vdCBoYXZlIHRvIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIGBGaW5kRWxlbWVudGAuICBUaGUgY2FsbCB3b3JrcyBvbiBhbnkgcHJldmlvdXNseSBtYWRlIEVsZW1lbnQuICBTb21ldGltZXMgZWxlbWVudHMgYXJlIGNyZWF0ZWQsIHN0b3JlZCBpbnRvIGEgdmFyaWFibGUgYW5kIHRoZW4gdGhhdCB2YXJpYWJsZSBpcyB1c2VkIGluIHRoZSBsYXlvdXQuICBGb3IgZXhhbXBsZS5cblxuYGBgcHl0aG9uXG5ncmFwaF9lbGVtZW50ID0gc2cuR3JhcGgoLi4uLi4uIGxvdHMgb2YgcGFybXMgLi4uLi4uKVxuXG5sYXlvdXQgPSBbW2dyYXBoX2VsZW1lbnRdXVxuLlxuLlxuLlxuZ3JhcGhfZWxlbWVudChiYWNrZ3JvdW5kX2NvbG9yPSdibHVlJykgICAgICAjIHRoaXMgY2FsbHMgR3JhcGguVXBkYXRlIGZvciB0aGUgcHJldmlvdXNseSBkZWZpbmVkIGVsZW1lbnRcbmBgYFxuXG5Ib3BlZnVsbHkgdGhpcyBpc24ndCB0b28gY29uZnVzaW5nLiAgTm90ZSB0aGF0IHRoZSBtZXRob2RzIHRoZXNlIHNob3J0Y3V0cyByZXBsYWNlIHdpbGwgbm90IGJlIHJlbW92ZWQuICBZb3UgY2FuIGNvbnRpbnVlIHRvIHVzZSB0aGUgb2xkIGNvbnN0cnVjdHMgd2l0aG91dCBjaGFuZ2VzLlxuXG4tLS1cblxuIyMjIEZvbnRzXG5cbkFscmVhZHkgZGlzY3Vzc2VkIGluIHRoZSBjb21tb24gcGFyYW1ldGVycyBzZWN0aW9uLiAgRWl0aGVyIHN0cmluZyBvciBhIHR1cGxlLlxuXG4jIyMgQ29sb3IgaW4gUHlTaW1wbGVHVUkgYXJlIGluIG9uZSBvZiB0d28gZm9ybWF0cyAtIGNvbG9yIG5hbWUgb3IgUkdCIHZhbHVlLlxuXG5JbmRpdmlkdWFsIGNvbG9ycyBhcmUgc3BlY2lmaWVkIHVzaW5nIGVpdGhlciB0aGUgY29sb3IgbmFtZXMgYXMgZGVmaW5lZCBpbiB0a2ludGVyIG9yIGFuIFJHQiBzdHJpbmcgb2YgdGhpcyBmb3JtYXQ6XG5cblx0XCIjUlJHR0JCXCIgICAgICAgIG9yICAgICAgICAgIFwiZGFya2JsdWVcIlxuXG4jIyMgYGF1dG9fc2l6ZV90ZXh0ICAgICAgYFxuQSBgVHJ1ZWAgdmFsdWUgZm9yIGBhdXRvX3NpemVfdGV4dGAsIHdoZW4gcGxhY2VkIG9uIFRleHQgRWxlbWVudHMsIGluZGljYXRlcyB0aGF0IHRoZSB3aWR0aCBvZiB0aGUgRWxlbWVudCBzaG91bGQgYmUgc2hydW5rIGRvIHRoZSB3aWR0aCBvZiB0aGUgdGV4dC4gICBUaGUgZGVmYXVsdCBzZXR0aW5nIGlzIFRydWUuICBZb3UgbmVlZCB0byByZW1lbWJlciB0aGlzIHdoZW4geW91IGNyZWF0ZSBgVGV4dGAgZWxlbWVudHMgdGhhdCB5b3UgYXJlIHVzaW5nIGZvciBvdXRwdXQuICBcblxuYFRleHQoJycsIGtleT0nX1RYVE9VVF8pYCB3aWxsIGNyZWF0ZSBhIGBUZXh0YCBFbGVtZW50IHRoYXQgaGFzIDAgbGVuZ3RoLiAgSWYgeW91IHRyeSB0byBvdXRwdXQgYSBzdHJpbmcgdGhhdCdzIDUgY2hhcmFjdGVycywgaXQgd29uJ3QgYmUgc2hvd24gaW4gdGhlIHdpbmRvdyBiZWNhdXNlIHRoZXJlIGlzbid0IGVub3VnaCByb29tLiAgVGhlIHJlbWVkeSBpcyB0byBtYW51YWxseSBzZXQgdGhlIHNpemUgdG8gd2hhdCB5b3UgZXhwZWN0IHRvIG91dHB1dFxuXG5gVGV4dCgnJywgc2l6ZT0oMTUsMSksIGtleT0nX1RYVE9VVF8pYCBjcmVhdGVzIGEgYFRleHRgIEVsZW1lbnQgdGhhdCBjYW4gaG9sZCAxNSBjaGFyYWN0ZXJzLlxuXG4jIyMgQ2hvcnRjdXQgZnVuY3Rpb25zXG5UaGUgc2hvcnRoYW5kIGZ1bmN0aW9ucyBmb3IgYFRleHRgIGFyZSBgVHh0YCBhbmQgYFRgXG5cbiMjIyBFdmVudHMgYGVuYWJsZV9ldmVudHNgXG5cbklmIHlvdSBzZXQgdGhlIHBhcmFtZXRlciBgZW5hYmxlX2V2ZW50c2AgdGhlbiB5b3Ugd2lsbCBnZXQgYW4gZXZlbnQgaWYgdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBUZXh0LlxuXG4jIyBNdWx0aWxpbmUgRWxlbWVudFxuVGhpcyBFbGVtZW50IGRvdWJsZXMgYXMgYm90aCBhbiBpbnB1dCBhbmQgb3V0cHV0IEVsZW1lbnQuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1tzZy5NdWx0aWxpbmUoJ1RoaXMgaXMgd2hhdCBhIE11bHRpLWxpbmUgVGV4dCBFbGVtZW50IGxvb2tzIGxpa2UnLCBzaXplPSg0NSw1KSldXVxuYGBgXG5cbiFbbXVsdGlsaW5lXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTg1My1iMTM5YTE4MC1hZWMzLTExZTgtOTcyZi1mNTIxODg1MTBjODguanBnKVxuXG4jIyBUZXh0IElucHV0IEVsZW1lbnQgIHwgYElucHV0VGV4dCA9PSBJbnB1dCA9PSBJbmBcblxuYGBgcHl0aG9uXG5sYXlvdXQgPSBbW3NnLklucHV0VGV4dCgnRGVmYXVsdCB0ZXh0JyldXVxuYGBgXG5cbiFbaW5wdXR0ZXh0IDJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU5ODYxLWI1ZmU1NTgwLWFlYzMtMTFlOC04MDQwLTUzZWMyNDFiNTA3OS5qcGcpXG5cbi0tLVxuXG4jIyMjIE5vdGUgYWJvdXQgdGhlIGBkb19ub3RfY2xlYXJgIHBhcmFtZXRlclxuXG5UaGlzIHVzZWQgdG8gcmVhbGx5IHRyaXAgcGVvcGxlIHVwLCBidXQgZG9uJ3QgdGhpbmsgc28gYW55bW9yZS4gIFRoZSBgZG9fbm90X2NsZWFyYCBwYXJhbWV0ZXIgaXMgaW5pdGlhbGl6ZWQgd2hlbiBjcmVhdGluZyB0aGUgSW5wdXRUZXh0IEVsZW1lbnQuICBJZiBzZXQgdG8gRmFsc2UsIHRoZW4gdGhlIGlucHV0IGZpZWxkJ3MgY29udGVudHMgd2lsbCBiZSBlcmFzZWQgYWZ0ZXIgZXZlcnkgYFdpbmRvdy5SZWFkKClgIGNhbGwuICBVc2UgdGhpcyBzZXR0aW5nIGZvciB3aGVuIHlvdXIgd2luZG93IGlzIGFuIFwiSW5wdXQgRm9ybVwiIHR5cGUgb2Ygd2luZG93IHdoZXJlIHlvdSB3YW50IGFsbCBvZiB0aGUgZmllbGRzIHRvIGJlIGVyYXNlZCBhbmQgc3RhcnQgb3ZlciBhZ2FpbiBldmVyeSB0aW1lLlxuXG4jIyBDb21ibyBFbGVtZW50IHwgYENvbWJvID09IElucHV0Q29tYm8gPT0gRHJvcERvd24gPT0gRHJvcGBcbkFsc28ga25vd24gYXMgYSBkcm9wLWRvd24gbGlzdC4gIE9ubHkgcmVxdWlyZWQgcGFyYW1ldGVyIGlzIHRoZSBsaXN0IG9mIGNob2ljZXMuICBUaGUgcmV0dXJuIHZhbHVlIGlzIGEgc3RyaW5nIG1hdGNoaW5nIHdoYXQncyB2aXNpYmxlIG9uIHRoZSBHVUkuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1tzZy5Db21ibyhbJ2Nob2ljZSAxJywgJ2Nob2ljZSAyJ10pXV1cbmBgYFxuXG4hW2NvbWJvYm94XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTg2MC1iNTY1YmYwMC1hZWMzLTExZTgtODJmZS1kYmU0MTI1MjQ1OGIuanBnKVxuXG4jIyBMaXN0Ym94IEVsZW1lbnRcblRoZSBzdGFuZGFyZCBsaXN0Ym94IGxpa2UgeW91J2xsIGZpbmQgaW4gbW9zdCBHVUlzLiAgTm90ZSB0aGF0IHRoZSByZXR1cm4gdmFsdWVzIGZyb20gdGhpcyBlbGVtZW50IHdpbGwgYmUgYSAqKipsaXN0IG9mIHJlc3VsdHMsIG5vdCBhIHNpbmdsZSByZXN1bHQqKiouIFRoaXMgaXMgYmVjYXVzZSB0aGUgdXNlciBjYW4gc2VsZWN0IG1vcmUgdGhhbiAxIGl0ZW0gZnJvbSB0aGUgbGlzdCAoaWYgeW91IHNldCB0aGUgcmlnaHQgbW9kZSkuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1tzZy5MaXN0Ym94KHZhbHVlcz1bJ0xpc3Rib3ggMScsICdMaXN0Ym94IDInLCAnTGlzdGJveCAzJ10sIHNpemU9KDMwLCA2KSldXVxuYGBgXG5cbiFbbGlzdGJveCAyXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTg1OS1iNGNkMjg4MC1hZWMzLTExZTgtODgxYy0xZTM2OWQ1YzYzMzcuanBnKVxuXG4tLS1cblxuTGlzdEJveGVzIGNhbiBjYXVzZSBhIHdpbmRvdyB0byByZXR1cm4gZnJvbSBhIFJlYWQgY2FsbC4gIElmIHRoZSBmbGFnIGBlbmFibGVfZXZlbnRzYCBpcyBzZXQsIHRoZW4gd2hlbiBhIHVzZXIgbWFrZXMgYSBzZWxlY3Rpb24sIHRoZSBSZWFkIGltbWVkaWF0ZWx5IHJldHVybnMuXG5cbkFub3RoZXIgd2F5IExpc3RCb3hlcyBjYW4gY2F1c2UgUmVhZHMgdG8gcmV0dXJuIGlzIGlmIHRoZSBmbGFnIGJpbmRfcmV0dXJuX2tleSBpcyBzZXQuICBJZiBUcnVlLCB0aGVuIGlmIHRoZSB1c2VyIHByZXNzZXMgdGhlIHJldHVybiBrZXkgd2hpbGUgYW4gZW50cnkgaXMgc2VsZWN0ZWQsIHRoZW4gdGhlIFJlYWQgcmV0dXJucy4gIEFsc28sIGlmIHRoaXMgZmxhZyBpcyBzZXQsIGlmIHRoZSB1c2VyIGRvdWJsZS1jbGlja3MgYW4gZW50cnkgaXQgd2lsbCByZXR1cm4gZnJvbSB0aGUgUmVhZC5cblxuIyMgU2xpZGVyIEVsZW1lbnRcblxuU2xpZGVycyBoYXZlIGEgY291cGxlIG9mIHNsaWRlci1zcGVjaWZpYyBzZXR0aW5ncyBhcyB3ZWxsIGFzIGFwcGVhcmFuY2Ugc2V0dGluZ3MuIEV4YW1wbGVzIGluY2x1ZGUgdGhlIGBvcmllbnRhdGlvbmAgYW5kIGByYW5nZWAgc2V0dGluZ3MuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1tzZy5TbGlkZXIocmFuZ2U9KDEsNTAwKSxcbiAgICAgICAgIGRlZmF1bHRfdmFsdWU9MjIyLFxuICAgICAgICAgc2l6ZT0oMjAsMTUpLFxuICAgICAgICAgb3JpZW50YXRpb249J2hvcml6b250YWwnLFxuICAgICAgICAgZm9udD0oJ0hlbHZldGljYScsIDEyKSldXVxuYGBgXG5cbiFbc2xpZGVyXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTg1OC1iNDM0OTIwMC1hZWMzLTExZTgtOWUyNS1jMGZjZjAyNWQxOWUuanBnKVxuXG4jIyMgUXQgU2xpZGVyc1xuXG5UaGVyZSBpcyBhbiBpbXBvcnRhbnQgZGlmZmVyZW5jZSBiZXR3ZWVuIFF0IGFuZCB0a2ludGVyIHNsaWRlcnMuICBPbiBRdCwgdGhlIHNsaWRlciB2YWx1ZXMgbXVzdCBiZSBpbnRlZ2VyLCBub3QgZmxvYXQuICBJZiB5b3Ugd2FudCB5b3VyIHNsaWRlciB0byBnbyBmcm9tIDAuMSB0byAxLjAsIHRoZW4gbWFrZSB5b3VyIHNsaWRlciBnbyBmcm9tIDEgdG8gMTAgYW5kIGRpdmlkZSBieSAxMC4gIEl0J3MgYW4gZWFzeSBtYXRoIHRoaW5nIHRvIGRvIGFuZCBub3QgYSBiaWcgZGVhbC4gIEp1c3QgZGVhbCB3aXRoIGl0Li4uLiB5b3UncmUgd3JpdGluZyBzb2Z0d2FyZSBhZnRlciBhbGwuICBQcmVzdW1hYmx5IHlvdSBrbm93IGhvdyB0byBkbyB0aGVzZSB0aGluZ3MuICA7LSlcblxuIyMgUmFkaW8gQnV0dG9uIEVsZW1lbnRcblxuQ3JlYXRlcyBvbmUgcmFkaW8gYnV0dG9uIHRoYXQgaXMgYXNzaWduZWQgdG8gYSBncm91cCBvZiByYWRpbyBidXR0b25zLiAgT25seSAxIG9mIHRoZSBidXR0b25zIGluIHRoZSBncm91cCBjYW4gYmUgc2VsZWN0ZWQgYXQgYW55IG9uZSB0aW1lLlxuXG5gYGBweXRob25cbmxheW91dCA9ICBbXG5cdFtzZy5SYWRpbygnTXkgZmlyc3QgUmFkaW8hJywgXCJSQURJTzFcIiwgZGVmYXVsdD1UcnVlKSxcblx0c2cuUmFkaW8oJ015IHNlY29uZCByYWRpbyEnLCBcIlJBRElPMVwiKV1cbl1cbmBgYFxuXG4hW3JhZGlvXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTg1Ny1iNDM0OTIwMC1hZWMzLTExZTgtOGUyZC1lNmE0OWZmYmQwYjYuanBnKVxuXG4jIyBDaGVja2JveCBFbGVtZW50IHwgYENCb3ggPT0gQ0IgPT0gQ2hlY2tgXG5DaGVja2JveCBlbGVtZW50cyBhcmUgbGlrZSBSYWRpbyBCdXR0b24gZWxlbWVudHMuICBUaGV5IHJldHVybiBhIGJvb2wgaW5kaWNhdGluZyB3aGV0aGVyIG9yIG5vdCB0aGV5IGFyZSBjaGVja2VkLlxuXG5gYGBweXRob25cbmxheW91dCA9ICBbW3NnLkNoZWNrYm94KCdNeSBmaXJzdCBDaGVja2JveCEnLCBkZWZhdWx0PVRydWUpLCBzZy5DaGVja2JveCgnTXkgc2Vjb25kIENoZWNrYm94IScpXV1cbmBgYFxuIVtjaGVja2JveF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTk5MDYtNmY1ZDJiMDAtYWVjNC0xMWU4LTljOGEtOTYyYzc4N2YwMjg2LmpwZylcblxuIyMgU3BpbiBFbGVtZW50XG5BbiB1cC9kb3duIHNwaW5uZXIgY29udHJvbC4gIFRoZSB2YWxpZCB2YWx1ZXMgYXJlIHBhc3NlZCBpbiBhcyBhIGxpc3QuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gIFtbc2cuU3BpbihbaSBmb3IgaSBpbiByYW5nZSgxLDExKV0sIGluaXRpYWxfdmFsdWU9MSksIHNnLlRleHQoJ1ZvbHVtZSBsZXZlbCcpXV1cbmBgYFxuXG4hW3NwaW5uZXJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU5ODU1LWIxZDIzODAwLWFlYzMtMTFlOC05ZjUxLWFmYjIxMDk4NzlkYS5qcGcpXG5cbiMjIEltYWdlIEVsZW1lbnRcblxuSW1hZ2VzIGNhbiBiZSBwbGFjZWQgaW4geW91ciB3aW5kb3cgcHJvdmlkZSB0aGV5IGFyZSBpbiBQTkcsIEdJRiwgUFBNL1BHTSBmb3JtYXQuICBKUEdzIGNhbm5vdCBiZSBzaG93biBiZWNhdXNlIHRraW50ZXIgZG9lcyBub3QgbmFpdmVseSBzdXBwb3J0IEpQR3MuICBZb3UgY2FuIHVzZSB0aGUgUHl0aG9uIEltYWdpbmcgTGlicmFyeSAoUElMKSBwYWNrYWdlICB0byBjb252ZXJ0IHlvdXIgaW1hZ2UgdG8gUE5HIHByaW9yIHRvIGNhbGxpbmcgUHlTaW1wbGVHVUkgaWYgeW91ciBpbWFnZXMgYXJlIGluIEpQRyBmb3JtYXQuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1xuICAgICAgICAgICAgW3NnLkltYWdlKHInQzpcXFB5U2ltcGxlR1VJXFxMb2dvc1xcUHlTaW1wbGVHVUlfTG9nb18zMjAucG5nJyldLFxuICAgICAgICAgXVxuYGBgXG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYxODg1NzA5LTRlMzI2ZTAwLWFlY2MtMTFlOS04Njk1LTcxOTNkZjI4MzFlYy5wbmcpXG5cbllvdSBjYW4gc3BlY2lmeSBhbiBhbmltYXRlZCBHSUYgYXMgYW4gaW1hZ2UgYW5kIGNhbiBhbmltYXRlIHRoZSBHSUYgYnkgY2FsbGluZyBgVXBkYXRlQW5pbWF0aW9uYC4gIEV4Y2l0aW5nIHN0dWZmIVxuXG4hW2xvYWRpbmcgYW5pbWF0aW9uXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My81MTI4MDg3MS1kMjA0MWU4MC0xOWFlLTExZTktODc1Ny04MDJlYjk1MzUyZWQuZ2lmKVxuXG5Zb3UgY2FuIGNhbGwgdGhlIG1ldGhvZCB3aXRob3V0IHNldHRpbmcgdGhlIGB0aW1lX2JldHdlZW5fZnJhbWVzYCB2YWx1ZSBhbmQgaXQgd2lsbCBzaG93IGEgZnJhbWUgYW5kIGltbWVkaWF0ZWx5IG1vdmUgb24gdG8gdGhlIG5leHQgZnJhbWUuICBUaGlzIGVuYWJsZXMgeW91IHRvIGRvIHRoZSBpbnRlci1mcmFtZSB0aW1pbmcuXG5cbiMjIEJ1dHRvbiBFbGVtZW50XG5cbioqTUFDIFVTRVJTKiogLSBNYWNzIHN1Y2sgd2hlbiBpdCBjb21lcyB0byB0a2ludGVyIGFuZCBidXR0b24gY29sb3JzLiAgSXQgc3Vja3Mgc28gYmFkbHkgd2l0aCBjb2xvcnMgdGhhdCB0aGUgYExvb2tBbmRGZWVsYCBjYWxsIGlzIGRpc2FibGVkLiAgWW91IGNhbm5vdCBjaGFuZ2UgYnV0dG9uIGNvbG9ycyBmb3IgTWFjcy4gIFlvdSdyZSBzdHVjayB3aXRoIHRoZSBzeXN0ZW0gZGVmYXVsdCBjb2xvciBpZiB5b3UgYXJlIHVzaW5nIHRoZSB0a2ludGVyIHZlcnNpb24gb2YgUHlTaW1wbGVHVUkuICBUaGUgUXQgdmVyc2lvbiBkb2VzIG5vdCBoYXZlIHRoaXMgaXNzdWUuXG5cbkJ1dHRvbnMgYXJlIHRoZSBtb3N0IGltcG9ydGFudCBlbGVtZW50IG9mIGFsbCEgIFRoZXkgY2F1c2UgdGhlIG1ham9yaXR5IG9mIHRoZSBhY3Rpb24gdG8gaGFwcGVuLiAgQWZ0ZXIgYWxsLCBpdCdzIGEgYnV0dG9uIHByZXNzIHRoYXQgd2lsbCBnZXQgeW91IG91dCBvZiBhIHdpbmRvdywgd2hldGhlciBpdCBiZSBTdWJtaXQgb3IgQ2FuY2VsLCBvbmUgd2F5IG9yIGFub3RoZXIgYSBidXR0b24gaXMgaW52b2x2ZWQgaW4gYWxsIHdpbmRvd3MuICBUaGUgb25seSBleGNlcHRpb24gaXMgdG8gdGhpcyBpcyB3aGVuIHRoZSB1c2VyIGNsb3NlcyB0aGUgd2luZG93IHVzaW5nIHRoZSBcIlhcIiBpbiB0aGUgdXBwZXIgY29ybmVyIHdoaWNoIG1lYW5zIG5vIGJ1dHRvbiB3YXMgaW52b2x2ZWQuXG5cblRoZSBUeXBlcyBvZiBidXR0b25zIGluY2x1ZGU6XG4qIEZvbGRlciBCcm93c2VcbiogRmlsZSBCcm93c2VcbiogRmlsZXMgQnJvd3NlXG4qIEZpbGUgU2F2ZUFzXG4qIEZpbGUgU2F2ZVxuKiBDbG9zZSB3aW5kb3cgIChub3JtYWwgYnV0dG9uKVxuKiBSZWFkIHdpbmRvd1xuKiBSZWFsdGltZVxuKiBDYWxlbmRhciBDaG9vc2VyXG4qIENvbG9yIENob29zZXJcblxuQ2xvc2Ugd2luZG93IC0gTm9ybWFsIGJ1dHRvbnMgbGlrZSBTdWJtaXQsIENhbmNlbCwgWWVzLCBObywgZG8gTk9UIGNsb3NlIHRoZSB3aW5kb3cuLi4gdGhleSB1c2VkIHRvLiAgTm93IHRvIGNsb3NlIGEgd2luZG93IHlvdSBuZWVkIHRvIHVzZSBhIENsb3NlQnV0dG9uIC8gQ0J1dHRvbi5cblxuRm9sZGVyIEJyb3dzZSAtIFdoZW4gY2xpY2tlZCBhIGZvbGRlciBicm93c2UgZGlhbG9nIGJveCBpcyBvcGVuZWQuICBUaGUgcmVzdWx0cyBvZiB0aGUgRm9sZGVyIEJyb3dzZSBkaWFsb2cgYm94IGFyZSB3cml0dGVuIGludG8gb25lIG9mIHRoZSBpbnB1dCBmaWVsZHMgb2YgdGhlIHdpbmRvdy5cblxuRmlsZSBCcm93c2UgLSBTYW1lIGFzIHRoZSBGb2xkZXIgQnJvd3NlIGV4Y2VwdCByYXRoZXIgdGhhbiBjaG9vc2luZyBhIGZvbGRlciwgYSBzaW5nbGUgZmlsZSBpcyBjaG9zZW4uXG5cbkNhbGVuZGFyIENob29zZXIgLSBPcGVucyBhIGdyYXBoaWNhbCBjYWxlbmRhciB0byBzZWxlY3QgYSBkYXRlLlxuXG5Db2xvciBDaG9vc2VyIC0gT3BlbnMgYSBjb2xvciBjaG9vc2VyIGRpYWxvZ1xuXG5SZWFkIHdpbmRvdyAtIFRoaXMgaXMgYSB3aW5kb3cgYnV0dG9uIHRoYXQgd2lsbCByZWFkIGEgc25hcHNob3Qgb2YgYWxsIG9mIHRoZSBpbnB1dCBmaWVsZHMsIGJ1dCBkb2VzIG5vdCBjbG9zZSB0aGUgd2luZG93IGFmdGVyIGl0J3MgY2xpY2tlZC5cblxuUmVhbHRpbWUgLSBUaGlzIGlzIGFub3RoZXIgYXN5bmMgd2luZG93IGJ1dHRvbi4gIE5vcm1hbCBidXR0b24gY2xpY2tzIG9jY3VyIGFmdGVyIGEgYnV0dG9uJ3MgY2xpY2sgaXMgcmVsZWFzZWQuICBSZWFsdGltZSBidXR0b25zIHJlcG9ydCBhIGNsaWNrIHRoZSBlbnRpcmUgdGltZSB0aGUgYnV0dG9uIGlzIGhlbGQgZG93bi5cblxuTW9zdCBwcm9ncmFtcyB3aWxsIHVzZSBhIGNvbWJpbmF0aW9uIG9mIHNob3J0Y3V0IGJ1dHRvbiBjYWxscyAoU3VibWl0LCBDYW5jZWwsIGV0YyksIG5vcm1hbCBCdXR0b25zIHdoaWNoIGxlYXZlIHRoZSB3aW5kb3dzIG9wZW4gYW5kIENsb3NlQnV0dG9ucyB0aGF0IGNsb3NlIHRoZSB3aW5kb3cgd2hlbiBjbGlja2VkLlxuXG5Tb21ldGltZXMgdGhlcmUgYXJlIG11bHRpcGxlIG5hbWVzIGZvciB0aGUgc2FtZSBmdW5jdGlvbi4gIFRoaXMgaXMgc2ltcGx5IHRvIG1ha2UgdGhlIGpvYiBvZiB0aGUgcHJvZ3JhbW1lciBxdWlja2VyIGFuZCBlYXNpZXIuICBPciB0aGV5IGFyZSBvbGQgbmFtZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIHVzZWQgYnV0IGtlcHQgYXJvdW5kIHNvIHRoYXQgZXhpc3RpbmcgcHJvZ3JhbXMgZG9uJ3QgYnJlYWsuXG5cblRoZSA0IHByaW1hcnkgd2luZG93cyBvZiBQeVNpbXBsZUdVSSBidXR0b25zIGFuZCB0aGVpciBuYW1lcyBhcmU6XG5cbjEuIGBCdXR0b25gPSBgUmVhZEJ1dHRvbmAgPSBgUkJ1dHRvbmAgPSBgUmVhZEZvcm1CdXR0b25gIChVc2UgYEJ1dHRvbmAsIG90aGVycyBhcmUgb2xkIG1ldGhvZHMpXG4yLiBgQ2xvc2VCdXR0b25gID0gYENCdXR0b25gXG4zLiBgUmVhbHRpbWVCdXR0b25gXG40LiBgRHVtbXlCdXR0b25gXG5cbllvdSB3aWxsIGZpbmQgdGhlIGxvbmctZm9ybSBuYW1lcyBpbiB0aGUgb2xkZXIgcHJvZ3JhbXMuIFJlYWRCdXR0b24gZm9yIGV4YW1wbGUuXG5cbkluIE9jdCAyMDE4LCB0aGUgZGVmaW5pdGlvbiBvZiBCdXR0b24gY2hhbmdlZC4gIFByZXZpb3VzbHkgQnV0dG9uIHdvdWxkIENMT1NFIHRoZSB3aW5kb3cgd2hlbiBjbGlja2VkLiAgSXQgaGFzIGJlZW4gY2hhbmdlZCBzbyB0aGUgQnV0dG9uIGNhbGxzIHdpbGwgbGVhdmUgdGhlIHdpbmRvdyBvcGVuIGluIGV4YWN0bHkgdGhlIHNhbWUgd2F5IGFzIGEgUmVhZEJ1dHRvbi4gIFRoZXkgYXJlIHRoZSBzYW1lIGNhbGxzIG5vdy4gICBUbyBlbmFibGVzIHdpbmRvd3MgdG8gYmUgY2xvc2VkIHVzaW5nIGJ1dHRvbnMsIGEgbmV3IGJ1dHRvbiB3YXMgYWRkZWQuLi4gYENsb3NlQnV0dG9uYCBvciBgQ0J1dHRvbmAuXG5cbllvdXIgUHlTaW1wbGVHVUkgcHJvZ3JhbSBpcyBtb3N0IGxpa2VseSBnb2luZyB0byBjb250YWluIG9ubHkgYEJ1dHRvbmAgY2FsbHMuIFRoZSBvdGhlcnMgYXJlIGdlbmVyYWxseSBub3QgZm91bmRpbiB1c2VyIGNvZGUuXG5cblRoZSBtb3N0IGJhc2ljIEJ1dHRvbiBlbGVtZW50IGNhbGwgdG8gdXNlIGlzIGBCdXR0b25gXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gIFtbc2cuQnV0dG9uKCdPaycpLCBzZy5CdXR0b24oJ0NhbmNlbCcpXV1cbmBgYFxuXG4hW29rIGNhbmNlbCAzXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTkyNy1hYTVmNWU4MC1hZWM0LTExZTgtODZlMS01ZGMwYjNhMmI4MDMuanBnKVxuXG5Zb3Ugd2lsbCByYXJlbHkgc2VlIHRoZXNlIDIgYnV0dG9ucyBpbiBwYXJ0aWN1bGFyIHdyaXR0ZW4gdGhpcyB3YXkuICBSZWNhbGwgdGhhdCBQeVNpbXBsZUdVSSBpcyBmb2N1c2VkIG9uIFlPVSAod2hpY2ggZ2VuZXJhbGx5IGRpcmVjdGx5IG1lYW5zLi4uLiBsZXNzIHR5cGluZykuICBBcyBhIHJlc3VsdCwgdGhlIGNvZGUgZm9yIHRoZSBhYm92ZSB3aW5kb3cgaXMgbm9ybWFsbHkgd3JpdHRlbiB1c2luZyBzaG9ydGN1dHMgZm91bmQgaW4gdGhlIG5leHQgc2VjdGlvbi5cblxuWW91IHdpbGwgdHlwaWNhbGx5IHNlZSB0aGlzIGluc3RlYWQgb2YgY2FsbHMgdG8gYEJ1dHRvbmA6XG5cbmBgYHB5dGhvblxubGF5b3V0ID0gIFtbc2cuT2soKSwgc2cuQ2FuY2VsKCldXVxuYGBgXG5cbkluIHJlYWxpdHkgYEJ1dHRvbmAgaXMgaW4gZmFjdCBiZWluZyBjYWxsZWQgb24geW91ciBiZWhhbGYuICBCZWhpbmQgdGhlIHNjZW5lcywgYHNnLk9rYCBhbmQgYHNnLkNhbmNlbGAgY2FsbCBgQnV0dG9uYCB3aXRoIHRoZSB0ZXh0IHNldCB0byBgT2tgIGFuZCBgQ2FuY2VsYCBhbmQgcmV0dXJuaW5nIHRoZSByZXN1bHRzIHRoYXQgdGhlbiBnbyBpbnRvIHRoZSBsYXlvdXQuICBJZiB5b3Ugd2VyZSB0byBwcmludCB0aGUgbGF5b3V0IGl0IHdpbGwgbG9vayBpZGVudGljYWwgdG8gdGhlIGZpcnN0IGxheW91dCBzaG93biB0aGF0IGhhcyBgQnV0dG9uYCBzaG93biBzcGVjaWZpY2FsbHkgaW4gdGhlIGxheW91dC5cblxuIyMjIEJ1dHRvbiBFbGVtZW50IFNob3J0Y3V0c1xuVGhlc2UgUHJlLW1hZGUgYnV0dG9ucyBhcmUgc29tZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgZWxlbWVudHMgb2YgYWxsIGJlY2F1c2UgdGhleSBhcmUgdXNlZCBzbyBtdWNoLiAgVGhleSBhbGwgYmFzaWNhbGx5IGRvIHRoZSBzYW1lIHRoaW5nLCAqKnNldCB0aGUgYnV0dG9uIHRleHQgdG8gbWF0Y2ggdGhlIGZ1bmN0aW9uIG5hbWUgYW5kIHNldCB0aGUgcGFyYW1ldGVycyB0byBjb21tb25seSB1c2VkIHZhbHVlcyoqLiBJZiB5b3UgZmluZCB5b3Vyc2VsZiBuZWVkaW5nIHRvIGNyZWF0ZSBhIGN1c3RvbSBidXR0b24gb2Z0ZW4gYmVjYXVzZSBpdCdzIG5vdCBvbiB0aGlzIGxpc3QsIHBsZWFzZSBwb3N0IGEgcmVxdWVzdCBvbiBHaXRIdWIuIC4gVGhleSBpbmNsdWRlOlxuXG4tIE9LXG4tIE9rXG4tIFN1Ym1pdFxuLSBDYW5jZWxcbi0gWWVzXG4tIE5vXG4tIEV4aXRcbi0gUXVpdFxuLSBIZWxwXG4tIFNhdmVcbi0gU2F2ZUFzXG4tIE9wZW5cblxuIyMjIFwiQ2hvb3NlclwiIEJ1dHRvbnMgXG5cblRoZXNlIGJ1dHRvbnMgYXJlIHVzZWQgdG8gc2hvdyBkaWFsb2cgYm94ZXMgdGhhdCBjaG9vc2Ugc29tZXRoaW5nIGxpa2UgYSBmaWxlbmFtZSwgZGF0ZSwgY29sb3IsIGV0Yy4gdGhhdCBhcmUgZmlsbGVkIGludG8gYW4gYElucHV0VGV4dGAgRWxlbWVudCAob3Igc29tZSBvdGhlciBcInRhcmdldFwiLi4uLiBzZWUgYmVsb3cgcmVnYXJkaW5nIHRhcmdldHMpXG5cbi0gQ2FsZW5kYXJCdXR0b25cbi0gQ29sb3JDaG9vc2VyQnV0dG9uXG4tIEZpbGVCcm93c2Vcbi0gRmlsZXNCcm93c2Vcbi0gRmlsZVNhdmVBc1xuLSBGb2xkZXJCcm93c2VcblxuKipJTVBPUlQgTk9URSBBQk9VVCBTSE9SVENVVCBCVVRUT05TKipcblByaW9yIHRvIHJlbGVhc2UgMy4xMS4wLCB0aGVzZSBidXR0b25zIGNsb3NlZCB0aGUgd2luZG93LiAgU3RhcnRpbmcgd2l0aCAzLjExIHRoZXkgd2lsbCBub3QgY2xvc2UgdGhlIHdpbmRvdy4gIFRoZXkgYWN0IGxpa2UgUkJ1dHRvbnMgKHJldHVybiB0aGUgYnV0dG9uIHRleHQgYW5kIGRvIG5vdCBjbG9zZSB0aGUgd2luZG93KVxuXG5JZiB5b3UgYXJlIGhhdmluZyB0cm91YmxlIHdpdGggdGhlc2UgYnV0dG9ucyBjbG9zaW5nIHlvdXIgd2luZG93LCBwbGVhc2UgY2hlY2sgeW91ciBpbnN0YWxsZWQgdmVyc2lvbiBvZiBQeVNpbXBsZUdVSSBieSB0eXBpbmcgYHBpcCBsaXN0YCBhdCBhIGNvbW1hbmQgcHJvbXB0LiAgUHJpb3IgdG8gMy4xMSB0aGVzZSBidXR0b25zIGNsb3NlIHlvdXIgd2luZG93LlxuXG5Vc2luZyBvbGRlciB2ZXJzaW9ucywgaWYgeW91IHdhbnQgYSBTdWJtaXQoKSBidXR0b24gdGhhdCBkb2VzIG5vdCBjbG9zZSB0aGUgd2luZG93LCB0aGVuIHlvdSB3b3VsZCBpbnN0ZWFkIHVzZSBSQnV0dG9uKCdTdWJtaXQnKS4gICBVc2luZyB0aGUgbmV3IHZlcnNpb24sIGlmIHlvdSB3YW50IGEgU3VibWl0IGJ1dHRvbiB0aGF0IGNsb3NlcyB0aGUgd2luZG93IGxpa2UgdGhlIHNvbGQgU3VibWl0KCkgY2FsbCBkaWQsIHlvdSB3b3VsZCB3cml0ZSB0aGF0IGFzIGBDbG9zZUJ1dHRvbignU3VibWl0JylgIG9yIGBDQnV0dG9uKCdTdWJtaXQnKWBcblxuIyMjIEJ1dHRvbiB0YXJnZXRzXG5cblRoZSBgRmlsZUJyb3dzZWAsIGBGb2xkZXJCcm93c2VgLCBgRmlsZVNhdmVBc2AgLCBgRmlsZXNTYXZlQXNgLCBgQ2FsZW5kYXJCdXR0b25gLCBgQ29sb3JDaG9vc2VyQnV0dG9uYCBidXR0b25zIGFsbCBmaWxsLWluIHZhbHVlcyBpbnRvIGFub3RoZXIgZWxlbWVudCBsb2NhdGVkIG9uIHRoZSB3aW5kb3cuICBUaGUgdGFyZ2V0IGNhbiBiZSBhIFRleHQgRWxlbWVudCBvciBhbiBJbnB1dFRleHQgRWxlbWVudCBvciB0aGUgYnV0dG9uIGl0c2VsZi4gIFRoZSBsb2NhdGlvbiBvZiB0aGUgZWxlbWVudCBpcyBzcGVjaWZpZWQgYnkgdGhlIGB0YXJnZXRgIHZhcmlhYmxlIGluIHRoZSBmdW5jdGlvbiBjYWxsLlxuXG5UaGUgVGFyZ2V0IGNvbWVzIGluIHR3byBmb3Jtcy5cbjEuIEtleVxuMi4gKHJvdywgY29sdW1uKVxuXG5UYXJnZXRzIHRoYXQgYXJlIHNwZWNpZmllZCB1c2luZyBhIGtleSB3aWxsIGZpbmQgaXRzIHRhcmdldCBlbGVtZW50IGJ5IHVzaW5nIHRoZSB0YXJnZXQncyBrZXkgdmFsdWUuICBUaGlzIGlzIHRoZSBcInByZWZlcnJlZFwiIG1ldGhvZC5cblxuSWYgdGhlIFRhcmdldCBpcyBzcGVjaWZpZWQgdXNpbmcgKHJvdywgY29sdW1uKSB0aGVuIGl0IHV0aWxpemVzIGEgZ3JpZCBzeXN0ZW0uICBUaGUgcm93cyBpbiB5b3VyIEdVSSBhcmUgbnVtYmVyZWQgc3RhcnRpbmcgd2l0aCAwLiBUaGUgdGFyZ2V0IGNhbiBiZSBzcGVjaWZpZWQgYXMgYSBoYXJkIGNvZGVkIGdyaWQgaXRlbSBvciBpdCBjYW4gYmUgcmVsYXRpdmUgdG8gdGhlIGJ1dHRvbi5cblxuVGhlIChyb3csIGNvbCkgdGFyZ2V0aW5nIGNhbiBvbmx5IHRhcmdldCBlbGVtZW50cyB0aGF0IGFyZSBpbiB0aGUgc2FtZSBcImNvbnRhaW5lclwiLiAgQ29udGFpbmVycyBhcmUgdGhlIFdpbmRvdywgQ29sdW1uIGFuZCBGcmFtZSBFbGVtZW50cy4gIEEgRmlsZSBCcm93c2UgYnV0dG9uIGxvY2F0ZWQgaW5zaWRlIG9mIGEgQ29sdW1uIGlzIHVuYWJsZSB0byB0YXJnZXQgZWxlbWVudHMgb3V0c2lkZSBvZiB0aGF0IENvbHVtbi5cblxuVGhlIGRlZmF1bHQgdmFsdWUgZm9yIGB0YXJnZXRgIGlzIGAoVGhpc1JvdywgLTEpYC4gICBgVGhpc1Jvd2AgaXMgYSBzcGVjaWFsIHZhbHVlIHRoYXQgdGVsbHMgdGhlIEdVSSB0byB1c2UgdGhlIHNhbWUgcm93IGFzIHRoZSBidXR0b24uICBUaGUgWS12YWx1ZSBvZiAtMSBtZWFucyB0aGUgZmllbGQgb25lIHZhbHVlIHRvIHRoZSBsZWZ0IG9mIHRoZSBidXR0b24uICBGb3IgYSBGaWxlIG9yIEZvbGRlciBCcm93c2UgYnV0dG9uLCB0aGUgZmllbGQgdGhhdCBpdCBmaWxscyBhcmUgZ2VuZXJhbGx5IHRvIHRoZSBsZWZ0IG9mIHRoZSBidXR0b24gaXMgbW9zdCBjYXNlcy4gICAgKFRoaXNSb3csIC0xKSBtZWFucyB0aGUgRWxlbWVudCB0byB0aGUgbGVmdCBvZiB0aGUgYnV0dG9uLCBvbiB0aGUgc2FtZSByb3cuXG5cbklmIGEgdmFsdWUgb2YgYChOb25lLCBOb25lKWAgaXMgY2hvc2VuIGZvciB0aGUgdGFyZ2V0LCB0aGVuIHRoZSBidXR0b24gaXRzZWxmIHdpbGwgaG9sZCB0aGUgaW5mb3JtYXRpb24uICBMYXRlciB0aGUgYnV0dG9uIGNhbiBiZSBxdWVyaWVkIGZvciB0aGUgIHZhbHVlIGJ5IHVzaW5nIHRoZSBidXR0b24ncyBrZXkuXG5cbkxldCdzIGV4YW1pbmUgdGhpcyB3aW5kb3cgYXMgYW4gZXhhbXBsZTpcblxuIVtmaWxlIGJyb3dzZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTk5NDQtZDFiNjJiODAtYWVjNC0xMWU4LThhNjgtOWQ3OWQzN2IyYzgxLmpwZylcblxuVGhlIGBJbnB1dFRleHRgIGVsZW1lbnQgaXMgbG9jYXRlZCBhdCAoMSwwKS4uLiByb3cgMSwgY29sdW1uIDAuICBUaGUgYEJyb3dzZWAgYnV0dG9uIGlzIGxvY2F0ZWQgYXQgcG9zaXRpb24gKDIsMCkuICBUaGUgVGFyZ2V0IGZvciB0aGUgYnV0dG9uIGNvdWxkIGJlIGFueSBvZiB0aGVzZSB2YWx1ZXM6XG5cbiAgICBUYXJnZXQgPSAoMSwwKVxuICAgIFRhcmdldCA9ICgtMSwwKVxuXG5UaGUgY29kZSBmb3IgdGhlIGVudGlyZSB3aW5kb3cgY291bGQgYmU6XG5cbmBgYHB5dGhvblxubGF5b3V0ID0gW1tzZy5UKCdTb3VyY2UgRm9sZGVyJyldLFxuICAgICAgICAgICAgICBbc2cuSW4oKV0sXG4gICAgICAgICAgICAgIFtzZy5Gb2xkZXJCcm93c2UodGFyZ2V0PSgtMSwgMCkpLCBzZy5PSygpXV1cbmBgYFxuXG5vciBpZiB1c2luZyBrZXlzLCB0aGVuIHRoZSBjb2RlIHdvdWxkIGJlOlxuXG5gYGBweXRob25cbmxheW91dCA9IFtbc2cuVCgnU291cmNlIEZvbGRlcicpXSxcbiAgICAgICAgICAgICAgW3NnLkluKGtleT0naW5wdXQnKV0sXG4gICAgICAgICAgICAgIFtzZy5Gb2xkZXJCcm93c2UodGFyZ2V0PSdpbnB1dCcpLCBzZy5PSygpXV1cbmBgYFxuXG5TZWUgaG93IG11Y2ggZWFzaWVyIHRoZSBrZXkgbWV0aG9kIGlzP1xuXG4jIyMjIEludmlzaWJsZSBUYXJnZXRzXG5cbk9uZSB2ZXJ5IGhhbmR5IHRyaWNrIGlzIHRvIG1ha2UgeW91ciB0YXJnZXQgaW52aXNpYmxlLiAgVGhpcyB3aWxsIHJlbW92ZSB0aGUgYWJpbGl0eSB0byBlZGl0IHRoZSBjaG9zZW4gdmFsdWUgbGlrZSB5b3Ugbm9ybWFsbHkgd291bGQgYmUgYWJsZSB0byB3aXRoIGFuIElucHV0IEVsZW1lbnQuICBJdCdzIGEgd2F5IG9mIG1ha2luZyB0aGluZ3MgbG9vayBjbGVhbmVyLCBsZXNzIGNsdXR0ZXJlZCB0b28gcGVyaGFwcy5cblxuIyMjIFNhdmUgJiBPcGVuIEJ1dHRvbnNcblxuVGhlcmUgYXJlIDQgZGlmZmVyZW50IHR5cGVzIG9mIEZpbGUvRm9sZGVyIG9wZW4gZGlhbG9nIGJveCBhdmFpbGFibGUuICBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGEgZmlsZSB0byBvcGVuLCB0aGUgYEZpbGVCcm93c2VgIGlzIHdoYXQgeW91IHdhbnQuIElmIHlvdSB3YW50IHRvIHNhdmUgYSBmaWxlLCBgU2F2ZUFzYCBpcyB0aGUgYnV0dG9uLiBJZiB5b3Ugd2FudCB0byBnZXQgYSBmb2xkZXIgbmFtZSwgdGhlbiBgRm9sZGVyQnJvd3NlYCBpcyB0aGUgYnV0dG9uIHRvIHVzZS4gVG8gb3BlbiBzZXZlcmFsIGZpbGVzIGF0IG9uY2UsIHVzZSB0aGUgYEZpbGVzQnJvd3NlYCBidXR0b24uICBJdCB3aWxsIGNyZWF0ZSBhIGxpc3Qgb2YgZmlsZXMgdGhhdCBhcmUgc2VwYXJhdGVkIGJ5ICc7J1xuXG4hW29wZW5dKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ1MjQzODA0LTJiNTI5NzgwLWIyYzMtMTFlOC05MGRjLTZjOTA2MWRiMmExZS5qcGcpXG5cbiFbZm9sZGVyXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NTI0MzgwNS0yYjUyOTc4MC1iMmMzLTExZTgtOTVlZS1mZWMzYzBiMTEzMTkuanBnKVxuXG4hW3NhdmVhc10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDUyNDM4MDctMmJlYjJlMDAtYjJjMy0xMWU4LTg1NDktYmE3MWNkYzA1OTUxLmpwZylcblxuIyMjIENhbGVuZGFyIEJ1dHRvbnNcblxuVGhlc2UgYnV0dG9ucyBwb3AgdXAgYSBjYWxlbmRhciBjaG9vc2VyIHdpbmRvdy4gIFRoZSBjaG9zZW4gZGF0ZSBpcyByZXR1cm5lZCBhcyBhIHN0cmluZy5cblxuIVtjYWxlbmRhcl0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDUyNDMzNzQtOTk5NjVhODAtYjJjMS0xMWU4LTgzMTEtNDk3Nzc4MzVjYTQwLmpwZylcblxuIyMjIENvbG9yIENob29zZXIgQnV0dG9uc1xuXG5UaGVzZSBidXR0b25zIHBvcCB1cCBhIHN0YW5kYXJkIGNvbG9yIGNob29zZXIgd2luZG93LiAgVGhlIHJlc3VsdCBpcyByZXR1cm5lZCBhcyBhIHR1cGxlLiAgT25lIG9mIHRoZSByZXR1cm5lZCB2YWx1ZXMgaXMgYW4gUkdCIGhleCByZXByZXNlbnRhdGlvbi5cblxuIVtjb2xvcl0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDUyNDMzNzUtOTk5NjVhODAtYjJjMS0xMWU4LTk3NzktYjcxYmVkODVmYWI2LmpwZylcblxuIyMjIEN1c3RvbSBCdXR0b25zXG5Ob3QgYWxsIGJ1dHRvbnMgYXJlIGNyZWF0ZWQgZXF1YWwuICBBIGJ1dHRvbiB0aGF0IGNsb3NlcyBhIHdpbmRvdyBpcyBkaWZmZXJlbnQgdGhhdCBhIGJ1dHRvbiB0aGF0IHJldHVybnMgZnJvbSB0aGUgd2luZG93IHdpdGhvdXQgY2xvc2luZyBpdC4gIElmIHlvdSB3YW50IHRvIGRlZmluZSB5b3VyIG93biBidXR0b24sIHlvdSB3aWxsIGdlbmVyYWxseSBkbyB0aGlzIHdpdGggdGhlIEJ1dHRvbiBFbGVtZW50IGBCdXR0b25gLCB3aGljaCBjbG9zZXMgdGhlIHdpbmRvdyB3aGVuIGNsaWNrZWQuXG5cbmBgYHB5dGhvblxubGF5b3V0ID0gIFtbc2cuQnV0dG9uKCdNeSBCdXR0b24nKV1dXG5gYGBcblxuIVtidXR0b25dKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU5ODYyLWI2OTZlYzAwLWFlYzMtMTFlOC05ZTg4LTRiOWFmMDMzOGEwMy5qcGcpXG5cbkFsbCBidXR0b25zIGNhbiBoYXZlIHRoZWlyIHRleHQgY2hhbmdlZCBieSBjaGFuZ2luZyB0aGUgYGJ1dHRvbl90ZXh0YCBwYXJhbWV0ZXIgaW4gdGhlIGJ1dHRvbiBjYWxsLiAgSXQgaXMgdGhpcyB0ZXh0IHRoYXQgaXMgcmV0dXJuZWQgd2hlbiBhIHdpbmRvdyBpcyByZWFkLiAgVGhpcyB0ZXh0IHdpbGwgYmUgd2hhdCB0ZWxscyB5b3Ugd2hpY2ggYnV0dG9uIHdhcyBjbGlja2VkLiAgSG93ZXZlciwgeW91IGNhbiBhbHNvIHVzZSBrZXlzIG9uIHlvdXIgYnV0dG9ucyBzbyB0aGF0IHRoZXkgd2lsbCBiZSB1bmlxdWUuICBJZiBvbmx5IHRoZSB0ZXh0IHdlcmUgdXNlZCwgeW91IHdvdWxkIG5ldmVyIGJlIGFibGUgdG8gaGF2ZSAyIGJ1dHRvbnMgaW4gdGhlIHNhbWUgd2luZG93IHdpdGggdGhlIHNhbWUgdGV4dC5cblxuYGBgcHl0aG9uXG5sYXlvdXQgPSAgW1tzZy5CdXR0b24oJ015IEJ1dHRvbicsIGtleT0nX0JVVFRPTl9LRVlfJyldXVxuYGBgXG5cbldpdGggdGhpcyBsYXlvdXQsIHRoZSBldmVudCB0aGF0IGlzIHJldHVybmVkIGZyb20gYSBgV2luZG93LlJlYWQoKWAgY2FsbCB3aGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZCB3aWxsIGJlIFwiYF9CVVRUT05fS0VZX2BcIlxuXG4jIyMgQnV0dG9uIEltYWdlc1xuXG5Ob3cgdGhpcyBpcyBhbiBleGNpdGluZyBmZWF0dXJlIG5vdCBmb3VuZCBpbiBtYW55IHNpbXBsaWZpZWQgcGFja2FnZXMuLi4uIGltYWdlcyBvbiBidXR0b25zISAgWW91IGNhbiBtYWtlIGEgcHJldHR5IHNwaWZmeSB1c2VyIGludGVyZmFjZSB3aXRoIHRoZSBoZWxwIG9mIGEgZmV3IGJ1dHRvbiBpbWFnZXMuXG5cbllvdXIgYnV0dG9uIGltYWdlcyBuZWVkIHRvIGJlIGluIFBORyBvciBHSUYgZm9ybWF0LiAgV2hlbiB5b3UgbWFrZSBhIGJ1dHRvbiB3aXRoIGFuIGltYWdlLCBzZXQgdGhlIGJ1dHRvbiBiYWNrZ3JvdW5kIHRvIHRoZSBzYW1lIGNvbG9yIGFzIHRoZSBiYWNrZ3JvdW5kLiAgVGhlcmUncyBhIGJ1dHRvbiBjb2xvciBUUkFOU1BBUkVOVF9CVVRUT04gdGhhdCB5b3UgY2FuIHNldCB5b3VyIGJ1dHRvbiBjb2xvciB0byBpbiBvcmRlciBmb3IgaXQgdG8gYmxlbmQgaW50byB0aGUgYmFja2dyb3VuZC4gIE5vdGUgdGhhdCB0aGlzIHZhbHVlIGlzIGN1cnJlbnRseSB0aGUgc2FtZSBhcyB0aGUgY29sb3IgYXMgdGhlIGRlZmF1bHQgc3lzdGVtIGJhY2tncm91bmQgb24gV2luZG93cy4gIElmIHlvdSB3YW50IHRvIHNldCB0aGUgYnV0dG9uIGJhY2tncm91bmQgY29sb3IgdG8gdGhlIGN1cnJlbnQgc3lzdGVtIGRlZmF1bHQsIHVzZSB0aGUgdmFsdWUgQ09MT1JfU1lTVEVNX0RFRkFVTFQgYXMgdGhlIGJhY2tncm91bmQgY29sb3IuXG5cblRoaXMgZXhhbXBsZSBjb21lcyBmcm9tIHRoZSBgRGVtbyBNZWRpYSBQbGF5ZXIucHlgIGV4YW1wbGUgcHJvZ3JhbS4gIEJlY2F1c2UgaXQncyBhIG5vbi1ibG9ja2luZyBidXR0b24sIGl0J3MgZGVmaW5lZCBhcyBgUkJ1dHRvbmAuICBZb3UgYWxzbyBwdXQgaW1hZ2VzIG9uIGJsb2NraW5nIGJ1dHRvbnMgYnkgdXNpbmcgYEJ1dHRvbmAuXG5cbmBgYHB5dGhvblxuc2cuQnV0dG9uKCdSZXN0YXJ0IFNvbmcnLCBidXR0b25fY29sb3I9c2cuVFJBTlNQQVJFTlRfQlVUVE9OLFxuICAgICAgICAgICAgICAgaW1hZ2VfZmlsZW5hbWU9aW1hZ2VfcmVzdGFydCwgaW1hZ2Vfc2l6ZT0oNTAsIDUwKSwgaW1hZ2Vfc3Vic2FtcGxlPTIsIGJvcmRlcl93aWR0aD0wKVxuYGBgXG5UaHJlZSBwYXJhbWV0ZXJzIGFyZSB1c2VkIGZvciBidXR0b24gaW1hZ2VzLlxuXG5gYGBcbmltYWdlX2ZpbGVuYW1lIC0gRmlsZW5hbWUuIENhbiBiZSBhIHJlbGF0aXZlIHBhdGhcbmltYWdlX3NpemUgLSBTaXplIG9mIGltYWdlIGZpbGUgaW4gcGl4ZWxzXG5pbWFnZV9zdWJzYW1wbGUgLSBBbW91bnQgdG8gZGl2aWRlIHRoZSBzaXplIGJ5LiAgMiBtZWFucyB5b3VyIGltYWdlIHdpbGwgYmUgMS8yIHRoZSBzaXplLiAgMyBtZWFucyAxLzNcbmBgYFxuXG5IZXJlJ3MgYW4gZXhhbXBsZSB3aW5kb3cgbWFkZSB3aXRoIGJ1dHRvbiBpbWFnZXMuXG5cbiFbbWVkaWEgZmlsZSBwbGF5ZXJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQzMTYxOTc3LTllZTdjYWNlLThmNTctMTFlOC04ZmY4LTNlYTI0YjY5ZGFiOS5qcGcpXG5cbllvdSdsbCBmaW5kIHRoZSBzb3VyY2UgY29kZSBpbiB0aGUgZmlsZSBEZW1vIE1lZGlhIFBsYXllci4gIEhlcmUgaXMgd2hhdCB0aGUgYnV0dG9uIGNhbGxzIGxvb2sgbGlrZSB0byBjcmVhdGUgbWVkaWEgcGxheWVyIHdpbmRvd1xuIGBgYHB5dGhvblxuc2cuQnV0dG9uKCdQYXVzZScsIGJ1dHRvbl9jb2xvcj1zZy5UUkFOU1BBUkVOVF9CVVRUT04sXG4gICAgICAgICAgICAgIGltYWdlX2ZpbGVuYW1lPWltYWdlX3BhdXNlLFxuICAgICAgICAgICAgICBpbWFnZV9zaXplPSg1MCwgNTApLFxuICAgICAgICAgICAgICBpbWFnZV9zdWJzYW1wbGU9MixcbiAgICAgICAgICAgICAgYm9yZGVyX3dpZHRoPTApXG5gYGBcblxuRXhwZXJpbWVudGF0aW9uIGlzIHNvbWV0aW1lcyByZXF1aXJlZCBmb3IgdGhlc2UgY29uY2VwdHMgdG8gcmVhbGx5IHNpbmsgaW4uXG5cbiMjIyBSZWFsdGltZSBCdXR0b25zXG5cbk5vcm1hbGx5IGJ1dHRvbnMgYXJlIGNvbnNpZGVyZWQgXCJjbGlja2VkXCIgd2hlbiB0aGUgbW91c2UgYnV0dG9uIGlzIGxldCBVUCBhZnRlciBhIGRvd253YXJkIGNsaWNrIG9uIHRoZSBidXR0b24uICBXaGF0IGFib3V0IHRpbWVzIHdoZW4geW91IG5lZWQgdG8gcmVhZCB0aGUgcmF3IHVwL2Rvd24gYnV0dG9uIHZhbHVlcy4gIEEgY2xhc3NpYyBleGFtcGxlIGZvciB0aGlzIGlzIGEgcm9ib3RpYyByZW1vdGUgY29udHJvbC4gIEJ1aWxkaW5nIGEgcmVtb3RlIGNvbnRyb2wgdXNpbmcgYSBHVUkgaXMgZWFzeSBlbm91Z2guICBPbmUgYnV0dG9uIGZvciBlYWNoIG9mIHRoZSBkaXJlY3Rpb25zIGlzIGEgc3RhcnQuICBQZXJoYXBzIHNvbWV0aGluZyBsaWtlIHRoaXM6XG5cbiFbcm9ib3QgcmVtb3RlXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NDk1OTk1OC1mZjliNzAwMC1hZWM0LTExZTgtOTllYS03NDUwOTI2NDA5YmUuanBnKVxuXG5UaGlzIHdpbmRvdyBoYXMgMiBidXR0b24gdHlwZXMuICBUaGVyZSdzIHRoZSBub3JtYWwgXCJSZWFkIEJ1dHRvblwiIChRdWl0KSBhbmQgNCBcIlJlYWx0aW1lIEJ1dHRvbnNcIi5cblxuSGVyZSBpcyB0aGUgY29kZSB0byBtYWtlLCBzaG93IGFuZCBnZXQgcmVzdWx0cyBmcm9tIHRoaXMgd2luZG93OlxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5ndWlfcm93cyA9IFtbc2cuVGV4dCgnUm9ib3RpY3MgUmVtb3RlIENvbnRyb2wnKV0sXG4gICAgICAgICAgICBbc2cuVCgnICcgICogMTApLCBzZy5SZWFsdGltZUJ1dHRvbignRm9yd2FyZCcpXSxcbiAgICAgICAgICAgIFtzZy5SZWFsdGltZUJ1dHRvbignTGVmdCcpLCBzZy5UKCcgJyAgKiAxNSksIHNnLlJlYWx0aW1lQnV0dG9uKCdSaWdodCcpXSxcbiAgICAgICAgICAgIFtzZy5UKCcgJyAgKiAxMCksIHNnLlJlYWx0aW1lQnV0dG9uKCdSZXZlcnNlJyldLFxuICAgICAgICAgICAgW3NnLlQoJycpXSxcbiAgICAgICAgICAgIFtzZy5RdWl0KGJ1dHRvbl9jb2xvcj0oJ2JsYWNrJywgJ29yYW5nZScpKV1cbiAgICAgICAgICAgIF1cblxud2luZG93ID0gc2cuV2luZG93KCdSb2JvdGljcyBSZW1vdGUgQ29udHJvbCcsIGd1aV9yb3dzKVxuXG4jXG4jIFNvbWUgcGxhY2UgbGF0ZXIgaW4geW91ciBjb2RlLi4uXG4jIFlvdSBuZWVkIHRvIHBlcmZvcm0gYSBSZWFkIG9yIFJlZnJlc2ggY2FsbCBvbiB5b3VyIHdpbmRvdyBldmVyeSBub3cgYW5kIHRoZW4gb3JcbiMgZWxzZSBpdCB3aWxsIGFwcHJlYXIgYXMgaWYgdGhlIHByb2dyYW0gaGFzIGxvY2tlZCB1cC5cbiNcbiMgeW91ciBwcm9ncmFtJ3MgbWFpbiBsb29wXG53aGlsZSAoVHJ1ZSk6XG4gICAgIyBUaGlzIGlzIHRoZSBjb2RlIHRoYXQgcmVhZHMgYW5kIHVwZGF0ZXMgeW91ciB3aW5kb3dcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQodGltZW91dD01MClcbiAgICBwcmludChldmVudClcbiAgICBpZiBldmVudCBpbiAoJ1F1aXQnLCBOb25lKTpcbiAgICAgICAgYnJlYWtcblxud2luZG93LkNsb3NlKCkgICMgRG9uJ3QgZm9yZ2V0IHRvIGNsb3NlIHlvdXIgd2luZG93IVxuYGBgXG5cblRoaXMgbG9vcCB3aWxsIHJlYWQgYnV0dG9uIHZhbHVlcyBhbmQgcHJpbnQgdGhlbS4gIFdoZW4gb25lIG9mIHRoZSBSZWFsdGltZSBidXR0b25zIGlzIGNsaWNrZWQsIHRoZSBjYWxsIHRvIGB3aW5kb3cuUmVhZGAgd2lsbCAgcmV0dXJuIGEgYnV0dG9uIG5hbWUgbWF0Y2hpbmcgdGhlIG5hbWUgb24gdGhlIGJ1dHRvbiB0aGF0IHdhcyBkZXByZXNzZWQgb3IgdGhlIGtleSBpZiB0aGVyZSB3YXMgYSBrZXkgYXNzaWduZWQgdG8gdGhlIGJ1dHRvbi4gIEl0IHdpbGwgY29udGludWUgdG8gcmV0dXJuIHZhbHVlcyBhcyBsb25nIGFzIHRoZSBidXR0b24gcmVtYWlucyBkZXByZXNzZWQuICBPbmNlIHJlbGVhc2VkLCB0aGUgUmVhZCB3aWxsIHJldHVybiB0aW1lb3V0IGV2ZW50cyB1bnRpbCBhIGJ1dHRvbiBpcyBhZ2FpbiBjbGlja2VkLlxuXG4qKkZpbGUgVHlwZXMqKlxuVGhlIGBGaWxlQnJvd3NlYCAmIGBTYXZlQXNgIGJ1dHRvbnMgaGF2ZSBhbiBhZGRpdGlvbmFsIHNldHRpbmcgbmFtZWQgYGZpbGVfdHlwZXNgLiAgVGhpcyB2YXJpYWJsZSBpcyB1c2VkIHRvIGZpbHRlciB0aGUgZmlsZXMgc2hvd24gaW4gdGhlIGZpbGUgZGlhbG9nIGJveC4gIFRoZSBkZWZhdWx0IHZhbHVlIGZvciB0aGlzIHNldHRpbmcgaXNcblxuICAgIEZpbGVUeXBlcz0oKFwiQUxMIEZpbGVzXCIsIFwiKi4qXCIpLClcblxuVGhpcyBjb2RlIHByb2R1Y2VzIGEgd2luZG93IHdoZXJlIHRoZSBCcm93c2UgYnV0dG9uIG9ubHkgc2hvd3MgZmlsZXMgb2YgdHlwZSAuVFhUXG5cbiAgICBsYXlvdXQgPSAgW1tzZy5JbigpICxzZy5GaWxlQnJvd3NlKGZpbGVfdHlwZXM9KChcIlRleHQgRmlsZXNcIiwgXCIqLnR4dFwiKSwpKV1dXG5cbk5PVEUgLSBNYWMgdXNlcnMgd2lsbCBub3QgYmUgYWJsZSB0byB1c2UgdGhlIGZpbGVfdHlwZXMgcGFyYW1ldGVyLiAgdGtpbnRlciBoYXMgYSBidWcgb24gTWFjcyB0aGF0IHdpbGwgY3Jhc2ggdGhlIHByb2dyYW0gaXMgYSBmaWxlX3R5cGUgaXMgYXR0ZW1wdGVkIHNvIHRoYXQgZmVhdHVyZSBoYWQgdG8gYmUgcmVtb3ZlZC4gIFNvcnJ5IGFib3V0IHRoYXQhXG5cbiAgKioqVGhlIEVOVEVSIGtleSoqKlxuICAgICAgIFRoZSBFTlRFUiBrZXkgaXMgYW4gaW1wb3J0YW50IHBhcnQgb2YgZGF0YSBlbnRyeSBmb3Igd2luZG93cy4gIFRoZXJlJ3MgYSBsb25nICB0cmFkaXRpb24gb2YgdGhlIGVudGVyIGtleSBiZWluZyB1c2VkIHRvIHF1aWNrbHkgc3VibWl0IHdpbmRvd3MuICBQeVNpbXBsZUdVSSBpbXBsZW1lbnRzIHRoaXMgYnkgdHlpbmcgdGhlIEVOVEVSIGtleSB0byB0aGUgZmlyc3QgYnV0dG9uIHRoYXQgY2xvc2VzIG9yIHJlYWRzIGEgd2luZG93LlxuXG5UaGUgRW50ZXIgS2V5IGNhbiBiZSBcImJvdW5kXCIgdG8gYSBwYXJ0aWN1bGFyIGJ1dHRvbiBzbyB0aGF0IHdoZW4gdGhlIGtleSBpcyBwcmVzc2VkLCBpdCBjYXVzZXMgdGhlIHdpbmRvdyB0byByZXR1cm4gYXMgaWYgdGhlIGJ1dHRvbiB3YXMgY2xpY2tlZC4gIFRoaXMgaXMgZG9uZSB1c2luZyB0aGUgYGJpbmRfcmV0dXJuX2tleWAgcGFyYW1ldGVyIGluIHRoZSBidXR0b24gY2FsbHMuXG5JZiB0aGVyZSBhcmUgbW9yZSB0aGFuIDEgYnV0dG9uIG9uIGEgd2luZG93LCB0aGUgRklSU1QgYnV0dG9uIHRoYXQgaXMgb2YgdHlwZSBDbG9zZSB3aW5kb3cgb3IgUmVhZCB3aW5kb3cgaXMgdXNlZC4gIEZpcnN0IGlzIGRldGVybWluZWQgYnkgc2Nhbm5pbmcgdGhlIHdpbmRvdywgdG9wIHRvIGJvdHRvbSBhbmQgbGVmdCB0byByaWdodC5cblxuIyMgQnV0dG9uTWVudSBFbGVtZW50XG5cblRoZSBCdXR0b25NZW51IGVsZW1lbnQgcHJvZHVjZXMgYSB1bmlxdWUga2luZCBvZiBlZmZlY3QuICBJdCdzIGEgYnV0dG9uLCB0aGF0IHdoZW4gY2xpY2tlZCwgc2hvd3MgeW91IGEgbWVudS4gICBJdCdzIGxpa2UgY2xpY2tpbmcgb25lIG9mIHRoZSB0b3AtbGV2ZWwgbWVudSBpdGVtcyBvbiBhIE1lbnVCYXIuICBBcyBhIHJlc3VsdCwgdGhlIG1lbnUgZGVmaW5pdGlvbiB0YWtlIHRoZSBmb3JtYXQgb2YgYSBzaW5nbGUgIG1lbnUgZW50cnkgZnJvbSAgYSBub3JtYWwgbWVudSBkZWZpbml0aW9uLiAgQSBub3JtYWwgbWVudSBkZWZpbml0aW9uIGlzICBhIGxpc3Qgb2YgbGlzdHMuICBUaGlzIGRlZmluaXRpb24gaXMgb25lIG9mIHRob3NlIGxpc3RzLlxuXG5gYGBweXRob25cbiBbJ01lbnUnLCBbJyZQYXVzZSBHcmFwaCcsICdNZW51IGl0ZW06Om9wdGlvbmFsX2tleSddXVxuYGBgXG5cblRoZSB2ZXJ5IGZpcnN0IHN0cmluZyBub3JtYWxseSBzcGVjaWZpZXMgd2hhdCBpcyBzaG93biBvbiB0aGUgbWVudSBiYXIuICBJbiB0aGlzIGNhc2UsIHRoZSB2YWx1ZSBpcyAqKm5vdCB1c2VkKiouICBZb3Ugc2V0IHRoZSB0ZXh0IGZvciB0aGUgYnV0dG9uIHVzaW5nIGEgZGlmZmVyZW50IHBhcmFtZXRlciwgdGhlIGBidXR0b25fdGV4dGAgcGFybS5cblxuT25lIHVzZSBvZiB0aGlzIGVsZW1lbnQgaXMgdG8gbWFrZSBhIFwiZmFrZSBtZW51IGJhclwiIHRoYXQgaGFzIGEgY29sb3JlZCBiYWNrZ3JvdW5kLiAgTm9ybWFsIG1lbnUgYmFycyBjYW5ub3QgaGF2ZSB0aGVpciBiYWNrZ3JvdW5kIGNvbG9yIGNoYW5nZWQuICBOb3Qgc28gd2l0aCBCdXR0b25NZW51cy5cblxuIVtidXR0b25tZW51XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My81MDM4NzAwMC1iYzBkODE4MC0wNmMwLTExZTktOGQxNy0zYjIyZWQ2NjVlNzguZ2lmKVxuXG5SZXR1cm4gdmFsdWVzIGZvciBCdXR0b25NZW51cyBhcmUgc2VudCB2aWEgdGhlIHJldHVybiB2YWx1ZXMgZGljdGlvbmFyeS4gIElmIGEgc2VsZWN0aW9uIGlzIG1hZGUsIHRoZW4gYW4gZXZlbnQgaXMgZ2VuZXJhdGVkIHRoYXQgd2lsbCBlcXVhbCB0aGUgQnV0dG9uTWVudSdzIGtleSB2YWx1ZS4gIFVzZSB0aGF0IGtleSB2YWx1ZSB0byBsb29rIHVwIHRoZSB2YWx1ZSBzZWxlY3RlZCBieSB0aGUgdXNlci4gIFRoaXMgaXMgdGhlIHNhbWUgbWVjaGFuaXNtIGFzIHRoZSBNZW51IEJhciBFbGVtZW50LCBidXQgZGlmZmVycyBmcm9tIHRoZSBwb3AtdXAgKHJpZ2h0IGNsaWNrKSBtZW51LlxuXG4jIyBWZXJ0aWNhbFNlcGFyYXRvciBFbGVtZW50XG5cblRoaXMgZWxlbWVudCBoYXMgbGltaXRlZCB1c2VmdWxuZXNzIGFuZCBpcyBiZWluZyBpbmNsdWRlZCBtb3JlIGZvciBjb21wbGV0ZW5lc3MgdGhhbiBhbnl0aGluZyBlbHNlLiAgSXQgd2lsbCBkcmF3IGEgbGluZSBiZXR3ZWVuIGVsZW1lbnRzLlxuXG5JdCB3b3JrcyBiZXN0IHdoZW4gcGxhY2VkIGJldHdlZW4gY29sdW1ucyBvciBlbGVtZW50cyB0aGF0IHNwYW4gbXVsdGlwbGUgcm93cy4gIElmIG9uIGEgXCJub3JtYWxcIiByb3cgd2l0aCBlbGVtZW50cyB0aGF0IGFyZSBvbmx5IDEgcm93IGhpZ2gsIHRoZW4gaXQgd2lsbCBvbmx5IHNwYW4gdGhhdCBvbmUgcm93LlxuXG5gYGBweXRob25cblZlcnRpY2FsU2VwYXJhdG9yKHBhZD1Ob25lKVxuYGBgXG5cbiFbc25hZy0wMTI5XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NzM3NjA0MS1hOTJhMDEwMC1kNmJmLTExZTgtOGY1Yi0wYzBkZjU2Y2YwZjMuanBnKVxuXG4jIyBIb3Jpem9udGFsU2VwYXJhdG9yIEVsZW1lbnRcblxuSW4gUHlTaW1wbGVHVUksIHRoZSB0a2ludGVyIHBvcnQsIHRoZXJlIGlzIG5vIGBIb3Jpem9udGFsU2VwYXJhdG9yYCBFbGVtZW50LiAgT25lIHdpbGwgYmUgYWRkZWQgYXMgYSBcInN0dWJcIiBzbyB0aGF0IGNvZGUgaXMgcG9ydGFibGUuICBJdCB3aWxsIGxpa2VseSBkbyBub3RoaW5nIGp1c3QgbGlrZSB0aGUgYFN0cmV0Y2hgIEVsZW1lbnQuXG5cbkFuIGVhc3kgd2F5IHRvIGdldCBhIGhvcml6b250YWwgbGluZSBpbiBQeVNpbXBsZUdVSSBpcyB0byB1c2UgYSBgVGV4dGAgRWxlbWVudCB0aGF0IGNvbnRhaW5zIGEgbGluZSBvZiB1bmRlcnNjb3Jlc1xuXG5gYGBweXRob25cbnNnLlRleHQoJ18nKjMwKSAgICAgICAgICAgICAjIG1ha2UgYSBob3Jpem9udGFsIGxpbmUgc3RyZXRjaGluZyAzMCBjaGFyYWN0ZXJzXG5gYGBcblxuIyMgUHJvZ3Jlc3NCYXIgRWxlbWVudFxuVGhlIGBQcm9ncmVzc0JhcmAgZWxlbWVudCBpcyB1c2VkIHRvIGJ1aWxkIGN1c3RvbSBQcm9ncmVzcyBCYXIgd2luZG93cy4gIEl0IGlzIEhJR0hMWSByZWNvbW1lbmRlZCB0aGF0IHlvdSB1c2UgT25lTGluZVByb2dyZXNzTWV0ZXIgdGhhdCBwcm92aWRlcyBhIGNvbXBsZXRlIHByb2dyZXNzIG1ldGVyIHNvbHV0aW9uIGZvciB5b3UuICBQcm9ncmVzcyBNZXRlcnMgYXJlIG5vdCBlYXN5IHRvIHdvcmsgd2l0aCBiZWNhdXNlIHRoZSB3aW5kb3dzIGhhdmUgdG8gYmUgbm9uLWJsb2NraW5nIGFuZCB0aGV5IGFyZSB0cmlja3kgdG8gZGVidWcuXG5cblRoZSAqKmVhc2llc3QqKiB3YXkgdG8gZ2V0IHByb2dyZXNzIG1ldGVycyBpbnRvIHlvdXIgY29kZSBpcyB0byB1c2UgdGhlIGBPbmVMaW5lUHJvZ3Jlc3NNZXRlcmAgQVBJLiAgVGhpcyBjb25zaXN0cyBvZiBhIHBhaXIgb2YgZnVuY3Rpb25zLCBgT25lTGluZVByb2dyZXNzTWV0ZXJgIGFuZCBgT25lTGluZVByb2dyZXNzTWV0ZXJDYW5jZWxgLiAgWW91IGNhbiBlYXNpbHkgY2FuY2VsIGFueSBwcm9ncmVzcyBtZXRlciBieSBjYWxsaW5nIGl0IHdpdGggdGhlIGN1cnJlbnQgdmFsdWUgPSBtYXggdmFsdWUuICBUaGlzIHdpbGwgbWFyayB0aGUgbWV0ZXIgYXMgZXhwaXJlZCBhbmQgY2xvc2UgdGhlIHdpbmRvdy5cbllvdSd2ZSBhbHJlYWR5IHNlZW4gT25lTGluZVByb2dyZXNzTWV0ZXIgY2FsbHMgcHJlc2VudGVkIGVhcmxpZXIgaW4gdGhpcyByZWFkbWUuXG5cbmBgYHB5dGhvblxuc2cuT25lTGluZVByb2dyZXNzTWV0ZXIoJ015IE1ldGVyJywgaSsxLCAxMDAwLCAgJ2tleScsICdPcHRpb25hbCBtZXNzYWdlJylcbmBgYFxuXG5UaGUgcmV0dXJuIHZhbHVlIGZvciBgT25lTGluZVByb2dyZXNzTWV0ZXJgIGlzOlxuYFRydWVgIGlmIG1ldGVyIHVwZGF0ZWQgY29ycmVjdGx5XG5gRmFsc2VgIGlmIHVzZXIgY2xpY2tlZCB0aGUgQ2FuY2VsIGJ1dHRvbiwgY2xvc2VkIHRoZSB3aW5kb3csIG9yIHZhbGUgcmVhY2hlZCB0aGUgbWF4IHZhbHVlLlxuXG4jIyMjIFByb2dyZXNzIE1ldGVyIGluIFlvdXIgd2luZG93XG5Bbm90aGVyIHdheSBvZiB1c2luZyBhIFByb2dyZXNzIE1ldGVyIHdpdGggUHlTaW1wbGVHVUkgaXMgdG8gYnVpbGQgYSBjdXN0b20gd2luZG93IHdpdGggYSBgUHJvZ3Jlc3NCYXJgIEVsZW1lbnQgaW4gdGhlIHdpbmRvdy4gIFlvdSB3aWxsIG5lZWQgdG8gcnVuIHlvdXIgd2luZG93IGFzIGEgbm9uLWJsb2NraW5nIHdpbmRvdy4gIFdoZW4geW91IGFyZSByZWFkeSB0byB1cGRhdGUgeW91ciBwcm9ncmVzcyBiYXIsIHlvdSBjYWxsIHRoZSBgVXBkYXRlQmFyYCBtZXRob2QgZm9yIHRoZSBgUHJvZ3Jlc3NCYXJgIGVsZW1lbnQgaXRzZWxmLlxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG4jIGxheW91dCB0aGUgd2luZG93XG5sYXlvdXQgPSBbW3NnLlRleHQoJ0EgY3VzdG9tIHByb2dyZXNzIG1ldGVyJyldLFxuICAgICAgICAgIFtzZy5Qcm9ncmVzc0JhcigxMDAwMCwgb3JpZW50YXRpb249J2gnLCBzaXplPSgyMCwgMjApLCBrZXk9J3Byb2dyZXNzYmFyJyldLFxuICAgICAgICAgIFtzZy5DYW5jZWwoKV1dXG5cbiMgY3JlYXRlIHRoZSB3aW5kb3dgXG53aW5kb3cgPSBzZy5XaW5kb3coJ0N1c3RvbSBQcm9ncmVzcyBNZXRlcicsIGxheW91dClcbnByb2dyZXNzX2JhciA9IHdpbmRvdy5GaW5kRWxlbWVudCgncHJvZ3Jlc3NiYXInKVxuIyBsb29wIHRoYXQgd291bGQgbm9ybWFsbHkgZG8gc29tZXRoaW5nIHVzZWZ1bFxuZm9yIGkgaW4gcmFuZ2UoMTAwMDApOlxuICAgICMgY2hlY2sgdG8gc2VlIGlmIHRoZSBjYW5jZWwgYnV0dG9uIHdhcyBjbGlja2VkIGFuZCBleGl0IGxvb3AgaWYgY2xpY2tlZFxuICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQodGltZW91dD0wKVxuICAgIGlmIGV2ZW50ID09ICdDYW5jZWwnICBvciBldmVudCBpcyBOb25lOlxuICAgICAgICBicmVha1xuICAjIHVwZGF0ZSBiYXIgd2l0aCBsb29wIHZhbHVlICsxIHNvIHRoYXQgYmFyIGV2ZW50dWFsbHkgcmVhY2hlcyB0aGUgbWF4aW11bVxuICBwcm9ncmVzc19iYXIuVXBkYXRlQmFyKGkgKyAxKVxuIyBkb25lIHdpdGggbG9vcC4uLiBuZWVkIHRvIGRlc3Ryb3kgdGhlIHdpbmRvdyBhcyBpdCdzIHN0aWxsIG9wZW5cbndpbmRvdy5DbG9zZSgpXG5gYGBcblxuIVtwcm9ncmVzcyBjdXN0b21dKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ1MjQzOTY5LWMzNTA4MTAwLWIyYzMtMTFlOC04MmJjLTkyN2QwMzA3ZTA5My5qcGcpXG5cbiMjIE91dHB1dCBFbGVtZW50XG5cblRoZSBPdXRwdXQgRWxlbWVudCBpcyBhIHJlLWRpcmVjdGlvbiBvZiBTdGRvdXQuXG5cbklmIHlvdSBhcmUgbG9va2luZyBmb3IgYSB3YXkgdG8gcXVpY2tseSBhZGQgdGhlIGFiaWxpdHkgdG8gc2hvdyBzY3JvbGxpbmcgdGV4dCB3aXRoaW4geW91ciB3aW5kb3csIHRoZW4gYWRkaW5nIGFuIGBPdXRwdXRgIEVsZW1lbnQgaXMgYWJvdXQgYXMgcXVpY2sgYW5kIGVhc3kgYXMgaXQgZ2V0cy5cblxuKipBbnl0aGluZyBcInByaW50ZWRcIiB3aWxsIGJlIGRpc3BsYXllZCBpbiB0aGlzIGVsZW1lbnQuKiogIFRoaXMgaXMgdGhlIFwidHJpdmlhbFwiIHdheSB0byBzaG93IHNjcm9sbGluZyB0ZXh0IGluIHlvdXIgd2luZG93LiAgSXQncyBhcyBlYXN5IGFzIGRyb3BwaW5nIGFuIE91dHB1dCBFbGVtZW50IGludG8geW91ciB3aW5kb3cgYW5kIHRoZW4gY2FsbGluZyBwcmludCBhcyBtdWNoIGFzIHlvdSB3YW50LiAgVGhlIHVzZXIgd2lsbCBzZWUgYSBzY3JvbGxpbmcgYXJlYSBvZiB0ZXh0IGluc2lkZSB0aGVpciB3aW5kb3cuXG5cbioqKklNUE9SVEFOVCoqKiAgWW91IHdpbGwgTk9UIHNlZSB3aGF0IHlvdSBgcHJpbnRgIHVudGlsIHlvdSBjYWxsIGVpdGhlciBgd2luZG93LlJlYWRgIG9yIGB3aW5kb3cuUmVmcmVzaGAuICBJZiB5b3Ugd2FudCB0byBpbW1lZGlhdGVseSBzZWUgd2hhdCB3YXMgcHJpbnRlZCwgY2FsbCBgd2luZG93LlJlZnJlc2goKWAgaW1tZWRpYXRlbHkgYWZ0ZXIgeW91ciBwcmludCBzdGF0ZW1lbnQuXG5cbmBgYHB5dGhvblxuT3V0cHV0KHNpemU9KDgwLDIwKSlcbmBgYFxuXG4hW291dHB1dF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDQ5NTk4NjMtYjcyZjgyODAtYWVjMy0xMWU4LThjYWEtN2JjNzQzMTQ5OTUzLmpwZylcblxuLS0tLVxuXG5IZXJlJ3MgYSBjb21wbGV0ZSBzb2x1dGlvbiBmb3IgYSBjaGF0LXdpbmRvdyB1c2luZyBhbiBPdXRwdXQgRWxlbWVudC4gIFRvIGRpc3BsYXkgZGF0YSB0aGF0J3MgcmVjZWl2ZWQsIHlvdSB3b3VsZCB0byBzaW1wbHkgXCJwcmludFwiIGl0IGFuZCBpdCB3aWxsIHNob3cgdXAgaW4gdGhlIG91dHB1dCBhcmVhLiAgWW91J2xsIGZpbmQgdGhpcyB0ZWNobmlxdWUgdXNlZCBpbiBzZXZlcmFsIERlbW8gUHJvZ3JhbXMgaW5jbHVkaW5nIHRoZSBIb3dEb0kgYXBwbGljYXRpb24uXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbiMgQmxvY2tpbmcgd2luZG93IHRoYXQgZG9lc24ndCBjbG9zZVxuZGVmIENoYXRCb3QoKTpcbiAgICBsYXlvdXQgPSBbWyhzZy5UZXh0KCdUaGlzIGlzIHdoZXJlIHN0YW5kYXJkIG91dCBpcyBiZWluZyByb3V0ZWQnLCBzaXplPVs0MCwgMV0pKV0sXG4gICAgICAgICAgICAgIFtzZy5PdXRwdXQoc2l6ZT0oODAsIDIwKSldLFxuICAgICAgICAgICAgICBbc2cuTXVsdGlsaW5lKHNpemU9KDcwLCA1KSwgZW50ZXJfc3VibWl0cz1UcnVlKSxcbiAgICAgICAgICAgICAgIHNnLkJ1dHRvbignU0VORCcsIGJ1dHRvbl9jb2xvcj0oc2cuWUVMTE9XU1swXSwgc2cuQkxVRVNbMF0pKSxcbiAgICAgICAgICAgICAgIHNnLkJ1dHRvbignRVhJVCcsIGJ1dHRvbl9jb2xvcj0oc2cuWUVMTE9XU1swXSwgc2cuR1JFRU5TWzBdKSldXVxuXG4gIHdpbmRvdyA9IHNnLldpbmRvdygnQ2hhdCBXaW5kb3cnLCBsYXlvdXQsIGRlZmF1bHRfZWxlbWVudF9zaXplPSgzMCwgMikpXG5cbiAgICAjIC0tLT09PS0tLSBMb29wIHRha2luZyBpbiB1c2VyIGlucHV0IGFuZCB1c2luZyBpdCB0byBxdWVyeSBIb3dEb0kgd2ViIG9yYWNsZSAtLS0gI1xuICB3aGlsZSBUcnVlOlxuICAgICAgICBldmVudCwgdmFsdWUgPSB3aW5kb3cuUmVhZCgpXG4gICAgICAgIGlmIGV2ZW50ID09ICdTRU5EJzpcbiAgICAgICAgICAgIHByaW50KHZhbHVlKVxuICAgICAgICBlbHNlOlxuICAgICAgICAgICAgYnJlYWtcblxuQ2hhdEJvdCgpXG5gYGBcblxuIyMgQ29sdW1uIEVsZW1lbnRcblxuU3RhcnRpbmcgaW4gdmVyc2lvbiAyLjkgeW91J2xsIGJlIGFibGUgdG8gZG8gbW9yZSBjb21wbGV4IGxheW91dHMgYnkgdXNpbmcgdGhlIENvbHVtbiBFbGVtZW50LiAgVGhpbmsgb2YgYSBDb2x1bW4gYXMgYSB3aW5kb3cgd2l0aGluIGEgd2luZG93LiAgQW5kLCB5ZXMsIHlvdSBjYW4gaGF2ZSBhIENvbHVtbiB3aXRoaW4gYSBDb2x1bW4gaWYgeW91IHdhbnQuXG5cbkNvbHVtbnMgYXJlIHNwZWNpZmllZCwgbGlrZSBhbGwgXCJjb250YWluZXIgZWxlbWVudHNcIiwgaW4gZXhhY3RseSB0aGUgc2FtZSB3YXkgYXMgYSB3aW5kb3csIGFzIGEgbGlzdCBvZiBsaXN0cy5cblxuQ29sdW1ucyBhcmUgbmVlZGVkIHdoZW4geW91IHdhbnQgdG8gc3BlY2lmeSBtb3JlIHRoYW4gMSBlbGVtZW50IGluIGEgc2luZ2xlIHJvdy4gIFxuXG5Gb3IgZXhhbXBsZSwgdGhpcyBsYXlvdXQgaGFzIGEgc2luZ2xlIHNsaWRlciBlbGVtZW50IHRoYXQgc3BhbnMgc2V2ZXJhbCByb3dzIGZvbGxvd2VkIGJ5IDcgYFRleHRgIGFuZCBgSW5wdXRgIGVsZW1lbnRzIG9uIHRoZSBzYW1lIHJvdy5cblxuIVtjb2x1bW5dKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ0OTU5OTg4LTY2YjkyNDgwLWFlYzUtMTFlOC05YzI2LTMxNmVkMjRhNjhjMC5qcGcpXG5cbldpdGhvdXQgYSBDb2x1bW4gRWxlbWVudCB5b3UgY2FuJ3QgY3JlYXRlIGEgbGF5b3V0IGxpa2UgdGhpcy4gIEJ1dCB3aXRoIGl0LCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gY2xvc2VseSBtYXRjaCBhbnkgbGF5b3V0IGNyZWF0ZWQgdXNpbmcgdGtpbnRlciBvbmx5LlxuXG5gYGBweXRob25cblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbiMgRGVtbyBvZiBob3cgY29sdW1ucyB3b3JrXG4jIHdpbmRvdyBoYXMgb24gcm93IDEgYSB2ZXJ0aWNhbCBzbGlkZXIgZm9sbG93ZWQgYnkgYSBDT0xVTU4gd2l0aCA3IHJvd3NcbiMgUHJpb3IgdG8gdGhlIENvbHVtbiBlbGVtZW50LCB0aGlzIGxheW91dCB3YXMgbm90IHBvc3NpYmxlXG4jIENvbHVtbnMgbGF5b3V0cyBsb29rIGlkZW50aWNhbCB0byB3aW5kb3cgbGF5b3V0cywgdGhleSBhcmUgYSBsaXN0IG9mIGxpc3RzIG9mIGVsZW1lbnRzLlxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ0NvbHVtbnMnKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBibGFuayB3aW5kb3dcblxuIyBDb2x1bW4gbGF5b3V0XG5jb2wgPSBbW3NnLlRleHQoJ2NvbCBSb3cgMScpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyAyJyksIHNnLklucHV0KCdjb2wgaW5wdXQgMScpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyAzJyksIHNnLklucHV0KCdjb2wgaW5wdXQgMicpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyA0JyksIHNnLklucHV0KCdjb2wgaW5wdXQgMycpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyA1JyksIHNnLklucHV0KCdjb2wgaW5wdXQgNCcpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyA2JyksIHNnLklucHV0KCdjb2wgaW5wdXQgNScpXSxcbiAgICAgICBbc2cuVGV4dCgnY29sIFJvdyA3JyksIHNnLklucHV0KCdjb2wgaW5wdXQgNicpXV1cblxubGF5b3V0ID0gW1tzZy5TbGlkZXIocmFuZ2U9KDEsMTAwKSwgZGVmYXVsdF92YWx1ZT0xMCwgb3JpZW50YXRpb249J3YnLCBzaXplPSg4LDIwKSksIHNnLkNvbHVtbihjb2wpXSxcbiAgICAgICAgICBbc2cuSW4oJ0xhc3QgaW5wdXQnKV0sXG4gICAgICAgICAgW3NnLk9LKCldXVxuXG4jIERpc3BsYXkgdGhlIHdpbmRvdyBhbmQgZ2V0IHZhbHVlc1xuXG53aW5kb3cgPSBzZy5XaW5kb3coJ0NvbXBhY3QgMS1saW5lIHdpbmRvdyB3aXRoIGNvbHVtbicsIGxheW91dClcbmV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCgpXG53aW5kb3cuQ2xvc2UoKVxuXG5zZy5Qb3B1cChldmVudCwgdmFsdWVzLCBsaW5lX3dpZHRoPTIwMClcblxuYGBgXG5cbiMjIyBDb2x1bW4gSnVzdGlmaWNhdGlvblxuXG5CZWdpbm5pbmcgaW4gUmVsZWFzZSA0LjMgeW91IGNhbiBqdXN0aWZ5IHRoZSBgQ29sdW1uYCBlbGVtZW50J3Mgcm93IGJ5IHNldHRpbmcgdGhlIGBDb2x1bW5gJ3MgYGp1c3RpZmljYXRpb25gIHBhcmFtZXRlci5cblxuWW91IGNhbiBhbHNvIGp1c3RpZnkgdGhlIGVudGlyZSBjb250ZW50cyB3aXRoaW4gYSBgQ29sdW1uYCBieSB1c2luZyB0aGUgQ29sdW1uJ3MgYGVsZW1lbnRfanVzdGlmaWNhdGlvbmAgcGFyYW1ldGVyLlxuXG5XaXRoIHRoZXNlIHBhcmFtZXRlcidzIGl0IGlzIHBvc3NpYmxlIHRvIGNyZWF0ZSB3aW5kb3dzIHRoYXQgaGF2ZSB0aGVpciBjb250ZW50cyBjZW50ZXJlZC4gIFByZXZpb3VzbHkgdGhpcyB3YXMgdmVyeSBkaWZmaWN1bHQgdG8gZG8uXG5cblRoaXMgaXMgY3VycmVudGx5IG9ubHkgYXZhaWxhYmxlIGluIHRoZSBwcmltYXJ5IFB5U2ltcGxlR1VJIHBvcnQuXG5cblRoZXkgY2FuIGFsc28gYmUgdXNlZCB0byBqdXN0aWZ5IGEgZ3JvdXAgb2YgZWxlbWVudHMgaW4gYSBwYXJ0aWN1bGFyIHdheS5cblxuUGxhY2luZyBgQ29sdW1uYCBlbGVtZW50cyBpbnNpZGUgYENvbHVtbnNgIGVsZW1lbnRzIG1ha2UgaXQgcG9zc2libGUgdG8gY3JlYXRlIGEgbXVsdGl0dWRlIG9mIFxuXG4jIyBTaXplciBFbGVtZW50XG5cbk5ldyBpbiA0LjMgaXMgdGhlIGBTaXplcmAgRWxlbWVudC4gIFRoaXMgZWxlbWVudCBpcyB1c2VkIHRvIGhlbHAgY3JlYXRlIGEgY29udGFpbmVyIG9mIGEgcGFydGljdWxhciBzaXplLiAgSXQgY2FuIGJlIHBsYWNlZCBpbnNpZGUgb2YgdGhlc2UgUHlTaW1wbGVHVUkgaXRlbXM6XG5cbiogQ29sdW1uXG4qIEZyYW1lXG4qIFRhYlxuKiBXaW5kb3dcblxuVGhlIGltcGxlbWVudGF0aW9uIG9mIGEgYFNpemVyYCBpcyBxdWl0ZSBzaW1wbGUuICBJdCByZXR1cm5zIGFuIGVtcHR5IGBDb2x1bW5gIGVsZW1lbnQgdGhhdCBoYXMgYSBwYWQgdmFsdWUgc2V0IHRvIHRoZSB2YWx1ZXMgcGFzc2VkIGludG8gdGhlIGBTaXplcmAuICBUaHVzIGlzbid0IG5vdCBhIGNsYXNzIGJ1dCByYXRoZXIgYSBcIlNob3J0Y3V0IGZ1bmN0aW9uXCIgc2ltaWxhciB0byB0aGUgcHJlLWRlZmluZWQgQnV0dG9ucy5cblxuVGhpcyBmZWF0dXJlIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSB0a2ludGVyIHBvcnQgb2YgUHlTaW1wbGVHVUkgYXQgdGhlIG1vbWVudC4gIEEgY3Jvc3MgcG9ydCBpcyBuZWVkZWQuXG5cbi0tLS1cblxuIyMgRnJhbWUgRWxlbWVudCAoTGFiZWxsZWQgRnJhbWVzLCBGcmFtZXMgd2l0aCBhIHRpdGxlKVxuXG5GcmFtZXMgd29yayBleGFjdGx5IHRoZSBzYW1lIHdheSBhcyBDb2x1bW5zLiAgWW91IGNyZWF0ZSBsYXlvdXQgdGhhdCBpcyB0aGVuIHVzZWQgdG8gaW5pdGlhbGl6ZSB0aGUgRnJhbWUuICBMaWtlIGEgQ29sdW1uIGVsZW1lbnQsIGl0J3MgYSBcIkNvbnRhaW5lciBFbGVtZW50XCIgdGhhdCBob2xkcyBvbmUgb3IgbW9yZSBlbGVtZW50cyBpbnNpZGUuXG5cbiFbZnJhbWUgZWxlbWVudF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDU4ODkxNzMtYzIyNDU3MDAtYmQ4ZC0xMWU4LThmNzMtMWU1ZjFiZTNkZGIxLmpwZylcblxuTm90aWNlIGhvdyB0aGUgRnJhbWUgbGF5b3V0IGxvb2tzIGlkZW50aWNhbCB0byBhIHdpbmRvdyBsYXlvdXQuIEEgd2luZG93IHdvcmtzIGV4YWN0bHkgdGhlIHNhbWUgd2F5IGFzIGEgQ29sdW1uIGFuZCBhIEZyYW1lLiAgVGhleSBhbGwgYXJlIFwiY29udGFpbmVyIGVsZW1lbnRzXCIgLSBlbGVtZW50cyB0aGF0IGNvbnRhaW4gb3RoZXIgZWxlbWVudHMuXG5cbipUaGVzZSBjb250YWluZXIgRWxlbWVudHMgY2FuIGJlIG5lc3RlZCBhcyBkZWVwIGFzIHlvdSB3YW50LiogVGhhdCdzIGEgcHJldHR5IHNwaWZmeSBmZWF0dXJlLCByaWdodD8gIFRvb2sgYSBsb3Qgb2Ygd29yayBzbyBiZSBhcHByZWNpYXRpdmUuICBSZWN1cnNpdmUgY29kZSBpc24ndCB0cml2aWFsLlxuXG5UaGlzIGNvZGUgY3JlYXRlcyBhIHdpbmRvdyB3aXRoIGEgRnJhbWUgYW5kIDIgYnV0dG9ucy5cblxuYGBgcHl0aG9uXG5mcmFtZV9sYXlvdXQgPSBbXG4gICAgICAgICAgICAgICAgICBbc2cuVCgnVGV4dCBpbnNpZGUgb2YgYSBmcmFtZScpXSxcbiAgICAgICAgICAgICAgICAgIFtzZy5DQignQ2hlY2sgMScpLCBzZy5DQignQ2hlY2sgMicpXSxcbiAgICAgICAgICAgICAgIF1cbmxheW91dCA9IFtcbiAgICAgICAgICBbc2cuRnJhbWUoJ015IEZyYW1lIFRpdGxlJywgZnJhbWVfbGF5b3V0LCBmb250PSdBbnkgMTInLCB0aXRsZV9jb2xvcj0nYmx1ZScpXSxcbiAgICAgICAgICBbc2cuU3VibWl0KCksIHNnLkNhbmNlbCgpXVxuICAgICAgICAgXVxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ0ZyYW1lIHdpdGggYnV0dG9ucycsIGxheW91dCwgZm9udD0oXCJIZWx2ZXRpY2FcIiwgMTIpKVxuYGBgXG5cbiMjIENhbnZhcyBFbGVtZW50XG5cbkluIG15IG9waW5pb24sIHRoZSB0a2ludGVyIENhbnZhcyBXaWRnZXQgaXMgdGhlIG1vc3QgcG93ZXJmdWwgb2YgdGhlIHRraW50ZXIgd2lkZ2V0LiAgV2hpbGUgSSB0cnkgbXkgYmVzdCB0byBjb21wbGV0ZWx5IGlzb2xhdGUgdGhlIHVzZXIgZnJvbSBhbnl0aGluZyB0aGF0IGlzIHRraW50ZXIgcmVsYXRlZCwgdGhlIENhbnZhcyBFbGVtZW50IGlzIHRoZSBvbmUgZXhjZXB0aW9uLiAgSXQgZW5hYmxlcyBpbnRlZ3JhdGlvbiB3aXRoIGEgbnVtYmVyIG9mIG90aGVyIHBhY2thZ2VzLCBvZnRlbiB3aXRoIHNwZWN0YWN1bGFyIHJlc3VsdHMuXG5cbkhvd2V2ZXIsIHRoZXJlJ3MgYW5vdGhlciB3YXkgdG8gZ2V0IHRoYXQgcG93ZXIgYW5kIHRoYXQncyB0aHJvdWdoIHRoZSBHcmFwaCBFbGVtZW50LCBhbiBldmVuIE1PUkUgcG93ZXJmdWwgRWxlbWVudCBhcyBpdCB1c2VzIGEgQ2FudmFzIHRoYXQgeW91IGNhbiBkaXJlY3RseSBhY2Nlc3MgaWYgbmVlZGVkLiAgVGhlIEdyYXBoIEVsZW1lbnQgaGFzIGEgbGFyZ2UgbnVtYmVyIG9mIGRyYXdpbmcgbWV0aG9kcyB0aGF0IHRoZSBDYW52YXMgRWxlbWVudCBkb2VzIG5vdCBoYXZlLlxuXG4jIyMgTWF0cGxvdGxpYiwgUHlwbG90IEludGVncmF0aW9uXG5cbioqTk9URSAtIFRoZSBuZXdlc3QgdmVyc2lvbiBvZiBNYXRwbG90bGliICgzLjEuMCkgbm8gbG9uZ2VyIHdvcmtzIHdpdGggdGhpcyB0ZWNobmlxdWUuICoqIFlvdSBtdXN0IGluc3RhbGwgMy4wLjMgaW4gb3JkZXIgdG8gdXNlIHRoZSBEZW1vIE1hdHBsb3RsaWIgcHJvZ3JhbXMgcHJvdmlkZWQgaW4gdGhlIERlbW8gUHJvZ3JhbXMgc2VjdGlvbi5cblxuT25lIHN1Y2ggaW50ZWdyYXRpb24gaXMgd2l0aCBNYXRwbG9wbGliIGFuZCBQeXBsb3QuICBUaGVyZSBpcyBhIERlbW8gcHJvZ3JhbSB3cml0dGVuIHRoYXQgeW91IGNhbiB1c2UgYXMgYSBkZXNpZ24gcGF0dGVybiB0byBnZXQgYW4gdW5kZXJzdGFuZGluZyBvZiBob3cgdG8gdXNlIHRoZSBDYW52YXMgV2lkZ2V0IG9uY2UgeW91IGdldCBpdC5cblxuICAgIGRlZiBDYW52YXMoY2FudmFzIC0gYSB0a2ludGVyIGNhbnZhc2YgaWYgeW91IGNyZWF0ZWQgb25lLiBOb3JtYWxseSBub3Qgc2V0XG4gICAgICAgICAgICAgYmFja2dyb3VuZF9jb2xvciAtIGNhbnZhcyBjb2xvclxuICAgICAgICAgICAgIHNpemUgLSBzaXplIGluIHBpeGVsc1xuICAgICAgICAgICAgIHBhZCAtIGVsZW1lbnQgcGFkZGluZyBmb3IgcGFja2luZ1xuICAgICAgICAgICAgIGtleSAtIGtleSB1c2VkIHRvIGxvb2t1cCBlbGVtZW50XG4gICAgICAgICAgICAgdG9vbHRpcCAtIHRvb2x0aXAgdGV4dClcblxuVGhlIG9yZGVyIG9mIG9wZXJhdGlvbnMgdG8gb2J0YWluIGEgdGtpbnRlciBDYW52YXMgV2lkZ2V0IGlzOlxuYGBgcHl0aG9uXG5cbiAgICBmaWd1cmVfeCwgZmlndXJlX3ksIGZpZ3VyZV93LCBmaWd1cmVfaCA9IGZpZy5iYm94LmJvdW5kc1xuICAgICMgZGVmaW5lIHRoZSB3aW5kb3cgbGF5b3V0XG4gICAgbGF5b3V0ID0gW1tzZy5UZXh0KCdQbG90IHRlc3QnKV0sXG4gICAgICAgICAgICAgIFtzZy5DYW52YXMoc2l6ZT0oZmlndXJlX3csIGZpZ3VyZV9oKSwga2V5PSdjYW52YXMnKV0sXG4gICAgICAgICAgICAgIFtzZy5PSyhwYWQ9KChmaWd1cmVfdyAvIDIsIDApLCAzKSwgc2l6ZT0oNCwgMikpXV1cblxuICAgICMgY3JlYXRlIHRoZSB3aW5kb3cgYW5kIHNob3cgaXQgd2l0aG91dCB0aGUgcGxvdFxuICAgIHdpbmRvdyA9IHNnLldpbmRvdygnRGVtbyBBcHBsaWNhdGlvbiAtIEVtYmVkZGluZyBNYXRwbG90bGliIEluIFB5U2ltcGxlR1VJJywgbGF5b3V0KS5GaW5hbGl6ZSgpXG5cbiAgICAjIGFkZCB0aGUgcGxvdCB0byB0aGUgd2luZG93XG4gICAgZmlnX3Bob3RvID0gZHJhd19maWd1cmUod2luZG93LkZpbmRFbGVtZW50KCdjYW52YXMnKS5US0NhbnZhcywgZmlnKVxuXG4gICAgIyBzaG93IGl0IGFsbCBhZ2FpbiBhbmQgZ2V0IGJ1dHRvbnNcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuYGBgXG5cblRvIGdldCBhIHRraW50ZXIgQ2FudmFzIFdpZGdldCBmcm9tIFB5U2ltcGxlR1VJLCBmb2xsb3cgdGhlc2Ugc3RlcHM6XG4qIEFkZCBDYW52YXMgRWxlbWVudCB0byB5b3VyIHdpbmRvd1xuKiBMYXlvdXQgeW91ciB3aW5kb3dcbiogQ2FsbCBgd2luZG93LkZpbmFsaXplKClgIC0gdGhpcyBpcyBhIGNyaXRpY2FsIHN0ZXAgeW91IG11c3Qgbm90IGZvcmdldFxuKiBGaW5kIHRoZSBDYW52YXMgRWxlbWVudCBieSBsb29raW5nIHVwIHVzaW5nIGtleVxuKiBZb3VyIENhbnZhcyBXaWRnZXQgT2JqZWN0IHdpbGwgYmUgdGhlIGZvdW5kX2VsZW1lbnQuVEtDYW52YXNcbiogRHJhdyBvbiB5b3VyIGNhbnZhcyB0byB5b3VyIGhlYXJ0J3MgY29udGVudFxuKiBDYWxsIGB3aW5kb3cuUmVhZCgpYCAtIE5vdGhpbmcgd2lsbCBhcHBlYXIgb24geW91ciBjYW52YXMgdW50aWwgeW91IGNhbGwgUmVhZFxuXG5TZWUgYERlbW9fTWF0cGxvdGxpYi5weWAgZm9yIGEgUmVjaXBlIHlvdSBjYW4gY29weS5cblxuIyMjIE1ldGhvZHMgJiBQcm9wZXJ0aWVzXG5cblRLQ2FudmFzIC0gbm90IGEgbWV0aG9kIGJ1dCBhIHByb3BlcnR5LiBSZXR1cm5zIHRoZSB0a2ludGVyIENhbnZhcyBXaWRnZXRcblxuIyMgR3JhcGggRWxlbWVudFxuXG5BbGwgeW91IG1hdGggZmFucyB3aWxsIGVuam95IHRoaXMgRWxlbWVudC4uLiBhbmQgYWxsIHlvdSBub24tbWF0aCBmYW5zIHdpbGwgZW5qb3kgaXQgZXZlbiBtb3JlLlxuXG5JJ3ZlIGZvdW5kIG5vdGhpbmcgdG8gYmUgbGVzcyBmdW4gdGhhbiBkZWFsaW5nIHdpdGggYSBncmFwaGljJ3MgY29vcmRpbmF0ZSBzeXN0ZW0gZnJvbSBhIEdVSSBGcmFtZXdvcmsuICBJdCdzIGFsd2F5cyB1cHNpZGUgZG93biBmcm9tIHdoYXQgSSB3YW50LiAgKDAsMCkgaXMgaW4gdGhlIHVwcGVyIGxlZnQgaGFuZCBjb3JuZXIuLi4uIHNvbWV0aW1lcy4uLiBvciB3YXMgaXQgaW4gdGhlIGxvd2VyIGxlZnQ/ICBJbiBzaG9ydCwgaXQncyBhICoqcGFpbiBpbiB0aGUgYXNzKiouXG5cbkhvdyBhYm91dCB0aGUgYWJpbGl0eSB0byBnZXQgeW91ciBvd24gbG9jYXRpb24gb2YgKDAsMCkgYW5kIHRoZW4gdXNpbmcgdGhvc2UgY29vcmRpbmF0ZXMgaW5zdGVhZCBvZiB3aGF0IHRraW50ZXIgcHJvdmlkZXM/ICBUaGlzIHJlc3VsdHMgaW4gYSB2ZXJ5IHBvd2VyZnVsIGNhcGFiaWxpdHkgLSB3b3JraW5nIGluIHlvdXIgb3duIHVuaXRzLCBhbmQgdGhlbiBkaXNwbGF5aW5nIHRoZW0gaW4gYW4gYXJlYSBkZWZpbmVkIGluIHBpeGVscy5cblxuSWYgeW91J3ZlIGV2ZXIgYmVlbiBmcnVzdHJhdGVkIHdpdGggd2hlcmUgKDAsMCkgaXMgbG9jYXRlZCBvbiBzb21lIHN1cmZhY2UgeW91IGRyYXcgb24sIHRoZW4gZmVhciBub3QsIHlvdXIgZnJ1c3RyYXRpb24gZW5kcyByaWdodCBoZXJlLiAgWW91IGdldCB0byBkcmF3IHVzaW5nIHdoYXRldmVyIGNvb3JkaW5hdGUgc3lzdGVtIHlvdSB3YW50LiAgUGxhY2UgKDAsMCkgYW55d2hlcmUgeW91IHdhbnQsIGluY2x1ZGluZyBub3QgYW55d2hlcmUgb24geW91ciBHcmFwaC4gIFlvdSBjb3VsZCBkZWZpbmUgYSBHcmFwaCB0aGF0J3MgYWxsIG5lZ2F0aXZlIG51bWJlcnMgYmV0d2VlbiAtMi4xIGFuZCAtMy41IGluIHRoZSBYIGF4aXMgYW5kIC0zIHRvIC04LjIgaW4gdGhlIFkgYXhpc1xuXG5UaGVyZSBhcmUgMyB2YWx1ZXMgeW91J2xsIG5lZWQgdG8gc3VwcGx5IHRoZSBHcmFwaCBFbGVtZW50LiAgVGhleSBhcmU6XG5cbi0gU2l6ZSBvZiB0aGUgY2FudmFzIGluIHBpeGVsc1xuLSBUaGUgbG93ZXIgbGVmdCAoeCx5KSBjb29yZGluYXRlIG9mIHlvdXIgY29vcmRpbmF0ZSBzeXN0ZW1cbi0gVGhlIHVwcGVyIHJpZ2h0ICh4LHkpIGNvb3JkaW5hdGUgb2YgeW91ciBjb29yZGluYXRlIHN5c3RlbVxuXG5BZnRlciB5b3Ugc3VwcGx5IHRob3NlIHZhbHVlcyB5b3UgY2FuIHNjcmliYmxlIGFsbCBvZiBvdmVyIHlvdXIgZ3JhcGggYnkgY3JlYXRpbmcgR3JhcGggRmlndXJlcy4gIEdyYXBoIEZpZ3VyZXMgYXJlIGNyZWF0ZWQsIGFuZCBhIEZpZ3VyZSBJRCBpcyBvYnRhaW5lZCBieSBjYWxsaW5nOlxuXG4tIERyYXdDaXJjbGVcbi0gRHJhd0xpbmVcbi0gRHJhd1BvaW50XG4tIERyYXdSZWN0YW5nbGVcbi0gRHJhd092YWxcbi0gRHJhd0ltYWdlXG5cbllvdSBjYW4gbW92ZSB5b3VyIGZpZ3VyZXMgYXJvdW5kIG9uIHRoZSBjYW52YXMgYnkgc3VwcGx5aW5nIHRoZSBGaWd1cmUgSUQgdGhlICoqeCx5IGRlbHRhKiogdG8gbW92ZS4gIEl0IGRvZXMgbm90IG1vdmUgdG8gYW4gYWJzb2x1dGUgcG9zaXRpb24sIGJ1dCByYXRoZXIgYW4gb2Zmc2V0IGZyb20gd2hlcmUgdGhlIGZpZ3VyZSBpcyBub3cuICAoVXNlIFJlbG9jYXRlIHRvIG1vdmUgdG8gYSBzcGVjaWZpYyBsb2NhdGlvbilcblxuICAgIGdyYXBoLk1vdmVGaWd1cmUobXlfY2lyY2xlLCAxMCwgMTApXG5cbllvdSdsbCBhbHNvIHVzZSB0aGlzIElEIHRvIGRlbGV0ZSBpbmRpdmlkdWFsIGZpZ3VyZXMgeW91J3ZlIGRyYXduOlxuYGBgcHl0aG9uXG5ncmFwaC5EZWxldGVGaWd1cmUobXlfY2lyY2xlKVxuYGBgXG5cbiMjIyBNb3VzZSBFdmVudHMgSW5zaWRlIEdyYXBoIEVsZW1lbnRzXG5cbklmIHlvdSBoYXZlIGVuZWFibGVkIGV2ZW50cyBmb3IgeW91ciBHcmFwaCBFbGVtZW50LCB0aGVuIHlvdSBjYW4gcmVjZWl2ZSBtb3VzZSBjbGljayBldmVudHMuICBJZiB5b3UgYWRkaXRpb25hbGx5IGVuYWJsZSBgZHJhZ19zdWJtaXRzYCBpbiAgeW91ciBjcmVhdGlvbiBvZiB0aGUgR3JhcGggRWxlbWVudCwgdGhlbiB5b3Ugd2lsbCBhbHNvIGdldCBldmVudHMgd2hlbiB5b3UgXCJEUkFHXCIgaW5zaWRlIG9mIGEgd2luZG93LiAgQSBcIkRyYWdcIiBpcyBkZWZpbmVkIGFzIGEgbGVmdCBidXR0b24gZG93biBhbmQgdGhlbiB0aGUgbW91c2UgaXMgbW92ZWQuICBcblxuV2hlbiBhIGRyYWcgZXZlbnQgaGFwcGVucywgdGhlIGV2ZW50IHdpbGwgYmUgdGhlIEdyYXBoIEVsZW1lbnQncyBrZXkuICBUaGUgYHZhbHVlYCByZXR1cm5lZCBpbiB0aGUgdmFsdWVzIGRpY3Rpb25hcnkgaXMgYSB0dXBsZSBvZiB0aGUgKHgseSkgbG9jYXRpb24gb2YgdGhlIG1vdXNlIGN1cnJlbnRseS5cblxuVGhpcyBtZWFucyB5b3UnbGwgZ2V0IGEgXCJzdHJlYW1cIiBvZiBldmVudHMuICBJZiB0aGUgbW91c2UgbW92ZXMsIHlvdSdsbCBnZXQgYXQgTEVBU1QgMSBhbmQgbGlrZWx5IGEgbG90IG1vcmUgdGhhbiAxIGV2ZW50LlxuXG4jIyMgTW91c2UgVXAgRXZlbnQgZm9yIERyYWdzXG5cbldoZW4geW91J3ZlIGdvdCBgZHJhZ19zdWJtaXRzYCBlbmFibGVkLCB0aGVyZSdzIGEgc3RpY2t5IHNpdHVhdGlvbiB0aGF0IGFyaXNlcy4uLi4gd2hhdCBoYXBwZW5zIHdoZW4geW91J3JlIGRvbmUgZHJhZ2dpbmcgYW5kIHlvdSd2ZSBsZXQgZ28gb2YgdGhlIG1vdXNlIGJ1dHRvbj8gIEhvdyBpcyB0aGUgXCJNb3VzZSBVcFwiIGV2ZW50IHJlbGF5ZWQgYmFjayB0byB5b3VyIGNvZGUuXG5cblRoZSBcIk1vdXNlIFVwXCIgd2lsbCBnZW5lcmF0ZSBhbiBldmVudCB0byB5b3Ugd2l0aCB0aGUgdmFsdWU6ICBgR3JhcGhfa2V5YCArIGAnK1VQJ2AuICBUaHVzLCBpZiB5b3VyIEdyYXBoIEVsZW1lbnQgaGFzIGEga2V5IG9mIGAnX0dSQVBIXydgLCB0aGVuIHRoZSBldmVudCB5b3Ugd2lsbCByZWNlaXZlIHdoZW4gdGhlIG1vdXNlIGJ1dHRvbiBpcyByZWxlYXNlZCBpczogICBgJ19HUkFQSF8rVVAnYFxuXG5ZZWEsIGl0J3MgYSBsaXR0bGUgd2VpcmQsIGJ1dCBpdCB3b3Jrcy4gIEl0J3MgU0lNUExFIHRvby4gIEkgcmVjb21tZW5kIHVzaW5nIHRoZSBgLnN0YXJ0c3dpdGhgIGFuZCBgLmVuZHN3aXRoYCBidWlsdC1pbnMgd2hlbiBkZWFsaW5nIHdpdGggdGhlc2Uga2luZHMgb2Ygc3RyaW5nIHZhbHVlcy5cblxuSGVyZSBpcyBhbiBleGFtcGxlIG9mIHRoZSBgZXZlbnRzYCBhbmQgdGhlIGB2YWx1ZXMgZGljdGlvbmFyeWAgdGhhdCB3YXMgZ2VuZXJhdGVkIGJ5IGNsaWNraW5nIGFuZCBkcmFnZ2luZyBpbnNpZGUgb2YgYSBHcmFwaCBFbGVtZW50IHdpdGggdGhlIGtleSA9PSAnZ3JhcGgnOlxuXG5gYGBcbmdyYXBoIHsnZ3JhcGgnOiAoMTU5LCAyNTYpfVxuZ3JhcGggeydncmFwaCc6ICgxNTcsIDI1Nil9XG5ncmFwaCB7J2dyYXBoJzogKDE1NywgMjU2KX1cbmdyYXBoIHsnZ3JhcGgnOiAoMTU3LCAyNTQpfVxuZ3JhcGggeydncmFwaCc6ICgxNTcsIDI1NCl9XG5ncmFwaCB7J2dyYXBoJzogKDE1NCwgMjU0KX1cbmdyYXBoIHsnZ3JhcGgnOiAoMTU0LCAyNTQpfVxuZ3JhcGgrVVAgeydncmFwaCc6ICgxNTQsIDI1NCl9XG5gYGBcblxuIyMgVGFibGUgRWxlbWVudFxuXG5PdXQgb2YgYWxsIG9mIHRoZSBFbGVtZW50cywgaXQncyB0aGUgVGFibGUgYW5kIHRoZSBUcmVlIHRoYXQgYXJlIHRoZSBtb3N0IFwicHJvYmxlbWF0aWNcIiBpbiB0aGUgdGtpbnRlciBpbnRlciBhbmQgUXQgaW1wbGVtZW50YXRpb25zLiAgVGhleSBoYXZlIGJlZW4gZGlmZmljdWx0IGltcGxlbWVudGF0aW9uLiAgKHllYS4uLi4gZ2V0IG9mIG92ZXIgaXQpXG5cbiMjIyBgd2luZG93LlJlYWQoKWAgcmV0dXJuIHZhbHVlcyBmcm9tIFRhYmxlIEVsZW1lbnRcblxuVGhlIHZhbHVlcyByZXR1cm5lZCBmcm9tIGEgYFdpbmRvdy5SZWFkYCBjYWxsIGZvciB0aGUgVGFibGUgRWxlbWVudCBhcmUgYSBsaXN0IG9mIHJvdyBudW1iZXJzIHRoYXQgYXJlIGN1cnJlbnRseSBoaWdobGlnaHRlZC5cblxuIyMjIFRoZSBRdCBgVGFibGUuR2V0KClgIGNhbGxcblxuTmV3IGluICoqUHlTaW1wbGVHVUlRdCoqIGlzIHRoZSBhZGRpdGlvbiBvZiB0aGUgYFRhYmxlYCBtZXRob2QgYEdldGAuICBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSB0YWJsZSB0aGF0IGlzIGN1cnJlbnRseSBiZWluZyBzaG93biBpbiB0aGUgR1VJLiAgVGhpcyBtZXRob2Qgd2FzIHJlcXVpcmVkIGluIG9yZGVyIHRvIG9idGFpbiBhbnkgZWRpdHMgdGhlIHVzZXIgbWF5IGhhdmUgbWFkZSB0byB0aGUgdGFibGUuXG5cbkZvciB0aGUgdGtpbnRlciBwb3J0LCBpdCB3aWxsIHJldHVybiB0aGUgc2FtZSB2YWx1ZXMgdGhhdCB3YXMgcGFzc2VkIGluIHdoZW4gdGhlIHRhYmxlIHdhcyBjcmVhdGVkIGJlY2F1c2UgdGtpbnRlciBUYWJsZXMgY2Fubm90IGJlIG1vZGlmaWVkIGJ5IHRoZSB1c2VyIChwbGVhc2UgZmlsZSBhbiBJc3N1ZSBpZiB5b3Uga25vdyBhIHdheSkuXG5cbiMjIyBLbm93biBgVGFibGVgIHZpc3VhbGl6YXRpb24gcHJvYmxlbS4uLi5cblxuVGhlcmUgaGFzIGJlZW4gYW4gZWx1c2l2ZSBwcm9ibGVtIHdoZXJlIGNsaWNraW5nIG9uIG9yIG5lYXIgdGhlIHRhYmxlJ3MgaGVhZGVyIGNhdXNlZCB0a2ludGVyIHRvIGdvIGNyYXp5IGFuZCByZXNpemUgdGhlIGNvbHVtbnMgY29udGludW91c2x5IGFzIHlvdSBtb3ZlZCB0aGUgbW91c2UuXG5cblRoaXMgcHJvYmxlbSBoYXMgZXhpc3RlZCBzaW5jZSB0aGUgZmlyc3QgcmVsZWFzZSBvZiB0aGUgYFRhYmxlYCBlbGVtZW50LiAgSXQgd2FzIGZpeGVkIGluIHJlbGVhc2UgNC4zLlxuXG4jIyBUcmVlIEVsZW1lbnRcblxuVGhlIFRyZWUgRWxlbWVudCBhbmQgVGFibGUgRWxlbWVudCBhcmUgY2xvc2UgY291c2lucy4gICBNYW55IG9mIHRoZSBwYXJhbWV0ZXJzIGZvdW5kIGluIHRoZSBUYWJsZSBFbGVtZW50IGFwcGx5IHRvIFRyZWUgRWxlbWVudHMuICBJbiBwYXJ0aWN1bGFyIHRoZSBoZWFkaW5nIGluZm9ybWF0aW9uLCBjb2x1bW4gd2lkdGhzLCBldGMuXG5cblVubGlrZSBUYWJsZXMgdGhlcmUgaXMgbm8gc3RhbmRhcmQgZm9ybWF0IGZvciB0cmVlcy4gIFRodXMgdGhlIGRhdGEgc3RydWN0dXJlIHBhc3NlZCB0byB0aGUgVHJlZSBFbGVtZW50IG11c3QgYmUgY29uc3RydWN0ZWQuICBUaGlzIGlzIGRvbmUgdXNpbmcgdGhlIFRyZWVEYXRhIGNsYXNzLiAgVGhlIHByb2Nlc3MgaXMgYXMgZm9sbG93czpcblxuLSBHZXQgYSBUcmVlRGF0YSBPYmplY3Rcbi0gXCJJbnNlcnRcIiBkYXRhIGludG8gdGhlIHRyZWVcbi0gUGFzcyB0aGUgZmlsbGVkIGluIFRyZWVEYXRhIG9iamVjdCB0byBUcmVlIEVsZW1lbnRcblxuIyMjIyBUcmVlRGF0YSBmb3JtYXRcbmBgYHB5dGhvblxuZGVmIFRyZWVEYXRhKClcbmRlZiBJbnNlcnQoc2VsZiwgcGFyZW50LCBrZXksIHRleHQsIHZhbHVlcywgaWNvbj1Ob25lKVxuYGBgXG5cblRvIFwiaW5zZXJ0XCIgZGF0YSBpbnRvIHRoZSB0cmVlIHRoZSBUcmVlRGF0YSBtZXRob2QgSW5zZXJ0IGlzIGNhbGxlZC5cblxuYGBgcHl0aG9uXG5JbnNlcnQocGFyZW50X2tleSwga2V5LCBkaXNwbGF5X3RleHQsIHZhbHVlcylcbmBgYFxuXG5UbyBpbmRpY2F0ZSBpbnNlcnRpb24gYXQgdGhlIGhlYWQgb2YgdGhlIHRyZWUsIHVzZSBhIHBhcmVudCBrZXkgb2YgXCJcIi4gIFNvLCBldmVyeSB0b3AtbGV2ZWwgbm9kZSBpbiB0aGUgdHJlZSB3aWxsIGhhdmUgYSBwYXJlbnQgbm9kZSA9IFwiXCJcblxuVGhpcyBjb2RlIGNyZWF0ZXMgYSBUcmVlRGF0YSBvYmplY3QgYW5kIHBvcHVsYXRlcyB3aXRoIDMgdmFsdWVzXG5gYGBweXRob25cbnRyZWVkYXRhID0gc2cuVHJlZURhdGEoKVxuXG50cmVlZGF0YS5JbnNlcnQoXCJcIiwgJ19BXycsICdBJywgWzEsMiwzXSlcbnRyZWVkYXRhLkluc2VydChcIlwiLCAnX0JfJywgJ0InLCBbNCw1LDZdKVxudHJlZWRhdGEuSW5zZXJ0KFwiX0FfXCIsICdfQTFfJywgJ0ExJywgWydjYW4nLCdiZScsJ2FueXRoaW5nJ10pXG5gYGBcblxuTm90ZSB0aGF0IHlvdSAqKipjYW4qKiogdXNlIHRoZSBzYW1lIHZhbHVlcyBmb3IgZGlzcGxheV90ZXh0IGFuZCBrZXlzLiAgVGhlIG9ubHkgdGhpbmcgeW91IGhhdmUgdG8gd2F0Y2ggZm9yIGlzIHRoYXQgeW91IGNhbm5vdCByZXBlYXQga2V5cy5cblxuV2hlbiBSZWFkaW5nIGEgd2luZG93IHRoZSBUYWJsZSBFbGVtZW50IHdpbGwgcmV0dXJuIGEgbGlzdCBvZiByb3dzIHRoYXQgYXJlIHNlbGVjdGVkIGJ5IHRoZSB1c2VyLiAgVGhlIGxpc3Qgd2lsbCBiZSBlbXB0eSBpcyBubyByb3dzIGFyZSBzZWxlY3RlZC5cblxuIyMjIyBJY29ucyBvbiBUcmVlIEVudHJpZXNcblxuSWYgeW91IHdpc2ggdG8gc2hvdyBhbiBpY29uIG5leHQgdG8gYSB0cmVlIGl0ZW0sIHRoZW4geW91IHNwZWNpZnkgdGhlIGljb24gaW4gdGhlIGNhbGwgdG8gYEluc2VydGAuICBZb3UgcGFzcyBpbiBhIGZpbGVuYW1lIG9yIGEgQmFzZTY0IGJ5dGVzIHN0cmluZyB1c2luZyB0aGUgb3B0aW9uYWwgYGljb25gIHBhcmFtZXRlci5cblxuSGVyZSBpcyB0aGUgcmVzdWx0IG9mIHNob3dpbmcgYW4gaWNvbiB3aXRoIGEgdHJlZSBlbnRyeS5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNTEwODcyNzAtMmI1NjFlODAtMTcxZi0xMWU5LTgyNjAtNjE0MmVhOWIxMTM3LnBuZylcblxuIyMgVGFiIGFuZCBUYWIgR3JvdXAgRWxlbWVudHNcblxuVGFicyBhcmUgYW5vdGhlciBvZiBQeVNpbXBsZUdVSSBcIkNvbnRhaW5lciBFbGVtZW50c1wiLiAgSXQgaXMgY2FwYWJsZSBvZiBcImNvbnRhaW5pbmdcIiBhIGxheW91dCBqdXN0IGFzIGEgd2luZG93IGNvbnRhaW5zIGEgbGF5b3V0LiAgT3RoZXIgY29udGFpbmVyIGVsZW1lbnRzIGluY2x1ZGUgdGhlIGBDb2x1bW5gIGFuZCBgRnJhbWVgIGVsZW1lbnRzLlxuXG5KdXN0IGxpa2Ugd2luZG93cyBhbmQgdGhlIG90aGVyIGNvbnRhaW5lciBlbGVtZW50cywgdGhlIGBUYWJgIEVsZW1lbnQgaGFzIGEgbGF5b3V0IGNvbnNpc3Rpbmcgb2YgYW55IGRlc2lyZWQgY29tYmluYXRpb24gb2YgRWxlbWVudHMgaW4gYW55IGRlc2lyZWQgbGF5b3V0cy4gIFlvdSBjYW4gaGF2ZSBUYWJzIGluc2lkZSBvZiBUYWJzIGluc2lkZSBvZiBDb2x1bW5zIGluc2lkZSBvZiBXaW5kb3dzLCBldGMuXG5cbmBUYWJgIGxheW91dHMgbG9vayBleGFjdGx5IGxpa2UgV2luZG93IGxheW91dHMsIHRoYXQgaXMgdGhleSBhcmUgKiphIGxpc3Qgb2YgbGlzdHMgb2YgRWxlbWVudHMqKi5cblxuKkhvdyB5b3UgcGxhY2UgYSBUYWIgZWxlbWVudCBpbnRvIGEgd2luZG93IGlzIGRpZmZlcmVudCB0aGFuIGFsbCBvdGhlciBlbGVtZW50cy4qICBZb3UgY2Fubm90IHBsYWNlIGEgVGFiIGRpcmVjdGx5IGludG8gYSBXaW5kb3cncyBsYXlvdXQuICBcblxuVGFicyBhcmUgY29udGFpbmVkIGluIFRhYkdyb3Vwcy4gIFRoZXkgYXJlICoqbm90KiogcGxhY2VkIGludG8gb3RoZXIgbGF5b3V0cy4gIFRvIGdldCBhIFRhYiBpbnRvIHlvdXIgd2luZG93LCBmaXJzdCBwbGFjZSB0aGUgYFRhYmAgRWxlbWVudCBpbnRvIGEgYFRhYkdyb3VwYCBFbGVtZW50IGFuZCB0aGVuIHBsYWNlIHRoZSBgVGFiR3JvdXBgIEVsZW1lbnQgaW50byB0aGUgV2luZG93IGxheW91dC5cblxuTGV0J3MgbG9vayBhdCB0aGlzIFdpbmRvdyBhcyBhbiBleGFtcGxlOlxuXG4hW3RhYmJlZCAxXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NTk5MjgwOC1iMTBmNmE4MC1jMDU5LTExZTgtOTc0Ni1hYzcxYWZkNGQzZDYuanBnKVxuXG5WaWV3IG9mIHNlY29uZCB0YWI6XG5cbiFbdGFiYmVkIDJdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ1OTkyODA5LWIxMGY2YTgwLWMwNTktMTFlOC05NGU2LTNiZjU0M2M5YjBiZC5qcGcpXG5cbmBgYHB5dGhvblxudGFiMV9sYXlvdXQgPSAgW1tzZy5UKCdUaGlzIGlzIGluc2lkZSB0YWIgMScpXV1cblxudGFiMl9sYXlvdXQgPSBbW3NnLlQoJ1RoaXMgaXMgaW5zaWRlIHRhYiAyJyldLFxuICAgICAgICAgICAgICAgW3NnLkluKGtleT0naW4nKV1dXG5cbmBgYFxuVGhlIGxheW91dCBmb3IgdGhlIGVudGlyZSB3aW5kb3cgbG9va3MgbGlrZSB0aGlzOlxuXG5gYGBweXRob25cbmxheW91dCA9IFtbc2cuVGFiR3JvdXAoW1tzZy5UYWIoJ1RhYiAxJywgdGFiMV9sYXlvdXQpLCBzZy5UYWIoJ1RhYiAyJywgdGFiMl9sYXlvdXQpXV0pXSxcbiAgICAgICAgICAgICAgW3NnLkJ1dHRvbignUmVhZCcpXV1cbmBgYFxuXG5UaGUgV2luZG93IGxheW91dCBoYXMgdGhlIFRhYkdyb3VwIGFuZCB3aXRoaW4gdGhlIHRhYiBHcm91cCBhcmUgdGhlIHR3byBUYWIgZWxlbWVudHMuXG5cbk9uZSBpbXBvcnRhbnQgdGhpbmcgdG8gbm90aWNlIGFib3V0IGFsbCBvZiB0aGVzZSBjb250YWluZXIgRWxlbWVudHMgYW5kIFdpbmRvd3MgbGF5b3V0cy4uLiB0aGV5IGFsbCB0YWtlIGEgXCJsaXN0IG9mIGxpc3RzXCIgYXMgdGhlIGxheW91dC4gIFRoZXkgYWxsIGhhdmUgYSBsYXlvdXQgdGhhdCBsb29rcyBsaWtlIHRoaXMgYFtbICAgXV1gXG5cbllvdSB3aWxsIHdhbnQgdG8ga2VlcCB0aGlzIGBbWyBdXWAgY29uc3RydWN0IGluIHlvdXIgaGVhZCBhIHlvdSdyZSBkZWJ1Z2dpbmcgeW91ciB0YWJiZWQgd2luZG93cy4gIEl0J3MgZWFzeSB0byBvdmVybG9vayBvbmUgb3IgdHdvIG5lY2Vzc2FyeSBbJ3NcblxuQXMgbWVudGlvbmVkIGVhcmxpZXIsIHRoZSBvbGQtc3R5bGUgVGFicyB3ZXJlIGxpbWl0ZWQgdG8gYmVpbmcgYXQgdGhlIFdpbmRvdy1sZXZlbCBvbmx5LiAgSW4gb3RoZXIgd29yZHMsIHRoZSB0YWJzIHdlcmUgZXF1YWwgaW4gc2l6ZSB0byB0aGUgZW50aXJlIHdpbmRvdy4gIFRoaXMgaXMgbm90IHRoZSBjYXNlIHdpdGggdGhlIFwibmV3LXN0eWxlXCIgdGFicy4gIFRoaXMgaXMgd2h5IHlvdSdyZSBub3QgZ29pbmcgdG8gYmUgdXBzZXQgd2hlbiB5b3UgZGlzY292ZXIgeW91ciBvbGQgY29kZSBubyBsb25nZXIgd29ya3Mgd2l0aCB0aGUgbmV3IFB5U2ltcGxlR1VJIHJlbGVhc2UuICBJdCdsbCBiZSB3b3J0aCB0aGUgZmV3IG1vbWVudHMgaXQnbGwgdGFrZSB0byBjb252ZXJ0IHlvdXIgY29kZS5cblxuQ2hlY2sgb3V0IHdoYXQncyBwb3NzaWJsZSB3aXRoIHRoZSBORVcgVGFicyFcblxuIVt0YWJzIHRhYnMgdGFic10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDU5OTM0MzgtZmQwZmRlODAtYzA1Yy0xMWU4LTllZDAtNzQyZjE0ZDMwNzBmLmpwZylcblxuQ2hlY2sgb3V0IFRhYnMgNyBhbmQgOC4gIFdlJ3ZlIGdvdCBhIFdpbmRvdyB3aXRoIGEgQ29sdW1uIGNvbnRhaW5pbmcgVGFicyA1IGFuZCA2LiAgT24gVGFiIDYgYXJlLi4uIFRhYnMgNyBhbmQgOC5cblxuQXMgb2YgUmVsZWFzZSAzLjguMCwgbm90IGFsbCBvZiAqb3B0aW9ucyogc2hvd24gaW4gdGhlIEFQSSBkZWZpbml0aW9ucyBvZiB0aGUgVGFiIGFuZCBUYWJHcm91cCBFbGVtZW50cyBhcmUgd29ya2luZy4gVGhleSBhcmUgdGhlcmUgYXMgcGxhY2Vob2xkZXJzLlxuXG5GaXJzdCB3ZSBoYXZlIHRoZSBUYWIgbGF5b3V0IGRlZmluaXRpb25zLiBUaGV5IG1pcnJvciB3aGF0IHlvdSBzZWUgaW4gdGhlIHNjcmVlbiBzaG90cy4gIFRhYiAxIGhhcyAxIFRleHQgRWxlbWVudCBpbiBpdC4gIFRhYiAyIGhhcyBhIFRleHQgYW5kIGFuIElucHV0IEVsZW1lbnQuXG5cbiMjIyBSZWFkaW5nIFRhYiBHcm91cHNcblxuVGFiIEdyb3VwcyBub3cgcmV0dXJuIGEgdmFsdWUgd2hlbiBhIFJlYWQgcmV0dXJucy4gIFRoZXkgcmV0dXJuIHdoaWNoIHRhYiBpcyBjdXJyZW50bHkgc2VsZWN0ZWQuICBUaGVyZSBpcyBhbHNvIGEgYGVuYWJsZV9ldmVudHNgIHBhcmFtZXRlciB0aGF0IGNhbiBiZSBzZXQgdGhhdCBjYXVzZXMgYSBSZWFkIHRvIHJldHVybiBpZiBhIFRhYiBpbiB0aGF0IGdyb3VwIGlzIHNlbGVjdGVkIC8gY2hhbmdlZC4gIFRoZSBrZXkgb3IgdGl0bGUgYmVsb25naW5nIHRvIHRoZSBUYWIgdGhhdCB3YXMgc3dpdGNoZWQgdG8gd2lsbCBiZSByZXR1cm5lZCBhcyB0aGUgdmFsdWVcblxueCMjIFBhbmUgRWxlbWVudFxuXG5OZXcgaW4gdmVyc2lvbiAzLjIwIGlzIHRoZSBQYW5lIEVsZW1lbnQsIGEgc3VwZXItY29vbCB0a2ludGVyIGZlYXR1cmUuICBZb3Ugd29uJ3QgZmluZCB0aGlzIG9uZSBpbiBQeVNpbXBsZUdVSVF0LCBvbmx5IFB5U2ltcGxlR1VJLiAgIEl0J3MgZGlmZmljdWx0IHRvIGRlc2NyaWJlIG9uZSBvZiB0aGVzZSB0aGluZ3MuICBUaGluayBvZiB0aGVtIGFzIFwiVGFicyB3aXRob3V0IGxhYmVsc1wiIHRoYXQgeW91IGNhbiBzbGlkZS5cblxuIVtwYW5lM10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNTAwMzUwNDAtZmNkNTBlODAtZmZjZC0xMWU4LTkzOWMtZGY4YWI4ZDY0NzEyLmdpZilcblxuKioqRWFjaCBcIlBhbmVcIiBvZiBhIFBhbmUgRWxlbWVudCBtdXN0IGJlIGEgQ29sdW1uIEVsZW1lbnQqKiouICBUaGUgcGFyYW1ldGVyIGBwYW5lX2xpc3RgIGlzIGEgbGlzdCBvZiBDb2x1bW4gRWxlbWVudHMuXG5cbkNhbGxzIGNhbiBnZXQgYSBsaXR0bGUgaGFpcnkgbG9va2luZyBpZiB5b3UgdHJ5IHRvIGRlY2xhcmUgZXZlcnl0aGluZyBpbi1saW5lIGFzIHlvdSBjYW4gc2VlIGluIHRoaXMgZXhhbXBsZS5cblxuYGBgcHl0aG9uXG5zZy5QYW5lKFtjb2w1LCBzZy5Db2x1bW4oW1tzZy5QYW5lKFtjb2wxLCBjb2wyLCBjb2w0XSwgaGFuZGxlX3NpemU9MTUsIG9yaWVudGF0aW9uPSd2JywgIGJhY2tncm91bmRfY29sb3I9Tm9uZSwgc2hvd19oYW5kbGU9VHJ1ZSwgdmlzaWJsZT1UcnVlLCBrZXk9J19QQU5FXycsIGJvcmRlcl93aWR0aD0wLCAgcmVsaWVmPXNnLlJFTElFRl9HUk9PVkUpLF1dKSxjb2wzIF0sIG9yaWVudGF0aW9uPSdoJywgYmFja2dyb3VuZF9jb2xvcj1Ob25lLCBzaXplPSgxNjAsMTYwKSwgcmVsaWVmPXNnLlJFTElFRl9SQUlTRUQsIGJvcmRlcl93aWR0aD0wKVxuYGBgXG5cbkNvbWJpbmcgdGhlc2Ugd2l0aCAqdmlzaWJpbGl0eSogbWFrZSBmb3IgYW4gaW50ZXJlc3RpbmcgaW50ZXJmYWNlIHdpdGggZW50aXJlIHBhbmVzIGJlaW5nIGhpZGRlbiBmcm9tIHZpZXcgdW50aWwgbmVkZWQgYnkgdGhlIHVzZXIuICBJdCdzIG9uZSB3YXkgb2YgcHJvZHVjaW5nIFwiZHluYW1pY1wiIHdpbmRvd3MuXG5cbiMjIENvbG9yc1xuU3RhcnRpbmcgaW4gdmVyc2lvbiAyLjUgeW91IGNhbiBjaGFuZ2UgdGhlIGJhY2tncm91bmQgY29sb3JzIGZvciB0aGUgd2luZG93IGFuZCB0aGUgRWxlbWVudHMuXG5cbllvdXIgd2luZG93cyBjYW4gZ28gZnJvbSB0aGlzOlxuXG4hW3NuYXAwMTU1XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80MzI3Mzg3OS1hOWZkYzEwYS05MGNiLTExZTgtOGMyMC00ZjZhMjQ0ZWJlMmYuanBnKVxuXG50byB0aGlzLi4uIHdpdGggb25lIGZ1bmN0aW9uIGNhbGwuLi5cblxuIVtzbmFwMDE1Nl0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDMyNzM4ODAtYWExOTU1ZTYtOTBjYi0xMWU4LTk0YjYtNjczZWNkYjI2OThjLmpwZylcblxuV2hpbGUgeW91IGNhbiBkbyBpdCBvbiBhbiBlbGVtZW50IGJ5IGVsZW1lbnQgb3Igd2luZG93IGxldmVsIGJhc2lzLCB0aGUgZWFzaWVzdCB3YXksIGJ5IGZhciwgaXMgYSBjYWxsIHRvIGBTZXRPcHRpb25zYC5cblxuQmUgYXdhcmUgdGhhdCBvbmNlIHlvdSBjaGFuZ2UgdGhlc2Ugb3B0aW9ucyB0aGV5IGFyZSBjaGFuZ2VkIGZvciB0aGUgcmVzdCBvZiB5b3VyIHByb2dyYW0ncyBleGVjdXRpb24uICBBbGwgb2YgeW91ciB3aW5kb3dzIHdpbGwgaGF2ZSB0aGF0IGxvb2sgYW5kIGZlZWwsIHVudGlsIHlvdSBjaGFuZ2UgaXQgdG8gc29tZXRoaW5nIGVsc2UgKHdoaWNoIGNvdWxkIGJlIHRoZSBzeXN0ZW0gZGVmYXVsdCBjb2xvcnMuXG5cblRoaXMgY2FsbCBzZXRzIGFsbCBvZiB0aGUgZGlmZmVyZW50IGNvbG9yIG9wdGlvbnMuXG5cbmBgYHB5dGhvblxuU2V0T3B0aW9ucyhiYWNrZ3JvdW5kX2NvbG9yPScjOUZCOEFEJyxcbiAgICAgICB0ZXh0X2VsZW1lbnRfYmFja2dyb3VuZF9jb2xvcj0nIzlGQjhBRCcsXG4gICAgICAgZWxlbWVudF9iYWNrZ3JvdW5kX2NvbG9yPScjOUZCOEFEJyxcbiAgICAgICBzY3JvbGxiYXJfY29sb3I9Tm9uZSxcbiAgICAgICBpbnB1dF9lbGVtZW50c19iYWNrZ3JvdW5kX2NvbG9yPScjRjdGM0VDJyxcbiAgICAgICBwcm9ncmVzc19tZXRlcl9jb2xvciA9ICgnZ3JlZW4nLCAnYmx1ZScpXG4gICAgICAgYnV0dG9uX2NvbG9yPSgnd2hpdGUnLCcjNDc1ODQxJykpXG5gYGBcblxuIyBTeXN0ZW1UcmF5XG5cblRoaXMgaXMgYSBQeVNpbXBsZUdVSVF0IGFuZCBQeVNpbXBsZUdVSVd4IG9ubHkgZmVhdHVyZS4gIERvbid0IGtub3cgb2YgYSB3YXkgdG8gZG8gaXQgdXNpbmcgdGtpbnRlci4gIFlvdXIgc291cmNlIGNvZGUgZm9yIFN5c3RlbVRyYXkgaXMgaWRlbnRpY2FsIGZvciB0aGUgUXQgYW5kIFd4IGltcGxlbWVudGF0aW9ucy4gIFlvdSBjYW4gc3dpdGNoIGZyYW1ld29ya3MgYnkgc2ltcGx5IGNoYW5naW5nIHlvdXIgaW1wb3J0IHN0YXRlbWVudC5cblxuSW4gYWRkaXRpb24gdG8gcnVubmluZyBub3JtYWwgd2luZG93cywgaXQncyBub3cgYWxzbyBwb3NzaWJsZSB0byBoYXZlIGFuIGljb24gZG93biBpbiB0aGUgc3lzdGVtIHRyYXkgdGhhdCB5b3UgY2FuIHJlYWQgdG8gZ2V0IG1lbnUgZXZlbnRzLiAgVGhlcmUgaXMgYSBuZXcgU3lzdGVtVHJheSBvYmplY3QgdGhhdCBpcyB1c2VkIG11Y2ggbGlrZSBhIFdpbmRvdyBvYmplY3QuICBZb3UgZmlyc3QgZ2V0IG9uZSwgdGhlbiAgeW91IHBlcmZvcm0gUmVhZHMgaW4gb3JkZXIgdG8gZ2V0IGV2ZW50cy5cblxuSGVyZSBpcyB0aGUgZGVmaW5pdGlvbiBvZiB0aGUgU3lzdGVtVHJheSBvYmplY3QuXG5cbmBgYHB5dGhvblxuU3lzdGVtVHJheShtZW51PU5vbmUsIGZpbGVuYW1lPU5vbmUsIGRhdGE9Tm9uZSwgZGF0YV9iYXNlNjQ9Tm9uZSwgdG9vbHRpcD1Ob25lKTpcbiAgICAgICAgJycnXG4gU3lzdGVtVHJheSAtIGNyZWF0ZSBhbiBpY29uIGluIHRoZSBzeXN0ZW0gdHJheVxuIDpwYXJhbSBtZW51OiBNZW51IGRlZmluaXRpb25cbiA6cGFyYW0gZmlsZW5hbWU6IGZpbGVuYW1lIGZvciBpY29uXG4gOnBhcmFtIGRhdGE6IGluLXJhbSBpbWFnZSBmb3IgaWNvblxuIDpwYXJhbSBkYXRhX2Jhc2U2NDogYmFzZWUtNjQgZGF0YSBmb3IgaWNvblxuIDpwYXJhbSB0b29sdGlwOiB0b29sdGlwIHN0cmluZyAnJydcbmBgYFxuXG5Zb3UnbGwgbm90aWNlIHRoYXQgdGhlcmUgYXJlIDMgZGlmZmVyZW50IHdheXMgdG8gc3BlY2lmeSB0aGUgaWNvbiBpbWFnZS4gIFRoZSBiYXNlLTY0IHBhcmFtZXRlciBhbGxvd3MgeW91IHRvIGRlZmluZSBhIHZhcmlhYmxlIGluIHlvdXIgLnB5IGNvZGUgdGhhdCBpcyB0aGUgZW5jb2RlZCBpbWFnZSBzbyB0aGF0IHlvdSBkbyBub3QgbmVlZCBhbnkgYWRkaXRpb25hbCBmaWxlcy4gIFZlcnkgaGFuZHkgZmVhdHVyZS5cblxuIyMgU3lzdGVtIFRyYXkgRGVzaWduIFBhdHRlcm5cblxuSGVyZSBpcyBhIGRlc2lnbiBwYXR0ZXJuIHlvdSBjYW4gdXNlIHRvIGdldCBhIGp1bXAtc3RhcnQuXG5cblRoaXMgcHJvZ3JhbSB3aWxsIGNyZWF0ZSBhIHN5c3RlbSB0cmF5IGljb24gYW5kIHBlcmZvcm0gYSBibG9ja2luZyBSZWFkLiAgSWYgdGhlIGl0ZW0gXCJPcGVuXCIgaXMgY2hvc2VuIGZyb20gdGhlIHN5c3RlbSB0cmF5LCB0aGVuIGEgcG9wdXAgaXMgc2hvd24uXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJUXQgYXMgc2dcblxubWVudV9kZWYgPSBbJ0JMQU5LJywgWycmT3BlbicsICctLS0nLCAnJlNhdmUnLCBbJzEnLCAnMicsIFsnYScsICdiJ11dLCAnJlByb3BlcnRpZXMnLCAnRSZ4aXQnXV1cblxudHJheSA9IHNnLlN5c3RlbVRyYXkobWVudT1tZW51X2RlZiwgZmlsZW5hbWU9cidkZWZhdWx0X2ljb24uaWNvJylcblxud2hpbGUgVHJ1ZTogICMgVGhlIGV2ZW50IGxvb3BcbiAgbWVudV9pdGVtID0gdHJheS5SZWFkKClcbiAgICBwcmludChtZW51X2l0ZW0pXG4gICAgaWYgbWVudV9pdGVtID09ICdFeGl0JzpcbiAgICAgICAgYnJlYWtcbiAgICBlbGlmIG1lbnVfaXRlbSA9PSAnT3Blbic6XG4gICAgICAgIHNnLlBvcHVwKCdNZW51IGl0ZW0gY2hvc2VuJywgbWVudV9pdGVtKVxuXG5gYGBcblRoZSBkZXNpZ24gcGF0dGVybiBjcmVhdGVzIGFuIGljb24gdGhhdCB3aWxsIGRpc3BsYXkgdGhpcyBtZW51OlxuIVtzbmFnLTAyOTNdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ5MDU3NDQxLThiYmZlOTgwLWYxY2QtMTFlOC05M2U3LTFhZWRhOWNjZDE3My5qcGcpXG5cbiMjIyBJY29uc1xuXG5XaGVuIHNwZWNpZnlpbmcgXCJpY29uc1wiLCB5b3UgY2FuIHVzZSAzIGRpZmZlcmVudCBmb3JtYXRzLlxuKiBgZmlsZW5hbWVgLSBmaWxlbmFtZVxuKiBgZGF0YV9iYXNlNjRgIC0gYmFzZTY0IGJ5dGUgc3RyaW5nXG4qICdgZGF0YWAgLSBpbi1yYW0gYml0bWFwIG9yIG90aGVyIFwicmF3XCIgaW1hZ2VcblxuWW91IHdpbGwgZmluZCAzIHBhcmFtZXRlcnMgdXNlZCB0byBzcGVjaWZ5IHRoZXNlIDMgb3B0aW9ucyBvbiBib3RoIHRoZSBpbml0aWFsaXplIHN0YXRlbWVudCBhbmQgb24gdGhlIFVwZGF0ZSBtZXRob2QuXG5cbiMjIE1lbnUgRGVmaW5pdGlvblxuYGBgcHl0aG9uXG5tZW51X2RlZiA9IFsnQkxBTksnLCBbJyZPcGVuJywgJyZTYXZlJywgWycxJywgJzInLCBbJ2EnLCAnYiddXSwgJyEmUHJvcGVydGllcycsICdFJnhpdCddXVxuYGBgXG5cbkEgbWVudSBpcyBkZWZpbmVkIHVzaW5nIGEgbGlzdC4gIEEgXCJNZW51IGVudHJ5XCIgaXMgYSBzdHJpbmcgdGhhdCBzcGVjaWZpZXM6XG4qIHRleHQgc2hvd25cbioga2V5Ym9hcmQgc2hvcnRjdXRcbioga2V5XG5cblNlZSBzZWN0aW9uIG9uIE1lbnUgS2V5cyBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB1c2luZyBrZXlzIHdpdGggbWVudXMuXG5cbkFuIGVudHJ5IHdpdGhvdXQgYSBrZXkgYW5kIGtleWJvYXJkIHNob3J0Y3V0IGlzIGEgc2ltcGxlIHN0cmluZ1xuYCdNZW51IEl0ZW0nYFxuXG5JZiB5b3Ugd2FudCB0byBtYWtlIHRoZSBcIk1cIiBiZSBhIGtleWJvYXJkIHNob3J0Y3V0LCBwbGFjZSBhbiBgJmAgaW4gZnJvbnQgb2YgdGhlIGxldHRlciB0aGF0IGlzIHRoZSBzaG9ydGN1dC5cbmAnJk1lbnUgSXRlbSdgXG5cbllvdSBjYW4gYWRkIFwia2V5c1wiIHRvIG1ha2UgbWVudSBpdGVtcyB1bmlxdWUgb3IgYXMgYW5vdGhlciB3YXkgb2YgaWRlbnRpZnlpbmcgYSBtZW51IGl0ZW0gdGhhbiB0aGUgdGV4dCBzaG93bi4gIFRoZSBrZXkgaXMgYWRkZWQgdG8gdGhlIHRleHQgcG9ydGlvbiBieSBwbGFjaW5nIGA6OmAgYWZ0ZXIgdGhlIHRleHQuXG5cbmAnTWVudSBJdGVtOjprZXknYFxuXG5UaGUgZmlyc3QgZW50cnkgY2FuIGJlIGlnbm9yZWQuYCdCTEFOS2AnIHdhcyBjaG9zZW4gZm9yIHRoaXMgZXhhbXBsZS4gSXQncyB0aGlzIHdheSBiZWNhdXNlIG5vcm1hbGx5IHlvdSB3b3VsZCBzcGVjaWZ5IHRoZXNlIG1lbnVzIHVuZGVyIHNvbWUgaGVhZGluZyBvbiBhIG1lbnUtYmFyLiAgQnV0IGhlcmUgdGhlcmUgaXMgbm8gaGVhZGluZyBzbyBpdCdzIGZpbGxlZCBpbiB3aXRoIGFueSB2YWx1ZSB5b3Ugd2FudC5cblxuKipTZXBhcmF0b3JzKipcbklmIHlvdSB3YW50IGEgc2VwYXJhdG9yIGJldHdlZW4gMiBpdGVtcywgYWRkIHRoZSBlbnRyeSBgJy0tLSdgIGFuZCBpdCB3aWxsIGFkZCBhIHNlcGFyYXRvciBpdGVtIGF0IHRoYXQgcGxhY2UgaW4geW91ciBtZW51LlxuXG4qKkRpc2FibGVkIG1lbnUgZW50cmllcyoqXG5cbklmIHlvdSB3YW50IHRvIGRpc2FibGUgYSBtZW51IGVudHJ5LCBwbGFjZSBhIGAhYCBiZWZvcmUgdGhlIG1lbnUgZW50cnlcblxuIyMgU3lzdGVtVHJheSBNZXRob2RzXG5cbiMjIyBSZWFkIC0gUmVhZCB0aGUgY29udGV4dCBtZW51IG9yIGNoZWNrIGZvciBldmVudHNcblxuYGBgcHl0aG9uXG5kZWYgUmVhZCh0aW1lb3V0PU5vbmUpXG4gICAgJycnXG4gUmVhZHMgdGhlIGNvbnRleHQgbWVudVxuIDpwYXJhbSB0aW1lb3V0OiBPcHRpb25hbC4gIEFueSB2YWx1ZSBvdGhlciB0aGFuIE5vbmUgaW5kaWNhdGVzIGEgbm9uLWJsb2NraW5nIHJlYWRcbiA6cmV0dXJuOiAgIFN0cmluZyByZXByZXNlbnRpbmcgbWVueSBpdGVtIGNob3Nlbi4gTm9uZSBpZiBub3RoaW5nIHJlYWQuXG4gICAgJycnXG5gYGBcblRoZSBgdGltZW91dGAgcGFyYW1ldGVyIHNwZWNpZmllcyBob3cgbG9uZyB0byB3YWl0IGZvciBhbiBldmVudCB0byB0YWtlIHBsYWNlLiAgSWYgbm90aGluZyBoYXBwZW5zIHdpdGhpbiB0aGUgdGltZW91dCBwZXJpb2QsIHRoZW4gYSBcInRpbWVvdXQgZXZlbnRcIiBpcyByZXR1cm5lZC4gIFRoZXNlIHR5cGVzIG9mIHJlYWRzIG1ha2UgaXQgcG9zc2libGUgdG8gcnVuIGFzeW5jaHJvbm91c2x5LiAgVG8gcnVuIG5vbi1ibG9ja2VkLCBzcGVjaWZ5IGB0aW1lb3V0PTBgb24gdGhlIFJlYWQgY2FsbC5cblxuUmVhZCByZXR1cm5zIHRoZSBtZW51IHRleHQsIGNvbXBsZXRlIHdpdGgga2V5LCBmb3IgdGhlIG1lbnUgaXRlbSBjaG9zZW4uICBJZiB5b3Ugc3BlY2lmaWVkIGBPcGVuOjprZXlgIGFzIHRoZSBtZW51IGVudHJ5LCBhbmQgdGhlIHVzZXIgY2xpY2tlZCBvbiBgT3BlbmAsIHRoZW4geW91IHdpbGwgcmVjZWl2ZSB0aGUgc3RyaW5nIGBPcGVuOjprZXlgIHVwb24gY29tcGxldGlvbiBvZiB0aGUgUmVhZC5cblxuIyMjIyBSZWFkIHNwZWNpYWwgcmV0dXJuIHZhbHVlc1xuXG5JbiBhZGRpdGlvbiB0byBNZW51IEl0ZW1zLCB0aGUgUmVhZCBjYWxsIGNhbiByZXR1cm4gc2V2ZXJhbCBzcGVjaWFsIHZhbHVlcy4gICAgVGhleSBpbmNsdWRlOlxuXG5FVkVOVF9TWVNURU1fVFJBWV9JQ09OX0RPVUJMRV9DTElDS0VEIC0gVHJheSBpY29uIHdhcyBkb3VibGUgY2xpY2tlZFxuRVZFTlRfU1lTVEVNX1RSQVlfSUNPTl9BQ1RJVkFURUQgLSBUcmF5IGljb24gd2FzIHNpbmdsZSBjbGlja2VkXG5FVkVOVF9TWVNURU1fVFJBWV9NRVNTQUdFX0NMSUNLRUQgLSBhIG1lc3NhZ2UgYmFsbG9vbiB3YXMgY2xpY2tlZFxuVElNRU9VVF9LRVkgaXMgcmV0dXJuZWQgaWYgbm8gZXZlbnRzIGFyZSBhdmFpbGFibGUgaWYgdGhlIHRpbWVvdXQgdmFsdWUgaXMgc2V0IGluIHRoZSBSZWFkIGNhbGxcblxuIyMjIEhpZGVcblxuSGlkZXMgdGhlIGljb24uICBOb3RlIHRoYXQgbm8gbWVzc2FnZSBiYWxsb29ucyBhcmUgc2hvd24gd2hpbGUgYW4gaWNvbiBpcyBoaWRkZW4uXG5cbmBgYHB5dGhvblxuZGVmIEhpZGUoKVxuYGBgXG5cbiMjIyBDbG9zZVxuXG5Eb2VzIHRoZSBzYW1lIHRoaW5nIGFzIGhpZGVcbmBgYHB5dGhvblxuZGVmIENsb3NlKClcbmBgYFxuXG4jIyMgVW5IaWRlXG5cblNob3dzIGEgcHJldmlvdXNseSBoaWRkZW4gaWNvblxuXG5gYGBweXRob25cbmRlZiBVbkhpZGUoKVxuYGBgXG5cbiMjIyBTaG93TWVzc2FnZVxuXG5TaG93cyBhIGJhbGxvb24gYWJvdmUgdGhlIGljb24gaW4gdGhlIHN5c3RlbSB0cmF5IGFyZWEuICBZb3UgY2FuIHNwZWNpZnkgeW91ciBvd24gaWNvbiB0byBiZSBzaG93biBpbiB0aGUgYmFsbG9vbiwgb3IgeW91IGNhbiBzZXQgYG1lc3NhZ2VpY29uYCB0byBvbmUgb2YgdGhlIHByZXNldCB2YWx1ZXMuXG5cblRoaXMgbWVzc2FnZSBoYXMgYSBjdXN0b20gaWNvbi5cblxuIVtzbmFnLTAyODZdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ5MDU3NDU5LWE4NWMyMTgwLWYxY2QtMTFlOC05YTY2LWFhMzMxZDdlMDM0Yy5qcGcpXG5cblRoZSBwcmVzZXQgYG1lc3NhZ2VpY29uYCB2YWx1ZXMgYXJlOlxuXG4gICAgU1lTVEVNX1RSQVlfTUVTU0FHRV9JQ09OX0lORk9STUFUSU9OXG4gICAgU1lTVEVNX1RSQVlfTUVTU0FHRV9JQ09OX1dBUk5JTkdcbiAgICBTWVNURU1fVFJBWV9NRVNTQUdFX0lDT05fQ1JJVElDQUxcbiAgICBTWVNURU1fVFJBWV9NRVNTQUdFX0lDT05fTk9JQ09OXG5cbmBgYHB5dGhvblxuU2hvd01lc3NhZ2UodGl0bGUsIG1lc3NhZ2UsIGZpbGVuYW1lPU5vbmUsIGRhdGE9Tm9uZSwgZGF0YV9iYXNlNjQ9Tm9uZSwgbWVzc2FnZWljb249Tm9uZSwgdGltZT0xMDAwMCk6XG4nJydcbiBTaG93cyBhIGJhbGxvb24gYWJvdmUgaWNvbiBpbiBzeXN0ZW0gdHJheVxuIDpwYXJhbSB0aXRsZTogIFRpdGxlIHNob3duIGluIGJhbGxvb25cbiA6cGFyYW0gbWVzc2FnZTogTWVzc2FnZSB0byBiZSBkaXNwbGF5ZWRcbiA6cGFyYW0gZmlsZW5hbWU6IE9wdGlvbmFsIGljb24gZmlsZW5hbWVcbiA6cGFyYW0gZGF0YTogT3B0aW9uYWwgaW4tcmFtIGljb25cbiA6cGFyYW0gZGF0YV9iYXNlNjQ6IE9wdGlvbmFsIGJhc2U2NCBpY29uXG4gOnBhcmFtIHRpbWU6IEhvdyBsb25nIHRvIGRpc3BsYXkgbWVzc2FnZSBpbiBtaWxsaXNlY29uZHMgIDpyZXR1cm46XG4gJycnXG5gYGBcbk5vdGUsIG9uIHdpbmRvd3MgaXQgbWF5IGJlIG5lY2Vzc2FyeSB0byBtYWtlIGEgcmVnaXN0cnkgY2hhbmdlIHRvIGVuYWJsZSBtZXNzYWdlIGJhbGxvb25zIHRvIGJlIHNlZW4uICBUbyBmaXggdGhpcywgeW91IG11c3QgY3JlYXRlIHRoZSBEV09SRCB5b3Ugc2VlIGluIHRoaXMgc2NyZWVuc2hvdC5cblxuIVtzbmFnLTAyODVdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ5MDU2MTQ0LTYzODFiYzAwLWYxYzgtMTFlOC05ZjQ0LTE5OTM5NDgyMzM2OS5qcGcpXG5cbiMjIyBVcGRhdGVcblxuWW91IGNhbiB1cGRhdGUgYW55IG9mIHRoZXNlIGl0ZW1zIHdpdGhpbiBhIFN5c3RlbVRyYXkgb2JqZWN0XG4qIE1lbnUgZGVmaW5pdGlvblxuKiBJY29uXG4qIFRvb2x0aXBcblxuIENoYW5nZSB0aGVtIGFsbCBvciBqdXN0IDEuXG5cbiMgR2xvYmFsIFNldHRpbmdzXG5cblRoZXJlIGFyZSBtdWx0aXBsZSB3YXlzIHRvIGN1c3RvbWl6ZSBQeVNpbXBsZUdVSS4gIFRoZSBjYWxsIHdpdGggdGhlIG1vc3QgZ3JhbnVsYXJpdHkgKGFsbG93cyBhY2Nlc3MgdG8gc3BlY2lmaWMgYW5kIHByZWNpc2Ugc2V0dGluZ3MpLiAgVGhlIGBDaGFuZ2VMb29rQW5kRmVlbGAgY2FsbCBpcyBpbiByZWFsaXR5IGEgc2luZ2xlIGNhbGwgdG8gYFNldE9wdGlvbnNgIHdoZXJlIGl0IGNoYW5nZXMgMTMgZGlmZmVyZW50IHNldHRpbmdzLiAgXG5cbioqTWFjIFVzZXJzKiogLSBZb3UgY2FuJ3QgY2FsbCBgQ2hhbmdlTG9va0FuZEZlZWxgIGJ1dCB5b3UgY2FuIGNhbGwgYFNldE9wdGlvbnNgIHdpdGggYW55IHNldHMgb2YgdmFsdWVzIHlvdSB3YW50LiAgTm90aGluZyBpcyBiZWluZyBibG9ja2VkIG9yIGZpbHRlcmVkLlxuXG4qKlRoZXNlIHNldHRpbmdzIGFwcGx5IHRvIGFsbCB3aW5kb3dzIHRoYXQgYXJlIGNyZWF0ZWQgaW4gdGhlIGZ1dHVyZS4qKlxuXG4gYFNldE9wdGlvbnNgLiAgVGhlICBvcHRpb25zIGFuZCBFbGVtZW50IG9wdGlvbnMgd2lsbCB0YWtlIHByZWNlZGVuY2Ugb3ZlciB0aGVzZSBzZXR0aW5ncy4gIFNldHRpbmdzIGNhbiBiZSB0aG91Z2h0IG9mIGFzIGxldmVscyBvZiBzZXR0aW5ncyB3aXRoIHRoZSB3aW5kb3ctbGV2ZWwgYmVpbmcgdGhlIGhpZ2hlc3QgYW5kIHRoZSBFbGVtZW50LWxldmVsIHRoZSBsb3dlc3QuICBUaHVzIHRoZSBsZXZlbHMgYXJlOlxuXG4gLSBHbG9iYWxcbiAtIFdpbmRvd1xuIC0gRWxlbWVudFxuXG5FYWNoIGxvd2VyIGxldmVsIG92ZXJyaWRlcyB0aGUgc2V0dGluZ3Mgb2YgdGhlIGhpZ2hlciBsZXZlbC4gIE9uY2Ugc2V0dGluZ3MgaGF2ZSBiZWVuIGNoYW5nZWQsIHRoZXkgcmVtYWluIGNoYW5nZWQgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgcHJvZ3JhbSAodW5sZXNzIGNoYW5nZWQgYWdhaW4pLlxuXG4jIFBlcnNpc3RlbnQgd2luZG93cyAoV2luZG93IHN0YXlzIG9wZW4gYWZ0ZXIgYnV0dG9uIGNsaWNrKVxuXG5BcG9sb2dpZXMgdGhhdCB0aGUgbmV4dCBmZXcgcGFnZXMgYXJlIHBlcmhhcHMgY29uZnVzaW5nLiAgVGhlcmUgaGF2ZSBiZWVuIGEgbnVtYmVyIG9mIGNoYW5nZXMgcmVjZW50bHkgaW4gUHlTaW1wbGVHVUkncyBSZWFkIGNhbGxzIHRoYXQgYWRkZWQgc29tZSByZWFsbHkgY29vbCBzdHVmZiwgYnV0IGF0IHRoZSBleHBlbnNlIG9mIGJlaW5nIG5vdCBzbyBzaW1wbGUuICBQYXJ0IG9mIHRoZSBpc3N1ZSBpcyBhbiBhdHRlbXB0IHRvIG1ha2Ugc3VyZSBleGlzdGluZyBjb2RlIGRvZXNuJ3QgYnJlYWsuICBUaGVzZSBjaGFuZ2VzIGFyZSBhbGwgaW4gdGhlIGFyZWEgb2Ygbm9uLWJsb2NraW5nIHJlYWRzIGFuZCByZWFkcyB3aXRoIHRpbWVvdXRzLlxuXG5UaGVyZSBhcmUgMiB3YXlzIHRvIGtlZXAgYSB3aW5kb3cgb3BlbiBhZnRlciB0aGUgdXNlciBoYXMgY2xpY2tlZCBhIGJ1dHRvbi4gIE9uZSB3YXkgaXMgdG8gdXNlIG5vbi1ibG9ja2luZyB3aW5kb3dzIChzZWUgdGhlIG5leHQgc2VjdGlvbikuICBUaGUgb3RoZXIgd2F5IGlzIHRvIHVzZSBidXR0b25zIHRoYXQgJ3JlYWQnIHRoZSB3aW5kb3cgaW5zdGVhZCBvZiAnY2xvc2UnIHRoZSB3aW5kb3cgd2hlbiBjbGlja2VkLiAgVGhlIHR5cGljYWwgYnV0dG9ucyB5b3UgZmluZCBpbiB3aW5kb3dzLCBpbmNsdWRpbmcgdGhlIHNob3J0Y3V0IGJ1dHRvbnMsIGNsb3NlIHRoZSB3aW5kb3cuICBUaGVzZSBpbmNsdWRlIE9LLCBDYW5jZWwsIFN1Ym1pdCwgZXRjLiAgVGhlIEJ1dHRvbiBFbGVtZW50IGFsc28gY2xvc2VzIHRoZSB3aW5kb3cuXG5cblRoZSBgUkJ1dHRvbmAgRWxlbWVudCBjcmVhdGVzIGEgYnV0dG9uIHRoYXQgd2hlbiBjbGlja2VkIHdpbGwgcmV0dXJuIGNvbnRyb2wgdG8gdGhlIHVzZXIsIGJ1dCB3aWxsIGxlYXZlIHRoZSB3aW5kb3cgb3BlbiBhbmQgdmlzaWJsZS4gIFRoaXMgYnV0dG9uIGlzIGFsc28gdXNlZCBpbiBOb24tQmxvY2tpbmcgd2luZG93cy4gIFRoZSBkaWZmZXJlbmNlIGlzIGluIHdoaWNoIGNhbGwgaXMgbWFkZSB0byByZWFkIHRoZSB3aW5kb3cuICBUaGUgbm9ybWFsIGBSZWFkYCBjYWxsIHdpdGggbm8gcGFyYW1ldGVycyB3aWxsIGJsb2NrLCBhIGNhbGwgd2l0aCBhIGB0aW1lb3V0YCB2YWx1ZSBvZiB6ZXJvIHdpbGwgbm90IGJsb2NrLlxuXG5Ob3RlIHRoYXQgYElucHV0VGV4dGAgYW5kIGBNdWx0aUxpbmVgIEVsZW1lbnRzIHdpbGwgYmUgKipjbGVhcmVkKiogICB3aGVuIHBlcmZvcm1pbmcgYSBgUmVhZGAuICBJZiB5b3UgZG8gbm90IHdhbnQgeW91ciBpbnB1dCBmaWVsZCB0byBiZSBjbGVhcmVkIGFmdGVyIGEgYFJlYWRgIHRoZW4geW91IGNhbiBzZXQgdGhlIGBkb19ub3RfY2xlYXJgIHBhcmFtZXRlciB0byBUcnVlIHdoZW4gY3JlYXRpbmcgdGhvc2UgZWxlbWVudHMuIFRoZSBjbGVhciBpcyB0dXJuZWQgb24gYW5kIG9mZiBvbiBhbiBlbGVtZW50IGJ5IGVsZW1lbnQgYmFzaXMuXG5cblRoZSByZWFzb25pbmcgYmVoaW5kIHRoaXMgaXMgdGhhdCBQZXJzaXN0ZW50IFdpbmRvd3MgYXJlIG9mdGVuIFwiZm9ybXNcIi4gIFdoZW4gXCJzdWJtaXR0aW5nXCIgYSBmb3JtIHlvdSB3YW50IHRvIGhhdmUgYWxsIG9mIHRoZSBmaWVsZHMgbGVmdCBibGFuayBzbyB0aGUgbmV4dCBlbnRyeSBvZiBkYXRhIHdpbGwgc3RhcnQgd2l0aCBhIGZyZXNoIHdpbmRvdy4gIEFsc28sIHdoZW4gaW1wbGVtZW50aW5nIGEgXCJDaGF0IFdpbmRvd1wiIHR5cGUgb2YgaW50ZXJmYWNlLCBhZnRlciBlYWNoIHJlYWQgLyBzZW5kIG9mIHRoZSBjaGF0IGRhdGEsIHlvdSB3YW50IHRoZSBpbnB1dCBmaWVsZCBjbGVhcmVkLiAgVGhpbmsgb2YgaXQgYXMgYSBUZXh0aW5nIGFwcGxpY2F0aW9uLiAgV291bGQgeW91IHdhbnQgdG8gaGF2ZSB0byBjbGVhciB5b3VyIHByZXZpb3VzIHRleHQgaWYgeW91IHdhbnQgdG8gc2VuZCBhIHNlY29uZCB0ZXh0P1xuXG5UaGUgZGVzaWduIHBhdHRlcm4gZm9yIFBlcnNpc3RlbnQgV2luZG93cyB3YXMgYWxyZWFkeSBzaG93biB0byB5b3UgZWFybGllciBpbiB0aGUgZG9jdW1lbnQuLi4gaGVyZSBpdCBpcyBmb3IgeW91ciBjb252ZW5pZW5jZS5cblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcblxubGF5b3V0ID0gW1tzZy5UZXh0KCdQZXJzaXN0ZW50IHdpbmRvdycpXSxcbiAgICAgICAgICBbc2cuSW5wdXQoKV0sXG4gICAgICAgICAgW3NnLkJ1dHRvbignUmVhZCcpLCBzZy5FeGl0KCldXVxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ1dpbmRvdyB0aGF0IHN0YXlzIG9wZW4nLCBsYXlvdXQpXG5cbndoaWxlIFRydWU6XG4gICAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbiAgICBpZiBldmVudCBpcyBOb25lIG9yIGV2ZW50ID09ICdFeGl0JzpcbiAgICAgICAgYnJlYWtcbiAgICBwcmludChldmVudCwgdmFsdWVzKVxuXG53aW5kb3cuQ2xvc2UoKVxuYGBgXG5cbiMjIFJlYWQodGltZW91dCA9IHQsIHRpbWVvdXRfa2V5PVRJTUVPVVRfS0VZKVxuXG5SZWFkIHdpdGggYSB0aW1lb3V0IGlzIGEgdmVyeSBnb29kIHRoaW5nIGZvciB5b3VyIEdVSXMgdG8gdXNlIGluIGEgcmVhZCBub24tYmxvY2tpbmcgc2l0dWF0aW9uLCB5b3UgY2FuIHVzZSB0aGVtLiAgSWYgeW91ciBkZXZpY2UgY2FuIHdhaXQgZm9yIGEgbGl0dGxlIHdoaWxlLCB0aGVuIHVzZSB0aGlzIGtpbmQgb2YgcmVhZC4gIFRoZSBsb25nZXIgeW91J3JlIGFibGUgdG8gYWRkIHRvIHRoZSB0aW1lb3V0IHZhbHVlLCB0aGUgbGVzcyBDUFUgdGltZSB5b3UnbGwgYmUgdGFraW5nLlxuXG5PbmUgd2F5IG9mIHRoaW5raW5nIG9mIHJlYWRzIHdpdGggdGltZW91dHM6XG4+IER1cmluZyB0aGUgdGltZW91dCB0aW1lLCB5b3UgYXJlIFwieWllbGRpbmdcIiB0aGUgcHJvY2Vzc29yIHRvIGRvIG90aGVyIHRhc2tzLlxuXG5CdXQgaXQgZ2V0cyBiZXR0ZXIgdGhhbiBqdXN0IGJlaW5nIGEgZ29vZCBjaXRpemVuLi4uLioqeW91ciBHVUkgd2lsbCBiZSBtb3JlIHJlc3BvbnNpdmUgdGhhbiBpZiB5b3UgdXNlZCBhIG5vbi1ibG9ja2luZyByZWFkKipcblxuTGV0J3Mgc2F5IHlvdSBoYWQgYSBkZXZpY2UgdGhhdCB5b3Ugd2FudCB0byBcInBvbGxcIiBldmVyeSAxMDBtcy4gICBUaGUgXCJlYXN5IHdheSBvdXRcIiBhbmQgdGhlIG9ubHkgd2F5IG91dCB1bnRpbCByZWNlbnRseSB3YXMgdGhpczpcblxuYGBgcHl0aG9uXG4jIFlPVSBTSE9VTEQgTk9UIERPIFRISVMuLi4uXG53aGlsZSBUcnVlOiAgICAgICAgICAgICAjIEV2ZW50IExvb3BcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWROb25CbG9ja2luZygpICAgIyBETyBOT1QgVVNFIFRISVMgQ0FMTCBBTllNT1JFXG4gICAgcmVhZF9teV9oYXJkd2FyZSgpICMgcHJvY2VzcyBteSBkZXZpY2UgaGVyZVxuICAgIHRpbWUuc2xlZXAoLjEpICAgICAjIHNsZWVwIDEvMTAgc2Vjb25kXG5gYGBcblxuVGhpcyBwcm9ncmFtIHdpbGwgcXVpY2tseSB0ZXN0IGZvciB1c2VyIGlucHV0LCB0aGVuIGRlYWwgd2l0aCB0aGUgaGFyZHdhcmUuICBUaGVuIGl0J2xsIHNsZWVwIGZvciAxMDBtcywgd2hpbGUgeW91ciBndWkgaXMgbm9uLXJlc3BvbnNpdmUsIHRoZW4gaXQnbGwgY2hlY2sgaW4gd2l0aCB5b3VyIEdVSSBhZ2Fpbi4gIEkgZnVsbHkgcmVhbGl6ZSB0aGlzIGlzIGEgY3J1ZGUgd2F5IG9mIGRvaW5nIHRoaW5ncy4gIFdlJ3JlIHRhbGtpbmcgZGlydCBzaW1wbGUgc3R1ZmYgd2l0aG91dCB0cnlpbmcgdG8gdXNlIHRocmVhZHMsIGV0YyB0byAnZ2V0IGl0IHJpZ2h0Jy4gIEl0J3MgZm9yIGRlbW9uc3RyYXRpb24gcHVycG9zZXMuXG5cblRoZSBuZXcgYW5kIGJldHRlciB3YXkuLi4uXG51c2luZyB0aGUgUmVhZCBUaW1lb3V0IG1lY2hhbmlzbSwgdGhlIHNsZWVwIGdvZXMgYXdheS5cblxuYGBgcHl0aG9uXG4jIFRoaXMgaXMgdGhlIHJpZ2h0IHdheSB0byBwb2xsIGZvciBoYXJkd2FyZVxud2hpbGUgVHJ1ZTogICAgICAgICAgICAgIyBFdmVudCBMb29wXG4gICAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKHRpbWVvdXQgPSAxMDApXG4gICAgcmVhZF9teV9oYXJkd2FyZSgpICMgcHJvY2VzcyBteSBkZXZpY2UgaGVyZVxuYGBgXG5cblRoaXMgZXZlbnQgbG9vcCB3aWxsIHJ1biBldmVyeSAxMDAgbXMuICBZb3UncmUgbWFraW5nIGEgUmVhZCBjYWxsLCBzbyBhbnl0aGluZyB0aGF0IHRoZSB1c2UgZG9lcyB3aWxsIHJldHVybiBiYWNrIHRvIHlvdSBpbW1lZGlhdGVseSwgYW5kIHlvdSdyZSB3YWl0aW5nIHVwIHRvIDEwMG1zIGZvciB0aGUgdXNlciB0byBkbyBzb21ldGhpbmcuICBJZiB0aGUgdXNlciBkb2Vzbid0IGRvIGFueXRoaW5nLCB0aGVuIHRoZSByZWFkIHdpbGwgdGltZW91dCBhbmQgZXhlY3V0aW9uIHdpbGwgcmV0dXJuIHRvIHRoZSBwcm9ncmFtLlxuXG4jIyBOb24tQmxvY2tpbmcgV2luZG93cyAgIChBc3luY2hyb25vdXMgcmVhZHMsIHRpbWVvdXRzKVxuXG5Zb3UgY2FuIGVhc2lseSBzcG90IGEgbm9uLWJsb2NraW5nIGNhbGwgaW4gUHlTaW1wbGVHVUkuICBJZiB5b3Ugc2VlIGEgY2FsbCB0byBgV2luZG93LlJlYWQoKWAgd2l0aCBhIHRpbWVvdXQgcGFyYW1ldGVyIHNldCB0byBhIHZhbHVlIG90aGVyIHRoYW4gYE5vbmVgLCB0aGVuIGl0IGlzIGEgbm9uLWJsb2NraW5nIGNhbGwuXG5cblRoaXMgY2FsbCB0byByZWFkIGlzIGFzeW5jaHJvbm91cyBhcyBpdCBoYXMgYSB0aW1lb3V0IHZhbHVlOlxuXG5gYGBcblRoZSBuZXcgd2F5XG5gYGBweXRob25cbmV2ZW50LCB2YWx1ZXMgPSBzZy5SZWFkKHRpbWVvdXQ9MjApXG5gYGBcbllvdSBzaG91bGQgdXNlIHRoZSBuZXcgd2F5IGlmIHlvdSdyZSByZWFkaW5nIHRoaXMgZm9yIHRoZSBmaXJzdCB0aW1lLlxuXG5UaGUgZGlmZmVyZW5jZSBpbiB0aGUgMiBjYWxscyBpcyBpbiB0aGUgdmFsdWUgb2YgZXZlbnQuICBGb3IgUmVhZE5vbkJsb2NraW5nLCBldmVudCB3aWxsIGJlIGBOb25lYCBpZiB0aGVyZSBhcmUgbm8gb3RoZXIgZXZlbnRzIHRvIHJlcG9ydC4gIFRoZXJlIGlzIGEgXCJwcm9ibGVtXCIgd2l0aCB0aGlzIGhvd2V2ZXIuICBXaXRoIG5vcm1hbCBSZWFkIGNhbGxzLCBhbiBldmVudCB2YWx1ZSBvZiBOb25lIHNpZ25pZmllZCB0aGUgd2luZG93IHdhcyBjbG9zZWQuICBGb3IgUmVhZE5vbkJsb2NraW5nLCB0aGUgd2F5IGEgY2xvc2VkIHdpbmRvdyBpcyByZXR1cm5lZCBpcyB2aWEgdGhlIHZhbHVlcyB2YXJpYWJsZSBiZWluZyBzZXQgdG8gTm9uZS5cblxuIyMgc2cuVElNRU9VVF9LRVlcblxuSWYgeW91J3JlIHVzaW5nIHRoZSBuZXcsIHRpbWVvdXQ9MCBtZXRob2QsIHRoZW4gYW4gZXZlbnQgdmFsdWUgb2YgTm9uZSBzaWduaWZpZXMgdGhhdCB0aGUgd2luZG93IHdhcyBjbG9zZWQsIGp1c3QgbGlrZSBhIG5vcm1hbCBSZWFkLiAgVGhhdCBsZWF2ZXMgdGhlIHF1ZXN0aW9uIG9mIHdoYXQgaXQgaXMgc2V0IHRvIHdoZW4gbm90IG90aGVyIGV2ZW50cyBhcmUgaGFwcGVuaW5nLiAgVGhpcyB2YWx1ZSB3aWxsIGJlIHRoZSB2YWx1ZSBvZiBgdGltZW91dF9rZXlgLiAgSWYgeW91IGRpZCBub3Qgc3BlY2lmeSBhIHRpbWVvdXRfa2V5IHZhbHVlIGluIHlvdXIgY2FsbCB0byByZWFkLCB0aGVuIGl0IHdpbGwgYmUgc2V0IHRvIGEgZGVmYXVsdCB2YWx1ZSBvZjpcbmBUSU1FT1VUX0tFWSA9IF9fdGltZW91dF9fYFxuXG5JZiB5b3Ugd2FudGVkIHRvIHRlc3QgZm9yIFwibm8gZXZlbnRcIiBpbiB5b3VyIGxvb3AsIGl0IHdvdWxkIGJlIHdyaXR0ZW4gbGlrZSB0aGlzOlxuYGBgcHl0aG9uXG53aGlsZSBUcnVlOlxuICAgIGV2ZW50LCB2YWx1ZSA9IHdpbmRvdy5SZWFkKHRpbWVvdXQ9MClcbiAgICBpZiBldmVudCBpcyBOb25lOlxuICAgICAgICBicmVhayAjIHRoZSB1c2UgaGFzIGNsb3NlZCB0aGUgd2luZG93XG4gICAgaWYgZXZlbnQgPT0gc2cuVElNRU9VVF9LRVk6XG4gICAgICAgIHByaW50KFwiTm90aGluZyBoYXBwZW5lZFwiKVxuYGBgXG5cblVzZSBhc3luYyB3aW5kb3dzIHNwYXJpbmdseS4gIEl0J3MgcG9zc2libGUgdG8gaGF2ZSBhIHdpbmRvdyB0aGF0IGFwcGVhcnMgdG8gYmUgYXN5bmMsIGJ1dCBpdCBpcyBub3QuICAqKlBsZWFzZSoqIHRyeSB0byBmaW5kIG90aGVyIG1ldGhvZHMgYmVmb3JlIGdvaW5nIHRvIGFzeW5jIHdpbmRvd3MuICBUaGUgcmVhc29uIGZvciB0aGlzIHBsZWEgaXMgdGhhdCBhc3luYyB3aW5kb3dzIHBvbGwgdGtpbnRlciBvdmVyIGFuZCBvdmVyLiAgSWYgeW91IGRvIG5vdCBoYXZlIGEgdGltZW91dCBpbiB5b3VyIFJlYWQgYW5kIHl1b3UndmUgZ290IG5vdGhpbmcgZWxzZSB5b3VyIHByb2dyYW0gd2lsbCBibG9jayBvbiwgdGhlbiB5b3Ugd2lsbCBlYXQgdXAgMTAwJSBvZiB0aGUgQ1BVIHRpbWUuIEl0J3MgaW1wb3J0YW50IHRvIGJlIGEgZ29vZCBjaXRpemVuLiAgIERvbid0IGNoZXcgdXAgQ1BVIGN5Y2xlcyBuZWVkbGVzc2x5LiAgU29tZXRpbWVzIHlvdXIgbW91c2Ugd2FudHMgdG8gbW92ZSB5YSBrbm93P1xuXG5Ob24tYmxvY2tpbmcgKHRpbWVvdXQ9MCkgaXMgZ2VuZXJhbGx5IHJlc2VydmVkIGFzIGEgXCJsYXN0IHJlc29ydFwiLiAgVG9vIG1hbnkgdGltZXMgcGVvcGxlIHVzZSBub24tYmxvY2tpbmcgcmVhZHMgd2hlbiBhIGJsb2NraW5nIHJlYWQgd2lsbCBkbyBqdXN0IGZpbmUuXG5cbiMjIyBTbWFsbCBUaW1lb3V0IFZhbHVlcyAodW5kZXIgMTBtcylcblxuKioqRG8gTm90KioqIHVzZSBhIHRpbWVvdXQgb2YgbGVzcyB0aGFuIDEwbXMuICBPdGhlcndpc2UgeW91IHdpbGwgc2ltcGx5IHRocmFzaCwgc3BlbmRpbmcgeW91ciB0aW1lIHRyeWluZyB0byBkbyBzb21lIEdVSSBzdHVmZiwgb25seSB0byBiZSBpbnRlcnJ1cGVkIGJ5IGEgdGltZW91dCB0aW1lciBiZWZvcmUgaXQgY2FuIGdldCBhbnl0aGluZyBkb25lLiAgVGhlIHJlc3VsdHMgYXJlIHBvdGVudGlhbGx5IGRpc2FzdGVyb3VzLlxuXG5UaGVyZSBpcyBhIGh5YnJpZCBhcHByb2FjaC4uLiBhIHJlYWQgd2l0aCBhIHRpbWVvdXQuICAgWW91J2xsIHNjb3JlIG11Y2ggaGlnaGVyIHBvaW50cyBvbiB0aGUgaW1wcmVzc2l2ZSBtZXRlciBpZiB5b3UncmUgYWJsZSB0byB1c2UgYSBsb3QgbGVzcyBDUFUgdGltZSBieSB1c2luZyB0aGlzIHR5cGUgb2YgcmVhZC5cblxuVGhlIG1vc3QgbGVnaXQgdGltZSB0byB1c2UgYSBub24tYmxvY2tpbmcgd2luZG93IGlzIHdoZW4geW91J3JlIHdvcmtpbmcgZGlyZWN0bHkgd2l0aCBoYXJkd2FyZS4gIE1heWJlIHlvdSdyZSBkcml2aW5nIGEgc2VyaWFsIGJ1cy4gIElmIHlvdSBsb29rIGF0IHRoZSBFdmVudCBMb29wIGluIHRoZSBEZW1vX09wZW5DVl9XZWJjYW0ucHkgcHJvZ3JhbSwgeW91J2xsIHNlZSB0aGF0IHRoZSByZWFkIGlzIGEgbm9uLWJsb2NraW5nIHJlYWQuICBIb3dldmVyLCB0aGVyZSBpcyBhIHBsYWNlIGluIHRoZSBldmVudCBsb29wIHdoZXJlIGJsb2NraW5nIG9jY3Vycy4gICBUaGUgcG9pbnQgaW4gdGhlIGxvb3Agd2hlcmUgeW91IHdpbGwgYmxvY2sgaXMgdGhlIGNhbGwgdG8gcmVhZCBmcmFtZXMgZnJvbSB0aGUgd2ViY2FtLiAgV2hlbiBhIGZyYW1lIGlzIGF2YWlsYWJsZSB5b3Ugd2FudCB0byBxdWlja2x5IGRlbGl2ZXIgaXQgdG8gdGhlIG91dHB1dCBkZXZpY2UsIHNvIHlvdSBkb24ndCB3YW50IHlvdXIgR1VJIGJsb2NraW5nLiAgWW91IHdhbnQgdGhlIHJlYWQgZnJvbSB0aGUgaGFyZHdhcmUgdG8gYmxvY2suXG5cbkFub3RoZXIgZXhhbXBsZSBjYW4gYmUgZm91bmQgaW4gdGhlIGRlbW8gZm9yIGNvbnRyb2xsaW5nIGEgcm9ib3Qgb24gYSBSYXNwYmVycnkgUGkuICBJbiB0aGF0IGFwcGxpY2F0aW9uIHlvdSB3YW50IHRvIHJlYWQgdGhlIGRpcmVjdGlvbiBidXR0b25zLCBmb3J3YXJkLCBiYWNrd2FyZCwgZXRjLCBhbmQgaW1tZWRpYXRlbHkgdGFrZSBhY3Rpb24uICBJZiB5b3UgYXJlIHVzaW5nIFJlYWx0aW1lQnV0dG9ucywgeW91ciBvbmx5IG9wdGlvbiBhdCB0aGUgbW9tZW50IGlzIHRvIHVzZSBub24tYmxvY2tpbmcgd2luZG93cy4gIFlvdSBoYXZlIHRvIHNldCB0aGUgdGltZW91dCB0byB6ZXJvIGlmIHlvdSB3YW50IHRoZSBidXR0b25zIHRvIGJlIHJlYWwtdGltZSByZXNwb25zaXZlLlxuXG5Ib3dldmVyLCB3aXRoIHRoZXNlIGJ1dHRvbnMsIGFkZGluZyBhIHNsZWVwIHRvIHlvdXIgZXZlbnQgbG9vcCB3aWxsIGF0IGxlYXN0IGdpdmUgb3RoZXIgcHJvY2Vzc2VzIHRpbWUgdG8gZXhlY3V0ZS4gIEl0IHdpbGwsIGhvd2V2ZXIsIHN0YXJ2ZSB5b3VyIEdVSS4gVGhlIGVudGlyZSB0aW1lIHlvdSdyZSBzbGVlcGluZywgeW91ciBHVUkgaXNuJ3QgZXhlY3V0aW5nLlxuXG4jIyMgUGVyaW9kaWNhbGx5IENhbGxpbmdgUmVhZGBcblxuTGV0J3Mgc2F5IHlvdSBkbyBlbmQgdXAgdXNpbmcgbm9uLWJsb2NraW5nIHJlYWRzLi4uIHRoZW4geW91J3ZlIGdvdCBzb21lIGhvdXNla2VlcGluZyB0byBkby4gIEl0J3MgdXAgdG8geW91IHRvIHBlcmlvZGljYWxseSBcInJlZnJlc2hcIiB0aGUgdmlzaWJsZSBHVUkuICBUaGUgbG9uZ2VyIHlvdSB3YWl0IGJldHdlZW4gdXBkYXRlcyB0byB5b3VyIEdVSSB0aGUgbW9yZSBzbHVnZ2lzaCB5b3VyIHdpbmRvd3Mgd2lsbCBmZWVsLiAgSXQgaXMgdXAgdG8geW91IHRvIG1ha2UgdGhlc2UgY2FsbHMgb3IgeW91ciBHVUkgd2lsbCBmcmVlemUuXG5cblRoZXJlIGFyZSAyIG1ldGhvZHMgb2YgaW50ZXJhY3Rpbmcgd2l0aCBub24tYmxvY2tpbmcgd2luZG93cy5cbjEuIFJlYWQgdGhlIHdpbmRvdyBqdXN0IGFzIHlvdSB3b3VsZCBhIG5vcm1hbCB3aW5kb3dcbjIuIFwiUmVmcmVzaFwiIHRoZSB3aW5kb3cncyB2YWx1ZXMgd2l0aG91dCByZWFkaW5nIHRoZSB3aW5kb3cuIEl0J3MgYSBxdWljayBvcGVyYXRpb24gbWVhbnQgdG8gc2hvdyB0aGUgdXNlciB0aGUgbGF0ZXN0IHZhbHVlc1xuXG4gV2l0aCBhc3luY2hyb25vdXMgd2luZG93cyB0aGUgd2luZG93IGlzIHNob3duLCB1c2VyIGlucHV0IGlzIHJlYWQsIGJ1dCB5b3VyIGNvZGUga2VlcHMgcmlnaHQgb24gY2h1Z2dpbmcuICBZT1VSIHJlc3BvbnNpYmlsaXR5IGlzIHRvIGNhbGwgYFB5U2ltcGxlR1VJLlJlYWRgIG9uIGEgcGVyaW9kaWMgYmFzaXMuICBTZXZlcmFsIHRpbWVzIGEgc2Vjb25kIG9yIG1vcmUgd2lsbCBwcm9kdWNlIGEgcmVhc29uYWJseSBzbmFwcHkgR1VJLlxuXG4gIyMgRXhpdGluZyAoQ2xvc2luZykgYSBQZXJzaXN0ZW50IFdpbmRvd1xuXG5JZiB5b3VyIHdpbmRvdyBoYXMgYSBidXR0b24gdGhhdCBjbG9zZXMgdGhlIHdpbmRvdywgdGhlbiBQeVNpbXBsZUdVSSB3aWxsIGF1dG9tYXRpY2FsbHkgY2xvc2UgdGhlIHdpbmRvdyBmb3IgeW91LiAgSWYgYWxsIG9mIHlvdXIgYnV0dG9ucyBhcmUgUmVhZEJ1dHRvbnMsIHRoZW4gaXQnbGwgYmUgdXAgdG8geW91IHRvIGNsb3NlIHRoZSB3aW5kb3cgd2hlbiBkb25lLlxuVG8gY2xvc2UgYSB3aW5kb3csIGNhbGwgdGhlIGBDbG9zZWAgbWV0aG9kLlxuYGBgcHl0aG9uXG53aW5kb3cuQ2xvc2UoKVxuYGBgXG5cbiMjIFBlcnNpc3RlbnQgV2luZG93IEV4YW1wbGUgLSBSdW5uaW5nIHRpbWVyIHRoYXQgdXBkYXRlc1xuXG5TZWUgdGhlIHNhbXBsZSBjb2RlIG9uIHRoZSBHaXRIdWIgbmFtZWQgRGVtbyBNZWRpYSBQbGF5ZXIgZm9yIGFub3RoZXIgZXhhbXBsZSBvZiBBc3luYyB3aW5kb3dzLiAgV2UncmUgZ29pbmcgdG8gbWFrZSBhIHdpbmRvdyBhbmQgdXBkYXRlIG9uZSBvZiB0aGUgZWxlbWVudHMgb2YgdGhhdCB3aW5kb3cgZXZlcnkgLjAxIHNlY29uZHMuICAgIEhlcmUncyB0aGUgZW50aXJlIGNvZGUgdG8gZG8gdGhhdC5cblxuYGBgcHl0aG9uXG5pbXBvcnQgUHlTaW1wbGVHVUkgYXMgc2dcbmltcG9ydCB0aW1lXG5cbiMgLS0tLS0tLS0tLS0tLS0tLSAgQ3JlYXRlIEZvcm0gIC0tLS0tLS0tLS0tLS0tLS1cbnNnLkNoYW5nZUxvb2tBbmRGZWVsKCdCbGFjaycpXG5zZy5TZXRPcHRpb25zKGVsZW1lbnRfcGFkZGluZz0oMCwgMCkpXG5cbmxheW91dCA9IFtbc2cuVGV4dCgnJyldLFxuICAgICAgICAgW3NnLlRleHQoJycsIHNpemU9KDgsIDIpLCBmb250PSgnSGVsdmV0aWNhJywgMjApLCBqdXN0aWZpY2F0aW9uPSdjZW50ZXInLCBrZXk9J3RleHQnKV0sXG4gICAgICAgICBbc2cuUmVhZEJ1dHRvbignUGF1c2UnLCBrZXk9J2J1dHRvbicsIGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJyMwMDE0ODAnKSksXG4gICAgICAgICAgc2cuUmVhZEJ1dHRvbignUmVzZXQnLCBidXR0b25fY29sb3I9KCd3aGl0ZScsICcjMDA3MzM5JyksIGtleT0nUmVzZXQnKSxcbiAgICAgICAgICBzZy5FeGl0KGJ1dHRvbl9jb2xvcj0oJ3doaXRlJywgJ2ZpcmVicmljazQnKSwga2V5PSdFeGl0JyldXVxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ1J1bm5pbmcgVGltZXInLCBsYXlvdXQsIG5vX3RpdGxlYmFyPVRydWUsIGF1dG9fc2l6ZV9idXR0b25zPUZhbHNlLCBrZWVwX29uX3RvcD1UcnVlLCBncmFiX2FueXdoZXJlPVRydWUpXG5cbiMgLS0tLS0tLS0tLS0tLS0tLSAgbWFpbiBsb29wICAtLS0tLS0tLS0tLS0tLS0tXG5jdXJyZW50X3RpbWUgPSAwXG5wYXVzZWQgPSBGYWxzZVxuc3RhcnRfdGltZSA9IGludChyb3VuZCh0aW1lLnRpbWUoKSAqIDEwMCkpXG53aGlsZSAoVHJ1ZSk6XG4gICAgIyAtLS0tLS0tLS0gUmVhZCBhbmQgdXBkYXRlIHdpbmRvdyAtLS0tLS0tLVxuICAgIGV2ZW50LCB2YWx1ZXMgPSB3aW5kb3cuUmVhZCh0aW1lb3V0PTEwKVxuICAgIGN1cnJlbnRfdGltZSA9IGludChyb3VuZCh0aW1lLnRpbWUoKSAqIDEwMCkpIC0gc3RhcnRfdGltZVxuICAgICMgLS0tLS0tLS0tIERpc3BsYXkgdGltZXIgaW4gd2luZG93IC0tLS0tLS0tXG4gICAgd2luZG93LkZpbmRFbGVtZW50KCd0ZXh0JykuVXBkYXRlKCd7OjAyZH06ezowMmR9Lns6MDJkfScuZm9ybWF0KChjdXJyZW50X3RpbWUgLy8gMTAwKSAvLyA2MCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjdXJyZW50X3RpbWUgLy8gMTAwKSAlIDYwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudF90aW1lICUgMTAwKSlcbmBgYFxuXG5QcmV2aW91c2x5IHRoaXMgcHJvZ3JhbSB3YXMgaW1wbGVtZW50ZWQgdXNpbmcgYSBzbGVlcCBpbiB0aGUgbG9vcCB0byBjb250cm9sIHRoZSBjbG9jayB0aWNrLiAgVGhpcyB2ZXJzaW9uIHVzZXMgdGhlIG5ldyB0aW1lb3V0IHBhcmFtZXRlci4gIFRoZSByZXN1bHQgaXMgYSB3aW5kb3cgdGhhdCByZWFjdHMgcXVpY2tlciB0aGVuIHRoZSBvbmUgd2l0aCB0aGUgc2xlZXAgYW5kIHRoZSBhY2N1cmFjeSBpcyBqdXN0IGFzIGdvb2QuXG5cbiMjIEluc3RlYWQgb2YgYSBOb24tYmxvY2tpbmcgUmVhZCAtLS0gVXNlIGBlbmFibGVfZXZlbnRzID0gVHJ1ZWAgb3IgYHJldHVybl9rZXlib2FyZF9ldmVudHMgPSBUcnVlYFxuXG5BbnkgdGltZSB5b3UgYXJlIHRoaW5raW5nIFwiSSB3YW50IGFuIFggRWxlbWVudCB0byBjYXVzZSBhIFkgRWxlbWVudCB0byBkbyBzb21ldGhpbmdcIiwgdGhlbiB5b3Ugd2FudCB0byB1c2UgdGhlIGBlbmFibGVfZXZlbnRzYCBvcHRpb24uXG5cbioqKkluc3RlYWQgb2YgcG9sbGluZywgdHJ5IG9wdGlvbnMgdGhhdCBjYXVzZSB0aGUgd2luZG93IHRvIHJldHVybiB0byB5b3UuKioqICBCeSB1c2luZyBub24tYmxvY2tpbmcgd2luZG93cywgeW91IGFyZSAqcG9sbGluZyouICBZb3UgY2FuIGluZGVlZCBjcmVhdGUgeW91ciBhcHBsaWNhdGlvbiBieSBwb2xsaW5nLiAgSXQgd2lsbCB3b3JrLiAgQnV0IHlvdSdyZSBnb2luZyB0byBiZSBtYXhpbmcgb3V0IHlvdXIgcHJvY2Vzc29yIGFuZCBtYXkgZXZlbiB0YWtlIGxvbmdlciB0byByZWFjdCB0byBhbiBldmVudCB0aGFuIGlmIHlvdSB1c2VkIGFub3RoZXIgdGVjaG5pcXVlLlxuXG4qKkV4YW1wbGVzKipcblxuT25lIGV4YW1wbGUgaXMgeW91IGhhdmUgYW4gaW5wdXQgZmllbGQgdGhhdCBjaGFuZ2VzIGFzIHlvdSBwcmVzcyBidXR0b25zIG9uIGFuIG9uLXNjcmVlbiBrZXlwYWQuXG5cbiFba2V5cGFkIDNdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzQ1MjYwMjc1LWEyMTk4ZTgwLWIzYjAtMTFlOC04NWZlLWE0Y2U2NDg0NTEwZi5qcGcpXG5cbiMgVXBkYXRpbmcgRWxlbWVudHMgKGNoYW5naW5nIGVsZW1lbnQncyB2YWx1ZXMgaW4gYW4gYWN0aXZlIHdpbmRvdylcblxuSWYgeW91IHdhbnQgdG8gY2hhbmdlIGFuIEVsZW1lbnQncyBzZXR0aW5ncyBpbiB5b3VyIHdpbmRvdyBhZnRlciB0aGUgd2luZG93IGhhcyBiZWVuIGNyZWF0ZWQsIHRoZW4geW91IHdpbGwgY2FsbCB0aGUgRWxlbWVudCdzIFVwZGF0ZSBtZXRob2QuXG5cbioqTk9URSoqIGEgd2luZG93ICoqbXVzdCBiZSBSZWFkIG9yIEZpbmFsaXplZCoqIGJlZm9yZSBhbnkgVXBkYXRlIGNhbGxzIGNhbiBiZSBtYWRlLiAgQWxzbywgbm90IGFsbCBzZXR0aW5ncyBhdmFpbGFibGUgdG8geW91IHdoZW4geW91IGNyZWF0ZWQgdGhlIEVsZW1lbnQgYXJlIGF2YWlsYWJsZSB0byB5b3UgdmlhIGl0cyBgVXBkYXRlYCBtZXRob2QuXG5cbkhlcmUgaXMgYW4gZXhhbXBsZSBvZiB1cGRhdGluZyBhIFRleHQgRWxlbWVudFxuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbIFtzZy5UZXh0KCdNeSBsYXlvdXQnLCBrZXk9J19URVhUXycpXSxcbiAgICAgICAgICAgW3NnLkJ1dHRvbignUmVhZCcpXV1cblxud2luZG93ID0gc2cuV2luZG93KCdNeSBuZXcgd2luZG93JywgbGF5b3V0KVxuXG53aGlsZSBUcnVlOiAgICAgICAgICAgICAjIEV2ZW50IExvb3BcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQoKVxuICAgIGlmIGV2ZW50IGlzIE5vbmU6XG4gICAgICAgIGJyZWFrXG4gICAgd2luZG93LkVsZW1lbnQoJ19URVhUXycpLlVwZGF0ZSgnTXkgbmV3IHRleHQgdmFsdWUnKVxuYGBgXG5cbk5vdGljZSB0aGUgcGxhY2VtZW50IG9mIHRoZSBVcGRhdGUgY2FsbC4gIElmIHlvdSB3YW50ZWQgdG8gVXBkYXRlIHRoZSBUZXh0IEVsZW1lbnQgKnByaW9yKiB0byB0aGUgUmVhZCBjYWxsLCBvdXRzaWRlIG9mIHRoZSBldmVudCBsb29wLCB0aGVuIHlvdSBtdXN0IGNhbGwgRmluYWxpemUgb24gdGhlIHdpbmRvdyBmaXJzdC5cblxuSW4gdGhpcyBleGFtcGxlLCB0aGUgVXBkYXRlIGlzIGRvbmUgcHJpb3IgdGhlIFJlYWQuICBCZWNhdXNlIG9mIHRoaXMsIHRoZSBGaW5hbGl6ZSBjYWxsIGlzIGFkZGVkIHRvIHRoZSBXaW5kb3cgY3JlYXRpb24uXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG5sYXlvdXQgPSBbIFtzZy5UZXh0KCdNeSBsYXlvdXQnLCBrZXk9J19URVhUXycpXSxcbiAgICAgICAgICAgW3NnLkJ1dHRvbignUmVhZCcpXVxuICAgICAgICAgXVxuXG53aW5kb3cgPSBzZy5XaW5kb3coJ015IG5ldyB3aW5kb3cnLCBsYXlvdXQpLkZpbmFsaXplKClcblxud2luZG93LkVsZW1lbnQoJ19URVhUXycpLlVwZGF0ZSgnTXkgbmV3IHRleHQgdmFsdWUnKVxuXG53aGlsZSBUcnVlOiAgICAgICAgICAgICAjIEV2ZW50IExvb3BcbiAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbiAgICBpZiBldmVudCBpcyBOb25lOlxuICAgICAgICBicmVha1xuYGBgXG5cblBlcnNpc3RlbnQgd2luZG93cyByZW1haW4gb3BlbiBhbmQgdGh1cyBjb250aW51ZSB0byBpbnRlcmFjdCB3aXRoIHRoZSB1c2VyIGFmdGVyIHRoZSBSZWFkIGhhcyByZXR1cm5lZC4gIE9mdGVuIHRoZSBwcm9ncmFtIHdpc2hlcyB0byBjb21tdW5pY2F0ZSByZXN1bHRzIChvdXRwdXQgaW5mb3JtYXRpb24pIG9yIGNoYW5nZSBhbiBFbGVtZW50J3MgdmFsdWVzIChzdWNoIGFzIHBvcHVsYXRpbmcgYSBMaXN0IEVsZW1lbnQpLlxuXG5Zb3UgY2FuIHVzZSBVcGRhdGUgdG8gZG8gdGhpbmdzIGxpa2U6XG4qIEhhdmUgb25lIEVsZW1lbnQgKGFwcGVhciB0bykgbWFrZSBhIGNoYW5nZSB0byBhbm90aGVyIEVsZW1lbnRcbiogRGlzYWJsZSBhIGJ1dHRvbiwgc2xpZGVyLCBpbnB1dCBmaWVsZCwgZXRjXG4qIENoYW5nZSBhIGJ1dHRvbidzIHRleHRcbiogQ2hhbmdlIGFuIEVsZW1lbnQncyB0ZXh0IG9yIGJhY2tncm91bmQgY29sb3JcbiogQWRkIHRleHQgdG8gYSBzY3JvbGxpbmcgb3V0cHV0IHdpbmRvd1xuKiBDaGFuZ2UgdGhlIGNob2ljZXMgaW4gYSBsaXN0XG4qIGV0Y1xuXG5UaGUgd2F5IHRoaXMgaXMgZG9uZSBpcyB2aWEgYW4gVXBkYXRlIG1ldGhvZCB0aGF0IGlzIGF2YWlsYWJsZSBmb3IgbmVhcmx5IGFsbCBvZiB0aGUgRWxlbWVudHMuICBIZXJlIGlzIGFuIGV4YW1wbGUgb2YgYSBwcm9ncmFtIHRoYXQgdXNlcyBhIHBlcnNpc3RlbnQgd2luZG93IHRoYXQgaXMgdXBkYXRlZC5cblxuIVtzbmFwMDI3Ml0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDUyNjAyNDktZWM0ZTQwMDAtYjNhZi0xMWU4LTg1M2ItOWIyOWQwYmY3Nzk3LmpwZylcblxuSW4gc29tZSBwcm9ncmFtcyB0aGVzZSB1cGRhdGVzIGhhcHBlbiBpbiByZXNwb25zZSB0byBhbm90aGVyIEVsZW1lbnQuICBUaGlzIHByb2dyYW0gdGFrZXMgYSBTcGlubmVyIGFuZCBhIFNsaWRlcidzIGlucHV0IHZhbHVlcyBhbmQgdXNlcyB0aGVtIHRvIHJlc2l6ZSBhIFRleHQgRWxlbWVudC4gIFRoZSBTcGlubmVyIGFuZCBTbGlkZXIgYXJlIG9uIHRoZSBsZWZ0LCB0aGUgVGV4dCBlbGVtZW50IGJlaW5nIGNoYW5nZWQgaXMgb24gdGhlIHJpZ2h0LlxuXG5gYGBweXRob25cbiMgVGVzdGluZyBhc3luYyB3aW5kb3csIHNlZSBpZiBjYW4gaGF2ZSBhIHNsaWRlclxuIyB0aGF0IGFkanVzdHMgdGhlIHNpemUgb2YgdGV4dCBkaXNwbGF5ZWRcblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5mb250U2l6ZSA9IDEyXG5sYXlvdXQgPSBbW3NnLlNwaW4oW3N6IGZvciBzeiBpbiByYW5nZSg2LCAxNzIpXSwgZm9udD0oJ0hlbHZldGljYSAyMCcpLCBpbml0aWFsX3ZhbHVlPWZvbnRTaXplLCBjaGFuZ2Vfc3VibWl0cz1UcnVlLCBrZXk9J3NwaW4nKSxcbiAgICAgICAgICAgc2cuU2xpZGVyKHJhbmdlPSg2LDE3MiksIG9yaWVudGF0aW9uPSdoJywgc2l6ZT0oMTAsMjApLFxuICAgICAgICAgICBjaGFuZ2Vfc3VibWl0cz1UcnVlLCBrZXk9J3NsaWRlcicsIGZvbnQ9KCdIZWx2ZXRpY2EgMjAnKSksXG4gICAgICAgICAgIHNnLlRleHQoXCJBYVwiLCBzaXplPSgyLCAxKSwgZm9udD1cIkhlbHZldGljYSBcIiAgKyBzdHIoZm9udFNpemUpLCBrZXk9J3RleHQnKV1dXG5cbnN6ID0gZm9udFNpemVcbndpbmRvdyA9IHNnLldpbmRvdyhcIkZvbnQgc2l6ZSBzZWxlY3RvclwiLCBsYXlvdXQsIGdyYWJfYW55d2hlcmU9RmFsc2UpXG4jIEV2ZW50IExvb3BcbndoaWxlIFRydWU6XG4gICAgZXZlbnQsIHZhbHVlcz0gd2luZG93LlJlYWQoKVxuICAgIGlmIGV2ZW50IGlzIE5vbmU6XG4gICAgICAgIGJyZWFrXG4gICAgc3pfc3BpbiA9IGludCh2YWx1ZXNbJ3NwaW4nXSlcbiAgICBzel9zbGlkZXIgPSBpbnQodmFsdWVzWydzbGlkZXInXSlcbiAgICBzeiA9IHN6X3NwaW4gaWYgc3pfc3BpbiAhPSBmb250U2l6ZSBlbHNlIHN6X3NsaWRlclxuICAgIGlmIHN6ICE9IGZvbnRTaXplOlxuICAgICAgICBmb250U2l6ZSA9IHN6XG4gICAgICAgIGZvbnQgPSBcIkhlbHZldGljYSBcIiAgKyBzdHIoZm9udFNpemUpXG4gICAgICAgIHdpbmRvdy5GaW5kRWxlbWVudCgndGV4dCcpLlVwZGF0ZShmb250PWZvbnQpXG4gICAgICAgIHdpbmRvdy5GaW5kRWxlbWVudCgnc2xpZGVyJykuVXBkYXRlKHN6KVxuICAgICAgICB3aW5kb3cuRmluZEVsZW1lbnQoJ3NwaW4nKS5VcGRhdGUoc3opXG5cbnByaW50KFwiRG9uZS5cIilcbmBgYFxuXG5JbnNpZGUgdGhlIGV2ZW50IGxvb3Agd2UgcmVhZCB0aGUgdmFsdWUgb2YgdGhlIFNwaW5uZXIgYW5kIHRoZSBTbGlkZXIgdXNpbmcgdGhvc2UgRWxlbWVudHMnIGtleXMuXG5Gb3IgZXhhbXBsZSwgYHZhbHVlc1snc2xpZGVyJ11gIGlzIHRoZSB2YWx1ZSBvZiB0aGUgU2xpZGVyIEVsZW1lbnQuXG5cblRoaXMgcHJvZ3JhbSBjaGFuZ2VzIGFsbCAzIGVsZW1lbnRzIGlmIGVpdGhlciB0aGUgU2xpZGVyIG9yIHRoZSBTcGlubmVyIGNoYW5nZXMuICBUaGlzIGlzIGRvbmUgd2l0aCB0aGVzZSBzdGF0ZW1lbnRzOlxuXG5gYGBweXRob25cbndpbmRvdy5GaW5kRWxlbWVudCgndGV4dCcpLlVwZGF0ZShmb250PWZvbnQpXG53aW5kb3cuRmluZEVsZW1lbnQoJ3NsaWRlcicpLlVwZGF0ZShzeilcbndpbmRvdy5GaW5kRWxlbWVudCgnc3BpbicpLlVwZGF0ZShzeilcbmBgYFxuXG5SZW1lbWJlciB0aGlzIGRlc2lnbiBwYXR0ZXJuIGJlY2F1c2UgeW91IHdpbGwgdXNlIGl0IE9GVEVOIGlmIHlvdSB1c2UgcGVyc2lzdGVudCB3aW5kb3dzLlxuXG5JdCB3b3JrcyBhcyBmb2xsb3dzLiAgVGhlIGNhbGwgdG8gYHdpbmRvdy5GaW5kRWxlbWVudGAgcmV0dXJucyB0aGUgRWxlbWVudCBvYmplY3QgcmVwcmVzZW50ZWQgYnkgdGhleSBwcm92aWRlZCBga2V5YC4gIFRoaXMgZWxlbWVudCBpcyB0aGVuIHVwZGF0ZWQgYnkgY2FsbGluZyBpdCdzIGBVcGRhdGVgIG1ldGhvZC4gIFRoaXMgaXMgYW5vdGhlciBleGFtcGxlIG9mIFB5dGhvbidzIFwiY2hhaW5pbmdcIiBmZWF0dXJlLiBXZSBjb3VsZCB3cml0ZSB0aGlzIGNvZGUgdXNpbmcgdGhlIGxvbmctZm9ybTpcblxuICAgIHRleHRfZWxlbWVudCA9IHdpbmRvdy5GaW5kRWxlbWVudCgndGV4dCcpXG4gICAgdGV4dF9lbGVtZW50LlVwZGF0ZShmb250PWZvbnQpXG5cblRoZSB0YWtlYXdheSBmcm9tIHRoaXMgZXhlcmNpc2UgaXMgdGhhdCBrZXlzIGFyZSBrZXkgaW4gUHlTaW1wbGVHVUkncyBkZXNpZ24uICBUaGV5IGFyZSB1c2VkIHRvIGJvdGggcmVhZCB0aGUgdmFsdWVzIG9mIHRoZSB3aW5kb3cgYW5kIGFsc28gdG8gaWRlbnRpZnkgZWxlbWVudHMuICBBcyBhbHJlYWR5IG1lbnRpb25lZCwgdGhleSBhcmUgdXNlZCBhcyB0YXJnZXRzIGluICBCdXR0b24gY2FsbHMuXG5cbiMjIyBMb2NhdGluZyBFbGVtZW50cyAoRmluZEVsZW1lbnQgPT0gRWxlbWVudCA9PSBFbGVtKVxuXG5UaGUgV2luZG93IG1ldGhvZCBjYWxsIHRoYXQncyB1c2VkIHRvIGZpbmQgYW4gZWxlbWVudCBpczpcbmBGaW5kRWxlbWVudGBcbm9yIHRoZSBzaG9ydGVuZWQgdmVyc2lvblxuYEVsZW1lbnRgXG5vciBldmVuIHNob3J0ZXIgKHZlcnNpb24gNC4xKylcbmBFbGVtYFxuXG5XaGVuIHlvdSBzZWUgYSBjYWxsIHRvIHdpbmRvdy5GaW5kRWxlbWVudCBvciB3aW5kb3cuRWxlbWVudCwgdGhlbiB5b3Uga25vdyBhbiBlbGVtZW50IGlzIGJlaW5nIGFkZHJlc3NlZC4gIE5vcm1hbGx5IHRoaXMgaXMgZG9uZSBzbyB5b3UgY2FuIGNhbGwgdGhlIGVsZW1lbnQncyBVcGRhdGUgbWV0aG9kLlxuXG4jIyMgUHJvZ3Jlc3NCYXIgLyBQcm9ncmVzcyBNZXRlcnNcblxuTm90ZSB0aGF0IHRvIGNoYW5nZSBhIHByb2dyZXNzIG1ldGVyJ3MgcHJvZ3Jlc3MsIHlvdSBjYWxsIGBVcGRhdGVCYXJgLCBub3QgYFVwZGF0ZWAuXG5cbiMgS2V5Ym9hcmQgJiBNb3VzZSBDYXB0dXJlXG5cbk5PVEUgLSBrZXlib2FyZCBjYXB0dXJlIGlzIGN1cnJlbnRseSBmb3JtYXR0ZWQgdW5pcXVlbHkgYW1vbmcgdGhlIHBvcnRzLiBGb3IgYmFzaWMgbGV0dGVycyBhbmQgbnVtYmVycyB0aGVyZSBpcyBubyBncmVhdCBkaWZmZXJlbmNlcywgYnV0IHdoZW4geW91IHN0YXJ0IGFkZGluZyBTaGlmdCBhbmQgQ29udHJvbCBvciBzcGVjaWFsIGtleXVzLCB0aGV5IGFsbCBiZWhhdmUgc2xpZ2h0bHkgZGlmZmVyZW50bHkuICBZb3VyIGJlc3QgYmV0IGlzIHRvIHNpbXBseSBwcmludCB3aGF0IGlzIGJlaW5nIHJldHVybmVkIHRvIHlvdSB0byBkZXRlcm1pbmUgd2hhdCB0aGUgZm9ybWF0IGZvciB0aGUgcGFydGljdWxhciBwb3J0IGlzLlxuXG5CZWdpbm5pbmcgaW4gdmVyc2lvbiAyLjEwIHlvdSBjYW4gY2FwdHVyZSBrZXlib2FyZCBrZXkgcHJlc3NlcyBhbmQgbW91c2Ugc2Nyb2xsLXdoZWVsIGV2ZW50cy4gICBLZXlib2FyZCBrZXlzIGNhbiBiZSB1c2VkLCBmb3IgZXhhbXBsZSwgdG8gZGV0ZWN0IHRoZSBwYWdlLXVwIGFuZCBwYWdlLWRvd24ga2V5cyBmb3IgYSBQREYgdmlld2VyLiAgVG8gdXNlIHRoaXMgZmVhdHVyZSwgdGhlcmUncyBhIGJvb2xlYW4gc2V0dGluZyBpbiB0aGUgV2luZG93IGNhbGwgYHJldHVybl9rZXlib2FyZF9ldmVudHNgIHRoYXQgaXMgc2V0IHRvIFRydWUgaW4gb3JkZXIgdG8gZ2V0IGtleXMgcmV0dXJuZWQgYWxvbmcgd2l0aCBidXR0b25zLlxuXG5LZXlzIGFuZCBzY3JvbGwtd2hlZWwgZXZlbnRzIGFyZSByZXR1cm5lZCBpbiBleGFjdGx5IHRoZSBzYW1lIHdheSBhcyBidXR0b25zLlxuXG5Gb3Igc2Nyb2xsLXdoZWVsIGV2ZW50cywgaWYgdGhlIG1vdXNlIGlzIHNjcm9sbGVkIHVwLCB0aGVuIHRoZSBgYnV0dG9uYCB0ZXh0IHdpbGwgYmUgYE1vdXNlV2hlZWw6VXBgLiAgIEZvciBkb3dud2FyZCBzY3JvbGxpbmcsIHRoZSB0ZXh0IHJldHVybmVkIGlzIGBNb3VzZVdoZWVsOkRvd25gXG5cbktleWJvYXJkIGtleXMgcmV0dXJuIDIgdHlwZXMgb2Yga2V5IGV2ZW50cy4gRm9yIFwibm9ybWFsXCIga2V5cyAoYSxiLGMsIGV0YyksIGEgc2luZ2xlIGNoYXJhY3RlciBpcyByZXR1cm5lZCB0aGF0IHJlcHJlc2VudHMgdGhhdCBrZXkuICBNb2RpZmllciBhbmQgc3BlY2lhbCBrZXlzIGFyZSByZXR1cm5lZCBhcyBhIHN0cmluZyB3aXRoIDIgcGFydHM6XG5cbiAgICBLZXkgU3ltOktleSBDb2RlXG5cbktleSBTeW0gaXMgYSBzdHJpbmcgc3VjaCBhcyAnQ29udHJvbF9MJy4gIFRoZSBLZXkgQ29kZSBpcyBhIG51bWVyaWMgcmVwcmVzZW50YXRpb24gb2YgdGhhdCBrZXkuICBUaGUgbGVmdCBjb250cm9sIGtleSwgd2hlbiBwcmVzc2VkIHdpbGwgcmV0dXJuIHRoZSB2YWx1ZSAnQ29udHJvbF9MOjE3J1xuXG5gYGBweXRob25cbmltcG9ydCBQeVNpbXBsZUdVSSBhcyBzZ1xuXG4jIFJlY2lwZSBmb3IgZ2V0dGluZyBrZXlzLCBvbmUgYXQgYSB0aW1lIGFzIHRoZXkgYXJlIHJlbGVhc2VkXG4jIElmIHdhbnQgdG8gdXNlIHRoZSBzcGFjZSBiYXIsIHRoZW4gYmUgc3VyZSBhbmQgZGlzYWJsZSB0aGUgXCJkZWZhdWx0IGZvY3VzXCJcblxudGV4dF9lbGVtID0gc2cuVGV4dChcIlwiLCBzaXplPSgxOCwgMSkpXG5cbmxheW91dCA9IFtbc2cuVGV4dChcIlByZXNzIGEga2V5IG9yIHNjcm9sbCBtb3VzZVwiKV0sXG4gICAgICAgICAgW3RleHRfZWxlbV0sXG4gICAgICAgICAgW3NnLkJ1dHRvbihcIk9LXCIpXV1cblxud2luZG93ID0gc2cuV2luZG93KFwiS2V5Ym9hcmQgVGVzdFwiLCBsYXlvdXQsICByZXR1cm5fa2V5Ym9hcmRfZXZlbnRzPVRydWUsIHVzZV9kZWZhdWx0X2ZvY3VzPUZhbHNlKVxuXG4jIC0tLT09PS0tLSBMb29wIHRha2luZyBpbiB1c2VyIGlucHV0IC0tLSAjXG53aGlsZSBUcnVlOlxuICAgIGV2ZW50LCB2YWx1ZSA9IHdpbmRvdy5SZWFkKClcblxuICAgIGlmIGV2ZW50ID09IFwiT0tcIiBvciBldmVudCBpcyBOb25lOlxuICAgICAgICBwcmludChldmVudCwgXCJleGl0aW5nXCIpXG4gICAgICAgIGJyZWFrXG4gICAgdGV4dF9lbGVtLlVwZGF0ZShldmVudClcbmBgYFxuXG5Zb3Ugd2FudCB0byB0dXJuIG9mZiB0aGUgZGVmYXVsdCBmb2N1cyBzbyB0aGF0IHRoZXJlIG5vIGJ1dHRvbnMgdGhhdCB3aWxsIGJlIHNlbGVjdGVkIHNob3VsZCB5b3UgcHJlc3MgdGhlIHNwYWNlYmFyLlxuXG4jIE1lbnVzXG5cbiMjIE1lbnVCYXJcblxuQmVnaW5uaW5nIGluIHZlcnNpb24gMy4wMSB5b3UgY2FuIGFkZCBhIE1lbnVCYXIgdG8geW91ciB3aW5kb3cuICBZb3Ugc3BlY2lmeSB0aGUgbWVudXMgaW4gbXVjaCB0aGUgc2FtZSB3YXkgYXMgeW91IGRvIHdpbmRvdyBsYXlvdXRzLCB3aXRoIGxpc3RzLiAgTWVudSBzZWxlY3Rpb25zIGFyZSByZXR1cm5lZCBhcyBldmVudHMgYW5kIGFzIG9mIDMuMTcsIGFsc28gYXMgaW4gdGhlIHZhbHVlcyBkaWN0aW9uYXJ5LiAgVGhlIHZhbHVlIHJldHVybmVkIHdpbGwgYmUgdGhlIGVudGlyZSBtZW51IGVudHJ5LCBpbmNsdWRpbmcgdGhlIGtleSBpZiB5b3Ugc3BlY2lmaWVkIG9uZS5cblxuYGBgcHl0aG9uXG4gICAgbWVudV9kZWYgPSBbWydGaWxlJywgWydPcGVuJywgJ1NhdmUnLCAnRXhpdCcsXV0sXG4gICAgICAgICAgICAgICAgWydFZGl0JywgWydQYXN0ZScsIFsnU3BlY2lhbCcsICdOb3JtYWwnLF0sICdVbmRvJ10sXSxcbiAgICAgICAgICAgICAgICBbJ0hlbHAnLCAnQWJvdXQuLi4nXSxdXG5gYGBcblxuIVttZW51XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My80NTMwNjcyMy01NmI3Y2IwMC1iNGViLTExZTgtOGNiZC1mYWVmMGM5MGY4YjQuanBnKVxuXG5Ob3RlIHRoZSBwbGFjZW1lbnQgb2YgJywnIGFuZCBvZiBbXS4gIEl0J3MgdHJpY2t5IHRvIGdldCB0aGUgbmVzdGVkIG1lbnVzIGNvcnJlY3QgdGhhdCBpbXBsZW1lbnQgY2FzY2FkaW5nIG1lbnVzLiAgU2VlIGhvdyBwYXN0ZSBoYXMgU3BlY2lhbCBhbmQgTm9ybWFsIGFzIGEgbGlzdCBhZnRlciBpdC4gIFRoaXMgbWVhbnMgdGhhdCBQYXN0ZSBoYXMgYSBjYXNjYWRpbmcgbWVudSB3aXRoIGl0ZW1zIFNwZWNpYWwgYW5kIE5vcm1hbC5cblxuIyMgTWV0aG9kc1xuXG4tLS1cblxuVG8gYWRkIGEgbWVudSB0byBhIFdpbmRvdyBwbGFjZSB0aGUgYE1lbnVgIG9yIGBNZW51QmFyYCBlbGVtZW50IGludG8geW91ciBsYXlvdXQuXG5cbiAgICBsYXlvdXQgPSBbW3NnLk1lbnUobWVudV9kZWYpXV1cblxuSXQgZG9lc24ndCByZWFsbHkgbWF0dGVyIHdoZXJlIHlvdSBwbGFjZSB0aGUgTWVudSBFbGVtZW50IGluIHlvdXIgbGF5b3V0IGFzIGl0IHdpbGwgYWx3YXlzIGJlIGxvY2F0ZWQgYXQgdGhlIHRvcCBvZiB0aGUgd2luZG93LlxuXG4jIyBCdXR0b25NZW51c1xuXG5CdXR0b24gbWVudXMgd2VyZSBpbnRyb2R1Y2VkIGluIHZlcnNpb24gMy4yMSwgaGF2aW5nIGJlZW4gcHJldmlvdXNseSByZWxlYXNlZCBpbiBQeVNpbXBsZUdVSVF0LiAgVGhleSB3b3JrIGV4YWN0bHkgdGhlIHNhbWUgYW5kIGFyZSBzb3VyY2UgY29kZSBjb21wYXRpYmxlIGJldHdlZW4gUHlTaW1wbGVHVUkgYW5kIFB5U2ltcGxlR1VJUXQuICBUaGVzZSB0eXBlcyBvZiBtZW51cyB0YWtlIGEgc2luZ2xlIG1lbnUgZW50cnkgd2hlcmUgYSBNZW51IEJhciB0YWtlcyBhIGxpc3Qgb2YgbWVudSBlbnRyaWVzLlxuXG4jIyBSaWdodCBDbGljayBNZW51c1xuXG5SaWdodCBDbGljayBNZW51cyB3ZXJlIGludHJvZHVjZWQgaW4gdmVyc2lvbiAzLjIxLiAgQWxtb3N0IGV2ZXJ5IGVsZW1lbnQgaGFzIGEgcmlnaHRfY2xpY2tfbWVudSBwYXJhbWV0ZXIgYW5kIHRoZXJlIGlzIGEgd2luZG93LWxldmVsIHNldHRpbmcgZm9yIHJpY2ggY2xpY2sgbWVudSB0aGF0IHdpbGwgYXR0YWNoIGEgcmlnaHQgY2xpY2sgbWVudSB0byBhbGwgZWxlbWVudHMgaW4gdGhlIHdpbmRvdy5cblxuVGhlIG1lbnUgZGVmaW5pdGlvbiBpcyB0aGUgc2FtZSBhIHMgdGhlIGJ1dHRvbiBtZW51IGRlZmluaXRpb24sIGEgc2luZ2xlIG1lbnUgZW50cnkuXG5cbmBgYHB5dGhvblxucmlnaHRfY2xpY2tfbWVudSA9IFsnJlJpZ2h0JywgWydSaWdodCcsICchJkNsaWNrJywgJyZNZW51JywgJ0UmeGl0JywgJ1Byb3BlcnRpZXMnXV1cbmBgYFxuVGhlIGZpcnN0IHN0cmluZyBpbiBhIHJpZ2h0IGNsaWNrIG1lbnUgYW5kIGEgYnV0dG9uIG1lbnUgaXMgKioqaWdub3JlZCoqKi4gIEl0IGlzIG5vdCB1c2VkLiAgTm9ybWFsbHkgeW91IHdvdWxkIHB1dCB0aGUgc3RyaW5nIHRoYXQgaXMgc2hvd24gb24gdGhlIG1lbnUgYmFyIGluIHRoYXQgbG9jYXRpb24uXG5cbioqUmV0dXJuIHZhbHVlcyBmb3IgcmlnaHQgY2xpY2sgbWVudXMgYXJlIGRpZmZlcmVudCB0aGFuIG1lbnUgYmFycyBhbmQgYnV0dG9uIG1lbnVzLioqICBJbnN0ZWFkIG9mIHRoZSB2YWx1ZSBiZWluZyByZXR1cm5lZCB0aHJvdWdoIHRoZSB2YWx1ZXMgZGljdGlvbmFyeSwgaXQgaXMgaW5zdGVhZCBzZW50IGJhY2sgYXMgYW4gRXZlbnQuICBZb3Ugd2lsbCBub3RcblxuIyMgTWVudSBTaG9ydGN1dCBrZXlzXG5Zb3UgaGF2ZSB1c2VkIEFMVC1rZXkgaW4gb3RoZXIgV2luZG93cyBwcm9ncmFtcyB0byBuYXZpZ2F0ZSBtZW51cy4gIEZvciBleGFtcGxlIEFsdC1GK1ggZXhpdHMgdGhlIHByb2dyYW0uICBUaGUgQWx0LUYgcHVsbHMgZG93biB0aGUgRmlsZSBtZW51LiAgVGhlIFggc2VsZWN0cyB0aGUgZW50cnkgbWFya2VkIEV4aXQuXG5cblRoZSBnb29kIG5ld3MgaXMgdGhhdCBQeVNpbXBsZUdVSSBhbGxvd3MgeW91IHRvIGNyZWF0ZSB0aGUgc2FtZSBraW5kIG9mIG1lbnVzISAgWW91ciBwcm9ncmFtIGNhbiBwbGF5IHdpdGggdGhlIGJpZy1ib3lzLiAgQW5kLCBpdCdzIHRyaXZpYWwgdG8gZG8uXG5cbkFsbCB0aGF0J3MgcmVxdWlyZWQgaXMgZm9yIHlvdXIgdG8gYWRkIGFuIFwiJlwiIGluIGZyb250IG9mIHRoZSBsZXR0ZXIgeW91IHdhbnQgdG8gYXBwZWFyIHdpdGggYW4gdW5kZXJzY29yZS4gIFdoZW4geW91IGhvbGQgdGhlIEFsdCBrZXkgZG93biB5b3Ugd2lsbCBzZWUgdGhlIG1lbnUgd2l0aCB1bmRlcmxpbmVzIHRoYXQgeW91IG1hcmtlZC5cblxuT25lIG90aGVyIGxpdHRsZSBiaXQgb2YgcG9saXNoIHlvdSBjYW4gYWRkIGFyZSBzZXBhcmF0b3JzIGluIHlvdXIgbGlzdC4gIFRvIGFkZCBhIGxpbmUgaW4geW91ciBsaXN0IG9mIG1lbnUgY2hvaWNlcywgY3JlYXRlIGEgbWVudSBlbnRyeSB0aGF0IGxvb2tzIGxpa2UgdGhpczogYCAnLS0tJ2BcblxuVGhpcyBpcyBhbiBleGFtcGxlIE1lbnUgd2l0aCB1bmRlcmxpbmVzIGFuZCBhIHNlcGFyYXRvci5cblxuYGBgXG4jIC0tLS0tLSBNZW51IERlZmluaXRpb24gLS0tLS0tICNcbm1lbnVfZGVmID0gW1snJkZpbGUnLCBbJyZPcGVuJywgJyZTYXZlJywgJy0tLScsICdQcm9wZXJ0aWVzJywgJ0UmeGl0JyAgXV0sXG4gICAgICAgICAgICBbJyZFZGl0JywgWydQYXN0ZScsIFsnU3BlY2lhbCcsICdOb3JtYWwnLF0sICdVbmRvJ10sXSxcbiAgICAgICAgICAgIFsnJkhlbHAnLCAnJkFib3V0Li4uJ10sXVxuYGBgXG4gIEFuZCB0aGlzIGlzIHRoZSBzcGlmZnkgbWVudSBpdCBwcm9kdWNlZDpcbiAgIVttZW51cyB3aXRoIHNob3J0Y3V0c10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNDYyNTE2NzQtZjViNzRmMDAtYzQyNy0xMWU4LTk1YzYtNTQ3YWRjNTkwNDFiLmpwZylcblxuIyMgRGlzYWJsZWQgTWVudSBFbnRyaWVzXG5cbklmIHlvdSB3YW50IG9uZSBvZiB5b3VyIG1lbnUgaXRlbXMgdG8gYmUgZGlzYWJsZWQsIHRoZW4gcGxhY2UgYSAnIScgaW4gZnJvbnQgb2YgdGhlIG1lbnUgZW50cnkuICBUbyBkaXNhYmxlIHRoZSBQYXN0ZSBtZW51IGVudHJ5IGluIHRoZSBwcmV2aW91cyBleGFtcGxlcywgdGhlIGVudHJ5IHdvdWxkIGJlOlxuYFsnISZFZGl0JywgWydQYXN0ZScsIFsnU3BlY2lhbCcsICdOb3JtYWwnLF0sICdVbmRvJ10sXWBcblxuSWYgeW91ciB3YW50IHRvIGNoYW5nZSB0aGUgZGlzYWJsZWQgbWVudSBpdGVtIGZsYWcgLyBjaGFyYWN0ZXIgZnJvbSAnIScgdG8gc29tZXRoaW5nIGVsc2UsIGNoYW5nZSB0aGUgdmFyaWFibGUgYE1FTlVfRElTQUJMRURfQ0hBUkFDVEVSYFxuXG4jIyBLZXlzIGZvciBNZW51c1xuXG5CZWdpbm5pbmcgaW4gdmVyc2lvbiAzLjE3IHlvdSBjYW4gYWRkIGEgYGtleWAgdG8geW91ciBtZW51IGVudHJpZXMuICBUaGUgYGtleWAgdmFsdWUgd2lsbCBiZSByZW1vdmVkIHByaW9yIHRvIGJlIGluc2VydGVkIGludG8gdGhlIG1lbnUuICBXaGVuIHlvdSByZWNlaXZlIE1lbnUgZXZlbnRzLCB0aGUgZW50aXJlIG1lbnUgZW50cnksIGluY2x1ZGluZyB0aGUgYGtleWAgaXMgcmV0dXJuZWQuICBBIGtleSBpcyBpbmRpY2F0ZWQgYnkgYWRkaW5nIGA6OmAgYWZ0ZXIgYSBtZW51IGVudHJ5LCBmb2xsb3dlZCBieSB0aGUga2V5LlxuXG5UbyBhZGQgdGhlIGBrZXlgIGBfTVlfS0VZX2AgdG8gdGhlIFNwZWNpYWwgbWVudSBlbnRyeSwgdGhlIGNvZGUgd291bGQgYmU6XG5cbmBbJyZFZGl0JywgWydQYXN0ZScsIFsnU3BlY2lhbDo6X01ZX0tFWV8nLCAnTm9ybWFsJyxdLCAnVW5kbyddLF1gXG5cbiBJZiB5b3Ugd2FudCB0byBjaGFuZ2UgdGhlIGNoYXJhY3RlcnMgdGhhdCBpbmRpY2F0ZSBhIGtleSBmb2xsb3dzIGZyb20gJzo6JyB0byBzb21ldGhpbmcgZWxzZSwgY2hhbmdlIHRoZSB2YXJpYWJsZSBgTUVOVV9LRVlfU0VQQVJBVE9SYFxuXG4jIFJ1bm5pbmcgTXVsdGlwbGUgV2luZG93c1xuXG5UaGlzIGlzIHdoZXJlIFB5U2ltcGxlR1VJIGNvbnRpbnVlcyB0byBiZSBzaW1wbGUsIGJ1dCB0aGUgcHJvYmxlbSBzcGFjZSBqdXN0IHdlbnQgaW50byB0aGUgcmVhbG0gb2YgXCJDb21wbGV4XCIuXG5cbklmIHlvdSB3aXNoIHRvIHJ1biBtdWx0aXBsZSB3aW5kb3dzIGluIHlvdXIgZXZlbnQgbG9vcCwgdGhlbiB0aGVyZSBhcmUgMiBtZXRob2RzIGZvciBkb2luZyB0aGlzLlxuXG4xLiBGaXJzdCB3aW5kb3cgZG9lcyBub3QgcmVtYWluIGFjdGl2ZSB3aGlsZSBzZWNvbmQgd2luZG93IGlzIHZpc2libGVcbjIuIEZpcnN0IHdpbmRvdyByZW1haW5zIGFjdGl2ZSB3aGlsZSBzZWNvbmQgd2luZG93IGlzIHZpc2libGVcblxuWW91IHdpbGwgZmluZCB0aGUgMiBkZXNpZ24gbWF0dGVycyBpbiAyIGRlbW8gcHJvZ3JhbXMgaW4gdGhlIERlbW8gUHJvZ3JhbSBhcmVhIG9mIHRoZSBHaXRIdWIgKGh0dHA6Ly93d3cuUHlTaW1wbGVHVUkuY29tKVxuXG4qKipDcml0aWNhbGx5IGltcG9ydGFudCoqKlxuV2hlbiBjcmVhdGluZyBhIG5ldyB3aW5kb3cgeW91IG11c3QgdXNlIGEgXCJmcmVzaFwiIGxheW91dCBldmVyeSB0aW1lLiAgWW91IGNhbm5vdCByZXVzZSBhIGxheW91dCBmcm9tIGEgcHJldmlvdXMgd2luZG93LiAgQXMgYSByZXN1bHQgeW91IHdpbGwgc2VlIHRoZSBsYXlvdXQgZm9yIHdpbmRvdyAyIGJlaW5nIGRlZmluZWQgaW5zaWRlIG9mIHRoZSBsYXJnZXIgZXZlbnQgbG9vcC5cblxuSWYgeW91IGhhdmUgYSB3aW5kb3cgbGF5b3V0IHRoYXQgeW91IHVzZWQgd2l0aCBhIHdpbmRvdyBhbmQgeW91J3ZlIGNsb3NlZCB0aGUgd2luZG93LCB5b3UgY2Fubm90IHVzZSB0aGUgc3BlY2lmaWMgZWxlbWVudHMgdGhhdCB3ZXJlIGluIHRoYXQgd2luZG93LiAgWW91IG11c3QgUkUtQ1JFQVRFIHlvdXIgYGxheW91dGAgdmFyaWFibGUgZXZlcnkgdGltZSB5b3UgY3JlYXRlIGEgbmV3IHdpbmRvdy4gIFJlYWQgdGhhdCBwaHJhc2UgYWdhaW4uLi4uICBZb3UgbXVzdCBSRS1DUkVBVEUgeW91ciBgbGF5b3V0YCB2YXJpYWJsZSBldmVyeSB0aW1lIHlvdSBjcmVhdGUgYSBuZXcgd2luZG93LiAgVGhhdCBtZWFucyB5b3Ugc2hvdWxkIGhhdmUgYSBzdGF0ZW1lbmF0IHRoYXQgYmVnaW5zIHdpdGggYGxheW91dCA9IGAuICBTb3JyeSB0byBiZSBzdHVjayBvbiB0aGlzIHBvaW50LCBidXQgc28gbWFueSBwZW9wbGUgc2VlbSB0byBoYXZlIHRyb3VibGUgZm9sbG93aW5nIHRoaXMgc2ltcGxlIGluc3RydWN0aW9uLlxuXG4jIyBUSEUgR09MREVOIFJVTEUgT0YgV0lORE9XIExBWU9VVFNcblxuKioqVGhvdSBzaGFsdCBub3QgcmUtdXNlIGEgd2luZG93cydzIGxheW91dC4uLi4gZXZlciEqKipcblxuT3IgbW9yZSBleHBsaWNpdGx5IHB1dC4uLi5cblxuPiBJZiB5b3UgYXJlIGNhbGxpbmcgYFdpbmRvd2AgdGhlbiB5b3Ugc2hvdWxkIGRlZmluZSB5b3VyIHdpbmRvdyBsYXlvdXQgaW4gdGhlIHN0YXRlbWVudCBqdXN0IHByaW9yIHRvIHRoZSBgV2luZG93YCBjYWxsLlxuXG4jIyBEZW1vIFByb2dyYW1zIEZvciBNdWx0aXBsZSBXaW5kb3dzXG5cblRoZXJlIGFyZSBzZXZlcmFsIFwiRGVtbyBQcm9ncmFtc1wiIHRoYXQgd2lsbCBoZWxwIHlvdSBydW4gbXVsdGlwbGUgd2luZG93cy4gIFBsZWFzZSBkb3dubG9hZCB0aGVzZSBwcm9ncmFtcyBhbmQgRk9MTE9XIHRoZSBleGFtcGxlIHRoZXkgaGF2ZSBjcmVhdGVkIGZvciB5b3UuXG5cbkhlcmUgaXMgKioqc29tZSoqKiBvZiB0aGUgY29kZSBwYXR0ZXJucyB5b3UnbGwgZmluZCB3aGVuIGxvb2tpbmcgdGhyb3VnaCB0aGUgZGVtbyBwcm9ncmFtcy5cblxuIyMgTXVsdGktV2luZG93IERlc2lnbiBQYXR0ZXJuIDEgLSBib3RoIHdpbmRvd3MgYWN0aXZlXG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbiMgRGVzaWduIHBhdHRlcm4gMiAtIEZpcnN0IHdpbmRvdyByZW1haW5zIGFjdGl2ZVxuXG5sYXlvdXQgPSBbWyBzZy5UZXh0KCdXaW5kb3cgMScpLF0sXG4gICAgICAgICAgW3NnLklucHV0KGRvX25vdF9jbGVhcj1UcnVlKV0sXG4gICAgICAgICAgW3NnLlRleHQoJycsIGtleT0nX09VVFBVVF8nKV0sXG4gICAgICAgICAgW3NnLkJ1dHRvbignTGF1bmNoIDInKSwgc2cuQnV0dG9uKCdFeGl0JyldXVxuXG53aW4xID0gc2cuV2luZG93KCdXaW5kb3cgMScsIGxheW91dClcblxud2luMl9hY3RpdmUgPSBGYWxzZVxud2hpbGUgVHJ1ZTpcbiAgICBldjEsIHZhbHMxID0gd2luMS5SZWFkKHRpbWVvdXQ9MTAwKVxuICAgIHdpbjEuRmluZEVsZW1lbnQoJ19PVVRQVVRfJykuVXBkYXRlKHZhbHMxWzBdKVxuICAgIGlmIGV2MSBpcyBOb25lIG9yIGV2MSA9PSAnRXhpdCc6XG4gICAgICAgIGJyZWFrXG5cbiAgICAgaWYgbm90IHdpbjJfYWN0aXZlIGFuZCBldjEgPT0gJ0xhdW5jaCAyJzpcbiAgICAgICAgd2luMl9hY3RpdmUgPSBUcnVlXG4gICAgICAgIGxheW91dDIgPSBbW3NnLlRleHQoJ1dpbmRvdyAyJyldLFxuICAgICAgICAgICAgICAgICAgIFtzZy5CdXR0b24oJ0V4aXQnKV1dXG5cbiAgICAgICAgd2luMiA9IHNnLldpbmRvdygnV2luZG93IDInLCBsYXlvdXQpXG5cbiAgICBpZiB3aW4yX2FjdGl2ZTpcbiAgICAgICAgZXYyLCB2YWxzMiA9IHdpbjIuUmVhZCh0aW1lb3V0PTEwMClcbiAgICAgICAgaWYgZXYyIGlzIE5vbmUgb3IgZXYyID09ICdFeGl0JzpcbiAgICAgICAgICAgIHdpbjJfYWN0aXZlICA9IEZhbHNlXG4gICAgICAgICAgICB3aW4yLkNsb3NlKClcbmBgYFxuXG4jIyBNdWx0aS1XaW5kb3cgRGVzaWduIFBhdHRlcm4gMiAtIG9ubHkgMSBhY3RpdmUgd2luZG93XG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJUXQgYXMgc2dcblxuIyBEZXNpZ24gcGF0dGVybiAxIC0gRmlyc3Qgd2luZG93IGRvZXMgbm90IHJlbWFpbiBhY3RpdmVcblxubGF5b3V0ID0gW1sgc2cuVGV4dCgnV2luZG93IDEnKSxdLFxuICAgICAgICAgIFtzZy5JbnB1dChkb19ub3RfY2xlYXI9VHJ1ZSldLFxuICAgICAgICAgIFtzZy5UZXh0KCcnLCBrZXk9J19PVVRQVVRfJyldLFxuICAgICAgICAgIFtzZy5CdXR0b24oJ0xhdW5jaCAyJyldXVxuXG53aW4xID0gc2cuV2luZG93KCdXaW5kb3cgMScsIGxheW91dClcbndpbjJfYWN0aXZlPUZhbHNlXG53aGlsZSBUcnVlOlxuICAgIGV2MSwgdmFsczEgPSB3aW4xLlJlYWQodGltZW91dD0xMDApXG4gICAgaWYgZXYxIGlzIE5vbmU6XG4gICAgICAgIGJyZWFrXG4gICAgd2luMS5GaW5kRWxlbWVudCgnX09VVFBVVF8nKS5VcGRhdGUodmFsczFbMF0pXG5cbiAgICBpZiBldjEgPT0gJ0xhdW5jaCAyJyAgYW5kIG5vdCB3aW4yX2FjdGl2ZTpcbiAgICAgICAgd2luMl9hY3RpdmUgPSBUcnVlXG4gICAgICAgIHdpbjEuSGlkZSgpXG4gICAgICAgIGxheW91dDIgPSBbW3NnLlRleHQoJ1dpbmRvdyAyJyldLCAgICAgICAjIG5vdGUgbXVzdCBjcmVhdGUgYSBsYXlvdXQgZnJvbSBzY3JhdGNoIGV2ZXJ5IHRpbWUuIE5vIHJldXNlXG4gICAgICAgICAgICAgICAgICAgW3NnLkJ1dHRvbignRXhpdCcpXV1cblxuICAgICAgICB3aW4yID0gc2cuV2luZG93KCdXaW5kb3cgMicsIGxheW91dClcbiAgICAgICAgd2hpbGUgVHJ1ZTpcbiAgICAgICAgICAgIGV2MiwgdmFsczIgPSB3aW4yLlJlYWQoKVxuICAgICAgICAgICAgaWYgZXYyIGlzIE5vbmUgb3IgZXYyID09ICdFeGl0JzpcbiAgICAgICAgICAgICAgICB3aW4yLkNsb3NlKClcbiAgICAgICAgICAgICAgICB3aW4yX2FjdGl2ZSA9IEZhbHNlXG4gICAgICAgICAgICAgICAgd2luMS5VbkhpZGUoKVxuICAgICAgICAgICAgICAgIGJyZWFrXG5gYGBcblxuLS0tXG5cbiMgVGhlIFB5U2ltcGxlR1VJIERlYnVnZ2VyXG5cbkxpc3RlbiB1cCBpZiB5b3UgYXJlXG4qIGFkdmFuY2VkIHByb2dyYW1tZXJzIGRlYnVnZ2luZyBzb21lIHJlYWxseSBoYWlyeSBzdHVmZlxuKiBwcm9ncmFtbWVycyBmcm9tIGFub3RoZXIgZXJhIHRoYXQgbGlrZSB0byBkZWJ1ZyB0aGlzIHdheVxuKiB0aG9zZSB0aGF0IHdhbnQgdG8gaGF2ZSBcIngtcmF5IHZpc2lvblwiIGludG8gdGhlaXIgY29kZVxuKiBhc2tlZCB0byB1c2UgZGVidWdnZXIgdG8gZ2F0aGVyIGluZm9ybWF0aW9uXG4qIHJ1bm5pbmcgb24gYSBwbGF0Zm9ybSB0aGF0IGxhY2tzIEFOWSBkZWJ1Z2dlclxuKiBkZWJ1Z2dpbmcgYSBwcm9ibGVtIHRoYXQgaGFwcGVucyBvbmx5IG91dHNpZGUgb2YgYSBkZWJ1Z2dlciBlbnZpcm9ubWVudFxuKiBmaW5kaW5nIHlvdXJzZWxmIHNheWluZyBcImJ1dCBpdCB3b3JrcyB3aGVuIHJ1bm5pbmcgUHlDaGFybVwiXG5cblN0YXJ0aW5nIG9uIEp1bmUgMSwgMjAxOSwgYSBidWlsdC1pbiB2ZXJzaW9uIG9mIHRoZSBkZWJ1Z2dlciBgaW13YXRjaGluZ3lvdWAgaGFzIGJlZW4gc2hpcHBpbmcgaW4gZXZlcnkgY29weSBvZiBQeVNpbXBsZUdVSS4gIEl0J3MgYmVlbiBsYXJnZWx5IGRvd25wbGF5ZWQgdG8gZ2F1Z2Ugd2hldGhlciBvciBub3QgdGhlIGFkZGVkIGNvZGUgYW5kIHRoZSBhZGRlZCBmZWF0dXJlIGFuZCB0aGUgdXNlIG9mIGEgY291cGxlIG9mIGtleXMsIHdvdWxkIG1lc3MgdXAgYW55IHVzZXJzLiAgT3ZlciAzMCwwMDAgdXNlcnMgaGF2ZSBpbnN0YWxsZWQgUHlTaW1wbGVHVUkgc2luY2UgdGhlbiBhbmQgdGhlcmUncyBub3QgYmUgYSBzaW5nbGUgSXNzdWUgZmlsZWQgbm9yIGNvbW1lbnQvY29tcGxhaW50IG1hZGUsIHNvIHNlZW1zIHNhZmUgZW5vdWdoIHRvIG5vcm1hbCB1c2Vycy4uLiBzbyBmYXIuLi4uXG5cblNvIGZhciBubyBvbmUgaGFzIHJlcG9ydGVkIGFueXRoaW5nIGF0IGFsbCBhYm91dCB0aGUgZGVidWdnZXIuICBUaGUgYXNzdW1wdGlvbiBpcyB0aGF0IGl0IGlzIHF1aWV0bHkgbHlpbmcgZG9ybWFudCwgd2FpdGluZyBmb3IgeW91IHRvIHByZXNzIHRoZSBgQlJFQUtgIG9yIGBDT05UUk9MYCArIGBCUkVBS2Aga2V5cy4gIEl0J3Mgb2RkIG5vIG9uZSBoYXMgYWNjaWRlbnRseSBkb25lIHRoaXMgYW5kIGZyZWFrZWQgb3V0LCBsb2dnaW5nIGFuIElzc3VlLlxuXG5UaGUgcGxhaW4gUHlTaW1wbGVHVUkgbW9kdWxlIGhhcyBhIGRlYnVnZ2VyIGJ1aWx0aW4uICBGb3IgdGhlIG90aGVyIHBvcnRzLCBwbGVhc2UgdXNlIHRoZSBwYWNrYWdlIGBpbXdhdGNoaW5neW91YC5cblxuIyMgV2hhdCBpcyBpdD8gIFdoeSB1c2UgaXQ/ICBXaGF0IHRoZSBoZWNrPyAgSSBhbHJlYWR5IGhhdmUgYW4gSURFLlxuXG5UaGlzIGRlYnVnZ2VyIHByb3ZpZGVzIHlvdSB3aXRoIHNvbWV0aGluZyB1bmlxdWUgdG8gbW9zdCB0eXBpY2FsIFB5dGhvbiBkZXZlbG9wZXJzLCB0aGUgYWJpbGl0eSB0byBcInNlZVwiIGFuZCBpbnRlcmFjdCB3aXRoIHlvdXIgY29kZSwgKip3aGlsZSBpdCBpcyBydW5uaW5nKiouICBZb3UgY2FuIGNoYW5nZSB2YXJpYWJsZSB2YWx1ZXMgd2hpbGUgeW91ciBjb2RlIGNvbnRpbnVlcyB0byBydW4uXG5cblByaW50IHN0YXRlbWVudHMgYXJlIGNvb2wsIGJ1dCBwZXJoYXBzIHlvdSdyZSB0aXJlZCBvZiBzZWVpbmcgYSBwcmludG91dCBvZiBgZXZlbnRgIGFuZCBgdmFsdWVzYDpcbmBgYFxuUHVzaCBNZSB7MDogJ0lucHV0IGhlcmUnfVxuUHVzaCBNZSB7MDogJ0lucHV0IGhlcmUnfVxuUHVzaCBNZSB7MDogJ0lucHV0IGhlcmUnfVxuYGBgXG5cbkFuZCB3b3VsZCBwcmVmZXIgdG8gc2VlIHRoaXMgd2luZG93IHVwZGF0aW5nIGNvbnRpbnVvdXNseSBpbiB0aGUgdXBwZXIgcmlnaHQgY29ybmVyIG9mIHlvdXIgZGlzcGxheTpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI3OTM3NTEtNTQxOTc5MDAtYmFhMC0xMWU5LTlhOTgtZjc4MDI1OTA2MmIxLnBuZylcblxuTm90aWNlIGhvdyBlYXN5IGl0IGlzLCB1c2luZyB0aGlzIHdpbmRvdyBhbG9uZSwgdG8gZ2V0IHRoZSBsb2NhdGlvbiB0aGF0IHlvdXIgUHlTaW1wbGVHVUkgcGFja2FnZSBpcyBjb21pbmcgZnJvbSAqKipmb3Igc3VyZSoqKiwgbm8gZ3Vlc3NpbmcuICBFeHBlY3QgdGhpcyB3aW5kb3cgdG8gYmUgaW4geW91ciBkZWJ1Z2dpbmcgZnV0dXJlIGFzIGl0J2xsIGdldCBhc2tlZCBmb3IgZnJvbSB0aW1lIHRvIHRpbWUuXG5cbiMjIFByZXBhcmluZyBUbyBSdW4gdGhlIERlYnVnZ2VyXG5cbklmIHlvdXIgcHJvZ3JhbSBpcyBydW5uaW5nIHdpdGggYmxvY2tpbmcgYFJlYWRgIGNhbGxzLCB0aGVuIHlvdSB3aWxsIHdhbnQgdG8gYWRkIGEgdGltZW91dCB0byB5b3VyIHJlYWRzLiAgVGhpcyBpcyBiZWNhdXNlIHRoZSBkZWJ1Z2dlciBnZXRzIGl0J3MgY3ljbGVzIGJ5IHN0ZWFsaW5nIGEgbGl0dGxlIGJpdCBvZiB0aW1lIGZyb20gdGhlc2UgYXN5bmMgY2FsbHMuLi4gYnV0IG9ubHkgd2hlbiB5b3UgaGF2ZSBvbmUgb2YgdGhlc2UgZGVidWdnZXIgd2luZG93cyBvcGVuIHNvIG5vIGJpdGNoaW5nIGFib3V0IHdhc3RlZCBDUFUgdGltZSBhcyB0aGVyZSBpcyBub25lLlxuXG5Zb3VyIGV2ZW50IGxvb3Agd2lsbCBiZSBtb2RpZmllZCBmcm9tIHRoaXMgYmxvY2tpbmc6XG5gYGBweXRob25cbndoaWxlIFRydWU6XG4gICAgZXZlbnQsIHZhbHVlcyA9IHdpbmRvdy5SZWFkKClcbmBgYFxuXG5UbyB0aGlzIG5vbi1ibG9ja2luZzpcbmBgYHB5dGhvblxud2hpbGUgVHJ1ZTpcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQodGltZW91dD0yMDApXG4gICAgaWYgZXZlbnQgPT0gc2cuVElNRU9VVF9LRVk6XG4gICAgICAgIGNvbnRpbnVlXG5gYGBcblxuVGhlc2UgMyBsaW5lcyB3aWxsIGluIG5vIHdheSBjaGFuZ2UgaG93IHlvdXIgYXBwbGljYXRpb24gbG9va3MgYW5kIHBlcmZvcm1zLiAgWW91IGNhbiBkbyB0aGlzIHRvIGFueSBQeVNpbXBsZUdVSSBhcHAgdGhhdCB1c2VzIGEgYmxvY2tpbmcgcmVhZCBhbmQgeW91J2xsIG5vdCBub3RpY2UgYSBkaWZmZXJlbmNlLiAgVGhlIHJlYXNvbiB0aGlzIGlzIGEgTk9QIChOby1vcGVyYXRpb24pIGlzIHRoYXQgd2hlbiBhIHRpbWVvdXQgaGFwcGVucywgdGhlIGVudmVudCB3aWxsIGJlIHNldCB0byBgc2cuVElNRU9VVF9LRVlgLiAgSWYgYSB0aW1lb3V0IGlzIHJldHVybmVkIGFzIHRoZSBldmVudCwgdGhlIGNvZGUgc2ltcGx5IGlnbm9yZXMgaXQgYW5kIHJlc3RhcnRzIHRoZSBsb29wIGJ5IGV4ZWN1dGluZyBhIGBjb250aW51ZWAgc3RhdGVtZW50LlxuXG5UaGlzIHRpbWVvdXQgdmFsdWUgb2YgMjAwIG1lYW5zIHRoYXQgeW91ciBkZWJ1Z2dlciBHVUkgd2lsbCBiZSB1cGRhdGVkIDUgdGltZXMgYSBzZWNvbmQgaWYgbm90aGluZyBpcyBoYXBwZW5pbmcuICBJZiB0aGlzIGFkZHMgdG9vIG11Y2ggXCJkcmFnXCIgdG8geW91ciBhcHBsaWNhdGlvbiwgeW91IGNhbiBtYWtlIHRoZSB0aW1lb3V0IGxhcmdlci4gIFRyeSB1c2luZyA1MDAgb3IgMTAwMCBpbnN0ZWFkIG9mIDEwMC5cblxuIyMjIFdoYXQgaGFwcGVucyBpZiB5b3UgZG9uJ3QgYWRkIGEgdGltZW91dFxuXG5MZXQncyBzYXkgeW91J3JlIGluIGEgc2l0dWF0aW9uIHdoZXJlIGEgdmVyeSBpbnRlcm1ldHRlbnQgYnVnIGhhcyBqdXN0IGhhcHBlbmVkIGFuZCB0aGUgZGVidWdnZXIgd291bGQgcmVhbGx5IGhlbHAgeW91LCBidXQgeW91IGRvbid0IGhhdmUgYSB0aW1lb3V0IG9uIHlvdXIgYHdpbmRvd3MuUmVhZCgpYCBjYWxsLiAgSXQncyBPSy4gIFJlY2FsbCB0aGF0IHRoZSB3YXkgdGhlIGRlYnVnZ2VyIGdldHMgaXRzIFwiY3ljbGVzXCIgaXMgdG8gYm9ycm93IGZyb20geW91ciBgUmVhZGAgY2FsbHMuICBXaGF0IHlvdSBuZWVkIHRvIGRvIGlzIGFsdGVybmF0ZSBiZXR3ZWVuIHVzaW5nIHRoZSBkZWJ1Z2dlciBhbmQgdGhlbiBnZW5lcmF0aW5nIGFub3RoZXIgcGFzcyB0aHJvdWdoIHlvdXIgZXZlbnQgbG9vcC5cblxuTWF5YmUgaXQncyBhbiBPSyBidXR0b24gdGhhdCB3aWxsIGNhdXNlIHlvdXIgbG9vcCB0byBleGVjdXRlIGFnYWluICh3aXRob3V0IGV4aXRpbmcpLiAgSWYgc28sIHlvdSBjYW4gdXNlIGl0IHRvIGhlbHAgbW92ZSB0aGUgZGVidWdnZXIgYWxvbmcuICBcblxuWWVzLCB0aGlzIGlzIGEgbWFqb3IgcGFpbiBpbiB0aGUgYXNzLCBidXQgaXQncyBub3QgVEhBVCBiYWQgYW5kIGNvbXBhcmVkIHRvIG5vdGhpbmcgaW4gYSB0aW1lIG9mIGNyaXNpcyBhbmQgdGhpcyBpcyBwb3RlbnRpYWxseSB5b3VyIFwic2F2aW9yIHRvb2xcIiB0aGF0J3MgZ29pbmcgdG8gc2F2ZSB5b3VyIGFzcywgcHJlc3NpbmcgdGhhdCBPSyBidXR0b24gYSBmZXcgdGltZXMgaXMgZ29pbmcgdG8gbG9vayBsaWtlIG5vdGhpbmcgdG8geW91LiAgWW91IGp1c3Qgd2FudCB0byBkdW1wIG91dCB0aGUgdmFsdWUgb2YgYSB2YXJpYWJsZSB0aGF0IGhvbGRzIGFuIGluc3RhbmNlIG9mIHlvdXIgY2xhc3MhXG5cbiMjIEEgU2FtcGxlIFByb2dyYW0gRm9yIFVzIFRvIFVzZVxuXG5Ob3cgdGhhdCB5b3UgdW5kZXJzdGFuZCBob3cgdG8gYWRkIHRoZSBkZWJ1Z2dlciB0byB5b3VyIHByb2dyYW0sIGxldCdzIG1ha2UgYSBzaW1wbGUgbGl0dGxlIHByb2dyYW0gdGhhdCB5b3UgY2FuIHVzZSB0byBmb2xsb3cgdGhlc2UgZXhhbXBsZXM6XG5cbmBgYHB5dGhvblxuaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG5cbndpbmRvdyA9IHNnLldpbmRvdygnVGVzdGluZyB0aGUgRGVidWdnZXInLCBbW3NnLlRleHQoJ0RlYnVnZ2VyIFRlc3RlcicpLCBzZy5JbignSW5wdXQgaGVyZScpLCBzZy5CKCdQdXNoIE1lJyldXSlcblxud2hpbGUgVHJ1ZTpcbiAgICBldmVudCwgdmFsdWVzID0gd2luZG93LlJlYWQodGltZW91dD01MDApXG4gICAgaWYgZXZlbnQgPT0gc2cuVElNRU9VVF9LRVk6XG4gICAgICAgIGNvbnRpbnVlXG4gICAgaWYgZXZlbnQgaXMgTm9uZTpcbiAgICAgICAgYnJlYWtcbiAgICBwcmludChldmVudCwgdmFsdWVzKVxud2luZG93LkNsb3NlKClcbmBgYFxuXG4jIyBEZWJ1Z2dlciBXaW5kb3dzXG5cbiMjIyBcIlBvcG91dCBEZWJ1Z2dlciBXaW5kb3dcIlxuXG5UaGVyZSBhcmUgMiBkZWJ1Z2dlciB3aW5kb3dzLiBPbmUgaXMgY2FsbGVkIHRoZSBcIlBvcG91dFwiIGRlYnVnZ2VyIHdpbmRvdy4gIFRoZSBQb3BvdXQgd2luZG93IGRpc3BsYXlzIGFzIG1hbnkgY3VycmVudGx5IGluLXNjb3BlIGxvY2FsIHZhcmlhYmxlcyBhcyBwb3NzaWJsZS4gIFRoaXMgd2luZG93IGlzIG5vdCBpbnRlcmFjdGl2ZS4gIEl0IGlzIG1lYW50IHRvIGJlIGEgZnJlcXVlbnRseSB1cGRhdGVkIFwiZGFzaGJvYXJkXCIgb3IgXCJzbmFwc2hvdFwiIG9mIHlvdXIgdmFyaWFibGVzLlxuXG5PbmUgXCJ2YXJpYWJsZVwiIHNob3duIGluIHRoZSBwb3BvdXQgd2luZG93IHRoYXQgaXMgYW4gb2Z0ZW4gYXNrZWQgZm9yIHBpZWNlIG9mIGluZm9ybWF0aW9uIHdoZW4gZGVidWdnaW5nIElzc3VlcyBhbmQgdGhhdCB2YXJpYWJsZSBpcyBgc2dgIChvciB3aGF0ZXZlciB5b3UgbmFtZWQgdGhlIFB5U2ltcGxlR1VJIHBhY2FrZ2Ugd2hlbiB5b3UgZGlkIHlvdXIgaW1wb3J0KS4gVGhlIGFzc3VtcHRpb24gaXMgdGhhdCB5b3VyIGltcG9ydCBpcyBgaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnYC4gIElmIHlvdXIgaW1wb3J0IGlzIGRpZmZlcmVudCwgdGhlbiB5b3UnbGwgc2VlIGEgZGlmZmVyZW50IHZhcmlhYmxlLiAgVGhlIHBvaW50IGlzIHRoYXQgaXQncyBzaG93biBoZXJlLlxuXG5FeGl0aW5nIHRoaXMgd2luZG93IGlzIGRvbmUgdmlhIHRoZSBsaXR0bGUgcmVkIFgsICoqb3IgdXNpbmcgdGhlIHJpY2t0LWNsaWNrIG1lbnUqKiB3aGljaCBpcyBhbHNvIHVzZWQgYXMgb25lIHdheSB0byBsYXVuY2ggdGhlIE1haW4gRGVidWdnZXIgV2luZG93XG5cbiMjIyMgV2F5cyBvZiBMYXVuY2hpbmcgdGhlIFBvcG91dCBXaW5kb3dcblxuVGhlcmUgYXJlIDMgd2F5cyBvZiBvcGVuaW5nIHRoZSBQb3BvdXQgd2luZG93LlxuXG4xLiBQcmVzcyB0aGUgYEJSRUFLYCBrZXkgb24geW91ciBrZXlib2FyZC5cbjIuIENhbGwgdGhlIGZ1bmN0aW9uIGBzaG93X2RlYnVnZ2VyX3BvcG91dF93aW5kb3cobG9jYXRpb249KHgseSkpYFxuMy4gQWRkIGBEZWJ1ZygpYCBidXR0b24gdG8geW91ciBsYXlvdXQgLSBhZGRzIGEgbGl0dGxlIHB1cnBsZSBhbmQgeWVsbG93IFB5U2ltcGxlR1VJIGxvZ28gdG8geW91ciB3aW5kb3dcblxuIyMjIyBXaGVuIHlvdSBhcmUgYXNrZWQgZm9yIHRoZSBcIkxvY2F0aW9uIG9mIHlvdXIgUHlTaW1wbGVHVUkgcGFja2FnZSBvciBQeVNpbXBsZUdVSS5weSBmaWxlXCIgZG8gdGhpc1xuXG5JZiB5b3Ugd2lzaCB0byB1c2UgdGhlIGRlYnVnZ2VyIHRvIGZpbmQgdGhlIGxvY2F0aW9uIG9mIFRISVMgcnVubmluZyBwcm9ncmFtJ3MgUHlTaW1wbGVHVUkgcGFja2FnZSAvIHRoZSBQeVNpbXBsZUdVSS5weSBmaWxlLCB0aGVuIGFsbCB5b3UgbmVlZCB0byBkbyBpczpcbiogUHJlc3MgdGhlIGBCUkVBS2Aga2V5IG9uIHlvdXIga2V5Ym9hcmQuIFxuICAgICogVGhpcyBpcyBzb21ldGltZXMgbGFiZWxsZWQgYXMgdGhlIGBDYW5jZWxgIGtleVxuICAgICogTWF5IGFsc28gaGF2ZSBgUGF1c2VgIHByaW50ZWQgb24ga2V5XG4gICAgKiBPbiBzb21lIFVTIGtleWJvYXJkcywgaXQgaXMgbG9jYXRlZCBuZXh0IHRvIGBTY3JvbGwgTG9ja2AgYW5kL29yIGFib3ZlIGBQYWdlVXBgIGtleVxuKiBUaGlzIHdpbGwgb3BlbiBhIHdpbmRvdyBsb2NhdGVkIGluIHRoZSB1cHBlciByaWdodCBjb3JuZXIgb2YgeW91ciBzY3JlZW4gdGhhdCBsb29rcyBzb21ldGhpbmcgbGlrZSB0aGlzOlxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI3OTM3NTEtNTQxOTc5MDAtYmFhMC0xMWU5LTlhOTgtZjc4MDI1OTA2MmIxLnBuZylcbiogVGhlIGluZm9ybWF0aW9uIHlvdSBhcmUgc2Vla2luZyBpcyBzaG93biBuZXh0IHRvIHRoZSBgc2dgIGluIHRoZSB3aW5kb3dcbllvdSBkb24ndCBuZWVkIHRvIG1vZGlmeSB5b3VyIHByb2dyYW0gdG8gZ2V0IHRoaXMgaW5mbyB1c2luZyB0aGlzIHRlY2huaXF1ZS5cblxuSWYgeW91ciB2YXJpYWJsZSdzIHZhbHVlIGlzIHRvbyBsb25nIGFuZCBkb2Vzbid0IGZpdCwgdGhlbiB5b3UnbGxsIG5lZWQgdG8gY29sbGVjdCB0aGlzIGluZm9ybWF0aW9uIHVzaW5nIHRoZSBcIk1haW4gRGVidWdnZXIgV2luZG93XCJcblxuIyMjIyBXaGF0J3MgTk9UIExpc3RlZCBJbiBUaGUgUG9wb3V0IERlYnVnZ2VyIFdpbmRvd1xuXG5UaGUgUG9wdXAgd2luZG93IGlzIGEgXCJTbmFwc2hvdFwiIG9mIHlvdXIgbG9jYWwgdmFyaWFibGVzIGF0IHRoZSB0aW1lIHRoZSB3aW5kb3cgd2FzIG9wZW5lZC4gVGhpcyBtZWFucyAqKmFueSB2YXJpYWJsZXMgdGhhdCBkaWQgbm90IGV4aXN0IGF0IHRoZSB0aW1lIHRoZSBQb3BvdXQgd2FzIGNyZWF0ZWQgd2lsbCBub3QgYmUgc2hvd24qKi4gICBUaGlzIHdpbmRvdyBkb2VzICoqTk9UKiogZXhwYW5kIGluIHNpemUgYnkgYWRkaW5nIG5ldyB2YXJpYWJsZXMuICBNYXliZSBpbiB0aGUgZnV0dXJlLlxuXG4jIyMgVGhlIFwiTWFpbiBEZWJ1Z2dlciBXaW5kb3dcIlxuXG5Ob3cgd2UncmUgdGFsa2luZyBzZXJpb3VzIFB5dGhvbiBkZWJ1Z2dpbmchXG5cbkV2ZXIgd2lzaCB5b3UgaGFkIGEgYHJlcGw+Pj5gIHByb21wdCB0aGF0IHlvdSBjb3VsZCBydW4gd2hpbGUgeW91ciBwcm9ncmFtIGlzIHJ1bm5pbmcuICBXZWxsLCB0aGF0J3MgcHJldHR5IG11Y2ggd2hhdCB5b3UncmUgZ2V0dGluZyB3aXRoIHRoZSBQeVNpbXBsZUdVSSBkZWJ1Z2dlciBNYWluIFdpbmRvdyEgIENvb2wsIGh1aD8gIElmIHlvdSdyZSBub3QgaW1wcmVzc2VkLCBnbyBnZXQgYSBjdXAgb2YgY29mZmVlIGFuZCB3YWxrIG9mZiB0aGF0IGRpc3RyYWN0aW9uIGluIHlvdXIgaGVhZCBiZWZvcmUgY2FycmluZyBvbiBiZWNhdXNlIHdlJ3JlIGluIHRvIHNvbWUgc2VyaW91c2x5IGNvb2wgc2hpdCBoZXJlLi4uLlxuXG5Zb3UnbGwgZmluZCB0aGF0IHRoaXMgd2luZG93IGhhcyAyIHRhYnMsIG9uZSBpcyBsYWJlbGxlZCBgVmFyaWFibGVzYCBhbmQgdGhlIG90aGVyIGlzIGxhYmVsbGVkIGBSRVBMICYgV2F0Y2hlc2BcblxuIyMjIyBXYXlzIG9mIE9wZW5pbmcgdGhlIE1haW4gRGVidWdnZXIgV2luZG93XG5cblRoZXJlIGFyZSAzIHdheXMgdG8gb3BlbiB0aGUgTWFpbiBEZWJ1Z2dlciBXaW5kb3dcblxuMS4gUHJlc3MgYENvbnRyb2xgICsgYEJyZWFrYCBvbiB5b3VyIFBDIGtleWJvYXJkXG4yLiBGcm9tIHRoZSBQb3BvdXQgRGVidWcgV2luZG93LCByaWdodCBjbGljayBhbmQgY2hvb3NlIGBEZWJ1Z2dlcmAgZnJvbSB0aGUgcmlnaHQgY2xpY2sgbWVudVxuMy4gRnJvbSB5b3VyIGNvZGUgY2FsbCBgc2hvd19kZWJ1Z2dlcl93aW5kb3cobG9jYXRpb249KHgseSkpYFxuXG4jIyMjIFRoZSBcIlZhcmlhYmxlc1wiIFRhYiBvZiBNYWluIERlYnVnZ2VyIFdpbmRvd1xuXG4hW1NOQUctMDQ0MF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI3OTczOTEtYTAxY2ViODAtYmFhOS0xMWU5LTg0NWQtM2NkMDJjYTBkYmNjLmpwZylcblxuTm90aWNlIHRoZSB0aGUgXCJmcmFtZVwiIHN1cnJvdW5kaW5nIHRoaXMgd2luZG93IGlzIGxhYmVsbGVkIFwiQXV0byBXYXRjaGVzXCIgaW4gYmx1ZS4gIExpa2UgdGhlIFBvcHVwIHdpbmRvdywgdGhpcyBkZWJ1Z2dlciB3aW5kb3cgYWxzbyBcIldhdGNoZXNcIiB2YXJpYWJsZXMsIHdoaWNoIG1lYW5zIGNvbnRpbnVvdXNseSB1cGRhdGVzIHRoZW0gYXMgb2Z0ZW4gYXMgeW91IGNhbGwgYFdpbmRvdy5SZWFkYC5cblxuVGhlIG1heGltdW0gbnVtYmVyIG9mIFwid2F0Y2hlc1wiIHlvdSBjYW4gaGF2ZSBhbnkgYW55IG9uZSB0aW1lIGlzIDkuXG5cbiMjIyMjIENob29zaW5nIHZhcmlhYmxlcyB0byB3YXRjaFxuXG5Zb3UgY2FuIHNpbXBseSBjbGljayBcIlNob3cgQWxsIFZhcmlhYmxlXCIgYnV0dG9uIGFuZCB0aGUgbGlzdCBvZiB3YXRjaGVkIHZhcmlhYmxlcyB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhcmQgYnkgdGhlIGZpcnN0IDkgdmFyaWFibGVzIGl0IGZpbmRzLiAgT3IgeW91IGNhbiBjbGljayB0aGUgXCJDaG9vc2UgVmFyaWFibGVzIHRvIEF1dG8gV2F0Y2hcIiBidXR0b24gd2hlcmUgeW91IGNhbiBpbmRpdmlkdWFsbHkgY2hvb3NlIHdoYXQgdmFyaWFibGVzLCAqKmFuZCBleHByZXNzaW9ucyoqIHlvdSB3aXNoIHRvIGRpc3BsYXkuXG5cbiFbU05BRy0wNDQyXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My82Mjc5NzUyMC1lOTZkM2IwMC1iYWE5LTExZTktOGJhMC03OTRlNDc5YjZmYzUuanBnKVxuXG5JbiB0aGlzIHdpbmRvdyB3ZSdyZSBjaGVja2luZyBjaGVja2JveGVzIHRvIGRpc3BsYXkgdGhlc2UgdmFyaWFibGVzOlxuXG5gZXZlbnRgLCBgc2dgLCBgdmFsdWVzYCwgYHdpbmRvd2AsIGBfX2ZpbGVfX2BcblxuIVtTTkFHLTA0NDNdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYyNzk3NTE4LWU4ZDRhNDgwLWJhYTktMTFlOS04NTc1LTUyNTZkY2Y2YjVhYi5qcGcpXG5cbkFkZGl0aW9uYWxseSwgeW91IGNhbiBzZWUgYXQgdGhlIGJvdHRvbSBvZiB0aGUgd2luZG93IGEgXCJDdXN0b20gV2F0Y2hcIiBoYXMgYmVlbiBkZWZpbmVkLiAgVGhpcyBjYW4gYmUgYW55IGV4cGVyZXNzaW9uIHlvdSB3YW50LiAgTGV0J3Mgc2F5IHlvdSBoYXZlIGEgd2luZG93IHdpdGggYSBMT1Qgb2YgdmFsdWVzLiAgUmF0aGVyIHRoYW4gbG9va2luZyB0aHJvdWdoIHRoZSBgdmFsdWVzYCB2YXJpYWJsZSBhbmQgZmluZGluZyB0aGUgZW50cnkgd2l0aCB0aGUga2V5IHlvdSBhcmUgbG9va2luZyBmb3IsIHRoZSB2YWx1ZXMgdmFyaWFibGUncyBlbnRyeSBmb3IgYSBzcGVjaWZpYyBrZXkgaXMgZGlzcGxheWVkLlxuXG5JbiB0aGlzIGV4YW1wbGUgdGhlIEN1c3RvbSBXYXRjaCBlbnRlcmVkIHdhcyBgdmFsdWVzWzBdYC4gIEFmdGVyIGNsaWNraW5nIG9uIHRoZSBcIk9LXCIgYnV0dG9uLCBpbmRpY2F0aW5nIHRoZSB2YXJpYWJsZXMgYXJlIGNob3NlbiB0aGF0IHdlIHdpc2ggdG8gd2F0Y2gsIHRoaXMgaXMgdGhlIE1haW4gd2luZG93IHRoYXQgaXMgc2hvd246XG5cbiFbU05BRy0wNDQ0XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS8xMzY5NjE5My82Mjc5NzUxNC1lOGQ0YTQ4MC1iYWE5LTExZTktOWE4Ni1jZmU5OTM0MmRlZGIuanBnKVxuXG5XZSBjYW4gc2VlIHRoZSB2YXJpYWJsZXMgd2UgY2hlY2tlZCBhcyB3ZWxsIGFzIHRoZSBkZWZpbmVkIGV4cHJlc3Npb24gYHZhbHVlc1swXWAuICBJZiB5b3UgbGVhdmUgdGhpcyB3aW5kb3cgb3BlbiwgdGhlc2UgdmFsdWVzIHdpdGggY29udGludW91c2x5IGJlIHVwZGF0ZWQsIG9uIHRoZSBmbHksIGV2ZXJ5IHRpbWUgd2UgY2FsbCB0aGUgbGluZSBpbiBvdXIgZXhhbXBsZSBjb2RlIGB3aW5kb3cuUmVhZCh0aW1lb3V0PTUwMClgLiAgVGhpcyBtZWFucyB0aGF0IHRoZSBNYWluIERlYnVnZ2VyIFdpbmRvdyBhbmQgdGhlc2UgdmFyaWFibGVzIHdlIGRlZmluZWQgd2lsbCBiZSB1cGRhdGVkIGV2ZXJ5IDUwMCBtaWxsaXNlY29uZHMuXG5cbiMjIyMgVGhlIFJFUEwgJiBXYXRjaGVzIFRhYlxuXG4hW1NOQUctMDQ0MV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI3OTc1MDctZTdhMzc3ODAtYmFhOS0xMWU5LTkzYzQtNmZmMGM4YWNiMTFkLmpwZylcblxuVGhpcyB0YWIgaXMgcHJvdmlkZWQgdG8geW91IGFzIGEgd2F5IHRvIGludGVyYWN0IHdpdGggeW91ciBydW5uaW5nIHByb2dyYW0gb24gYSByZWFsLXRpbWUgYmFzaXMuICBcblxuSWYgeW91IHdhbnQgdG8gcXVpY2tseSBsb29rIGF0IHRoZSB2YWx1ZXMgb2YgdmFyaWFibGVzLCBuZWFybHkgQU5ZIHZhcmlhYmxlcywgdGhlbiB0eXBlIHRoZSBpbmZvcm1hdGlvbiBpbnRvIG9uZSBvZiB0aGUgMyBzcGFjZXMgcHJvdmlkZWQgdG8gXCJXYXRjaFwiIGVpdGhlciB2YXJpYWJsZXMgb3IgZXhwZXJlc3Npb25zLiAgSW4gdGhpcyBleGFtcGxlLCB0aGUgdmFyaWFibGUgd2luZG93IHdhcyB0eXBlZCBpbnRvIHRoZSBmaXJzdCBzbG93LiAgXG5cbioqKkltbWVkaWF0ZWx5KioqIGFmdGVyIHR5cGluZyB0aGUgY2hhcmFjdGVyICd3JywgdGhlIGluZm9ybWF0aW9uIHRvIHRoZSByaWdodCB3YXMgZGlzcGxheWVkLiAgTm8gYnV0dG9uIG5lZWRzIHRvIGJlIGNsaWNrZWQuICBZb3UgbWVyZWx5IG5lZWVkIHRvIHR5cGUgaW4gYSB2YWxpZCBleHBlcmVzc2lvbiBhbmQgaXQgd2lsbCBiZSBkaXNwbGF5ZWQgdG8geW91Li4uLiBhbmQgaXQgd2lsbCBiZSBkaXNwbGF5ZWQgb24gYW4gb24tZ29pbmcsIGNvbnN0YW50bHktcmVmcmVzaGluZy1iYXNpcy5cblxuIVtTTkFHLTA0NDddKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYyNzk3MzkzLWEwYjU4MjAwLWJhYTktMTFlOS04MDE2LTFjYWRjYTRkOTdlNy5qcGcpXG5cbklmIHRoZSBhcmVhIHRvIHRoZSByaWdodCBvZiB0aGUgaW5wdXQgZmllbGQgaXMgdG9vIHNtYWxsLCB0aGVuIHlvdSBjYW4gY2xpY2sgb24gdGhlIFwiRGV0YWlsXCIgYnV0dG9uIGFuZCB5b3Ugd2lsbCBiZSBzaG93biBhIHBvcHVwLCBzY3JvbGxlZCB3aW5kb3cgd2l0aCBhbGwgb2YgdGhlIGluZm9ybWF0aW9uIGRpc3BsYXllZCBhcyBpZiBpdCB3ZXJlIHByaW50ZWQuICBcblxuSSdtIHN1cmUgeW91J3ZlIGhhZCB0aGUgbG92ZWx5IGV4cGVyaWVuY2Ugb2YgcHJpbnRpbmcgYW4gb2JqZWN0LiAgV2hlbiBjbGlja2luZyB0aGUgXCJEZXRhaWxcIiBidXR0b24gbmV4dCB0byB0aGUgYHdpbmRvd2AgdmFyaWFibGUgYmVpbmcgc2hvd24sIHRoaXMgd2luZG93IGlzIHNob3duOlxuXG4hW1NOQUctMDQ0OV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI4MDE0MjMtYjBkMjVmMDAtYmFiMy0xMWU5LTgyOWEtYWViYjQyOTUyMWNkLmpwZylcblxuT2gsIFB5dGhvbiwgLXNpZ2gtLiAgSSBqdXN0IHdhbnQgdG8gc2VlIG15IGB3aW5kb3dgIG9iamVjdCBwcmludGVkLiAgXG5cbiMjIyMgYE9iamAgQnV0dG9uIHRvIHRoZSBSZXNjdWUhXG5cblB5U2ltcGxlR1VJIGhhcyBhIGZ1biBhbmQgdmVyeSB1c2VmdWwgZnVuY3Rpb24gdGhhdCBpcyBkaXNjdXNzZWQgaW4gdGhlIGRvY3MgbmFtZWQgYE9ialRvU3RyaW5nYCB3aGljaCB0YWtlcyBhbiBvYmplY3QgYW5kIGNvbnZlcnRzIGl0J3MgKipjb250ZW50cyoqIGl0IGludG8gYSBuaWNlbHkgZm9ybWF0dGVkIHN0cmluZy4gIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBjcmVhdGUgdGhlIHRleHQgb3V0cHV0IHdoZW4geW91IGNsaWNrIHRoZSBgT2JqYCBidXR0b24uICBUaGUgcmVzdWx0IGlzIHRoaXMgaW5zdGVhZCBvZiB0aGUgdGlueSB3aW5kb3cgc2hvd24gcHJldmlvdXNseTpcblxuIVtTTkFHLTA0NDZdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzEzNjk2MTkzLzYyNzk3NTA4LWU3YTM3NzgwLWJhYTktMTFlOS05NmJmLWIyYzA2NmU3MmQ3OC5qcGcpXG5cbiMjIFRoZSBSRVBMIFByb21wdFxuXG5XaGlsZSBub3QgKipyZWFsbHkqKiBhIFB5dGhvbiBSRVBMIHByb21wdCwgdGhpcyB3aW5kb3cncyBgUkVQTCA+Pj5gIHByb21wdCBpcyBtZWFudCB0byBhY3QgYXMgbXVjaCBsaWtlIG9uZSBhcyBwb3NzaWJsZS4gIEhlcmUgeW91IGNhbiBlbnRlciBleHBlcmVzc2lvbnMgYW5kIGNvZGUgdG9vLlxuXG5UaGUgdXNlcyBmb3IgdGhpcyBwcm9tcHQgYXJlIHNvIG51bWVyb3VzIGFuZCBkaXZlcnNlIHRoYXQgbGlzdGluZyB0aGVtIGFsbCB3b24ndCBiZSBhdHRlbXB0ZWQuIFxuXG4jIyMgWW91ciBcIlhSYXlcIiBhbmQgXCJFbmRvc2NvcGVcIiBpbnRvIFlvdXIgUHJvZ3JhbVxuXG5UaGluayBvZiB0aGlzIHByb21wdCBhcyBhIHdheSB0byBnZXQgc3BlY2lmaWMgZGlhZ25vc3RpY3MgaW5mb3JtYXRpb24gYWJvdXQgeW91ciAqKipydW5uaW5nKioqIHByb2dyYW0uICBJdCBjYW5ub3QgYmUgc3RyZXNzZWQgZW5vdWdoIHRoYXQgdGhlIHBvd2VyIGFuZCB0aGUgdXNlZnVsbG5lc3Mgb2YgdGhpcyB0b29sIGlzIGluIGl0cyBhYmlsaXR5IHRvIGRpYWdub3NlIGEgcnVubmluZyBwcm9ncmFtLCBhZnRlciB5b3UndmUgYWxyZWFkeSBzdGFydGVkIGl0IHJ1bm5pbmcuIFxuXG4jIyMgRXhlY3V0ZSBDb2RlIFxuXG5JbiBhZGRpdGlvbiB0byBkaXNwbGF5aW5nIGluZm9ybWF0aW9uLCBnZXR0aW5nIHBhdGhzIHRvIHBhY2thZ2VzLCBmaW5kaW5nIHZlcnNpb24gaW5mb3JtYXRpb24sIHlvdSBjYW4gZXhlY3V0ZSBjb2RlIGZyb20gdGhlIFB5U2ltcGxlR1VJIERlYnVnZ2VyJ3MgYFJFUEwgPj4+YCBwcm9tcHQuICBZb3UgY2FuIHR5cGUgaW4gYW55IGV4cHJlc3Npb24gYXMgd2VsbCBhcyBhbnkgKipleGVjdXRhYmxlIHN0YXRlbWVudCoqLlxuXG5Gb3IgZXhhbXBsZSwgd2FudCB0byBzZWUgd2hhdCBgUG9wdXBFcnJvcmAgbG9va3MgbGlrZSB3aGlsZSB5b3UncmUgcnVubmluZyB5b3VyIHByb2dyYW0uICBGcm9tIHRoZSBSRVBMIHByb21wdCwgdHlwZTpcbmBzZy5Qb3B1cEVycm9yKCdUaGlzIGlzIGFuIGVycm9yIHBvcHVwJylgXG5cblRoZSByZXN1bHQgaXMgdGhhdCB5b3UgYXJlIHNob3duIGEgcG9wdXAgd2luZG93IHdpdGggdGhlIHRleHQgeW91IHN1cHBsaWVkLlxuXG4jIyMgS05PVyBBbnN3ZXJzIHRvIFF1ZXN0aW9ucyBBYm91dCBZb3VyIFByb2dyYW1cblxuVXNpbmcgdGhpcyBydW50aW1lIHRvb2wsIHlvdSBjYW4gYmUgY29uZmlkZW50IGluIHRoZSBkYXRhIHlvdSBjb2xsZWN0LiAgUmlnaHQ/ICBcblxuKioqVGhlcmUncyBubyBiZXR0ZXIgd2F5IHRvIGZpbmQgd2hhdCB2ZXJzaW9uIG9mIGEgcGFja2FnZSB0aGF0IHlvdXIgcHJvZ3JhbSBpcyB1c2luZyB0aGFuIHRvIGFzayB5b3VyIHByb2dyYW0uKioqICBUaGlzIGlzIHNvIHRydWUuICBUaGluayBhYm91dCBpdC4gIFJhdGhlciB0aGFuIGdvIGludG8gUHlDaGFybSwgbG9vayBhdCB5b3VyIHByb2plY3QncyBcIlZpcnR1YWwgRW52aXJvbm1lbnRcIiwgZm9sbG93IHNvbWUgcGF0aCB0byBnZXQgdG8gYSB3aW5kb3cgdGhhdCBsaXN0cyBwYWNrYWdlcyBpbnN0YWxsZWQgZm9yIHRoYXQgcHJvamVjdCwgZ2V0IHRoZSB2ZXJzdGlvbiBhbmQgeW91cidyZSBkb25lLCByaWdodD8gIFdlbGwsIG1heWJlLiAgQnV0IGFyZSB5b3UgQ0VSVEFJTiB5b3VyIHByb2dyYW0gaXMgdXNpbmcgVEhBVCB2ZXJzaW9uIG9mIHRoZSBwYWNrYWdlIGluIHF1ZXN0aW9uP1xuXG5TTyBNVUNIIHRpbWUgaGFzIGJlZW4gd2FzdGVkIGluIHRoZSBwYXN0ICB3aGVuIHBlb3BsZSBLTkVXLCBmb3Igc3VyZSwgd2hhdCB2ZXJzaW9uIHRoZXkgd2VyZSBydW5uaW5nLiBPciwgdGhleSBoYWQgTk8gQ0xVRSB3aGF0IHZlcnNpb24sIG9yIG5vIGNsdWUgdG8gZmluZCBvdXQuICBUaGVyZSdzIG5vdGhpbmcgd3Jvbmcgd2l0aCBub3Qga25vd2luZyBob3cgdG8gZG8gc29tZXRoaW5nLiAgV2UgQUxMIHN0YXJ0IHRoZXJlLiAgR2VlZXouLlxuXG5BIHJlYWwgd29ybGQgZXhhbXBsZS4uLi4uXG5cbiMjIEhvdyBUbyBVc2UgdGhlIERlYnVnZ2VyIHRvIEZpbmQgVGhlIFZlcnNpb24gTnVtYmVyIG9mIGEgUGFja2FnZVxuXG5MZXQncyBwdWxsIHRvZ2V0aGVyIGV2ZXJ5dGhpbmcgd2UndmUgbGVhcm5lZCB0byBub3cgYW5kIHVzZSB0aGUgZGVidWdnZXIgdG8gc29sdmUgYSBwcm9ibGVtIHRoYXQgaGFwcGVucyBvZnRlbiBhbmQgc29tZXRpbWVzIGl0J3Mgbm90IGF0IGFsbCBvYnZpb3VzIGhvdyB0byBmaW5kIHRoZSBhbnN3ZXIuXG5cbldlJ3JlIHVzaW5nICoqKk1hdHBsb3RsaWIqKiogYW5kIHdhbnQgdG8gZmluZCB0aGUgXCJWZXJzaW9uXCIuXG5cbkZvciB0aGlzIGV4YW1wbGUsIHRoZSBsaXR0bGUgMTItbGluZSBwcm9ncmFtIGluIHRoZSBzZWN0aW9uIFwiQSBTYW1wbGUgUHJvZ3JhbSBGb3IgVXMgVG8gVXNlXCIgaXMgYmVpbmcgdXNlZC5cblxuVGhhdCBwcm9ncmFtIGRvZXMgbm90IGltcG9ydCBgbWF0cGxvdGxpYmAuICBXZSBoYXZlIGEgY291cGxlIG9mIGNob2ljZXMsIHdlIGNhbiBjaGFuZ2UgdGhlIGNvZGUsIHdlIGNhbiBjYW4gaW1wb3J0IHRoZSBwYWNrYWdlIGZyb20gdGhlIGRlYnVnZ2VyLiAgTGV0J3MgdXNlIHRoZSBkZWJnZ2VyLlxuXG5QdWxsIHVwIHRoZSBNYWluIERlYnVnZ2VyIFdpbmRvdyBieSBwcmVzc2luZyBgQ09OVFJPTCtCUkVBS2Aga2V5cy4gIFRoZW4gY2xpY2sgdGhlIFwiUkVQTCAqIFdhdGNoZXNcIiB0YWIuICBBdCB0aGUgYD4+PmAgcHJvbXB0IHdlJ2xsIGZpcnN0IGltcG9ydCB0aGUgcGFja2FnZSBieSB0eXBpbmc6XG5gaW1wb3J0IG1hdHBsb3RsaWIgYXMgbWBcblxuVGhlIHJlc3VsdCByZXR1cm5lZCBmcm9tIFB5dGhvbiBjYWxscyB0aGF0IGRvbid0IHJldHVybiBhbnl0aGluZyBpcyB0aGUgdmFsdWUgTm9uZS4gIFlvdSB3aWxsIHNlZSB0aGUgY29tbWFuZCB5b3UgZW50ZXJlZCBpbiB0aGUgb3V0cHV0IGFyZWEgZm9sbG93ZWQgYnkgXCJOb25lXCIsIGluZGljYXRpbmcgc3VjY2Vzcy5cblxuZmluYWxseSwgdHlwZTpcbmBtLl9fdmVyc2lvbl9fYFxuXG5UaGUgZW50aXJlIHNldCBvZiBvcGVyYXRpb25zIGlzIHNob3duIGluIHRoaXMgd2luZG93OlxuXG4hW1NOQUctMDQ0OF0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vMTM2OTYxOTMvNjI3OTczOTItYTBiNTgyMDAtYmFhOS0xMWU5LTk3ZjQtOWVmNzRjYmI4NmY3LmpwZylcblxuQnkgY29udmVudGlvbiB5b3UnbGwgZmluZCBtYW55IG1vZHVsZXMgaGF2ZSBhIHZhcmlhYmxlIGBfX3ZlcnNpb25fX2AgdGhhdCBoYXMgdGhlIHBhY2thZ2UncyB2ZXJzaW9uIG51bWJlci4gIFB5U2ltcGxlR1VJIGhhcyBvbmUuICBBcyB5b3UgY2FuIHNlZSBtYXRwbG90bGliIGhhcyBvbmUuICBUaGUgYHJlcXVlc3RzYCBtb2R1bGUgaGFzIHRoaXMgdmFyaWFibGUuXG5cbkZvciBtYXhpbXVtIGNvbXBhdGliaWxpdHksIFB5U2ltcGxlR1VJIG5vdCBvbmx5IHVzZXMgYF9fdmVyc2lvbl9fYCwgYnV0IGFsc28gaGFzIHRoZSB2ZXJzaW9uIGNvbnRhaW5lZCBpbiBhbm90aGVyIHZhcmlhYmxlIGB2ZXJzaW9uYCB3aGljaCBoYXMgdGhlIHZlcnNpb24gbnVtYmVyIGJlY2F1c2UgaW4gc29tZSBzaXR1YXRpb25zIHRoZSBgX192ZXJzaW9uX19gIGlzIG5vdCBhdmFpbGFibGUgYnV0IHRoZSBgdmVyc2lvbmAgdmFyaWFibGUgaXMgYXZhaWFibGUuXG5cbioqSXQgaXMgcmVjb21tZW5kZWQgdGhhdCB5b3UgdXNlIHRoZSB2YXJpYWJsZSBgdmVyc2lvbmAgdG8gZ2V0IHRoZSBQeVNpbXBsZUdVSSB2ZXJzaW9uKiogYXMgaXQncyBzbyBmYXIgYmVlbiB0aGUgbW9zdCBzdWNjZXNzZnVsIG1ldGhvZC5cblxudGtpbnRlciwgaG93ZXZlciBkb2VzIE5PVC4uLi4gb2YgY291cnNlLi4uLiBmb2xsb3cgdGhpcyBjb252ZW50aW9uLiAgTm8sIHRvIGdldCB0aGUgdGtpbnRlciB2ZXJzaW9uLCB5b3UgbmVlZCB0byBsb29rIGF0IHRoZSB2YXJpYWJsZTpcbmBUa1ZlcnNpb25gXG5cbkhlcmUncyB0aGUgb3V0cHV0IGZyb20gdGhlIFJFUEwgaW4gdGhlIGRlYnVnZ2VyIHNob3dpbmcgdGhlIHRraW50ZXIgdmVyc2lvbjpcblxuYGBgXG4+Pj4gaW1wb3J0IHRraW50ZXIgYXMgdFxuTm9uZVxuPj4+IHQuVGtWZXJzaW9uXG44LjZcbj4+PiB0Ll9fdmVyc2lvbl9fXG5FeGNlcHRpb24gbW9kdWxlICd0a2ludGVyJyBoYXMgbm8gYXR0cmlidXRlICdfX3ZlcnNpb25fXydcbmBgYFxuLS0tXG5cbiMgRXh0ZW5kaW5nIFB5U2ltcGxlR1VJXG5cblB5U2ltcGxlR1VJIGRvZXNuJ3QgYW5kIGNhbid0IHByb3ZpZGUgZXZlcnkgc2luZ2xlIHNldHRpbmcgYXZhaWxhYmxlIGluIHRoZSB1bmRlcmx5aW5nIEdVSSBmcmFtZXdvcmsuICBOb3QgYWxsIHRraW50ZXIgb3B0aW9ucyBhcmUgYXZhaWxhYmxlIGZvciBhIGBUZXh0YCBFbGVtZW50LiAgU2FtZSB3aXRoIFB5U2ltcGxlR1VJUXQgYW5kIHRoZSBvdGhlciBwb3J0cy4gIFxuXG5UaGVyZSBhcmUgYSBmZXcgb2YgcmVhc29ucyBmb3IgdGhpcy5cblxuMS4gVGltZSAmIHJlc291cmNlIGxpbWl0cyAtIFRoZSBzaXplIG9mIHRoZSBQeVNpbXBsZUdVSSBkZXZlbG9wbWVudCB0ZWFtIGlzIGV4dHJlbWVseSBzbWFsbFxuMi4gUHlTaW1wbGVHVUkgcHJvdmlkZXMgYSBcIlVuaWZpZWQgQVBJXCIuICBUaGlzIG1lYW5zIHRoZSBjb2RlIGlzLCBpbiB0aGVvcnksIHBvcnRhYmxlIGFjcm9zcyBhbGwgb2YgdGhlIFB5U2ltcGxlR1VJIHBvcnRzIHdpdGhvdXQgY2hhbmluZyB0aGUgdXNlcidzIGNvZGUgKGV4Y2VwdCBmb3IgdGhlIGltcG9ydClcbjMuIFB5U2ltcGxlR1VJIGlzIG1lYW50LCBieSBkZXNpZ24sIHRvIGJlIHNpbXBsZSBhbmQgY292ZXIgODAlIG9mIHRoZSBHVUkgcHJvYmxlbXMuXG5cbkhvd2V2ZXIsIFB5U2ltcGxlR1VJIHByb2dyYW1zIGFyZSAqKipub3QqKiogZGVhZCBlbmRzISEgIFdyaXRpbmcgUHlTaW1wbGVHVUkgY29kZSBhbmQgdGhlbiBnZXR0aW5nIHRvIGEgcG9pbnQgd2hlcmUgeW91IHJlYWxseSByZWFsbHkgZmVlbCBsaWtlIHlvdSBuZWVkIHRvIGV4dGVuZCB0aGUgTGlzdGJveCB0byBpbmNsdWRlIHRoZSBhYmlsaXR5IHRvIGNoYW5nZSB0aGUgXCJTZWxlY3RlZFwiIGNvbG9yLiAgTWF5YmUgdGhhdCdzIHN1cGVyLWNyaXRpY2FsIHRvIHlvdXIgcHJvamVjdC4gIEFuZCBtYXliZSB5b3UgZmluZCBvdXQgbGF0ZSB0aGF0IHRoZSBiYXNlIFB5U2ltcGxlR1VJIGNvZGUgZG9lc24ndCBleHBvc2UgdGhhdCB0a2ludGVyIGNhcGFiaWxpdHkuICBGZWFyIG5vdCEgIFRoZSByb2FkIGRvZXMgY29udGludWUhIVxuXG4jIyBXaWRnZXQgQWNjZXNzXG5cbk1vc3Qgb2YgdGhlIHVzZXIgZXh0ZW5zaW9ucyAvIGVuaGFuY2VtZW50cyBhcmUgYXQgdGhlIFwiRWxlbWVudFwiIGxldmVsLiAgWW91IHdhbnQgc29tZSBFbGVtZW50IHRvIGRvIGEgdHJpY2sgdGhhdCB5b3UgY2Fubm90IGRvIHVzaW5nIHRoZSBleGlzdGluZyBQeVNpbXBsZUdVSSBBUElzLiAgSXQncyBqdXN0IG5vdCBwb3NzaWJsZS4gIFdoYXQgdG8gZG8/ICBcblxuV2hhdCB5b3UgbmVlZCBpcyBhY2Nlc3MgdG8gdGhlIHVuZGVybHlpbmcgR1VJIGZyYW1ld29yaydzIFwiV2lkZ2V0XCIuICBUaGUgZ29vZCBuZXdzIGlzIHRoYXQgeW91IEhBVkUgdGhhdCBhY2Nlc3MgcmVhZHkgYW5kIHdhaXRpbmcgZm9yIHlvdSwgZm9yIGFsbCBvZiB0aGUgcG9ydHMgb2YgUHlTaW1wbGVHVUksIG5vdCBqdXN0IHRoZSB0a2ludGVyIG9uZS5cblxuIyMjIGBFbGVtZW50LldpZGdldGAgaXMgVGhlIEdVSSBXaWRnZXRcblxuVGhlIGNsYXNzIHZhcmlhYmxlIGBXaWRnZXRgIGNvbnRhaW5zIHRoZSB0a2ludGVyLCBRdCwgV3hQeXRob24sIG9yIFJlbWkgd2lkZ2V0LiAgV2l0aCB0aGF0IHZhcmlhYmxlIHlvdSBjYW4gbW9kaWZ5IHRoYXQgd2lkZ2V0IGRpcmVjdGx5LiAgXG5cbioqKllvdSBtdXN0IGZpcnN0IGBSZWFkYCBvciBgRmluYWxpemVgIHRoZSB3aW5kb3cgYmVmb3JlIGFjY2Vzc2luZyB0aGUgYFdpZGdldGAgY2xhc3MgdmFyaWFibGUqKipcblxuVGhlIHJlYXNvbiBmb3IgdGhlIEZpbmFsaXplIHJlcXVpcmVtZW50IGlzIHRoYXQgdW50aWwgYSBXaW5kb3cgaXMgUmVhZCBvciBpcyBGaW5hbGl6ZWQgaXQgaXMgbm90IGFjdHVhbGx5IGNyZWF0ZWQgYW5kIHBvcHVsYXRlZCB3aXRoIEdVSSBXaWRnZXRzLiAgVGhlIEdVSSBXaWRnZXRzIGFyZSBjcmVhdGVkIHdoZW4geW91IGRvIHRoZXNlIDIgb3BlcmF0aW9ucy5cblxuU2lkZSBub3RlIC0gWW91IGNhbiBzdG9wIHVzaW5nIHRoZSBgLkZpbmFsaXplKClgIGNhbGwgYWRkZWQgb250byB5b3VyIHdpbmRvdyBjcmVhdGlvbiBhbmQgaW5zdGVhZCB1c2UgdGhlIGBmaW5hbGl6ZWAgcGFyYW1ldGVyIGluIHRoZSBgV2luZG93YCBjYWxsLlxuXG5PTEQgV0FZOlxuYGBgcHl0aG9uXG53aW5kb3cgPSBzZy5XaW5kb3coJ1dpbmRvdyBUaXRsZScsIGxheW91dCkuRmluYWxpemUoKVxuXG5gYGBcblxuVEhFIE5FVyBXQVk6XG5gYGBweXRob25cbndpbmRvdyA9IHNnLldpbmRvdygnV2luZG93IFRpdGxlJywgbGF5b3V0LCBmaW5hbGl6ZT1UcnVlKVxuXG5gYGBcblxuSXQncyBjbGVhbmVyIGFuZCBsZXNzIGNvbmZ1c2luZyBmb3IgYmVnaW5uZXJzIHdobyBhcmVuJ3QgbmVjZXNzYXJpbHkgdHJhaW5lZCBpbiBob3cgY2hhaW5pbmcgY2FsbHMgd29yay4gIFB5KipTaW1wbGUqKkdVSS5cblxuIyMjIEV4YW1wbGUgVXNlIG9mIGBFbGVtZW50LldpZGdldGBcblxuU28gZmFyIHRoZXJlIGhhdmUgYmVlbiAyIHVzZXMgb2YgdGhpcyBjYXBhYmlsaXR5LiAgT25lIGFscmVhZHkgbWVudGlvbmVkIGlzIGFkZGluZyBhIG5ldyBjYXBhYmlsaXR5LiAgVGhlIG90aGVyIHdheSBpdCdzIGJlZW4gdXNlZCBoYXMgYmVlbiB0byBmaXggYSBidWcgb3IgbWFrZSBhIHdvcmthcm91bmQgZm9yIGEgcXVpcmt5IGJlaGF2aW9yLlxuXG5BIHJlY2VudCBJc3N1ZSBwb3N0ZWQgd2FzIHRoYXQgZm9jdXMgd2FzIGFsd2F5cyBiZWluZyBzZXQgb24gYSBidXR0b24gaW4gYSB0YWIgd2hlbiB5b3Ugc3dpdGNoIHRhYnMgaW4gdGtpbnRlci4gIFRoZSB1c2VyIGRpZG4ndCB3YW50IHRoaXMgdG8gaGFwcGVuIGFzIGl0IHdhcyBwdXR0aW5nIGFuIHVnbHkgYmxhY2sgbGluZSBhcm91bmQgdGhlaXIgbmljZWx5IG1hZGUgZ3JhcGhpY2FsIGJ1dHRvbi5cblxuVGhlcmUgaXMgbm8gY3VycmVudCB3YXkgaW4gUHlTaW1wbGVHVUkgdG8gXCJkaXNhYmxlIGZvY3VzXCIgb24gYW4gRWxlbWVudC4gIFRoYXQncyBlc3NlbnRpYWxseSB3aGF0IHdhcyBuZWVkZWQsIHRoZSBhYmlsaXR5IHRvIHRlbGwgdGtpbnRlciB0aGF0IHRoaXMgd2lkZ2V0IHNob3VsZCBuZXZlciBnZXQgZm9jdXMuICBcblxuVGhlcmUgaXMgYSB3YXkgdG8gdGVsbCB0a2ludGVyIHRoYXQgYSB3aWRnZXQgc2hvdWxkIG5vdCBnZXQgZm9jdXMuICBUaGUgZG93bnNpZGUgaXMgdGhhdCBpZiB5b3UgdXNlIHlvdXIgdGFiIGtleSB0byBuYXZpZ2F0ZSwgdGhhdCBlbGVtZW50IHdpbGwgbmV2ZXIgZ2V0IGZvY3VzLiAgU28sIGl0J3Mgbm90IG9ubHkgYmxvY2tpbmcgZm9jdXMgZm9yIHRoaXMgYXV0b21hdGljIHByb2JsZW0sIGJ1dCBibG9ja2luZyBpdCBmb3IgYWxsIHVzZXMuICBPZiBjb3Vyc2UgeW91IGNhbiBzdGlsbCBjbGljayBvbiB0aGUgYnV0dG9uLlxuXG5UaGUgd2F5IHRocm91Z2ggZm9yIHRoaXMgdXNlciB3YXMgdG8gbW9kaWZ5IHRoZSB0a2ludGVyIHdpZGdldCBkaXJlY3RseSBhbmQgdGVsbCBpdCBub3QgdG8gZ2V0IGZvY3VzLiAgVGhpcyB3YXMgZG9uZSBpbiBhIHNpbmdsZSBsaW5lIG9mIGNvZGU6XG5cbmBgYHB5dGhvblxud2luZG93W2J1dHRvbl9rZXldLldpZGdldC5jb25maWcodGFrZWZvY3VzPTApXG5gYGBcblxuVGhlIGFic29sdXRlIGJlYXV0eSB0byB0aGlzIHNvbHV0aW9uIGlzIHRoYXQgdGtpbnRlciBkb2VzIE5PVCBuZWVkIHRvIGJlIGltcG9ydGVkIGludG8gdGhlIHVzZXIncyBwcm9ncmFtIGZvciB0aGlzIHN0YXRlbWVudCB0byBydW4uICBQeXRob24gYWxyZWFkeSBrbm93IHdoYXQga2luZCBvZiBvYmplY3QgYC5XaWRnZXRgIGlzIGFuZCBjYW4gdGh1cyBzaG93IHlvdSB0aGUgdmFyaW91cyBtZXRob2RzIGFuZCBjbGFzcyB2YXJpYWJsZXMgZm9yIHRoYXQgb2JqZWN0LiAgTW9zdCBhbGwgdGtpbnRlciBvcHRpb25zIGFyZSBzdHJpbmdzIHNvIHlvdSBkb24ndCBuZWVkIHRvIGltcG9ydCB0a2ludGVyIHRvIGdldCBhbnkgZW51bXMuXG5cbiMjIyBGaW5kaW5nIFlvdXIgRWxlbWVudCdzIFdpZGdldCBUeXBlXG5cbk9mIGNvdXJzZSwgaW4gb3JkZXIgdG8gY2FsbCB0aGUgbWV0aG9kcyBvciBhY2Nlc3MgdGhlIG9iamVjdCdzIGNsYXNzIHZhcmlhYmxlcywgeW91IG5lZWQgdG8ga25vdyB0aGUgdHlwZSBvZiB0aGUgdW5kZXJseWluZyBXaWRnZXQgYmVpbmcgdXNlZC4gIFRoaXMgZG9jdW1lbnQgY291bGQgbGlzdCB0aGVtIGFsbCwgYnV0IHRoZSBkb3duc2lkZSBpcyB0aGUgd2lkZ2V0IGNvdWxkIGNoYW5nZSB0eXBlcyAobm90IGEgZ29vZCB0aGluZyBmb3IgcGVvcGxlIHVzaW5nIHRoZSAuV2lkZ2V0IGFscmVhZHkhKS4gIEl0IGFsc28gc2F2ZXMgc3BhY2UgYW5kIHRpbWUgaW4gZ2V0dGluZyB0aGlzIGRvY3VtZW50YXRpb24gcHVibGlzaGVkIGFuZCBhdmFpbGFibGUgdG8geW91LlxuXG5TbywgaGVyZSdzIHRoZSB3YXkgdG8gZ2V0IHlvdXIgZWxlbWVudCdzIHdpZGdldCdzIHR5cGU6XG5cbmBgYHB5dGhvblxuICAgIHByaW50KHR5cGUod2luZG93W3lvdXJfZWxlbWVudF9rZXldLldpZGdldCkpXG5gYGBcblxuSW4gdGhlIGNhc2Ugb2YgdGhlIGJ1dHRvbiBleGFtcGxlIGFib3ZlLCB3aGF0IGlzIHByaW50ZWQgaXM6XG5cbmA8Y2xhc3MgJ3RraW50ZXIuQnV0dG9uJz5gXG5cbkkgZG9uJ3QgdGhpbmsgdGhhdCBjb3VsZCBiZSBhbnkgY2xlYXJlci4gIFlvdXIgam9iIGF0IHRoaXMgcG9pbnQgaXMgdG8gbG9vayBhdCB0aGUgdGtpbnRlciBkb2N1bWVudGF0aW9uIHRvIHNlZSB3aGF0IHRoZSBtZXRob2RzIGFyZSBmb3IgdGhlIHRraW50ZXIgYEJ1dHRvbmAgd2lkZ2V0LlxuXG4jIyBXaW5kb3cgTGV2ZWwgQWNjZXNzXG5cbkZvciB0aGlzIG9uZSB5b3UnbGwgbmVlZCBzb21lIHNwZWNpZmljIHZhcmlhYmxlcyBmb3IgdGhlIHRpbWUgYmVpbmcgYXMgdGhlcmUgaXMgbm8gYFdpbmRvd2AgY2xhc3MgdmFyaWFibGUgdGhhdCBob2xkcyB0aGUgd2luZG93J3MgcmVwcmVzZW50YXRpb24gaW4gdGhlIEdVSSBsaWJyYXJ5IGJlaW5nIHVzZWQuXG5cbkZvciB0a2ludGVyLCBhdCB0aGUgbW9tZW50LCB0aGUgd2luZG93J3Mgcm9vdCBvYmplY3QgaXMgdGhpczpcblxuYGBgcHl0aG9uXG5zZy5XaW5kb3cuVEtyb290XG5gYGBcblxuVGhlIHR5cGUgd2lsbCB2YXJ5IGluIFB5U2ltcGxlR1VJLiAgSXQgd2lsbCBlaXRoZXIgYmU6XG5gdGtpbnRlci5UaygpYFxuYHRraW50ZXIuVG9wbGV2ZWwoKWBcblxuRWl0aGVyIHdheSB5b3UnbGwgYWNjZXNzIGl0IHVzaW5nIHRoZSBzYW1lIGBXaW5kb3dgIHZhcmlhYmxlIGBzZy5XaW5kb3cuVEtyb290YFxuXG5XYXRjaCB0aGlzIHNwYWNlIGluIHRoZSBmdXR1cmUgZm9yIHRoZSBtb3JlIHN0YW5kYXJkaXplZCB2YXJpYWJsZSBuYW1lIGZvciB0aGlzIG9iamVjdC4gIEl0IG1heSBiZSBzb21ldGhpbmcgbGlrZSBgV2luZG93LldpZGdldGAgYXMgdGhlIEVsZW1lbnRzIHVzZSBvciBzb21ldGhpbmcgbGlrZSBgV2luZG93LkdVSVdpbmRvd2AuXG5cbi0tLVxuXG4tLS0tLS0tLS0tLS0tLS0tLS1cblxuIyBFTEVNRU5UIEFORCBGVU5DVElPTiBDQUxMIFJFRkVSRU5DRVxuXG5UaGlzIHJlZmVyZW5jZSBzZWN0aW9uIHdhcyBwcmV2aW91c2x5IGludGVybWl4ZWQgd2l0aCB0aGUgdGV4dCBleHBsYW5hdGlvbiwgZGlhZ3JhbXMsIGNvZGUgc2FtcGxlcywgZXRjLiAgVGhhdCB3YXMgT0sgZWFybHkgb24sIGJ1dCBub3cgdGhhdCB0aGVyZSBhcmUgbW9yZSBFbGVtZW50cyBhbmQgbW9yZSBtZXRob2RzIGFyZSBiZWluZyBhZGRlZCBvbiBhIGZlcXVlbnQgYmFzaXMsIGl0IG1lYW5zIHRoYXQga2VlcGluZyB0aGlzIGxpc3QgdXBkYXRlZCBpcyBhIGRpZmZpY3VsdCBjaG9yZSBpZiBpdCBoYXMgYSBsb3Qgb2YgdGV4dCBhbGwgYXJvdW5kIGl0LlxuXG5Ib3BpbmcgdGhpcyBpcyBhIGNoYW5nZSBmb3IgdGhlIGJldHRlciBhbmQgdGhhdCB1c2VycyB3aWxsIGJlIGFibGUgdG8gZmluZCB0aGUgaW5mb3JtYXRpb24gdGhleSBzZWVrIHF1aWNrZXIuXG5cbk5PVEUgdGhhdCB0aGlzIGRvY3VtZW50YXRpdW9wbiBzZWN0aW9uIGlzIGNyZWF0ZWQgdXNpbmcgdGhlICoqKkdpdEhVQiByZWxlYXNlZCBQeVNpbXBsZUdVSS5weSBmaWxlKioqLiAgU29tZSBvZiB0aGUgY2FsbHMgbWF5IG5vdCBiZSBhdmFpbGFibGUgdG8geW91IG9yIHlvdXIgcG9ydCAoUXQsIFd4LCBXZWIpLiAgQW5kIHNvbWUgb2YgdGhlIHBhcmFtZXRlcnMgbWF5IGJlIGRpZmZlcmVudC4gIFdlJ3JlIHdvcmtpbmcgb24gYWRkaW5nIGRvY3N0cmluZ3MgdG8gYWxsIHRoZSBwb3J0cyB3aGljaCB3aWxsIGVuYWJsZSB0aGlzIGtpbmQgb2YgZG9jdW1lbnQgdG8gYmUgYXZhaWxhYmxlIGZvciBlYWNoIHBvcnQuXG5cbldpdGhvdXQgZnVydGhlciBkZWxheS4uLiBoZXJlIGFyZSBhbGwgb2YgdGhlIEVsZW1lbnRzXG5cbiMjIyBCdXR0b24gRWxlbWVudFxuXG4gICAgQnV0dG9uIEVsZW1lbnQgLSBEZWZpbmVzIGFsbCBwb3NzaWJsZSBidXR0b25zLiBUaGUgc2hvcnRjdXRzIHN1Y2ggYXMgU3VibWl0LCBGaWxlQnJvd3NlLCAuLi4gZWFjaCBjcmVhdGUgYSBCdXR0b25cblxuYGBgXG5CdXR0b24oYnV0dG9uX3RleHQ9XCJcIixcbiAgICBidXR0b25fdHlwZT03LFxuICAgIHRhcmdldD0oTm9uZSwgTm9uZSksXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGZpbGVfdHlwZXM9KCgnQUxMIEZpbGVzJywgJyouKicpLCksXG4gICAgaW5pdGlhbF9mb2xkZXI9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX3NpemU9KE5vbmUsIE5vbmUpLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8KHN0cikgVGV4dCB0byBiZSBkaXNwbGF5ZWQgb24gdGhlIGJ1dHRvbnxcbnxidXR0b25fdHlwZXwoaW50KSBZb3Ugc2hvdWxkIE5PVCBiZSBzZXR0aW5nIHRoaXMgZGlyZWN0bHkuIE9OTFkgdGhlIHNob3J0Y3V0IGZ1bmN0aW9ucyBzZXQgdGhpc3xcbnx0YXJnZXR8VW5pb25bc3RyLCBUdXBsZVtpbnQsIGludF1dIGtleSBvciAocm93LGNvbCkgdGFyZ2V0IGZvciB0aGUgYnV0dG9uLiBOb3RlIHRoYXQgLTEgZm9yIGNvbHVtbiBtZWFucyAxIGVsZW1lbnQgdG8gdGhlIGxlZnQgb2YgdGhpcyBvbmUuIFRoZSBjb25zdGFudCBUaGlzUm93IGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhlIGN1cnJlbnQgcm93LiBUaGUgQnV0dG9uIGl0c2VsZiBpcyBhIHZhbGlkIHRhcmdldCBmb3Igc29tZSB0eXBlcyBvZiBidXR0b258XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58ZmlsZV90eXBlc3xUdXBsZVtUdXBsZVtzdHIsIHN0cl0sIC4uLl0gdGhlIGZpbGV0eXBlcyB0aGF0IHdpbGwgYmUgdXNlZCB0byBtYXRjaCBmaWxlcy4gVG8gaW5kaWNhdGUgYWxsIGZpbGVzOiAoKFwiQUxMIEZpbGVzXCIsIFwiKi4qXCIpLCkuIE5vdGUgLSBOT1QgU1VQUE9SVEVEIE9OIE1BQ3xcbnxpbml0aWFsX2ZvbGRlcnwoc3RyKSBzdGFydGluZyBwYXRoIGZvciBmb2xkZXJzIGFuZCBmaWxlc3xcbnxkaXNhYmxlZHwoYm9vbCkgSWYgVHJ1ZSBidXR0b24gd2lsbCBiZSBjcmVhdGVkIGRpc2FibGVkfFxufGNsaWNrX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIElmIHRoaXMgYnV0dG9uIGlzIGEgdGFyZ2V0LCBzaG91bGQgaXQgZ2VuZXJhdGUgYW4gZXZlbnQgd2hlbiBmaWxsZWQgaW58XG58aW1hZ2VfZmlsZW5hbWV8KHN0cikgaW1hZ2UgZmlsZW5hbWUgaWYgdGhlcmUgaXMgYSBidXR0b24gaW1hZ2UuIEdJRnMgYW5kIFBOR3Mgb25seS58XG58aW1hZ2VfZGF0YXxVbmlvbltieXRlcywgc3RyXSBSYXcgb3IgQmFzZTY0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBpbWFnZSB0byBwdXQgb24gYnV0dG9uLiBDaG9vc2UgZWl0aGVyIGZpbGVuYW1lIG9yIGRhdGF8XG58aW1hZ2Vfc2l6ZXxUdXBsZVtpbnQsIGludF0gU2l6ZSBvZiB0aGUgaW1hZ2UgaW4gcGl4ZWxzICh3aWR0aCwgaGVpZ2h0KXxcbnxpbWFnZV9zdWJzYW1wbGV8KGludCkgYW1vdW50IHRvIHJlZHVjZSB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2UuIERpdmlkZXMgdGhlIHNpemUgYnkgdGhpcyBudW1iZXIuIDI9MS8yLCAzPTEvMywgND0xLzQsIGV0Y3xcbnxib3JkZXJfd2lkdGh8KGludCkgd2lkdGggb2YgYm9yZGVyIGFyb3VuZCBidXR0b24gaW4gcGl4ZWxzfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3aWR0aCwgaGVpZ2h0KSBvZiB0aGUgYnV0dG9uIGluIGNoYXJhY3RlcnMgd2lkZSwgcm93cyBoaWdofFxufGF1dG9fc2l6ZV9idXR0b258KGJvb2wpIGlmIFRydWUgdGhlIGJ1dHRvbiBzaXplIGlzIHNpemVkIHRvIGZpdCB0aGUgdGV4dHxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdICh0ZXh0IGNvbG9yLCBiYWNrZ3JvdW5kIGNvbG9yKSBvZiBidXR0b24uIEVhc3kgdG8gcmVtZW1iZXIgd2hpY2ggaXMgd2hpY2ggaWYgeW91IHNheSBcIk9OXCIgYmV0d2VlbiBjb2xvcnMuIFwicmVkXCIgb24gXCJncmVlblwiLiBOb3RlIC0gRG9lcyBub3QgYWx3YXlzIHdvcmsgb24gTWFjc3xcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChib29sKSBJZiBUcnVlIHRoZSByZXR1cm4ga2V5IHdpbGwgY2F1c2UgdGhpcyBidXR0b24gdG8gYmUgcHJlc3NlZHxcbnxmb2N1c3woYm9vbCkgaWYgVHJ1ZSwgaW5pdGlhbCBmb2N1cyB3aWxsIGJlIHB1dCBvbiB0aGlzIGJ1dHRvbnxcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxufGtleXwoQW55KSBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50IHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBDbGlja1xuXG5HZW5lcmF0ZXMgYSBjbGljayBvZiB0aGUgYnV0dG9uIGFzIGlmIHRoZSB1c2VyIGNsaWNrZWQgdGhlIGJ1dHRvblxuICAgICAgICBDYWxscyB0aGUgdGtpbnRlciBpbnZva2UgbWV0aG9kIGZvciB0aGUgYnV0dG9uXG5cbmBgYHB5dGhvblxuQ2xpY2soKVxuYGBgXG5cbiMjIyMgR2V0VGV4dFxuXG5SZXR1cm5zIHRoZSBjdXJyZW50IHRleHQgc2hvd24gb24gYSBidXR0b25cblxuYEdldFRleHQoKWBcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCAqKnJldHVybioqIHwgKHN0cikgVGhlIHRleHQgY3VycmVudGx5IGRpc3BsYXllZCBvbiB0aGUgYnV0dG9uIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgQnV0dG9uIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHRleHQ9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9KE5vbmUsIE5vbmUpLFxuICAgIGRpc2FibGVkPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGltYWdlX3NpemU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGV4dHwoc3RyKSBzZXRzIGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxUdXBsZVtzdHIsIHN0cl0gKHRleHQgY29sb3IsIGJhY2tncm91bmQgY29sb3IpIG9mIGJ1dHRvbi4gRWFzeSB0byByZW1lbWJlciB3aGljaCBpcyB3aGljaCBpZiB5b3Ugc2F5IFwiT05cIiBiZXR3ZWVuIGNvbG9ycy4gXCJyZWRcIiBvbiBcImdyZWVuXCJ8XG58ZGlzYWJsZWR8KGJvb2wpIGRpc2FibGUgb3IgZW5hYmxlIHN0YXRlIG9mIHRoZSBlbGVtZW50fFxufGltYWdlX2RhdGF8VW5pb25bYnl0ZXMsIHN0cl0gUmF3IG9yIEJhc2U2NCByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW1hZ2UgdG8gcHV0IG9uIGJ1dHRvbi4gQ2hvb3NlIGVpdGhlciBmaWxlbmFtZSBvciBkYXRhfFxufGltYWdlX2ZpbGVuYW1lfChzdHIpIGltYWdlIGZpbGVuYW1lIGlmIHRoZXJlIGlzIGEgYnV0dG9uIGltYWdlLiBHSUZzIGFuZCBQTkdzIG9ubHkufFxufHZpc2libGV8KGJvb2wpIGNvbnRyb2wgdmlzaWJpbGl0eSBvZiBlbGVtZW50fFxufGltYWdlX3N1YnNhbXBsZXwoaW50KSBhbW91bnQgdG8gcmVkdWNlIHRoZSBzaXplIG9mIHRoZSBpbWFnZS4gRGl2aWRlcyB0aGUgc2l6ZSBieSB0aGlzIG51bWJlci4gMj0xLzIsIDM9MS8zLCA0PTEvNCwgZXRjfFxufGltYWdlX3NpemV8VHVwbGVbaW50LCBpbnRdIFNpemUgb2YgdGhlIGltYWdlIGluIHBpeGVscyAod2lkdGgsIGhlaWdodCl8XG5cbiMjIyBCdXR0b25NZW51IEVsZW1lbnRcblxuICAgIFRoZSBCdXR0b24gTWVudSBFbGVtZW50LiAgQ3JlYXRlcyBhIGJ1dHRvbiB0aGF0IHdoZW4gY2xpY2tlZCB3aWxsIHNob3cgYSBtZW51IHNpbWlsYXIgdG8gcmlnaHQgY2xpY2sgbWVudVxuXG5gYGBcbkJ1dHRvbk1lbnUoYnV0dG9uX3RleHQsXG4gICAgbWVudV9kZWYsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX3NpemU9KE5vbmUsIE5vbmUpLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdGVhcm9mZj1GYWxzZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGJ1dHRvbl90ZXh0fChzdHIpIFRleHQgdG8gYmUgZGlzcGxheWVkIG9uIHRoZSBidXR0b258XG58bWVudV9kZWZ8TGlzdFtMaXN0W3N0cl1dIEEgbGlzdCBvZiBsaXN0cyBvZiBNZW51IGl0ZW1zIHRvIHNob3cgd2hlbiB0aGlzIGVsZW1lbnQgaXMgY2xpY2tlZC4gU2VlIGRvY3MgZm9yIGZvcm1hdCBhcyB0aGV5IGFyZSB0aGUgc2FtZSBmb3IgYWxsIG1lbnUgdHlwZXN8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58ZGlzYWJsZWR8KGJvb2wpIElmIFRydWUgYnV0dG9uIHdpbGwgYmUgY3JlYXRlZCBkaXNhYmxlZHxcbnxpbWFnZV9maWxlbmFtZXwoc3RyKSBpbWFnZSBmaWxlbmFtZSBpZiB0aGVyZSBpcyBhIGJ1dHRvbiBpbWFnZS4gR0lGcyBhbmQgUE5HcyBvbmx5LnxcbnxpbWFnZV9kYXRhfFVuaW9uW2J5dGVzLCBzdHJdIFJhdyBvciBCYXNlNjQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGltYWdlIHRvIHB1dCBvbiBidXR0b24uIENob29zZSBlaXRoZXIgZmlsZW5hbWUgb3IgZGF0YXxcbnxpbWFnZV9zaXplfFR1cGxlW2ludCwgaW50XSBTaXplIG9mIHRoZSBpbWFnZSBpbiBwaXhlbHMgKHdpZHRoLCBoZWlnaHQpfFxufGltYWdlX3N1YnNhbXBsZXwoaW50KSBhbW91bnQgdG8gcmVkdWNlIHRoZSBzaXplIG9mIHRoZSBpbWFnZS4gRGl2aWRlcyB0aGUgc2l6ZSBieSB0aGlzIG51bWJlci4gMj0xLzIsIDM9MS8zLCA0PTEvNCwgZXRjfFxufGJvcmRlcl93aWR0aHwoaW50KSB3aWR0aCBvZiBib3JkZXIgYXJvdW5kIGJ1dHRvbiBpbiBwaXhlbHN8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIG9mIHRoZSBidXR0b24gaW4gY2hhcmFjdGVycyB3aWRlLCByb3dzIGhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnwoYm9vbCkgaWYgVHJ1ZSB0aGUgYnV0dG9uIHNpemUgaXMgc2l6ZWQgdG8gZml0IHRoZSB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxUdXBsZVtzdHIsIHN0cl0gKHRleHQgY29sb3IsIGJhY2tncm91bmQgY29sb3IpIG9mIGJ1dHRvbi4gRWFzeSB0byByZW1lbWJlciB3aGljaCBpcyB3aGljaCBpZiB5b3Ugc2F5IFwiT05cIiBiZXR3ZWVuIGNvbG9ycy4gXCJyZWRcIiBvbiBcImdyZWVuXCJ8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHRlYXJvZmZ8KGJvb2wpIERldGVybWluZXMgaWYgbWVudXMgc2hvdWxkIGFsbG93IHRoZW0gdG8gYmUgdG9ybiBvZmZ8XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG5cbiMjIyMgU2V0Rm9jdXNcblxuU2V0cyB0aGUgY3VycmVudCBmb2N1cyB0byBiZSBvbiB0aGlzIGVsZW1lbnRcblxuYGBgXG5TZXRGb2N1cyhmb3JjZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Zm9yY2V8KGJvb2wpIGlmIFRydWUgd2lsbCBjYWxsIGZvY3VzX2ZvcmNlIG90aGVyd2lzZSBjYWxscyBmb2N1c19zZXR8XG5cbiMjIyMgU2V0VG9vbHRpcFxuXG5DYWxsZWQgYnkgYXBwbGljYXRpb24gdG8gY2hhbmdlIHRoZSB0b29sdGlwIHRleHQgZm9yIGFuIEVsZW1lbnQuICBOb3JtYWxseSBpbnZva2VkIHVzaW5nIHRoZSBFbGVtZW50IE9iamVjdCBzdWNoIGFzOiB3aW5kb3cuRWxlbWVudCgna2V5JykuU2V0VG9vbFRpcCgnTmV3IHRpcCcpLlxuXG5gYGBcblNldFRvb2x0aXAodG9vbHRpcF90ZXh0KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b29sdGlwX3RleHR8KHN0cikgdGhlIHRleHQgdG8gc2hvdyBpbiB0b29sdGlwLnxcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIEJ1dHRvbk1lbnUgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUobWVudV9kZWZpbml0aW9uLCB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufG1lbnVfZGVmaW5pdGlvbnwoTGlzdFtMaXN0XSkgTmV3IG1lbnUgZGVmaW5pdGlvbiAoaW4gbWVudSBkZWZpbml0aW9uIGZvcm1hdCl8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBDYW52YXMgRWxlbWVudFxuXG5gYGBcbkNhbnZhcyhjYW52YXM9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHJpZ2h0X2NsaWNrX21lbnU9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGNhbnZhc3wodGsuQ2FudmFzKSBZb3VyIG93biB0ay5DYW52YXMgaWYgeW91IGFscmVhZHkgY3JlYXRlZCBpdC4gTGVhdmUgYmxhbmsgdG8gY3JlYXRlIGEgQ2FudmFzfFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgY29sb3Igb2YgYmFja2dyb3VuZHxcbnxzaXplfFR1cGxlW2ludCxpbnRdICh3aWR0aCBpbiBjaGFyLCBoZWlnaHQgaW4gcm93cykgc2l6ZSBpbiBwaXhlbHMgdG8gbWFrZSBjYW52YXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8KEFueSkgVXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxyaWdodF9jbGlja19tZW51fExpc3RbTGlzdFtVbmlvbltMaXN0W3N0cl0sc3RyXV1dIEEgbGlzdCBvZiBsaXN0cyBvZiBNZW51IGl0ZW1zIHRvIHNob3cgd2hlbiB0aGlzIGVsZW1lbnQgaXMgcmlnaHQgY2xpY2tlZC4gU2VlIHVzZXIgZG9jcyBmb3IgZXhhY3QgZm9ybWF0Lnxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFRLQ2FudmFzXG5cbiMjIyBDaGVja2JveCBFbGVtZW50XG5cbiAgICBDaGVja2JveCBFbGVtZW50IC0gRGlzcGxheXMgYSBjaGVja2JveCBhbmQgdGV4dCBuZXh0IHRvIGl0XG5cbmBgYFxuQ2hlY2tib3godGV4dCxcbiAgICBkZWZhdWx0PUZhbHNlLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV90ZXh0PU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0ZXh0fChzdHIpIFRleHQgdG8gZGlzcGxheSBuZXh0IHRvIGNoZWNrYm94fFxufGRlZmF1bHR8KGJvb2wpLiBTZXQgdG8gVHJ1ZSBpZiB5b3Ugd2FudCB0aGlzIGNoZWNrYm94IGluaXRpYWxseSBjaGVja2VkfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3aWR0aCwgaGVpZ2h0KSB3aWR0aCA9IGNoYXJhY3RlcnMtd2lkZSwgaGVpZ2h0ID0gcm93cy1oaWdofFxufGF1dG9fc2l6ZV90ZXh0fChib29sKSBpZiBUcnVlIHdpbGwgc2l6ZSB0aGUgZWxlbWVudCB0byBtYXRjaCB0aGUgbGVuZ3RoIG9mIHRoZSB0ZXh0fFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58dGV4dF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgdGV4dHxcbnxjaGFuZ2Vfc3VibWl0c3woYm9vbCkgRE8gTk9UIFVTRS4gT25seSBsaXN0ZWQgZm9yIGJhY2t3YXJkcyBjb21wYXQgLSBVc2UgZW5hYmxlX2V2ZW50cyBpbnN0ZWFkfFxufGVuYWJsZV9ldmVudHN8KGJvb2wpIFR1cm5zIG9uIHRoZSBlbGVtZW50IHNwZWNpZmljIGV2ZW50cy4gQ2hlY2tib3ggZXZlbnRzIGhhcHBlbiB3aGVuIGFuIGl0ZW0gY2hhbmdlc3xcbnxkaXNhYmxlZHwoYm9vbCkgc2V0IGRpc2FibGUgc3RhdGV8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBHZXRcblxuUmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgY2hlY2tib3hcblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCAoYm9vbCkgQ3VycmVudCBzdGF0ZSBvZiBjaGVja2JveCB8XG5cbiMjIyMgU2V0Rm9jdXNcblxuU2V0cyB0aGUgY3VycmVudCBmb2N1cyB0byBiZSBvbiB0aGlzIGVsZW1lbnRcblxuYGBgXG5TZXRGb2N1cyhmb3JjZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Zm9yY2V8KGJvb2wpIGlmIFRydWUgd2lsbCBjYWxsIGZvY3VzX2ZvcmNlIG90aGVyd2lzZSBjYWxscyBmb2N1c19zZXR8XG5cbiMjIyMgU2V0VG9vbHRpcFxuXG5DYWxsZWQgYnkgYXBwbGljYXRpb24gdG8gY2hhbmdlIHRoZSB0b29sdGlwIHRleHQgZm9yIGFuIEVsZW1lbnQuICBOb3JtYWxseSBpbnZva2VkIHVzaW5nIHRoZSBFbGVtZW50IE9iamVjdCBzdWNoIGFzOiB3aW5kb3cuRWxlbWVudCgna2V5JykuU2V0VG9vbFRpcCgnTmV3IHRpcCcpLlxuXG5gYGBcblNldFRvb2x0aXAodG9vbHRpcF90ZXh0KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b29sdGlwX3RleHR8KHN0cikgdGhlIHRleHQgdG8gc2hvdyBpbiB0b29sdGlwLnxcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIENoZWNrYm94IEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yLlxuTm90ZSB0aGF0IGNoYW5naW5nIHZpc2liaWxpdHkgbWF5IGNhdXNlIGVsZW1lbnQgdG8gY2hhbmdlIGxvY2F0aW9ucyB3aGVuIG1hZGUgdmlzaWJsZSBhZnRlciBpbnZpc2libGVcblxuYGBgXG5VcGRhdGUodmFsdWU9Tm9uZSxcbiAgICBkaXNhYmxlZD1Ob25lLFxuICAgIHZpc2libGU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmFsdWV8KGJvb2wpIGlmIFRydWUgY2hlY2tzIHRoZSBjaGVja2JveCwgRmFsc2UgY2xlYXJzIGl0fFxufGRpc2FibGVkfChib29sKSBkaXNhYmxlIG9yIGVuYWJsZSBlbGVtZW50fFxufHZpc2libGV8KGJvb2wpIGNvbnRyb2wgdmlzaWJpbGl0eSBvZiBlbGVtZW50fFxuXG4jIyMgQ29sdW1uIEVsZW1lbnRcblxuICAgIEEgY29udGFpbmVyIGVsZW1lbnQgdGhhdCBpcyB1c2VkIHRvIGNyZWF0ZSBhIGxheW91dCB3aXRoaW4geW91ciB3aW5kb3cncyBsYXlvdXRcblxuYGBgXG5Db2x1bW4obGF5b3V0LFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBzY3JvbGxhYmxlPUZhbHNlLFxuICAgIHZlcnRpY2FsX3Njcm9sbF9vbmx5PUZhbHNlLFxuICAgIHJpZ2h0X2NsaWNrX21lbnU9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUsXG4gICAganVzdGlmaWNhdGlvbj1cImxlZnRcIixcbiAgICBlbGVtZW50X2p1c3RpZmljYXRpb249XCJsZWZ0XCIpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGxheW91dHxMaXN0W0xpc3RbRWxlbWVudF1dIExheW91dCB0aGF0IHdpbGwgYmUgc2hvd24gaW4gdGhlIENvbHVtbiBjb250YWluZXJ8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kIG9mIGVudGlyZSBDb2x1bW58XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIHNpemUgaW4gcGl4ZWxzIChkb2Vzbid0IHdvcmsgcXVpdGUgcmlnaHQsIHNvbWV0aW1lcyBvbmx5IDEgZGltZW5zaW9uIGlzIHNldCBieSB0a2ludGVyfFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58c2Nyb2xsYWJsZXwoYm9vbCkgaWYgVHJ1ZSB0aGVuIHNjcm9sbGJhcnMgd2lsbCBiZSBhZGRlZCB0byB0aGUgY29sdW1ufFxufHZlcnRpY2FsX3Njcm9sbF9vbmx5fChib29sKSBpZiBUcnVlbiB0aGVuIG5vIGhvcml6b250YWwgc2Nyb2xsYmFyIHdpbGwgYmUgc2hvd258XG58cmlnaHRfY2xpY2tfbWVudXxMaXN0W0xpc3RbVW5pb25bTGlzdFtzdHJdLHN0cl1dXSBBIGxpc3Qgb2YgbGlzdHMgb2YgTWVudSBpdGVtcyB0byBzaG93IHdoZW4gdGhpcyBlbGVtZW50IGlzIHJpZ2h0IGNsaWNrZWQuIFNlZSB1c2VyIGRvY3MgZm9yIGV4YWN0IGZvcm1hdC58XG58a2V5fChhbnkpIFZhbHVlIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIGVsZW1lbnQgZnJvbSBhbGwgb3RoZXIgZWxlbWVudHMuIFVzZWQgd2hlbiBGaW5kaW5nIGFuIGVsZW1lbnQgb3IgaW4gcmV0dXJuIHZhbHVlcy4gTXVzdCBiZSB1bmlxdWUgdG8gdGhlIHdpbmRvd3xcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcbnxqdXN0aWZpY2F0aW9ufChzdHIpIHNldCBqdXN0aWZpY2F0aW9uIGZvciB0aGUgQ29sdW1uIGl0c2VsZi4gTm90ZSBlbnRpcmUgcm93IGNvbnRhaW5pbmcgdGhlIENvbHVtbiB3aWxsIGJlIGFmZmVjdGVkfFxufGVsZW1lbnRfanVzdGlmaWNhdGlvbnwoc3RyKSBBbGwgZWxlbWVudHMgaW5zaWRlIHRoZSBDb2x1bW4gd2lsbCBoYXZlIHRoaXMganVzdGlmaWNhdGlvbiAnbGVmdCcsICdyaWdodCcsICdjZW50ZXInIGFyZSB2YWxpZCB2YWx1ZXN8XG5cbiMjIyMgQWRkUm93XG5cbk5vdCByZWNvbW1lbmRlZCB1c2VyIGNhbGwuICBVc2VkIHRvIGFkZCByb3dzIG9mIEVsZW1lbnRzIHRvIHRoZSBDb2x1bW4gRWxlbWVudC5cblxuYGBgXG5BZGRSb3coYXJncylcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8TGlzdFtFbGVtZW50XSBUaGUgbGlzdCBvZiBlbGVtZW50cyBmb3IgdGhpcyByb3d8XG5cbiMjIyMgTGF5b3V0XG5cbkNhbiB1c2UgbGlrZSB0aGUgV2luZG93LkxheW91dCBtZXRob2QsIGJ1dCBpdCdzIGJldHRlciB0byB1c2UgdGhlIGxheW91dCBwYXJhbWV0ZXIgd2hlbiBjcmVhdGluZ1xuXG5gYGBcbkxheW91dChyb3dzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxyb3dzfExpc3RbTGlzdFtFbGVtZW50XV0gVGhlIHJvd3Mgb2YgRWxlbWVudHN8XG58fHxcbnwgKipyZXR1cm4qKiB8IChDb2x1bW4pIFVzZWQgZm9yIGNoYWluaW5nIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgQ29sdW1uIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZpc2libGU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBDb21ibyBFbGVtZW50XG5cbiAgICBDb21ib0JveCBFbGVtZW50IC0gQSBjb21iaW5hdGlvbiBvZiBhIHNpbmdsZS1saW5lIGlucHV0IGFuZCBhIGRyb3AtZG93biBtZW51LiBVc2VyIGNhbiB0eXBlIGluIHRoZWlyIG93biB2YWx1ZSBvciBjaG9vc2UgZnJvbSBsaXN0LlxuXG5gYGBcbkNvbWJvKHZhbHVlcyxcbiAgICBkZWZhdWx0X3ZhbHVlPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX3RleHQ9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAga2V5PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHJlYWRvbmx5PUZhbHNlLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlc3xMaXN0W0FueV0gdmFsdWVzIHRvIGNob29zZS4gV2hpbGUgZGlzcGxheWVkIGFzIHRleHQsIHRoZSBpdGVtcyByZXR1cm5lZCBhcmUgd2hhdCB0aGUgY2FsbGVyIHN1cHBsaWVkLCBub3QgdGV4dHxcbnxkZWZhdWx0X3ZhbHVlfChBbnkpIENob2ljZSB0byBiZSBkaXNwbGF5ZWQgYXMgaW5pdGlhbCB2YWx1ZS4gTXVzdCBtYXRjaCBvbmUgb2YgdmFsdWVzIHZhcmlhYmxlIGNvbnRlbnRzfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3aWR0aCwgaGVpZ2h0KSB3aWR0aCA9IGNoYXJhY3RlcnMtd2lkZSwgaGVpZ2h0ID0gcm93cy1oaWdofFxufGF1dG9fc2l6ZV90ZXh0fChib29sKSBUcnVlIGlmIGVsZW1lbnQgc2hvdWxkIGJlIHRoZSBzYW1lIHNpemUgYXMgdGhlIGNvbnRlbnRzfFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgY29sb3Igb2YgYmFja2dyb3VuZHxcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSB0ZXh0fFxufGNoYW5nZV9zdWJtaXRzfChib29sKSBERVBSSUNBVEVEIERPIE5PVCBVU0UuIFVzZSBgZW5hYmxlX2V2ZW50c2AgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIENvbWJvIGV2ZW50IGlzIHdoZW4gYSBjaG9pY2UgaXMgbWFkZXxcbnxkaXNhYmxlZHwoYm9vbCkgc2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnR8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoaXMgZWxlbWVudHxcbnxyZWFkb25seXwoYm9vbCkgbWFrZSBlbGVtZW50IHJlYWRvbmx5ICh1c2VyIGNhbid0IGNoYW5nZSkuIFRydWUgbWVhbnMgdXNlciBjYW5ub3QgY2hhbmdlfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBHZXRcblxuUmV0dXJucyB0aGUgY3VycmVudCAocmlnaHQgbm93KSB2YWx1ZSBvZiB0aGUgQ29tYm8uICBETyBOT1QgVVNFIFRISVMgQVMgVEhFIE5PUk1BTCBXQVkgT0YgUkVBRElORyBBIENPTUJPIVxuWW91IHNob3VsZCBiZSB1c2luZyB2YWx1ZXMgZnJvbSB5b3VyIGNhbGwgdG8gd2luZG93LlJlYWQgaW5zdGVhZC4gIEtub3cgd2hhdCB5b3UncmUgZG9pbmcgaWYgeW91IHVzZSBpdC5cblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCBVbmlvbltBbnksIE5vbmVdIFJldHVybnMgdGhlIHZhbHVlIG9mIHdoYXQgaXMgY3VycmVudGx5IGNob3NlbiB8XG5cbiMjIyMgU2V0Rm9jdXNcblxuU2V0cyB0aGUgY3VycmVudCBmb2N1cyB0byBiZSBvbiB0aGlzIGVsZW1lbnRcblxuYGBgXG5TZXRGb2N1cyhmb3JjZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Zm9yY2V8KGJvb2wpIGlmIFRydWUgd2lsbCBjYWxsIGZvY3VzX2ZvcmNlIG90aGVyd2lzZSBjYWxscyBmb2N1c19zZXR8XG5cbiMjIyMgU2V0VG9vbHRpcFxuXG5DYWxsZWQgYnkgYXBwbGljYXRpb24gdG8gY2hhbmdlIHRoZSB0b29sdGlwIHRleHQgZm9yIGFuIEVsZW1lbnQuICBOb3JtYWxseSBpbnZva2VkIHVzaW5nIHRoZSBFbGVtZW50IE9iamVjdCBzdWNoIGFzOiB3aW5kb3cuRWxlbWVudCgna2V5JykuU2V0VG9vbFRpcCgnTmV3IHRpcCcpLlxuXG5gYGBcblNldFRvb2x0aXAodG9vbHRpcF90ZXh0KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b29sdGlwX3RleHR8KHN0cikgdGhlIHRleHQgdG8gc2hvdyBpbiB0b29sdGlwLnxcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIENvbWJvIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlPU5vbmUsXG4gICAgdmFsdWVzPU5vbmUsXG4gICAgc2V0X3RvX2luZGV4PU5vbmUsXG4gICAgZGlzYWJsZWQ9Tm9uZSxcbiAgICByZWFkb25seT1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlfChBbnkpIGNoYW5nZSB3aGljaCB2YWx1ZSBpcyBjdXJyZW50IHNlbGVjdGVkIGhhc2VkIG9uIG5ldyBsaXN0IG9mIHByZXZpb3VzIGxpc3Qgb2YgY2hvaWNlc3xcbnx2YWx1ZXN8TGlzdFtBbnldIGNoYW5nZSBsaXN0IG9mIGNob2ljZXN8XG58c2V0X3RvX2luZGV4fChpbnQpIGNoYW5nZSBzZWxlY3Rpb24gdG8gYSBwYXJ0aWN1bGFyIGNob2ljZSBzdGFydGluZyB3aXRoIGluZGV4ID0gMHxcbnxkaXNhYmxlZHwoYm9vbCkgZGlzYWJsZSBvciBlbmFibGUgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG58cmVhZG9ubHl8KGJvb2wpIGlmIFRydWUgbWFrZSBlbGVtZW50IHJlYWRvbmx5ICh1c2VyIGNhbm5vdCBjaGFuZ2UgYW55IGNob2ljZXMpfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIEZyYW1lIEVsZW1lbnRcblxuICAgIEEgRnJhbWUgRWxlbWVudCB0aGF0IGNvbnRhaW5zIG90aGVyIEVsZW1lbnRzLiBFbmNsb3NlcyB3aXRoIGEgbGluZSBhcm91bmQgZWxlbWVudHMgYW5kIGEgdGV4dCBsYWJlbC5cblxuYGBgXG5GcmFtZSh0aXRsZSxcbiAgICBsYXlvdXQsXG4gICAgdGl0bGVfY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGl0bGVfbG9jYXRpb249Tm9uZSxcbiAgICByZWxpZWY9XCJncm9vdmVcIixcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBmb250PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHJpZ2h0X2NsaWNrX21lbnU9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUsXG4gICAgZWxlbWVudF9qdXN0aWZpY2F0aW9uPVwibGVmdFwiKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0aXRsZXwoc3RyKSB0ZXh0IHRoYXQgaXMgZGlzcGxheWVkIGFzIHRoZSBGcmFtZSdzIFwibGFiZWxcIiBvciB0aXRsZXxcbnxsYXlvdXR8TGlzdFtMaXN0W0VsZW1lbnRzXV0gVGhlIGxheW91dCB0byBwdXQgaW5zaWRlIHRoZSBGcmFtZXxcbnx0aXRsZV9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgdGl0bGUgdGV4dHxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGJhY2tncm91bmQgY29sb3Igb2YgdGhlIEZyYW1lfFxufHRpdGxlX2xvY2F0aW9ufChlbnVtKSBsb2NhdGlvbiB0byBwbGFjZSB0aGUgdGV4dCB0aXRsZS4gQ2hvaWNlcyBpbmNsdWRlOiBUSVRMRV9MT0NBVElPTl9UT1AgVElUTEVfTE9DQVRJT05fQk9UVE9NIFRJVExFX0xPQ0FUSU9OX0xFRlQgVElUTEVfTE9DQVRJT05fUklHSFQgVElUTEVfTE9DQVRJT05fVE9QX0xFRlQgVElUTEVfTE9DQVRJT05fVE9QX1JJR0hUIFRJVExFX0xPQ0FUSU9OX0JPVFRPTV9MRUZUIFRJVExFX0xPQ0FUSU9OX0JPVFRPTV9SSUdIVHxcbnxyZWxpZWZ8KGVudW0pIHJlbGllZiBzdHlsZS4gVmFsdWVzIGFyZSBzYW1lIGFzIG90aGVyIGVsZW1lbnRzIHdpdGggcmVsaWVmcy4gQ2hvaWNlcyBpbmNsdWRlIFJFTElFRl9SQUlTRUQgUkVMSUVGX1NVTktFTiBSRUxJRUZfRkxBVCBSRUxJRUZfUklER0UgUkVMSUVGX0dST09WRSBSRUxJRUZfU09MSUR8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoIGluIGNoYXJhY3RlcnMsIGhlaWdodCBpbiByb3dzKSAobm90ZSB0aGlzIHBhcmFtZXRlciBtYXkgbm90IGFsd2F5cyB3b3JrKXxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxib3JkZXJfd2lkdGh8KGludCkgd2lkdGggb2YgYm9yZGVyIGFyb3VuZCBlbGVtZW50IGluIHBpeGVsc3xcbnxrZXl8KGFueSkgVmFsdWUgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoaXMgZWxlbWVudCBmcm9tIGFsbCBvdGhlciBlbGVtZW50cy4gVXNlZCB3aGVuIEZpbmRpbmcgYW4gZWxlbWVudCBvciBpbiByZXR1cm4gdmFsdWVzLiBNdXN0IGJlIHVuaXF1ZSB0byB0aGUgd2luZG93fFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufHJpZ2h0X2NsaWNrX21lbnV8TGlzdFtMaXN0W1VuaW9uW0xpc3Rbc3RyXSxzdHJdXV0gQSBsaXN0IG9mIGxpc3RzIG9mIE1lbnUgaXRlbXMgdG8gc2hvdyB3aGVuIHRoaXMgZWxlbWVudCBpcyByaWdodCBjbGlja2VkLiBTZWUgdXNlciBkb2NzIGZvciBleGFjdCBmb3JtYXQufFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxufGVsZW1lbnRfanVzdGlmaWNhdGlvbnwoc3RyKSBBbGwgZWxlbWVudHMgaW5zaWRlIHRoZSBGcmFtZSB3aWxsIGhhdmUgdGhpcyBqdXN0aWZpY2F0aW9uICdsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlcicgYXJlIHZhbGlkIHZhbHVlc3xcblxuIyMjIyBBZGRSb3dcblxuTm90IHJlY29tbWVuZGVkIHVzZXIgY2FsbC4gIFVzZWQgdG8gYWRkIHJvd3Mgb2YgRWxlbWVudHMgdG8gdGhlIEZyYW1lIEVsZW1lbnQuXG5cbmBgYFxuQWRkUm93KGFyZ3MpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCphcmdzfExpc3RbRWxlbWVudF0gVGhlIGxpc3Qgb2YgZWxlbWVudHMgZm9yIHRoaXMgcm93fFxuXG4jIyMjIExheW91dFxuXG5DYW4gdXNlIGxpa2UgdGhlIFdpbmRvdy5MYXlvdXQgbWV0aG9kLCBidXQgaXQncyBiZXR0ZXIgdG8gdXNlIHRoZSBsYXlvdXQgcGFyYW1ldGVyIHdoZW4gY3JlYXRpbmdcblxuYGBgXG5MYXlvdXQocm93cylcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58cm93c3xMaXN0W0xpc3RbRWxlbWVudF1dIFRoZSByb3dzIG9mIEVsZW1lbnRzfFxufHx8XG58ICoqcmV0dXJuKiogfCAoRnJhbWUpIFVzZWQgZm9yIGNoYWluaW5nIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgRnJhbWUgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIEdyYXBoIEVsZW1lbnRcblxuICAgIENyZWF0ZXMgYW4gYXJlYSBmb3IgeW91IHRvIGRyYXcgb24uICBUaGUgTUFHSUNBTCBwcm9wZXJ0eSB0aGlzIEVsZW1lbnQgaGFzIGlzIHRoYXQgeW91IGludGVyYWN0XG4gICAgd2l0aCB0aGUgZWxlbWVudCB1c2luZyB5b3VyIG93biBjb29yZGluYXRlIHN5c3RlbS4gIFRoaXMgaXMgYW4gaW1wb3J0YW50IHBvaW50ISEgIFlPVSBkZWZpbmUgd2hlcmUgdGhlIGxvY2F0aW9uXG4gICAgaXMgZm9yICgwLDApLiAgV2FudCAoMCwwKSB0byBiZSBpbiB0aGUgbWlkZGxlIG9mIHRoZSBncmFwaCBsaWtlIGEgbWF0aCA0LXF1YWRyYW50IGdyYXBoPyAgTm8gcHJvYmxlbSEgIFNldCB5b3VyXG4gICAgbG93ZXIgbGVmdCBjb3JuZXIgdG8gYmUgKC0xMDAsLTEwMCkgYW5kIHlvdXIgdXBwZXIgcmlnaHQgdG8gYmUgKDEwMCwxMDApIGFuZCB5b3UndmUgZ290IHlvdXJzZWxmIGEgZ3JhcGggd2l0aFxuICAgICgwLDApIGF0IHRoZSBjZW50ZXIuXG4gICAgT25lIG9mIFRIRSBjb29sZXN0IG9mIHRoZSBFbGVtZW50cy5cbiAgICBZb3UgY2FuIGFsc28gdXNlIGZsb2F0IHZhbHVlcy4gVG8gZG8gc28sIGJlIHN1cmUgYW5kIHNldCB0aGUgZmxvYXRfdmFsdWVzIHBhcmFtZXRlci5cbiAgICBNb3VzZSBjbGljayBhbmQgZHJhZyBldmVudHMgYXJlIHBvc3NpYmxlIGFuZCByZXR1cm4gdGhlICh4LHkpIGNvb3JkaW5hdGVzIG9mIHRoZSBtb3VzZVxuICAgIERyYXdpbmcgcHJpbWl0aXZlcyByZXR1cm4gYW4gXCJpZFwiIHRoYXQgaXMgcmVmZXJlbmNlZCB3aGVuIHlvdSB3YW50IHRvIG9wZXJhdGlvbiBvbiB0aGF0IGl0ZW0gKGUuZy4gdG8gZXJhc2UgaXQpXG5cbmBgYFxuR3JhcGgoY2FudmFzX3NpemUsXG4gICAgZ3JhcGhfYm90dG9tX2xlZnQsXG4gICAgZ3JhcGhfdG9wX3JpZ2h0LFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBkcmFnX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgcmlnaHRfY2xpY2tfbWVudT1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSxcbiAgICBmbG9hdF92YWx1ZXM9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGNhbnZhc19zaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgc2l6ZSBvZiB0aGUgY2FudmFzIGFyZWEgaW4gcGl4ZWxzfFxufGdyYXBoX2JvdHRvbV9sZWZ0fFR1cGxlW2ludCwgaW50XSAoeCx5KSBUaGUgYm90dG9tcyBsZWZ0IGNvcm5lciBvZiB5b3VyIGNvb3JkaW5hdGUgc3lzdGVtfFxufGdyYXBoX3RvcF9yaWdodHxUdXBsZVtpbnQsIGludF0gKHgseSkgVGhlIHRvcCByaWdodCBjb3JuZXIgb2YgeW91ciBjb29yZGluYXRlIHN5c3RlbXxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGJhY2tncm91bmQgY29sb3Igb2YgdGhlIGRyYXdpbmcgYXJlYXxcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxufGNoYW5nZV9zdWJtaXRzfChib29sKSAqIERFUFJJQ0FURUQgRE8gTk9UIFVTRSEgU2FtZSBhcyBlbmFibGVfZXZlbnRzfFxufGRyYWdfc3VibWl0c3woYm9vbCkgaWYgVHJ1ZSBhbmQgRXZlbnRzIGFyZSBlbmFibGVkIGZvciB0aGUgR3JhcGgsIHdpbGwgcmVwb3J0IEV2ZW50cyBhbnkgdGltZSB0aGUgbW91c2UgbW92ZXMgd2hpbGUgYnV0dG9uIGRvd258XG58ZW5hYmxlX2V2ZW50c3woYm9vbCkgSWYgVHJ1ZSB0aGVuIGNsaWNrcyBvbiB0aGUgR3JhcGggYXJlIGltbWVkaWF0ZWx5IHJlcG9ydGVkIGFzIGFuIGV2ZW50LiBVc2UgdGhpcyBpbnN0ZWFkIG9mIGNoYW5nZV9zdWJtaXRzfFxufGtleXwoYW55KSBWYWx1ZSB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhpcyBlbGVtZW50IGZyb20gYWxsIG90aGVyIGVsZW1lbnRzLiBVc2VkIHdoZW4gRmluZGluZyBhbiBlbGVtZW50IG9yIGluIHJldHVybiB2YWx1ZXMuIE11c3QgYmUgdW5pcXVlIHRvIHRoZSB3aW5kb3d8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58cmlnaHRfY2xpY2tfbWVudXxMaXN0W0xpc3RbVW5pb25bTGlzdFtzdHJdLHN0cl1dXSBBIGxpc3Qgb2YgbGlzdHMgb2YgTWVudSBpdGVtcyB0byBzaG93IHdoZW4gdGhpcyBlbGVtZW50IGlzIHJpZ2h0IGNsaWNrZWQuIFNlZSB1c2VyIGRvY3MgZm9yIGV4YWN0IGZvcm1hdC58XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnQgKERlZmF1bHQgPSBUcnVlKXxcbnxmbG9hdF92YWx1ZXN8KGJvb2wpIElmIFRydWUgeCx5IGNvb3JkaW5hdGVzIGFyZSByZXR1cm5lZCBhcyBmbG9hdHMsIG5vdCBpbnRzfFxuXG4jIyMjIEJyaW5nRmlndXJlVG9Gcm9udFxuXG5DaGFuZ2VzIFotb3JkZXIgb2YgZmlndXJlcyBvbiB0aGUgR3JhcGguICBCcmluZ3MgdGhlIGluZGljYXRlZCBmaWd1cmUgdG8gdGhlIGZyb250IG9mIGFsbCBvdGhlciBkcmF3biBmaWd1cmVzXG5cbmBgYFxuQnJpbmdGaWd1cmVUb0Zyb250KGZpZ3VyZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ZmlndXJlfChpbnQpIHZhbHVlIHJldHVybmVkIGJ5IHRraW50ZXIgd2hlbiBjcmVhdGluZyB0aGUgZmlndXJlIC8gZHJhd2luZ3xcblxuIyMjIyBCdXR0b25QcmVzc0NhbGxCYWNrXG5cbk5vdCBhIHVzZXIgY2FsbGFibGUgbWV0aG9kLiAgVXNlZCB0byBnZXQgR3JhcGggY2xpY2sgZXZlbnRzLiBDYWxsZWQgYnkgdGtpbnRlciB3aGVuIGJ1dHRvbiBpcyByZWxlYXNlZFxuXG5gYGBcbkJ1dHRvblByZXNzQ2FsbEJhY2soZXZlbnQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGV2ZW50fChldmVudCkgZXZlbnQgaW5mbyBmcm9tIHRraW50ZXIuIENvbnRhaW5zIHRoZSB4IGFuZCB5IGNvb3JkaW5hdGVzIG9mIGEgY2xpY2t8XG5cbiMjIyMgQnV0dG9uUmVsZWFzZUNhbGxCYWNrXG5cbk5vdCBhIHVzZXIgY2FsbGFibGUgbWV0aG9kLiAgVXNlZCB0byBnZXQgR3JhcGggY2xpY2sgZXZlbnRzLiBDYWxsZWQgYnkgdGtpbnRlciB3aGVuIGJ1dHRvbiBpcyByZWxlYXNlZFxuXG5gYGBcbkJ1dHRvblJlbGVhc2VDYWxsQmFjayhldmVudClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ZXZlbnR8KGV2ZW50KSBldmVudCBpbmZvIGZyb20gdGtpbnRlci4gTm90ZSBub3QgdXNlZCBpbiB0aGlzIG1ldGhvZHxcblxuIyMjIyBEZWxldGVGaWd1cmVcblxuUmVtb3ZlIGZyb20gdGhlIEdyYXBoIHRoZSBmaWd1cmUgcmVwcmVzZW50ZWQgYnkgaWQuIFRoZSBpZCBpcyBnaXZlbiB0byB5b3UgYW55dGltZSB5b3UgY2FsbCBhIGRyYXdpbmcgcHJpbWl0aXZlXG5cbmBgYFxuRGVsZXRlRmlndXJlKGlkKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxpZHwoaW50KSB0aGUgaWQgcmV0dXJuZWQgdG8geW91IHdoZW4gY2FsbGluZyBvbmUgb2YgdGhlIGRyYXdpbmcgbWV0aG9kc3xcblxuIyMjIyBEcmF3QXJjXG5cbkRyYXdzIGRpZmZlcmVudCB0eXBlcyBvZiBhcmNzLiAgVXNlcyBhIFwiYm91bmRpbmcgYm94XCIgdG8gZGVmaW5lIGxvY2F0aW9uXG5cbmBgYFxuRHJhd0FyYyh0b3BfbGVmdCxcbiAgICBib3R0b21fcmlnaHQsXG4gICAgZXh0ZW50LFxuICAgIHN0YXJ0X2FuZ2xlLFxuICAgIHN0eWxlPU5vbmUsXG4gICAgYXJjX2NvbG9yPVwiYmxhY2tcIilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9wX2xlZnR8VW5pb25bVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdXSB0aGUgdG9wIGxlZnQgcG9pbnQgb2YgYm91bmRpbmcgcmVjdGFuZ2xlfFxufGJvdHRvbV9yaWdodHxVbmlvbltUdXBsZVtpbnQsIGludF0sIFR1cGxlW2Zsb2F0LCBmbG9hdF1dIHRoZSBib3R0b20gcmlnaHQgcG9pbnQgb2YgYm91bmRpbmcgcmVjdGFuZ2xlfFxufGV4dGVudHwoZmxvYXQpIEFuZGxlIHRvIGVuZCBkcmF3aW5nLiBVc2VkIGluIGNvbmp1bmN0aW9uIHdpdGggc3RhcnRfYW5nbGV8XG58c3RhcnRfYW5nbGV8KGZsb2F0KSBBbmdsZSB0byBiZWdpbiBkcmF3aW5nLiBVc2VkIGluIGNvbmp1bmN0aW9uIHdpdGggZXh0ZW50fFxufHN0eWxlfChzdHIpIFZhbGlkIGNob2ljZXMgYXJlIE9uZSBvZiB0aGVzZSBTdHlsZSBzdHJpbmdzLSAncGllc2xpY2UnLCAnY2hvcmQnLCAnYXJjJywgJ2ZpcnN0JywgJ2xhc3QnLCAnYnV0dCcsICdwcm9qZWN0aW5nJywgJ3JvdW5kJywgJ2JldmVsJywgJ21pdGVyJ3xcbnxhcmNfY29sb3J8KHN0cikgY29sb3IgdG8gZHJhdyBhcmMgd2l0aHxcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25baW50LCBOb25lXSBpZCByZXR1cm5lZCBmcm9tIHRraW50ZXIgdGhhdCB5b3UnbGwgbmVlZCBpZiB5b3Ugd2FudCB0byBtYW5pcHVsYXRlIHRoZSBhcmMgfFxuXG4jIyMjIERyYXdDaXJjbGVcblxuRHJhd3MgYSBjaXJjbGUsIGNlbmV0ZXJlZCBhdCB0aGUgbG9jYXRpb24gcHJvdmlkZWQuICBDYW4gc2V0IHRoZSBmaWxsIGFuZCBvdXRsaW5lIGNvbG9yc1xuXG5gYGBcbkRyYXdDaXJjbGUoY2VudGVyX2xvY2F0aW9uLFxuICAgIHJhZGl1cyxcbiAgICBmaWxsX2NvbG9yPU5vbmUsXG4gICAgbGluZV9jb2xvcj1cImJsYWNrXCIpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGNlbnRlcl9sb2NhdGlvbnxVbmlvbiBbVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdXSBDZW50ZXIgbG9jYXRpb24gdXNpbmcgVVNFUidTIGNvb3JkaW5hdGUgc3lzdGVtfFxufHJhZGl1c3xVbmlvbltpbnQsIGZsb2F0XSBSYWRpdXMgaW4gdXNlcidzIGNvb3JkaW5hdGUgdmFsdWVzLnxcbnxmaWxsX2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSBwb2ludCB0byBkcmF3fFxufGxpbmVfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIG91dGVyIGxpbmUgdGhhdCBnb2VzIGFyb3VuZCB0aGUgY2lyY2xlIChzb3JyeSwgY2FuJ3Qgc2V0IHRoaWNrbmVzcyl8XG58fHxcbnwgKipyZXR1cm4qKiB8IFVuaW9uW2ludCwgTm9uZV0gaWQgcmV0dXJuZWQgZnJvbSB0a2ludGVyIHRoYXQgeW91J2xsIG5lZWQgaWYgeW91IHdhbnQgdG8gbWFuaXB1bGF0ZSB0aGUgY2lyY2xlIHxcblxuIyMjIyBEcmF3SW1hZ2VcblxuUGxhY2VzIGFuIGltYWdlIG9udG8geW91ciBjYW52YXMuICBJdCdzIGEgcmVhbGx5IGltcG9ydGFudCBtZXRob2QgZm9yIHRoaXMgZWxlbWVudCBhcyBpdCBlbmFibGVzIHNvIG11Y2hcblxuYGBgXG5EcmF3SW1hZ2UoZmlsZW5hbWU9Tm9uZSxcbiAgICBkYXRhPU5vbmUsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIGNvbG9yPVwiYmxhY2tcIixcbiAgICBmb250PU5vbmUsXG4gICAgYW5nbGU9MClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ZmlsZW5hbWV8KHN0cikgaWYgaW1hZ2UgaXMgaW4gYSBmaWxlLCBwYXRoIGFuZCBmaWxlbmFtZSBmb3IgdGhlIGltYWdlLiAoR0lGIGFuZCBQTkcgb25seSEpfFxufGRhdGF8VW5pb25bc3RyLCBieXRlc10gaWYgaW1hZ2UgaXMgaW4gQmFzZTY0IGZvcm1hdCBvciByYXc/IGZvcm1hdCB0aGVuIHVzZSBpbnN0ZWFkIG9mIGZpbGVuYW1lfFxufGxvY2F0aW9ufFVuaW9uW1R1cGxlW2ludCwgaW50XSwgVHVwbGVbZmxvYXQsIGZsb2F0XV0gdGhlICh4LHkpIGxvY2F0aW9uIHRvIHBsYWNlIGltYWdlJ3MgdG9wIGxlZnQgY29ybmVyfFxufGNvbG9yfChzdHIpIHRleHQgY29sb3J8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGFuZ2xlfChmbG9hdCkgQW5nbGUgMCB0byAzNjAgdG8gZHJhdyB0aGUgdGV4dC4gWmVybyByZXByZXNlbnRzIGhvcml6b250YWwgdGV4dHxcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25baW50LCBOb25lXSBpZCByZXR1cm5lZCBmcm9tIHRraW50ZXIgdGhhdCB5b3UnbGwgbmVlZCBpZiB5b3Ugd2FudCB0byBtYW5pcHVsYXRlIHRoZSBpbWFnZSB8XG5cbiMjIyMgRHJhd0xpbmVcblxuRHJhd3MgYSBsaW5lIGZyb20gb25lIHBvaW50IHRvIGFub3RoZXIgcG9pbnQgdXNpbmcgVVNFUidTIGNvb3JkaW5hdGVzLiBDYW4gc2V0IHRoZSBjb2xvciBhbmQgd2lkdGggb2YgbGluZVxuXG5gYGBcbkRyYXdMaW5lKHBvaW50X2Zyb20sXG4gICAgcG9pbnRfdG8sXG4gICAgY29sb3I9XCJibGFja1wiLFxuICAgIHdpZHRoPTEpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHBvaW50X2Zyb218VW5pb25bVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdXSBTdGFydGluZyBwb2ludCBmb3IgbGluZXxcbnxwb2ludF90b3xVbmlvbltUdXBsZVtpbnQsIGludF0sIFR1cGxlW2Zsb2F0LCBmbG9hdF1dIEVuZGluZyBwb2ludCBmb3IgbGluZXxcbnxjb2xvcnwoc3RyKSBDb2xvciBvZiB0aGUgbGluZXxcbnx3aWR0aHwoaW50KSB3aWR0aCBvZiBsaW5lIGluIHBpeGVsc3xcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25baW50LCBOb25lXSBpZCByZXR1cm5lZCBmcm9tIHRrdGluZXIgb3IgTm9uZSBpZiB1c2VyIGNsb3NlZCB0aGUgd2luZG93LiBpZCBpcyB1c2VkIHdoZW4geW91IDxicj4gd2FudCB0byBtYW5pcHVsYXRlIHRoZSBsaW5lIHxcblxuIyMjIyBEcmF3T3ZhbFxuXG5EcmF3cyBhbiBvdmFsIGJhc2VkIG9uIGNvb3JkaW5hdGVzIGluIHVzZXIgY29vcmRpbmF0ZSBzeXN0ZW0uIFByb3ZpZGUgdGhlIGxvY2F0aW9uIG9mIGEgXCJib3VuZGluZyByZWN0YW5nbGVcIlxuXG5gYGBcbkRyYXdPdmFsKHRvcF9sZWZ0LFxuICAgIGJvdHRvbV9yaWdodCxcbiAgICBmaWxsX2NvbG9yPU5vbmUsXG4gICAgbGluZV9jb2xvcj1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b3BfbGVmdHxVbmlvbltUdXBsZVtpbnQsIGludF0sIFR1cGxlW2Zsb2F0LCBmbG9hdF1dIHRoZSB0b3AgbGVmdCBwb2ludCBvZiBib3VuZGluZyByZWN0YW5nbGV8XG58Ym90dG9tX3JpZ2h0fFVuaW9uW1R1cGxlW2ludCwgaW50XSwgVHVwbGVbZmxvYXQsIGZsb2F0XV0gdGhlIGJvdHRvbSByaWdodCBwb2ludCBvZiBib3VuZGluZyByZWN0YW5nbGV8XG58ZmlsbF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgaW50ZXJyaW9yfFxufGxpbmVfY29sb3J8KHN0cikgY29sb3Igb2Ygb3V0bGluZSBvZiBvdmFsfFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltpbnQsIE5vbmVdIGlkIHJldHVybmVkIGZyb20gdGtpbnRlciB0aGF0IHlvdSdsbCBuZWVkIGlmIHlvdSB3YW50IHRvIG1hbmlwdWxhdGUgdGhlIG92YWwgfFxuXG4jIyMjIERyYXdQb2ludFxuXG5EcmF3cyBhIFwiZG90XCIgYXQgdGhlIHBvaW50IHlvdSBzcGVjaWZ5IHVzaW5nIHRoZSBVU0VSJ1MgY29vcmRpbmF0ZSBzeXN0ZW1cblxuYGBgXG5EcmF3UG9pbnQocG9pbnQsXG4gICAgc2l6ZT0yLFxuICAgIGNvbG9yPVwiYmxhY2tcIilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58cG9pbnR8VW5pb24gW1R1cGxlW2ludCwgaW50XSwgVHVwbGVbZmxvYXQsIGZsb2F0XV0gQ2VudGVyIGxvY2F0aW9uIHVzaW5nIFVTRVInUyBjb29yZGluYXRlIHN5c3RlbXxcbnxzaXplfFVuaW9uW2ludCwgZmxvYXRdIFJhZGl1cz8gKE9yIGlzIGl0IHRoZSBkaWFtZXRlcj8pIGluIHVzZXIncyBjb29yZGluYXRlIHZhbHVlcy58XG58Y29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHBvaW50IHRvIGRyYXd8XG58fHxcbnwgKipyZXR1cm4qKiB8IFVuaW9uW2ludCwgTm9uZV0gaWQgcmV0dXJuZWQgZnJvbSB0a2ludGVyIHRoYXQgeW91J2xsIG5lZWQgaWYgeW91IHdhbnQgdG8gbWFuaXB1bGF0ZSB0aGUgcG9pbnQgfFxuXG4jIyMjIERyYXdSZWN0YW5nbGVcblxuRHJhdyBhIHJlY3RhbmdsZSBnaXZlbiAyIHBvaW50cy4gQ2FuIGNvbnRyb2wgdGhlIGxpbmUgYW5kIGZpbGwgY29sb3JzXG5cbmBgYFxuRHJhd1JlY3RhbmdsZSh0b3BfbGVmdCxcbiAgICBib3R0b21fcmlnaHQsXG4gICAgZmlsbF9jb2xvcj1Ob25lLFxuICAgIGxpbmVfY29sb3I9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9wX2xlZnR8VW5pb25bVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdXSB0aGUgdG9wIGxlZnQgcG9pbnQgb2YgcmVjdGFuZ2xlfFxufGJvdHRvbV9yaWdodHxVbmlvbltUdXBsZVtpbnQsIGludF0sIFR1cGxlW2Zsb2F0LCBmbG9hdF1dIHRoZSBib3R0b20gcmlnaHQgcG9pbnQgb2YgcmVjdGFuZ2xlfFxufGZpbGxfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIGludGVyaW9yfFxufGxpbmVfY29sb3J8KHN0cikgY29sb3Igb2Ygb3V0bGluZXxcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25baW50LCBOb25lXSBpZCByZXR1cm5lZCBmcm9tIHRraW50ZXIgdGhhdCB5b3UnbGwgbmVlZCBpZiB5b3Ugd2FudCB0byBtYW5pcHVsYXRlIHRoZSByZWN0YW5nbGUgfFxuXG4jIyMjIERyYXdUZXh0XG5cbkRyYXcgc29tZSB0ZXh0IG9uIHlvdXIgZ3JhcGguICBUaGlzIGlzIGhvdyB5b3UgbGFiZWwgZ3JhcGggbnVtYmVyIGxpbmVzIGZvciBleGFtcGxlXG5cbmBgYFxuRHJhd1RleHQodGV4dCxcbiAgICBsb2NhdGlvbixcbiAgICBjb2xvcj1cImJsYWNrXCIsXG4gICAgZm9udD1Ob25lLFxuICAgIGFuZ2xlPTAsXG4gICAgdGV4dF9sb2NhdGlvbj1cImNlbnRlclwiKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0ZXh0fChzdHIpIHRleHQgdG8gZGlzcGxheXxcbnxsb2NhdGlvbnxVbmlvbltUdXBsZVtpbnQsIGludF0sIFR1cGxlW2Zsb2F0LCBmbG9hdF1dIGxvY2F0aW9uIHRvIHBsYWNlIGZpcnN0IGxldHRlcnxcbnxjb2xvcnwoc3RyKSB0ZXh0IGNvbG9yfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxhbmdsZXwoZmxvYXQpIEFuZ2xlIDAgdG8gMzYwIHRvIGRyYXcgdGhlIHRleHQuIFplcm8gcmVwcmVzZW50cyBob3Jpem9udGFsIHRleHR8XG58dGV4dF9sb2NhdGlvbnwoZW51bSkgXCJhbmNob3JcIiBsb2NhdGlvbiBmb3IgdGhlIHRleHQuIFZhbHVlcyBzdGFydCB3aXRoIFRFWFRfTE9DQVRJT05ffFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltpbnQsIE5vbmVdIGlkIHJldHVybmVkIGZyb20gdGtpbnRlciB0aGF0IHlvdSdsbCBuZWVkIGlmIHlvdSB3YW50IHRvIG1hbmlwdWxhdGUgdGhlIHRleHQgfFxuXG4jIyMjIEVyYXNlXG5cbkVyYXNlIHRoZSBHcmFwaCAtIFJlbW92ZXMgYWxsIGZpZ3VyZXMgcHJldmlvdXNseSBcImRyYXduXCIgdXNpbmcgdGhlIEdyYXBoIG1ldGhvZHMgKGUuZy4gRHJhd1RleHQpXG5cbmBgYHB5dGhvblxuRXJhc2UoKVxuYGBgXG5cbiMjIyMgTW90aW9uQ2FsbEJhY2tcblxuTm90IGEgdXNlciBjYWxsYWJsZSBtZXRob2QuICBVc2VkIHRvIGdldCBHcmFwaCBtb3VzZSBtb3Rpb24gZXZlbnRzLiBDYWxsZWQgYnkgdGtpbnRlciB3aGVuIG1vdXNlIG1vdmVkXG5cbmBgYFxuTW90aW9uQ2FsbEJhY2soZXZlbnQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGV2ZW50fChldmVudCkgZXZlbnQgaW5mbyBmcm9tIHRraW50ZXIuIENvbnRhaW5zIHRoZSB4IGFuZCB5IGNvb3JkaW5hdGVzIG9mIGEgbW91c2V8XG5cbiMjIyMgTW92ZVxuXG5Nb3ZlcyB0aGUgZW50aXJlIGRyYXdpbmcgYXJlYSAodGhlIGNhbnZhcykgYnkgc29tZSBkZWx0YSBmcm9tIHRoZSBjdXJyZW50IHBvc2l0aW9uLiAgVW5pdHMgYXJlIGluZGljYXRlZCBpbiB5b3VyIGNvb3JkaW5hdGUgc3lzdGVtIGluZGljYXRlZCBudW1iZXIgb2YgdGlja3MgaW4geW91ciBjb29yZGluYXRlIHN5c3RlbVxuXG5gYGBcbk1vdmUoeF9kaXJlY3Rpb24sIHlfZGlyZWN0aW9uKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx4X2RpcmVjdGlvbnxVbmlvbltpbnQsIGZsb2F0XSBob3cgZmFyIHRvIG1vdmUgaW4gdGhlIFwiWFwiIGRpcmVjdGlvbiBpbiB5b3VyIGNvb3JkaW5hdGVzfFxufHlfZGlyZWN0aW9ufFVuaW9uW2ludCwgZmxvYXRdIGhvdyBmYXIgdG8gbW92ZSBpbiB0aGUgXCJZXCIgZGlyZWN0aW9uIGluIHlvdXIgY29vcmRpbmF0ZXN8XG5cbiMjIyMgTW92ZUZpZ3VyZVxuXG5Nb3ZlcyBhIHByZXZpb3VzbHkgZHJhd24gZmlndXJlIHVzaW5nIGEgXCJkZWx0YVwiIGZyb20gY3VycmVudCBwb3NpdGlvblxuXG5gYGBcbk1vdmVGaWd1cmUoZmlndXJlLFxuICAgIHhfZGlyZWN0aW9uLFxuICAgIHlfZGlyZWN0aW9uKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmaWd1cmV8KGlkKSBQcmV2aW91c2x5IG9idGFpbmVkIGZpZ3VyZS1pZC4gVGhlc2UgYXJlIHJldHVybmVkIGZyb20gYWxsIERyYXcgbWV0aG9kc3xcbnx4X2RpcmVjdGlvbnxVbmlvbltpbnQsIGZsb2F0XSBkZWx0YSB0byBhcHBseSB0byBwb3NpdGlvbiBpbiB0aGUgWCBkaXJlY3Rpb258XG58eV9kaXJlY3Rpb258VW5pb25baW50LCBmbG9hdF0gZGVsdGEgdG8gYXBwbHkgdG8gcG9zaXRpb24gaW4gdGhlIFkgZGlyZWN0aW9ufFxuXG4jIyMjIFJlbG9jYXRlRmlndXJlXG5cbk1vdmUgYSBwcmV2aW91c2x5IG1hZGUgZmlndXJlIHRvIGFuIGFyYml0cmFyeSAoeCx5KSBsb2NhdGlvbi4gVGhpcyBkaWZmZXJzIGZyb20gdGhlIE1vdmUgbWV0aG9kcyBiZWNhdXNlIGl0XG51c2VzIGFic29sdXRlIGNvb3JkaW5hdGVzIHZlcnN1cyByZWxhdGl2ZSBmb3IgTW92ZVxuXG5gYGBcblJlbG9jYXRlRmlndXJlKGZpZ3VyZSxcbiAgICB4LFxuICAgIHkpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZpZ3VyZXwoaWQpIFByZXZpb3VzbHkgb2J0YWluZWQgZmlndXJlLWlkLiBUaGVzZSBhcmUgcmV0dXJuZWQgZnJvbSBhbGwgRHJhdyBtZXRob2RzfFxufHh8VW5pb25baW50LCBmbG9hdF0gbG9jYXRpb24gb24gWCBheGlzIChpbiB1c2VyIGNvb3JkcykgdG8gbW92ZSB0aGUgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIGZpZ3VyZXxcbnx5fFVuaW9uW2ludCwgZmxvYXRdIGxvY2F0aW9uIG9uIFkgYXhpcyAoaW4gdXNlciBjb29yZHMpIHRvIG1vdmUgdGhlIHVwcGVyIGxlZnQgY29ybmVyIG9mIHRoZSBmaWd1cmV8XG5cbiMjIyMgU2VuZEZpZ3VyZVRvQmFja1xuXG5DaGFuZ2VzIFotb3JkZXIgb2YgZmlndXJlcyBvbiB0aGUgR3JhcGguICBTZW5kcyB0aGUgaW5kaWNhdGVkIGZpZ3VyZSB0byB0aGUgYmFjayBvZiBhbGwgb3RoZXIgZHJhd24gZmlndXJlc1xuXG5gYGBcblNlbmRGaWd1cmVUb0JhY2soZmlndXJlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmaWd1cmV8KGludCkgdmFsdWUgcmV0dXJuZWQgYnkgdGtpbnRlciB3aGVuIGNyZWF0aW5nIHRoZSBmaWd1cmUgLyBkcmF3aW5nfFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyMgVEtDYW52YXNcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIEdyYXBoIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKGJhY2tncm91bmRfY29sb3I9Tm9uZSwgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxiYWNrZ3JvdW5kX2NvbG9yfGNvbG9yIG9mIGJhY2tncm91bmR8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBJbWFnZSBFbGVtZW50XG5cbiAgICBJbWFnZSBFbGVtZW50IC0gc2hvdyBhbiBpbWFnZSBpbiB0aGUgd2luZG93LiBTaG91bGQgYmUgYSBHSUYgb3IgYSBQTkcgb25seVxuXG5gYGBcbkltYWdlKGZpbGVuYW1lPU5vbmUsXG4gICAgZGF0YT1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgcmlnaHRfY2xpY2tfbWVudT1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmaWxlbmFtZXwoc3RyKSBpbWFnZSBmaWxlbmFtZSBpZiB0aGVyZSBpcyBhIGJ1dHRvbiBpbWFnZS4gR0lGcyBhbmQgUE5HcyBvbmx5LnxcbnxkYXRhfFVuaW9uW2J5dGVzLCBzdHJdIFJhdyBvciBCYXNlNjQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGltYWdlIHRvIHB1dCBvbiBidXR0b24uIENob29zZSBlaXRoZXIgZmlsZW5hbWUgb3IgZGF0YXxcbnxiYWNrZ3JvdW5kX2NvbG9yfGNvbG9yIG9mIGJhY2tncm91bmR8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIHNpemUgb2YgaW1hZ2UgaW4gcGl4ZWxzfFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufHJpZ2h0X2NsaWNrX21lbnV8TGlzdFtMaXN0W1VuaW9uW0xpc3Rbc3RyXSxzdHJdXV0gQSBsaXN0IG9mIGxpc3RzIG9mIE1lbnUgaXRlbXMgdG8gc2hvdyB3aGVuIHRoaXMgZWxlbWVudCBpcyByaWdodCBjbGlja2VkLiBTZWUgdXNlciBkb2NzIGZvciBleGFjdCBmb3JtYXQufFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxufGVuYWJsZV9ldmVudHN8KGJvb2wpIFR1cm5zIG9uIHRoZSBlbGVtZW50IHNwZWNpZmljIGV2ZW50cy4gRm9yIGFuIEltYWdlIGVsZW1lbnQsIHRoZSBldmVudCBpcyBcImltYWdlIGNsaWNrZWRcInxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgSW1hZ2UgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUoZmlsZW5hbWU9Tm9uZSxcbiAgICBkYXRhPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmaWxlbmFtZXwoc3RyKSBmaWxlbmFtZSB0byB0aGUgbmV3IGltYWdlIHRvIGRpc3BsYXkufFxufGRhdGF8KHN0cikgQmFzZTY0IGVuY29kZWQgc3RyaW5nfFxufHNpemV8VHVwbGVbaW50LGludF0gc2l6ZSBvZiBhIGltYWdlICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIyBVcGRhdGVBbmltYXRpb25cblxuU2hvdyBhbiBBbmltYXRlZCBHSUYuIENhbGwgdGhlIGZ1bmN0aW9uIGFzIG9mdGVuIGFzIHlvdSBsaWtlLiBUaGUgZnVuY3Rpb24gd2lsbCBkZXRlcm1pbmUgd2hlbiB0byBzaG93IHRoZSBuZXh0IGZyYW1lIGFuZCB3aWxsIGF1dG9tYXRpY2FsbHkgYWR2YW5jZSB0byB0aGUgbmV4dCBmcmFtZSBhdCB0aGUgcmlnaHQgdGltZS5cbk5PVEUgLSBkb2VzIE5PVCBwZXJmb3JtIGEgc2xlZXAgY2FsbCB0byBkZWxheVxuXG5gYGBcblVwZGF0ZUFuaW1hdGlvbihzb3VyY2UsIHRpbWVfYmV0d2Vlbl9mcmFtZXM9MClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58c291cmNlfFVuaW9uW3N0cixieXRlc10gRmlsZW5hbWUgb3IgQmFzZTY0IGVuY29kZWQgc3RyaW5nIGNvbnRhaW5pbmcgQW5pbWF0ZWQgR0lGfFxufHRpbWVfYmV0d2Vlbl9mcmFtZXN8KGludCkgTnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJldHdlZW4gc2hvd2luZyBmcmFtZXN8XG5cbiMjIyBJbnB1dFRleHQgRWxlbWVudFxuXG4gICAgRGlzcGxheSBhIHNpbmdsZSB0ZXh0IGlucHV0IGZpZWxkLiAgQmFzZWQgb24gdGhlIHRraW50ZXIgV2lkZ2V0IGBFbnRyeWBcblxuYGBgXG5JbnB1dFRleHQoZGVmYXVsdF90ZXh0PVwiXCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgcGFzc3dvcmRfY2hhcj1cIlwiLFxuICAgIGp1c3RpZmljYXRpb249Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBkb19ub3RfY2xlYXI9VHJ1ZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICByaWdodF9jbGlja19tZW51PU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxkZWZhdWx0X3RleHR8KHN0cikgVGV4dCBpbml0aWFsbHkgc2hvd24gaW4gdGhlIGlucHV0IGJveCBhcyBhIGRlZmF1bHQgdmFsdWUoRGVmYXVsdCB2YWx1ZSA9ICcnKXxcbnxzaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGRpc2FibGVkfChib29sKSBzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxwYXNzd29yZF9jaGFyfChjaGFyKSBQYXNzd29yZCBjaGFyYWN0ZXIgaWYgdGhpcyBpcyBhIHBhc3N3b3JkIGZpZWxkIChEZWZhdWx0IHZhbHVlID0gJycpfFxufGp1c3RpZmljYXRpb258KHN0cikganVzdGlmaWNhdGlvbiBmb3IgZGF0YSBkaXNwbGF5LiBWYWxpZCBjaG9pY2VzIC0gbGVmdCwgcmlnaHQsIGNlbnRlcnxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmQgaW4gb25lIG9mIHRoZSBjb2xvciBmb3JtYXRzfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGNoYW5nZV9zdWJtaXRzfChib29sKSAqIERFUFJJQ0FURUQgRE8gTk9UIFVTRSEgU2FtZSBhcyBlbmFibGVfZXZlbnRzfFxufGVuYWJsZV9ldmVudHN8KGJvb2wpIElmIFRydWUgdGhlbiBjaGFuZ2VzIHRvIHRoaXMgZWxlbWVudCBhcmUgaW1tZWRpYXRlbHkgcmVwb3J0ZWQgYXMgYW4gZXZlbnQuIFVzZSB0aGlzIGluc3RlYWQgb2YgY2hhbmdlX3N1Ym1pdHMgKERlZmF1bHQgPSBGYWxzZSl8XG58ZG9fbm90X2NsZWFyfChib29sKSBJZiBGYWxzZSB0aGVuIHRoZSBmaWVsZCB3aWxsIGJlIHNldCB0byBibGFuayBhZnRlciBBTlkgZXZlbnQgKGJ1dHRvbiwgYW55IGV2ZW50KSAoRGVmYXVsdCA9IFRydWUpfFxufGtleXwoYW55KSBWYWx1ZSB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhpcyBlbGVtZW50IGZyb20gYWxsIG90aGVyIGVsZW1lbnRzLiBVc2VkIHdoZW4gRmluZGluZyBhbiBlbGVtZW50IG9yIGluIHJldHVybiB2YWx1ZXMuIE11c3QgYmUgdW5pcXVlIHRvIHRoZSB3aW5kb3d8XG58Zm9jdXN8KGJvb2wpIERldGVybWluZXMgaWYgaW5pdGlhbCBmb2N1cyBzaG91bGQgZ28gdG8gdGhpcyBlbGVtZW50LnxcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwgKGludCwgaW50KSkgVHVwbGUocykuIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudC4gTm9ybWFsbHkgKGhvcml6b250YWwgcGl4ZWxzLCB2ZXJ0aWNhbCBwaXhlbHMpIGJ1dCBjYW4gYmUgc3BsaXQgYXBhcnQgZnVydGhlciBpbnRvICgoaG9yaXpvbnRhbCBsZWZ0LCBob3Jpem9udGFsIHJpZ2h0KSwgKHZlcnRpY2FsIGFib3ZlLCB2ZXJ0aWNhbCBiZWxvdykpfFxufHJpZ2h0X2NsaWNrX21lbnV8TGlzdFtMaXN0W1VuaW9uW0xpc3Rbc3RyXSxzdHJdXV0gQSBsaXN0IG9mIGxpc3RzIG9mIE1lbnUgaXRlbXMgdG8gc2hvdyB3aGVuIHRoaXMgZWxlbWVudCBpcyByaWdodCBjbGlja2VkLiBTZWUgdXNlciBkb2NzIGZvciBleGFjdCBmb3JtYXQufFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50IChEZWZhdWx0ID0gVHJ1ZSl8XG5cbiMjIyMgR2V0XG5cblJlYWQgYW5kIHJldHVybiB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQgZWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCAoc3RyKSBjdXJyZW50IHZhbHVlIG9mIElucHV0IGZpZWxkIG9yICcnIGlmIGVycm9yIGVuY291bnRlcmVkIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgSW5wdXQgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmFsdWU9Tm9uZSxcbiAgICBkaXNhYmxlZD1Ob25lLFxuICAgIHNlbGVjdD1Ob25lLFxuICAgIHZpc2libGU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmFsdWV8KHN0cikgbmV3IHRleHQgdG8gZGlzcGxheSBhcyBkZWZhdWx0IHRleHQgaW4gSW5wdXQgZmllbGR8XG58ZGlzYWJsZWR8KGJvb2wpIGRpc2FibGUgb3IgZW5hYmxlIHN0YXRlIG9mIHRoZSBlbGVtZW50IChzZXRzIEVudHJ5IFdpZGdldCB0byByZWFkb25seSBvciBub3JtYWwpfFxufHNlbGVjdHwoYm9vbCkgaWYgVHJ1ZSwgdGhlbiB0aGUgdGV4dCB3aWxsIGJlIHNlbGVjdGVkfFxufHZpc2libGV8KGJvb2wpIGNoYW5nZSB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBMaXN0Ym94IEVsZW1lbnRcblxuICAgIEEgTGlzdCBCb3guICBQcm92aWRlIGEgbGlzdCBvZiB2YWx1ZXMgZm9yIHRoZSB1c2VyIHRvIGNob29zZSBvbmUgb3IgbW9yZSBvZi4gICBSZXR1cm5zIGEgbGlzdCBvZiBzZWxlY3RlZCByb3dzXG4gICAgd2hlbiBhIHdpbmRvdy5SZWFkKCkgaXMgZXhlY3V0ZWQuXG5cbmBgYFxuTGlzdGJveCh2YWx1ZXMsXG4gICAgZGVmYXVsdF92YWx1ZXM9Tm9uZSxcbiAgICBzZWxlY3RfbW9kZT1Ob25lLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGF1dG9fc2l6ZV90ZXh0PU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3Njcm9sbGJhcj1GYWxzZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGtleT1Ob25lLFxuICAgIHBhZD1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICByaWdodF9jbGlja19tZW51PU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXN8TGlzdFtBbnldIGxpc3Qgb2YgdmFsdWVzIHRvIGRpc3BsYXkuIENhbiBiZSBhbnkgdHlwZSBpbmNsdWRpbmcgbWl4ZWQgdHlwZXMgYXMgbG9uZyBhcyB0aGV5IGhhdmUgX19zdHJfXyBtZXRob2R8XG58ZGVmYXVsdF92YWx1ZXN8TGlzdFtBbnldIHdoaWNoIHZhbHVlcyBzaG91bGQgYmUgaW5pdGlhbGx5IHNlbGVjdGVkfFxufHNlbGVjdF9tb2RlfFtlbnVtXSBTZWxlY3QgbW9kZXMgYXJlIHVzZWQgdG8gZGV0ZXJtaW5lIGlmIG9ubHkgMSBpdGVtIGNhbiBiZSBzZWxlY3RlZCBvciBtdWx0aXBsZSBhbmQgaG93IHRoZXkgY2FuIGJlIHNlbGVjdGVkLiBWYWxpZCBjaG9pY2VzIGJlZ2luIHdpdGggXCJMSVNUQk9YX1NFTEVDVF9NT0RFX1wiIGFuZCBpbmNsdWRlOiBMSVNUQk9YX1NFTEVDVF9NT0RFX1NJTkdMRSBMSVNUQk9YX1NFTEVDVF9NT0RFX01VTFRJUExFIExJU1RCT1hfU0VMRUNUX01PREVfQlJPV1NFIExJU1RCT1hfU0VMRUNUX01PREVfRVhURU5ERUR8XG58Y2hhbmdlX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIExpc3Rib3ggZ2VuZXJhdGVzIGV2ZW50cyB3aGVuIGFuIGl0ZW0gaXMgY2xpY2tlZHxcbnxiaW5kX3JldHVybl9rZXl8KGJvb2wpIElmIFRydWUsIHRoZW4gdGhlIHJldHVybiBrZXkgd2lsbCBjYXVzZSBhIHRoZSBMaXN0Ym94IHRvIGdlbmVyYXRlIGFuIGV2ZW50fFxufHNpemV8VHVwbGUoaW50LCBpbnQpICh3aWR0aCwgaGVpZ2h0KSB3aWR0aCA9IGNoYXJhY3RlcnMtd2lkZSwgaGVpZ2h0ID0gcm93cy1oaWdofFxufGRpc2FibGVkfChib29sKSBzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudHxcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgVHJ1ZSBpZiBlbGVtZW50IHNob3VsZCBiZSB0aGUgc2FtZSBzaXplIGFzIHRoZSBjb250ZW50c3xcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxyaWdodF9jbGlja19tZW51fExpc3RbTGlzdFtVbmlvbltMaXN0W3N0cl0sc3RyXV1dIEEgbGlzdCBvZiBsaXN0cyBvZiBNZW51IGl0ZW1zIHRvIHNob3cgd2hlbiB0aGlzIGVsZW1lbnQgaXMgcmlnaHQgY2xpY2tlZC4gU2VlIHVzZXIgZG9jcyBmb3IgZXhhY3QgZm9ybWF0Lnxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBHZXRMaXN0VmFsdWVzXG5cblJldHVybnMgbGlzdCBvZiBWYWx1ZXMgcHJvdmlkZWQgYnkgdGhlIHVzZXIgaW4gdGhlIHVzZXIncyBmb3JtYXRcblxuYEdldExpc3RWYWx1ZXMoKWBcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCAqKnJldHVybioqIHwgTGlzdFtBbnldLiBMaXN0IG9mIHZhbHVlcy4gQ2FuIGJlIGFueSAvIG1peGVkIHR5cGVzIC0+IFtdIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFNldFZhbHVlXG5cblNldCBsaXN0Ym94IGhpZ2hsaWdodGVkIGNob2ljZXNcblxuYGBgXG5TZXRWYWx1ZSh2YWx1ZXMpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlc3xMaXN0W0FueV0gbmV3IHZhbHVlcyB0byBjaG9vc2UgYmFzZWQgb24gcHJldmlvdXNseSBzZXQgdmFsdWVzfFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgTGlzdGJveCBFbGVtZW50LiBNdXN0IGNhbGwgYFdpbmRvdy5SZWFkYCBvciBgV2luZG93LkZpbmFsaXplYCBwcmlvclxuXG5gYGBcblVwZGF0ZSh2YWx1ZXM9Tm9uZSxcbiAgICBkaXNhYmxlZD1Ob25lLFxuICAgIHNldF90b19pbmRleD1Ob25lLFxuICAgIHNjcm9sbF90b19pbmRleD1Ob25lLFxuICAgIHZpc2libGU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmFsdWVzfExpc3RbQW55XSBuZXcgbGlzdCBvZiBjaG9pY2VzIHRvIGJlIHNob3duIHRvIHVzZXJ8XG58ZGlzYWJsZWR8KGJvb2wpIGRpc2FibGUgb3IgZW5hYmxlIHN0YXRlIG9mIHRoZSBlbGVtZW50fFxufHNldF90b19pbmRleHxVbmlvbltpbnQsIGxpc3QsIHR1cGxlXSBoaWdobGlnaHRzIHRoZSBpdGVtKHMpIGluZGljYXRlZC4gSWYgcGFybSBpcyBhbiBpbnQgb25lIGVudHJ5IHdpbGwgYmUgc2V0LiBJZiBpcyBhIGxpc3QsIHRoZW4gZWFjaCBlbnRyeSBpbiBsaXN0IGlzIGhpZ2hsaWdodGVkfFxufHNjcm9sbF90b19pbmRleHwoaW50KSBzY3JvbGwgdGhlIGxpc3Rib3ggc28gdGhhdCB0aGlzIGluZGV4IGlzIHRoZSBmaXJzdCBzaG93bnxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIE1lbnUgRWxlbWVudFxuXG4gICAgTWVudSBFbGVtZW50IGlzIHRoZSBFbGVtZW50IHRoYXQgcHJvdmlkZXMgYSBNZW51IEJhciB0aGF0IGdvZXMgYWNyb3NzIHRoZSB0b3Agb2YgdGhlIHdpbmRvdywganVzdCBiZWxvdyB0aXRsZWJhci5cbiAgICBIZXJlIGlzIGFuIGV4YW1wbGUgbGF5b3V0LiAgVGhlIFwiJlwiIGFyZSBzaG9ydGN1dCBrZXlzIEFMVCtrZXkuXG4gICAgSXMgYSBMaXN0IG9mIC0gIFwiSXRlbSBTdHJpbmdcIiArIExpc3RcbiAgICBXaGVyZSBJdGVtIFN0cmluZyBpcyB3aGF0IHdpbGwgYmUgZGlzcGxheWVkIG9uIHRoZSBNZW51YmFyIGl0c2VsZi5cbiAgICBUaGUgTGlzdCB0aGF0IGZvbGxvd3MgdGhlIGl0ZW0gcmVwcmVzZW50cyB0aGUgaXRlbXMgdGhhdCBhcmUgc2hvd24gdGhlbiBNZW51IGl0ZW0gaXMgY2xpY2tlZFxuICAgIE5vdGljZSBob3cgYW4gXCJlbnRyeVwiIGluIGEgbWVubnUgY2FuIGJlIGEgbGlzdCB3aGljaCBtZWFucyBpdCBicmFuY2hlcyBvdXQgYW5kIHNob3dzIGFub3RoZXIgbWVudSwgZXRjLiAocmVzdXJzaXZlKVxuICAgIG1lbnVfZGVmID0gW1snJkZpbGUnLCBbJyEmT3BlbicsICcmU2F2ZTo6c2F2ZWtleScsICctLS0nLCAnJlByb3BlcnRpZXMnLCAnRSZ4aXQnXV0sXG4gICAgICAgICAgICAgICAgWychJkVkaXQnLCBbJyEmUGFzdGUnLCBbJ1NwZWNpYWwnLCAnTm9ybWFsJywgXSwgJ1VuZG8nXSwgXSxcbiAgICAgICAgICAgICAgICBbJyZEZWJ1Z2dlcicsIFsnUG9wb3V0JywgJ0xhdW5jaCBEZWJ1Z2dlciddXSxcbiAgICAgICAgICAgICAgICBbJyZUb29sYmFyJywgWydDb21tYW5kICYxJywgJ0NvbW1hbmQgJjInLCAnQ29tbWFuZCAmMycsICdDb21tYW5kICY0J11dLFxuICAgICAgICAgICAgICAgIFsnJkhlbHAnLCAnJkFib3V0Li4uJ10sIF1cbiAgICBGaW5hbGx5LCBcImtleXNcIiBjYW4gYmUgYWRkZWQgdG8gZW50cmllcyBzbyBtYWtlIHRoZW0gdW5pcXVlLiAgVGhlIFwiU2F2ZVwiIGVudHJ5IGhhcyBhIGtleSBhc3NvY2lhdGVkIHdpdGggaXQuIFlvdVxuICAgIGNhbiBzZWUgaXQgaGFzIGEgXCI6OlwiIHdoaWNoIHNpZ25pZmllcyB0aGUgYmVnaW5uaW5nIG9mIGEga2V5LiAgVGhlIHVzZXIgd2lsbCBub3Qgc2VlIHRoZSBrZXkgcG9ydGlvbiB3aGVuIHRoZVxuICAgIG1lbnUgaXMgc2hvd24uICBUaGUga2V5IHBvcnRpb24gaXMgcmV0dXJuZWQgYXMgcGFydCBvZiB0aGUgZXZlbnQuXG5cbmBgYFxuTWVudShtZW51X2RlZmluaXRpb24sXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIHRlYXJvZmY9RmFsc2UsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxtZW51X2RlZmluaXRpb258TGlzdFtMaXN0W1R1cGxlW3N0ciwgTGlzdFtzdHJdXV18XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgYmFja2dyb3VuZHxcbnxzaXplfFR1cGxlW2ludCwgaW50XSBOb3QgdXNlZCBpbiB0aGUgdGtpbnRlciBwb3J0fFxufHRlYXJvZmZ8KGJvb2wpIGlmIFRydWUsIHRoZW4gY2FuIHRlYXIgdGhlIG1lbnUgb2ZmIGZyb20gdGhlIHdpbmRvdyBhbnMgdXNlIGFzIGEgZmxvYXRpbmcgd2luZG93LiBWZXJ5IGNvb2wgZWZmZWN0fFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58a2V5fChhbnkpIFZhbHVlIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIGVsZW1lbnQgZnJvbSBhbGwgb3RoZXIgZWxlbWVudHMuIFVzZWQgd2hlbiBGaW5kaW5nIGFuIGVsZW1lbnQgb3IgaW4gcmV0dXJuIHZhbHVlcy4gTXVzdCBiZSB1bmlxdWUgdG8gdGhlIHdpbmRvd3xcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5VcGRhdGUgYSBtZW51YmFyIC0gY2FuIGNoYW5nZSB0aGUgbWVudSBkZWZpbml0aW9uIGFuZCB2aXNpYmlsaXR5LiAgVGhlIGVudGlyZSBtZW51IGhhcyB0byBiZSBzcGVjaWZpZWRcblxuYGBgXG5VcGRhdGUobWVudV9kZWZpbml0aW9uPU5vbmUsIHZpc2libGU9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58bWVudV9kZWZpbml0aW9ufExpc3RbTGlzdFtUdXBsZVtzdHIsIExpc3Rbc3RyXV1dfFxufHZpc2libGV8KGJvb2wpIGNvbnRyb2wgdmlzaWJpbGl0eSBvZiBlbGVtZW50fFxuXG4jIyMgTXVsdGlsaW5lIEVsZW1lbnRcblxuICAgIE11bHRpbGluZSBFbGVtZW50IC0gRGlzcGxheSBhbmQvb3IgcmVhZCBtdWx0aXBsZSBsaW5lcyBvZiB0ZXh0LiAgVGhpcyBpcyBib3RoIGFuIGlucHV0IGFuZCBvdXRwdXQgZWxlbWVudC5cbiAgICBPdGhlciBQeVNpbXBsZUdVSSBwb3J0cyBoYXZlIGEgc2VwYXJhdGUgTXVsdGlsaW5lSW5wdXQgYW5kIE11bHRpbGluZU91dHB1dCBlbGVtZW50cy4gIE1heSB3YW50IHRvIHNwbGl0IHRoaXNcbiAgICBvbmUgdXAgaW4gdGhlIGZ1dHVyZSB0b28uXG5cbmBgYFxuTXVsdGlsaW5lKGRlZmF1bHRfdGV4dD1cIlwiLFxuICAgIGVudGVyX3N1Ym1pdHM9RmFsc2UsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgYXV0b3Njcm9sbD1GYWxzZSxcbiAgICBib3JkZXJfd2lkdGg9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfdGV4dD1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBkb19ub3RfY2xlYXI9VHJ1ZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHJpZ2h0X2NsaWNrX21lbnU9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGRlZmF1bHRfdGV4dHwoc3RyKSBJbml0aWFsIHRleHQgdG8gc2hvd3xcbnxlbnRlcl9zdWJtaXRzfChib29sKSBpZiBUcnVlLCB0aGUgV2luZG93LlJlYWQgY2FsbCB3aWxsIHJldHVybiBpcyBlbnRlciBrZXkgaXMgcHJlc3NlZCBpbiB0aGlzIGVsZW1lbnR8XG58ZGlzYWJsZWR8KGJvb2wpIHNldCBkaXNhYmxlIHN0YXRlfFxufGF1dG9zY3JvbGx8KGJvb2wpIElmIFRydWUgdGhlIGNvbnRlbnRzIG9mIHRoZSBlbGVtZW50IHdpbGwgYXV0b21hdGljYWxseSBzY3JvbGwgYXMgbW9yZSBkYXRhIGFkZGVkIHRvIHRoZSBlbmR8XG58Ym9yZGVyX3dpZHRofChpbnQpIHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudCBpbiBwaXhlbHN8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIHdpZHRoID0gY2hhcmFjdGVycy13aWRlLCBoZWlnaHQgPSByb3dzLWhpZ2h8XG58YXV0b19zaXplX3RleHR8KGJvb2wpIGlmIFRydWUgd2lsbCBzaXplIHRoZSBlbGVtZW50IHRvIG1hdGNoIHRoZSBsZW5ndGggb2YgdGhlIHRleHR8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58Y2hhbmdlX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIFNwaW4gZXZlbnRzIGhhcHBlbiB3aGVuIGFuIGl0ZW0gY2hhbmdlc3xcbnxkb19ub3RfY2xlYXJ8aWYgRmFsc2UgdGhlIGVsZW1lbnQgd2lsbCBiZSBjbGVhcmVkIGFueSB0aW1lIHRoZSBXaW5kb3cuUmVhZCBjYWxsIHJldHVybnN8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufGZvY3VzfChib29sKSBpZiBUcnVlIGluaXRpYWwgZm9jdXMgd2lsbCBnbyB0byB0aGlzIGVsZW1lbnR8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58cmlnaHRfY2xpY2tfbWVudXxMaXN0W0xpc3RbVW5pb25bTGlzdFtzdHJdLHN0cl1dXSBBIGxpc3Qgb2YgbGlzdHMgb2YgTWVudSBpdGVtcyB0byBzaG93IHdoZW4gdGhpcyBlbGVtZW50IGlzIHJpZ2h0IGNsaWNrZWQuIFNlZSB1c2VyIGRvY3MgZm9yIGV4YWN0IGZvcm1hdC58XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG5cbiMjIyMgR2V0XG5cblJldHVybiBjdXJyZW50IGNvbnRlbnRzIG9mIHRoZSBNdWx0aWxpbmUgRWxlbWVudFxuXG5gR2V0KClgXG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwgKipyZXR1cm4qKiB8IChzdHIpIGN1cnJlbnQgY29udGVudHMgb2YgdGhlIE11bHRpbGluZSBFbGVtZW50ICh1c2VkIGFzIGFuIGlucHV0IHR5cGUgb2YgTXVsdGlsaW5lIHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgTXVsdGlsaW5lIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlPU5vbmUsXG4gICAgZGlzYWJsZWQ9Tm9uZSxcbiAgICBhcHBlbmQ9RmFsc2UsXG4gICAgZm9udD1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lLFxuICAgIGF1dG9zY3JvbGw9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmFsdWV8KHN0cikgbmV3IHRleHQgdG8gZGlzcGxheXxcbnxkaXNhYmxlZHwoYm9vbCkgZGlzYWJsZSBvciBlbmFibGUgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG58YXBwZW5kfChib29sKSBpZiBUcnVlIHRoZW4gbmV3IHZhbHVlIHdpbGwgYmUgYWRkZWQgb250byB0aGUgZW5kIG9mIHRoZSBjdXJyZW50IHZhbHVlLiBpZiBGYWxzZSB0aGVuIGNvbnRlbnRzIHdpbGwgYmUgcmVwbGFjZWQufFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSB0ZXh0fFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgY29sb3Igb2YgYmFja2dyb3VuZHxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcbnxhdXRvc2Nyb2xsfChib29sKSBpZiBUcnVlIHRoZW4gY29udGVudHMgb2YgZWxlbWVudCBhcmUgc2Nyb2xsZWQgZG93biB3aGVuIG5ldyB0ZXh0IGlzIGFkZGVkIHRvIHRoZSBlbmR8XG5cbiMjIyBPcHRpb25NZW51IEVsZW1lbnRcblxuICAgIE9wdGlvbiBNZW51IGlzIGFuIEVsZW1lbnQgYXZhaWxhYmxlIE9OTFkgb24gdGhlIHRraW50ZXIgcG9ydCBvZiBQeVNpbXBsZUdVSS4gIEl0J3MgaXMgYSB3aWRnZXQgdGhhdCBpcyB1bmlxdWVcbiAgICB0byB0a2ludGVyLiAgSG93ZXZlciwgaXQgbG9va3MgbXVjaCBsaWtlIGEgQ29tYm9Cb3guICBJbnN0ZWFkIG9mIGFuIGFycm93IHRvIGNsaWNrIHRvIHB1bGwgZG93biB0aGUgbGlzdCBvZlxuICAgIGNob2ljZXMsIGFub3RoZXIgbGl0dGxlIGdyYXBoaWMgaXMgc2hvd24gb24gdGhlIHdpZGdldCB0byBpbmRpY2F0ZSB3aGVyZSB5b3UgY2xpY2suICBBZnRlciBjbGlja2luZyB0byBhY3RpdmF0ZSxcbiAgICBpdCBsb29rcyBsaWtlIGEgQ29tYm8gQm94IHRoYXQgeW91IHNjcm9sbCB0byBzZWxlY3QgYSBjaG9pY2UuXG5cbmBgYFxuT3B0aW9uTWVudSh2YWx1ZXMsXG4gICAgZGVmYXVsdF92YWx1ZT1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGF1dG9fc2l6ZV90ZXh0PU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXN8TGlzdFtBbnldIFZhbHVlcyB0byBiZSBkaXNwbGF5ZWR8XG58ZGVmYXVsdF92YWx1ZXwoQW55KSB0aGUgdmFsdWUgdG8gY2hvb3NlIGJ5IGRlZmF1bHR8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIHNpemUgaW4gY2hhcmFjdGVycyAod2lkZSkgYW5kIHJvd3MgKGhpZ2gpfFxufGRpc2FibGVkfChib29sKSBjb250cm9sIGVuYWJsZWQgLyBkaXNhYmxlZHxcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgVHJ1ZSBpZiBzaXplIG9mIEVsZW1lbnQgc2hvdWxkIG1hdGNoIHRoZSBjb250ZW50cyBvZiB0aGUgaXRlbXN8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoaXMgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgT3B0aW9uTWVudSBFbGVtZW50LiBNdXN0IGNhbGwgYFdpbmRvdy5SZWFkYCBvciBgV2luZG93LkZpbmFsaXplYCBwcmlvclxuXG5gYGBcblVwZGF0ZSh2YWx1ZT1Ob25lLFxuICAgIHZhbHVlcz1Ob25lLFxuICAgIGRpc2FibGVkPU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXwoQW55KSB0aGUgdmFsdWUgdG8gY2hvb3NlIGJ5IGRlZmF1bHR8XG58dmFsdWVzfExpc3RbQW55XSBWYWx1ZXMgdG8gYmUgZGlzcGxheWVkfFxufGRpc2FibGVkfChib29sKSBkaXNhYmxlIG9yIGVuYWJsZSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIE91dHB1dCBFbGVtZW50XG5cbiAgICBPdXRwdXQgRWxlbWVudCAtIGEgbXVsdGktbGluZWQgdGV4dCBhcmVhIHdoZXJlIHN0ZG91dCBhbmQgc3RkZXJyIGFyZSByZS1yb3V0ZWQgdG8uXG5cbmBgYFxuT3V0cHV0KHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICByaWdodF9jbGlja19tZW51PU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxzaXplfFR1cGxlW2ludCwgaW50XSAodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHJpZ2h0X2NsaWNrX21lbnV8TGlzdFtMaXN0W1VuaW9uW0xpc3Rbc3RyXSxzdHJdXV0gQSBsaXN0IG9mIGxpc3RzIG9mIE1lbnUgaXRlbXMgdG8gc2hvdyB3aGVuIHRoaXMgZWxlbWVudCBpcyByaWdodCBjbGlja2VkLiBTZWUgdXNlciBkb2NzIGZvciBleGFjdCBmb3JtYXQufFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxuXG4jIyMjIEdldFxuXG5SZXR1cm5zIHRoZSBjdXJyZW50IGNvbnRlbnRzIG9mIHRoZSBvdXRwdXQuICBTaW1pbGFyIHRvIEdldCBtZXRob2Qgb3RoZXIgRWxlbWVudHNcblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCAoc3RyKSB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgb3V0cHV0IHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFRLT3V0XG5cbiMjIyMgVXBkYXRlXG5cbkNoYW5nZXMgc29tZSBvZiB0aGUgc2V0dGluZ3MgZm9yIHRoZSBPdXRwdXQgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmFsdWU9Tm9uZSwgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXwoc3RyKSBzdHJpbmcgdGhhdCB3aWxsIHJlcGxhY2UgY3VycmVudCBjb250ZW50cyBvZiB0aGUgb3V0cHV0IGFyZWF8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBQYW5lIEVsZW1lbnRcblxuICAgIEEgc2xpZGluZyBQYW5lIHRoYXQgaXMgdW5pcXVlIHRvIHRraW50ZXIuICBVc2VzIENvbHVtbnMgdG8gY3JlYXRlIGluZGl2aWR1YWwgcGFuZXNcblxuYGBgXG5QYW5lKHBhbmVfbGlzdCxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgcGFkPU5vbmUsXG4gICAgb3JpZW50YXRpb249XCJ2ZXJ0aWNhbFwiLFxuICAgIHNob3dfaGFuZGxlPVRydWUsXG4gICAgcmVsaWVmPVwicmFpc2VkXCIsXG4gICAgaGFuZGxlX3NpemU9Tm9uZSxcbiAgICBib3JkZXJfd2lkdGg9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHBhbmVfbGlzdHxMaXN0W0NvbHVtbl0gTXVzdCBiZSBhIGxpc3Qgb2YgQ29sdW1uIEVsZW1lbnRzLiBFYWNoIENvbHVtbiBzdXBwbGllZCBiZWNvbWVzIG9uZSBwYW5lIHRoYXQncyBzaG93bnxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdoIEhvdyBtdWNoIHJvb20gdG8gcmVzZXJ2ZSBmb3IgdGhlIFBhbmV8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxvcmllbnRhdGlvbnwoc3RyKSAnaG9yaXpvbnRhbCcgb3IgJ3ZlcnRpY2FsJyBvciAoJ2gnIG9yICd2JykuIERpcmVjdGlvbiB0aGUgUGFuZSBzaG91bGQgc2xpZGV8XG58c2hvd19oYW5kbGV8KGJvb2wpIGlmIFRydWUsIHRoZSBoYW5kbGUgaXMgZHJhd24gdGhhdCBtYWtlcyBpdCBlYXNpZXIgdG8gZ3JhYiBhbmQgc2xpZGV8XG58cmVsaWVmfChlbnVtKSByZWxpZWYgc3R5bGUuIFZhbHVlcyBhcmUgc2FtZSBhcyBvdGhlciBlbGVtZW50cyB0aGF0IHVzZSByZWxpZWYgdmFsdWVzLiBSRUxJRUZfUkFJU0VEIFJFTElFRl9TVU5LRU4gUkVMSUVGX0ZMQVQgUkVMSUVGX1JJREdFIFJFTElFRl9HUk9PVkUgUkVMSUVGX1NPTElEfFxufGhhbmRsZV9zaXplfChpbnQpIFNpemUgb2YgdGhlIGhhbmRsZSBpbiBwaXhlbHN8XG58Ym9yZGVyX3dpZHRofChpbnQpIHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudCBpbiBwaXhlbHN8XG58a2V5fChhbnkpIFZhbHVlIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIGVsZW1lbnQgZnJvbSBhbGwgb3RoZXIgZWxlbWVudHMuIFVzZWQgd2hlbiBGaW5kaW5nIGFuIGVsZW1lbnQgb3IgaW4gcmV0dXJuIHZhbHVlcy4gTXVzdCBiZSB1bmlxdWUgdG8gdGhlIHdpbmRvd3xcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgUGFuZSBFbGVtZW50LiBNdXN0IGNhbGwgYFdpbmRvdy5SZWFkYCBvciBgV2luZG93LkZpbmFsaXplYCBwcmlvclxuXG5gYGBcblVwZGF0ZSh2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZpc2libGV8KGJvb2wpIGNvbnRyb2wgdmlzaWJpbGl0eSBvZiBlbGVtZW50fFxuXG4jIyMgUHJvZ3Jlc3NCYXIgRWxlbWVudFxuXG4gICAgUHJvZ3Jlc3MgQmFyIEVsZW1lbnQgLSBEaXNwbGF5cyBhIGNvbG9yZWQgYmFyIHRoYXQgaXMgc2hhZGVkIGFzIHByb2dyZXNzIG9mIHNvbWUgb3BlcmF0aW9uIGlzIG1hZGVcblxuYGBgXG5Qcm9ncmVzc0JhcihtYXhfdmFsdWUsXG4gICAgb3JpZW50YXRpb249Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfdGV4dD1Ob25lLFxuICAgIGJhcl9jb2xvcj0oTm9uZSwgTm9uZSksXG4gICAgc3R5bGU9Tm9uZSxcbiAgICBib3JkZXJfd2lkdGg9Tm9uZSxcbiAgICByZWxpZWY9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufG1heF92YWx1ZXwoaW50KSBtYXggdmFsdWUgb2YgcHJvZ3Jlc3NiYXJ8XG58b3JpZW50YXRpb258KHN0cikgJ2hvcml6b250YWwnIG9yICd2ZXJ0aWNhbCd8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gU2l6ZSBvZiB0aGUgYmFyLiBJZiBob3Jpem9udGFsIChjaGFycyB3aWRlLCBwaXhlbHMgaGlnaCksIHZlcnQgKHBpeGVscyB3aWRlLCByb3dzIGhpZ2gpfFxufGF1dG9fc2l6ZV90ZXh0fChib29sKSBOb3Qgc3VyZSB3aHkgdGhpcyBpcyBoZXJlfFxufGJhcl9jb2xvcnxUdXBsZVtzdHIsIHN0cl0gVGhlIDIgY29sb3JzIHRoYXQgbWFrZSB1cCBhIHByb2dyZXNzIGJhci4gT25lIGlzIHRoZSBiYWNrZ3JvdW5kLCB0aGUgb3RoZXIgaXMgdGhlIGJhcnxcbnxzdHlsZXwoc3RyKSBQcm9ncmVzcyBiYXIgc3R5bGUgZGVmaW5lZCBhcyBvbmUgb2YgdGhlc2UgJ2RlZmF1bHQnLCAnd2lubmF0aXZlJywgJ2NsYW0nLCAnYWx0JywgJ2NsYXNzaWMnLCAndmlzdGEnLCAneHBuYXRpdmUnfFxufGJvcmRlcl93aWR0aHwoaW50KSBUaGUgYW1vdW50IG9mIHBpeGVscyB0aGF0IGdvIGFyb3VuZCB0aGUgb3V0c2lkZSBvZiB0aGUgYmFyfFxufHJlbGllZnwoc3RyKSByZWxpZWYgc3R5bGUuIFZhbHVlcyBhcmUgc2FtZSBhcyBwcm9ncmVzcyBtZXRlciByZWxpZWYgdmFsdWVzLiBDYW4gYmUgYSBjb25zdGFudCBvciBhIHN0cmluZzogYFJFTElFRl9SQUlTRUQgUkVMSUVGX1NVTktFTiBSRUxJRUZfRkxBVCBSRUxJRUZfUklER0UgUkVMSUVGX0dST09WRSBSRUxJRUZfU09MSURgIChEZWZhdWx0IHZhbHVlID0gREVGQVVMVF9QUk9HUkVTU19CQVJfUkVMSUVGKXxcbnxrZXl8KEFueSkgVXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgUHJvZ3Jlc3NCYXIgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIyBVcGRhdGVCYXJcblxuQ2hhbmdlIHdoYXQgdGhlIGJhciBzaG93cyBieSBjaGFuZ2luZyB0aGUgY3VycmVudCBjb3VudCBhbmQgb3B0aW9uYWxseSB0aGUgbWF4IGNvdW50XG5cbmBgYFxuVXBkYXRlQmFyKGN1cnJlbnRfY291bnQsIG1heD1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxjdXJyZW50X2NvdW50fChpbnQpIHNldHMgdGhlIGN1cnJlbnQgdmFsdWV8XG58bWF4fChpbnQpIGNoYW5nZXMgdGhlIG1heCB2YWx1ZXxcblxuIyMjIFJhZGlvIEVsZW1lbnRcblxuICAgIFJhZGlvIEJ1dHRvbiBFbGVtZW50IC0gVXNlZCBpbiBhIGdyb3VwIG9mIG90aGVyIFJhZGlvIEVsZW1lbnRzIHRvIHByb3ZpZGUgdXNlciB3aXRoIGFiaWxpdHkgdG8gc2VsZWN0IG9ubHlcbiAgICAxIGNob2ljZSBpbiBhIGxpc3Qgb2YgY2hvaWNlcy5cblxuYGBgXG5SYWRpbyh0ZXh0LFxuICAgIGdyb3VwX2lkLFxuICAgIGRlZmF1bHQ9RmFsc2UsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX3RleHQ9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICB2aXNpYmxlPVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRleHR8KHN0cikgVGV4dCB0byBkaXNwbGF5IG5leHQgdG8gYnV0dG9ufFxufGdyb3VwX2lkfChBbnkpIEdyb3VwcyB0b2dldGhlciBtdWx0aXBsZSBSYWRpbyBCdXR0b25zLiBBbnkgdHlwZSB3b3Jrc3xcbnxkZWZhdWx0fChib29sKS4gU2V0IHRvIFRydWUgZm9yIHRoZSBvbmUgZWxlbWVudCBvZiB0aGUgZ3JvdXAgeW91IHdhbnQgaW5pdGlhbGx5IHNlbGVjdGVkfFxufGRpc2FibGVkfChib29sKSBzZXQgZGlzYWJsZSBzdGF0ZXxcbnxzaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgd2lkdGggPSBjaGFyYWN0ZXJzLXdpZGUsIGhlaWdodCA9IHJvd3MtaGlnaHxcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgaWYgVHJ1ZSB3aWxsIHNpemUgdGhlIGVsZW1lbnQgdG8gbWF0Y2ggdGhlIGxlbmd0aCBvZiB0aGUgdGV4dHxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58dGV4dF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgdGV4dHxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxjaGFuZ2Vfc3VibWl0c3woYm9vbCkgRE8gTk9UIFVTRS4gT25seSBsaXN0ZWQgZm9yIGJhY2t3YXJkcyBjb21wYXQgLSBVc2UgZW5hYmxlX2V2ZW50cyBpbnN0ZWFkfFxufGVuYWJsZV9ldmVudHN8KGJvb2wpIFR1cm5zIG9uIHRoZSBlbGVtZW50IHNwZWNpZmljIGV2ZW50cy4gUmFkaW8gQnV0dG9uIGV2ZW50cyBoYXBwZW4gd2hlbiBhbiBpdGVtIGlzIHNlbGVjdGVkfFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxuXG4jIyMjIEdldFxuXG5BIHNuYXBzaG90IG9mIHRoZSB2YWx1ZSBvZiBSYWRpbyBCdXR0b24gLT4gKGJvb2wpXG5cbmBHZXQoKWBcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCAqKnJldHVybioqIHwgKGJvb2wpIFRydWUgaWYgdGhpcyByYWRpbyBidXR0b24gaXMgc2VsZWN0ZWQgfFxuXG4jIyMjIFJlc2V0R3JvdXBcblxuU2V0cyBhbGwgUmFkaW8gQnV0dG9ucyBpbiB0aGUgZ3JvdXAgdG8gbm90IHNlbGVjdGVkXG5cbmBgYHB5dGhvblxuUmVzZXRHcm91cCgpXG5gYGBcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgUmFkaW8gQnV0dG9uIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlPU5vbmUsXG4gICAgZGlzYWJsZWQ9Tm9uZSxcbiAgICB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlfChib29sKSBpZiBUcnVlIGNoYW5nZSB0byBzZWxlY3RlZCBhbmQgc2V0IG90aGVycyBpbiBncm91cCB0byB1bnNlbGVjdGVkfFxufGRpc2FibGVkfChib29sKSBkaXNhYmxlIG9yIGVuYWJsZSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBjb250cm9sIHZpc2liaWxpdHkgb2YgZWxlbWVudHxcblxuIyMjIFNsaWRlciBFbGVtZW50XG5cbiAgICBBIHNsaWRlciwgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbFxuXG5gYGBcblNsaWRlcihyYW5nZT0oTm9uZSwgTm9uZSksXG4gICAgZGVmYXVsdF92YWx1ZT1Ob25lLFxuICAgIHJlc29sdXRpb249Tm9uZSxcbiAgICB0aWNrX2ludGVydmFsPU5vbmUsXG4gICAgb3JpZW50YXRpb249Tm9uZSxcbiAgICBkaXNhYmxlX251bWJlcl9kaXNwbGF5PUZhbHNlLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHJlbGllZj1Ob25lLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgZm9udD1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58cmFuZ2V8VW5pb25bVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdXSBzbGlkZXIncyByYW5nZSAobWluIHZhbHVlLCBtYXggdmFsdWUpfFxufGRlZmF1bHRfdmFsdWV8VW5pb25baW50LCBmbG9hdF0gc3RhcnRpbmcgdmFsdWUgZm9yIHRoZSBzbGlkZXJ8XG58cmVzb2x1dGlvbnxVbmlvbltpbnQsIGZsb2F0XSB0aGUgc21hbGxlc3QgYW1vdW50IHRoZSBzbGlkZXIgY2FuIGJlIG1vdmVkfFxufHRpY2tfaW50ZXJ2YWx8VW5pb25baW50LCBmbG9hdF0gaG93IG9mdGVuIGEgdmlzaWJsZSB0aWNrIHNob3VsZCBiZSBzaG93biBuZXh0IHRvIHNsaWRlcnxcbnxvcmllbnRhdGlvbnwoc3RyKSAnaG9yaXpvbnRhbCcgb3IgJ3ZlcnRpY2FsJyAoJ2gnIG9yICd2JyBhbHNvIHdvcmspfFxufGRpc2FibGVfbnVtYmVyX2Rpc3BsYXl8KGJvb2wpIGlmIFRydWUgbm8gbnVtYmVyIHdpbGwgYmUgZGlzcGxheWVkIGJ5IHRoZSBTbGlkZXIgRWxlbWVudHxcbnxib3JkZXJfd2lkdGh8KGludCkgd2lkdGggb2YgYm9yZGVyIGFyb3VuZCBlbGVtZW50IGluIHBpeGVsc3xcbnxyZWxpZWZ8KGVudW0pIHJlbGllZiBzdHlsZS4gUkVMSUVGX1JBSVNFRCBSRUxJRUZfU1VOS0VOIFJFTElFRl9GTEFUIFJFTElFRl9SSURHRSBSRUxJRUZfR1JPT1ZFIFJFTElFRl9TT0xJRHxcbnxjaGFuZ2Vfc3VibWl0c3woYm9vbCkgKiBERVBSSUNBVEVEIERPIE5PVCBVU0UhIFNhbWUgYXMgZW5hYmxlX2V2ZW50c3xcbnxlbmFibGVfZXZlbnRzfChib29sKSBJZiBUcnVlIHRoZW4gbW92aW5nIHRoZSBzbGlkZXIgd2lsbCBnZW5lcmF0ZSBhbiBFdmVudHxcbnxkaXNhYmxlZHwoYm9vbCkgc2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnR8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoIGluIGNoYXJhY3RlcnMsIGhlaWdodCBpbiByb3dzKXxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBzbGlkZXIncyBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHNsaWRlcidzIHRleHR8XG58a2V5fChhbnkpIFZhbHVlIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIGVsZW1lbnQgZnJvbSBhbGwgb3RoZXIgZWxlbWVudHMuIFVzZWQgd2hlbiBGaW5kaW5nIGFuIGVsZW1lbnQgb3IgaW4gcmV0dXJuIHZhbHVlcy4gTXVzdCBiZSB1bmlxdWUgdG8gdGhlIHdpbmRvd3xcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyMgVXBkYXRlXG5cbkNoYW5nZXMgc29tZSBvZiB0aGUgc2V0dGluZ3MgZm9yIHRoZSBTbGlkZXIgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmFsdWU9Tm9uZSxcbiAgICByYW5nZT0oTm9uZSwgTm9uZSksXG4gICAgZGlzYWJsZWQ9Tm9uZSxcbiAgICB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlfFVuaW9uW2ludCwgZmxvYXRdIHNldHMgY3VycmVudCBzbGlkZXIgdmFsdWV8XG58cmFuZ2V8VW5pb25bVHVwbGVbaW50LCBpbnRdLCBUdXBsZVtmbG9hdCwgZmxvYXRdIFNldHMgYSBuZXcgcmFuZ2UgZm9yIHNsaWRlcnxcbnxkaXNhYmxlZHwoYm9vbCkgZGlzYWJsZSBvciBlbmFibGUgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBTcGluIEVsZW1lbnRcblxuICAgIEEgc3Bpbm5lciB3aXRoIHVwL2Rvd24gYnV0dG9ucyBhbmQgYSBzaW5nbGUgbGluZSBvZiB0ZXh0LiBDaG9vc2UgMSB2YWx1ZXMgZnJvbSBsaXN0XG5cbmBgYFxuU3Bpbih2YWx1ZXMsXG4gICAgaW5pdGlhbF92YWx1ZT1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX3RleHQ9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXN8TGlzdFtBbnldIExpc3Qgb2YgdmFsaWQgdmFsdWVzfFxufGluaXRpYWxfdmFsdWV8KEFueSkgSW5pdGlhbCBpdGVtIHRvIHNob3cgaW4gd2luZG93LiBDaG9vc2UgZnJvbSBsaXN0IG9mIHZhbHVlcyBzdXBwbGllZHxcbnxkaXNhYmxlZHwoYm9vbCkgc2V0IGRpc2FibGUgc3RhdGV8XG58Y2hhbmdlX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIFNwaW4gZXZlbnRzIGhhcHBlbiB3aGVuIGFuIGl0ZW0gY2hhbmdlc3xcbnxzaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgd2lkdGggPSBjaGFyYWN0ZXJzLXdpZGUsIGhlaWdodCA9IHJvd3MtaGlnaHxcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgaWYgVHJ1ZSB3aWxsIHNpemUgdGhlIGVsZW1lbnQgdG8gbWF0Y2ggdGhlIGxlbmd0aCBvZiB0aGUgdGV4dHxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBHZXRcblxuUmV0dXJuIHRoZSBjdXJyZW50IGNob3NlbiB2YWx1ZSBzaG93aW5nIGluIHNwaW5ib3guXG5UaGlzIHZhbHVlIHdpbGwgYmUgdGhlIHNhbWUgYXMgd2hhdCB3YXMgcHJvdmlkZWQgYXMgbGlzdCBvZiBjaG9pY2VzLiAgSWYgbGlzdCBpdGVtcyBhcmUgaW50cywgdGhlbiB0aGVcbml0ZW0gcmV0dXJuZWQgd2lsbCBiZSBhbiBpbnQgKG5vdCBhIHN0cmluZylcblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCAoQW55KSBUaGUgY3VycmVudGx5IHZpc2libGUgZW50cnkgfFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyMgVXBkYXRlXG5cbkNoYW5nZXMgc29tZSBvZiB0aGUgc2V0dGluZ3MgZm9yIHRoZSBTcGluIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlPU5vbmUsXG4gICAgdmFsdWVzPU5vbmUsXG4gICAgZGlzYWJsZWQ9Tm9uZSxcbiAgICB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlfChBbnkpIHNldCB0aGUgY3VycmVudCB2YWx1ZSBmcm9tIGxpc3Qgb2YgY2hvaWNlc3xcbnx2YWx1ZXN8TGlzdFtBbnldIHNldCBhdmFpbGFibGUgY2hvaWNlc3xcbnxkaXNhYmxlZHwoYm9vbCkgZGlzYWJsZSBvciBlbmFibGUgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBTdGF0dXNCYXIgRWxlbWVudFxuXG4gICAgQSBTdGF0dXNCYXIgRWxlbWVudCBjcmVhdGVzIHRoZSBzdW5rZW4gdGV4dC1maWxsZWQgc3RyaXAgYXQgdGhlIGJvdHRvbS4gTWFueSBXaW5kb3dzIHByb2dyYW1zIGhhdmUgdGhpcyBsaW5lXG5cbmBgYFxuU3RhdHVzQmFyKHRleHQsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX3RleHQ9Tm9uZSxcbiAgICBjbGlja19zdWJtaXRzPU5vbmUsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICByZWxpZWY9XCJzdW5rZW5cIixcbiAgICBmb250PU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBqdXN0aWZpY2F0aW9uPU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGV4dHwoc3RyKSBUZXh0IHRoYXQgaXMgdG8gYmUgZGlzcGxheWVkIGluIHRoZSB3aWRnZXR8XG58c2l6ZXxUdXBsZVsoaW50KSwgKGludCldICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgVHJ1ZSBpZiBzaXplIHNob3VsZCBmaXQgdGhlIHRleHQgbGVuZ3RofFxufGNsaWNrX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIFN0YXR1c0JhciBldmVudHMgb2NjdXIgd2hlbiB0aGUgYmFyIGlzIGNsaWNrZWR8XG58cmVsaWVmfChlbnVtKSByZWxpZWYgc3R5bGUuIFZhbHVlcyBhcmUgc2FtZSBhcyBwcm9ncmVzcyBtZXRlciByZWxpZWYgdmFsdWVzLiBDYW4gYmUgYSBjb25zdGFudCBvciBhIHN0cmluZzogYFJFTElFRl9SQUlTRUQgUkVMSUVGX1NVTktFTiBSRUxJRUZfRkxBVCBSRUxJRUZfUklER0UgUkVMSUVGX0dST09WRSBSRUxJRUZfU09MSURgfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSB0ZXh0fFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgY29sb3Igb2YgYmFja2dyb3VuZHxcbnxqdXN0aWZpY2F0aW9ufChzdHIpIGhvdyBzdHJpbmcgc2hvdWxkIGJlIGFsaWduZWQgd2l0aGluIHNwYWNlIHByb3ZpZGVkIGJ5IHNpemUuIFZhbGlkIGNob2ljZXMgPSBgbGVmdGAsIGByaWdodGAsIGBjZW50ZXJgfFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyMgVXBkYXRlXG5cbkNoYW5nZXMgc29tZSBvZiB0aGUgc2V0dGluZ3MgZm9yIHRoZSBTdGF0dXMgQmFyIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXwoc3RyKSBuZXcgdGV4dCB0byBzaG93fFxufGJhY2tncm91bmRfY29sb3J8KHN0cikgY29sb3Igb2YgYmFja2dyb3VuZHxcbnx0ZXh0X2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSB0ZXh0fFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIFRhYiBFbGVtZW50XG5cbiAgICBUYWIgRWxlbWVudCBpcyBhbm90aGVyIFwiQ29udGFpbmVyXCIgZWxlbWVudCB0aGF0IGhvbGRzIGEgbGF5b3V0IGFuZCBkaXNwbGF5cyBhIHRhYiB3aXRoIHRleHQuIFVzZWQgd2l0aCBUYWJHcm91cCBvbmx5XG4gICAgVGFicyBhcmUgbmV2ZXIgcGxhY2VkIGRpcmVjdGx5IGludG8gYSBsYXlvdXQuICBUaGV5IGFyZSBhbHdheXMgXCJDb250YWluZWRcIiBpbiBhIFRhYkdyb3VwIGxheW91dFxuXG5gYGBcblRhYih0aXRsZSxcbiAgICBsYXlvdXQsXG4gICAgdGl0bGVfY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIHBhZD1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIGtleT1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICByaWdodF9jbGlja19tZW51PU5vbmUsXG4gICAgdmlzaWJsZT1UcnVlLFxuICAgIGVsZW1lbnRfanVzdGlmaWNhdGlvbj1cImxlZnRcIilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGl0bGV8KHN0cikgdGV4dCB0byBzaG93IG9uIHRoZSB0YWJ8XG58bGF5b3V0fExpc3RbTGlzdFtFbGVtZW50XV0gVGhlIGVsZW1lbnQgbGF5b3V0IHRoYXQgd2lsbCBiZSBzaG93biBpbiB0aGUgdGFifFxufHRpdGxlX2NvbG9yfChzdHIpIGNvbG9yIG9mIHRoZSB0YWIgdGV4dCAobm90ZSBub3QgY3VycmVudGx5IHdvcmtpbmcgb24gdGtpbnRlcil8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kIG9mIHRoZSBlbnRpcmUgbGF5b3V0fFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxufGRpc2FibGVkfChib29sKSBJZiBUcnVlIGJ1dHRvbiB3aWxsIGJlIGNyZWF0ZWQgZGlzYWJsZWR8XG58Ym9yZGVyX3dpZHRofChpbnQpIHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudCBpbiBwaXhlbHN8XG58a2V5fChhbnkpIFZhbHVlIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGlzIGVsZW1lbnQgZnJvbSBhbGwgb3RoZXIgZWxlbWVudHMuIFVzZWQgd2hlbiBGaW5kaW5nIGFuIGVsZW1lbnQgb3IgaW4gcmV0dXJuIHZhbHVlcy4gTXVzdCBiZSB1bmlxdWUgdG8gdGhlIHdpbmRvd3xcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxyaWdodF9jbGlja19tZW51fExpc3RbTGlzdFtVbmlvbltMaXN0W3N0cl0sc3RyXV1dIEEgbGlzdCBvZiBsaXN0cyBvZiBNZW51IGl0ZW1zIHRvIHNob3cgd2hlbiB0aGlzIGVsZW1lbnQgaXMgcmlnaHQgY2xpY2tlZC4gU2VlIHVzZXIgZG9jcyBmb3IgZXhhY3QgZm9ybWF0Lnxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcbnxlbGVtZW50X2p1c3RpZmljYXRpb258KHN0cikgQWxsIGVsZW1lbnRzIGluc2lkZSB0aGUgVGFiIHdpbGwgaGF2ZSB0aGlzIGp1c3RpZmljYXRpb24gJ2xlZnQnLCAncmlnaHQnLCAnY2VudGVyJyBhcmUgdmFsaWQgdmFsdWVzfFxuXG4jIyMjIEFkZFJvd1xuXG5Ob3QgcmVjb21tZW5kZWQgdXNlIGNhbGwuICBVc2VkIHRvIGFkZCByb3dzIG9mIEVsZW1lbnRzIHRvIHRoZSBGcmFtZSBFbGVtZW50LlxuXG5gYGBcbkFkZFJvdyhhcmdzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3xMaXN0W0VsZW1lbnRdIFRoZSBsaXN0IG9mIGVsZW1lbnRzIGZvciB0aGlzIHJvd3xcblxuIyMjIyBMYXlvdXRcblxuTm90IHVzZXIgY2FsbGFibGUuICBVc2UgbGF5b3V0IHBhcmFtZXRlciBpbnN0ZWFkLiBDcmVhdGVzIHRoZSBsYXlvdXQgdXNpbmcgdGhlIHN1cHBsaWVkIHJvd3Mgb2YgRWxlbWVudHNcblxuYGBgXG5MYXlvdXQocm93cylcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58cm93c3xMaXN0W0xpc3RbRWxlbWVudF1dIFRoZSBsaXN0IG9mIHJvd3N8XG58fHxcbnwgKipyZXR1cm4qKiB8IChUYWIpIHVzZWQgZm9yIGNoYWluaW5nIHxcblxuIyMjIyBTZWxlY3RcblxuQ3JlYXRlIGEgdGtpbnRlciBldmVudCB0aGF0IG1pbWljcyB1c2VyIGNsaWNraW5nIG9uIGEgdGFiLiBNdXN0IGhhdmUgY2FsbGVkIHdpbmRvdy5GaW5hbGl6ZSAvIFJlYWQgZmlyc3QhXG5cbmBgYHB5dGhvblxuU2VsZWN0KClcbmBgYFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyMgVXBkYXRlXG5cbkNoYW5nZXMgc29tZSBvZiB0aGUgc2V0dGluZ3MgZm9yIHRoZSBUYWIgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUoZGlzYWJsZWQ9Tm9uZSwgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxkaXNhYmxlZHwoYm9vbCkgZGlzYWJsZSBvciBlbmFibGUgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBUYWJHcm91cCBFbGVtZW50XG5cbiAgICBUYWJHcm91cCBFbGVtZW50IGdyb3VwcyB0b2dldGhlciB5b3VyIHRhYnMgaW50byB0aGUgZ3JvdXAgb2YgdGFicyB5b3Ugc2VlIGRpc3BsYXllZCBpbiB5b3VyIHdpbmRvd1xuXG5gYGBcblRhYkdyb3VwKGxheW91dCxcbiAgICB0YWJfbG9jYXRpb249Tm9uZSxcbiAgICB0aXRsZV9jb2xvcj1Ob25lLFxuICAgIHNlbGVjdGVkX3RpdGxlX2NvbG9yPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHRoZW1lPU5vbmUsXG4gICAga2V5PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58bGF5b3V0fExpc3RbTGlzdFtUYWJdXSBMYXlvdXQgb2YgVGFicy4gRGlmZmVyZW50IHRoYW4gbm9ybWFsIGxheW91dHMuIEFMTCBUYWJzIHNob3VsZCBiZSBvbiBmaXJzdCByb3d8XG58dGFiX2xvY2F0aW9ufChzdHIpIGxvY2F0aW9uIHRoYXQgdGFicyB3aWxsIGJlIGRpc3BsYXllZC4gQ2hvaWNlcyBhcmUgbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tLCBsZWZ0dG9wLCBsZWZ0Ym90dG9tLCByaWdodHRvcCwgcmlnaHRib3R0b20sIGJvdHRvbWxlZnQsIGJvdHRvbXJpZ2h0LCB0b3BsZWZ0LCB0b3ByaWdodHxcbnx0aXRsZV9jb2xvcnwoc3RyKSBjb2xvciBvZiB0ZXh0IG9uIHRhYnN8XG58c2VsZWN0ZWRfdGl0bGVfY29sb3J8KHN0cikgY29sb3Igb2YgdGFiIHdoZW4gaXQgaXMgc2VsZWN0ZWR8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kIG9mIHRhYnN8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGNoYW5nZV9zdWJtaXRzfChib29sKSAqIERFUFJJQ0FURUQgRE8gTk9UIFVTRSEgU2FtZSBhcyBlbmFibGVfZXZlbnRzfFxufGVuYWJsZV9ldmVudHN8KGJvb2wpIElmIFRydWUgdGhlbiBzd2l0Y2hpbmcgdGFicyB3aWxsIGdlbmVyYXRlIGFuIEV2ZW50fFxufHBhZHwoaW50LCBpbnQpIG9yICgoaW50LCBpbnQpLChpbnQsaW50KSkgQW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50IChsZWZ0L3JpZ2h0LCB0b3AvYm90dG9tKSBvciAoKGxlZnQsIHJpZ2h0KSwgKHRvcCwgYm90dG9tKSl8XG58Ym9yZGVyX3dpZHRofChpbnQpIHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudCBpbiBwaXhlbHN8XG58dGhlbWV8KGVudW0pIHRhYnMgY2FuIGJlICd0aGVtZWQnLiBUaGVzZSBhcmUgdGhlIGNob2ljZXMgKHNvbWUgbWF5IG5vdCB3b3JrIG9uIHlvdXIgT1MpOiBUSEVNRV9ERUZBVUxUIFRIRU1FX1dJTk5BVElWRSBUSEVNRV9DTEFNIFRIRU1FX0FMVCBUSEVNRV9DTEFTU0lDIFRIRU1FX1ZJU1RBIFRIRU1FX1hQTkFUSVZFfFxufGtleXwoYW55KSBWYWx1ZSB0aGF0IHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhpcyBlbGVtZW50IGZyb20gYWxsIG90aGVyIGVsZW1lbnRzLiBVc2VkIHdoZW4gRmluZGluZyBhbiBlbGVtZW50IG9yIGluIHJldHVybiB2YWx1ZXMuIE11c3QgYmUgdW5pcXVlIHRvIHRoZSB3aW5kb3d8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG5cbiMjIyMgQWRkUm93XG5cbk5vdCByZWNvbW1lbmRlZCB1c2VyIGNhbGwuICBVc2VkIHRvIGFkZCByb3dzIG9mIEVsZW1lbnRzIHRvIHRoZSBGcmFtZSBFbGVtZW50LlxuXG5gYGBcbkFkZFJvdyhhcmdzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3xMaXN0W0VsZW1lbnRdIFRoZSBsaXN0IG9mIGVsZW1lbnRzIGZvciB0aGlzIHJvd3xcblxuIyMjIyBGaW5kS2V5RnJvbVRhYk5hbWVcblxuU2VhcmNoZXMgdGhyb3VnaCB0aGUgbGF5b3V0IHRvIGZpbmQgdGhlIGtleSB0aGF0IG1hdGNoZXMgdGhlIHRleHQgb24gdGhlIHRhYi4gSW1wbGllcyBuYW1lcyBzaG91bGQgYmUgdW5pcXVlXG5cbmBgYFxuRmluZEtleUZyb21UYWJOYW1lKHRhYl9uYW1lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0YWJfbmFtZXx8XG58fHxcbnwgKipyZXR1cm4qKiB8IFVuaW9uW2tleSwgTm9uZV0gUmV0dXJucyB0aGUga2V5IG9yIE5vbmUgaWYgbm8ga2V5IGZvdW5kIHxcblxuIyMjIyBHZXRcblxuUmV0dXJucyB0aGUgY3VycmVudCB2YWx1ZSBmb3IgdGhlIFRhYiBHcm91cCwgd2hpY2ggd2lsbCBiZSB0aGUgY3VycmVudGx5IHNlbGVjdGVkIHRhYidzIEtFWSBvciB0aGUgdGV4dCBvblxudGhlIHRhYiBpZiBubyBrZXkgaXMgZGVmaW5lZC4gIFJldHVybnMgTm9uZSBpZiBhbiBlcnJvciBvY2N1cnMuXG5Ob3RlIHRoYXQgdGhpcyBpcyBleGFjdGx5IHRoZSBzYW1lIGRhdGEgdGhhdCB3b3VsZCBiZSByZXR1cm5lZCBmcm9tIGEgY2FsbCB0byBXaW5kb3cuUmVhZC4gQXJlIHlvdSBzdXJlIHlvdVxuYXJlIHVzaW5nIHRoaXMgbWV0aG9kIGNvcnJlY3RseT9cblxuYEdldCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCBVbmlvbltBbnksIE5vbmVdIFRoZSBrZXkgb2YgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCB0YWIgb3IgdGhlIHRhYidzIHRleHQgaWYgaXQgaGFzIG5vIGtleSB8XG5cbiMjIyMgTGF5b3V0XG5cbkNhbiB1c2UgbGlrZSB0aGUgV2luZG93LkxheW91dCBtZXRob2QsIGJ1dCBpdCdzIGJldHRlciB0byB1c2UgdGhlIGxheW91dCBwYXJhbWV0ZXIgd2hlbiBjcmVhdGluZ1xuXG5gYGBcbkxheW91dChyb3dzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxyb3dzfExpc3RbTGlzdFtFbGVtZW50XV0gVGhlIHJvd3Mgb2YgRWxlbWVudHN8XG58fHxcbnwgKipyZXR1cm4qKiB8IChGcmFtZSkgVXNlZCBmb3IgY2hhaW5pbmcgfFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyBUYWJsZSBFbGVtZW50XG5cbmBgYFxuVGFibGUodmFsdWVzLFxuICAgIGhlYWRpbmdzPU5vbmUsXG4gICAgdmlzaWJsZV9jb2x1bW5fbWFwPU5vbmUsXG4gICAgY29sX3dpZHRocz1Ob25lLFxuICAgIGRlZl9jb2xfd2lkdGg9MTAsXG4gICAgYXV0b19zaXplX2NvbHVtbnM9VHJ1ZSxcbiAgICBtYXhfY29sX3dpZHRoPTIwLFxuICAgIHNlbGVjdF9tb2RlPU5vbmUsXG4gICAgZGlzcGxheV9yb3dfbnVtYmVycz1GYWxzZSxcbiAgICBudW1fcm93cz1Ob25lLFxuICAgIHJvd19oZWlnaHQ9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAganVzdGlmaWNhdGlvbj1cInJpZ2h0XCIsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBhbHRlcm5hdGluZ19yb3dfY29sb3I9Tm9uZSxcbiAgICByb3dfY29sb3JzPU5vbmUsXG4gICAgdmVydGljYWxfc2Nyb2xsX29ubHk9VHJ1ZSxcbiAgICBoaWRlX3ZlcnRpY2FsX3Njcm9sbD1GYWxzZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIGJpbmRfcmV0dXJuX2tleT1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgcmlnaHRfY2xpY2tfbWVudT1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dmFsdWVzfExpc3RbTGlzdFtVbmlvbltzdHIsIGludCwgZmxvYXRdXV18XG58aGVhZGluZ3N8TGlzdFtzdHJdIFRoZSBoZWFkaW5ncyB0byBzaG93IG9uIHRoZSB0b3AgbGluZXxcbnx2aXNpYmxlX2NvbHVtbl9tYXB8TGlzdFtib29sXSBPbmUgZW50cnkgZm9yIGVhY2ggY29sdW1uLiBGYWxzZSBpbmRpY2F0ZXMgdGhlIGNvbHVtbiBpcyBub3Qgc2hvd258XG58Y29sX3dpZHRoc3xMaXN0W2ludF0gTnVtYmVyIG9mIGNoYXJhY3RlcnMgdGhhdCBlYWNoIGNvbHVtbiB3aWxsIG9jY3VweXxcbnxkZWZfY29sX3dpZHRofChpbnQpIERlZmF1bHQgY29sdW1uIHdpZHRoIGluIGNoYXJhY3RlcnN8XG58YXV0b19zaXplX2NvbHVtbnN8KGJvb2wpIGlmIFRydWUgY29sdW1ucyB3aWxsIGJlIHNpemVkIGF1dG9tYXRpY2FsbHl8XG58bWF4X2NvbF93aWR0aHwoaW50KSBNYXhpbXVtIHdpZHRoIGZvciBhbGwgY29sdW1ucyBpbiBjaGFyYWN0ZXJzfFxufHNlbGVjdF9tb2RlfChlbnVtKSBTZWxlY3QgTW9kZS4gVmFsaWQgdmFsdWVzIHN0YXJ0IHdpdGggXCJUQUJMRV9TRUxFQ1RfTU9ERV9cIi4gVmFsaWQgdmFsdWVzIGFyZTogVEFCTEVfU0VMRUNUX01PREVfTk9ORSBUQUJMRV9TRUxFQ1RfTU9ERV9CUk9XU0UgVEFCTEVfU0VMRUNUX01PREVfRVhURU5ERUR8XG58ZGlzcGxheV9yb3dfbnVtYmVyc3woYm9vbCkgaWYgVHJ1ZSwgdGhlIGZpcnN0IGNvbHVtbiBvZiB0aGUgdGFibGUgd2lsbCBiZSB0aGUgcm93ICN8XG58bnVtX3Jvd3N8KGludCkgVGhlIG51bWJlciBvZiByb3dzIG9mIHRoZSB0YWJsZSB0byBkaXNwbGF5IGF0IGEgdGltZXxcbnxyb3dfaGVpZ2h0fChpbnQpIGhlaWdodCBvZiBhIHNpbmdsZSByb3cgaW4gcGl4ZWxzfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxqdXN0aWZpY2F0aW9ufChzdHIpICdsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlcicgYXJlIHZhbGlkIGNob2ljZXN8XG58dGV4dF9jb2xvcnwoc3RyKSBjb2xvciBvZiB0aGUgdGV4dHxcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58YWx0ZXJuYXRpbmdfcm93X2NvbG9yfChzdHIpIGlmIHNldCB0aGVuIGV2ZXJ5IG90aGVyIHJvdyB3aWxsIGhhdmUgdGhpcyBjb2xvciBpbiB0aGUgYmFja2dyb3VuZC58XG58cm93X2NvbG9yc3x8XG58dmVydGljYWxfc2Nyb2xsX29ubHl8KGJvb2wpIGlmIFRydWUgb25seSB0aGUgdmVydGljYWwgc2Nyb2xsYmFyIHdpbGwgYmUgdmlzaWJsZXxcbnxoaWRlX3ZlcnRpY2FsX3Njcm9sbHwoYm9vbCkgaWYgVHJ1ZSB2ZXJ0aWNhbCBzY3JvbGxiYXIgd2lsbCBiZSBoaWRkZW58XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gRE8gTk9UIFVTRSEgVXNlIG51bV9yb3dzIGluc3RlYWR8XG58Y2hhbmdlX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIFRhYmxlIGV2ZW50cyBoYXBwZW4gd2hlbiByb3cgaXMgY2xpY2tlZHxcbnxiaW5kX3JldHVybl9rZXl8KGJvb2wpIGlmIFRydWUsIHByZXNzaW5nIHJldHVybiBrZXkgd2lsbCBjYXVzZSBldmVudCBjb21pbmcgZnJvbSBUYWJsZSwgQUxTTyBhIGxlZnQgYnV0dG9uIGRvdWJsZSBjbGljayB3aWxsIGdlbmVyYXRlIGFuIGV2ZW50IGlmIHRoaXMgcGFyYW1ldGVyIGlzIFRydWV8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxrZXl8KEFueSkgVXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58cmlnaHRfY2xpY2tfbWVudXxMaXN0W0xpc3RbVW5pb25bTGlzdFtzdHJdLHN0cl1dXSBBIGxpc3Qgb2YgbGlzdHMgb2YgTWVudSBpdGVtcyB0byBzaG93IHdoZW4gdGhpcyBlbGVtZW50IGlzIHJpZ2h0IGNsaWNrZWQuIFNlZSB1c2VyIGRvY3MgZm9yIGV4YWN0IGZvcm1hdC58XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG5cbiMjIyMgU2V0Rm9jdXNcblxuU2V0cyB0aGUgY3VycmVudCBmb2N1cyB0byBiZSBvbiB0aGlzIGVsZW1lbnRcblxuYGBgXG5TZXRGb2N1cyhmb3JjZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Zm9yY2V8KGJvb2wpIGlmIFRydWUgd2lsbCBjYWxsIGZvY3VzX2ZvcmNlIG90aGVyd2lzZSBjYWxscyBmb2N1c19zZXR8XG5cbiMjIyMgU2V0VG9vbHRpcFxuXG5DYWxsZWQgYnkgYXBwbGljYXRpb24gdG8gY2hhbmdlIHRoZSB0b29sdGlwIHRleHQgZm9yIGFuIEVsZW1lbnQuICBOb3JtYWxseSBpbnZva2VkIHVzaW5nIHRoZSBFbGVtZW50IE9iamVjdCBzdWNoIGFzOiB3aW5kb3cuRWxlbWVudCgna2V5JykuU2V0VG9vbFRpcCgnTmV3IHRpcCcpLlxuXG5gYGBcblNldFRvb2x0aXAodG9vbHRpcF90ZXh0KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b29sdGlwX3RleHR8KHN0cikgdGhlIHRleHQgdG8gc2hvdyBpbiB0b29sdGlwLnxcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIFRhYmxlIEVsZW1lbnQuIE11c3QgY2FsbCBgV2luZG93LlJlYWRgIG9yIGBXaW5kb3cuRmluYWxpemVgIHByaW9yXG5cbmBgYFxuVXBkYXRlKHZhbHVlcz1Ob25lLFxuICAgIG51bV9yb3dzPU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lLFxuICAgIHNlbGVjdF9yb3dzPU5vbmUsXG4gICAgYWx0ZXJuYXRpbmdfcm93X2NvbG9yPU5vbmUsXG4gICAgcm93X2NvbG9ycz1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXN8TGlzdFtMaXN0W1VuaW9uW3N0ciwgaW50LCBmbG9hdF1dXSBBIG5ldyAyLWRpbWVuc2lvbmFsIHRhYmxlIHRvIHNob3d8XG58bnVtX3Jvd3N8KGludCkgSG93IG1hbnkgcm93cyB0byBkaXNwbGF5IGF0IGEgdGltZXxcbnx2aXNpYmxlfChib29sKSBpZiBUcnVlIHRoZW4gd2lsbCBiZSB2aXNpYmxlfFxufHNlbGVjdF9yb3dzfExpc3RbaW50XSBMaXN0IG9mIHJvd3MgdG8gc2VsZWN0IGFzIGlmIHVzZXIgZGlkfFxufGFsdGVybmF0aW5nX3Jvd19jb2xvcnwoc3RyKSB0aGUgY29sb3IgdG8gbWFrZSBldmVyeSBvdGhlciByb3d8XG58cm93X2NvbG9yc3xMaXN0W1VuaW9uW1R1cGxlW2ludCwgc3RyXSwgVHVwbGVbSW50LCBzdHIsIHN0cl1dIGxpc3Qgb2YgdHVwbGVzIG9mIChyb3csIGJhY2tncm91bmQgY29sb3IpIE9SIChyb3csIGZvcmVncm91bmQgY29sb3IsIGJhY2tncm91bmQgY29sb3IpLiBDaGFuZ2VzIHRoZSBjb2xvcnMgb2YgbGlzdGVkIHJvd3MgdG8gdGhlIGNvbG9yKHMpIHByb3ZpZGVkIChub3RlIHRoZSBvcHRpb25hbCBmb3JlZ3JvdW5kIGNvbG9yKXxcblxuIyMjIFRleHQgRWxlbWVudFxuXG4gICAgVGV4dCAtIERpc3BsYXkgc29tZSB0ZXh0IGluIHRoZSB3aW5kb3cuICBVc3VhbGx5IHRoaXMgbWVhbnMgYSBzaW5nbGUgbGluZSBvZiB0ZXh0LiAgSG93ZXZlciwgdGhlIHRleHQgY2FuIGFsc28gYmUgbXVsdGlwbGUgbGluZXMuICBJZiBtdWx0aS1saW5lZCB0aGVyZSBhcmUgbm8gc2Nyb2xsIGJhcnMuXG5cbmBgYFxuVGV4dCh0ZXh0LFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV90ZXh0PU5vbmUsXG4gICAgY2xpY2tfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIHJlbGllZj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB0ZXh0X2NvbG9yPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIGp1c3RpZmljYXRpb249Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICByaWdodF9jbGlja19tZW51PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGV4dHwoc3RyKSBUaGUgdGV4dCB0byBkaXNwbGF5LiBDYW4gaW5jbHVkZSAvbiB0byBhY2hpZXZlIG11bHRpcGxlIGxpbmVzfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3aWR0aCwgaGVpZ2h0KSB3aWR0aCA9IGNoYXJhY3RlcnMtd2lkZSwgaGVpZ2h0ID0gcm93cy1oaWdofFxufGF1dG9fc2l6ZV90ZXh0fChib29sKSBpZiBUcnVlIHNpemUgb2YgdGhlIFRleHQgRWxlbWVudCB3aWxsIGJlIHNpemVkIHRvIGZpdCB0aGUgc3RyaW5nIHByb3ZpZGVkIGluICd0ZXh0JyBwYXJtfFxufGNsaWNrX3N1Ym1pdHN8KGJvb2wpIERPIE5PVCBVU0UuIE9ubHkgbGlzdGVkIGZvciBiYWNrd2FyZHMgY29tcGF0IC0gVXNlIGVuYWJsZV9ldmVudHMgaW5zdGVhZHxcbnxlbmFibGVfZXZlbnRzfChib29sKSBUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuIFRleHQgZXZlbnRzIGhhcHBlbiB3aGVuIHRoZSB0ZXh0IGlzIGNsaWNrZWR8XG58cmVsaWVmfChzdHIvZW51bSkgcmVsaWVmIHN0eWxlIGFyb3VuZCB0aGUgdGV4dC4gVmFsdWVzIGFyZSBzYW1lIGFzIHByb2dyZXNzIG1ldGVyIHJlbGllZiB2YWx1ZXMuIFNob3VsZCBiZSBhIGNvbnN0YW50IHRoYXQgaXMgZGVmaW5lZCBhdCBzdGFydGluZyB3aXRoIFwiUkVMSUVGX1wiIC0gYFJFTElFRl9SQUlTRUQsIFJFTElFRl9TVU5LRU4sIFJFTElFRl9GTEFULCBSRUxJRUZfUklER0UsIFJFTElFRl9HUk9PVkUsIFJFTElFRl9TT0xJRGB8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufGp1c3RpZmljYXRpb258KHN0cikgaG93IHN0cmluZyBzaG91bGQgYmUgYWxpZ25lZCB3aXRoaW4gc3BhY2UgcHJvdmlkZWQgYnkgc2l6ZS4gVmFsaWQgY2hvaWNlcyA9IGBsZWZ0YCwgYHJpZ2h0YCwgYGNlbnRlcmB8XG58cGFkfChpbnQsIGludCkgb3IgKChpbnQsIGludCksKGludCxpbnQpKSBBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnQgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxrZXl8KEFueSkgVXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudCB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58cmlnaHRfY2xpY2tfbWVudXxMaXN0W0xpc3RbVW5pb25bTGlzdFtzdHJdLHN0cl1dXSBBIGxpc3Qgb2YgbGlzdHMgb2YgTWVudSBpdGVtcyB0byBzaG93IHdoZW4gdGhpcyBlbGVtZW50IGlzIHJpZ2h0IGNsaWNrZWQuIFNlZSB1c2VyIGRvY3MgZm9yIGV4YWN0IGZvcm1hdC58XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58dmlzaWJsZXwoYm9vbCkgc2V0IHZpc2liaWxpdHkgc3RhdGUgb2YgdGhlIGVsZW1lbnR8XG5cbiMjIyMgU2V0Rm9jdXNcblxuU2V0cyB0aGUgY3VycmVudCBmb2N1cyB0byBiZSBvbiB0aGlzIGVsZW1lbnRcblxuYGBgXG5TZXRGb2N1cyhmb3JjZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Zm9yY2V8KGJvb2wpIGlmIFRydWUgd2lsbCBjYWxsIGZvY3VzX2ZvcmNlIG90aGVyd2lzZSBjYWxscyBmb2N1c19zZXR8XG5cbiMjIyMgU2V0VG9vbHRpcFxuXG5DYWxsZWQgYnkgYXBwbGljYXRpb24gdG8gY2hhbmdlIHRoZSB0b29sdGlwIHRleHQgZm9yIGFuIEVsZW1lbnQuICBOb3JtYWxseSBpbnZva2VkIHVzaW5nIHRoZSBFbGVtZW50IE9iamVjdCBzdWNoIGFzOiB3aW5kb3cuRWxlbWVudCgna2V5JykuU2V0VG9vbFRpcCgnTmV3IHRpcCcpLlxuXG5gYGBcblNldFRvb2x0aXAodG9vbHRpcF90ZXh0KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx0b29sdGlwX3RleHR8KHN0cikgdGhlIHRleHQgdG8gc2hvdyBpbiB0b29sdGlwLnxcblxuIyMjIyBVcGRhdGVcblxuQ2hhbmdlcyBzb21lIG9mIHRoZSBzZXR0aW5ncyBmb3IgdGhlIFRleHQgRWxlbWVudC4gTXVzdCBjYWxsIGBXaW5kb3cuUmVhZGAgb3IgYFdpbmRvdy5GaW5hbGl6ZWAgcHJpb3JcblxuYGBgXG5VcGRhdGUodmFsdWU9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB2aXNpYmxlPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlfChzdHIpIG5ldyB0ZXh0IHRvIHNob3d8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHZpc2libGV8KGJvb2wpIHNldCB2aXNpYmlsaXR5IHN0YXRlIG9mIHRoZSBlbGVtZW50fFxuXG4jIyMgVHJlZSBFbGVtZW50XG5cbiAgICBUcmVlIEVsZW1lbnQgLSBQcmVzZW50cyBkYXRhIGluIGEgdHJlZS1saWtlIG1hbm5lciwgbXVjaCBsaWtlIGEgZmlsZS9mb2xkZXIgYnJvd3Nlci4gIFVzZXMgdGhlIFRyZWVEYXRhIGNsYXNzXG4gICAgdG8gaG9sZCB0aGUgdXNlcidzIGRhdGEgYW5kIHBhc3MgdG8gdGhlIGVsZW1lbnQgZm9yIGRpc3BsYXkuXG5cbmBgYFxuVHJlZShkYXRhPU5vbmUsXG4gICAgaGVhZGluZ3M9Tm9uZSxcbiAgICB2aXNpYmxlX2NvbHVtbl9tYXA9Tm9uZSxcbiAgICBjb2xfd2lkdGhzPU5vbmUsXG4gICAgY29sMF93aWR0aD0xMCxcbiAgICBkZWZfY29sX3dpZHRoPTEwLFxuICAgIGF1dG9fc2l6ZV9jb2x1bW5zPVRydWUsXG4gICAgbWF4X2NvbF93aWR0aD0yMCxcbiAgICBzZWxlY3RfbW9kZT1Ob25lLFxuICAgIHNob3dfZXhwYW5kZWQ9RmFsc2UsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAganVzdGlmaWNhdGlvbj1cInJpZ2h0XCIsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBudW1fcm93cz1Ob25lLFxuICAgIHJvd19oZWlnaHQ9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgcmlnaHRfY2xpY2tfbWVudT1Ob25lLFxuICAgIHZpc2libGU9VHJ1ZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ZGF0YXwoVHJlZURhdGEpIFRoZSBkYXRhIHJlcHJlc2VudGVkIHVzaW5nIGEgUHlTaW1wbGVHVUkgcHJvdmlkZWQgVHJlZURhdGEgY2xhc3N8XG58aGVhZGluZ3N8TGlzdFtzdHJdIExpc3Qgb2YgaW5kaXZpZHVhbCBoZWFkaW5ncyBmb3IgZWFjaCBjb2x1bW58XG58dmlzaWJsZV9jb2x1bW5fbWFwfExpc3RbYm9vbF0gRGV0ZXJtaW5lcyBpZiBhIGNvbHVtbiBzaG91bGQgYmUgdmlzaWJsZS4gSWYgbGVmdCBlbXB0eSwgYWxsIGNvbHVtbnMgd2lsbCBiZSBzaG93bnxcbnxjb2xfd2lkdGhzfExpc3RbaW50XSBMaXN0IG9mIGNvbHVtbiB3aWR0aHMgc28gdGhhdCBpbmRpdmlkdWFsIGNvbHVtbiB3aWR0aHMgY2FuIGJlIGNvbnRyb2xsZWR8XG58Y29sMF93aWR0aHwoaW50KSBTaXplIG9mIENvbHVtbiAwIHdoaWNoIGlzIHdoZXJlIHRoZSByb3cgbnVtYmVycyB3aWxsIGJlIG9wdGlvbmFsbHkgc2hvd258XG58ZGVmX2NvbF93aWR0aHwoaW50KSBkZWZhdWx0IGNvbHVtbiB3aWR0aHxcbnxhdXRvX3NpemVfY29sdW1uc3woYm9vbCkgaWYgVHJ1ZSwgdGhlIHNpemUgb2YgYSBjb2x1bW4gaXMgZGV0ZXJtaW5lZCB1c2luZyB0aGUgY29udGVudHMgb2YgdGhlIGNvbHVtbnxcbnxtYXhfY29sX3dpZHRofChpbnQpIHRoZSBtYXhpbXVtIHNpemUgYSBjb2x1bW4gY2FuIGJlfFxufHNlbGVjdF9tb2RlfChlbnVtKSBVc2Ugc2FtZSB2YWx1ZXMgYXMgZm91bmQgb24gVGFibGUgRWxlbWVudC4gVmFsaWQgdmFsdWVzIGluY2x1ZGU6IFRBQkxFX1NFTEVDVF9NT0RFX05PTkUgVEFCTEVfU0VMRUNUX01PREVfQlJPV1NFIFRBQkxFX1NFTEVDVF9NT0RFX0VYVEVOREVEfFxufHNob3dfZXhwYW5kZWR8KGJvb2wpIGlmIFRydWUgdGhlbiB0aGUgdHJlZSB3aWxsIGJlIGluaXRpYWxseSBzaG93biB3aXRoIGFsbCBub2RlcyBjb21wbGV0ZWx5IGV4cGFuZGVkfFxufGNoYW5nZV9zdWJtaXRzfChib29sKSBETyBOT1QgVVNFLiBPbmx5IGxpc3RlZCBmb3IgYmFja3dhcmRzIGNvbXBhdCAtIFVzZSBlbmFibGVfZXZlbnRzIGluc3RlYWR8XG58ZW5hYmxlX2V2ZW50c3woYm9vbCkgVHVybnMgb24gdGhlIGVsZW1lbnQgc3BlY2lmaWMgZXZlbnRzLiBUcmVlIGV2ZW50cyBoYXBwZW4gd2hlbiByb3cgaXMgY2xpY2tlZHxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58anVzdGlmaWNhdGlvbnwoc3RyKSAnbGVmdCcsICdyaWdodCcsICdjZW50ZXInIGFyZSB2YWxpZCBjaG9pY2VzfFxufHRleHRfY29sb3J8KHN0cikgY29sb3Igb2YgdGhlIHRleHR8XG58YmFja2dyb3VuZF9jb2xvcnwoc3RyKSBjb2xvciBvZiBiYWNrZ3JvdW5kfFxufG51bV9yb3dzfChpbnQpIFRoZSBudW1iZXIgb2Ygcm93cyBvZiB0aGUgdGFibGUgdG8gZGlzcGxheSBhdCBhIHRpbWV8XG58cm93X2hlaWdodHwoaW50KSBoZWlnaHQgb2YgYSBzaW5nbGUgcm93IGluIHBpeGVsc3xcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxufGtleXwoQW55KSBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50IHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxyaWdodF9jbGlja19tZW51fExpc3RbTGlzdFtVbmlvbltMaXN0W3N0cl0sc3RyXV1dIEEgbGlzdCBvZiBsaXN0cyBvZiBNZW51IGl0ZW1zIHRvIHNob3cgd2hlbiB0aGlzIGVsZW1lbnQgaXMgcmlnaHQgY2xpY2tlZC4gU2VlIHVzZXIgZG9jcyBmb3IgZXhhY3QgZm9ybWF0Lnxcbnx2aXNpYmxlfChib29sKSBzZXQgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgZWxlbWVudHxcblxuIyMjIyBTZXRGb2N1c1xuXG5TZXRzIHRoZSBjdXJyZW50IGZvY3VzIHRvIGJlIG9uIHRoaXMgZWxlbWVudFxuXG5gYGBcblNldEZvY3VzKGZvcmNlPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxmb3JjZXwoYm9vbCkgaWYgVHJ1ZSB3aWxsIGNhbGwgZm9jdXNfZm9yY2Ugb3RoZXJ3aXNlIGNhbGxzIGZvY3VzX3NldHxcblxuIyMjIyBTZXRUb29sdGlwXG5cbkNhbGxlZCBieSBhcHBsaWNhdGlvbiB0byBjaGFuZ2UgdGhlIHRvb2x0aXAgdGV4dCBmb3IgYW4gRWxlbWVudC4gIE5vcm1hbGx5IGludm9rZWQgdXNpbmcgdGhlIEVsZW1lbnQgT2JqZWN0IHN1Y2ggYXM6IHdpbmRvdy5FbGVtZW50KCdrZXknKS5TZXRUb29sVGlwKCdOZXcgdGlwJykuXG5cbmBgYFxuU2V0VG9vbHRpcCh0b29sdGlwX3RleHQpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRvb2x0aXBfdGV4dHwoc3RyKSB0aGUgdGV4dCB0byBzaG93IGluIHRvb2x0aXAufFxuXG4jIyMjIFVwZGF0ZVxuXG5DaGFuZ2VzIHNvbWUgb2YgdGhlIHNldHRpbmdzIGZvciB0aGUgVHJlZSBFbGVtZW50LiBNdXN0IGNhbGwgYFdpbmRvdy5SZWFkYCBvciBgV2luZG93LkZpbmFsaXplYCBwcmlvclxuXG5gYGBcblVwZGF0ZSh2YWx1ZXM9Tm9uZSxcbiAgICBrZXk9Tm9uZSxcbiAgICB2YWx1ZT1Ob25lLFxuICAgIHRleHQ9Tm9uZSxcbiAgICBpY29uPU5vbmUsXG4gICAgdmlzaWJsZT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnx2YWx1ZXN8KFRyZWVEYXRhKSBSZXByZXNlbnRhdGlvbiBvZiB0aGUgdHJlZXxcbnxrZXl8KEFueSkgaWRlbnRpZmllcyBhIHBhcnRpY3VsYXIgaXRlbSBpbiB0cmVlIHRvIHVwZGF0ZXxcbnx2YWx1ZXwoQW55KSBzZXRzIHRoZSBub2RlIGlkZW50aWZpZWQgYnkga2V5IHRvIGEgcGFydGljdWxhciB2YWx1ZXxcbnx0ZXh0fChzdHIpIHNldHMgdGhlIG5vZGUgaWRlbnRpZmllZCBieSBrZXQgdG8gdGhpcyBzdHJpbmd8XG58aWNvbnxVbmlvbltieXRlcywgc3RyXSBjYW4gYmUgZWl0aGVyIGEgYmFzZTY0IGljb24gb3IgYSBmaWxlbmFtZSBmb3IgdGhlIGljb258XG58dmlzaWJsZXwoYm9vbCkgY29udHJvbCB2aXNpYmlsaXR5IG9mIGVsZW1lbnR8XG5cbiMjIyBUcmVlRGF0YSBDbGFzcyBGb3IgVHJlZSBFbGVtZW50XG5cbiAgICBDbGFzcyB0aGF0IHVzZXIgZmlsbHMgaW4gdG8gcmVwcmVzZW50IHRoZWlyIHRyZWUgZGF0YS4gSXQncyBhIHZlcnkgc2ltcGxlIHRyZWUgcmVwcmVzZW50YXRpb24gd2l0aCBhIHJvb3QgXCJOb2RlXCJcbiAgICB3aXRoIHBvc3NpYmx5IG9uZSBvciBtb3JlIGNoaWxkcmVuIFwiTm9kZXNcIi4gIEVhY2ggTm9kZSBjb250YWlucyBhIGtleSwgdGV4dCB0byBkaXNwbGF5LCBsaXN0IG9mIHZhbHVlcyB0byBkaXNwbGF5XG4gICAgYW5kIGFuIGljb24uICBUaGUgZW50aXJlIHRyZWUgaXMgYnVpbHQgdXNpbmcgYSBzaW5nbGUgbWV0aG9kLCBJbnNlcnQuICBOb3RoaW5nIGVsc2UgaXMgcmVxdWlyZWQgdG8gbWFrZSB0aGUgdHJlZS5cblxuSW5zdGFudGlhdGUgdGhlIG9iamVjdCwgaW5pdGlhbGl6ZXMgdGhlIFRyZWUgRGF0YSwgY3JlYXRlcyBhIHJvb3Qgbm9kZSBmb3IgeW91XG5cbmBgYHB5dGhvblxuVHJlZURhdGEoKVxuYGBgXG5cbiMjIyMgSW5zZXJ0XG5cbkluc2VydHMgYSBub2RlIGludG8gdGhlIHRyZWUuIFRoaXMgaXMgaG93IHVzZXIgYnVpbGRzIHRoZWlyIHRyZWUsIGJ5IEluc2VydGluZyBOb2Rlc1xuVGhpcyBpcyB0aGUgT05MWSB1c2VyIGNhbGxhYmxlIG1ldGhvZCBpbiB0aGUgVHJlZURhdGEgY2xhc3NcblxuYGBgXG5JbnNlcnQocGFyZW50LFxuICAgIGtleSxcbiAgICB0ZXh0LFxuICAgIHZhbHVlcyxcbiAgICBpY29uPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHBhcmVudHwoTm9kZSkgdGhlIHBhcmVudCBOb2RlfFxufGtleXwoQW55KSBVc2VkIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgbm9kZXxcbnx0ZXh0fChzdHIpIFRoZSB0ZXh0IHRoYXQgaXMgZGlzcGxheWVkIGF0IHRoaXMgbm9kZSdzIGxvY2F0aW9ufFxufHZhbHVlc3xMaXN0W0FueV0gVGhlIGxpc3Qgb2YgdmFsdWVzIHRoYXQgYXJlIGRpc3BsYXllZCBhdCB0aGlzIG5vZGV8XG58aWNvbnxVbmlvbltzdHIsIGJ5dGVzXXxcblxuIyMjIyBOb2RlXG5cbkNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBpbmRpdmlkdWFsIG5vZGUgaW4gdGhlIHRyZWVcblxuYGBgXG5Ob2RlKHBhcmVudCxcbiAgICBrZXksXG4gICAgdGV4dCxcbiAgICB2YWx1ZXMsXG4gICAgaWNvbj1Ob25lKVxuYGBgXG5cbiMjIyBWZXJ0aWNhbFNlcGFyYXRvciBFbGVtZW50XG5cbiAgICBWZXJ0aWNhbCBTZXBhcmF0b3IgRWxlbWVudCBkcmF3cyBhIHZlcnRpY2FsIGxpbmUgYXQgdGhlIGdpdmVuIGxvY2F0aW9uLiBJdCB3aWxsIHNwYW4gMSBcInJvd1wiLiBVc3VhbGx5IHBhaXJlZCB3aXRoXG4gICAgQ29sdW1uIEVsZW1lbnQgaWYgZXh0cmEgaGVpZ2h0IGlzIG5lZWRlZFxuXG5gYGBcblZlcnRpY2FsU2VwYXJhdG9yKHBhZD1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxwYWR8KGludCwgaW50KSBvciAoKGludCwgaW50KSwoaW50LGludCkpIEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudCAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgb3IgKChsZWZ0LCByaWdodCksICh0b3AsIGJvdHRvbSkpfFxuXG4jIyMjIFNldEZvY3VzXG5cblNldHMgdGhlIGN1cnJlbnQgZm9jdXMgdG8gYmUgb24gdGhpcyBlbGVtZW50XG5cbmBgYFxuU2V0Rm9jdXMoZm9yY2U9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZvcmNlfChib29sKSBpZiBUcnVlIHdpbGwgY2FsbCBmb2N1c19mb3JjZSBvdGhlcndpc2UgY2FsbHMgZm9jdXNfc2V0fFxuXG4jIyMjIFNldFRvb2x0aXBcblxuQ2FsbGVkIGJ5IGFwcGxpY2F0aW9uIHRvIGNoYW5nZSB0aGUgdG9vbHRpcCB0ZXh0IGZvciBhbiBFbGVtZW50LiAgTm9ybWFsbHkgaW52b2tlZCB1c2luZyB0aGUgRWxlbWVudCBPYmplY3Qgc3VjaCBhczogd2luZG93LkVsZW1lbnQoJ2tleScpLlNldFRvb2xUaXAoJ05ldyB0aXAnKS5cblxuYGBgXG5TZXRUb29sdGlwKHRvb2x0aXBfdGV4dClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dG9vbHRpcF90ZXh0fChzdHIpIHRoZSB0ZXh0IHRvIHNob3cgaW4gdG9vbHRpcC58XG5cbiMjIyBXaW5kb3dcblxuICAgIFJlcHJlc2VudHMgYSBzaW5nbGUgV2luZG93XG5cbmBgYFxuV2luZG93KHRpdGxlLFxuICAgIGxheW91dD1Ob25lLFxuICAgIGRlZmF1bHRfZWxlbWVudF9zaXplPSg0NSwgMSksXG4gICAgZGVmYXVsdF9idXR0b25fZWxlbWVudF9zaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfdGV4dD1Ob25lLFxuICAgIGF1dG9fc2l6ZV9idXR0b25zPU5vbmUsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGVsZW1lbnRfcGFkZGluZz1Ob25lLFxuICAgIG1hcmdpbnM9KE5vbmUsIE5vbmUpLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBwcm9ncmVzc19iYXJfY29sb3I9KE5vbmUsIE5vbmUpLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBib3JkZXJfZGVwdGg9Tm9uZSxcbiAgICBhdXRvX2Nsb3NlPUZhbHNlLFxuICAgIGF1dG9fY2xvc2VfZHVyYXRpb249MyxcbiAgICBpY29uPU5vbmUsXG4gICAgZm9yY2VfdG9wbGV2ZWw9RmFsc2UsXG4gICAgYWxwaGFfY2hhbm5lbD0xLFxuICAgIHJldHVybl9rZXlib2FyZF9ldmVudHM9RmFsc2UsXG4gICAgdXNlX2RlZmF1bHRfZm9jdXM9VHJ1ZSxcbiAgICB0ZXh0X2p1c3RpZmljYXRpb249Tm9uZSxcbiAgICBub190aXRsZWJhcj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIHJlc2l6YWJsZT1GYWxzZSxcbiAgICBkaXNhYmxlX2Nsb3NlPUZhbHNlLFxuICAgIGRpc2FibGVfbWluaW1pemU9RmFsc2UsXG4gICAgcmlnaHRfY2xpY2tfbWVudT1Ob25lLFxuICAgIHRyYW5zcGFyZW50X2NvbG9yPU5vbmUsXG4gICAgZGVidWdnZXJfZW5hYmxlZD1UcnVlLFxuICAgIGZpbmFsaXplPUZhbHNlLFxuICAgIGVsZW1lbnRfanVzdGlmaWNhdGlvbj1cImxlZnRcIilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGl0bGV8KHN0cikgVGhlIHRpdGxlIHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgaW4gdGhlIFRpdGxlYmFyIGFuZCBvbiB0aGUgVGFza2JhcnxcbnxsYXlvdXR8TGlzdFtMaXN0W0VsZW1lbnRzXV0gVGhlIGxheW91dCBmb3IgdGhlIHdpbmRvdy4gQ2FuIGFsc28gYmUgc3BlY2lmaWVkIGluIHRoZSBMYXlvdXQgbWV0aG9kfFxufGRlZmF1bHRfZWxlbWVudF9zaXplfFR1cGxlW2ludCwgaW50XSAod2lkdGgsIGhlaWdodCkgc2l6ZSBpbiBjaGFyYWN0ZXJzICh3aWRlKSBhbmQgcm93cyAoaGlnaCkgZm9yIGFsbCBlbGVtZW50cyBpbiB0aGlzIHdpbmRvd3xcbnxkZWZhdWx0X2J1dHRvbl9lbGVtZW50X3NpemV8VHVwbGVbaW50LCBpbnRdICh3aWR0aCwgaGVpZ2h0KSBzaXplIGluIGNoYXJhY3RlcnMgKHdpZGUpIGFuZCByb3dzIChoaWdoKSBmb3IgYWxsIEJ1dHRvbiBlbGVtZW50cyBpbiB0aGlzIHdpbmRvd3xcbnxhdXRvX3NpemVfdGV4dHwoYm9vbCkgVHJ1ZSBpZiBFbGVtZW50cyBpbiBXaW5kb3cgc2hvdWxkIGJlIHNpemVkIHRvIGV4YWN0bHkgZmlyIHRoZSBsZW5ndGggb2YgdGV4dHxcbnxhdXRvX3NpemVfYnV0dG9uc3woYm9vbCkgVHJ1ZSBpZiBCdXR0b25zIGluIHRoaXMgV2luZG93IHNob3VsZCBiZSBzaXplZCB0byBleGFjdGx5IGZpdCB0aGUgdGV4dCBvbiB0aGlzLnxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gKHgseSkgbG9jYXRpb24sIGluIHBpeGVscywgdG8gbG9jYXRlIHRoZSB1cHBlciBsZWZ0IGNvcm5lciBvZiB0aGUgd2luZG93IG9uIHRoZSBzY3JlZW4uIERlZmF1bHQgaXMgdG8gY2VudGVyIG9uIHNjcmVlbi58XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHdpZHRoLCBoZWlnaHQpIHNpemUgaW4gcGl4ZWxzIGZvciB0aGlzIHdpbmRvdy4gTm9ybWFsbHkgdGhlIHdpbmRvdyBpcyBhdXRvc2l6ZWQgdG8gZml0IGNvbnRlbnRzLCBub3Qgc2V0IHRvIGFuIGFic29sdXRlIHNpemUgYnkgdGhlIHVzZXJ8XG58ZWxlbWVudF9wYWRkaW5nfFR1cGxlW2ludCwgaW50XSBvciAoKGludCwgaW50KSwoaW50LGludCkpIERlZmF1bHQgYW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50cyBpbiB3aW5kb3cgKGxlZnQvcmlnaHQsIHRvcC9ib3R0b20pIG9yICgobGVmdCwgcmlnaHQpLCAodG9wLCBib3R0b20pKXxcbnxtYXJnaW5zfFR1cGxlW2ludCwgaW50XSAobGVmdC9yaWdodCwgdG9wL2JvdHRvbSkgQW1vdW50IG9mIHBpeGVscyB0byBsZWF2ZSBpbnNpZGUgdGhlIHdpbmRvdydzIGZyYW1lIGFyb3VuZCB0aGUgZWRnZXMgYmVmb3JlIHlvdXIgZWxlbWVudHMgYXJlIHNob3duLnxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdICh0ZXh0IGNvbG9yLCBidXR0b24gY29sb3IpIERlZmF1bHQgYnV0dG9uIGNvbG9ycyBmb3IgYWxsIGJ1dHRvbnMgaW4gdGhlIHdpbmRvd3xcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58cHJvZ3Jlc3NfYmFyX2NvbG9yfFR1cGxlW3N0ciwgc3RyXSAoYmFyIGNvbG9yLCBiYWNrZ3JvdW5kIGNvbG9yKSBTZXRzIHRoZSBkZWZhdWx0IGNvbG9ycyBmb3IgYWxsIHByb2dyZXNzIGJhcnMgaW4gdGhlIHdpbmRvd3xcbnxiYWNrZ3JvdW5kX2NvbG9yfChzdHIpIGNvbG9yIG9mIGJhY2tncm91bmR8XG58Ym9yZGVyX2RlcHRofChpbnQpIERlZmF1bHQgYm9yZGVyIGRlcHRoICh3aWR0aCkgZm9yIGFsbCBlbGVtZW50cyBpbiB0aGUgd2luZG93fFxufGF1dG9fY2xvc2V8KGJvb2wpIElmIFRydWUsIHRoZSB3aW5kb3cgd2lsbCBhdXRvbWF0aWNhbGx5IGNsb3NlIGl0c2VsZnxcbnxhdXRvX2Nsb3NlX2R1cmF0aW9ufChpbnQpIE51bWJlciBvZiBzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIGNsb3NpbmcgdGhlIHdpbmRvd3xcbnxpY29ufFVuaW9uW3N0ciwgc3RyXSBDYW4gYmUgZWl0aGVyIGEgZmlsZW5hbWUgb3IgQmFzZTY0IHZhbHVlLnxcbnxmb3JjZV90b3BsZXZlbHwoYm9vbCkgSWYgVHJ1ZSB3aWxsIGNhdXNlIHRoaXMgd2luZG93IHRvIHNraXAgdGhlIG5vcm1hbCB1c2Ugb2YgYSBoaWRkZW4gbWFzdGVyIHdpbmRvd3xcbnxhbHBoYV9jaGFubmVsfChmbG9hdCkgU2V0cyB0aGUgb3BhY2l0eSBvZiB0aGUgd2luZG93LiAwID0gaW52aXNpYmxlIDEgPSBjb21wbGV0ZWx5IHZpc2libGUuIFZhbHVlcyBiZXd0ZWVuIDAgJiAxIHdpbGwgcHJvZHVjZSBzZW1pLXRyYW5zcGFyZW50IHdpbmRvd3MgaW4gU09NRSBlbnZpcm9ubWVudHMgKFRoZSBSYXNwYmVycnkgUGkgYWx3YXlzIGhhcyB0aGlzIHZhbHVlIGF0IDEgYW5kIGNhbm5vdCBjaGFuZ2UufFxufHJldHVybl9rZXlib2FyZF9ldmVudHN8KGJvb2wpIGlmIFRydWUga2V5IHByZXNzZXMgb24gdGhlIGtleWJvYXJkIHdpbGwgYmUgcmV0dXJuZWQgYXMgRXZlbnRzIGZyb20gUmVhZCBjYWxsc3xcbnx1c2VfZGVmYXVsdF9mb2N1c3woYm9vbCkgSWYgVHJ1ZSB3aWxsIHVzZSB0aGUgZGVmYXVsdCBmb2N1cyBhbGdvcml0aG0gdG8gc2V0IHRoZSBmb2N1cyB0byB0aGUgXCJDb3JyZWN0XCIgZWxlbWVudHxcbnx0ZXh0X2p1c3RpZmljYXRpb258KHN0cikgVW5pb24gWydsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlciddIERlZmF1bHQgdGV4dCBqdXN0aWZpY2F0aW9uIGZvciBhbGwgVGV4dCBFbGVtZW50cyBpbiB3aW5kb3d8XG58bm9fdGl0bGViYXJ8KGJvb2wpIElmIHRydWUsIG5vIHRpdGxlYmFyIG5vciBmcmFtZSB3aWxsIGJlIHNob3duIG9uIHdpbmRvdy4gVGhpcyBtZWFucyB5b3UgY2Fubm90IG1pbmltaXplIHRoZSB3aW5kb3cgYW5kIGl0IHdpbGwgbm90IHNob3cgdXAgb24gdGhlIHRhc2tiYXJ8XG58Z3JhYl9hbnl3aGVyZXwoYm9vbCkgSWYgVHJ1ZSBjYW4gdXNlIG1vdXNlIHRvIGNsaWNrIGFuZCBkcmFnIHRvIG1vdmUgdGhlIHdpbmRvdy4gQWxtb3N0IGV2ZXJ5IGxvY2F0aW9uIG9mIHRoZSB3aW5kb3cgd2lsbCB3b3JrIGV4Y2VwdCBpbnB1dCBmaWVsZHMgb24gc29tZSBzeXN0ZW1zfFxufGtlZXBfb25fdG9wfChib29sKSBJZiBUcnVlLCB3aW5kb3cgd2lsbCBiZSBjcmVhdGVkIG9uIHRvcCBvZiBhbGwgb3RoZXIgd2luZG93cyBvbiBzY3JlZW4uIEl0IGNhbiBiZSBidW1wZWQgZG93biBpZiBhbm90aGVyIHdpbmRvdyBjcmVhdGVkIHdpdGggdGhpcyBwYXJtfFxufHJlc2l6YWJsZXwoYm9vbCkgSWYgVHJ1ZSwgYWxsb3dzIHRoZSB1c2VyIHRvIHJlc2l6ZSB0aGUgd2luZG93LiBOb3RlIHRoZSBub3QgYWxsIEVsZW1lbnRzIHdpbGwgY2hhbmdlIHNpemUgb3IgbG9jYXRpb24gd2hlbiByZXNpemluZy58XG58ZGlzYWJsZV9jbG9zZXwoYm9vbCkgSWYgVHJ1ZSwgdGhlIFggYnV0dG9uIGluIHRoZSB0b3AgcmlnaHQgY29ybmVyIG9mIHRoZSB3aW5kb3cgd2lsbCBubyB3b3JrLiBVc2Ugd2l0aCBjYXV0aW9uIGFuZCBhbHdheXMgZ2l2ZSBhIHdheSBvdXQgdG95b3VyIHVzZXJzfFxufGRpc2FibGVfbWluaW1pemV8KGJvb2wpIGlmIFRydWUgdGhlIHVzZXIgd29uJ3QgYmUgYWJsZSB0byBtaW5pbWl6ZSB3aW5kb3cuIEdvb2QgZm9yIHRha2luZyBvdmVyIGVudGlyZSBzY3JlZW4gYW5kIHN0YXlpbmcgdGhhdCB3YXkufFxufHJpZ2h0X2NsaWNrX21lbnV8TGlzdFtMaXN0W1VuaW9uW0xpc3Rbc3RyXSxzdHJdXV0gQSBsaXN0IG9mIGxpc3RzIG9mIE1lbnUgaXRlbXMgdG8gc2hvdyB3aGVuIHRoaXMgZWxlbWVudCBpcyByaWdodCBjbGlja2VkLiBTZWUgdXNlciBkb2NzIGZvciBleGFjdCBmb3JtYXQufFxufHRyYW5zcGFyZW50X2NvbG9yfChzdHIpIEFueSBwb3J0aW9uIG9mIHRoZSB3aW5kb3cgdGhhdCBoYXMgdGhpcyBjb2xvciB3aWxsIGJlIGNvbXBsZXRlbHkgdHJhbnNwYXJlbnQuIFlvdSBjYW4gZXZlbiBjbGljayB0aHJvdWdoIHRoZXNlIHNwb3RzIHRvIHRoZSB3aW5kb3cgdW5kZXIgdGhpcyB3aW5kb3cufFxufGRlYnVnZ2VyX2VuYWJsZWR8KGJvb2wpIElmIFRydWUgdGhlbiB0aGUgaW50ZXJuYWwgZGVidWdnZXIgd2lsbCBiZSBlbmFibGVkfFxufGZpbmFsaXplfChib29sKSBJZiBUcnVlIHRoZW4gdGhlIEZpbmFsaXplIG1ldGhvZCB3aWxsIGJlIGNhbGxlZC4gVXNlIHRoaXMgcmF0aGVyIHRoYW4gY2hhaW5pbmcgLkZpbmFsaXplIGZvciBjbGVhbmVyIGNvZGV8XG58ZWxlbWVudF9qdXN0aWZpY2F0aW9ufChzdHIpIEFsbCBlbGVtZW50cyBpbiB0aGUgV2luZG93IGl0c2VsZiB3aWxsIGhhdmUgdGhpcyBqdXN0aWZpY2F0aW9uICdsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlcicgYXJlIHZhbGlkIHZhbHVlc3xcblxuIyMjIyBBZGRSb3dcblxuQWRkcyBhIHNpbmdsZSByb3cgb2YgZWxlbWVudHMgdG8gYSB3aW5kb3cncyBzZWxmLlJvd3MgdmFyaWFibGVzLlxuR2VuZXJhbGx5IHNwZWFraW5nIHRoaXMgaXMgTk9UIGhvdyB1c2VycyBzaG91bGQgYmUgYnVpbGRpbmcgV2luZG93IGxheW91dHMuXG5Vc2VycywgY3JlYXRlIGEgc2luZ2xlIGxheW91dCAoYSBsaXN0IG9mIGxpc3RzKSBhbmQgcGFzcyBhcyBhIHBhcmFtZXRlciB0byBXaW5kb3cgb2JqZWN0LCBvciBjYWxsIFdpbmRvdy5MYXlvdXQobGF5b3V0KVxuXG5gYGBcbkFkZFJvdyhhcmdzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3xMaXN0W0VsZW1lbnRzXXxcblxuIyMjIyBBZGRSb3dzXG5cbkxvb3BzIHRocm91Z2ggYSBsaXN0IG9mIGxpc3RzIG9mIGVsZW1lbnRzIGFuZCBhZGRzIGVhY2ggcm93LCBsaXN0LCB0byB0aGUgbGF5b3V0LlxuVGhpcyBpcyBOT1QgdGhlIGJlc3Qgd2F5IHRvIGdvIGFib3V0IGNyZWF0aW5nIGEgd2luZG93LiAgU2VuZGluZyB0aGUgZW50aXJlIGxheW91dCBhdCBvbmUgdGltZSBhbmQgcGFzc2luZ1xuaXQgYXMgYSBwYXJhbWV0ZXIgdG8gdGhlIFdpbmRvdyBjYWxsIGlzIGJldHRlci5cblxuYGBgXG5BZGRSb3dzKHJvd3MpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHJvd3N8TGlzdFtMaXN0W0VsZW1lbnRzXV0gQSBsaXN0IG9mIGEgbGlzdCBvZiBlbGVtZW50c3xcblxuIyMjIyBBbHBoYUNoYW5uZWxcblxuIyMjIyBCcmluZ1RvRnJvbnRcblxuQnJpbmdzIHRoaXMgd2luZG93IHRvIHRoZSB0b3Agb2YgYWxsIG90aGVyIHdpbmRvd3MgKHBlcmhhcHMgbWF5IG5vdCBiZSBicm91Z2h0IGJlZm9yZSBhIHdpbmRvdyBtYWRlIHRvIFwic3RheVxuICAgICAgICBvbiB0b3BcIilcblxuYGBgcHl0aG9uXG5CcmluZ1RvRnJvbnQoKVxuYGBgXG5cbiMjIyMgQ2xvc2VcblxuQ2xvc2VzIHdpbmRvdy4gIFVzZXJzIGNhbiBzYWZlbHkgY2FsbCBldmVuIGlmIHdpbmRvdyBoYXMgYmVlbiBkZXN0cm95ZWQuICAgU2hvdWxkIGFsd2F5cyBjYWxsIHdoZW4gZG9uZSB3aXRoXG4gICAgICAgIGEgd2luZG93IHNvIHRoYXQgcmVzb3VyY2VzIGFyZSBwcm9wZXJseSBmcmVlZCB1cCB3aXRoaW4geW91ciB0aHJlYWQuXG5cbmBgYHB5dGhvblxuQ2xvc2UoKVxuYGBgXG5cbiMjIyMgQ3VycmVudExvY2F0aW9uXG5cbkdldCB0aGUgY3VycmVudCBsb2NhdGlvbiBvZiB0aGUgd2luZG93J3MgdG9wIGxlZnQgY29ybmVyXG5cbmBDdXJyZW50TG9jYXRpb24oKWBcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCAqKnJldHVybioqIHwgVHVwbGVbKGludCksIChpbnQpXSBUaGUgeCBhbmQgeSBsb2NhdGlvbiBpbiB0dXBsZSBmb3JtICh4LHkpIHxcblxuIyMjIyBEZWNyZW1lbnRPcGVuQ291bnRcblxuTm90IHVzZXIgY2FsbGFibGUhICBEZWNyZW1lbnRzIHRoZSBudW1iZXIgb2Ygb3BlbiB3aW5kb3dzXG5cbmBgYFxuRGVjcmVtZW50T3BlbkNvdW50KClcbmBgYFxuXG4jIyMjIERpc2FibGVcblxuRGlzYWJsZXMgd2luZG93IGZyb20gdGFraW5nIGFueSBpbnB1dCBmcm9tIHRoZSB1c2VyXG5cbmBgYHB5dGhvblxuRGlzYWJsZSgpXG5gYGBcblxuIyMjIyBEaXNhYmxlRGVidWdnZXJcblxuRGlzYWJsZSB0aGUgaW50ZXJuYWwgZGVidWdnZXIuIEJ5IGRlZmF1bHQgdGhlIGRlYnVnZ2VyIGlzIEVOQUJMRURcblxuYGBgcHl0aG9uXG5EaXNhYmxlRGVidWdnZXIoKVxuYGBgXG5cbiMjIyMgRGlzYXBwZWFyXG5cbkNhdXNlcyBhIHdpbmRvdyB0byBcImRpc2FwcGVhclwiIGZyb20gdGhlIHNjcmVlbiwgYnV0IHJlbWFpbiBvbiB0aGUgdGFza2Jhci4gSXQgZG9lcyB0aGlzIGJ5IHR1cm5pbmcgdGhlIGFscGhhXG4gICAgICAgIGNoYW5uZWwgdG8gMC4gIE5PVEUgdGhhdCBvbiBzb21lIHBsYXRmb3JtcyBhbHBoYSBpcyBub3Qgc3VwcG9ydGVkLiBUaGUgd2luZG93IHdpbGwgcmVtYWluIHNob3dpbmcgb24gdGhlc2VcbiAgICAgICAgcGxhdGZvcm1zLiAgVGhlIFJhc3BiZXJyeSBQaSBmb3IgZXhhbXBsZSBkb2VzIG5vdCBoYXZlIGFuIGFscGhhIHNldHRpbmdcblxuYGBgcHl0aG9uXG5EaXNhcHBlYXIoKVxuYGBgXG5cbiMjIyMgRWxlbVxuXG5GaW5kIGVsZW1lbnQgb2JqZWN0IGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJvdmlkZWQga2V5LlxuVEhJUyBNRVRIT0QgSVMgTk8gTE9OR0VSIE5FRURFRCB0byBiZSBjYWxsZWQgYnkgdGhlIHVzZXJcblxuWW91IGNhbiBwZXJmb3JtIHRoZSBzYW1lIG9wZXJhdGlvbiBieSB3cml0aW5nIHRoaXMgc3RhdGVtZW50OlxuZWxlbWVudCA9IHdpbmRvd1trZXldXG5cbllvdSBjYW4gZHJvcCB0aGUgZW50aXJlIFwiRmluZEVsZW1lbnRcIiBmdW5jdGlvbiBuYW1lIGFuZCB1c2UgWyBdIGluc3RlYWQuXG5cblR5cGljYWxseSB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggYSBjYWxsIHRvIGVsZW1lbnQncyBVcGRhdGUgbWV0aG9kIChvciBhbnkgb3RoZXIgZWxlbWVudCBtZXRob2QhKTpcbndpbmRvd1trZXldLlVwZGF0ZShuZXdfdmFsdWUpXG5cblZlcnN1cyB0aGUgXCJvbGQgd2F5XCJcbndpbmRvdy5GaW5kRWxlbWVudChrZXkpLlVwZGF0ZShuZXdfdmFsdWUpXG5cblRoaXMgY2FsbCBjYW4gYmUgYWJicmV2aWF0ZWQgdG8gYW55IG9mIHRoZXNlOlxuRmluZEVsZW1lbnQgPT0gRWxlbWVudCA9PSBGaW5kXG5SZW1lbWViZXIgdGhhdCB0aGlzIGNhbGwgd2lsbCByZXR1cm4gTm9uZSBpZiBubyBtYXRjaCBpcyBmb3VuZCB3aGljaCBtYXkgY2F1c2UgeW91ciBjb2RlIHRvIGNyYXNoIGlmIG5vdFxuY2hlY2tlZCBmb3IuXG5cbmBgYFxuRWxlbShrZXksIHNpbGVudF9vbl9lcnJvcj1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58a2V5fChBbnkpIFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58c2lsZW50X29uX2Vycm9yfChib29sKSBJZiBUcnVlIGRvIG5vdCBkaXNwbGF5IHBvcHVwIG5vciBwcmludCB3YXJuaW5nIG9mIGtleSBlcnJvcnN8XG58fHxcbnwgKipyZXR1cm4qKiB8IFVuaW9uW0VsZW1lbnQsIEVycm9yIEVsZW1lbnQsIE5vbmVdIFJldHVybiB2YWx1ZSBjYW4gYmU6IDxicj4gICAqIHRoZSBFbGVtZW50IHRoYXQgbWF0Y2hlcyB0aGUgc3VwcGxpZWQga2V5IGlmIGZvdW5kIDxicj4gICAqIGFuIEVycm9yIEVsZW1lbnQgaWYgc2lsZW50X29uX2Vycm9yIGlzIEZhbHNlIDxicj4gICAqIE5vbmUgaWYgc2lsZW50X29uX2Vycm9yIFRydWUgfFxuXG4jIyMjIEVsZW1lbnRcblxuRmluZCBlbGVtZW50IG9iamVjdCBhc3NvY2lhdGVkIHdpdGggdGhlIHByb3ZpZGVkIGtleS5cblRISVMgTUVUSE9EIElTIE5PIExPTkdFUiBORUVERUQgdG8gYmUgY2FsbGVkIGJ5IHRoZSB1c2VyXG5cbllvdSBjYW4gcGVyZm9ybSB0aGUgc2FtZSBvcGVyYXRpb24gYnkgd3JpdGluZyB0aGlzIHN0YXRlbWVudDpcbmVsZW1lbnQgPSB3aW5kb3dba2V5XVxuXG5Zb3UgY2FuIGRyb3AgdGhlIGVudGlyZSBcIkZpbmRFbGVtZW50XCIgZnVuY3Rpb24gbmFtZSBhbmQgdXNlIFsgXSBpbnN0ZWFkLlxuXG5UeXBpY2FsbHkgdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRoIGEgY2FsbCB0byBlbGVtZW50J3MgVXBkYXRlIG1ldGhvZCAob3IgYW55IG90aGVyIGVsZW1lbnQgbWV0aG9kISk6XG53aW5kb3dba2V5XS5VcGRhdGUobmV3X3ZhbHVlKVxuXG5WZXJzdXMgdGhlIFwib2xkIHdheVwiXG53aW5kb3cuRmluZEVsZW1lbnQoa2V5KS5VcGRhdGUobmV3X3ZhbHVlKVxuXG5UaGlzIGNhbGwgY2FuIGJlIGFiYnJldmlhdGVkIHRvIGFueSBvZiB0aGVzZTpcbkZpbmRFbGVtZW50ID09IEVsZW1lbnQgPT0gRmluZFxuUmVtZW1lYmVyIHRoYXQgdGhpcyBjYWxsIHdpbGwgcmV0dXJuIE5vbmUgaWYgbm8gbWF0Y2ggaXMgZm91bmQgd2hpY2ggbWF5IGNhdXNlIHlvdXIgY29kZSB0byBjcmFzaCBpZiBub3RcbmNoZWNrZWQgZm9yLlxuXG5gYGBcbkVsZW1lbnQoa2V5LCBzaWxlbnRfb25fZXJyb3I9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGtleXwoQW55KSBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHNpbGVudF9vbl9lcnJvcnwoYm9vbCkgSWYgVHJ1ZSBkbyBub3QgZGlzcGxheSBwb3B1cCBub3IgcHJpbnQgd2FybmluZyBvZiBrZXkgZXJyb3JzfFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltFbGVtZW50LCBFcnJvciBFbGVtZW50LCBOb25lXSBSZXR1cm4gdmFsdWUgY2FuIGJlOiA8YnI+ICAgKiB0aGUgRWxlbWVudCB0aGF0IG1hdGNoZXMgdGhlIHN1cHBsaWVkIGtleSBpZiBmb3VuZCA8YnI+ICAgKiBhbiBFcnJvciBFbGVtZW50IGlmIHNpbGVudF9vbl9lcnJvciBpcyBGYWxzZSA8YnI+ICAgKiBOb25lIGlmIHNpbGVudF9vbl9lcnJvciBUcnVlIHxcblxuIyMjIyBFbmFibGVcblxuUmUtZW5hYmxlcyB3aW5kb3cgdG8gdGFrZSB1c2VyIGlucHV0IGFmdGVyIGhhdmluZyBpdCBiZSBEaXNhYmxlZCBwcmV2aW91c2x5XG5cbmBgYHB5dGhvblxuRW5hYmxlKClcbmBgYFxuXG4jIyMjIEVuYWJsZURlYnVnZ2VyXG5cbkVuYWJsZXMgdGhlIGludGVybmFsIGRlYnVnZ2VyLiBCeSBkZWZhdWx0LCB0aGUgZGVidWdnZXIgSVMgZW5hYmxlZFxuXG5gYGBweXRob25cbkVuYWJsZURlYnVnZ2VyKClcbmBgYFxuXG4jIyMjIEZpbGxcblxuRmlsbCBpbiBlbGVtZW50cyB0aGF0IGFyZSBpbnB1dCBmaWVsZHMgd2l0aCBkYXRhIGJhc2VkIG9uIGEgJ3ZhbHVlcyBkaWN0aW9uYXJ5J1xuXG5gYGBcbkZpbGwodmFsdWVzX2RpY3QpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHZhbHVlc19kaWN0fChEaWN0W0FueTpBbnldKSB7RWxlbWVudCBrZXkgOiB2YWx1ZX0gcGFpcnN8XG58fHxcbnwgKipyZXR1cm4qKiB8IChXaW5kb3cpIHJldHVybnMgc2VsZiBzbyBjYW4gYmUgY2hhaW5lZCB3aXRoIG90aGVyIG1ldGhvZHMgfFxuXG4jIyMjIEZpbmFsaXplXG5cblVzZSB0aGlzIG1ldGhvZCB0byBjYXVzZSB5b3VyIGxheW91dCB0byBidWlsdCBpbnRvIGEgcmVhbCB0a2ludGVyIHdpbmRvdy4gIEluIHJlYWxpdHkgdGhpcyBtZXRob2QgaXMgbGlrZVxuUmVhZCh0aW1lb3V0PTApLiAgSXQgZG9lc24ndCBibG9jayBhbmQgdXNlcyB5b3VyIGxheW91dCB0byBjcmVhdGUgdGtpbnRlciB3aWRnZXRzIHRvIHJlcHJlc2VudCB0aGUgZWxlbWVudHMuXG5Mb3RzIG9mIGFjdGlvbiFcblxuYEZpbmFsaXplKClgXG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwgKipyZXR1cm4qKiB8IChXaW5kb3cpIFJldHVybnMgJ3NlbGYnIHNvIHRoYXQgbWV0aG9kIFwiQ2hhaW5pbmdcIiBjYW4gaGFwcGVuIChyZWFkIHVwIGFib3V0IGl0IGFzIGl0J3MgdmVyeSBjb29sISkgfFxuXG4jIyMjIEZpbmRcblxuRmluZCBlbGVtZW50IG9iamVjdCBhc3NvY2lhdGVkIHdpdGggdGhlIHByb3ZpZGVkIGtleS5cblRISVMgTUVUSE9EIElTIE5PIExPTkdFUiBORUVERUQgdG8gYmUgY2FsbGVkIGJ5IHRoZSB1c2VyXG5cbllvdSBjYW4gcGVyZm9ybSB0aGUgc2FtZSBvcGVyYXRpb24gYnkgd3JpdGluZyB0aGlzIHN0YXRlbWVudDpcbmVsZW1lbnQgPSB3aW5kb3dba2V5XVxuXG5Zb3UgY2FuIGRyb3AgdGhlIGVudGlyZSBcIkZpbmRFbGVtZW50XCIgZnVuY3Rpb24gbmFtZSBhbmQgdXNlIFsgXSBpbnN0ZWFkLlxuXG5UeXBpY2FsbHkgdXNlZCBpbiBjb21iaW5hdGlvbiB3aXRoIGEgY2FsbCB0byBlbGVtZW50J3MgVXBkYXRlIG1ldGhvZCAob3IgYW55IG90aGVyIGVsZW1lbnQgbWV0aG9kISk6XG53aW5kb3dba2V5XS5VcGRhdGUobmV3X3ZhbHVlKVxuXG5WZXJzdXMgdGhlIFwib2xkIHdheVwiXG53aW5kb3cuRmluZEVsZW1lbnQoa2V5KS5VcGRhdGUobmV3X3ZhbHVlKVxuXG5UaGlzIGNhbGwgY2FuIGJlIGFiYnJldmlhdGVkIHRvIGFueSBvZiB0aGVzZTpcbkZpbmRFbGVtZW50ID09IEVsZW1lbnQgPT0gRmluZFxuUmVtZW1lYmVyIHRoYXQgdGhpcyBjYWxsIHdpbGwgcmV0dXJuIE5vbmUgaWYgbm8gbWF0Y2ggaXMgZm91bmQgd2hpY2ggbWF5IGNhdXNlIHlvdXIgY29kZSB0byBjcmFzaCBpZiBub3RcbmNoZWNrZWQgZm9yLlxuXG5gYGBcbkZpbmQoa2V5LCBzaWxlbnRfb25fZXJyb3I9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGtleXwoQW55KSBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHNpbGVudF9vbl9lcnJvcnwoYm9vbCkgSWYgVHJ1ZSBkbyBub3QgZGlzcGxheSBwb3B1cCBub3IgcHJpbnQgd2FybmluZyBvZiBrZXkgZXJyb3JzfFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltFbGVtZW50LCBFcnJvciBFbGVtZW50LCBOb25lXSBSZXR1cm4gdmFsdWUgY2FuIGJlOiA8YnI+ICAgKiB0aGUgRWxlbWVudCB0aGF0IG1hdGNoZXMgdGhlIHN1cHBsaWVkIGtleSBpZiBmb3VuZCA8YnI+ICAgKiBhbiBFcnJvciBFbGVtZW50IGlmIHNpbGVudF9vbl9lcnJvciBpcyBGYWxzZSA8YnI+ICAgKiBOb25lIGlmIHNpbGVudF9vbl9lcnJvciBUcnVlIHxcblxuIyMjIyBGaW5kRWxlbWVudFxuXG5GaW5kIGVsZW1lbnQgb2JqZWN0IGFzc29jaWF0ZWQgd2l0aCB0aGUgcHJvdmlkZWQga2V5LlxuVEhJUyBNRVRIT0QgSVMgTk8gTE9OR0VSIE5FRURFRCB0byBiZSBjYWxsZWQgYnkgdGhlIHVzZXJcblxuWW91IGNhbiBwZXJmb3JtIHRoZSBzYW1lIG9wZXJhdGlvbiBieSB3cml0aW5nIHRoaXMgc3RhdGVtZW50OlxuZWxlbWVudCA9IHdpbmRvd1trZXldXG5cbllvdSBjYW4gZHJvcCB0aGUgZW50aXJlIFwiRmluZEVsZW1lbnRcIiBmdW5jdGlvbiBuYW1lIGFuZCB1c2UgWyBdIGluc3RlYWQuXG5cblR5cGljYWxseSB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggYSBjYWxsIHRvIGVsZW1lbnQncyBVcGRhdGUgbWV0aG9kIChvciBhbnkgb3RoZXIgZWxlbWVudCBtZXRob2QhKTpcbndpbmRvd1trZXldLlVwZGF0ZShuZXdfdmFsdWUpXG5cblZlcnN1cyB0aGUgXCJvbGQgd2F5XCJcbndpbmRvdy5GaW5kRWxlbWVudChrZXkpLlVwZGF0ZShuZXdfdmFsdWUpXG5cblRoaXMgY2FsbCBjYW4gYmUgYWJicmV2aWF0ZWQgdG8gYW55IG9mIHRoZXNlOlxuRmluZEVsZW1lbnQgPT0gRWxlbWVudCA9PSBGaW5kXG5SZW1lbWViZXIgdGhhdCB0aGlzIGNhbGwgd2lsbCByZXR1cm4gTm9uZSBpZiBubyBtYXRjaCBpcyBmb3VuZCB3aGljaCBtYXkgY2F1c2UgeW91ciBjb2RlIHRvIGNyYXNoIGlmIG5vdFxuY2hlY2tlZCBmb3IuXG5cbmBgYFxuRmluZEVsZW1lbnQoa2V5LCBzaWxlbnRfb25fZXJyb3I9RmFsc2UpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGtleXwoQW55KSBVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHNpbGVudF9vbl9lcnJvcnwoYm9vbCkgSWYgVHJ1ZSBkbyBub3QgZGlzcGxheSBwb3B1cCBub3IgcHJpbnQgd2FybmluZyBvZiBrZXkgZXJyb3JzfFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltFbGVtZW50LCBFcnJvciBFbGVtZW50LCBOb25lXSBSZXR1cm4gdmFsdWUgY2FuIGJlOiA8YnI+ICAgKiB0aGUgRWxlbWVudCB0aGF0IG1hdGNoZXMgdGhlIHN1cHBsaWVkIGtleSBpZiBmb3VuZCA8YnI+ICAgKiBhbiBFcnJvciBFbGVtZW50IGlmIHNpbGVudF9vbl9lcnJvciBpcyBGYWxzZSA8YnI+ICAgKiBOb25lIGlmIHNpbGVudF9vbl9lcnJvciBUcnVlIHxcblxuIyMjIyBGaW5kRWxlbWVudFdpdGhGb2N1c1xuXG5SZXR1cm5zIHRoZSBFbGVtZW50IHRoYXQgY3VycmVudGx5IGhhcyBmb2N1cyBhcyByZXBvcnRlZCBieSB0a2ludGVyLiBJZiBubyBlbGVtZW50IGlzIGZvdW5kIE5vbmUgaXMgcmV0dXJuZWQhXG5cbmBGaW5kRWxlbWVudFdpdGhGb2N1cygpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCBVbmlvbltFbGVtZW50LCBOb25lXSBBbiBFbGVtZW50IGlmIG9uZSBoYXMgYmVlbiBmb3VuZCB3aXRoIGZvY3VzIG9yIE5vbmUgaWYgbm8gZWxlbWVudCBmb3VuZCB8XG5cbiMjIyMgR2V0U2NyZWVuRGltZW5zaW9uc1xuXG5HZXQgdGhlIHNjcmVlbiBkaW1lbnNpb25zLiAgTk9URSAtIHlvdSBtdXN0IGhhdmUgYSB3aW5kb3cgYWxyZWFkeSBvcGVuIGZvciB0aGlzIHRvIHdvcmsgKGJsYW1lIHRraW50ZXIgbm90IG1lKVxuXG5gR2V0U2NyZWVuRGltZW5zaW9ucygpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCBVbmlvbltUdXBsZVtOb25lLCBOb25lXSwgVHVwbGVbd2lkdGgsIGhlaWdodF1dIFR1cGxlIGNvbnRhaW5pbmcgd2lkdGggYW5kIGhlaWdodCBvZiBzY3JlZW4gaW4gcGl4ZWxzIHxcblxuIyMjIyBHcmFiQW55V2hlcmVPZmZcblxuVHVybnMgb2ZmIEdyYWIgQW55d2hlcmUgZnVuY3Rpb25hbGl0eSBBRlRFUiBhIHdpbmRvdyBoYXMgYmVlbiBjcmVhdGVkLiAgRG9uJ3QgdHJ5IG9uIGEgd2luZG93IHRoYXQncyBub3QgeWV0XG4gICAgICAgIGJlZW4gRmluYWxpemVkIG9yIFJlYWQuXG5cbmBgYHB5dGhvblxuR3JhYkFueVdoZXJlT2ZmKClcbmBgYFxuXG4jIyMjIEdyYWJBbnlXaGVyZU9uXG5cblR1cm5zIG9uIEdyYWIgQW55d2hlcmUgZnVuY3Rpb25hbGl0eSBBRlRFUiBhIHdpbmRvdyBoYXMgYmVlbiBjcmVhdGVkLiAgRG9uJ3QgdHJ5IG9uIGEgd2luZG93IHRoYXQncyBub3QgeWV0XG4gICAgICAgIGJlZW4gRmluYWxpemVkIG9yIFJlYWQuXG5cbmBgYHB5dGhvblxuR3JhYkFueVdoZXJlT24oKVxuYGBgXG5cbiMjIyMgSGlkZVxuXG5IaWRlcyB0aGUgd2luZG93IGZyb20gdGhlIHNjcmVlbiBhbmQgdGhlIHRhc2sgYmFyXG5cbmBgYHB5dGhvblxuSGlkZSgpXG5gYGBcblxuIyMjIyBJbmNyZW1lbnRPcGVuQ291bnRcblxuTm90IHVzZXIgY2FsbGFibGUhICBJbmNyZW1lbnRzIHRoZSBudW1iZXIgb2Ygb3BlbiB3aW5kb3dzXG5Ob3RlIC0gdGhlcmUgaXMgYSBidWcgd2hlcmUgdGhpcyBjb3VudCBlYXNpbHkgZ2V0cyBvdXQgb2Ygc3luYy4gSXNzdWUgaGFzIGJlZW4gb3BlbmVkIGFscmVhZHkuIE5vIGlsbCBlZmZlY3RzXG5cbmBgYFxuSW5jcmVtZW50T3BlbkNvdW50KClcbmBgYFxuXG4jIyMjIExheW91dFxuXG5TZWNvbmQgb2YgdHdvIHByZWZlcnJlZCB3YXlzIG9mIHRlbGxpbmcgYSBXaW5kb3cgd2hhdCBpdHMgbGF5b3V0IGlzLiBUaGUgb3RoZXIgd2F5IGlzIHRvIHBhc3MgdGhlIGxheW91dCBhc1xuYSBwYXJhbWV0ZXIgdG8gV2luZG93IG9iamVjdC4gIFRoZSBwYXJhbWV0ZXIgbWV0aG9kIGlzIHRoZSBjdXJyZW50bHkgcHJlZmVycmVkIG1ldGhvZC4gVGhpcyBjYWxsIHRvIExheW91dFxuaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIGV4YW1wbGVzIGNvbnRhaW5lZCBpbiBkb2N1bWVudHMgYW5kIGluIHRoZSBEZW1vIFByb2dyYW1zLiBUcnlpbmcgdG8gcmVtb3ZlIHRoaXMgY2FsbFxuZnJvbSBoaXN0b3J5IGFuZCByZXBsYWNlIHdpdGggc2VuZGluZyBhcyBhIHBhcmFtZXRlciB0byBXaW5kb3cuXG5cbmBgYFxuTGF5b3V0KHJvd3MpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHJvd3N8TGlzdFtMaXN0W0VsZW1lbnRzXV0gWW91ciBlbnRpcmUgbGF5b3V0fFxufHx8XG58ICoqcmV0dXJuKiogfCAoV2luZG93fSBzZWxmIHNvIHRoYXQgeW91IGNhbiBjaGFpbiBtZXRob2QgY2FsbHMgfFxuXG4jIyMjIExheW91dEFuZFJlYWRcblxuRGVwcmVjYXRlZCEhICBOb3cgeW91ciBsYXlvdXQgeW91ciB3aW5kb3cncyByb3dzIChsYXlvdXQpIGFuZCB0aGVuIHNlcGFyYXRlbHkgY2FsbCBSZWFkLlxuXG5gYGBcbkxheW91dEFuZFJlYWQocm93cywgbm9uX2Jsb2NraW5nPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxyb3dzfChMaXN0W0xpc3RbRWxlbWVudF1dKSBUaGUgbGF5b3V0IG9mIHRoZSB3aW5kb3d8XG58bm9uX2Jsb2NraW5nfChib29sKSBpZiBUcnVlIHRoZSBSZWFkIGNhbGwgd2lsbCBub3QgYmxvY2t8XG5cbiMjIyMgTGF5b3V0QW5kU2hvd1xuXG5EZXByZWNhdGVkIC0gZG8gbm90IHVzZSBhbnkgbG9uZ2VyLiAgTGF5b3V0IHlvdXIgd2luZG93IGFuZCB0aGVuIGNhbGwgUmVhZC4gIE9yIGNhbiBhZGQgYSBGaW5hbGl6ZSBjYWxsIGJlZm9yZSB0aGUgUmVhZFxuXG5gYGBcbkxheW91dEFuZFNob3cocm93cylcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58cm93c3x8XG5cbiMjIyMgTG9hZEZyb21EaXNrXG5cblJlc3RvcmUgdmFsdWVzIGZyb20gYSBwcmV2aW91cyBjYWxsIHRvIFNhdmVUb0Rpc2sgd2hpY2ggc2F2ZXMgdGhlIHJldHVybmVkIHZhbHVlcyBkaWN0aW9uYXJ5IGluIFBpY2tsZSBmb3JtYXRcblxuYGBgXG5Mb2FkRnJvbURpc2soZmlsZW5hbWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGZpbGVuYW1lfChzdHIpIFBpY2tsZSBGaWxlbmFtZSB0byBsb2FkfFxuXG4jIyMjIE1heGltaXplXG5cbk1heGltaXplIHRoZSB3aW5kb3cuIFRoaXMgaXMgZG9uZSBkaWZmZXJlbnRseSBvbiBhIHdpbmRvd3Mgc3lzdGVtIHZlcnN1cyBhIGxpbnV4IG9yIG1hYyBvbmUuICBGb3Igbm9uLVdpbmRvd3NcbiAgICAgICAgdGhlIHJvb3QgYXR0cmlidXRlICctZnVsbHNjcmVlbicgaXMgc2V0IHRvIFRydWUuICBGb3IgV2luZG93cyB0aGUgXCJyb290XCIgc3RhdGUgaXMgY2hhbmdlZCB0byBcInpvb21lZFwiXG4gICAgICAgIFRoZSByZWFzb24gZm9yIHRoZSBkaWZmZXJlbmNlIGlzIHRoZSB0aXRsZSBiYXIgaXMgcmVtb3ZlZCBpbiBzb21lIGNhc2VzIHdoZW4gdXNpbmcgZnVsbHNjcmVlbiBvcHRpb25cblxuYGBgcHl0aG9uXG5NYXhpbWl6ZSgpXG5gYGBcblxuIyMjIyBNaW5pbWl6ZVxuXG5NaW5pbWl6ZSB0aGlzIHdpbmRvdyB0byB0aGUgdGFzayBiYXJcblxuYGBgcHl0aG9uXG5NaW5pbWl6ZSgpXG5gYGBcblxuIyMjIyBNb3ZlXG5cbk1vdmUgdGhlIHVwcGVyIGxlZnQgY29ybmVyIG9mIHRoaXMgd2luZG93IHRvIHRoZSB4LHkgY29vcmRpbmF0ZXMgcHJvdmlkZWRcblxuYGBgXG5Nb3ZlKHgsIHkpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHh8KGludCkgeCBjb29yZGluYXRlIGluIHBpeGVsc3xcbnx5fChpbnQpIHkgY29vcmRpbmF0ZSBpbiBwaXhlbHN8XG5cbiMjIyMgTm9ybWFsXG5cblJlc3RvcmUgYSB3aW5kb3cgdG8gYSBub24tbWF4aW1pemVkIHN0YXRlLiAgRG9lcyBkaWZmZXJlbnQgdGhpbmdzIGRlcGVuZGluZyBvbiBwbGF0Zm9ybS4gIFNlZSBNYXhpbWl6ZSBmb3IgbW9yZS5cblxuYGBgcHl0aG9uXG5Ob3JtYWwoKVxuYGBgXG5cbiMjIyMgUmVhZFxuXG5USEUgYmlnZ2VzdCBkZWFsIG1ldGhvZCBpbiB0aGUgV2luZG93IGNsYXNzISBUaGlzIGlzIGhvdyB5b3UgZ2V0IGFsbCBvZiB5b3VyIGRhdGEgZnJvbSB5b3VyIFdpbmRvdy5cblBhc3MgaW4gYSB0aW1lb3V0IChpbiBtaWxsaXNlY29uZHMpIHRvIHdhaXQgZm9yIGEgbWF4aW11bSBvZiB0aW1lb3V0IG1pbGxpc2Vjb25kcy4gV2lsbCByZXR1cm4gdGltZW91dF9rZXlcbmlmIG5vIG90aGVyIEdVSSBldmVudHMgaGFwcGVuIGZpcnN0LlxuXG5gYGBcblJlYWQodGltZW91dD1Ob25lLCB0aW1lb3V0X2tleT1cIl9fVElNRU9VVF9fXCIpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufHRpbWVvdXR8KGludCkgTWlsbGlzZWNvbmRzIHRvIHdhaXQgdW50aWwgdGhlIFJlYWQgd2lsbCByZXR1cm4gSUYgbm8gb3RoZXIgR1VJIGV2ZW50cyBoYXBwZW4gZmlyc3R8XG58dGltZW91dF9rZXl8KEFueSkgVGhlIHZhbHVlIHRoYXQgd2lsbCBiZSByZXR1cm5lZCBmcm9tIHRoZSBjYWxsIGlmIHRoZSB0aW1lciBleHBpcmVkfFxufHx8XG58ICoqcmV0dXJuKiogfCBUdXBsZVsoQW55KSwgVW5pb25bRGljdFtBbnk6QW55XV0sIExpc3RbQW55XSwgTm9uZV0gKGV2ZW50LCB2YWx1ZXMpIDxicj4gIChldmVudCBvciB0aW1lb3V0X2tleSBvciBOb25lLCBEaWN0aW9uYXJ5IG9mIHZhbHVlcyBvciBMaXN0IG9mIHZhbHVlcyBmcm9tIGFsbCBlbGVtZW50cyBpbiB0aGUgV2luZG93KSB8XG5cbiMjIyMgUmVhcHBlYXJcblxuQ2F1c2VzIGEgd2luZG93IHByZXZpb3VzbHkgbWFkZSB0byBcIkRpc2FwcGVhclwiICh1c2luZyB0aGF0IG1ldGhvZCkuIERvZXMgdGhpcyBieSByZXN0b3JpbmcgdGhlIGFscGhhIGNoYW5uZWxcblxuYGBgcHl0aG9uXG5SZWFwcGVhcigpXG5gYGBcblxuIyMjIyBSZWZyZXNoXG5cblJlZnJlc2hlcyB0aGUgd2luZG93IGJ5IGNhbGxpbmcgdGtyb290LnVwZGF0ZSgpLiAgQ2FuIHNvbWV0aW1lcyBnZXQgYXdheSB3aXRoIGEgcmVmcmVzaCBpbnN0ZWFkIG9mIGEgUmVhZC5cblVzZSB0aGlzIGNhbGwgd2hlbiB5b3Ugd2FudCBzb21ldGhpbmcgdG8gYXBwZWFyIGluIHlvdXIgV2luZG93IGltbWVkaWF0ZWx5IChhcyBzb29uIGFzIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkKS5cbldpdGhvdXQgdGhpcyBjYWxsIHlvdXIgY2hhbmdlcyB0byBhIFdpbmRvdyB3aWxsIG5vdCBiZSB2aXNpYmxlIHRvIHRoZSB1c2VyIHVudGlsIHRoZSBuZXh0IFJlYWQgY2FsbFxuXG5gUmVmcmVzaCgpYFxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ICoqcmV0dXJuKiogfCAoV2luZG93KSBgc2VsZmAgc28gdGhhdCBtZXRob2QgY2FsbHMgY2FuIGJlIGVhc2lseSBcImNoYWluZWRcIiB8XG5cbiMjIyMgU2F2ZVRvRGlza1xuXG5TYXZlcyB0aGUgdmFsdWVzIGNvbnRhaW5lZCBpbiBlYWNoIG9mIHRoZSBpbnB1dCBhcmVhcyBvZiB0aGUgZm9ybS4gQmFzaWNhbGx5IHNhdmVzIHdoYXQgd291bGQgYmUgcmV0dXJuZWRcbmZyb20gYSBjYWxsIHRvIFJlYWQuICBJdCB0YWtlcyB0aGVzZSByZXN1bHRzIGFuZCBzYXZlcyB0aGVtIHRvIGRpc2sgdXNpbmcgcGlja2xlXG5cbmBgYFxuU2F2ZVRvRGlzayhmaWxlbmFtZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58ZmlsZW5hbWV8KHN0cikgRmlsZW5hbWUgdG8gc2F2ZSB0aGUgdmFsdWVzIHRvIGluIHBpY2tsZWQgZm9ybXxcblxuIyMjIyBTZXRBbHBoYVxuXG5TZXRzIHRoZSBBbHBoYSBDaGFubmVsIGZvciBhIHdpbmRvdy4gIFZhbHVlcyBhcmUgYmV0d2VlbiAwIGFuZCAxIHdoZXJlIDAgaXMgY29tcGxldGVseSB0cmFuc3BhcmVudFxuXG5gYGBcblNldEFscGhhKGFscGhhKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxhbHBoYXwoZmxvYXQpIDAgdG8gMS4gMCBpcyBjb21wbGV0ZWx5IHRyYW5zcGFyZW50LiAxIGlzIGNvbXBsZXRlbHkgdmlzaWJsZSBhbmQgc29saWQgKGNhbid0IHNlZSB0aHJvdWdoKXxcblxuIyMjIyBTZXRJY29uXG5cblNldHMgdGhlIGljb24gdGhhdCBpcyBzaG93biBvbiB0aGUgdGl0bGUgYmFyIGFuZCBvbiB0aGUgdGFzayBiYXIuICBDYW4gcGFzcyBpbjpcbiogYSBmaWxlbmFtZSB3aGljaCBtdXN0IGJlIGEgLklDTyBpY29uIGZpbGUuXG4qIGEgYnl0ZXMgb2JqZWN0XG4qIGEgQkFTRTY0IGVuY29kZWQgZmlsZSBoZWxkIGluIGEgdmFyaWFibGVcblxuYGBgXG5TZXRJY29uKGljb249Tm9uZSwgcG5nYmFzZTY0PU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGljb258KHN0cikgRmlsZW5hbWUgb3IgYnl0ZXMgb2JqZWN0fFxufHBuZ2Jhc2U2NHwoc3RyKSBCYXNlNjQgZW5jb2RlZCBHSUYgb3IgUE5HIGZpbGV8XG5cbiMjIyMgU2V0VHJhbnNwYXJlbnRDb2xvclxuXG5TZXQgdGhlIGNvbG9yIHRoYXQgd2lsbCBiZSB0cmFuc3BhcmVudCBpbiB5b3VyIHdpbmRvdy4gQXJlYXMgd2l0aCB0aGlzIGNvbG9yIHdpbGwgYmUgU0VFIFRIUk9VR0guXG5cbmBgYFxuU2V0VHJhbnNwYXJlbnRDb2xvcihjb2xvcilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58Y29sb3J8KHN0cikgQ29sb3Igc3RyaW5nIHRoYXQgZGVmaW5lcyB0aGUgdHJhbnNwYXJlbnQgY29sb3J8XG5cbiMjIyMgU2l6ZVxuXG4jIyMjIFVuSGlkZVxuXG5Vc2VkIHRvIGJyaW5nIGJhY2sgYSB3aW5kb3cgdGhhdCB3YXMgcHJldmlvdXNseSBoaWRkZW4gdXNpbmcgdGhlIEhpZGUgbWV0aG9kXG5cbmBgYHB5dGhvblxuVW5IaWRlKClcbmBgYFxuXG4jIyMjIFZpc2liaWxpdHlDaGFuZ2VkXG5cblRoaXMgaXMgYSBjb21wbGV0ZWx5IGR1bW15IG1ldGhvZCB0aGF0IGRvZXMgbm90aGluZy4gSXQgaXMgaGVyZSBzbyB0aGF0IFB5U2ltcGxlR1VJUXQgcHJvZ3JhbXMgY2FuIG1ha2UgdGhpc1xuY2FsbCBhbmQgdGhlbiBoYXZlIHRoYXQgc2FtZSBzb3VyY2UgcnVuIG9uIHBsYWluIFB5U2ltcGxlR1VJLlxuXG5gVmlzaWJpbGl0eUNoYW5nZWQoKWBcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCAqKnJldHVybioqIHwgIHxcblxuYGBgXG5DQnV0dG9uKGJ1dHRvbl90ZXh0LFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX3NpemU9KE5vbmUsIE5vbmUpLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGJpbmRfcmV0dXJuX2tleT1GYWxzZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9ufFxufGltYWdlX2ZpbGVuYW1lfGltYWdlIGZpbGVuYW1lIGlmIHRoZXJlIGlzIGEgYnV0dG9uIGltYWdlfFxufGltYWdlX2RhdGF8aW4tUkFNIGltYWdlIHRvIGJlIGRpc3BsYXllZCBvbiBidXR0b258XG58aW1hZ2Vfc2l6ZXxzaXplIG9mIGJ1dHRvbiBpbWFnZSBpbiBwaXhlbHN8XG58aW1hZ2Vfc3Vic2FtcGxlfGFtb3VudCB0byByZWR1Y2UgdGhlIHNpemUgb2YgdGhlIGltYWdlfFxufGJvcmRlcl93aWR0aHx3aWR0aCBvZiBib3JkZXIgYXJvdW5kIGVsZW1lbnR8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2ggKERlZmF1bHQgPSAoTm9uZSkpfFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcbkNhbGVuZGFyQnV0dG9uKGJ1dHRvbl90ZXh0LFxuICAgIHRhcmdldD0oTm9uZSwgTm9uZSksXG4gICAgY2xvc2Vfd2hlbl9kYXRlX2Nob3Nlbj1UcnVlLFxuICAgIGRlZmF1bHRfZGF0ZV9tX2RfeT0oTm9uZSwgTm9uZSwgTm9uZSksXG4gICAgaW1hZ2VfZmlsZW5hbWU9Tm9uZSxcbiAgICBpbWFnZV9kYXRhPU5vbmUsXG4gICAgaW1hZ2Vfc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2Vfc3Vic2FtcGxlPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lLFxuICAgIGxvY2FsZT1Ob25lLFxuICAgIGZvcm1hdD1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b258XG58dGFyZ2V0fHxcbnxjbG9zZV93aGVuX2RhdGVfY2hvc2VufChEZWZhdWx0ID0gVHJ1ZSl8XG58ZGVmYXVsdF9kYXRlX21fZF95fChEZWZhdWx0ID0gKE5vbmUpKXxcbnxOb25lfHxcbnxpbWFnZV9maWxlbmFtZXxpbWFnZSBmaWxlbmFtZSBpZiB0aGVyZSBpcyBhIGJ1dHRvbiBpbWFnZXxcbnxpbWFnZV9kYXRhfGluLVJBTSBpbWFnZSB0byBiZSBkaXNwbGF5ZWQgb24gYnV0dG9ufFxufGltYWdlX3NpemV8KERlZmF1bHQgPSAoTm9uZSkpfFxufGltYWdlX3N1YnNhbXBsZXxhbW91bnQgdG8gcmVkdWNlIHRoZSBzaXplIG9mIHRoZSBpbWFnZXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxib3JkZXJfd2lkdGh8d2lkdGggb2YgYm9yZGVyIGFyb3VuZCBlbGVtZW50fFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdoIChEZWZhdWx0ID0gKE5vbmUpKXxcbnxhdXRvX3NpemVfYnV0dG9ufFRydWUgaWYgYnV0dG9uIHNpemUgaXMgZGV0ZXJtaW5lZCBieSBidXR0b24gdGV4dHxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxiaW5kX3JldHVybl9rZXl8KERlZmF1bHQgPSBGYWxzZSl8XG58Zm9jdXN8aWYgZm9jdXMgc2hvdWxkIGJlIHNldCB0byB0aGlzfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58bG9jYWxlfHxcbnxmb3JtYXR8fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuQ2FuY2VsKGJ1dHRvbl90ZXh0PVwiQ2FuY2VsXCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnQ2FuY2VsJyl8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58ZGlzYWJsZWR8c2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnQgKERlZmF1bHQgPSBGYWxzZSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gRmFsc2UpfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxuXG5gYGBcbkNoYW5nZUxvb2tBbmRGZWVsKGluZGV4KVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxpbmRleHx8XG5cbmBgYFxuQ2xvc2VCdXR0b24oYnV0dG9uX3RleHQsXG4gICAgaW1hZ2VfZmlsZW5hbWU9Tm9uZSxcbiAgICBpbWFnZV9kYXRhPU5vbmUsXG4gICAgaW1hZ2Vfc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2Vfc3Vic2FtcGxlPU5vbmUsXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b258XG58aW1hZ2VfZmlsZW5hbWV8aW1hZ2UgZmlsZW5hbWUgaWYgdGhlcmUgaXMgYSBidXR0b24gaW1hZ2V8XG58aW1hZ2VfZGF0YXxpbi1SQU0gaW1hZ2UgdG8gYmUgZGlzcGxheWVkIG9uIGJ1dHRvbnxcbnxpbWFnZV9zaXplfHNpemUgb2YgYnV0dG9uIGltYWdlIGluIHBpeGVsc3xcbnxpbWFnZV9zdWJzYW1wbGV8YW1vdW50IHRvIHJlZHVjZSB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2V8XG58Ym9yZGVyX3dpZHRofHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudHxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxzaXplfCh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaCAoRGVmYXVsdCA9IChOb25lKSl8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gRmFsc2UpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuQ29sb3JDaG9vc2VyQnV0dG9uKGJ1dHRvbl90ZXh0LFxuICAgIHRhcmdldD0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2VfZmlsZW5hbWU9Tm9uZSxcbiAgICBpbWFnZV9kYXRhPU5vbmUsXG4gICAgaW1hZ2Vfc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2Vfc3Vic2FtcGxlPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b258XG58dGFyZ2V0fHxcbnxpbWFnZV9maWxlbmFtZXxpbWFnZSBmaWxlbmFtZSBpZiB0aGVyZSBpcyBhIGJ1dHRvbiBpbWFnZXxcbnxpbWFnZV9kYXRhfGluLVJBTSBpbWFnZSB0byBiZSBkaXNwbGF5ZWQgb24gYnV0dG9ufFxufGltYWdlX3NpemV8KERlZmF1bHQgPSAoTm9uZSkpfFxufGltYWdlX3N1YnNhbXBsZXxhbW91bnQgdG8gcmVkdWNlIHRoZSBzaXplIG9mIHRoZSBpbWFnZXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxib3JkZXJfd2lkdGh8d2lkdGggb2YgYm9yZGVyIGFyb3VuZCBlbGVtZW50fFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdoIChEZWZhdWx0ID0gKE5vbmUpKXxcbnxhdXRvX3NpemVfYnV0dG9ufFRydWUgaWYgYnV0dG9uIHNpemUgaXMgZGV0ZXJtaW5lZCBieSBidXR0b24gdGV4dHxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxiaW5kX3JldHVybl9rZXl8KERlZmF1bHQgPSBGYWxzZSl8XG58Zm9jdXN8aWYgZm9jdXMgc2hvdWxkIGJlIHNldCB0byB0aGlzfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58fHxcbnwgKipyZXR1cm4qKiB8IChCdXR0b24pIHxcblxuYGBgXG5EZWJ1ZyhidXR0b25fdGV4dD1cIlwiLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGJpbmRfcmV0dXJuX2tleT1GYWxzZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gJycpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcbkR1bW15QnV0dG9uKGJ1dHRvbl90ZXh0LFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX3NpemU9KE5vbmUsIE5vbmUpLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGJpbmRfcmV0dXJuX2tleT1GYWxzZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9ufFxufGltYWdlX2ZpbGVuYW1lfGltYWdlIGZpbGVuYW1lIGlmIHRoZXJlIGlzIGEgYnV0dG9uIGltYWdlfFxufGltYWdlX2RhdGF8aW4tUkFNIGltYWdlIHRvIGJlIGRpc3BsYXllZCBvbiBidXR0b258XG58aW1hZ2Vfc2l6ZXxzaXplIG9mIGJ1dHRvbiBpbWFnZSBpbiBwaXhlbHN8XG58aW1hZ2Vfc3Vic2FtcGxlfGFtb3VudCB0byByZWR1Y2UgdGhlIHNpemUgb2YgdGhlIGltYWdlfFxufGJvcmRlcl93aWR0aHx3aWR0aCBvZiBib3JkZXIgYXJvdW5kIGVsZW1lbnR8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2ggKERlZmF1bHQgPSAoTm9uZSkpfFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcbkVhc3lQcmludChhcmdzLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGVuZD1Ob25lLFxuICAgIHNlcD1Ob25lLFxuICAgIGxvY2F0aW9uPShOb25lLCBOb25lKSxcbiAgICBmb250PU5vbmUsXG4gICAgbm9fdGl0bGViYXI9RmFsc2UsXG4gICAgbm9fYnV0dG9uPUZhbHNlLFxuICAgIGdyYWJfYW55d2hlcmU9RmFsc2UsXG4gICAga2VlcF9vbl90b3A9RmFsc2UsXG4gICAgZG9fbm90X3Jlcm91dGVfc3Rkb3V0PVRydWUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCphcmdzfHxcbnxzaXplfFR1cGxlW2ludCwgaW50XSAodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58ZW5kfHxcbnxzZXB8fFxufGxvY2F0aW9ufExvY2F0aW9uIG9uIHNjcmVlbiB0byBkaXNwbGF5fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufG5vX3RpdGxlYmFyfChEZWZhdWx0ID0gRmFsc2UpfFxufG5vX2J1dHRvbnwoRGVmYXVsdCA9IEZhbHNlKXxcbnxncmFiX2FueXdoZXJlfElmIFRydWUgY2FuIGdyYWIgYW55d2hlcmUgdG8gbW92ZSB0aGUgd2luZG93IChEZWZhdWx0ID0gRmFsc2UpfFxufGRvX25vdF9yZXJvdXRlX3N0ZG91dHwoRGVmYXVsdCA9IFRydWUpfFxuXG5gYGBcbkVhc3lQcmludENsb3NlKClcbmBgYFxuXG5gYGBcbkV4aXQoYnV0dG9uX3RleHQ9XCJFeGl0XCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnRXhpdCcpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcblxuYGBgXG5GaWxlQnJvd3NlKGJ1dHRvbl90ZXh0PVwiQnJvd3NlXCIsXG4gICAgdGFyZ2V0PSg1NTU2NjY3NzcsIC0xKSxcbiAgICBmaWxlX3R5cGVzPSgoJ0FMTCBGaWxlcycsICcqLionKSwpLFxuICAgIGluaXRpYWxfZm9sZGVyPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gJ0Jyb3dzZScpfFxufHRhcmdldHxrZXkgb3IgKHJvdyxjb2wpIHRhcmdldCBmb3IgdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9IChUaGlzUm93LCAtMSkpfFxufGZpbGVfdHlwZXN8KERlZmF1bHQgdmFsdWUgPSAoKFwiQUxMIEZpbGVzXCIsIFwiKi4qXCIpKSl8XG58aW5pdGlhbF9mb2xkZXJ8c3RhcnRpbmcgcGF0aCBmb3IgZm9sZGVycyBhbmQgZmlsZXN8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58Y2hhbmdlX3N1Ym1pdHN8SWYgVHJ1ZSwgcHJlc3NpbmcgRW50ZXIga2V5IHN1Ym1pdHMgd2luZG93IChEZWZhdWx0ID0gRmFsc2UpfFxufGVuYWJsZV9ldmVudHN8VHVybnMgb24gdGhlIGVsZW1lbnQgc3BlY2lmaWMgZXZlbnRzLihEZWZhdWx0ID0gRmFsc2UpfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuRmlsZVNhdmVBcyhidXR0b25fdGV4dD1cIlNhdmUgQXMuLi5cIixcbiAgICB0YXJnZXQ9KDU1NTY2Njc3NywgLTEpLFxuICAgIGZpbGVfdHlwZXM9KCgnQUxMIEZpbGVzJywgJyouKicpLCksXG4gICAgaW5pdGlhbF9mb2xkZXI9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgZm9udD1Ob25lLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnU2F2ZSBBcy4uLicpfFxufHRhcmdldHxrZXkgb3IgKHJvdyxjb2wpIHRhcmdldCBmb3IgdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9IChUaGlzUm93LCAtMSkpfFxufGZpbGVfdHlwZXN8KERlZmF1bHQgdmFsdWUgPSAoKFwiQUxMIEZpbGVzXCIsIFwiKi4qXCIpKSl8XG58aW5pdGlhbF9mb2xkZXJ8c3RhcnRpbmcgcGF0aCBmb3IgZm9sZGVycyBhbmQgZmlsZXN8XG58ZGlzYWJsZWR8c2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnQgKERlZmF1bHQgPSBGYWxzZSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58Y2hhbmdlX3N1Ym1pdHN8SWYgVHJ1ZSwgcHJlc3NpbmcgRW50ZXIga2V5IHN1Ym1pdHMgd2luZG93IChEZWZhdWx0ID0gRmFsc2UpfFxufGVuYWJsZV9ldmVudHN8VHVybnMgb24gdGhlIGVsZW1lbnQgc3BlY2lmaWMgZXZlbnRzLihEZWZhdWx0ID0gRmFsc2UpfFxufGZvbnR8VW5pb25bc3RyLCBUdXBsZVtzdHIsIGludF1dIHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuRmlsZXNCcm93c2UoYnV0dG9uX3RleHQ9XCJCcm93c2VcIixcbiAgICB0YXJnZXQ9KDU1NTY2Njc3NywgLTEpLFxuICAgIGZpbGVfdHlwZXM9KCgnQUxMIEZpbGVzJywgJyouKicpLCksXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgaW5pdGlhbF9mb2xkZXI9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGNoYW5nZV9zdWJtaXRzPUZhbHNlLFxuICAgIGVuYWJsZV9ldmVudHM9RmFsc2UsXG4gICAgZm9udD1Ob25lLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnQnJvd3NlJyl8XG58dGFyZ2V0fGtleSBvciAocm93LGNvbCkgdGFyZ2V0IGZvciB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gKFRoaXNSb3csIC0xKSl8XG58ZmlsZV90eXBlc3woRGVmYXVsdCB2YWx1ZSA9ICgoXCJBTEwgRmlsZXNcIiwgXCIqLipcIikpKXxcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnxpbml0aWFsX2ZvbGRlcnxzdGFydGluZyBwYXRoIGZvciBmb2xkZXJzIGFuZCBmaWxlc3xcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxzaXplfCh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxhdXRvX3NpemVfYnV0dG9ufFRydWUgaWYgYnV0dG9uIHNpemUgaXMgZGV0ZXJtaW5lZCBieSBidXR0b24gdGV4dHxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxjaGFuZ2Vfc3VibWl0c3xJZiBUcnVlLCBwcmVzc2luZyBFbnRlciBrZXkgc3VibWl0cyB3aW5kb3cgKERlZmF1bHQgPSBGYWxzZSl8XG58ZW5hYmxlX2V2ZW50c3xUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuKERlZmF1bHQgPSBGYWxzZSl8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58fHxcbnwgKipyZXR1cm4qKiB8IChCdXR0b24pIHxcblxuRmlsbHMgYSB3aW5kb3cgd2l0aCB2YWx1ZXMgcHJvdmlkZWQgaW4gYSB2YWx1ZXMgZGljdGlvbmFyeSB7IGVsZW1lbnRfa2V5IDogbmV3X3ZhbHVlIH1cblxuYGBgXG5GaWxsRm9ybVdpdGhWYWx1ZXMod2luZG93LCB2YWx1ZXNfZGljdClcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58d2luZG93fChXaW5kb3cpIFRoZSB3aW5kb3cgb2JqZWN0IHRvIGZpbGx8XG58dmFsdWVzX2RpY3R8KERpY3RbQW55OkFueV0pIEEgZGljdGlvbmFyeSB3aXRoIGVsZW1lbnQga2V5cyBhcyBrZXkgYW5kIHZhbHVlIGlzIHZhbHVlcyBwYXJtIGZvciBVcGRhdGUgY2FsbHxcblxuYGBgXG5Gb2xkZXJCcm93c2UoYnV0dG9uX3RleHQ9XCJCcm93c2VcIixcbiAgICB0YXJnZXQ9KDU1NTY2Njc3NywgLTEpLFxuICAgIGluaXRpYWxfZm9sZGVyPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICBjaGFuZ2Vfc3VibWl0cz1GYWxzZSxcbiAgICBlbmFibGVfZXZlbnRzPUZhbHNlLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gJ0Jyb3dzZScpfFxufHRhcmdldHxrZXkgb3IgKHJvdyxjb2wpIHRhcmdldCBmb3IgdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9IChUaGlzUm93LCAtMSkpfFxufGluaXRpYWxfZm9sZGVyfHN0YXJ0aW5nIHBhdGggZm9yIGZvbGRlcnMgYW5kIGZpbGVzfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGNoYW5nZV9zdWJtaXRzfElmIFRydWUsIHByZXNzaW5nIEVudGVyIGtleSBzdWJtaXRzIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxlbmFibGVfZXZlbnRzfFR1cm5zIG9uIHRoZSBlbGVtZW50IHNwZWNpZmljIGV2ZW50cy4oRGVmYXVsdCA9IEZhbHNlKXxcbnxmb250fFVuaW9uW3N0ciwgVHVwbGVbc3RyLCBpbnRdXSBzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcbkhlbHAoYnV0dG9uX3RleHQ9XCJIZWxwXCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnSGVscCcpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcbkxpc3RPZkxvb2tBbmRGZWVsVmFsdWVzKClcbmBgYFxuXG5gYGBcbk5vKGJ1dHRvbl90ZXh0PVwiTm9cIixcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBiaW5kX3JldHVybl9rZXk9RmFsc2UsXG4gICAgZm9jdXM9RmFsc2UsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGJ1dHRvbl90ZXh0fHRleHQgaW4gdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9ICdObycpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcblxuYGBgXG5PSyhidXR0b25fdGV4dD1cIk9LXCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGJpbmRfcmV0dXJuX2tleT1UcnVlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgZm9jdXM9RmFsc2UsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGJ1dHRvbl90ZXh0fHRleHQgaW4gdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9ICdPSycpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IFRydWUpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuT2JqVG9TdHJpbmcob2JqLCBleHRyYT1cIiAgICBcIilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58b2JqfHxcbnxleHRyYXwoRGVmYXVsdCB2YWx1ZSA9ICcgJyl8XG5cbmBgYFxuT2JqVG9TdHJpbmdTaW5nbGVPYmoob2JqKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxvYmp8fFxuXG5gYGBcbk9rKGJ1dHRvbl90ZXh0PVwiT2tcIixcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgYmluZF9yZXR1cm5fa2V5PVRydWUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gJ09rJyl8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58ZGlzYWJsZWR8c2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnQgKERlZmF1bHQgPSBGYWxzZSl8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gVHJ1ZSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58Zm9jdXN8aWYgZm9jdXMgc2hvdWxkIGJlIHNldCB0byB0aGlzfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58fHxcbnwgKipyZXR1cm4qKiB8IChCdXR0b24pIHxcblxuYGBgXG5PbmVMaW5lUHJvZ3Jlc3NNZXRlcih0aXRsZSxcbiAgICBjdXJyZW50X3ZhbHVlLFxuICAgIG1heF92YWx1ZSxcbiAgICBrZXksXG4gICAgYXJncyxcbiAgICBvcmllbnRhdGlvbj1cInZcIixcbiAgICBiYXJfY29sb3I9KE5vbmUsIE5vbmUpLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIHNpemU9KDIwLCAyMCksXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAgZ3JhYl9hbnl3aGVyZT1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58dGl0bGV8dGV4dCB0byBkaXNwbGF5fFxufGN1cnJlbnRfdmFsdWV8Y3VycmVudCBwcm9ncmVzc2JhciB2YWx1ZXxcbnxtYXhfdmFsdWV8bWF4IHZhbHVlIG9mIHByb2dyZXNzYmFyfFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufCphcmdzfHN0dWZmIHRvIG91dHB1dC58XG58b3JpZW50YXRpb258J2hvcml6b250YWwnIG9yICd2ZXJ0aWNhbCcgKCdoJyBvciAndicgd29yaykgKERlZmF1bHQgdmFsdWUgPSAndmVydGljYWwnKShEZWZhdWx0IHZhbHVlID0gJ3YnKXxcbnxiYXJfY29sb3J8fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaCAoRGVmYXVsdCB2YWx1ZSA9IERFRkFVTFRfUFJPR1JFU1NfQkFSX1NJWkUpfFxufGJvcmRlcl93aWR0aHx3aWR0aCBvZiBib3JkZXIgYXJvdW5kIGVsZW1lbnR8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcblxuYGBgXG5PbmVMaW5lUHJvZ3Jlc3NNZXRlckNhbmNlbChrZXkpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxuXG5gYGBcbk9wZW4oYnV0dG9uX3RleHQ9XCJPcGVuXCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGJpbmRfcmV0dXJuX2tleT1UcnVlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgZm9jdXM9RmFsc2UsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGJ1dHRvbl90ZXh0fHRleHQgaW4gdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9ICdPcGVuJyl8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58ZGlzYWJsZWR8c2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnQgKERlZmF1bHQgPSBGYWxzZSl8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gVHJ1ZSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58Zm9jdXN8aWYgZm9jdXMgc2hvdWxkIGJlIHNldCB0byB0aGlzfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG5cblNob3cgUG9wdXAgYm94IHRoYXQgZG9lc24ndCBibG9jayBhbmQgY2xvc2VzIGl0c2VsZlxuXG5gYGBcblBvcHVwUXVpY2soYXJncyxcbiAgICB0aXRsZT1Ob25lLFxuICAgIGJ1dHRvbl90eXBlPTAsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBhdXRvX2Nsb3NlPVRydWUsXG4gICAgYXV0b19jbG9zZV9kdXJhdGlvbj0yLFxuICAgIG5vbl9ibG9ja2luZz1UcnVlLFxuICAgIGljb249Tm9uZSxcbiAgICBsaW5lX3dpZHRoPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPUZhbHNlLFxuICAgIGdyYWJfYW55d2hlcmU9RmFsc2UsXG4gICAga2VlcF9vbl90b3A9RmFsc2UsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3x8XG58dGl0bGV8fFxufGJ1dHRvbl90eXBlfChEZWZhdWx0IHZhbHVlID0gUE9QVVBfQlVUVE9OU19PSyl8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58YmFja2dyb3VuZF9jb2xvcnxjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8Y29sb3Igb2YgdGhlIHRleHR8XG58YXV0b19jbG9zZXwoRGVmYXVsdCA9IFRydWUpfFxufGF1dG9fY2xvc2VfZHVyYXRpb258KERlZmF1bHQgdmFsdWUgPSAyKXxcbnxub25fYmxvY2tpbmd8KERlZmF1bHQgPSBUcnVlKXxcbnxpY29ufEljb24gdG8gZGlzcGxheXxcbnxsaW5lX3dpZHRofFdpZHRoIG9mIGxpbmVzIGluIGNoYXJhY3RlcnN8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58bm9fdGl0bGViYXJ8KERlZmF1bHQgPSBGYWxzZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxsb2NhdGlvbnx8XG5cblNob3cgUG9wdXAgd2luZG93IHdpdGggbm8gdGl0bGViYXIsIGRvZXNuJ3QgYmxvY2ssIGFuZCBhdXRvIGNsb3NlcyBpdHNlbGYuXG5cbmBgYFxuUG9wdXBRdWlja01lc3NhZ2UoYXJncyxcbiAgICB0aXRsZT1Ob25lLFxuICAgIGJ1dHRvbl90eXBlPTUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIHRleHRfY29sb3I9Tm9uZSxcbiAgICBhdXRvX2Nsb3NlPVRydWUsXG4gICAgYXV0b19jbG9zZV9kdXJhdGlvbj0yLFxuICAgIG5vbl9ibG9ja2luZz1UcnVlLFxuICAgIGljb249Tm9uZSxcbiAgICBsaW5lX3dpZHRoPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPVRydWUsXG4gICAgZ3JhYl9hbnl3aGVyZT1GYWxzZSxcbiAgICBrZWVwX29uX3RvcD1GYWxzZSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSkpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufCphcmdzfHxcbnx0aXRsZXx8XG58YnV0dG9uX3R5cGV8KERlZmF1bHQgdmFsdWUgPSBQT1BVUF9CVVRUT05TX05PX0JVVFRPTlMpfFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGJhY2tncm91bmRfY29sb3J8Y29sb3Igb2YgYmFja2dyb3VuZHxcbnx0ZXh0X2NvbG9yfGNvbG9yIG9mIHRoZSB0ZXh0fFxufGF1dG9fY2xvc2V8KERlZmF1bHQgPSBUcnVlKXxcbnxhdXRvX2Nsb3NlX2R1cmF0aW9ufChEZWZhdWx0IHZhbHVlID0gMil8XG58bm9uX2Jsb2NraW5nfChEZWZhdWx0ID0gVHJ1ZSl8XG58aWNvbnxJY29uIHRvIGRpc3BsYXl8XG58bGluZV93aWR0aHxXaWR0aCBvZiBsaW5lcyBpbiBjaGFyYWN0ZXJzfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufG5vX3RpdGxlYmFyfChEZWZhdWx0ID0gVHJ1ZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxsb2NhdGlvbnx8XG5cblNob3cgYSBzY3JvbGxlZCBQb3B1cCB3aW5kb3cgY29udGFpbmluZyB0aGUgdXNlcidzIHRleHQgdGhhdCB3YXMgc3VwcGxpZWQuICBVc2Ugd2l0aCBhcyBtYW55IGl0ZW1zIHRvIHByaW50IGFzIHlvdVxud2FudCwganVzdCBsaWtlIGEgcHJpbnQgc3RhdGVtZW50LlxuXG5gYGBcblBvcHVwU2Nyb2xsZWQoYXJncyxcbiAgICB0aXRsZT1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIHllc19ubz1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlPUZhbHNlLFxuICAgIGF1dG9fY2xvc2VfZHVyYXRpb249Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSksXG4gICAgbm9uX2Jsb2NraW5nPUZhbHNlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3woQW55KSBWYXJpYWJsZSBudW1iZXIgb2YgaXRlbXMgdG8gZGlzcGxheXxcbnx0aXRsZXwoc3RyKSBUaXRsZSB0byBkaXNwbGF5IGluIHRoZSB3aW5kb3cufFxufGJ1dHRvbl9jb2xvcnxUdXBsZVtzdHIsIHN0cl0gYnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnx5ZXNfbm98KGJvb2wpIElmIFRydWUsIGRpc3BsYXlzIFllcyBhbmQgTm8gYnV0dG9ucyBpbnN0ZWFkIG9mIE9rfFxufGF1dG9fY2xvc2V8KGJvb2wpIGlmIFRydWUgd2luZG93IHdpbGwgY2xvc2UgaXRzZWxmfFxufGF1dG9fY2xvc2VfZHVyYXRpb258VW5pb25baW50LCBmbG9hdF0gT2xkZXIgdmVyc2lvbnMgb25seSBhY2NlcHQgaW50LiBUaW1lIGluIHNlY29uZHMgdW50aWwgd2luZG93IHdpbGwgY2xvc2V8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGxvY2F0aW9ufFR1cGxlW2ludCwgaW50XSBMb2NhdGlvbiBvbiB0aGUgc2NyZWVuIHRvIHBsYWNlIHRoZSB1cHBlciBsZWZ0IGNvcm5lciBvZiB0aGUgd2luZG93fFxufG5vbl9ibG9ja2luZ3woYm9vbCkgaWYgVHJ1ZSB0aGUgY2FsbCB3aWxsIGltbWVkaWF0ZWx5IHJldHVybiByYXRoZXIgdGhhbiB3YWl0aW5nIG9uIHVzZXIgaW5wdXR8XG58fHxcbnwgKipyZXR1cm4qKiB8IFVuaW9uW3N0ciwgTm9uZSwgVElNRU9VVF9LRVldIFJldHVybnMgdGV4dCBvZiB0aGUgYnV0dG9uIHRoYXQgd2FzIHByZXNzZWQuICBOb25lIHdpbGwgYmUgcmV0dXJuZWQgaWYgdXNlciBjbG9zZWQgd2luZG93IHdpdGggWCB8XG5cblBvcHVwIHRoYXQgY2xvc2VzIGl0c2VsZiBhZnRlciBzb21lIHRpbWUgcGVyaW9kXG5cbmBgYFxuUG9wdXBUaW1lZChhcmdzLFxuICAgIHRpdGxlPU5vbmUsXG4gICAgYnV0dG9uX3R5cGU9MCxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGF1dG9fY2xvc2U9VHJ1ZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgbm9uX2Jsb2NraW5nPUZhbHNlLFxuICAgIGljb249Tm9uZSxcbiAgICBsaW5lX3dpZHRoPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPUZhbHNlLFxuICAgIGdyYWJfYW55d2hlcmU9RmFsc2UsXG4gICAga2VlcF9vbl90b3A9RmFsc2UsXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3x8XG58dGl0bGV8fFxufGJ1dHRvbl90eXBlfChEZWZhdWx0IHZhbHVlID0gUE9QVVBfQlVUVE9OU19PSyl8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58YmFja2dyb3VuZF9jb2xvcnxjb2xvciBvZiBiYWNrZ3JvdW5kfFxufHRleHRfY29sb3J8Y29sb3Igb2YgdGhlIHRleHR8XG58YXV0b19jbG9zZXwoRGVmYXVsdCA9IFRydWUpfFxufGF1dG9fY2xvc2VfZHVyYXRpb258fFxufG5vbl9ibG9ja2luZ3woRGVmYXVsdCA9IEZhbHNlKXxcbnxpY29ufEljb24gdG8gZGlzcGxheXxcbnxsaW5lX3dpZHRofFdpZHRoIG9mIGxpbmVzIGluIGNoYXJhY3RlcnN8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58bm9fdGl0bGViYXJ8KERlZmF1bHQgPSBGYWxzZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxsb2NhdGlvbnx8XG5cbkRpc3BsYXkgUG9wdXAgd2l0aCBZZXMgYW5kIE5vIGJ1dHRvbnNcblxuYGBgXG5Qb3B1cFllc05vKGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBiYWNrZ3JvdW5kX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGF1dG9fY2xvc2U9RmFsc2UsXG4gICAgYXV0b19jbG9zZV9kdXJhdGlvbj1Ob25lLFxuICAgIG5vbl9ibG9ja2luZz1GYWxzZSxcbiAgICBpY29uPU5vbmUsXG4gICAgbGluZV93aWR0aD1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBub190aXRsZWJhcj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIGxvY2F0aW9uPShOb25lLCBOb25lKSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8fFxufHRpdGxlfHxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxiYWNrZ3JvdW5kX2NvbG9yfGNvbG9yIG9mIGJhY2tncm91bmR8XG58dGV4dF9jb2xvcnxjb2xvciBvZiB0aGUgdGV4dHxcbnxhdXRvX2Nsb3NlfChEZWZhdWx0ID0gRmFsc2UpfFxufGF1dG9fY2xvc2VfZHVyYXRpb258fFxufG5vbl9ibG9ja2luZ3woRGVmYXVsdCA9IEZhbHNlKXxcbnxpY29ufEljb24gdG8gZGlzcGxheXxcbnxsaW5lX3dpZHRofFdpZHRoIG9mIGxpbmVzIGluIGNoYXJhY3RlcnN8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58bm9fdGl0bGViYXJ8KERlZmF1bHQgPSBGYWxzZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxsb2NhdGlvbnxMb2NhdGlvbiBvbiBzY3JlZW4gdG8gZGlzcGxheXxcbnx8fFxufCAqKnJldHVybioqIHwgVW5pb25bXCJZZXNcIiwgXCJOb1wiLCBOb25lXSB8XG5cbmBgYFxuUHJpbnQoYXJncyxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBlbmQ9Tm9uZSxcbiAgICBzZXA9Tm9uZSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSksXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPUZhbHNlLFxuICAgIG5vX2J1dHRvbj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIGRvX25vdF9yZXJvdXRlX3N0ZG91dD1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3x8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGVuZHx8XG58c2VwfHxcbnxsb2NhdGlvbnxMb2NhdGlvbiBvbiBzY3JlZW4gdG8gZGlzcGxheXxcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoRGVmYXVsdCA9IEZhbHNlKXxcbnxub19idXR0b258KERlZmF1bHQgPSBGYWxzZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxkb19ub3RfcmVyb3V0ZV9zdGRvdXR8KERlZmF1bHQgPSBUcnVlKXxcblxuYGBgXG5QcmludENsb3NlKClcbmBgYFxuXG5gYGBcblF1aXQoYnV0dG9uX3RleHQ9XCJRdWl0XCIsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgYXV0b19zaXplX2J1dHRvbj1Ob25lLFxuICAgIGJ1dHRvbl9jb2xvcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnUXVpdCcpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcbnx8fFxufCAqKnJldHVybioqIHwgKEJ1dHRvbikgfFxuXG5gYGBcblJCdXR0b24oYnV0dG9uX3RleHQsXG4gICAgaW1hZ2VfZmlsZW5hbWU9Tm9uZSxcbiAgICBpbWFnZV9kYXRhPU5vbmUsXG4gICAgaW1hZ2Vfc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2Vfc3Vic2FtcGxlPU5vbmUsXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b258XG58aW1hZ2VfZmlsZW5hbWV8aW1hZ2UgZmlsZW5hbWUgaWYgdGhlcmUgaXMgYSBidXR0b24gaW1hZ2V8XG58aW1hZ2VfZGF0YXxpbi1SQU0gaW1hZ2UgdG8gYmUgZGlzcGxheWVkIG9uIGJ1dHRvbnxcbnxpbWFnZV9zaXplfHNpemUgb2YgYnV0dG9uIGltYWdlIGluIHBpeGVsc3xcbnxpbWFnZV9zdWJzYW1wbGV8YW1vdW50IHRvIHJlZHVjZSB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2V8XG58Ym9yZGVyX3dpZHRofHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudHxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxzaXplfCh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaCAoRGVmYXVsdCA9IChOb25lKSl8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gRmFsc2UpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxuXG5gYGBcblJlYWRCdXR0b24oYnV0dG9uX3RleHQsXG4gICAgaW1hZ2VfZmlsZW5hbWU9Tm9uZSxcbiAgICBpbWFnZV9kYXRhPU5vbmUsXG4gICAgaW1hZ2Vfc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgaW1hZ2Vfc3Vic2FtcGxlPU5vbmUsXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYmluZF9yZXR1cm5fa2V5PUZhbHNlLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b258XG58aW1hZ2VfZmlsZW5hbWV8aW1hZ2UgZmlsZW5hbWUgaWYgdGhlcmUgaXMgYSBidXR0b24gaW1hZ2V8XG58aW1hZ2VfZGF0YXxpbi1SQU0gaW1hZ2UgdG8gYmUgZGlzcGxheWVkIG9uIGJ1dHRvbnxcbnxpbWFnZV9zaXplfHNpemUgb2YgYnV0dG9uIGltYWdlIGluIHBpeGVsc3xcbnxpbWFnZV9zdWJzYW1wbGV8YW1vdW50IHRvIHJlZHVjZSB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2V8XG58Ym9yZGVyX3dpZHRofHdpZHRoIG9mIGJvcmRlciBhcm91bmQgZWxlbWVudHxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxzaXplfCh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaCAoRGVmYXVsdCA9IChOb25lKSl8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gRmFsc2UpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxuXG5gYGBcblJlYWx0aW1lQnV0dG9uKGJ1dHRvbl90ZXh0LFxuICAgIGltYWdlX2ZpbGVuYW1lPU5vbmUsXG4gICAgaW1hZ2VfZGF0YT1Ob25lLFxuICAgIGltYWdlX3NpemU9KE5vbmUsIE5vbmUpLFxuICAgIGltYWdlX3N1YnNhbXBsZT1Ob25lLFxuICAgIGJvcmRlcl93aWR0aD1Ob25lLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIGJpbmRfcmV0dXJuX2tleT1GYWxzZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9ufFxufGltYWdlX2ZpbGVuYW1lfGltYWdlIGZpbGVuYW1lIGlmIHRoZXJlIGlzIGEgYnV0dG9uIGltYWdlfFxufGltYWdlX2RhdGF8aW4tUkFNIGltYWdlIHRvIGJlIGRpc3BsYXllZCBvbiBidXR0b258XG58aW1hZ2Vfc2l6ZXxzaXplIG9mIGJ1dHRvbiBpbWFnZSBpbiBwaXhlbHN8XG58aW1hZ2Vfc3Vic2FtcGxlfGFtb3VudCB0byByZWR1Y2UgdGhlIHNpemUgb2YgdGhlIGltYWdlfFxufGJvcmRlcl93aWR0aHx3aWR0aCBvZiBib3JkZXIgYXJvdW5kIGVsZW1lbnR8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2ggKERlZmF1bHQgPSAoTm9uZSkpfFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IEZhbHNlKXxcbnxmb2N1c3xpZiBmb2N1cyBzaG91bGQgYmUgc2V0IHRvIHRoaXN8XG58cGFkfEFtb3VudCBvZiBwYWRkaW5nIHRvIHB1dCBhcm91bmQgZWxlbWVudHxcbnxrZXl8VXNlZCB3aXRoIHdpbmRvdy5GaW5kRWxlbWVudCBhbmQgd2l0aCByZXR1cm4gdmFsdWVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgZWxlbWVudHxcblxuYGBgXG5TYXZlKGJ1dHRvbl90ZXh0PVwiU2F2ZVwiLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBiaW5kX3JldHVybl9rZXk9VHJ1ZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnU2F2ZScpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IFRydWUpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cbmBgYFxuU2F2ZUFzKGJ1dHRvbl90ZXh0PVwiU2F2ZSBBcy4uLlwiLFxuICAgIHRhcmdldD0oNTU1NjY2Nzc3LCAtMSksXG4gICAgZmlsZV90eXBlcz0oKCdBTEwgRmlsZXMnLCAnKi4qJyksKSxcbiAgICBpbml0aWFsX2ZvbGRlcj1Ob25lLFxuICAgIGRpc2FibGVkPUZhbHNlLFxuICAgIHRvb2x0aXA9Tm9uZSxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgY2hhbmdlX3N1Ym1pdHM9RmFsc2UsXG4gICAgZW5hYmxlX2V2ZW50cz1GYWxzZSxcbiAgICBmb250PU5vbmUsXG4gICAgcGFkPU5vbmUsXG4gICAga2V5PU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGJ1dHRvbl90ZXh0fHRleHQgaW4gdGhlIGJ1dHRvbiAoRGVmYXVsdCB2YWx1ZSA9ICdTYXZlIEFzLi4uJyl8XG58dGFyZ2V0fGtleSBvciAocm93LGNvbCkgdGFyZ2V0IGZvciB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gKFRoaXNSb3csIC0xKSl8XG58ZmlsZV90eXBlc3woRGVmYXVsdCB2YWx1ZSA9ICgoXCJBTEwgRmlsZXNcIiwgXCIqLipcIikpKXxcbnxpbml0aWFsX2ZvbGRlcnxzdGFydGluZyBwYXRoIGZvciBmb2xkZXJzIGFuZCBmaWxlc3xcbnxkaXNhYmxlZHxzZXQgZGlzYWJsZSBzdGF0ZSBmb3IgZWxlbWVudCAoRGVmYXVsdCA9IEZhbHNlKXxcbnx0b29sdGlwfChzdHIpIHRleHQsIHRoYXQgd2lsbCBhcHBlYXIgd2hlbiBtb3VzZSBob3ZlcnMgb3ZlciB0aGUgZWxlbWVudHxcbnxzaXplfCh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxhdXRvX3NpemVfYnV0dG9ufFRydWUgaWYgYnV0dG9uIHNpemUgaXMgZGV0ZXJtaW5lZCBieSBidXR0b24gdGV4dHxcbnxidXR0b25fY29sb3J8YnV0dG9uIGNvbG9yIChmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kKXxcbnxjaGFuZ2Vfc3VibWl0c3xJZiBUcnVlLCBwcmVzc2luZyBFbnRlciBrZXkgc3VibWl0cyB3aW5kb3cgKERlZmF1bHQgPSBGYWxzZSl8XG58ZW5hYmxlX2V2ZW50c3xUdXJucyBvbiB0aGUgZWxlbWVudCBzcGVjaWZpYyBldmVudHMuKERlZmF1bHQgPSBGYWxzZSl8XG58Zm9udHxVbmlvbltzdHIsIFR1cGxlW3N0ciwgaW50XV0gc3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58fHxcbnwgKipyZXR1cm4qKiB8IChCdXR0b24pIHxcblxuU2hvdyBhIHNjcm9sbGVkIFBvcHVwIHdpbmRvdyBjb250YWluaW5nIHRoZSB1c2VyJ3MgdGV4dCB0aGF0IHdhcyBzdXBwbGllZC4gIFVzZSB3aXRoIGFzIG1hbnkgaXRlbXMgdG8gcHJpbnQgYXMgeW91XG53YW50LCBqdXN0IGxpa2UgYSBwcmludCBzdGF0ZW1lbnQuXG5cbmBgYFxuU2Nyb2xsZWRUZXh0Qm94KGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICB5ZXNfbm89RmFsc2UsXG4gICAgYXV0b19jbG9zZT1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIG5vbl9ibG9ja2luZz1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8KEFueSkgVmFyaWFibGUgbnVtYmVyIG9mIGl0ZW1zIHRvIGRpc3BsYXl8XG58dGl0bGV8KHN0cikgVGl0bGUgdG8gZGlzcGxheSBpbiB0aGUgd2luZG93LnxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdIGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58eWVzX25vfChib29sKSBJZiBUcnVlLCBkaXNwbGF5cyBZZXMgYW5kIE5vIGJ1dHRvbnMgaW5zdGVhZCBvZiBPa3xcbnxhdXRvX2Nsb3NlfChib29sKSBpZiBUcnVlIHdpbmRvdyB3aWxsIGNsb3NlIGl0c2VsZnxcbnxhdXRvX2Nsb3NlX2R1cmF0aW9ufFVuaW9uW2ludCwgZmxvYXRdIE9sZGVyIHZlcnNpb25zIG9ubHkgYWNjZXB0IGludC4gVGltZSBpbiBzZWNvbmRzIHVudGlsIHdpbmRvdyB3aWxsIGNsb3NlfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gTG9jYXRpb24gb24gdGhlIHNjcmVlbiB0byBwbGFjZSB0aGUgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIHdpbmRvd3xcbnxub25fYmxvY2tpbmd8KGJvb2wpIGlmIFRydWUgdGhlIGNhbGwgd2lsbCBpbW1lZGlhdGVseSByZXR1cm4gcmF0aGVyIHRoYW4gd2FpdGluZyBvbiB1c2VyIGlucHV0fFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltzdHIsIE5vbmUsIFRJTUVPVVRfS0VZXSBSZXR1cm5zIHRleHQgb2YgdGhlIGJ1dHRvbiB0aGF0IHdhcyBwcmVzc2VkLiAgTm9uZSB3aWxsIGJlIHJldHVybmVkIGlmIHVzZXIgY2xvc2VkIHdpbmRvdyB3aXRoIFggfFxuXG5gYGBcblNldEdsb2JhbEljb24oaWNvbilcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58aWNvbnx8XG5cbmBgYFxuU2V0T3B0aW9ucyhpY29uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZWxlbWVudF9zaXplPShOb25lLCBOb25lKSxcbiAgICBidXR0b25fZWxlbWVudF9zaXplPShOb25lLCBOb25lKSxcbiAgICBtYXJnaW5zPShOb25lLCBOb25lKSxcbiAgICBlbGVtZW50X3BhZGRpbmc9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV90ZXh0PU5vbmUsXG4gICAgYXV0b19zaXplX2J1dHRvbnM9Tm9uZSxcbiAgICBmb250PU5vbmUsXG4gICAgYm9yZGVyX3dpZHRoPU5vbmUsXG4gICAgc2xpZGVyX2JvcmRlcl93aWR0aD1Ob25lLFxuICAgIHNsaWRlcl9yZWxpZWY9Tm9uZSxcbiAgICBzbGlkZXJfb3JpZW50YXRpb249Tm9uZSxcbiAgICBhdXRvY2xvc2VfdGltZT1Ob25lLFxuICAgIG1lc3NhZ2VfYm94X2xpbmVfd2lkdGg9Tm9uZSxcbiAgICBwcm9ncmVzc19tZXRlcl9ib3JkZXJfZGVwdGg9Tm9uZSxcbiAgICBwcm9ncmVzc19tZXRlcl9zdHlsZT1Ob25lLFxuICAgIHByb2dyZXNzX21ldGVyX3JlbGllZj1Ob25lLFxuICAgIHByb2dyZXNzX21ldGVyX2NvbG9yPU5vbmUsXG4gICAgcHJvZ3Jlc3NfbWV0ZXJfc2l6ZT1Ob25lLFxuICAgIHRleHRfanVzdGlmaWNhdGlvbj1Ob25lLFxuICAgIGJhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBlbGVtZW50X2JhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICB0ZXh0X2VsZW1lbnRfYmFja2dyb3VuZF9jb2xvcj1Ob25lLFxuICAgIGlucHV0X2VsZW1lbnRzX2JhY2tncm91bmRfY29sb3I9Tm9uZSxcbiAgICBpbnB1dF90ZXh0X2NvbG9yPU5vbmUsXG4gICAgc2Nyb2xsYmFyX2NvbG9yPU5vbmUsXG4gICAgdGV4dF9jb2xvcj1Ob25lLFxuICAgIGVsZW1lbnRfdGV4dF9jb2xvcj1Ob25lLFxuICAgIGRlYnVnX3dpbl9zaXplPShOb25lLCBOb25lKSxcbiAgICB3aW5kb3dfbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIGVycm9yX2J1dHRvbl9jb2xvcj0oTm9uZSwgTm9uZSksXG4gICAgdG9vbHRpcF90aW1lPU5vbmUpXG5gYGBcblxuUGFyYW1ldGVyIERlc2NyaXB0aW9uczpcblxufE5hbWV8TWVhbmluZ3xcbnwtLS18LS0tfFxufGljb258ZmlsZW5hbWUgb2YgaWNvbiB1c2VkIGZvciB0YXNrYmFyIGFuZCB0aXRsZSBiYXJ8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58ZWxlbWVudF9zaXplfFR1cGxlW2ludCwgaW50XSBlbGVtZW50IHNpemUgKHdpZHRoLCBoZWlnaHQpIGluIGNoYXJhY3RlcnN8XG58YnV0dG9uX2VsZW1lbnRfc2l6ZXxUdXBsZVtpbnQsIGludF18XG58bWFyZ2luc3x0a2ludGVyIG1hcmdpbnMgYXJvdW5kIG91dHNpemUgKERlZmF1bHQgPSAoTm9uZSkpfFxufGVsZW1lbnRfcGFkZGluZ3woRGVmYXVsdCA9IChOb25lKSl8XG58YXV0b19zaXplX3RleHR8VHJ1ZSBpZiBzaXplIHNob3VsZCBmaXQgdGhlIHRleHQgbGVuZ3RofFxufGF1dG9fc2l6ZV9idXR0b25zfHxcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxib3JkZXJfd2lkdGh8d2lkdGggb2YgYm9yZGVyIGFyb3VuZCBlbGVtZW50fFxufHNsaWRlcl9ib3JkZXJfd2lkdGh8fFxufHNsaWRlcl9yZWxpZWZ8fFxufHNsaWRlcl9vcmllbnRhdGlvbnx8XG58YXV0b2Nsb3NlX3RpbWV8fFxufG1lc3NhZ2VfYm94X2xpbmVfd2lkdGh8fFxufHByb2dyZXNzX21ldGVyX2JvcmRlcl9kZXB0aHx8XG58cHJvZ3Jlc3NfbWV0ZXJfc3R5bGV8fFxufHByb2dyZXNzX21ldGVyX3JlbGllZnx8XG58cHJvZ3Jlc3NfbWV0ZXJfY29sb3J8fFxufHByb2dyZXNzX21ldGVyX3NpemV8VHVwbGVbaW50LCBpbnRdfFxufHRleHRfanVzdGlmaWNhdGlvbnx8XG58YmFja2dyb3VuZF9jb2xvcnxjb2xvciBvZiBiYWNrZ3JvdW5kfFxufGVsZW1lbnRfYmFja2dyb3VuZF9jb2xvcnx8XG58dGV4dF9lbGVtZW50X2JhY2tncm91bmRfY29sb3J8fFxufGlucHV0X2VsZW1lbnRzX2JhY2tncm91bmRfY29sb3J8fFxufGlucHV0X3RleHRfY29sb3J8fFxufHNjcm9sbGJhcl9jb2xvcnx8XG58dGV4dF9jb2xvcnxjb2xvciBvZiB0aGUgdGV4dHxcbnxlbGVtZW50X3RleHRfY29sb3J8fFxufGRlYnVnX3dpbl9zaXplfFR1cGxlW2ludCwgaW50XSAoRGVmYXVsdCA9IChOb25lKSl8XG58d2luZG93X2xvY2F0aW9ufChEZWZhdWx0ID0gKE5vbmUpKXxcbnxlcnJvcl9idXR0b25fY29sb3J8KERlZmF1bHQgPSAoTm9uZSkpfFxufHRvb2x0aXBfdGltZXx0aW1lIGluIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJlZm9yZSBzaG93aW5nIGEgdG9vbHRpcC4gRGVmYXVsdCBpcyA0MDBtc3xcblxuYGBgXG5TdWJtaXQoYnV0dG9uX3RleHQ9XCJTdWJtaXRcIixcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBhdXRvX3NpemVfYnV0dG9uPU5vbmUsXG4gICAgYnV0dG9uX2NvbG9yPU5vbmUsXG4gICAgZGlzYWJsZWQ9RmFsc2UsXG4gICAgYmluZF9yZXR1cm5fa2V5PVRydWUsXG4gICAgdG9vbHRpcD1Ob25lLFxuICAgIGZvbnQ9Tm9uZSxcbiAgICBmb2N1cz1GYWxzZSxcbiAgICBwYWQ9Tm9uZSxcbiAgICBrZXk9Tm9uZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58YnV0dG9uX3RleHR8dGV4dCBpbiB0aGUgYnV0dG9uIChEZWZhdWx0IHZhbHVlID0gJ1N1Ym1pdCcpfFxufHNpemV8KHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGF1dG9fc2l6ZV9idXR0b258VHJ1ZSBpZiBidXR0b24gc2l6ZSBpcyBkZXRlcm1pbmVkIGJ5IGJ1dHRvbiB0ZXh0fFxufGJ1dHRvbl9jb2xvcnxidXR0b24gY29sb3IgKGZvcmVncm91bmQsIGJhY2tncm91bmQpfFxufGRpc2FibGVkfHNldCBkaXNhYmxlIHN0YXRlIGZvciBlbGVtZW50IChEZWZhdWx0ID0gRmFsc2UpfFxufGJpbmRfcmV0dXJuX2tleXwoRGVmYXVsdCA9IFRydWUpfFxufHRvb2x0aXB8KHN0cikgdGV4dCwgdGhhdCB3aWxsIGFwcGVhciB3aGVuIG1vdXNlIGhvdmVycyBvdmVyIHRoZSBlbGVtZW50fFxufGZvbnR8c3BlY2lmaWVzIHRoZSBmb250IGZhbWlseSwgc2l6ZSwgZXRjfFxufGZvY3VzfGlmIGZvY3VzIHNob3VsZCBiZSBzZXQgdG8gdGhpc3xcbnxwYWR8QW1vdW50IG9mIHBhZGRpbmcgdG8gcHV0IGFyb3VuZCBlbGVtZW50fFxufGtleXxVc2VkIHdpdGggd2luZG93LkZpbmRFbGVtZW50IGFuZCB3aXRoIHJldHVybiB2YWx1ZXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBlbGVtZW50fFxufHx8XG58ICoqcmV0dXJuKiogfCAoQnV0dG9uKSB8XG5cblRpbWUgeW91ciBjb2RlIGVhc2lseS4uLi4gc3RhcnQgdGhlIHRpbWVyLlxuXG5gYGBcblRpbWVyU3RhcnQoKVxuYGBgXG5cblRpbWUgeW91ciBjb2RlIGVhc2lseS4uLi4gc3RvcCB0aGUgdGltZXIgYW5kIHByaW50IHRoZSBudW1iZXIgb2YgbXMgc2luY2UgdGhlIHRpbWVyIHN0YXJ0XG5cbmBgYFxuVGltZXJTdG9wKClcbmBgYFxuXG5gYGBcblllcyhidXR0b25fdGV4dD1cIlllc1wiLFxuICAgIHNpemU9KE5vbmUsIE5vbmUpLFxuICAgIGF1dG9fc2l6ZV9idXR0b249Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICBkaXNhYmxlZD1GYWxzZSxcbiAgICB0b29sdGlwPU5vbmUsXG4gICAgZm9udD1Ob25lLFxuICAgIGJpbmRfcmV0dXJuX2tleT1UcnVlLFxuICAgIGZvY3VzPUZhbHNlLFxuICAgIHBhZD1Ob25lLFxuICAgIGtleT1Ob25lKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxidXR0b25fdGV4dHx0ZXh0IGluIHRoZSBidXR0b24gKERlZmF1bHQgdmFsdWUgPSAnWWVzJyl8XG58c2l6ZXwodyxoKSB3PWNoYXJhY3RlcnMtd2lkZSwgaD1yb3dzLWhpZ2h8XG58YXV0b19zaXplX2J1dHRvbnxUcnVlIGlmIGJ1dHRvbiBzaXplIGlzIGRldGVybWluZWQgYnkgYnV0dG9uIHRleHR8XG58YnV0dG9uX2NvbG9yfGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58ZGlzYWJsZWR8c2V0IGRpc2FibGUgc3RhdGUgZm9yIGVsZW1lbnQgKERlZmF1bHQgPSBGYWxzZSl8XG58dG9vbHRpcHwoc3RyKSB0ZXh0LCB0aGF0IHdpbGwgYXBwZWFyIHdoZW4gbW91c2UgaG92ZXJzIG92ZXIgdGhlIGVsZW1lbnR8XG58Zm9udHxzcGVjaWZpZXMgdGhlIGZvbnQgZmFtaWx5LCBzaXplLCBldGN8XG58YmluZF9yZXR1cm5fa2V5fChEZWZhdWx0ID0gVHJ1ZSl8XG58Zm9jdXN8aWYgZm9jdXMgc2hvdWxkIGJlIHNldCB0byB0aGlzfFxufHBhZHxBbW91bnQgb2YgcGFkZGluZyB0byBwdXQgYXJvdW5kIGVsZW1lbnR8XG58a2V5fFVzZWQgd2l0aCB3aW5kb3cuRmluZEVsZW1lbnQgYW5kIHdpdGggcmV0dXJuIHZhbHVlcyB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzIGVsZW1lbnR8XG58fHxcbnwgKipyZXR1cm4qKiB8IChCdXR0b24pIHxcblxuYGBgXG5lcHJpbnQoYXJncyxcbiAgICBzaXplPShOb25lLCBOb25lKSxcbiAgICBlbmQ9Tm9uZSxcbiAgICBzZXA9Tm9uZSxcbiAgICBsb2NhdGlvbj0oTm9uZSwgTm9uZSksXG4gICAgZm9udD1Ob25lLFxuICAgIG5vX3RpdGxlYmFyPUZhbHNlLFxuICAgIG5vX2J1dHRvbj1GYWxzZSxcbiAgICBncmFiX2FueXdoZXJlPUZhbHNlLFxuICAgIGtlZXBfb25fdG9wPUZhbHNlLFxuICAgIGRvX25vdF9yZXJvdXRlX3N0ZG91dD1UcnVlKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnwqYXJnc3x8XG58c2l6ZXxUdXBsZVtpbnQsIGludF0gKHcsaCkgdz1jaGFyYWN0ZXJzLXdpZGUsIGg9cm93cy1oaWdofFxufGVuZHx8XG58c2VwfHxcbnxsb2NhdGlvbnxMb2NhdGlvbiBvbiBzY3JlZW4gdG8gZGlzcGxheXxcbnxmb250fHNwZWNpZmllcyB0aGUgZm9udCBmYW1pbHksIHNpemUsIGV0Y3xcbnxub190aXRsZWJhcnwoRGVmYXVsdCA9IEZhbHNlKXxcbnxub19idXR0b258KERlZmF1bHQgPSBGYWxzZSl8XG58Z3JhYl9hbnl3aGVyZXxJZiBUcnVlIGNhbiBncmFiIGFueXdoZXJlIHRvIG1vdmUgdGhlIHdpbmRvdyAoRGVmYXVsdCA9IEZhbHNlKXxcbnxkb19ub3RfcmVyb3V0ZV9zdGRvdXR8KERlZmF1bHQgPSBUcnVlKXxcblxuVGhlIFB5U2ltcGxlR1VJIFwiVGVzdCBIYXJuZXNzXCIuICBUaGlzIGlzIG1lYW50IHRvIGJlIGEgc3VwZXItcXVpY2sgdGVzdCBvZiB0aGUgRWxlbWVudHMuXG5cbmBgYFxubWFpbigpXG5gYGBcblxuU2hvd3MgdGhlIHNtYWxsZXIgXCJwb3BvdXRcIiB3aW5kb3cuICBEZWZhdWx0IGxvY2F0aW9uIGlzIHRoZSB1cHBlciByaWdodCBjb3JuZXIgb2YgeW91ciBzY3JlZW5cblxuYGBgXG5zaG93X2RlYnVnZ2VyX3BvcG91dF93aW5kb3cobG9jYXRpb249KE5vbmUsIE5vbmUpLCBhcmdzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gTG9jYXRpb25zICh4LHkpIG9uIHRoZSBzY3JlZW4gdG8gcGxhY2UgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIHdpbmRvd3xcbnwqYXJnc3xOb3QgdXNlZHxcblxuU2hvd3MgdGhlIGxhcmdlIG1haW4gZGVidWdnZXIgd2luZG93XG5cbmBgYFxuc2hvd19kZWJ1Z2dlcl93aW5kb3cobG9jYXRpb249KE5vbmUsIE5vbmUpLCBhcmdzKVxuYGBgXG5cblBhcmFtZXRlciBEZXNjcmlwdGlvbnM6XG5cbnxOYW1lfE1lYW5pbmd8XG58LS0tfC0tLXxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gTG9jYXRpb25zICh4LHkpIG9uIHRoZSBzY3JlZW4gdG8gcGxhY2UgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIHdpbmRvd3xcbnwqYXJnc3xOb3QgdXNlZHxcblxuU2hvdyBhIHNjcm9sbGVkIFBvcHVwIHdpbmRvdyBjb250YWluaW5nIHRoZSB1c2VyJ3MgdGV4dCB0aGF0IHdhcyBzdXBwbGllZC4gIFVzZSB3aXRoIGFzIG1hbnkgaXRlbXMgdG8gcHJpbnQgYXMgeW91XG53YW50LCBqdXN0IGxpa2UgYSBwcmludCBzdGF0ZW1lbnQuXG5cbmBgYFxuc3ByaW50KGFyZ3MsXG4gICAgdGl0bGU9Tm9uZSxcbiAgICBidXR0b25fY29sb3I9Tm9uZSxcbiAgICB5ZXNfbm89RmFsc2UsXG4gICAgYXV0b19jbG9zZT1GYWxzZSxcbiAgICBhdXRvX2Nsb3NlX2R1cmF0aW9uPU5vbmUsXG4gICAgc2l6ZT0oTm9uZSwgTm9uZSksXG4gICAgbG9jYXRpb249KE5vbmUsIE5vbmUpLFxuICAgIG5vbl9ibG9ja2luZz1GYWxzZSlcbmBgYFxuXG5QYXJhbWV0ZXIgRGVzY3JpcHRpb25zOlxuXG58TmFtZXxNZWFuaW5nfFxufC0tLXwtLS18XG58KmFyZ3N8KEFueSkgVmFyaWFibGUgbnVtYmVyIG9mIGl0ZW1zIHRvIGRpc3BsYXl8XG58dGl0bGV8KHN0cikgVGl0bGUgdG8gZGlzcGxheSBpbiB0aGUgd2luZG93LnxcbnxidXR0b25fY29sb3J8VHVwbGVbc3RyLCBzdHJdIGJ1dHRvbiBjb2xvciAoZm9yZWdyb3VuZCwgYmFja2dyb3VuZCl8XG58eWVzX25vfChib29sKSBJZiBUcnVlLCBkaXNwbGF5cyBZZXMgYW5kIE5vIGJ1dHRvbnMgaW5zdGVhZCBvZiBPa3xcbnxhdXRvX2Nsb3NlfChib29sKSBpZiBUcnVlIHdpbmRvdyB3aWxsIGNsb3NlIGl0c2VsZnxcbnxhdXRvX2Nsb3NlX2R1cmF0aW9ufFVuaW9uW2ludCwgZmxvYXRdIE9sZGVyIHZlcnNpb25zIG9ubHkgYWNjZXB0IGludC4gVGltZSBpbiBzZWNvbmRzIHVudGlsIHdpbmRvdyB3aWxsIGNsb3NlfFxufHNpemV8VHVwbGVbaW50LCBpbnRdICh3LGgpIHc9Y2hhcmFjdGVycy13aWRlLCBoPXJvd3MtaGlnaHxcbnxsb2NhdGlvbnxUdXBsZVtpbnQsIGludF0gTG9jYXRpb24gb24gdGhlIHNjcmVlbiB0byBwbGFjZSB0aGUgdXBwZXIgbGVmdCBjb3JuZXIgb2YgdGhlIHdpbmRvd3xcbnxub25fYmxvY2tpbmd8KGJvb2wpIGlmIFRydWUgdGhlIGNhbGwgd2lsbCBpbW1lZGlhdGVseSByZXR1cm4gcmF0aGVyIHRoYW4gd2FpdGluZyBvbiB1c2VyIGlucHV0fFxufHx8XG58ICoqcmV0dXJuKiogfCBVbmlvbltzdHIsIE5vbmUsIFRJTUVPVVRfS0VZXSBSZXR1cm5zIHRleHQgb2YgdGhlIGJ1dHRvbiB0aGF0IHdhcyBwcmVzc2VkLiAgTm9uZSB3aWxsIGJlIHJldHVybmVkIGlmIHVzZXIgY2xvc2VkIHdpbmRvdyB3aXRoIFggfFxuXG4tLS1cblxuIyBcIkRlbW8gUHJvZ3JhbXNcIiBBcHBsaWNhdGlvbnNcblxuVGhlcmUgYXJlIHRvbyBtYW55IHRvIGxpc3QhIVxuXG5UaGVyZSBhcmUgb3ZlciAxNzAgc2FtcGxlIHByb2dyYW1zIHRvIGdpdmUgeW91IGEganVtcCBzdGFydC5cblxuVGhlc2UgcHJvZ3JhbXMgYXJlIGFuIGludGVncmFsIHBhcnQgb2YgdGhlIG92ZXJhbGwgUHlTaW1wbGVHVUkgZG9jdW1lbnRhdGlvbiBhbmQgbGVhcm5pbmcgc3lzdGVtLiAgVGhleSB3aWxsIGdpdmUgeW91IGEgaGVhZHN0YXJ0IGluIGEgd2F5IHlvdSBjYW4gbGVhcm4gZnJvbSBhbmQgdW5kZXJzdGFuZC4gIFRoZXkgYWxzbyBzaG93IHlvdSBpbnRlZ3JhdGlvbiB0ZWNoaXF1ZXMgdG8gb3RoZXIgcGFja2FnZXMgdGhhdCBoYXZlIGJlZW4gZmlndXJlZCBvdXQgZm9yIHlvdS5cblxuWW91IHdpbGwgZmluZCBEZW1vIFByb2dyYW1zIGxvY2F0ZWQgaW4gYSBzdWJmb2xkZXIgbmFtZWQgXCJEZW1vIFByb2dyYW1zXCIgdW5kZXIgdGhlIHRvcCBsZXZlbCBhbmQgZWFjaCBvZiB0aGUgUHlTaW1wbGVHVUkgcG9ydHMgb24gR2l0SHViLlxuXG5EZW1vIHByb2dyYW1zIGZvciBwbGFpbiBQeVNpbXBsZUdVSSAodGtpbnRlcilcbmh0dHBzOi8vZ2l0aHViLmNvbS9QeVNpbXBsZUdVSS9QeVNpbXBsZUdVSS90cmVlL21hc3Rlci9EZW1vUHJvZ3JhbXNcblxuRGVtbyBwcm9ncmFtcyBmb3IgUHlTaW1wbGVHVUlRdDpcbmh0dHBzOi8vZ2l0aHViLmNvbS9QeVNpbXBsZUdVSS9QeVNpbXBsZUdVSS90cmVlL21hc3Rlci9QeVNpbXBsZUdVSVF0L0RlbW8lMjBQcm9ncmFtc1xuXG5EZW1vIHByb2dyYW1zIGZvciBQeVNpbXBsZUdVSVd4OlxuaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL3RyZWUvbWFzdGVyL1B5U2ltcGxlR1VJV3gvRGVtbyUyMFByb2dyYW1zXG5cbkRlbW8gcHJvZ3JhbXMgZm9yIFB5U2ltcGxlR1VJV2ViOlxuaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL3RyZWUvbWFzdGVyL1B5U2ltcGxlR1VJV2ViL0RlbW8lMjBQcm9ncmFtc1xuXG5UaGVyZSBhcmUgbm90IG1hbnkgcHJvZ3JhbXMgdW5kZXIgZWFjaCBvZiB0aGUgcG9ydCdzIGZvbGRlcnMgYmVjYXVzZSB0aGUgbWFpbiBEZW1vIFByb2dyYW1zIHNob3VsZCBydW4gb24gYWxsIG9mIHRoZSBvdGhlciBwbGF0Zm9ybXMgd2l0aCBtaW5pbWFsIGNoYW5nZXMgKG9mdGVuIG9ubHkgdGhlIGltcG9ydCBzdGF0ZW1lbnQgY2hhbmdlcykuXG5cbiMjIFBhY2thZ2VzIFVzZWQgSW4gRGVtb3NcblxuICBXaGlsZSB0aGUgY29yZSBQeVNpbXBsZUdVSSBjb2RlICBkb2VzIG5vdCB1dGlsaXplIGFueSAzcmQgcGFydHkgcGFja2FnZXMsIHNvbWUgb2YgdGhlIGRlbW9zIGRvLiAgVGhleSBhZGQgYSBHVUkgdG8gYSBmZXcgcG9wdWxhciBwYWNrYWdlcy4gIFRoZXNlIHBhY2thZ2VzIGluY2x1ZGU6XG4gICogW0NoYXR0ZXJib3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9ndW50aGVyY294L0NoYXR0ZXJCb3QpXG4gICogW01pZG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9vbGVtYi9taWRvKVxuICAqIFtNYXRwbG90bGliXShodHRwczovL21hdHBsb3RsaWIub3JnLylcbiAgKiBbUHlNdVBERl0oaHR0cHM6Ly9naXRodWIuY29tL3JrNzAwL1B5TXVQREYpXG4gICogT3BlbkNWXG4gICogcHltdW5rXG4gICogcHN1dGlsXG4gICogcHlnYW1lXG4gICogRm9yZWNhc3Rpb1xuXG4jIENyZWF0aW5nIGEgV2luZG93cyAuRVhFIEZpbGVcblxuSXQncyBwb3NzaWJsZSB0byBjcmVhdGUgYSBzaW5nbGUgLkVYRSBmaWxlIHRoYXQgY2FuIGJlIGRpc3RyaWJ1dGVkIHRvIFdpbmRvd3MgdXNlcnMuIFRoZXJlIGlzIG5vIHJlcXVpcmVtZW50IHRvIGluc3RhbGwgdGhlIFB5dGhvbiBpbnRlcnByZXRlciBvbiB0aGUgUEMgeW91IHdpc2ggdG8gcnVuIGl0IG9uLiBFdmVyeXRoaW5nIGl0IG5lZWRzIGlzIGluIHRoZSBvbmUgRVhFIGZpbGUsIGFzc3VtaW5nIHlvdSdyZSBydW5uaW5nIGEgc29tZXdoYXQgdXAgdG8gZGF0ZSB2ZXJzaW9uIG9mIFdpbmRvd3MuXG5cbkluc3RhbGxhdGlvbiBvZiB0aGUgcGFja2FnZXMsIHlvdSdsbCBuZWVkIHRvIGluc3RhbGwgUHlTaW1wbGVHVUkgYW5kIFB5SW5zdGFsbGVyICh5b3UgbmVlZCB0byBpbnN0YWxsIG9ubHkgb25jZSlcblxuYGBgYmFzaFxucGlwIGluc3RhbGwgUHlTaW1wbGVHVUlcbnBpcCBpbnN0YWxsIFB5SW5zdGFsbGVyXG5cbmBgYFxuXG5UbyBjcmVhdGUgeW91ciBFWEUgZmlsZSBmcm9tIHlvdXIgcHJvZ3JhbSB0aGF0IHVzZXMgUHlTaW1wbGVHVUksICBgbXlfcHJvZ3JhbS5weWAsIGVudGVyIHRoaXMgY29tbWFuZCBpbiB5b3VyIFdpbmRvd3MgY29tbWFuZCBwcm9tcHQ6XG5cbmBgYGJhc2hcbnB5aW5zdGFsbGVyIC13RiBteV9wcm9ncmFtLnB5XG5cbmBgYFxuXG5Zb3Ugd2lsbCBiZSBsZWZ0IHdpdGggYSBzaW5nbGUgZmlsZSwgIGBteV9wcm9ncmFtLmV4ZWAsIGxvY2F0ZWQgaW4gYSBmb2xkZXIgbmFtZWQgIGBkaXN0YCAgdW5kZXIgdGhlIGZvbGRlciB3aGVyZSB5b3UgZXhlY3V0ZWQgdGhlICBgcHlpbnN0YWxsZXJgICBjb21tYW5kLlxuXG5UaGF0J3MgYWxsLi4uIFJ1biB5b3VyICBgbXlfcHJvZ3JhbS5leGVgICBmaWxlIG9uIHRoZSBXaW5kb3dzIG1hY2hpbmUgb2YgeW91ciBjaG9vc2luZy5cblxuPiBcIkl0J3MganVzdCB0aGF0IGVhc3kuXCJcblxuKGZhbW91cyBsYXN0IHdvcmRzIHRoYXQgc2NyZXcgdXAganVzdCBhYm91dCBhbnl0aGluZyBiZWluZyByZWZlcmVuY2VkKVxuXG5Zb3VyIEVYRSBmaWxlIHNob3VsZCBydW4gd2l0aG91dCBjcmVhdGluZyBhIFwic2hlbGwgd2luZG93XCIuIE9ubHkgdGhlIEdVSSB3aW5kb3cgc2hvdWxkIHNob3cgdXAgb24geW91ciB0YXNrYmFyLlxuXG5JZiB5b3UgZ2V0IGEgY3Jhc2ggd2l0aCBzb21ldGhpbmcgbGlrZTpcbmBgYHB5dGhvblxuVmFsdWVFcnJvcjogc2NyaXB0ICcuLi4uLi4uXFxzcmNcXHRraW50ZXInIG5vdCBmb3VuZFxuYGBgXG5cblRoZW4gdHJ5IGFkZGluZyAqKmAtLWhpZGRlbi1pbXBvcnQgdGtpbnRlcmAqKiB0byB5b3VyIGNvbW1hbmRcblxuIyBDcmVhdGluZyBhIE1hYyBBcHAgRmlsZVxuXG5UaGVyZSBhcmUgcmVwb3J0cyB0aGF0IFB5SW5zdGFsbGVyIGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBBcHAgZmlsZXMuICBJdCdzIG5vdCBiZWVuIG9mZmljaWFsbHkgdGVzdGVkLlxuXG5SdW4gdGhpcyBjb21tYW5kIG9uIHlvdXIgTWFjXG5cbj4gcHlpbnN0YWxsZXIgLS1vbmVmaWxlIC0tYWRkLWJpbmFyeT0nL1N5c3RlbS9MaWJyYXJ5L0ZyYW1ld29ya3MvVGsuZnJhbWV3b3JrL1RrJzondGsnIC0tYWRkLWJpbmFyeT0nL1N5c3RlbS9MaWJyYXJ5L0ZyYW1ld29ya3MvVGNsLmZyYW1ld29yay9UY2wnOid0Y2wnIHlvdXJfcHJvZ3JhbS5weVxuXG5UaGlzIGluZm8gd2FzIGxvY2F0ZWQgb24gUmVkZGl0IHdpdGggdGhlIHNvdXJjZSB0cmFjZWQgYmFjayB0bzpcbmh0dHBzOi8vZ2l0aHViLmNvbS9weWluc3RhbGxlci9weWluc3RhbGxlci9pc3N1ZXMvMTM1MFxuXG4jIERlYnVnIE91dHB1dFxuXG5CZSBzdXJlIGFuZCBjaGVjayBvdXQgdGhlIEVhc3lQcmludCAoUHJpbnQpIGZ1bmN0aW9uIGRlc2NyaWJlZCBpbiB0aGUgaGlnaC1sZXZlbCBBUEkgc2VjdGlvbi4gIExlYXZlIHlvdXIgY29kZSB0aGUgd2F5IGl0IGlzLCByb3V0ZSB5b3VyIHN0ZG91dCBhbmQgc3RkZXJyb3IgdG8gYSBzY3JvbGxpbmcgd2luZG93LlxuXG5Gb3IgYSBmdW4gdGltZSwgYWRkIHRoZXNlIGxpbmVzIHRvIHRoZSB0b3Agb2YgeW91ciBzY3JpcHRcblxuYGBgcHl0aG9uXG4gICAgaW1wb3J0IFB5U2ltcGxlR1VJIGFzIHNnXG4gICAgcHJpbnQgPSBzZy5QcmludFxuYGBgXG5UaGlzIHdpbGwgdHVybiBhbGwgb2YgeW91ciBwcmludCBzdGF0ZW1lbnRzIGludG8gcHJpbnRzIHRoYXQgZGlzcGxheSBpbiBhIHdpbmRvdyBvbiB5b3VyIHNjcmVlbiByYXRoZXIgdGhhbiB0byB0aGUgdGVybWluYWwuXG5cbiMgTG9vayBhbmQgRmVlbFxuXG5Zb3UgY2FuIGNoYW5nZSBkZWZhdWx0cyBhbmQgY29sb3JzIG9mIGEgbGFyZ2UgbnVtYmVyIG9mIHRoaW5ncyBpbiBQeVNpbXBsZUdVSSBxdWl0ZSBlYXNpbHkuXG5cbiMjICBgQ2hhbmdsZUxvb2tBbmRGZWVsYFxuXG5XYW50IGEgcXVpY2sgd2F5IG9mIG1ha2luZyB5b3VyIHdpbmRvd3MgbG9vayBhIExPVCBiZXR0ZXI/ICBUcnkgY2FsbGluZyBgQ2hhbmdlTG9va0FuZEZlZWxgLiAgSXQgd2lsbCwgaW4gYSBzaW5nbGUgY2FsbCwgc2V0IHZhcmlvdXMgY29sb3IgdmFsdWVzIHRvIHdpZGdldHMsIGJhY2tncm91bmQsIHRleHQsIGV0Yy5cblxuT3IgZGlhbCBpbiB0aGUgbG9vayBhbmQgZmVlbCAoYW5kIGEgd2hvbGUgbG90IG1vcmUpIHRoYXQgeW91IGxpa2Ugd2l0aCB0aGUgYFNldE9wdGlvbnNgIGZ1bmN0aW9uLiAgWW91IGNhbiBjaGFuZ2UgYWxsIG9mIHRoZSBkZWZhdWx0cyBpbiBvbmUgZnVuY3Rpb24gY2FsbC4gIE9uZSBsaW5lIG9mIGNvZGUgdG8gY3VzdG9taXplIHRoZSBlbnRpcmUgR1VJLlxuXG5gYGBweXRob25cbiAgICBzZy5DaGFuZ2VMb29rQW5kRmVlbCgnR3JlZW5UYW4nKVxuYGBgXG5cblZhbGlkIGxvb2sgYW5kIGZlZWwgdmFsdWVzIGFyZSBjdXJyZW50bHk6XG5cbmBgYHB5dGhvblxuU3lzdGVtRGVmYXVsdFxuUmVkZGl0XG5Ub3BhbmdhXG5HcmVlblRhblxuRGFya1xuTGlnaHRHcmVlblxuRGFyazJcbkJsYWNrXG5UYW5cblRhbkJsdWVcbkRhcmtUYW5CbHVlXG5EYXJrQW1iZXJcbkRhcmtCbHVlXG5SZWRzXG5HcmVlblxuQmx1ZVB1cnBsZVxuUHVycGxlXG5CbHVlTW9ub1xuR3JlZW5Nb25vXG5Ccm93bkJsdWVcbkJyaWdodENvbG9yc1xuTmV1dHJhbEJsdWVcbktheWFrXG5TYW5keUJlYWNoXG5UZWFsTW9ub1xuYGBgXG5cblRoZSB3YXkgdGhpcyBjYWxsIGFjdHVhbGx5IHdvcmtzIGlzIHRoYXQgaXQgY2FsbHMgYFNldE9wdGlvbnNgIHdpdGggYSBMT1Qgb2YgY29sb3Igc2V0dGluZ3MuICBIZXJlIGlzIHRoZSBhY3R1YWwgY2FsbCB0aGF0J3MgbWFkZS4gIEFzIHlvdSBjYW4gc2VlIGxvdHMgb2Ygc3R1ZmYgaXMgZGVmaW5lZCBmb3IgeW91LlxuXG5gYGBweXRob25cblNldE9wdGlvbnMoYmFja2dyb3VuZF9jb2xvcj1jb2xvcnNbJ0JBQ0tHUk9VTkQnXSxcbiAgICAgICAgICAgIHRleHRfZWxlbWVudF9iYWNrZ3JvdW5kX2NvbG9yPWNvbG9yc1snQkFDS0dST1VORCddLFxuICAgICAgICAgICAgZWxlbWVudF9iYWNrZ3JvdW5kX2NvbG9yPWNvbG9yc1snQkFDS0dST1VORCddLFxuICAgICAgICAgICAgdGV4dF9jb2xvcj1jb2xvcnNbJ1RFWFQnXSxcbiAgICAgICAgICAgIGlucHV0X2VsZW1lbnRzX2JhY2tncm91bmRfY29sb3I9Y29sb3JzWydJTlBVVCddLFxuICAgICAgICAgICAgYnV0dG9uX2NvbG9yPWNvbG9yc1snQlVUVE9OJ10sXG4gICAgICAgICAgICBwcm9ncmVzc19tZXRlcl9jb2xvcj1jb2xvcnNbJ1BST0dSRVNTJ10sXG4gICAgICAgICAgICBib3JkZXJfd2lkdGg9Y29sb3JzWydCT1JERVInXSxcbiAgICAgICAgICAgIHNsaWRlcl9ib3JkZXJfd2lkdGg9Y29sb3JzWydTTElERVJfREVQVEgnXSxcbiAgICAgICAgICAgIHByb2dyZXNzX21ldGVyX2JvcmRlcl9kZXB0aD1jb2xvcnNbJ1BST0dSRVNTX0RFUFRIJ10sXG4gICAgICAgICAgICBzY3JvbGxiYXJfY29sb3I9KGNvbG9yc1snU0NST0xMJ10pLFxuICAgICAgICAgICAgZWxlbWVudF90ZXh0X2NvbG9yPWNvbG9yc1snVEVYVCddLFxuICAgICAgICAgICAgaW5wdXRfdGV4dF9jb2xvcj1jb2xvcnNbJ1RFWFRfSU5QVVQnXSlcbmBgYFxuXG5UbyBzZWUgdGhlIGxhdGVzdCBsaXN0IG9mIGNvbG9yIGNob2ljZXMgeW91IGNhbiBjYWxsIGBMaXN0T2ZMb29rQW5kRmVlbFZhbHVlcygpYFxuXG5Zb3UgY2FuIGFsc28gY29tYmluZSB0aGUgYENoYW5nZUxvb2tBbmRGZWVsYCBmdW5jdGlvbiB3aXRoIHRoZSBgU2V0T3B0aW9uc2AgZnVuY3Rpb24gdG8gcXVpY2tseSBtb2RpZnkgb25lIG9mIHRoZSBjYW5uZWQgY29sb3Igc2NoZW1lcy4gIE1heWJlIHlvdSBsaWtlIHRoZSBjb2xvcnMgYnV0IHdhcyBtb3JlIGRlcHRoIHRvIHlvdXIgYmV6ZWxzLiAgWW91IGNhbiBkaWFsIGluIGV4YWN0bHkgd2hhdCB5b3Ugd2FudC5cblxuKipPYmpUb1N0cmluZyoqXG5FdmVyIHdhbnRlZCB0byBlYXNpbHkgZGlzcGxheSBhbiBvYmplY3RzIGNvbnRlbnRzIGVhc2lseT8gIFVzZSBPYmpUb1N0cmluZyB0byBnZXQgYSBuaWNlbHkgZm9ybWF0dGVkIHJlY3Vyc2l2ZSB3YWxrIG9mIHlvdXIgb2JqZWN0cy5cblRoaXMgc3RhdGVtZW50OlxuXG4gICAgcHJpbnQoc2cuT2JqVG9TdGluZyh4KSlcblxuQW5kIHRoaXMgd2FzIHRoZSBvdXRwdXRcblxuICAgIDxjbGFzcyAnX19tYWluX18uWCc+XG4gICAgICAgIGFiYyA9IGFiY1xuICAgICAgICBhdHRyMTIgPSAxMlxuICAgICAgICBjID0gPGNsYXNzICdfX21haW5fXy5DJz5cbiAgICAgICAgICAgIGIgPSA8Y2xhc3MgJ19fbWFpbl9fLkInPlxuICAgICAgICAgICAgICAgIGEgPSA8Y2xhc3MgJ19fbWFpbl9fLkEnPlxuICAgICAgICAgICAgICAgICAgICBhdHRyMSA9IDFcbiAgICAgICAgICAgICAgICAgICAgYXR0cjIgPSAyXG4gICAgICAgICAgICAgICAgICAgIGF0dHIzID0gdGhyZWVcbiAgICAgICAgICAgICAgICBhdHRyMTAgPSAxMFxuICAgICAgICAgICAgICAgIGF0dHJ4ID0geFxuXG5Zb3UnbGwgcXVpY2tseSB3b25kZXIgaG93IHlvdSBldmVyIGNvZGVkIHdpdGhvdXQgaXQuXG5cbi0tLVxuIyBLbm93biBJc3N1ZXNcblxuV2VsbCwgdGhlcmUgYXJlIGEgZmV3IHF1aXJrcywgYW5kIHByb2JsZW1zIG9mIGNvdXJzZS4gIENoZWNrIHRoZSBbR2l0SHViIElzc3VlcyBkYXRhYmFzZV0oaHR0cHM6Ly9naXRodWIuY29tL1B5U2ltcGxlR1VJL1B5U2ltcGxlR1VJL2lzc3VlcykgZm9yIGEgbGlzdCBvZiB0aGVtLlxuXG5BcyBwcmV2aW91c2x5IG1lbnRpb25lZCB0aGlzIGlzIGFsc28gd2hlcmUgeW91IHNob3VsZCBwb3N0IGFsbCBwcm9ibGVtcyBhbmQgZW5oYW5jZW1lbnRzLlxuXG4jIyBNQUNTICsgdGtpbnRlciA9IFNVQ0tTXG5cbk5vdCBzdXJlIHdoeSwgYnV0IGZvciBvdmVyIGEgeWVhciBhbmQgYSBoYWxmLCBzZXR0aW5nIHRoZSBjb2xvciBvZiBidXR0b25zIGRvZXMgbm90IHdvcmsgb24gTWFjcy4gIFRoZXJlIGhhdmUgYmVlbiBudW1lcm91cyBvdGhlciBwcm9ibGVtcy4gIENoZWNraW5nIHRoZSBJc3N1ZXMgZGF0YWJhc2UgaXMgdGhlIGJlc3QgcGxhY2UgdG8gc2VlIHdoYXQgdGhleSBhcmUuICBJZiB0aGVyZSB3YXMgYSBtYWdpYyB3YW5kIGl0IHdvdWxkIGhhdmUgYmVlbiB1c2VkIGxvbmcgYWdvIHRvIGZpeCB0aGVzZSBwcm9ibGVtcywgYnV0IHRoZXJlIGRvZXMgbm90IGFwcGVhciB0byBiZSBhIG1hZ2ljIGZpeC5cblxuVGhpcyB3YXMgYWxyZWFkeSBtZW50aW9uZWQgYXQgdGhlIHRvcCBvZiB0aGlzIGRvY3VtZW50IGJ1dCB3YW50IHRvIG1ha2Ugc3VyZSBpdCdzIGNvdmVyZWQgYXMgYSBcImtub3duIGlzc3VlXCJcblxuIyMgTXVsdGlwbGUgdGhyZWFkc1xuXG5XaGlsZSBub3QgYW4gXCJpc3N1ZVwiIHRoaXMgaXMgYSAqKipzdGVybiB3YXJuaW5nKioqXG5cbiMjICoqRG8gbm90IGF0dGVtcHQqKiB0byBjYWxsIGBQeVNpbXBsZUdVSWAgZnJvbSBtdWx0aXBsZSB0aHJlYWRzISBJdCdzIGB0a2ludGVyYCBiYXNlZCBhbmQgYHRraW50ZXJgIGhhcyBpc3N1ZXMgd2l0aCBtdWx0aXBsZSB0aHJlYWRzXG5cblRraW50ZXIgYWxzbyB3YW50cyB0byBiZSB0aGUgTUFJTiB0aHJlYWQgaW4geW91ciBjb2RlLiAgU28sIGlmIHlvdSBoYXZlIHRvIHJ1biBtdWx0aXBsZSB0aHJlYWRzLCBtYWtlIHN1cmUgdGhlIEdVSSBpcyB0aGUgbWFpbiB0aHJlYWQuXG5cbk90aGVyIHRoYW4gdGhhdCwgZmVlbCBmcmVlIHRvIHVzZSB0aHJlYWRzIHdpdGggUHlTaW1wbGVHVUkgb24gYWxsIG9mIHRoZSBwb3J0cy4gIFlvdSdsbCBmaW5kIGEgZ29vZCBleGFtcGxlIGZvciBob3cgdG8gcnVuIFwibG9uZyBydW5uaW5nIHRhc2tzXCIgaW4geW91ciBldmVudCBsb29wIGJ5IGxvb2tpbmcgYXQgdGhlIGRlbW8gcHJvZ3JhbTogYERlbW9fTXVsdGl0aHJlYWRlZF9Mb25nX1Rhc2tzLnB5YFxuXG4jIENvbnRyaWJ1dGluZ1xuXG4jIyBDb3JlIENvZGVcblxuKioqQ29yZSBjb2RlIGNoYW5nZXMvcHVsbCByZXF1ZXN0cyBhcmUgbm90IGJlaW5nIGFjY2VwdGVkIGF0IHRoaXMgdGltZS4qKipcblxuIyMgRGVtb3NcblxuWW91J3JlIHdlbGNvbWUgdG8gc2hhcmUgYSBQeVNpbXBsZUdVSSBwcm9ncmFtIHlvdSd2ZSB3cml0dGVuIHRoYXQgeW91IHRoaW5rIGZpdHMgdGhlIG1vZGVsIG9mIGEgUHlTaW1wbGVHVUkgRGVtbyBQcm9ncmFtLlxuXG4jIyBHaXRIdWIgUmVwb3NcblxuSWYgeW91J3ZlIGNyZWF0ZWQgYSBHaXRIdWIgZm9yIHlvdXIgcHJvamVjdCB0aGF0IHVzZXMgUHlTaW1wbGVHVUkgdGhlbiBwbGVhc2Ugc3VibWl0IGl0IHRvIGJlIGluY2x1ZGVkIGluIHRoaXMgZG9jdW1lbnQgb3Igb24gdGhlIFB5U2ltcGxlR1VJIEdpdEh1YiBzaXRlLiAgQWxzbywgeW91J2xsIGZpbmQgYSBsb3QgbW9yZSBwZW9wbGUgd2lsbCBsb29rIGF0IHlvdXIgY29kZSwgZXhwbG9yZSB5b3VyIHJlcG8gaWYgeW91IGhhdmUgcG9zdGVkICoqc2NyZWVuIHNob3RzIGluIHlvdXIgcmVhZG1lKiouICBQZW9wbGUgKmxvdmUqIHN1Y2Nlc3Mgc3RvcmllcyBhbmQgc2hvd2luZyB5b3VyIEdVSSdzIHNjcmVlbiBzaG93cyB5b3UndmUgYmVlbiBzdWNjZXNzZnVsLiAgRXZlcnlvbmUgd2lucyFcblxuIyMgVmVyc2lvbnNcbnxWZXJzaW9uIHwgRGVzY3JpcHRpb24gfFxufC0tfC0tfFxufCAxLjAuOSAgIHwgSnVseSAxMCwgMjAxOCAtIEluaXRpYWwgUmVsZWFzZSB8XG58IDEuMC4yMSB8IEp1bHkgMTMsIDIwMTggLSBSZWFkbWUgdXBkYXRlcyAgfFxufCAyLjAuMCB8IEp1bHkgMTYsIDIwMTggLSBBTEwgb3B0aW9uYWwgcGFyYW1ldGVycyByZW5hbWVkIGZyb20gQ2FtZWxDYXNlIHRvIGFsbF9sb3dlcl9jYXNlXG58IDIuMS4xIHwgSnVseSAxOCwgMjAxOCAtIEdsb2JhbCBzZXR0aW5ncyBleHBvc2VkLCBmaXhlc1xufCAyLjIuMHwgSnVseSAyMCwgMjAxOCAtIEltYWdlIEVsZW1lbnRzLCBQcmludCBvdXRwdXRcbnwgMi4zLjAgfCBKdWx5IDIzLCAyMDE4IC0gQ2hhbmdlZCBmb3JtLlJlYWQgcmV0dXJuIGNvZGVzLCBTbGlkZXIgRWxlbWVudHMsIExpc3Rib3ggZWxlbWVudC4gUmVuYW1lZCBzb21lIG1ldGhvZHMgYnV0IGxlZnQgbGVnYWN5IGNhbGxzIGluIHBsYWNlIGZvciBub3cuXG58IDIuNC4wIHwgSnVseSAyNCwgMjAxOCAtIEJ1dHRvbiBpbWFnZXMuIEZpeGVzIHNvIGNhbiBydW4gb24gUmFzcGJlcnJ5IFBpXG58IDIuNS4wIHwgSnVseSAyNiwgMjAxOCAtIENvbG9ycy4gTGlzdGJveCBzY3JvbGxiYXIuIHRraW50ZXIgUHJvZ3Jlc3MgQmFyIGluc3RlYWQgb2YgaG9tZWdyb3duLlxufCAyLjYuMCB8IEp1bHkgMjcsIDIwMTggLSBhdXRvX3NpemVfYnV0dG9uIHNldHRpbmcuICBMaWNlbnNlIGNoYW5nZWQgdG8gTEdQTCAzK1xufCAyLjcuMCB8IEp1bHkgMzAsIDIwMTggLSByZWFsdGltZSBidXR0b25zLCB3aW5kb3dfbG9jYXRpb24gZGVmYXVsdCBzZXR0aW5nXG58IDIuOC4wIHwgQXVnIDksIDIwMTggLSBOZXcgTm9uZSBkZWZhdWx0IG9wdGlvbiBmb3IgQ2hlY2tib3ggZWxlbWVudCwgdGV4dCBjb2xvciBvcHRpb24gZm9yIGFsbCBlbGVtZW50cywgcmV0dXJuIHZhbHVlcyBhcyBhIGRpY3Rpb25hcnksIHNldHRpbmcgZm9jdXMsIGJpbmRpbmcgcmV0dXJuIGtleVxufCAyLjkuMCB8IEF1ZyAxNiwyMDE4IC0gU2NyZWVuIGZsYXNoIGZpeCwgYGRvX25vdF9jbGVhcmAgaW5wdXQgZmllbGQgb3B0aW9uLCBgYXV0b3NpemVfdGV4dGAgZGVmYXVsdHMgdG8gYFRydWVgIG5vdywgcmV0dXJuIHZhbHVlcyBhcyBvcmRlcmVkIGRpY3QsIHJlbW92ZWQgdGV4dCB0YXJnZXQgZnJvbSBwcm9ncmVzcyBiYXIsIHJld29yayBvZiByZXR1cm4gdmFsdWVzIGFuZCBpbml0aWFsIHJldHVybiB2YWx1ZXMsIHJlbW92ZWQgbGVnYWN5IEZvcm0uUmVmcmVzaCgpIG1ldGhvZCAocmVwbGFjZWQgYnkgRm9ybS5SZWFkTm9uQmxvY2tpbmdGb3JtKCkpLCBDT0xVTU4gZWxlbWVudHMhISwgY29sb3JlZCB0ZXh0IGRlZmF1bHRzXG58IDIuMTAuMCB8IEF1ZyAyNSwgMjAxOCAtIEtleWJvYXJkICYgTW91c2UgZmVhdHVyZXMgKFJldHVybiBpbmRpdmlkdWFsIGtleXMgYXMgaWYgYnV0dG9ucywgcmV0dXJuIG1vdXNlIHNjcm9sbC13aGVlbCBhcyBidXR0b24sIGJpbmQgcmV0dXJuLWtleSB0byBidXR0b24sIGNvbnRyb2wgb3ZlciBrZXlib2FyZCBmb2N1cyksIFNhdmVBcyBCdXR0b24sIFVwZGF0ZSAmIEdldCBtZXRob2RzIGZvciBJbnB1dFRleHQsIFVwZGF0ZSBmb3IgTGlzdGJveCwgVXBkYXRlICYgR2V0IGZvciBDaGVja2JveCwgR2V0IGZvciBNdWx0aWxpbmUsIENvbG9yIG9wdGlvbnMgZm9yIFRleHQgRWxlbWVudCBVcGRhdGUsIFByb2dlc3MgYmFyIFVwZGF0ZSBjYW4gY2hhbmdlIG1heCB2YWx1ZSwgVXBkYXRlIGZvciBCdXR0b24gdG8gY2hhbmdlIHRleHQgJiBjb2xvcnMsIFVwZGF0ZSBmb3IgSW1hZ2UgRWxlbWVudCwgVXBkYXRlIGZvciBTbGlkZXIsIEZvcm0gbGV2ZWwgdGV4dCBqdXN0aWZpY2F0aW9uLCBUdXJuIG9mZiBkZWZhdWx0IGZvY3VzLCBzY3JvbGwgYmFyIGZvciBMaXN0Ym94ZXMsIEltYWdlcyBjYW4gYmUgZnJvbSBmaWxlbmFtZSBvciBmcm9tIGluLVJBTSwgVXBkYXRlIGZvciBJbWFnZSkuICBGaXhlcyAtIHRleHQgd3JhcHBpbmcgaW4gYnV0dG9ucywgbXNnIGJveCwgcmVtb3ZlZCBzbGlkZXIgYm9yZGVycyBlbnRpcmVseSBhbmQgb3RoZXJzXG58IDIuMTEuMCB8IEF1ZyAyOSwgMjAxOCAtIExvdHMgb2YgbGl0dGxlIGNoYW5nZXMgdGhhdCBhcmUgbmVlZGVkIGZvciB0aGUgZGVtbyBwcm9ncmFtcyB0byB3b3JrLiBCdXR0b25zIGhhdmUgdGhlaXIgb3duIGRlZmF1bHQgZWxlbWVudCBzaXplLCBmaXggZm9yIE1hYyBkZWZhdWx0IGJ1dHRvbiBjb2xvciwgcGFkZGluZyBzdXBwb3J0IGZvciBhbGwgZWxlbWVudHMsIG9wdGlvbiB0byBpbW1lZGlhdGVseSByZXR1cm4gaWYgbGlzdCBib3ggZ2V0cyBzZWxlY3RlZCwgRmlsZXNCcm93c2UgYnV0dG9uLCBDYW52YXMgRWxlbWVudCwgRnJhbWUgRWxlbWVudCwgU2xpZGVyIHJlc29sdXRpb24gb3B0aW9uLCBGb3JtLlJlZnJlc2ggbWV0aG9kLCBiZXR0ZXIgdGV4dCB3cmFwcGluZywgJ1N5c3RlbURlZmF1bHQnIGxvb2sgYW5kIGZlZWwgc2V0dGluXG58IDIuMjAuMCB8IFNlcHQgNCwgMjAxOCAtIFNvbWUgc2l6YWJsZSBmZWF0dXJlcyB0aGlzIHRpbWUgYXJvdW5kIG9mIGludGVyZXN0IHRvIGFkdmFuY2VkIHVzZXJzLiAgUmVuYW1pbmcgb2YgdGhlIE1zZ0JveCBmdW5jdGlvbnMgdG8gUG9wdXAuIFJlbmFtaW5nIEdldEZpbGUsIGV0YywgdG8gUG9wdXBHZXRGaWxlLiBIaWdoLWxldmVsIHdpbmRvd2luZyBjYXBhYmlsaXRpZXMgc3RhcnQgd2l0aCBQb3B1cCwgUG9wdXBOb1dhaXQvUG9wdXBOb25ibG9ja2luZywgUG9wdXBOb0J1dHRvbnMsIGRlZmF1bHQgaWNvbiwgY2hhbmdlX3N1Ym1pdHMgb3B0aW9uIGZvciBMaXN0Ym94L0NvbWJvYm94L1NsaWRlci9TcGluLywgTmV3IE9wdGlvbk1lbnUgZWxlbWVudCwgdXBkYXRpbmcgZWxlbWVudHMgYWZ0ZXIgc2hvd24sIHN5c3RlbSBkZWZhdWwgY29sb3Igb3B0aW9uIGZvciBwcm9ncmVzcyBiYXJzLCBuZXcgYnV0dG9uIHR5cGUgKER1bW15IEJ1dHRvbikgdGhhdCBvbmx5IGNsb3NlcyBhIHdpbmRvdywgU0NST0xMQUJMRSBDb2x1bW5zISEgKHllYSwgcGxheWluZyBpbiB0aGUgQmlnIExlYWd1ZSBub3cpLCBMYXlvdXRBbmRTaG93IGZ1bmN0aW9uIHJlbW92ZWQsIGZvcm0uRmlsbCAtIGJ1bGsgdXBkYXRlcyB0byBmb3JtcywgRmluZEVsZW1lbnQgLSBmaW5kIGVsZW1lbnQgYmFzZWQgb24ga2V5IHZhbHVlIChBTEwgZWxlbWVudHMgaGF2ZSBrZXlzIG5vdyksIG5vIGxvbmdlciB1c2UgZ3JpZCBwYWNraW5nIGZvciByb3cgZWxlbWVudHMgKGEgcG90ZW50aWFsbHkgaHVnZSBjaGFuZ2UpLCBzY3JvbGxlZCB0ZXh0IGJveCBzaXppbmcgY2hhbmdlZCwgbmV3IGxvb2sgYW5kIGZlZWwgdGhlbWVzIChEYXJrLCBEYXJrMiwgQmxhY2ssIFRhbiwgVGFuQmx1ZSwgRGFya1RhbkJsdWUsIERhcmtBbWJlciwgRGFya0JsdWUsIFJlZHMsIEdyZWVuKVxufCAyLjMwLjAgfCBTZXB0IDYsIDIwMTggLSBDYWxlbmRhciBDaG9vc2VyIChidXR0b24pLCBib3JkZXJsZXNzIHdpbmRvd3MsIGxvYWQvc2F2ZSBmb3JtIHRvIGRpc2tcbnwgMy4wLjAgfCBTZXB0IDcsIDIwMTggLSBUaGUgXCJmaXggZm9yIHBvb3IgY2hvaWNlIG9mIDIueCBudW1iZXJzXCIgcmVsZWFzZS4gQ29sb3IgQ2hvb3NlciAoYnV0dG9uKSwgXCJncmFiIGFueXdoZXJlXCIgd2luZG93cyBhcmUgb24gYnkgZGVmYXVsdCwgZGlzYWJsZSBjb21ibyBib3hlcywgSW5wdXQgRWxlbWVudCB0ZXh0IGp1c3RpZmljYXRpb24gKGxhc3QgcGFydCBuZWVkZWQgZm9yICd0YWJsZXMnKSwgSW1hZ2UgRWxlbWVudCBjaGFuZ2VzIHRvIHN1cHBvcnQgT3BlbkNWPywgUG9wdXBHZXRGaWxlIGFuZCBQb3B1cEdldEZvbGRlciBoYXZlIGJldHRlciBub193aW5kb3cgb3B0aW9uXG58IDMuMDEuMDEgfCBTZXB0IDEwLCAyMDE4IC0gTWVudXMhIChzb3J0IG9mIGEgYmlnIGRlYWwpXG58IDMuMDEuMDIgfCBTdGVwIDExLCAyMDE4IC0gQWxsIEVsZW1lbnQuVXBkYXRlIGZ1bmN0aW9ucyBoYXZlIGEgYGRpc2FibGVkYCBwYXJhbWV0ZXIgc28gdGhleSBjYW4gYmUgZGlzYWJsZWQuICBSZW5hbWVkIHNvbWUgcGFyYW1ldGVycyBpbiBVcGRhdGUgZnVuY3Rpb24gKHNvcnJ5IGlmIEkgYnJva2UgeW91ciBjb2RlKSwgZml4IGZvciBidWcgaW4gSW1hZ2UuVXBkYXRlLiBXYXNuJ3Qgc2V0dGluZyBzaXplIGNvcnJlY3RseSwgY2hhbmdlZCBncmFiX2FueXdoZXJlIGxvZ2ljIGFnYWluLGFkZGVkIGdyYWIgYW55d2hlcmUgb3B0aW9uIHRvIFB1cHVwR2V0VGV4dCAoYXNzdW1lcyBkaXNhYmxlZClcbnwgMy4wMi4wMCB8IFNlcHQgMTQsIDIwMTggLSBOZXcgVGFibGUgRWxlbWVudCAoQmV0YSByZWxlYXNlKSwgTXNnQm94IHJlbW92ZWQgZW50aXJlbHksIGZvbnQgc2V0dGluZyBmb3IgSW5wdXRUZXh0IEVsZW1lbnQsICoqcGFja2luZyBjaGFuZ2UqKiByaXNreSBjaGFuZ2UgdGhhdCBhbGxvd3Mgc29tZSBFbGVtZW50cyB0byBiZSByZXNpemVkLHJlbW92ZWQgY29tbWFuZCBwYXJhbWV0ZXIgZnJvbSBNZW51IEVsZW1lbnQsIG5ldyBmdW5jdGlvbiBuYW1lcyBmb3IgUmVhZE5vbkJsb2NraW5nIChGaW5hbGl6ZSwgUHJlUmVhZCksIGNoYW5nZSB0byB0ZXh0IGVsZW1lbnQgYXV0b3NpemluZyBhbmQgd3JhcHBpbmcgKHlldCBhZ2FpbiksIGxvdHMgb2YgcGFyYW1ldGVyIGFkZGl0aW9ucyB0byBQb3B1cCBmdW5jdGlvbnMgKGNvbG9ycywgZXRjKS5cbnwgMy4wMy4wMCB8IE5ldyBmZWF0dXJlIC0gT25lIExpbmUgUHJvZ3Jlc3MgTWV0ZXJzLCBuZXcgZGlzcGxheV9yb3dfbnVtYmVycyBmb3IgVGFibGUgRWxlbWVudCwgZml4ZWQgYnVnIGluIEVhc3lQcm9ncmVzc3NNZXRlcnMgKGZ1bmN0aW9uIHdpbGwgc29vbiBnbyBhd2F5KSwgT25lTGluZSBhbmQgRWFzeSBwcm9ncmVzcyBtZXRlcnMgc2V0IHRvIGdyYWIgYW55d2hlcmUgYnV0IGNhbiBiZSB0dXJuZWQgb2ZmLlxufCAwMywwNC4wMCB8IFNlcHQgMTgsIDIwMTggLSBOZXcgZmVhdHVyZXMgLSBHcmFwaCBFbGVtZW50LCBGcmFtZSBFbGVtZW50LCBtb3JlIHNldHRpbmdzIGV4cG9zZWQgdG8gUG9wdXAgY2FsbHMuICBTZWUgbm90ZXMgYmVsb3cgZm9yIG1vcmUuXG58IDAzLjA0LjAxIHwgU2VwdCAxOCwgMjAxOCAtIFNlZSByZWxlYXNlIG5vdGVzXG58IDAzLjA1LjAwIHwgU2VwdCAyMCwgMjAxOCAtIFNlZSByZWxlYXNlIG5vdGVzXG58IDAzLjA1LjAxIHwgU2VwdCAyMiwgMjAxOCAtIFNlZSByZWxlYXNlIG5vdGVzXG58IDAzLjA1LjAyIHwgU2VwdCAyMywgMjAxOCAtIFNlZSByZWxlYXNlIG5vdGVzXG58IDAzLjA2LjAwIHwgU2VwdCAyMywgMjAxOCAtIEdvb2RieWUgRmxleEZvcm0sIGhlbGxvIFdpbmRvd1xufCAwMy4wOC4wMCB8IFNlcHQgMjUsIDIwMTggLSBUYWIgYW5kIFRhYkdyb3VwIEVsZW1lbnRzXFxcbnwgMDEuMDAuMDAgZm9yIDIuNyB8IFNlcHQgMjUsIDIwMTggLSBGaXJzdCByZWxlYXNlIGZvciAyLjdcbnwgMDMuMDguMDQgfCBTZXB0IDMwLCAyMDE4IC0gU2VlIHJlbGVhc2Ugbm90ZXNcbnwgMDMuMDkuMDAgfCBPY3QgMSwgMjAxOCB8XG58IDIuNyAwMS4wMS4wMCB8IE9jdCAxLCAyMDE4XG58IDIuNyAwMS4wMS4wMiB8IE9jdCA4LCAyMDE4XG58IDAzLjA5LjAxIHwgT2N0IDgsIDIwMThcbnwgMy45LjMgJiAxLjEuMyB8IE9jdCAxMSwgMjAxOFxufCAzLjkuNCAmIDEuMS40IHwgT2N0IDE2LCAyMDE4XG58IDMuMTAuMSAmIDEuMi4xIHwgT2N0IDIwLCAyMDE4XG58IDMuMTAuMyAmIDEuMi4zIHwgT2N0IDIzLCAyMDE4XG58IDMuMTEuMCAmIDEuMTEuMCB8IE9jdCAyOCwgMjAxOFxufCAzLjEyLjAgJiAxLjEyLjAgfCBPY3QgMjgsIDIwMThcbnwgMy4xMy4wICYgMS4xMy4wIHwgT2N0IDI5LCAyMDE4XG58IDMuMTQuMCAmIDEuMTQuMCB8IE5vdiAyLCAyMDE4XG58IDMuMTUuMCAmIDEuMTUuMCB8IE5vdiAyMCwgMjAxOFxufCAzLjE2LjAgJiAxLjE2LjAgfCBOb3YgMjYsIDIwMThcbnwgMy4xNy4wICYgMS4xNy4wIHwgRGVjIDEsIDIwMThcblxuIyMgUmVsZWFzZSBOb3Rlc1xuMi4zIC0gU2xpZGVycywgTGlzdGJveCdzIGFuZCBJbWFnZSBlbGVtZW50cyAob2ggbXkhKVxuXG5JZiB1c2luZyBQcm9ncmVzcyBNZXRlcnMsIGF2b2lkIGNhbmNlbGxpbmcgdGhlbSB3aGVuIHlvdSBoYXZlIGFub3RoZXIgd2luZG93IG9wZW4uICBJdCBjb3VsZCBsZWFkIHRvIGZ1dHVyZSB3aW5kb3dzIGJlaW5nIGJsYW5rLiBJdCdzIGJlaW5nIHdvcmtlZCBvbi5cblxuTmV3IGRlYnVnIHByaW50aW5nIGNhcGFiaWxpdHkuICBgc2cuUHJpbnRgXG5cbjIuNSBEaXNjb3ZlcmVkIGlzc3VlIHdpdGggc2Nyb2xsIGJhciBvbiBgT3V0cHV0YCBlbGVtZW50cy4gIFRoZSBiYXIgd2lsbCBtYXRjaCBzaXplIG9mIFJPVyBub3QgdGhlIHNpemUgb2YgdGhlIGVsZW1lbnQuICBOb3JtYWxseSB5b3UgbmV2ZXIgbm90aWNlIHRoaXMgZHVlIHRvIHdoZXJlIG9uIGEgZm9ybSB0aGUgYE91dHB1dGAgZWxlbWVudCBnb2VzLlxuXG5MaXN0Ym94ZXMgYXJlIHN0aWxsIHdpdGhvdXQgc2Nyb2xsd2hlZWxzLiBUaGUgbW91c2UgY2FuIGRyYWcgdG8gc2VlIG1vcmUgaXRlbXMuICBUaGUgbW91c2Ugc2Nyb2xsd2hlZWwgd2lsbCBhbHNvIHNjcm9sbCB0aGUgbGlzdCBhbmQgd2lsbCBgcGFnZSB1cGAgYW5kIGBwYWdlIGRvd25gIGtleXMuXG5cbjIuNyBJcyB0aGUgXCJmZWF0dXJlIGNvbXBsZXRlXCIgcmVsZWFzZS4gUHJldHR5IG11Y2ggYWxsIGZlYXR1cmVzIGFyZSBkb25lIGFuZCBpbiB0aGUgY29kZVxuXG4yLjggTW9yZSB0ZXh0IGNvbG9yIGNvbnRyb2xzLiAgVGhlIGNhbGxlciBoYXMgbW9yZSBjb250cm9sIG92ZXIgdGhpbmdzIGxpa2UgdGhlIGZvY3VzIGFuZCB3aGF0IGJ1dHRvbnMgc2hvdWxkIGJlIGNsaWNrZWQgd2hlbiBlbnRlciBrZXkgaXMgcHJlc3NlZC4gUmV0dXJuIHZhbHVlcyBhcyBhIGRpY3Rpb25hcnkhIChOSUNFIGFkZGl0aW9uKVxuXG4yLjkgQ09MVU1OUyEgIFRoaXMgaXMgdGhlIGJpZ2dlc3QgZmVhdHVyZSBhbmQgaGFkIHRoZSBiaWdnZXN0IGltcGFjdCBvbiB0aGUgY29kZSBiYXNlLiAgSXQgd2FzIGEgZGlmZmljdWx0IGZlYXR1cmUgdG8gYWRkLCBidXQgaXQgd2FzIHdvcnRoIGl0LiAgQ2FuIG5vdyBtYWtlIGV2ZW4gbW9yZSBsYXlvdXRzLiBBbG1vc3QgYW55IGxheW91dCBpcyBwb3NzaWJsZSB3aXRoIHRoaXMgYWRkaXRpb24uXG5cbi4uLi4uLi4uLi4uLi4uLi4uLiBpbnNlcnQgcmVsZWFzZXMgMi45IHRvIDIuMzAgLi4uLi4uLi4uLi4uLi4uLi5cblxuMy4wIFdlJ3ZlIGNvbWUgYSBsb25nIHdheSBiYWJ5ISAgVGltZSBmb3IgYSBtYWpvciByZXZpc2lvbiBidW1wLiAgT25lIHJlYXNvbiBpcyB0aGF0IHRoZSBudW1iZXJzIHN0YXJ0ZWQgdG8gY29uZnVzZSBwZW9wbGUgIHRoZSBsYXRlc3QgcmVsZWFzZSB3YXMgMi4zMCwgYnV0IHNvbWUgcGVvcGxlIHJlYWQgaXQgYXMgMi4zIGFuZCB0aG91Z2h0IGl0IHdlbnQgYmFja3dhcmRzLiAgSSBraW5kYSBtZXNzZWQgdXAgdGhlIDIueCBzZXJpZXMgb2YgbnVtYmVycywgc28gd2h5IG5vdCBzdGFydCB3aXRoIGEgY2xlYW4gc2xhdGUuICBBIGxvdCBoYXMgaGFwcGVuZWQgYW55d2F5IHNvIGl0J3Mgd2VsbCBlYXJuZWQuXG5cbk9uZSBjaGFuZ2UgdGhhdCB3aWxsIHNldCBQeVNpbXBsZUdVSSBhcGFydCBpcyB0aGUgcGFybG9yIHRyaWNrIG9mIGJlaW5nIGFibGUgdG8gbW92ZSB0aGUgd2luZG93IGJ5IGNsaWNraW5nIG9uIGl0IGFueXdoZXJlLiAgVGhpcyBpcyB0dXJuZWQgb24gYnkgZGVmYXVsdC4gIEl0J3Mgbm90IGEgY29tbW9uIHdheSB0byBpbnRlcmFjdCB3aXRoIHdpbmRvd3MuICBOb3JtYWxseSB5b3UgaGF2ZSB0byBtb3ZlIHVzaW5nIHRoZSB0aXRsZWJhci4gIE5vdCBzbyB3aXRoIFB5U2ltcGxlR1VJLiAgTm93IHlvdSBjYW4gZHJhZyB1c2luZyBhbnkgcGFydCBvZiB0aGUgd2luZG93LiAgWW91IHdpbGwgd2FudCB0byB0dXJuIG9mZiBmb3Igd2luZG93cyB3aXRoIHNsaWRlcnMuICBUaGlzIGZlYXR1cmUgaXMgZW5hYmxlZCBpbiB0aGUgV2luZG93IGNhbGwuXG5cblJlbGF0ZWQgdG8gdGhlIEdyYWIgQW55d2hlcmUgZmVhdHVyZSBpcyB0aGUgbm9fdGl0bGViYXIgb3B0aW9uLCBhZ2FpbiBmb3VuZCBpbiB0aGUgY2FsbCB0byBXaW5kb3cuICBZb3VyIHdpbmRvdyB3aWxsIGJlIGEgc3BpZmZ5LCBib3JkZXJsZXNzIHdpbmRvdy4gIEl0J3MgYSByZWFsbHkgaW50ZXJlc3RpbmcgZWZmZWN0LiAgU2xpZ2h0IHByb2JsZW0gaXMgdGhhdCB5b3UgZG8gbm90IGhhdmUgYW4gaWNvbiBvbiB0aGUgdGFza2JhciB3aXRoIHRoZXNlIHR5cGVzIG9mIHdpbmRvd3MsIHNvIGlmIHlvdSBkb24ndCBzdXBwbHkgYSBidXR0b24gdG8gY2xvc2UgdGhlIHdpbmRvdywgdGhlcmUncyBubyB3YXkgdG8gY2xvc2UgaXQgb3RoZXIgdGhhbiB0YXNrIG1hbmFnZXIuXG5cbjMuMC4yIFN0aWxsIG1ha2luZyBjaGFuZ2VzIHRvIFVwZGF0ZSBtZXRob2RzIHdpdGggbWFueSBtb3JlIGFoZWFkIGluIHRoZSBmdXR1cmUuICBDb250aW51ZSB0byBtZXNzIHdpdGggZ3JhYiBhbnl3aGVyZSBvcHRpb24uICBOZWVkZWQgdG8gZGlzYWJsZSBpbiBtb3JlIHBsYWNlcyBzdWNoIGFzIHRoZSBQb3B1cEdldFRleHQgZnVuY3Rpb24uICBBbnkgdGltZSB0aGVzZSBpcyB0ZXh0IGlucHV0IG9uIGEgZm9ybSwgeW91IGdlbmVyYWxseSB3YW50IHRvIHR1cm4gb2ZmIHRoZSBncmFiIGFueXdoZXJlIGZlYXR1cmUuXG5cbiMjIyMgMy4yLjBcbiBCaWdnZXN0IGNoYW5nZSB3YXMgdGhlIGFkZGl0aW9uIG9mIHRoZSBUYWJsZSBFbGVtZW50LiAgVHJ5aW5nIHRvIG1ha2UgY2hhbmdlcyBzbyB0aGF0IGZvcm0gcmVzaXppbmcgaXMgYSBwb3NzaWJpbGl0eSBidXQgdW5rbm93biBpZiB3aWxsIHdvcmsgaW4gdGhlIGxvbmcgcnVuLiAgUmVtb3ZlZCBhbGwgTXNnQm94LCBHZXQqIGZ1bmN0aW9ucyBhbmQgcmVwbGFjZWQgd2l0aCBQb3B1cCBmdW5jdGlvbnMuICBQb3B1cHMgaGFkIG11bHRpcGxlIG5ldyBwYXJhbWV0ZXJzIGFkZGVkIHRvIGNoYW5nZSB0aGUgbG9vayBhbmQgZmVlbCBvZiBhIHBvcHVwLlxuXG4jIyMjIDMuMy4wXG5PbmVMaW5lUHJvZ3Jlc3NNZXRlciBmdW5jdGlvbiBhZGRlZCB3aGljaCBnaXZlcyB5b3Ugbm90IG9ubHkgYSBvbmUtbGluZSBzb2x1dGlvbiB0byBwcm9ncmVzcyBtZXRlcnMsIGJ1dCBpdCBhbHNvIGdpdmVzIHlvdSB0aGUgYWJpbGl0eSB0byBoYXZlIG1vcmUgdGhhbiAxIHJ1bm5pbmcgYXQgdGhlIHNhbWUgdGltZSwgc29tZXRoaW5nIG5vdCBwb3NzaWJsZSB3aXRoIHRoZSBFYXN5UHJvZ3Jlc3NNZXRlckNhbGxcblxuIyMjIyAzLjQuMFxuXG4qIEZyYW1lIC0gTmV3IEVsZW1lbnQgLSBhIGxhYmVsbGVkIGZyYW1lIGZvciBncm91cGluZyBlbGVtZW50cy4gU2ltaWxhclxuICAgdG8gQ29sdW1uXG4qIEdyYXBoIChsaWtlIGEgQ2FudmFzIGVsZW1lbnQgZXhjZXB0IHVzZXMgdGhlIGNhbGxlcidzXG4gICBjb29yZGluYXRlIHN5c3RlbSByYXRoZXIgdGhhbiB0a2ludGVyJ3MpLlxuKiBpbml0aWFsX2ZvbGRlciAtIHNldHMgc3RhcnRpbmcgZm9sZGVyIGZvciBicm93c2luZyB0eXBlIGJ1dHRvbnMgKGJyb3dzZSBmb3IgZmlsZS9mb2xkZXIpLlxuKiBCdXR0b25zIHJldHVybiAga2V5IHZhbHVlIHJhdGhlciB0aGFuIGJ1dHRvbiB0ZXh0ICoqSWYqKiBhIGBrZXlgIGlzIHNwZWNpZmllZCxcbipcbiAgIE9uZUxpbmVQcm9ncmVzc01ldGVyISAgUmVwbGFjZWQgRWFzeVByb2dyZXNzTWV0ZXIgKHNvcnJ5IGZvbGtzIHRoYXQnc1xuICAgdGhlIHdheSBwcm9ncmVzcyB3b3JrcyBzb21ldGltZXMpXG4gKiBQb3B1cCAtIGNoYW5nZWQgQUxMIG9mIHRoZSBQb3B1cCBjYWxscyB0byAgIHByb3ZpZGUgbWFueSBtb3JlIGN1c3RvbWl6YXRpb24gc2V0dGluZ3NcbiAgICAqIFBvcHVwXG4gICAgKiBQb3B1cEdldEZvbGRlclxuICAgICogUG9wdXBHZXRGaWxlXG4gICAgKiBQb3B1cEdldFRleHRcbiAgICAqIFBvcHVwXG4gICAgKiBQb3B1cE5vQnV0dG9uc1xuICAgICogUG9wdXBOb25CbG9ja2luZ1xuICAgICogUG9wdXBOb1RpdGxlYmFyXG4gICAgKiBQb3B1cEF1dG9DbG9zZVxuICAgICogUG9wdXBDYW5jZWxcbiAgICAqIFBvcHVwT0tcbiAgICAqIFBvcHVwT0tDYW5jZWxcbiAgICAqIFBvcHVwWWVzTm9cblxuIyMjIyAzLjQuMVxuKiBCdXR0b24uR2V0VGV4dCAtIEJ1dHRvbiBjbGFzcyBtZXRob2QuICBSZXR1cm5zIHRoZSBjdXJyZW50IHRleHQgYmVpbmcgc2hvd24gb24gYSBidXR0b24uXG4qIE1lbnUgLSBUZWFyb2ZmIG9wdGlvbi4gRGV0ZXJtaW5lcyBpZiBtZW51cyBzaG91bGQgYWxsb3cgdGhlbSB0byBiZSB0b3JuIG9mZlxuKiBIZWxwIC0gU2hvcmN1dCBidXR0b24uIExpa2UgU3VibWl0LCBjYW5jZWwsIGV0Y1xuKiBSZWFkQnV0dG9uIC0gc2hvcnRjdXQgZm9yIFJlYWRGb3JtQnV0dG9uXG5cbiMjIyMgMy41LjBcbiogVG9vbCBUaXBzIGZvciBhbGwgZWxlbWVudHNcbiogQ2xpY2thYmxlIHRleHRcbiogVGV4dCBFbGVtZW50IHJlbGllZiBzZXR0aW5nXG4qIEtleXMgYXMgdGFyZ2V0cyBmb3IgYnV0dG9uc1xuKiBOZXcgbmFtZXMgZm9yIGJ1dHRvbnM6XG4gICAqIEJ1dHRvbiA9IFNpbXBsZUJ1dHRvblxuICAgKiBSQnV0dG9uID0gUmVhZEJ1dHRvbiA9IFJlYWRGb3JtQnV0dG9uXG4qIERvdWJsZSBjbGlja2FibGUgbGlzdCBlbnRyaWVzXG4qIEF1dG8gc2l6aW5nIHRhYmxlIHdpZHRocyB3b3JrcyBub3dcbiogRmVhdHVyZSBERUxFVEVEIC0gU2NhbGluZy4gUmVtb3ZlZCBmcm9tIGFsbCBlbGVtZW50c1xuXG4jIyMjIDMuNS4xXG4qIEJ1ZyBmaXggZm9yIGJyb2tlbiBQeVNpbXBsZUdVSSBpZiBQeXRob24gdmVyc2lvbiA8IDMuNiAoc29ycnkhKVxuKiBMT1RTIG9mIFJlYWRtZSBjaGFuZ2VzXG5cbiMjIyMgMy41LjJcbiogTWFkZSBgRmluYWxpemUoKWAgaW4gYSB3YXkgdGhhdCBpdCBjYW4gYmUgY2hhaW5lZFxuKiBGaXhlZCBidWcgaW4gcmV0dXJuIHZhbHVlcyBmcm9tIEZyYW1lIEVsZW1lbnQgY29udGVudHNcblxuIyMjIyAzLjYuMFxuKiBSZW5hbWVkIEZsZXhGb3JtIHRvIFdpbmRvd1xuKiBSZW1vdmVkIExvb2tBbmRGZWVsIGNhcGFiaWxpdHkgZnJvbSBNYWMgcGxhdGZvcm0uXG5cbiMjIyMgMy44LjBcbiogVGFiIGFuZCBUYWJHcm91cCBFbGVtZW50cyAtIGF3ZXNvbWUgbmV3IGNhcGFiaWxpdGllc1xuXG4jIyMjIDEuMC4wIFB5dGhvbiAyLjdcbkl0J3Mgb2ZmaWNpYWwuICBUaGVyZSBpcyBhIDIuNyB2ZXJzaW9uIG9mIFB5U2ltcGxlR1VJIVxuXG4jIyMjIDMuOC4yXG4qIEV4cG9zZWQgYFRLT3V0YCBpbiBPdXRwdXQgRWxlbWVudFxuKiBgRHJhd1RleHRgIGFkZGVkIHRvIEdyYXBoIEVsZW1lbnRzXG4qIFJlbW92ZWQgYFdpbmRvdy5VcGRhdGVFbGVtZW50c2BcbiogYFdpbmRvdy5ncmFiX2FueXdlcmVgIGRlZmF1bHRzIHRvIEZhbHNlXG5cbiMjIyMgMy44LjNcbiogTGlzdGJveCwgU2xpZGVyLCBDb21ib2JveCwgQ2hlY2tib3gsICBTcGluLCBUYWIgR3JvdXAgLSBpZiBjaGFuZ2Vfc3VibWl0cyBpcyBzZXQsIHdpbGwgcmV0dXJuIHRoZSBFbGVtZW50J3Mga2V5IHJhdGhlciB0aGFuICcnXG4qIEFkZGVkIGNoYW5nZV9zdWJtaXRzIGNhcGFiaWxpdHkgdG8gQ2hlY2tib3gsIFRhYiBHcm91cFxuKiBDb21ib2JveCAtIENhbiBzZXQgdmFsdWUgdG8gYW4gSW5kZXggaW50byB0aGUgVmFsdWVzIHRhYmxlIHJhdGhlciB0aGFuIHRoZSBWYWx1ZSBpdHNlbGZcbiogV2FybmluZ3MgYWRkZWQgdG8gRHJhd2luZyByb3V0aW5lcyBmb3IgR3JhcGggZWxlbWVudCAocmF0aGVyIHRoYW4gY3Jhc2hpbmcpXG4qIFdpbmRvdyAtIGNhbiBcImZvcmNlIHRvcCBsZXZlbFwiIHdpbmRvdyB0byBiZSB1c2VkIHJhdGhlciB0aGFuIGEgbm9ybWFsIHdpbmRvdy4gIE1lYW5zIHRoYXQgaW5zdGVhZCBvZiBjYWxsaW5nIFRrIHRvIGdldCBhIHdpbmRvdywgd2lsbCBjYWxsIFRvcExldmVsIHRvIGdldCB0aGUgd2luZG93XG4qIFdpbmRvdyBEaXNhYmxlIC8gRW5hYmxlIC0gRGlzYWJsZXMgZXZlbnRzIChidXR0b24gY2xpY2tzLCBldGMpIGZvciBhIFdpbmRvdy4gIFVzZSB0aGlzIHdoZW4geW91IG9wZW4gYSBzZWNvbmQgd2luZG93IGFuZCB3YW50IHRvIGRpc2FibGUgdGhlIGZpcnN0IHdpbmRvdyBmcm9tIGRvaW5nIGFueXRoaW5nLiBUaGlzIHdpbGwgc2ltdWxhdGUgYSAnZGlhbG9nIGJveCdcbiogVGFiIEdyb3VwIHJldHVybnMgYSB2YWx1ZSB3aXRoIFdpbmRvdyBpcyBSZWFkLiAgUmV0dXJuIHZhbHVlIGlzIHRoZSBzdHJpbmcgb2YgdGhlIHNlbGVjdGVkIHRhYlxuKiBUdXJuZWQgb2ZmIGdyYWJfYW55d2hlcmUgZm9yIFBvcHVwc1xuKiBOZXcgcGFyYW1ldGVyLCBkZWZhdWx0X2V4dGVuc2lvbiwgZm9yIFBvcHVwR2V0RmlsZVxuKiBLZXlib2FyZCBzaG9ydGN1dHMgZm9yIG1lbnUgaXRlbXMuIENhbiBob2xkIEFMVCBrZXkgdG8gc2VsZWN0IGl0ZW1zIGluIG1lblxuKiBSZW1vdmVkIG9sZC1zdHlsZSBUYWJzIC0gUmlza3kgY2hhbmdlIGJlY2F1c2UgaXQgaGl0IGZ1bmRhbWVudGFsIHdpbmRvdyBwYWNraW5nIGFuZCBjcmVhdGlvbi4gV2lsbCBhbHNvIGJyZWFrIGFueSBvbGQgY29kZSB1c2luZyB0aGlzIHN0eWxlIHRhYiAoc29ycnkgZm9sa3MgdGhpcyBpcyBob3cgcHJvZ3Jlc3MgaGFwcGVucylcblxuIyMjIyAzLjguNlxuXG4qIEZpeCBmb3IgTWVudXMuXG4qIEZpeGVkIHRhYmxlIGNvbG9ycy4gTm93IHRoZXkgd29ya1xuKiBGaXhlZCByZXR1cm5pbmcga2V5cyBmb3IgdGFic1xuKiBXaW5kb3cgSGlkZSAvIFVuSGlkZSBtZXRob2RzXG4qIENoYW5nZWQgYWxsIFBvcHVwcyB0byByZW1vdmUgY29udGV4dCBtYW5hZ2VyXG4qIEVycm9yIGNoZWNraW5nIGZvciBHcmFwaGluZyBvYmplY3RzIGFuZCBmb3IgRWxlbWVudCBVcGRhdGVzXG5cbiMjIyAzLjkuMCAmIDEuMS4wXG4qIFRoZSBGSVJTVCBVTklGSUVEIHZlcnNpb24gb2YgdGhlIGNvZGUhXG4qIFB5dGhvbiAyLjcgZ290IGEgVE9OIG9mIGZlYXR1cmVzIC4gTG9vayBiYWNrIHRvIDEuMCByZWxlYXNlIGZvciB0aGUgbGlzdFxuKiBUYWIgbG9jYXRpb25zIC0gQ2FuIHBsYWNlIFRhYnMgb24gdG9wLCBib3R0b20sIGxlZnQsIHJpZ2h0IG5vdyBpbnN0ZWFkIG9mIG9ubHkgdGhlIHRvcFxuXG4jIyMgMy45LjEgJiAxLjEuMlxuKiBUYWIgZmVhdHVyZXNcbiAgICogVGhlbWVzXG4gICAqIEVuYWJsZSAvIERpc2FibGVcbiAgICogVGFiIHRleHQgY29sb3JzXG4gICAqIFNlbGVjdGVkIHRhYiBjb2xvclxuKiBOZXcgR2V0TGlzdFZhbHVlcyBtZXRob2QgZm9yIExpc3Rib3hcbiogQ2FuIG5vdyBoYXZlIG11bHRpcGxlIHByb2dyZXNzIGJhcnMgaW4gMSB3aW5kb3dcbiogRml4IGZvciBjbG9zaW5nIGRlYnVnLW91dHB1dCB3aW5kb3cgd2l0aCBvdGhlciB3aW5kb3dzIG9wZW5cbiogVG9wYW5nYSBMb29rIGFuZCBGZWVsIHNldHRpbmdcbiogVXNlciBjYW4gY3JlYXRlIG5ldyBsb29rIGFuZCBmZWVsIHNldHRpbmdzIC8gY2FuIGFjY2VzcyB0aGUgbG9vayBhbmQgZmVlbCB0YWJsZVxuKiBOZXcgUG9wdXBRdWljayBjYWxsLiBTaG93cyBhIG5vbi1ibG9ja2luZyBwb3B1cCB3aW5kb3cgd2l0aCBhdXRvLWNsb3NlXG4qIFRyZWUgRWxlbWVudCBwYXJ0aWFsbHkgZG9uZSAoZG9uJ3QgdXNlIGRlc3BpdGUgaXQgc2hvd2luZyB1cClcblxuIyMjIDMuOS4zICYgMS4xLjNcblxuKiBEaXNhYmxlZCBzZXR0aW5nIHdoZW4gY3JlYXRpbmcgZWxlbWVudCBmb3I6XG4gICAqIElucHV0XG4gICogQ29tYm9cbiAgKiBPcHRpb24gTWVudVxuICAqIExpc3Rib3hcbiAgKiBSYWRpb1xuICAqIENoZWNrYm94XG4gICogU3Bpbm5lclxuICAqIE11bHRpbGluZVxuICAqIEJ1dHRvbnNcbiAgKiBTbGlkZXJcbiogRG9jIHN0cmluZ3Mgb24gYWxsIEVsZW1lbnRzIHVwZGF0ZWRcbiogQnV0dG9ucyBjYW4gdGFrZSBpbWFnZSBkYXRhIGFzIHdlbGwgYXMgaW1hZ2UgZmlsZXNcbiogQnV0dG9uIFVwZGF0ZSBjYW4gY2hhbmdlIGltYWdlc1xuKiBJbWFnZXMgY2FuIGhhdmUgYmFja2dyb3VuZCBjb2xvclxuKiBUYWJsZSBlbGVtZW50IG5ldyBudW1fcm93cyBwYXJhbWV0ZXJcbiogVGFibGUgRWxlbWVudCBuZXcgYWx0ZXJuYXRpbmdfcm93X2NvbG9yIHBhcmFtZXRlclxuKiBUcmVlIEVsZW1lbnRcbiogV2luZG93IERpc2FwcGVhciAvIFJlYXBwZWFyIG1ldGhvZHNcbiogUG9wdXAgYnV0dG9ucyByZXNpemVkIHRvIHNhbWUgc2l6ZVxuKiBFeHBvc2VkIGxvb2sgYW5kIGZlZWwgdGFibGVcblxuIyMjICAzLjkuNCAmIDEuMS40XG5cbiogUGFyYW1ldGVyIG9yZGVyIGNoYW5nZSBmb3IgQnV0dG9uLlVwZGF0ZSBzbyB0aGF0IG5ldyBidXR0b24gZXh0IGlzIGF0IGZyb250XG4qIE5ldyBHcmFwaC5EcmF3QXJjIG1ldGhvZFxuKiBTbGlkZXIgdGljayBpbnRlcnZhbCBwYXJhbWV0ZXIgZm9yIGxhYmVsaW5nIHNsaWRlcnNcbiogTWVudSB0ZWFyb2ZmIG5vdyBkaXNhYmxlZCBieSBkZWZhdWx0XG4qIFRyZWUgRGF0YSBwcmludGluZyBzaW1wbGlmaWVkIGFuZCBtYWRlIHByZXR0aWVyXG4qIFdpbmRvdyByZXNpemFibGUgcGFyYW1ldGVyLiAgRGVmYXVsdHMgdG8gbm90IHJlc2l6YWJsZVxuKiBCdXR0b24gaW1hZ2VzIGNhbiBoYXZlIHRleHQgb3ZlciB0aGVtIG5vd1xuKiBCVUcgZml4IGluIGxpc3Rib3ggZG91YmxlLWNsaWNrLiAgRmlyc3QgYnVnIGZpeCBpbiBtb250aHNcbiogTmV3IExvb2sgQW5kIEZlZWwgY2FwYWJpbGl0eS4gIExpc3QgcHJlZGVmaW5lZCBzZXR0aW5ncyB1c2luZyBMaXN0T2ZMb29rQW5kRmVlbFZhbHVlc1xuXG4jIyMgMy4xMC4xICYgMS4yLjFcbiogQ29tYm9ib3ggbmV3IHJlYWRvbmx5IHBhcmFtZXRlciBpbiBpbml0IGFuZCBVcGRhdGVcbiogQmV0dGVyIGRlZmF1bHQgc2l6ZXMgZm9yIFNsaWRlclxuKiBSZWFkIG9mIFRhYmxlcyBub3cgcmV0dXJucyB3aGljaCByb3dzIGFyZSBzZWxlY3RlZCAoYmlnIGRhbW5lZCBkZWFsIGZlYXR1cmUpXG4qIFBBUlRJQUwgc3VwcG9ydCBvZiBUYWJsZS5VcGRhdGUgd2l0aCBuZXcgdmFsdWVzICh1c2UgYXQgeW91ciBvd24gcGVyaWwpXG4qIEFscGhhIGNoYW5uZWwgc2V0dGluZyBmb3IgV2luZG93c1xuKiBUaW1lb3V0IHNldHRpbmcgZm9yIFdpbmRvdy5SZWFkIChiaWcgZGFtbmVkIGRlYWwgZmVhdHVyZSlcbiogSWNvbiBjYW4gYmUgYmFzZTY0IGltYWdlIG5vdyBpbiBTZXRJY29uIGNhbGxcbiogV2luZG93LkZpbmRFbGVtZW50V2l0aEZvY3VzIGNhbGxcbiogV2luZG93Lk1vdmUgYWxsb3dzIG1vdmluZyB3aW5kb3cgYW55d2hlcmUgb24gc2NyZWVuXG4qIFdpbmRvdy5NaW5pbWl6ZSB3aWxsIG1pbmltaXplIHRvIHRhc2tiYXJcbiogQnV0dG9uIGJhY2tncm91bmQgY29sb3IgY2FuIGJlIHNldCB0byBzeXN0ZW0gZGVmYXVsdCAoaS5lLiBub3QgY2hhbmdlZClcblxuIyMjIDMuMTAuMiAmIDEuMi4yXG5FbWVyZ2VuY3kgcGF0Y2ggcmVsZWFzZS4uLiBnb2luZyBvdXQgc2FtZSBkYXkgYXMgcHJldmlvdXMgcmVsZWFzZVxuKiBUaGUgdGltZW91dCB0aW1lciBmb3IgdGhlIG5ldyBSZWFkIHdpdGggdGltZXIgd2Fzbid0IGJlaW5nIHByb3Blcmx5IHNodXQgZG93blxuKiBUaGUgSW1hZ2UuVXBkYXRlIG1ldGhvZCBhcHBlYXJzIHRvIG5vdCBoYXZlIGJlZW4gd3JpdHRlbiBjb3JyZWN0bHkuICBJdCBkaWRuJ3QgaGFuZGxlIGJhc2U2NCBpbWFnZXMgbGlrZSB0aGUgb3RoZXIgZWxlbWVudHMgdGhhdCBkZWFsIHdpdGggaW1hZ2VzIChidXR0b25zKVxuXG4jIyMgMy4xMC4zICYgMS4yLjNcblxuKiBOZXcgZWxlbWVudCAtIFZlcnRpY2FsIFNlcGFyYXRvclxuKiBOZXcgcGFyYW1ldGVyIGZvciBJbnB1dFRleHQgLSBjaGFuZ2Vfc3VibWl0cy4gSWYgVHJ1ZSB3aWxsIGNhdXNlIFJlYWQgdG8gcmV0dXJuIHdoZW4gYSBidXR0b24gZmlsbHMgaW4gdGhlIElucHV0VGV4dCBlbGVtZW50XG4qIFJlYWQgd2l0aCB0aW1lb3V0ID0gMCBpcyBzYW1lIGFzIHJlYWQgbm9uIGJsb2NraW5nIGFuZCBpcyB0aGUgbmV3IHByZWZlcnJlZCBtZXRob2RcbiAgKiBXaWxsIHJldHVybiBldmVudCA9PSBOb25lIGlmIHdpbmRvdyBjbG9zZWRcbiogTmV3IENsb3NlIG1ldGhvZCB3aWxsIGNsb3NlIGFsbCB3aW5kb3cgdHlwZXNcbiogU2Nyb2xsYmFycyBmb3IgVGFibGVzIGF1dG9tYXRpY2FsbHkgYWRkZWQgKG5vIG5lZWQgZm9yIGEgQ29sdW1uIEVsZW1lbnQpXG4qIFRhYmxlIFVwZGF0ZSBtZXRob2QgY29tcGxldGVcbiogVHVybmVkIG9mZiBleHBhbmQgd2hlbiBwYWNraW5nIHJvdyBmcmFtZS4uLiB3YXMgYWNjaWRlbnRhbGx5IHR1cm5lZCBvbiAocHJpbWFyeSByZWFzb24gZm9yIHRoaXMgcmVsZWFzZSlcbiogVHJ5IGFkZGVkIHRvIEltYWdlIFVwZGF0ZSBzbyB3b24ndCBjcmFzaCBpZiBiYWQgaW1hZ2UgcGFzc2VkIGluXG5cbiMjIyAzLjExLjAgJiAxLjExLjBcbiogU3luY2luZyB1cCB0aGUgc2Vjb25kIGRpZ2l0IG9mIHRoZSByZWxlYXNlcyBzbyB0aGF0IHRoZXkgc3RheSBpbiBzeW5jIGJldHRlci4gIHRoZSAyLjcgcmVsZWFzZSBpcyBidWlsdCBsaXRlcmFsbHkgZnJvbSB0aGUgMy54IGNvZGUgc28gdGhleSByZWFsbHkgYXJlIHRoZSBzYW1lXG4qIFJld29ya2VkIFJlYWQgY2FsbC4uLiBzaWduaWZpY2FudGx5LlxuKiBSZWFsdGltZSBidXR0b25zIHdvcmsgd2l0aCB0aW1lb3V0cyBvciBibG9ja2luZyByZWFkXG4qIFJlbW92ZWQgZGVmYXVsdCB2YWx1ZSBwYXJtIG9uIEJ1dHRvbnMgYW5kIEJ1dHRvbiBVcGRhdGVzXG4qIE5ldyBUcmVlIEVsZW1lbnQgcGFybSBzaG93X2V4cGFuZGVkLiBDYXVzZXMgVHJlZSB0byBiZSBzaG93biBhcyBmdWxseSBleHBhbmRlZFxuKiBUcmVlIEVsZW1lbnQgbm93IHJldHVybnMgd2hpY2ggcm93cyBhcmUgc2VsZWN0ZWQgd2hlbiBSZWFkXG4qIE5ldyBXaW5kb3cgbWV0aG9kIEJyaW5nVG9Gcm9udFxuKiBTaG9ydGN1dCBidXR0b25zIG5vIGxvbmdlciBjbG9zZSB3aW5kb3dzIVxuKiBBZGRlZCBDbG9zZUJ1dHRvbiwgQ0J1dHRvbiB0aGF0IGNsb3NlcyB0aGUgd2luZG93c1xuXG4jIyMgMy4xMi4wICYgMS4xMi4wXG4qIENoYW5nZWQgQnV0dG9uIHRvIGJlIHRoZSBzYW1lIGFzIFJlYWRCdXR0b24gd2hpY2ggbWVhbnMgaXQgd2lsbCBubyBsb25nZXIgY2xvc2UgdGhlIHdpbmRvd1xuKiBBbGwgc2hvcnRjdXQgYnV0dG9ucyBubyBsb25nZXIgY2xvc2UgdGhlIHdpbmRvd1xuKiBVcGRhdGluZyBhIHRhYmxlIGNsZWFycyBzZWxlY3RlZCByb3dzIGluZm9ybWF0aW9uIGluIHJldHVybiB2YWx1ZXNcbiogUHJvZ3Jlc3MgbWV0ZXIgdXNlcyBuZXcgQ2xvc2VCdXR0b25cbiogUG9wdXBzIHVzZSBuZXcgQ2xvc2VCdXR0b25cblxuIyMjIDMuMTMuMCAmIDEuMTMuMFxuKiBJbXByb3ZlZCBtdWx0aXBsZSB3aW5kb3cgaGFuZGxpbmcgb2YgUG9wdXBzIHdoZW4gdGhlIFggaXMgdXNlZCB0byBjbG9zZVxuKiBDaGFuZ2Ugc3VibWl0cyBhZGRlZCBmb3I6XG4gICogTXVsdGlsaW5lXG4gICogSW5wdXQgVGV4dFxuICAqIFRhYmxlXG4gICogVHJlZVxuICogT3B0aW9uIHRvIGNsb3NlIGNhbGVuZGFyIGNob29zZXIgd2hlbiBkYXRlIHNlbGVjdGVkXG4gKiBVcGRhdGUgZm9yIFRyZWUgRWxlbWVudFxuICogU2Nyb2xsIGJhcnMgZm9yIFRyZWVzXG5cbiMjIyAzLjE0LjAgJiAxLjE0LjBcbiogTW9yZSB3aW5kb3dpbmcgY2hhbmdlcy4uLlxuICAgICogdXNpbmcgYSBoaWRkZW4gcm9vdCB3aW5kb3dpbmcgKFRrKCkpXG4gICAgKiBhbGwgY2hpbGRyZW4gYXJlIFRvcGxldmVsKCkgd2luZG93c1xuKiBSZWFkIG9ubHkgc2V0dGluZyBmb3I6XG4gICAgKiBJbnB1dCBUZXh0XG4gICAgKiBNdWx0aWxpbmVcbiogRm9udCBzZXR0aW5nIGZvciBJbnB1dENvbWJvLCBNdWx0aWxpbmVcbiogY2hhbmdlX3N1Ym1pdHMgc2V0dGluZyBmb3IgUmFkaW8gRWxlbWVudFxuKiBTZXRGb2N1cyBmb3IgbXVsdGlsaW5lLCBpbnB1dCBlbGVtZW50c1xuKiBEZWZhdWx0IG1vbiwgZGF5LCB5ZWFyIGZvciBjYWxlbmRhciBjaG9vc2VyIGJ1dHRvblxuKiBUcmVlIGVsZW1lbnQgdXBkYXRlLCBhZGRlZCBhYmlsaXR5IHRvIGNoYW5nZSBhIHNpbmdsZSBrZXlcbiogTWVzc2FnZSBwYXJtIHJlbW92ZWQgZnJvbSBSZWFkTm9uQmxvY2tpbmdcbiogRml4IGZvciBjbG9zaW5nIHdpbmRvd3MgdXNpbmcgWFxuKiBDdXJyZW50TG9jYXRpb24gbWV0aG9kIGZvciBXaW5kb3dzXG4qIERlYnVnIFdpbmRvdyBvcHRpb25zXG4gICAgKiBsb2NhdGlvblxuICAgICogZm9udFxuICAgICogbm9fYnV0dG9uXG4gICAgKiBub190aXRsZWJhclxuICAgICogZ3JhYl9hbnl3aGVyZVxuICAgICoga2VlcF9vbl90b3BcbiogTmV3IFByaW50IC8gRWFzeVByaW50IG9wdGlvbnNcbiAgICAqIGxvY2F0aW9uXG4gICAgKiBmb250XG4gICAgKiBub19idXR0b25cbiAgICAqIG5vX3RpdGxlYmFyXG4gICAgKiBncmFiX2FueXdoZXJlXG4gICAgKiBrZWVwX29uX3RvcFxuKiBOZXcgcG9wdXAsIFBvcHVwUXVpY2tNZXNzYWdlXG4qIFBvcHVwR2V0Rm9sZGVyLCBQb3B1cEdldEZpbGUgbmV3IGluaXRpYWxfZm9sZGVyIHBhcm1cblxuIyMjIDMuMTUuMCAmIDEuMTUuMFxuXG4qIEVycm9yIGNoZWNraW5nIGZvciBJbnB1dFRleHQuR2V0IG1ldGhvZFxuKiBUZXh0IGNvbG9yLCBiYWNrZ3JvdW5kIGNvbG9yIGFkZGVkIHRvIG11bHRpbGluZSBlbGVtZW50LlVwZGF0ZVxuKiBVcGRhdGUgbWV0aG9kIGZvciBPdXRwdXQgRWxlbWVudCAtIGdpdmVzIGFiaWxpdHkgdG8gY2xlYXIgdGhlIG91dHB1dFxuKiBHcmFwaCBFbGVtZW50IC0gUmVhZCByZXR1cm5zIHZhbHVlcyBpZiBuZXcgZmxhZ2VzIHNldFxuICAgICogQ2hhbmdlIHN1Ym1pdHMsIGRyYWcgc3VibWl0c1xuICAgICogICBSZXR1cm5zIHgseSBjb29yZGluYXRlc1xuKiBDb2x1bW4gZWxlbWVudCBuZXcgcGFybSB2ZXJ0aWNhbF9zY3JvbGxfb25seVxuKiBUYWJsZSBlbGVtZW50IG5ldyBwYXJtIC0gYmluZCByZXR1cm4ga2V5IC0gcmV0dXJucyBpZiByZXR1cm4gb3IgZG91YmxlIGNsaWNrXG4qIE5ldyBXaW5kb3cgcGFybXMgLSBzaXplLCBkaXNhYmxlX2Nsb3NlXG4qIFwiQmV0dGVyXCIgbXVsdGl3aW5kb3cgY2FwYWJpbGl0aWVzXG4qIFdpbmRvdy5TaXplIHByb3BlcnR5XG4qIFBvcHVwcyAtIG5ldyB0aXRsZSBwYXJtLCBjdXN0b21fdGV4dFxuICAgICogdGl0bGUgc2V0cyB0aGUgd2luZG93IHRpdGxlXG4gICAgKiBjdXN0b21fdGV4dCAtIHNpbmdsZSBzdHJpbmcgb3IgdHVwbGUgc3RyaW5nIHNldHMgdGV4dCBvbiBidXR0b24ocylcblxuIyMjIDMuMTYuMCAmIDEuMTYuMFxuKiBCdWcgZml4IGluIFBvcHVwU2Nyb2xsZWRcbiogTmV3IGBFbGVtZW50YCBzaG9ydGN1dCBmdW5jdGlvbiBmb3IgYEZpbmRFbGVtZW50YFxuKiBEdW1teSBTdHJldGNoIEVsZW1lbnQgbWFkZSBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgd2l0aCBRdFxuKiBUaW1lciBmdW5jdGlvbiBwcmludHMgaW4gbWlsbGlzZWNvbmRzIG5vdywgd2FzIHNlY29uZHNcblxuIyMjIDMuMTcuMCAmMS4xNy4wIDItRGVjLTIwMThcbjMuMTcuMCAyLURlYy0yMDE3XG4qIFRvb2x0aXAgb2Zmc2V0IG5vdyBwcm9ncmFtbWFibGUuICBTZXQgdmFyaWFibGUgREVGQVVMVF9UT09MVElQX09GRlNFVC4gIERlZmF1bHRzIHRvICgyMCwtMjApXG4qIFRvb2x0aXBzIGFyZSBhbHdheXMgb24gdG9wIG5vd1xuKiBEaXNhYmxlIG1lbnUgaXRlbXNcbiogTWVudSBpdGVtcyBjYW4gaGF2ZSBrZXlzXG4qIFN0YXR1c0JhciBFbGVtZW50IChwcmVwYXJpbmcgZm9yIGEgcmVhbCBzdGF0dXMgYmFyIGluIFF0KVxuKiBlbmFibGVfZXZlbnRzIHBhcmFtZXRlciBhZGRlZCB0byBBTEwgRWxlbWVudHMgY2FwYWJsZSBvZiBnZW5lcmF0aW5nIGV2ZW50c1xuKiBJbnB1dFRleHQuVXBkYXRlIHNlbGVjdCBwYXJhbWV0ZXIgd2lsbCBzZWxlY3QgdGhlIGlucHV0IHRleHRcbiogTGlzdGJveC5VcGRhdGUgLSBzZXRfdG9faW5kZXggcGFyYW1ldGVyIHdpbGwgc2VsZWN0IGEgc2luZ2xlIGl0ZW1zXG4qIE1lbnVzIGNhbiBiZSB1cGRhdGVkIVxuKiBNZW51cyBoYXZlIGFuIGVudHJ5IGluIHRoZSByZXR1cm4gdmFsdWVzXG4qIExheW91dEFuZFJlYWQgZGVwcmljYXRlZFxuKiBNdWx0aS13aW5kb3cgc3VwcG9ydCBjb250aW51ZXMgKFggZGV0ZWN0aW9uKVxuKiBQb3B1cFNjcm9sbGVkIG5vdyBoYXMgYSBsb2NhdGlvbiBwYXJhbWV0ZXJcbiogcm93X2hlaWdodCBwYXJhbWV0ZXIgdG8gVGFibGUgRWxlbWVudFxuKiBTdHJldGNoIEVsZW1lbnQgKERVTU1ZKSBzbyB0aGF0IGNhbiBiZSBzb3VyY2UgY29kZSBjb21wYXRpYmxlIHdpdGggUXRcbiogQnV0dG9uTWVudSBFbGVtZW50IChEVU1NWSkgc28gY2FuIGJlIHNvdXJjZSBjb2RlIGNvbXBhdCB3aXRoIFF0LiAgV2lsbCBpbXBsZW1lbnQgZXZlbnR1YWxseVxuXG4jIyAzLjE4LjAgIDExLURlYy0yMDE4XG5cbiBOT1RFIC0gKipNZW51cyBhcmUgYnJva2VuKiogb24gdmVyc2lvbiAyLjcuICBEb24ndCBrbm93IGhvdyBsb25nIHRoZXkndmUgYmVlbiB0aGlzIHdheS4gIFBsZWFzZSBnZXQgb2ZmIGxlZ2FjeSBQeXRob24gaWYgdGhhdCdzIHdoYXQgeW91J3JlIHJ1bm5pbmcuXG5cbiogRGVmYXVsdCBwcm9ncmVzcyBiYXIgbGVuZ3RoIGNoYW5nZWQgdG8gc2hvcnRlclxuKiBNYXN0ZXIgd2luZG93IGFuZCB0cmFja2luZyBvZiBudW0gb3BlbiB3aW5kb3dzIG1vdmVkIGZyb20gZ2xvYmFsIHRvIFdpbmRvdyBjbGFzcyB2YXJpYWJsZVxuKiBFbGVtZW50IHZpc2liaWxpdHkgc2V0dGluZyAod2hlbiBjcmVhdGVkIGFuZCB3aGVuIFVwZGF0aW5nIGVsZW1lbnQpXG4qIElucHV0IHRleHQgdmlzaWJsaXR5XG4qIENvbWJvIHZpc2libGl0eVxuKiBDb21ibyByZXBsYWNlcyBJbnB1dENvbWJvIGFzIHRoZSBwcmltYXJ5IGNsYXNzIG5hbWVcbiogT3B0aW9uIG1lbnUgdmlzaWJpbGl0eVxuKiBMaXN0Ym94IHZpc2libGl0eVxuKiBMaXN0Ym94IG5ldyBTZXRGb2N1cyBtZXRob2RcbiogUmFkaW8gdmlzaWJpbGl0eVxuKiBDaGVja2JveCB2aXNpYmlsaXR5XG4qIFNwaW4gdmlzaWJsaXR5XG4qIFNwaW4gbmV3IEdldCBtZXRob2QgcmV0dXJucyBjdXJyZW50IHZhbHVlXG4qIE11bHRpbGluZSB2aXNpYmxpdHlcbiogVGV4dCB2aXNpYmlsaXR5XG4qIFN0YXR1c0JhciB2aXNpYmxpdHlcbiogT3V0cHV0IHZpc2liaWxpdHlcbiogQnV0dG9uIHZpc2liaWxpdHlcbiogQnV0dG9uIFNldEZvY3VzXG4qIFByb2dyZXNzQmFyIC0gTmV3IFVwZGF0ZSBtZXRob2QgKHVzZWQgb25seSBmb3IgdmlzaWJpbGl0eSlcbiogSW1hZ2UgLSBjbGlja2FibGUgaW1hZ2VzISAgZW5hYmxlX2V2ZW50cyBwYXJhbWV0ZXJcbiogSW1hZ2UgdmlzaWJpbGl0eVxuKiBDYW52YXMgdmlzaWJpbGl0eVxuKiBHcmFwaCB2aXNpYmlsaXR5XG4qIEdyYXBoIC0gbmV3IERyYXdJbWFnZSBjYXBhYmlsaXR5IChmaW5hbGx5KVxuKiBGcmFtZSB2aXNpYmlsaXR5XG4qIFRhYiB2aXNpYmlsaXR5IChtYXkgbm90IGJlIGZ1bGx5IGZ1bmN0aW9uYWwpXG4qIFRhYkdyb3VwIHZpc2liaWxpdHlcbiogU2xpZGVyIHZpc2liaWxpdHlcbiogU2xpZGVyIC0gbmV3IGRpc2FibGVfbnVtYmVyX2Rpc3BsYXkgcGFyYW1ldGVyXG4qIENvbHVtbiB2aXNpYmlsdHlcbiogTWVudSB2aXNpYmlsaXR5IC0gTm90IGZ1bmN0aW9uYWxcbiogVGFibGUgdmlzaWJpbGl0eVxuKiBUYWJsZSAtIG5ldyBudW1fcm93cyBwYXJtIGZvciBVcGRhdGUgLSBjaGFuZ2VzIG51bWJlciBvZiB2aXNpYmxlIHJvd3NcbiogVHJlZSB2aXNpYmxpdHlcbiogV2luZG93IC0gTmV3IGVsZW1lbnRfcGFkZGluZyBwYXJhbWV0ZXIgd2lsbCBnZXQgcGFkZGluZyBmb3IgZW50aXJlIHdpbmRvd1xuKiBPbmVMaW5lUHJvZ3Jlc3NNZXRlciAtIENvbXBsZXRlbHkgUkVQTEFDRUQgdGhlIGltcGxlbWVudGF0aW9uXG4qIE9uZUxpbmVQcm9ncmVzc01ldGVyIC0gY2FuIGdldCByZWFzb24gZm9yIHRoZSBjYW5jZWxsYXRpb24gKGNhbmNlbCBidXR0b24gdmVyc3VzIFgpXG4qIEVhc3lQcm9ncmVzc01ldGVyIC0gY29tcGxldGVseSByZW1vdmVkLiBVc2UgT25lTGluZVByb2dyZXNzTWV0ZXIgaW5zdGVhZFxuKiBEZWJ1ZyB3aW5kb3csIEVhc3lQcmludCwgUHJpbnQgLSBkZWJ1ZyB3aW5kb3cgd2lsbCByZS1vcGVuIGlmIHByaW50ZWQgdG8gYWZ0ZXIgYmVpbmcgY2xvc2VkXG4qIFNldE9wdGlvbnMgLSBjYW4gY2hhbmdlIHRoZSBlcnJvciBidXR0b24gY29sb3JcbiogTXVjaCBiaWdnZXIgd2luZG93IGNyZWF0ZWQgd2hlbiBydW5uaW5nIFB5U2ltcGxlR1VJLnB5IGJ5IGl0c2VsZi4gIE1lYW50IHRvIGhlbHAgd2l0aCByZWdyZXNzaW9uIHRlc3RpbmdcblxuIyMgMy4xOS4yICAxMy1EZWMtMjAxOFxuXG4qIFdhcm5pbmcgZm9yIE1hYydzIHdoZW4gdHJ5aW5nIHRvIGNoYW5nZSBidXR0b24gY29sb3JcbiogTmV3IHBhcm1zIGZvciBCdXR0b24uVXBkYXRlIC0gaW1hZ2Vfc2l6ZSBhbmQgaW1hZ2Vfc3Vic2FtcGxlXG4qIEJ1dHRvbnMgLSByZW1vdmUgaGlnaGxpZ2h0IHdoZW4gYm9yZGVyIGRlcHRoID09IDBcbiogT25lTGluZVByb2dyZXNzTWV0ZXIgLSBiZXR0ZXIgbGF5b3V0IGltcGxlbWVudGF0aW9uXG5cbiMjIDMuMjAuMCAmIDEuMjAuMCAxOC1EZWMtMjAxOFxuXG4qIE5ldyBQYW5lIEVsZW1lbnRcbiogR3JhcGguRGVsZXRlRmlndXJlIG1ldGhvZFxuKiBkaXNhYmxlX21pbmltaXplIC0gTmV3IHBhcmFtZXRlciBmb3IgV2luZG93XG4qIEZpeCBmb3IgMi43IG1lbnVzXG4qIERlYnVnIFdpbmRvdyBubyBsb25nZXIgcmUtcm91dGVzIHN0ZG91dCBieSBkZWZhdWx0XG4qIENhbiByZS1yb3V0ZSBieSBzcGVjaWZ5aW5nIGluIFByaW50IC8gRWFzeVByaW50IGNhbGxcbiogTmV3IG5vbi1ibG9ja2luZyBmb3IgUG9wdXBTY3JvbGxlZFxuKiBDYW4gc2V0IHRpdGxlIGZvciBQb3B1cFNjcm9sbGVkIHdpbmRvd1xuXG4jIyAzLjIxLjAgJiAxLjIxLjAgMjgtRGVjLTIwMThcblxuKiBCdXR0b25NZW51IEVsZW1lbnRcbiogRW1iZWRkZWQgYmFzZTY0IGRlZmF1bHQgaWNvblxuKiBJbnB1dCBUZXh0IFJpZ2h0IGNsaWNrIG1lbnVcbiogRGlzYWJsZWQgSW5wdXQgVGV4dCBhcmUgbm93ICdyZWFkb25seScgaW5zdGVhZCBvZiBkaXNhYmxlZFxuKiBMaXN0Ym94IHJpZ2h0IGNsaWNrIG1lbnVcbiogTXVsdGlsaW5lIHJpZ2h0IGNsaWNrIG1lbnVcbiogVGV4dCByaWdodCBjbGljayBtZW51XG4qIE91dHB1dCByaWdodCBjbGljayBtZW51XG4qIEltYWdlIHJpZ2h0IGNsaWNrIG1lbnVcbiogQ2FudmFzIHJpZ2h0IGNsaWNrIG1lbnVcbiogR3JhcGggcmlnaHQgY2xpY2sgbWVudVxuKiBGcmFtZSByaWdodCBjbGljayBtZW51XG4qIFRhYiwgdGFiZ3JvdXAgcmlnaHQgY2xpY2sgbWVudSAodW5zdXJlIGlmIHdvcmtzIGNvcnJlY3RseSlcbiogQ29sdW1uIHJpZ2h0IGNsaWNrIG1lbnVcbiogVGFibGUgcmlnaHQgY2xpY2sgbWVudVxuKiBUcmVlIHJpZ2h0IGNsaWNrIG1lbnVcbiogV2luZG93IGxldmVsIHJpZ2h0IGNsaWNrIG1lbnVcbiogV2luZG93IGljb24gY2FuIGJlIGZpbGVuYW1lIG9yIGJ5dGVzIChCYXNlNjQgc3RyaW5nKVxuKiBXaW5kb3cuTWF4aW1pemUgbWV0aG9kXG4qIEF0dGVtcHRlZCB0byB1c2UgU3R5bGVzIGJldHRlciB3aXRoIENvbWJvYm94XG4qIEZpeGVkIGJ1ZyBibG9ja2luZyBzZXR0aW5nIGJhciBjb2xvcnMgaW4gT25lTGluZVByb2dyZXNzTWV0ZXJcblxuIyAzLjIyLjAgUHlTaW1wbGVHVUkgLyAxLjIyLjAgUHlTaW1wbGVHVUkyN1xuXG4qIEFkZGVkIHR5cGUgaGludHMgdG8gc29tZSBwb3J0aW9ucyBvZiB0aGUgY29kZVxuKiBPdXRwdXQgZWxlbWVudCBjYW4gYmUgbWFkZSBpbnZpc2libGVcbiogSW1hZ2Ugc2l6aW5nIGFuZCBzdWJzYW1wbGUgZm9yIEJ1dHRvbiBpbWFnZXNcbiogSW52aXNpYmlsaXR5IGZvciBCdXR0b25NZW51c3VwXG4qIEF0dGVtcHQgYXQgc3BlY2lmeWluZyBzaXplIG9mIENvbHVtbiBlbGVtZW50cyAobGltaXRlZCBzdWNjZXNzKVxuKiBUYWJsZSBFbGVtZW50XG4gICogTmV3IHJvd19jb2xvcnMgcGFyYW1ldGVyXG4gICogTmV3IHZlcnRpY2FsX3Njcm9sbF9vbmx5IHBhcmFtZXRlciAtIE5PVEUgLSB3aWxsIGhhdmUgdG8gZGlzYWJsZSB0byBnZXQgaG9yaXpvbnRhbCBzY3JvbGxiYXJzXG4qIFRyZWUgRWxlbWVudFxuICAqIE5ldyByb3dfaGVpZ2h0IHBhcmFtZXRlclxuICAqIE5ldyBmZWF0dXJlIC0gSWNvbnMgZm9yIHRyZWUgZW50cmllcyB1c2luZyBmaWxlbmFtZSBvciBCYXNlNjQgaW1hZ2VzXG4qIEZpeCBmb3IgYnVnIHNlbmRpbmcgYmFjayBjb250aW51b3VzIG1vdXNlIGV2ZW50c1xuKiBOZXcgcGFyYW1ldGVyIHNpbGVuY2Vfb25fZXJyb3IgZm9yIEZpbmRFbGVtZW50IC8gRWxlbWVudCBjYWxsc1xuKiBTbGlkZXIgcmV0dXJucyBmbG9hdCBub3dcbiogRml4IGZvciBNZW51cyB3aGVuIHVzaW5nIFB5dGhvbiAyLjdcbiogQ29tYm9ib3ggU3R5bGluZyAoYWdhaW4pXG5cbiMgMy4yLjAgUHlTaW1wbGVHVUkgLyAgMS4yMy4wIFB5U2ltcGxlR1VJMjcgMTYtSmFuLTIwMTlcblxuKiBBbmltYXRlZCBHSUZzIVxuKiBDYWxlbmRhciBDaG9vc2VyIHN0YXlzIG9uIHRvcCBvZiBvdGhlciB3aW5kb3dzXG4qIEZpeGVkIGJ1ZyBvZiBubyBjb2x1bW4gaGVhZGluZ3MgZm9yIFRhYmxlc1xuKiBUYWJsZXMgbm93IHVzZSB0aGUgZm9udCBwYXJhbWV0ZXJcblxuIyAzLjI0LjAgMS4yNC4wIDE2LUphbi0yMDE5XG5cbiogUG9wdXBBbmltYXRlZCAtIEEgcG9wdXAgY2FsbCBmb3Igc2hvd2luZyBcImxvYWRpbmdcIiB0eXBlIG9mIHdpbmRvd3NcblxuIyAzLjI1ICYgMS4yNSAyMC1GZWItMjAxOVxuXG4qIENvbW1lbnRzIDotKVxuKiBDb252ZXJ0IFRleHQgdG8gc3RyaW5nIHJpZ2h0IGF3YXlcbiogQ2F1Z2h0IGV4Y2VwdGlvbnMgd2hlbiBtYWluIHByb2dyYW0gc2h1dCBkb3duIHdpdGggWFxuKiBDYXVnaHQgZXhjZXB0aW9ucyBpbiBhbGwgb2YgdGhlIGdyYXBoaWNzIHByaW1pdGl2ZXNcbiogQWRkZWQgcGFyYW1ldGVyIGV4cG9ydHNlbGVjdGlvbj1GYWxzZSB0byBMaXN0Ym94IHNvIGNhbiB1c2UgbXVsdGlwbGUgbGlzdGJveGVzXG4qIE9uZUxpbmVQcm9ncmVzc01ldGVyIC0gQ2FuIG5vdyBjaGFuZ2UgdGhlIHRleHQgb24gZXZlcnkgY2FsbCBpZiBkZXNpcmVkXG5cbiMjIDMuMjcuMCBQeVNpbXBsZUdVSSAgMzEtTWFyLTIwMTlcblxuTWl4dXAuLi4uIDMuMjYgY2hhbmdlcyBkb24ndCBhcHBlYXIgdG8gaGF2ZSBiZWVuIGNvcnJlY3RseSByZWxlYXNlZCBzbyByZWxlYXNpbmcgaW4gMy4yNyBub3dcblxuKiBkb19ub3RfY2xlYXIgbm93IGRlZmF1bHRzIHRvIFRSVUUhISFcbiAgKiBJbnB1dCBFbGVtZW50XG4gICogTXVsdGlsaW5lIEVsZW1lbnRcbiogRW5hYmxlIFJhZGlvIEJ1dHRvbnMgdG8gYmUgaW4gZGlmZmVyZW50IGNvbnRhaW5lcnNcbiogQWJpbGl0eSB0byBtb2RpZnkgQXV0b3Njcm9sbCBzZXR0aW5nIGluIE11bHRpbGluZS5VcGRhdGUgY2FsbFxuKiBQb3B1cEdldEZvbGRlciwgUG9wdXBHZXRGaWxlLCBQb3B1cEdldFRleHQgLSB0aXRsZSBkZWZhdWx0cyB0byBtZXNzYWdlIGlmIG5vbmUgcHJvdmlkZWRcbiogUG9wdXBBbmltYXRlZCAtIGltYWdlX3NvdXJjZSBjYW4gYmUgYSBmaWxlbmFtZSBvciBieXRlcyAoYmFzZTY0KVxuKiBPcHRpb24gTWVudSBjYW4gbm93IGhhdmUgdmFsdWVzIHVwZGF0ZWRcblxuIyMgMy4yOC4wIDExLUFwci0yMDE5IFB5U2ltcGxlR1VJXG5cbiogTkVXIFdpbmRvdyBQYXJhbWV0ZXIgLSBsYXlvdXQgLSBzZWNvbmQgcGFyYW1ldGVyLiBDYW4gcGFzcyBpbiBsYXlvdXQgZGlyZWN0bHkgbm93IVxuKiBOZXcgc2hvcnRjdXRzXG4gICAgKiBJID0gSW5wdXRUZXh0XG4gICAgKiBCID0gQnRuID0gQnV0dCA9IEJ1dHRvblxuKiBDb252ZXJ0IGJ1dHRvbiB0ZXh0IHRvIHN0cmluZyB3aGVuIGNyZWF0aW5nIGJ1dHRvbnNcbiogQnV0dG9ucyBhcmUgcmV0dXJuZWQgbm93IGFzIHdlbGwgYXMgaW5wdXQgZmllbGRzIHdoZW4gc2VhcmNoaW5nIGZvciBlbGVtZW50IHdpdGggZm9jdXNcblxuIyMgMy4yOSAyMi1BcHItMjAxOVxuXG4qIE5ldyBtZXRob2QgZm9yIGBHcmFwaGAgLSBgUmVsb2NhdGVGaWd1cmVgXG4qIE91dHB1dCBFbGVtZW50IG5vIGxvbmdlciBhY2NlcHRzIGZvY3VzXG5cbiMjIDMuMzIuMCBQeVNpbXBsZUdVSSAyNC1NYXktMjAxOVxuXG4qIFJld29yayBvZiBBTExMIFRvb2x0aXBzLiBXYXMgYWx3YXlzIGRpc3BsYXlpbmcgYXQgdXR0dXBlciBsZWZ0IHBhcnQgb2YgZWxlbWVudC4gTm90IGRpc3BsYXlzIGNsb3NlciB0byB3aGVyZSBtb3VzZSBlbnRlcmVkIG9yIGVkaXRlZFxuKiBOZXcgRWxlbWVudC5XaWRnZXQgYmFzZSBjbGFzcyB2YXJpYWJsZS4gQnJpbmdzIHRraW50ZXIgaW50byB0aGUgbmV3ZXIgYXJjaGl0ZWN0dXJlIG9mIHVzZXIgYWNjZXNzaWJpbGl0eSB0byB1bmRlcmx5aW5nIEdVSSBGcmFtZXdvcmtzJyB3aWRnZXRzXG4qIE5ldyBTZXRUb29sdGlwIEVsZW1lbnQgbWV0aG9kLiBNZWFucyBhbGwgRWxlbWVudHMgZ2FpbiB0aGlzIG1ldGhvZC4gQ2FuIHNldCB0aGUgdG9vbHRpcCBvbiB0aGUgZmx5IG5vdyBmb3IgYWxsIGVsZW1lbnRzXG4qIEluY2x1ZGUgc2Nyb2xsIGJhciB3aGVuIG1ha2luZyB2aXNpYmxlIC8gaW52aXNpYmxlIExpc3Rib3ggRWxlbWVudHNcbiogTmV3IFJhZGlvIEVsZW1lbnQgbWV0aG9kIC0gYFJhZGlvLlJlc2V0R3JvdXAoKWAgc2V0cyBhbGwgZWxlbWVudHMgaW4gdGhlIFJhZGlvIEdyb3VwIHRvIEZhbHNlKiBBZGRlZCBib3JkZXJ3aWR0aCB0byBNdWx0aWxpbmUgRWxlbWVudFxuKiBgQnV0dG9uLkNsaWNrKClgIC0gbmV3IG1ldGhvZCAtIEdlbmVyYXRlcyBhIGJ1dHRvbiBjbGljayBldmVuIGFzIGlmIGEgdXNlciBjbGlja2VkIGEgYnV0dG9uIChhdCB0aGUgdGtpbnRlciBsZXZlbClcbiogTWFkZSBhIEdyYXBoLkltYWdlcyBkaWN0aW9uYXJ5IHRvIGtlZXAgdHJhY2sgb2YgaW1hZ2VzIGJlaW5nIHVzZWQgaW4gYSBncmFwaC4gIFdoZW4gZ3JhcGggaXMgZGVsZXRlZCwgYWxsIG9mIHRoZSBhY2NvY2lhdGVkIGltYWdlcyBzaG91bGQgYmUgZGVsZXRlZCB0b28uJ1xuKiBBZGRlZCBgR3JhcGguU2V0Rm9jdXMoKWAgdG8gZ2l2ZSBhIEdyYXBoIEVsZW1lbnQgdGhlIGZvY3VzIGp1c3QgYXMgeW91IGNhbiBpbnB1dCBlbGVtZW50c1xuKiBUYWJsZSBuZXcgcGFyYW1ldGVyIC0gYGhpZGVfdmVydGljYWxfc2Nyb2xsYCBpZiBUcnVlIHdpbGwgaGlkZSB0aGUgdGFibGUncyB2ZXJ0aWNhbCBiYXJzXG4qIFdpbmRvdyAtIG5ldyBwYXJhbWV0ZXIgLSBgdHJhbnNwYXJlbnRfY29sb3JgLiBDYXVzZXMgYSBzaW5nbGUgY29sb3IgdG8gYmVjb21lIGNvbXBsZXRlbHkgdHJhbnNwYXJlbnQgc3VjaCB0aGF0IHlvdSBzZWUgdGhyb3VnaCB0aGUgd2luZG93LCB5b3UgY2FuIGNsaWNrIHRocm91Z2ggdGhlIHdpbmRvdy4gSXRzIGxpa2UgdGluZW93cyBuZXZlciB3YXMgdGhlcmUuXG4qIFRoZSBuZXcgYFdpbmRvdy5BbGxLZXlzRGljdCA9IHt9YCBoYXMgYmVlbiBhZG9wdGVkIGJ5IGFsbCBQeVNpbXBsZUdVSSBwb3J0cy4gIEl0J3MgYSBuZXcgbWV0aG9kIG9mIGF1dG9tYXRpY2FsbHkgY3JlYXRpbmcgbWlzc2luZyBrZXlzLCBzdG9yaW5nIGFuZCByZXRyaWV2aW5nIGtleXMgaW4gZ2VuZXJhbCBmb3IgYSB3aW5kb3cuXG4qIENoYW5nZWQgaG93IGB3aW5kb3cuTWF4aW1pemVgIGlzIGltcGxlbWVudGVkIHByZXZpb3VzbHkgdXNlZCB0aGUgJy1mdWxsc2NyZWVuJyBhdHRyaWJ1dGUuICBOb3cgdXNlcyB0aGUgJ3pvb21lZCcgc3RhdGVcbiogV2luZG93IGdldHMgYSBuZXcgYE5vcm1hbCgpYCBtZXRob2QgdG8gcmV0dXJuIGZyb20gTWF4aW1pemUgc3RhdGUuICBTZXRzIHJvb3Quc3RhdGUoJ25vcm1hbCcpXG4qIFdpbmRvdy5DbG9zZSgpIG5vdyBjbG9zZXMgdGhlIHNwZWNpYWwgYFdpbmRvdy5oaWRkZW5fbWFzdGVyX3Jvb3RgIHdpbmRvdyB3aGVuIHRoZSBcImxhc3RcIiB3aW5kb3cgaXMgY2xvc2VkXG4qIGBXaW5kb3cuU2V0VHJhbnNwYXJlbnRDb2xvcmAgbWV0aG9kIGFkZGVkLiAgU2FtZSBlZmZlY3QgYXMgaWYgd2luZG93IHdhcyBjcmVhdGVkIHdpdGggcGFyYW1ldGVyIHNldFxuKiBBbiBFbGVtZW50J3MgV2lkZ2V0IHN0b3JlZCBpbiBgLldpZGdldGAgYXR0cmlidXRlXG4qIE1ha2luZyBDb21ib0JveCdzIElEIHVuaXF1ZSBieSB1c2luZyBpdCdzIEtleVxuKiBDaGFuZ2VkIE11bHRpbGluZSB0byBiZSBzdW5rZW4gYW5kIGhhdmUgYSBib3JkZXIgZGVwdGggc2V0dGluZyBub3dcbiogUmVtb3ZlZCBhIHNlY29uZCBjYW52YXMgdGhhdCB3YXMgYmVpbmcgdXNlZCBmb3IgR3JhcGggZWxlbWVudC5cbiogQ2hhbmdlZCBob3cgbm8gdGl0bGViYXIgaXMgaW1wbGVtZW50ZWQgcnVubmluZyBvbiBMaW51eCB2ZXJzdXMgV2luZG93cy4gLXR5cGUgc3BsYXNoIG5vdyB1c2VkIGZvciBMaW51eFxuKiBQb3B1cFNjcm9sbGVkIC0gQWRkZWQgYmFjayB1c2luZyBDbG9zZUJ1dHRvbiB0byBjbG9zZSB0aGUgd2luZG93XG4qIEZpeGVkIFBvcHVwR2V0Rm9sZGVyIHRvIHVzZSBjb3JyZWN0IFB5U2ltcGxlR1VJIHByb2dyYW0gY29uc3RydWN0cyAoa2V5cylcbiogUG9wdXBHZXRUZXh0IHBvcHVsYXRlZCB2YWx1ZXMgY2FycmVjdGx5IHVzaW5nIHRoZSB2YWx1ZSB2YXJpYWJsZSwgdXNlZCBrZXlzXG4qIFBvcHVwQW5pbWF0ZWQgZmluYWxseSBnZXRzIGEgY29tcGxldGVseSB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kXG5cbiMjIDMuMzMuMCBhbmQgMS4zMyBQeVNpbXBsZUdVSSAyNS1NYXktMjAxOVxuXG4qIEVtZXJnZW5jeSBmaXggZHVlIHRvIGRlYnVnZ2VyLiAgT2xkIGJ1ZyB3YXMgdGhhdCBJbWFnZSBFbGVtZW50IHdhcyBub3QgdGVzdGluZyBmb3IgQ09MT1JfU1lTVEVNX0RFRkFVTFQgY29ycmVjdGx5LlxuXG4jIyAzLjM0LjAgUHlTaW1wbGVHVUkgJiAxLjM0LjAgUHlTaW1wbGVHVUkyNyAyNS1NYXktMjAxOVxuXG4gIHBpcCByaHcgIHcgY2VuZlxuKiBGaXhlZCBXaW5kb3cuTWF4aW1pemUgYW5kIFdpbmRvdy5Ob3JtYWwgLSBuZWVkZWQgc3BlY2lhbCBjb2RlIGZvciBMaW51eFxuKiBDaGVjayBmb3IgREVGQVVMVF9TQ1JPTExCQVJfQ09MT1Igbm90IGJlaW5nIHRoZSBDT0xPUl9TWVNURU1fREVGQVVMVCAoY3Jhc2hlZClcblxuIyMgMy4zNSBQeVNpbXBsZUdVSSAmIDEuMzUgUHlTaW1wbGVHVUkyNyAyNy1NYXktMjAxOVxuXG4qIEJ1ZyBmaXggLSB3aGVuIHNldHRpbmcgZGVmYXVsdCBmb3IgQ2hlY2tib3ggaXQgd2FzIGFsc28gZGlzYWJsaW5nIHRoZSBlbGVtZW50IVxuXG4jIyAzLjM2IFB5U2ltcGxlR1VJICYgMS4zNiBQeVNpbXBsZUdVSTI3IDI5LU1heS0yMDE5XG5cbkEgY29tYmluYXRpb24gb2YgdXNlciByZXF1ZXN0cywgYW5kIG5lZWRzIG9mIG5ldyBgaW13YXRjaGluZ3lvdWAgZGVidWdnZXJcblxuKiBOZXcgRGVidWdnZXIgSWNvbiBmb3IgZnV0dXJlIGJ1aWx0LWluIGRlYnVnZ2VyXG4qIEZpeGVkIGJ1ZyBpbiBGaW5kQm91bmRSZXR1cm5LZXkgLSBuZWVkZWQgdG8gYWxzbyBjaGVjayBQYW5lc1xuKiBORVcgV2luZG93IGZ1bmN0aW9ucyB0byB0dXJuIG9uL29mZiB0aGUgR3JhYiBBbnl3aGVyZSBmZWF0dXJlXG4gICAgKiBgV2luZG93LkdyYWJBbnlXaGVyZU9uKClgXG4gICAgKiBgV2luZG93LkdyYWJBbnlXaGVyZU9mZigpYFxuKiBOZXcgXCJEZWJ1Z2dlclwiIGJ1dHRvbiB0aGF0J3MgYnVpbHQtaW4gbGlrZSBvdGhlciBidXR0b25zLiAgSXQncyBhIFRJTlkgYnV0dG9uIHdpdGggYSBsb2dvLiBGb3IgZnV0dXJlIHVzZSB3aGVuIGEgZGVidWdnZXIgaXMgYnVpbHQgaW50byBQeVNpbXBsZUdVSSBpdHNlbGYgKFNPT04hKVxuKiBDaGFuZ2UgVGV4dCBFbGVtZW50IFdyYXAgTGVuZ3RoIGNhbGN1bGF0aW9uLiAgV2VudCBmcm9tbiArNDAgcGl4ZWxzIHRvICsxMCBwaXhlbHMgaW4gZm9ybXVsYVxuKiBQb3B1cEdldEZpbGUgaGFzIG5ldyBwYXJhbWV0ZXIgLSBgbXVsdGlwbGVfZmlsZXNgLiBJZiBUcnVlIHRoZW4gYWxsb3dzIHNlbGVjdGlvbiBvZiBtdWx0aXBsZSBmaWxlc1xuXG4jIyAzLjM3IFB5U2ltcGxlR1VJICYgMS4zNyBQeVNpbXBsZUdVSTI3IDEtSnVuZS0yMDE5XG5cbiogVGhlIGJ1aWx0LWluIGRlYnVnZ2VyIGlzIEhFUkUgLSBtaWdodCBub3QgV09SSyBleGFjdGx5IHlldCwgYnV0IGEgbG90IG9mIGNvZGUgd2VudCBpbnRvIHRlIFB5U2ltcGxlR1VJLnB5IGZpbGUgZm9yIHRoaXMuICBBdCB0aGUgbW9tZW50LCB0aGUgYGltd2F0Y2hpbmd5b3VgIHBhY2thZ2UgaXMgVEhFIHdheSB0byB1c2UgYSBQeVNpbXBsZUdVSSBkZWJ1Z2dlci4gQnV0IHNvb24gZW5vdWdoIHlvdSB3b24ndCBuZWVkIHRoYXQgcHJvamVjdCBpbiBvcmRlciB0byBkZWJ1ZyB5b3VyIHByb2dyYW0uXG4qIFNvbWUgc3RyYW5nZSBjb2RlIHJlZm9ybWF0dGluZyBzbnVjayBpbi4gIFRoZXJlIGFyZSAzNTEgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGlzIGFuZCBwcmV2aW91cyByZWxlYXNlLiAgSSdtIG5vdCBzdXJlIHdoYXQgaGFwcGVuZWQgYnV0IGFtIGxvb2tpbmcgYXQgZXZlcnkgY2hhbmdlIGJ5IGhhbmQuXG4qIE5ldyBDYWxlbmRhciBCdXR0b24gZmVhdHVyZXNcbiAgICAqIGxvY2FsZSwgZm9ybWF0IC0gbmV3IHBhcmFtZXRlcnMgdG8gVEtDYWxlbmRhciBjYWxsXG4gICAgKiBVc2UgY3VzdG9tIGljb24gZm9yIHdpbmRvdyBpZiBvbmUgaGFzIGJlZW4gc2V0XG4gICAgKiBOZXcgcGFyYW1ldGVycyB0byBDYWxlbmRhckJ1dHRvbiAtIGBsb2NhbGVgLCBgZm9ybWF0YFxuKiBUaGUgYnVsayBvZiB0aGUgYnVpbHQtaW4gUHlTaW1wbGVHVUkgZGVidWdnZXIgaGFzIGJlZW4gYWRkZWQgYnV0IGlzIG5vdCB5ZXQgXCJvZmZpY2lhbGx5IHN1cHBvcnRlZFwiLiAgVHJ5IHByZXNzaW5nIFwiYnJlYWtcIiBvciBcImN0cmwrYnJlYWtcIiBvbiB5b3VyIGtleWJvYXJkLlxuICAgICogTmV3IGJpbmRpbmdzIGZvciBicmVhayAvIHBhdXNlIGJ1dHRvbiBhbmQgZGVidWdnZXJcbiAgICAqIE5ldyBEZWJ1ZyBidXR0b24gd2lsbCBsYXVuY2ggZGVidWdnZXIuXG4gICAgKiBOZXcgcGFyYW1ldGVyIGBkZWJ1Z2dlcl9lbmFibGVkYCBhZGRlZCB0byBXaW5kb3cgY2FsbC4gIERlZmF1bHQgaXMgX19lbmFibGVkX18uXG4gICAgKiBZb3VyIHByb2dhbSdzIGNhbGwgdG8gUmVhZCBpcyBhbGwgdGhhdCdzIG5lZWRlZCB0byByZWZyZXNoIGRlYnVnZ2VyXG4gICAgKiBOZXcgYFdpbmRvd2AgbWV0aG9kcyB0byBjb250cm9sIGRlYnVnZ2VyIGFjY2Vzc1xuICAgICAgICAqIGBFbmFibGVEZWJ1Z2dlcmAgLSB0dXJucyBvbiBIT1RLRVlTIHRvIGRlYnVnZ2VyXG4gICAgICAgICogYERpc2FibGVEZWJ1Z2dlcmAgLSB0dXJucyBvZmYgSE9US0VZUyB0byBkZWJ1Z2dlclxuKiBSZXN0b3JlZCB3cmFwIGxlbiBmb3IgVGV4dCBlbGVtZW50cyBiYWNrIGZyb20gKzEwIHRvICs0MCBwaXhlbHNcbiogYFBvcHVwR2V0Rm9sZGVyYCwgYFBvcHVwR2V0RmlsZWAgLSBmaXhlZCBzbyB0aGF0IHRoZSBcImhpZGRlblwiIG1hc3RlciB3aW5kb3cgc3RheXMgaGlkZGVuIChhIExpbnV4IHByb2JsZW0pXG4qIEFkZGVkIHN1cHBvcnQgZm9yIE11bHRpcGxlIEZpbGVzIHRvIGBQb3B1cEdldEZpbGVzYCB3aGVuIG5vX3dpbmRvdyBvcHRpb24gaGFzIGJlZW4gc2V0LlxuXG4jIyAzLjM4IFB5U2ltcGxlR1VJLCAxLjM4IFB5U2ltcGxlR1VJMjdcblxuKiBNdWx0aWxpbmUgLSBub3cgaGFzIGEgXCJyZWFkIG9ubHlcIiBzdGF0ZSBpZiBjcmVhdGVkIGFzIFwiRGlzYWJsZWRcIlxuKiBNdWx0aWxpbmUgLSBJZiB3aW5kb3cgaXMgY3JlYXRlZCBhcyByZXNpemFibGUsIHRoZW4gTXVsdGlsaW5lIEVsZW1lbnRzIHdpbGwgbm93IGV4cGFuZCB3aGVuIHRoZSB3aW5kb3cgaXMgZW5sYXJnZWQsIGEgZmVhdHVyZSBsb25nIGFza2VkIGZvci5cbiogT3V0cHV0IEVsZW1lbnQgZXhwYW5kcyBpbiB0aGUgWSBEaXJlY3Rpb25cbiogXCJFeHBhbmRhYmxlIFJvd3NcIiBvcHRpb24gYWRkZWQgdG8gUGFja0Zvcm1JbnRvRnJhbWUgYWxsb3dpbmcgZnV0dXJlIGVsZW1lbnRzIHRvIGFsc28gZXhwYW5kXG4qIEVycm9yIEVsZW1lbnQgLSBzaWxlbmNlX29uX2Vycm9yIG9wdGlvblxuKiBUZXh0IEVsZW1lbnQgd3JhcHBpbmcgLSBGSU5BTExZIGdvdCBpdCByaWdodD8gIE5vIG1vcmUgXCJGdWRnZSBmYWN0b3JcIiBhZGRlZFxuKiBQb3B1cFNjcm9sbGVkIC0gV2luZG93cyBhcmUgbm93IHJlc2l6YWJsZVxuKiBPcHRpb24gdG8gXCJsYXVuY2ggYnVpbHQtaW4gZGVidWdnZXJcIiBmcm9tIHRoZSB0ZXN0IGhhcm5lc3NcbiogUmVtZW1lYmVyIHRoYXQgdGhlIERlYnVnZ2VyIGlzIHN0aWxsIGluIHRoaXMgY29kZSEgIEl0IG1heSBvciBtYXkgbm90IGJlIG9wZXJhdGlvbmFsIGFzIGl0J3Mgb25lIHZlcnNpb24gYmFjayBmcm9tIHRoZSBsYXRlc3QgcmVsZWFzZSBvZiB0aGUgYGltd2F0Y2hpbmd5b3VgIGRlYnVnZ2VyIGNvZGUuIFRoaXMgY29kZSBuZWVkcyB0byBiZSBpbnRlZ3JhdGVkIGJhY2sgaW5cblxuIyMgMy4zOSBQeVNpbXBsZUdVSSAmIDEuMzkgUHlTaW1wbGVHVUkyNyAxMy1KdW5lLTIwMTlcblxuKiBQb3J0ZWQgdGhlIGltd2F0Y2hpbmd5b3UgZGVidWdnZXIgY29kZSBpbnRvIFB5U2ltcGxlR1VJIGNvZGVcbiAgICAqIFJlcGxhY2VkIG9sZCBkZWJ1Z2dlciBidWlsdC1pbiBjb2RlIHdpdGggdGhlIG5ld2VyIGltd2F0Y2hpbmd5b3UgdmVyc2lvblxuICAgICogUmVxdWlyZWQgcmVtb3ZpbmcgYWxsIG9mIHRoZSAnc2cuJyBiZWZvcmUgUHlTaW1wbGVHVUkgY2FsbHMgc2luY2Ugbm90IGltcG9ydGluZ1xuICAgICogRHluYW1pY2FsbHkgY3JlYXRlIHRoZSBkZWJ1Z2dlciBvYmplY3Qgd2hlbiBmaXJzdCBjYWxsIHRvIGByZWZyZXNoYCBvciBgc2hvd2AgaXMgbWFkZVxuKiBTdGFydGVkIHRoZSBwcm9jZWNzcyBvZiByZW5hbWluZyBDbGFzcyBNZXRob2RzIHRoYXQgYXJlIHByaXZhdGUgdG8gc3RhcnQgd2l0aCBfXG4qIE5lZWRlZCBmb3IgdGhlIGF1dG9tYXRpYyBkb2N1bWVudGF0aW9uIGdlbmVyYXRpb24gdGhhdCdzIGJlaW5nIHdvcmtlZCBvblxuKiBGaXhlZCBjcmFzaCB3aGVuIGNsaWNraW5nIHRoZSBEZWJ1ZyBidXR0b25cbiogRml4ZWQgYnVnIGluIERlbGV0ZUZpZ3VyZS4gTmVlZGVkIHRvIGRlbGV0ZSBpbWFnZSBzZXBhcmF0ZWx5XG4qIEFkZGVkIG1vcmUgdHlwZSBoaW50c1xuKiBOZXcgYFRhYkdyb3VwYCBtZXRob2QgYFNlbGVjdFRhYihpbmRleClgIHNlbGVjdHMgYSBgVGFiYCB3aXRoaW4gYSBgVGFiR3JvdXBgXG4qIE5ldyBgVGFibGUuVXBkYXRlYCBwYXJhbWV0ZXIgLSBgc2VsZWN0X3Jvd3NgLiBMaXN0IG9mIHJvd3MgdG8gc2VsZWN0ICgwIGlzIGZpcnN0KVxuKiBFcnJvciBjaGVja2luZyBpbiBgV2luZG93LkxheW91dGAgcHJvdmlkZXMgZXJyb3IgXCJoaW50c1wiIHRvIHRoZSB1c2VyXG4gICAgKiBMb29rcyBmb3IgYmFkbHkgcGxhY2VkICddJ1xuICAgICogTG9va3MgZm9yIGZ1bmN0aW9ucyBtaXNzaW5nICcoKSdcbiAgICAqIFBvcHMgdXAgYSB3aW5kb3cgd2FybmluZyB1c2VyIGluc3RlYWQgb2YgY3Jhc2hpbmdcbiAgICAqIE1heSBoYXZlIHRvIHJldmlzaXQgaWYgdGhlIHBvcHVwcyBzdGFydCBnZXR0aW5nIGluIHRoZSB3YXlcbiogTmV3IGltcGxlbWVudGF0aW9ucyBvZiBgV2luZG93LkRpc2FibGUoKWAgYW5kIGBXaW5kb3cuRW5hYmxlKClgXG4gICAgKiBQcmV2aW91c2x5IGRpZCBub3Qgd29yayBjb3JyZWN0bHkgYXQgYWxsXG4gICAgKiBOb3cgdXNpbmcgdGhlIFwiLWRpc2FibGVkXCIgYXR0cmlidXRlXG4qIEFsbG93IENvbWJvYm94ZXMgdG8gaGF2ZSBlbXB0eSBzdGFydGluZyB2YWx1ZXNcbiAgICAqIFdhcyBjcmFzaGluZ1xuICAgICogRW5hYmxlcyBhcHBsaWNhdGlvbiB0byBmaWxsIHRoZXNlIGluIGxhdGVyXG5cbiMgNC4wLjAgUHlTaW1wbGVHVUkgJiAyLjAuMCBQeVNpbXBsZUdVSTI3ICAgMTktSnVuZS0yMDE5XG5cbiogRE9DIFNUUklOR1MgRE9DUyBTVFJJTkdTIERPQyBTVFJJTkdTIVxuXHQqIFlvdXIgSURFIGlzIGFib3V0IHRvIGJlY29tZSB2ZXJ5IGhhcHB5XG5cdCogQWxsIEVsZW1lbnRzIGhhdmUgYWN0dWFsIGRvY3VtZW50YXRpb24gaW4gdGhlIGNhbGwgc2lnbmF0dXJlXG5cdCogVGhlIFJlYWRtZSBhbmQgUmVhZFRoZURvY3Mgd2lsbCBiZSBnZW5lcmF0ZWQgZ29pbmcgZm9yd2FyZCB1c2luZyB0aGUgQ09ERVxuXHQqIEhVR0UgVGhhbmtzIGZvciBAbm5nb2dvbCBmb3IgYm90aCBjb3B5aW5nICYgYWRkaW5nIGFsbCB0aG9zZSBzdHJpbmdzLCBidXQgYWxzbyBmb3IgbWFraW5nIGFuIGVudGlyZSBkb2N1bWVudCBjcmVhdGlvbiBzeXN0ZW0uXG4qIE5ldyBfX3ZlcnNpb25fXyBzdHJpbmcgZm9yIFB5U2ltcGxlR1VJLnB5XG4qIE5ldyBwYXJhbWV0ZXIgdG8gQUxMIGBTZXRGb2N1c2AgY2FsbHMuIFx0XG5cdCogZGVmIFNldEZvY3VzKHNlbGYsIGZvcmNlPUZhbHNlKVxuXHQqIElmIGZvcmNlIGlzIFRydWUsIHRoZW4gYSBjYWxsIHRvIGBmb2N1c19mb3JjZWAgaXMgbWFkZSBpbnN0ZWFkIG9mIGBmb2N1c19zZXRgXG4qIEdldCAtIE5ldyBSYWRpbyBCdXR0b24gTWV0aG9kLiAgUmV0dXJucyBUcnVlIGlzIHRoZSBSYWRpbyBCdXR0b24gaXMgc2V0XG4qIFJlbmFtZSBvZiBEZWJ1Z2dlciBjbGFzcyB0byBfRGVidWdnZXIgc28gSURFcyBkb24ndCBnZXQgY29uZnVzZWRcbiogVXNlciByZWFkIGFjY2VzcyB0byBsYXN0IEJ1dHRvbiBDb2xvciBzZXQgbm93IGF2YWlsYWJsZSB2aWEgcHJvcGVydHkgYEJ1dHRvbi5CdXR0b25Db2xvcmBcbiogUmVuYW1lIG9mIGEgbnVtYmVyIG9mIGNhbGxiYWNrIGhhbmRsZXJzIHRvIHN0YXJ0IHdpdGggX1xuKiBGaXggZm9yIG1lbW9yeSBsZWFrIGluIFJlYWQgY2FsbC4gRXZlcnkgY2FsbCB0byByZWFkIGxvc3QgYSBsaXR0bGUgbWVtb3J5IGR1ZSB0byByb290LnByb3RvY29sIGNhbGxzXG4qIExpc3Rib3guVXBkYXRlIC0gTmV3IHBhcmFtZXRlciAtIHNjcm9sbF90b19pbmRleCAtIHNjcm9sbCB2aWV3IHNvIHRoYXQgaW5kZXggaXMgc2hvd24gYXQgdGhlIHRvcFxuKiBGaXJzdCBQeVBJIHJlbGVhc2UgdG8gdXNlIG5ldyBkb2N1bWVudGF0aW9uIVxuXG4jIyBQeVNpbXBsZUdVSSA0LjEgQW5uaXZlcnNhcnkgUmVsZWFzZSEgIDQtQXVnLTIwMTlcblxuTkVWRVIgaGFzIHRoZXJlIGJlZW4gdGhpcyBsb25nIG9mIGEgbGFnLCBzb3JyeSB0byBhbGwgdXNlcnMhXG5Mb25nIHRpbWUgY29taW5nLiAgRG9jc3RyaW5ncyBjb250aW51ZSB0byBiZSBhIGZvY3VzLlxuXG4qIFZlcnNpb24gY2FuIGJlIGZvdW5kIHVzaW5nIFB5U2ltcGxlR1VJLnZlcnNpb25cbiogTmV3IGJpdCBvZiBsaWNlbnNpbmcgaW5mbyBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlXG4qIFR5cGVzIHVzZWQgaW4gdGhlIGRvYyBzdHJpbmdzLiBBbHNvIHR5cGUgaGludHMgaW4gc29tZSBjb21tZW50cy4gQmVjYXVzZSBhbHNvIHJ1bm5pbmcgb24gMi43IGNhbid0IHVzZSBmdWxsIHR5cGluZ1xuKiBBZGRlZCB1c2luZyBvZiBXYXJuaW5ncy4gSnVzdCBnZXR0aW5nIHN0YXJ0ZWQgdXNpbmcgdGhpcyBtZWNoYW5pc20uIE1heSBiZSBncmVhdCwgbWF5YmUgbm90LiBXZSdsbCBzZWUgd2l0aCB0aGlzIGNoYW5nZVxuKiBBZGRlZCBUT09MVElQX0JBQ0tHUk9VTkRfQ09MT1Igd2hpY2ggY2FuIGJlIGNoYW5nZWQgKGl0J3MgdGtpbnRlciBvbmx5IHNldHRpbmcgaG93ZXZlciBzbyB1bmRlcnRhbmQgdGhpcyEpXG4qIEdyYXBoLkRyYXdUZXh0LiAgQWJpbGl0eSB0byBzZXQgYHRleHRfbG9jYXRpb25gIHdoZW4gZHJhd2luZyB0ZXh0IG9udG8gYSBHcmFwaCBFbGVtZW50LiAgRGV0ZXJtaW5lcyB3aGF0IHBhcnQgb2YgdGhlIHRleHQgd2lsbCBiZSBsb2NhdGVkIGF0IHRoZSBwb2ludCB5b3UgcHJvdmlkZSB3aGVuIHlvdSBkcmF3IHRoZSB0ZXh0LiAgIENob2ljZXMgYXJlOlxuXHQqIFRFWFRfTE9DQVRJT05fVE9QXG5cdCogVEVYVF9MT0NBVElPTl9CT1RUT01cblx0KiBURVhUX0xPQ0FUSU9OX0xFRlRcblx0KiBURVhUX0xPQ0FUSU9OX1JJR0hUXG5cdCogVEVYVF9MT0NBVElPTl9UT1BfTEVGVFxuXHQqIFRFWFRfTE9DQVRJT05fVE9QX1JJR0hUXG5cdCogVEVYVF9MT0NBVElPTl9CT1RUT01fTEVGVFxuXHQqIFRFWFRfTE9DQVRJT05fQk9UVE9NX1JJR1Rcblx0KiBURVhUX0xPQ0FUSU9OX0NFTlRFUlxuKiBGbGFnIEVOQUJMRV9US19XSU5ET1dTID0gRmFsc2UuICBJZiBUcnVlLCBhbGwgd2luZG93cyB3aWxsIGJlIG1hZGUgdXNpbmcgb25seSB0ay5UaygpXG4qIFNldEZvY3VzIGF2YWlsYWJsZSBmb3IgYWxsIGVsZW1lbnRzIG5vdyBkdWUgdG8gaXQgYmVpbmcgYWRkZWQgdG8gYmFzZSBjbGFzcy4gTWF5IE5PVCB3b3JrIG9uIGFsbCBlbGVtZW50cyBob3dldmVyXG4qIEFkZGVkIENvbWJvLkdldFNFbGVjdGVkSXRlbXNJbmRleGVzKCkgLSByZXR1cm5zIGEgbGlzdCBvZiBhbGwgY3VycmVudGx5IHNlbGVjdGVkIGl0ZW1zXG4qIEZpeGVkIExpc3Rib3guVXBkYXRlIC0gc2V0X3RvX2luZGV4IGNoYW5nZWQgdG8gYmUgYW4gaW50LCBsaXN0IG9yIHR1cGxlXG4qIEFkZGVkIHBhcmVudCBwYXJhbWV0ZXIgdG8gY2FsbCB0byB0a2ludGVyJ3MgYXNrb3BlbmZpbGVuYW1lLCBkaXJlY3RvcnksIGZpbGVuYW1lcy4gIE5vdCBzdXJlIHdoeSB0aGUgcm9vdCB3YXNuJ3QgcGFzc2VkIGluIGJlZm9yZVxuKiBCdXR0b24uVXBkYXRlIC0gYWxzbyBzZXRzIHRoZSBhY3RpdmViYWNrZ3JvdW5kIHRvIHRoZSBidXR0b24ncyBiYWNrZ3JvdW5kIGNvbG9yXG4qIEdyYXBoIC0gTmV3IHBhcmFtZXRlciB3aGVuIGNyZWF0aW5nLiBgZmxvYXRfdmFsdWVzYC4gIElmIFRydWUsIHRoZW4geW91J3JlIGluZGljYXRpbmcgdGhhdCB5b3VyIGNvb3JkaW5hdGUgc3lzdGVtIGlzIGZsb2F0IG5vdCBpbnQgYmFzZWRcbiogR3JhcGguVXBkYXRlIC0gbWFkZSBiYWNrZ3JvdW5kIGNvbG9yIG9wdGlvbmFsIHBhcm0gc28gdGhhdCB2aXNpYmxlIG9ubHkgY2FuIGJlIHNldFxuKiBGcmFtZS5MYXlvdXQgcmV0dXJucyBzZWxmIG5vdyBmb3IgY2hhaW5pbmdcbiogVGFiR3JvdXAuTGF5b3V0IHJldHVybnMgc2VsZiBub3cgZm9yIGNoYWluaW5nXG4qIENvbHVtbi5MYXlvdXQgcmV0dXJucyBzZWxmIG5vdyBmb3IgY2hhaW5pbmdcbiogTWVudS5VcGRhdGUgbWVudV9kZWZpbml0aW9uIGlzIG5vdyBvcHRpb25hbCB0byBhbGxvdyBmb3IgY2hhbmdpbmcgdmlzaWJpbGl0eSBvbmx5XG4qIEFkZGVkIGluaXZpc2libGl0eSBzdXBwb3J0IGZvciBtZW51IGJhcnNcbiogVGFibGUuVXBkYXRlIHN1cHBvcnRzIHNldHRpbmcgYWx0ZXJuYXRpbmcgcm93IGNvbG9yIGFuZCByb3dfY29sb3JzIChsaXN0IG9mIHJvd3MgYW5kIHRoZSBjb2xvciB0byBzZXQpXG4qIFNldCB3aW5kb3cuVGltZW91dEtleSB0byBUSU1FT1VUX0tFWSBpbml0aWFsbHlcbiogV2luZG93IC0gY2hlY2sgZm9yIHR5cGVzIGZvciB0aXRsZSAoc2hvdWxkIGJlIHN0cmluZykgYW5kIGxheW91dCAoc2hvdWxkIGJlIGxpc3QpIGFuZCB3YXJucyB1c2VyIGlmIG5vdCBjb3JyZWN0XG4qIFdpbmRvdyAtIHJlbmFtZWQgc29tZSBtZXRob2RzIGJ5IGFkZGluZyBfIGluIGZyb250IChsaWtlIFNob3cpIGFzIHRoZXkgYXJlIE5PVCB1c2VyIGNhbGxhYmxlXG4qIEFub3RoZXIgc2hvcnRjdXQhIEVsZW0gPSBFbGVtZW50ID0gRmluZEVsZW1lbnRcbiogU2F2ZVRvRGlzayAtIHdpbGwgbm90IHdyaXRlIGJ1dHRvbnMgdG8gZmlsZS4gIEZpeGVkIHByb2JsZW1zIGR1ZSB0byBidXR0b25zIGhhdmluZyBrZXlzXG4qIFJlbWFwcGVkIFdpbmRvd2wuQ2xvc2VOb25CbG9ja2luZ0Zvcm0sIFdpbmRvdy5DbG9zZU5vbkJsb2NraW5nIHRvIGJlIFdpbmRvdy5DbG9zZU5vbkJsb2NraW5nXG4qIEZpeCBmb3IgcmV0dXJuaW5nIHZhbHVlcyBmcm9tIGEgY29tYm8gbGlzdC4gV2Fzbid0IGhhbmRsaW5nIGN1cnJlbnQgdmFsdWUgbm90IGluIGxpc3Qgb2YgcHJvdmlkZWQgdmFsdWVzXG4qIFNwaW4gLSBSZXR1cm5zIGFuIGFjdHVhbCB2YWx1ZSBmcm9tIGxpc3QgcHJvdmlkZWQgd2hlbiBTcGluIHdhcyBjcmVhdGVkIG9yIHVwZGF0ZWRcbiogQ2hhbmVnZWQgRmlsbEZvcm1XaXRoVmFsdWVzIHRvIHVzZSB0aGUgbmV3IGludGVybmFsIEFsbEtleXNEaWN0IGRpY3Rpb25hcnlcbiogQWRkZWQgdHJ5IHdoZW4gY3JlYXRpbmcgY29tYm8uIFByb2JsZW0gaGFwcGVucyB3aGVuIHdpbmRvdyBpcyBjcmVhdGVkIHR3aWNlLiAgUHJpb3Igd2luZG93IGhhZCBhbHJlYWR5IGNyZWF0ZWQgdGhlIHN0eWxlXG4qIEFkZGVkIGxpc3Qgb2YgdGFibGUgKHRyZWUpIGlkcyB0byB0aGUgVGFibGUgZWxlbWVudFxuKiBFbmFibGVkIGF1dG9jbG9zZSB0byB1c2UgZnJhY3Rpb25zIG9mIGEgc2Vjb25kXG4qIEFkZGVkIGEgdHJ5IGFyb3VuZCBvbmUgb2YgdGhlIGRlc3Ryb3lzIGJlY2F1c2UgaXQgY291bGQgZmFpbCBpZiB1c2VyIGFib3J0ZWRcbiogUG9wdXAgLSBJY29uIGlzIG5vIGxvbmdlciBzZXQgdG8gZGVmYXVsdCBieSBkZWZhdWx0XG4qIEZpeCBmb3IgZGVidWdnZXIgdHJ5aW5nIHRvIGV4ZWN1dGUgYSBSRVBMIGNvbWFuZC4gIFRoZSBleGVjIGlzIG9ubHkgYXZpbGFibGUgaW4gUHl0aG9uIDNcbiogbWFpbigpIHdpbGwgZGlzcGxheSB0aGUgdmVyc2lvbiBudW1iZXIgaW4gYmlnIGxldHRlcnMgd2hlbiBwcm9ncmFtIGlzIHJ1bm5pbmdcblxuIyMjIDQuMiBQeVNpbXBsZUdVSSAgMi4yIGZvciBQeVNpbXBsZUdVSTI3ICAxOCAtIEF1ZyAyMDE5XG5cblRoZSBjb29sIGxvb2t1cCByZWxlYXNlISAgTm8gbW9yZSBuZWVkIGZvciBGaW5kRWxlbWVudC4gWW91IGNhbiBjb250aW51ZSB0byB1c2UgRmluZEVsZW1lbnQuXG5Ib3dldmVyLCB5b3VyIGNvZGUgd2lsbCBsb29rIHdlaXJkIGFuZCBhbmNpZW50LiAgOy0pICAoaS5lLiByZWFkYWJsZSlcbk1PUkUgRG9jc3RyaW5nIGFuZCBtYWluIGRvYyB1cGRhdGVzIVxuXG4qIEZpbmFsbHkgMi43IGdldHMgYW4gdXBncmFkZSBhbmQgd2l0aCBpdCBkb2Mgc3RyaW5ncy4gIEl0IGhvd2V2ZXIgZG9lc24ndCBnZXQgYSBmdWxsLXZlcnNpb24gYnVtcCBsaWtlIG1haW4gUHlTaW1wbGVHVUkgYXMgdGhpcyBtYXkgYmUgaXRzIGxhc3QgcmVsZWFzZS5cbiogTmV3IHdpbmRvd1trZXldID09IHdpbmRvdy5GaW5kRWxlbWVudChrZXkpXG4qIE5ldyBVcGRhdGUgY2FsbGluZyBtZXRob2QuIENhbiBkaXJlY3RseSBjYWxsIGFuIEVsZW1lbnQgYW5kIGl0IHdpbGwgY2FsbCBpdHMgVXBkYXRlIG1ldGhvZFxuXHQqIHdpbmRvd1trZXldKHZhbHVlPW5ld192YWx1ZSkgICAgPT0gICAgIHdpbmRvdy5GaW5kRWxlbWVudChrZXkpLlVwZGF0ZSh2YWx1ZT1uZXdfdmFsdWUpXG4qIE1hZGUgVGVhcm9mZiBwYXJ0IG9mIGVsZW1lbnQgc28gYW55dGhpbmcgY2FuIGJlIGEgbWVudSBpbiB0aGVvcnlcbiogUmVtb3ZlZCBhIGJ1bmNoIG9mIF9fZGVsX18gY2FsbHMuIEhvcGluZyBpdCBkb2Vzbid0IGJpdGUgbWUgaW4gbWVtb3J5IGxlYWtzXG4qIENvbWJvLkdldCBtZXRob2QgYWRkZWRcbiogQ29tYm8uR2V0U2VsZWN0ZWRJdGVtc0luZGV4ZXMgcmVtb3ZlZFxuKiBOZXcgR3JhcGggbWV0aG9kcyBTZW5kRmlndXJlVG9CYWNrLCBCcmluZ0ZpZ3VyZVRvRnJvbnRcbiogQnV0dGVuIHJlbGVhc2UgY2hhbmdlZCBmb3IgYmV0dGVyIEdyYXBoIERyYWdnaW5nXG5cdCogTm93IHJldHVybnMga2V5K1wiVXBcIiBmb3IgdGhlIGV2ZW50XG5cdCogQWxzbyByZXR1cm5zIHRoZSB4LHkgY29vcmRzIGluIHRoZSB2YWx1ZXNcbiogVGFiLlNlbGVjdCBtZXRob2QgYWRkZWRcbiogVGFiR3JvdXAuR2V0IG1ldGhvZCBhZGRlZCAtIHJldHVybnMga2V5IG9mIGN1cnJlbnRseSBzZWxlY3RlZCBUYWJcbiogV2luZG93IGZpbmFsaXplIHBhcmFtZXRlciBhZGRlZCAtIFdpbGwgY2FsbCBmaW5hbGl6ZSBpZiBhIGxheW91dCBpcyBhbHNvIGluY2x1ZGVkLiAgTm8gbW9yZSBuZWVkIGZvciBGaW5hbGl6ZSEhXG4qIFF1aWV0LCBzdGVhZHkgY2hhbmdlIHRvIFBFUDggdXNlciBpbnRlcmZhY2Ugc3RhcnRlZFxuXHQqIE5vdyBhdmFpbGFibGUgYXJlIFdpbmRvdyBtZXRob2RzIC0gcmVhZCwgbGF5b3V0LCBmaW5hbGl6ZSwgZmluZF9lbGVtZW50LCBlbGVtZW50LCBjbG9zZVxuXHQqIFNob3VsZCBwcm92aWRlIDEwMCUgUEVQIHdpdGggdGhlc2UgYWxvbmUgZm9yIG1vc3QgUHlTaW1wbGVHVUkgcHJvZ3JhbXNcbiogQWRkZWQgZmluZGluZyBmb2N1cyBhY3Jvc3MgQUxMIGVsZW1lbnRzIGJ5IHVzaW5nIHRoZSAuV2lkZ2V0IG1lbWJlciB2YXJpYWJsZVxuKiBGaXhlZCBzaXppbmcgQ29sdW1ucyEgIE5PVyB0aGV5IHdpbGwgZmluYWxseSBiZSB0aGUgc2l6ZSBzcGVjaWZpZWRcbiogRml4ZWQgbm90IHVzaW5nIHRoZSBpbml0aWFsZGlyIHBhcmFtdGVyIGluIFBvcHVwR2V0RmlsZSBpZiB0aGUgbm9fd2luZG93IG9wdGlvbiBpcyBzZXRcblxuIyMgNC4zIFB5U2ltcGxlR1VJIFJlbGVhc2UgMjItQXVnLTIwMTlcblxuUEVQOCBQRVA4IFBFUDhcbkxheW91dCBjb250cm9scyEgIENhbiBmaW5hbGx5IGNlbnRlciBzdHVmZlxuU29tZSByYXRoZXIgaW1wYWN0ZnVsIGNoYW5nZXMgdGhpcyB0aW1lXG5MZXQncyBob3BlIGl0IGRvZXNuJ3QgYWxsIGJsb3cgdXAgaW4gb3VyIGZhY2VzIVxuXG4qIFBFUDggaW50ZXJmYWNlcyBhZGRlZCBmb3IgQ2xhc3MgbWV0aG9kcyAmIGZ1bmN0aW9uc1xuXHQqIEZpbmFsbHkgYSBQRVA4IGNvbXBsaWFudCBpbnRlcmZhY2UgZm9yIFB5U2ltcGxlR1VJISFcblx0KiBUaGUgXCJvbGQgQ2FtZWxDYXNlXCIgYXJlIHN0aWxsIGluIHBsYWNlIGFuZCB3aWxsIGJlIGZvciBxdWl0ZSBzb21lIHRpbWVcblx0KiBDYW4gbWl4IGFuZCBtYXRjaCBhdCB3aWxsIGlmIHlvdSB3YW50LCBidXQgc3VnZ2VzdCBwaWNraW5nIG9uZSBhbmQgc3RpY2tpbmcgd2l0aCBpdFxuXHQqIEFsbCBkb2NzIGFuZCBkZW1vIHByb2dyYW1zIHdpbGwgbmVlZCB0byBiZSBjaGFuZ2VkXG4qIEludGVybmFsbHkgc2F2aW5nIHBhcmVudCByb3cgZnJhbWUgZm9yIGxheW91dCBjaGVja3NcbiogV2FybmluZ3Mgb24gYWxsIFVwZGF0ZSBjYWxscyAtIGNoZWNrcyBpZiBXaW5kb3cuUmVhZCBvciBXaW5kb3cuRmluYWxpemUgaGFzIGJlZW4gY2FsbGVkXG4qIFdhcm5pbmcgaWYgYSBsYXlvdXQgaXMgYXR0ZW1wdGVkIHRvIGJlIHVzZWQgdHdpY2Vcblx0KiBTaG93cyBhbiBcIkVycm9yIFBvcHVwXCIgdG8gZ2V0IHRoZSB1c2VyJ3MgYXR0ZW50aW9uIGZvciBzdXJlXG4qIFJlbW92ZWQgYWxsIGVsZW1lbnQtc3BlY2lmaWMgU2V0Rm9jdXMgbWV0aG9kcyBhbmQgbWFkZSBpdCBhdmFpbGFibGUgdG8gQUxMIGVsZW1lbnRzXG4qIExpc3Rib3ggLSBub19zY3JvbGxiYXIgcGFyYW1ldGVyIGFkZGVkLiBJZiBUcnVlIHRoZW4gbm8gc2Nyb2xsYmFyIHdpbGwgYmUgc2hvd25cbiogTkVXIGZpbmFsaXplIGJvb2wgcGFyYW1ldGVyIGFkZGVkIHRvIFdpbmRvdy4gUmVtb3ZlcyBuZWVkIHRvIFwiY2hhaW5cIiAuRmluYWxpemUoKSBjYWxsLlxuKiBORVcgZWxlbWVudF9qdXN0aWZpY2F0aW9uIHBhcmFtZXRlciBmb3IgQ29sdW1uLCBGcmFtZSwgVGFiIEVsZW1lbnRzIGFuZCBXaW5kb3dcblx0KiBWYWxpZCB2YWx1ZXMgYXJlICdsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlcicuIE9ubHkgZmlyc3QgbGV0dGVyIGNoZWNrZWQgc28gY2FuIHVzZSAnbCcsICdjJywncidcblx0KiBEZWZhdWx0ID0gJ2xlZnQnXG5cdCogUmVzdWx0IGlzIHRoYXQgYWxsIEVsZW1lbnRzIElOU0lERSBvZiB0aGlzIGNvbnRhaW5lciB3aWxsIGJlIGp1c3RpZmllZCBhcyBzcGVjaWZpZWRcblx0KiBXb3JrcyB3ZWxsIHdpdGggbmV3IFNpemVyIEVsZW1lbnRzXG4qIE5FVyBqdXN0aWZpY2F0aW9uIHBhcmFtZXRlciBmb3IgQ29sdW1uIGVsZW1lbnRzLiAgXG5cdCogSnVzdGlmaWVzIENvbHVtbiBBTkQgdGhlIHJvdyBpdCdzIG9uIHRvIHRoaXMgc2V0dGluZyAobGVmdCwgcmlnaHQsIGNlbnRlcilcblx0KiBFbmFibGVzIGluZGl2aWR1YWwgcm93cyB0byBiZSBqdXN0aWZpZWQgaW4gYWRkaXRpb24gdG8gdGhlIGVudGlyZSB3aW5kb3dcbiogTkVXIFNpemVyIEVsZW1lbnRcblx0KiBIYXMgd2lkdGggYW5kIGhlaWdodCBwYXJhbWV0ZXJzLiAgQ2FuIHNldCBvbmUgb3IgYm90aFxuXHQqIENhdXNlcyB0aGUgZWxlbWVudCBpdCBpcyBjb250YWluZWQgd2l0aGluIHRvIGV4cGFuZCBhY2NvcmRpbmcgdG8gd2lkdGggYW5kIGhlaWdodCBvZiBTaXplciBFbGVtZW50XG5cdCogSGVscHMgZ3JlYXRseSB3aXRoIGNlbnRlcmluZy4gIEZyYW1lcyB3aWxsIHNocmluayB0byBmaXQgdGhlIGNvbnRlbnRzIGZvciBleGFtcGxlLiBVc2UgU2l6ZXIgdG8gcGFkIG91dCB0byByaWdodCBzaXplXG4qIEFkZGVkIFdpbmRvdy52aXNpYmlsaXR5X2NoYW5nZWQgdG8gbWF0Y2ggdGhlIFB5U2ltcGxlR1VJUXQgY2FsbFxuKiBGaXhlZCBEZWJ1Z2dlciBzbyB0aGF0IHBvcG91dCB3aW5kb3cgc2hvd3MgYW55IG5ld2x5IGFkZGVkIGxvY2Fsc1xuXG4jIyA0LjQgUHlTaW1wbGVHVUksIDIuNCBQeVNpbXBsZUdVSTI3IFJlbGVhc2UgNS1TZXAtMjAxOVxuXG4qIHdpbmRvdygpIC0gXCJDYWxsaW5nXCIgeW91ciBXaW5kb3cgb2JqZWN0IHdpbGwgcGVyZm9ybSBhIFJlYWQgY2FsbFxuKiBJbnB1dFRleHQgLSBtb3ZlIGN1cnNvciB0byBlbmQgZm9sbG93aW5nIFVwZGF0ZVxuKiBTaG9ydGN1dHMgLSB0cnlpbmcgdG8gZ2V0IGEgbWFuYWdlYWJsZSBhbmQgc3RhYmxlIHNldCBvZiBOb3JtYWwsIFNob3J0LCBTdXBlci1zaG9ydFxuXHQqIEREIC0gRHJvcERvd24gKENvbWJvKVxuXHQqIExCLCBMQm94IC0gTGlzdGJveFxuXHQqIFIsIFJhZCAtIFJhZGlvXG5cdCogTUwsIE1MaW5lIC0gTXVsdGlsaW5lXG5cdCogQk1lbnUgLSBCdXR0b25NZW51XG5cdCogUEJhciwgUHJvZyAtIFByb2dyZXNzQmFyXG5cdCogQ29sIC0gQ29sdW1uXG4qIExpc3Rib3ggLSBuZXcgbWV0aG9kIEdldEluZGV4ZXMgcmV0dXJucyBjdXJyZW50bHkgc2VsZWN0ZWQgaXRlbXMgYXMgYSBsaXN0IG9mIGluZGV4ZXNcbiogT3V0cHV0IC0gbmV3IG1ldGhvZCBHZXQgcmV0dXJucyB0aGUgY29udGVudHMgb2YgdGhlIG91dHB1dCBlbGVtZW50XG4qIEJ1dHRvbiAtIEZvciBNYWNzIGRvbid0IGRvbid0IGFsbG93IHNldHRpbmcgYnV0dG9uIGNvbG9yLiBQcmV2aW91c2x5IG9ubHkgd2FybmVkXG4qIEJ1dHRvbk1lbnUgLSBuZXcgQ2xpY2sgbWV0aG9kIHdpbGwgY2xpY2sgdGhlIGJ1dHRvbiBqdXN0IGxpa2UgYSBub3JtYWwgQnV0dG9uJ3MgQ2xpY2sgbWV0aG9kXG4qIENvbHVtbiBzY3JvbGxpbmcgZmluYWxseSB3b3JrcyBjb3JyZWN0bHkgd2l0aCBtb3VzZXdoZWVsLiBTaGlmdCtNb3VzZSBTY3JvbGwgd2lsbCBzY3JvbGwgaG9yaXpvbnRhbGx5XG4qIFRhYmxlIC0gR2V0IG1ldGhvZCBpcyBhIGR1bW15IHZlcnNpb24gYSBHZXQgYmVjYXVzZSBRdCBwb3J0IGdvdCBhIHJlYWwgR2V0IG1ldGhvZFxuKiBUYWJsZSAtIFdpbGwgYWRkIG51bWVyaWNhbCBjb2x1bW4gaGVhZGVycyBpZiBDb2x1bW4gSGVhZHNpbmcgaXMgc2V0IHRvIE5vbmUgd2hlbiBjcmVhdGluZyBUYWJsZSBFbGVtZW50XG4qIFRhYmxlIC0gRklYRUQgdGhlIGNvbHVtbnMgY3JhemlseSByZXNpemluZyB0aGVtc2VsdmVzIGJ1ZyEhXG4qIFRhYmxlIC0gQ2FuIHJlc2l6ZSBpbmRpdmlkdWFsIGNvbHVtbnMgbm93XG4qIFRyZWUgLSB3YXMgbm90IHJldHVybmluZyBLZXlzIGJ1dCBpbnN0ZWFkIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGtleVxuKiBTZXRJY29uIHdpbGwgc2V0IHRvIGRlZmF1bHQgYmFzZTY0IGljb24gaWYgdGhlcmUncyBhbiBlcnJvciBsb2FkaW5nIGljb25cbiogRml4IGZvciBkdXBsaWNhdGUga2V5IGVycm9yLiBXYXMgYXR0ZW1wdGluZyB0byBhZGQgYSBcInVuaXF1ZSBrZXkgY291bnRlclwiIG9udG8gZW5kIG9mIGtleXMgaWYgZHVwbGljYXRlLCBidXQgbmVlZGVkIHRvIHR1cm4gaW50byBzdHJpbmcgZmlyc3RcbiogQ29sdW1uc1xuXHQqIE5vIGxvbmdlciBleHBhbmQgbm9yIGZpbGxcblx0KiBTaXppbmcgd29ya3MgZm9yIGJvdGggc2Nyb2xsZWQgYW5kIG5vcm1hbFxuKiBTZXR0aW5nIGZvY3VzIC0gZml4ZWQgYnVnIHdoZW4gaGF2ZSB0YWJzLCBjb2x1bW5zLCBmcmFtZXMgdGhhdCBoYXZlIGVsZW1lbnRzIHRoYXQgY2FuIGdldCB0aGUgZm9jdXMuIFNldHRpbmcgZm9jdXMgb24gdG9wLWxldmVsIHdpbmRvd1xuKiBJbnB1dFRleHQgZWxlbWVudHMgd2lsbCBub3cgY2F1c2Ugcm93cyB0byBleHBhbmQgZHVlIHRvIFggZGlyZWN0aW9uIGV4cGFuc2lvblxuKiBGcmFtZSAtIFRyeWluZyB0byBzZXQgdGhlIHNpemUgYnV0IGRvZXNuJ3Qgc2VlbSB0byBiZSBzZXR0aW5nIGl0IGNvcnJlY3RseVxuKiBUYWJzIHdpbGwgbm93IGV4cGFuZCAmIGZpbGwgbm93IChJIGhvcGUgdGhpcyBpcyBPSyEhISlcblxuIyMjIFVwY29taW5nXG5NYWtlIHN1Z2dlc3Rpb25zIHBlb3BsZSEgIEZ1dHVyZSByZWxlYXNlIGZlYXR1cmVzXG5cbiMjIENvZGUgQ29uZGl0aW9uXG5cbiAgICBNYWtlIGl0IHJ1blxuICAgIE1ha2UgaXQgcmlnaHRcbiAgICBNYWtlIGl0IGZhc3RcblxuSXQncyBhIHJlY2lwZSBmb3Igc3VjY2VzcyBpZiBkb25lIHJpZ2h0LiAgUHlTaW1wbGVHVUkgaGFzIGNvbXBsZXRlZCB0aGUgXCJNYWtlIGl0IHJ1blwiIHBoYXNlLiAgSXQncyBmYXIgZnJvbSBcInJpZ2h0XCIgaW4gbWFueSB3YXlzLiAgVGhlc2UgYXJlIGJlaW5nIHdvcmtlZCBvbi4gIFRoZSBtb2R1bGUgaXMgcGFydGljdWxhcmx5IHBvb3IgZm9yIFBFUCA4IGNvbXBsaWFuY2UuICBJdCB3YXMgYSBsZWFybmluZyBleGVyY2lzZSB0aGF0IHR1cm5lZCBpbnRvIGEgc29tZXdoYXQgY29tcGxldGUgR1VJIHNvbHV0aW9uIGZvciBsaWdodHdlaWdodCBwcm9ibGVtcy5cblxuV2hpbGUgdGhlIGludGVybmFscyB0byBQeVNpbXBsZUdVSSBhcmUgYSB0YWQgc2tldGNoeSwgdGhlIHB1YmxpYyBpbnRlcmZhY2VzIGludG8gdGhlIFNESyBhcmUgbW9yZSBzdHJpY3RseSBkZWZpbmVkIGFuZCBjb21wbHkgd2l0aCBQRVAgOCBmb3IgdGhlIG1vc3QgcGFydC5cblxuUGxlYXNlIGxvZyBidWdzIGFuZCBzdWdnZXN0aW9ucyBpbiB0aGUgR2l0SHViISAgSXQgd2lsbCBvbmx5IG1ha2UgdGhlIGNvZGUgc3Ryb25nZXIgYW5kIGJldHRlciBpbiB0aGUgZW5kLCBhIGdvb2QgdGhpbmcgZm9yIHVzIGFsbCwgcmlnaHQ/XG5cbiMjIERlc2lnblxuXG5BIG1vbWVudCBhYm91dCB0aGUgZGVzaWduLXNwaXJpdCBvZiBgUHlTaW1wbGVHVUlgLiAgRnJvbSB0aGUgYmVnaW5uaW5nLCB0aGlzIHBhY2thZ2Ugd2FzIG1lYW50IHRvIHRha2UgYWR2YW50YWdlIG9mIFB5dGhvbidzIGNhcGFiaWxpdGllcyB3aXRoIHRoZSBnb2FsIG9mIHByb2dyYW1taW5nIGVhc2UuXG5cbioqU2luZ2xlIEZpbGUqKlxuV2hpbGUgbm90IHRoZSBiZXN0IHByb2dyYW1taW5nIHByYWN0aWNlLCB0aGUgaW1wbGVtZW50YXRpb24gcmVzdWx0ZWQgaW4gYSBzaW5nbGUgZmlsZSBzb2x1dGlvbi4gIE9ubHkgb25lIGZpbGUgaXMgbmVlZGVkLCBQeVNpbXBsZUdVSS5weS4gIFlvdSBjYW4gcG9zdCB0aGlzIGZpbGUsIGVtYWlsIGl0LCBhbmQgZWFzaWx5IGltcG9ydCBpdCB1c2luZyBvbmUgc3RhdGVtZW50LlxuXG4qKkZ1bmN0aW9ucyBhcyBvYmplY3RzKipcbkluIFB5dGhvbiwgZnVuY3Rpb25zIGJlaGF2ZSBqdXN0IGxpa2Ugb2JqZWN0LiBXaGVuIHlvdSdyZSBwbGFjaW5nIGEgVGV4dCBFbGVtZW50IGludG8geW91ciBmb3JtLCB5b3UgbWF5IGJlIHNvbWV0aW1lcyBjYWxsaW5nIGEgZnVuY3Rpb24gYW5kIG90aGVyIHRpbWVzIGRlY2xhcmluZyBhbiBvYmplY3QuICBJZiB5b3UgdXNlIHRoZSB3b3JkIFRleHQsIHRoZW4geW91J3JlIGdldHRpbmcgYW4gb2JqZWN0LiAgSWYgeW91J3JlIHVzaW5nIGBUeHRgLCB0aGVuIHlvdSdyZSBjYWxsaW5nIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgYFRleHRgIG9iamVjdC5cblxuKipMaXN0cyoqXG5JdCBzZWVtZWQgcXVpdGUgbmF0dXJhbCB0byB1c2UgUHl0aG9uJ3MgcG93ZXJmdWwgbGlzdCBjb25zdHJ1Y3RzIHdoZW4gcG9zc2libGUuICBUaGUgZm9ybSBpcyBzcGVjaWZpZWQgYXMgYSBzZXJpZXMgb2YgbGlzdHMuICBFYWNoIFwicm93XCIgb2YgdGhlIEdVSSBpcyByZXByZXNlbnRlZCBhcyBhIGxpc3Qgb2YgRWxlbWVudHMuIFdoZW4gdGhlIGZvcm0gcmVhZCByZXR1cm5zIHRoZSByZXN1bHRzIHRvIHRoZSB1c2VyLCBhbGwgb2YgdGhlIHJlc3VsdHMgYXJlIHByZXNlbnRlZCBhcyBhIHNpbmdsZSBsaXN0LiAgVGhpcyBtYWtlcyByZWFkaW5nIGEgZm9ybSdzIHZhbHVlcyBzdXBlci1zaW1wbGUgdG8gZG8gaW4gYSBzaW5nbGUgbGluZSBvZiBQeXRob24gY29kZS5cblxuKipEaWN0aW9uYXJpZXMqKlxuV2FudCB0byB2aWV3IHlvdXIgZm9ybSdzIHJlc3VsdHMgYXMgYSBkaWN0aW9uYXJ5IGluc3RlYWQgb2YgYSBsaXN0Li4uIG5vIHByb2JsZW0sIGp1c3QgdXNlIHRoZSBga2V5YCBrZXl3b3JkIG9uIHlvdXIgZWxlbWVudHMuICBGb3IgY29tcGxleCBmb3JtcyB3aXRoIGEgbG90IG9mIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgY2hhbmdlZCBmcmVxdWVudGx5LCB0aGlzIGlzIGJ5IGZhciB0aGUgYmVzdCB3YXkgb2YgY29uc3VtaW5nIHRoZSByZXN1bHRzLlxuXG5Zb3UgY2FuIGFsc28gbG9vayB1cCBlbGVtZW50cyB1c2luZyB0aGVpciBrZXlzLiAgVGhpcyBpcyBhbiBleGNlbGxlbnQgd2F5IHRvIHVwZGF0ZSBlbGVtZW50cyBpbiByZWFjdGlvbiB0byBhbm90aGVyIGVsZW1lbnQuICBDYWxsIGBmb3JtLkZpbmRFbGVtZW50KGtleSlgIHRvIGdldCB0aGUgRWxlbWVudC5cblxuKipOYW1lZCAvIE9wdGlvbmFsIFBhcmFtZXRlcnMqKlxuVGhpcyBpcyBhIGxhbmd1YWdlIGZlYXR1cmUgdGhhdCBpcyBmZWF0dXJlZCAqKmhlYXZpbHkqKiAgaW4gYWxsIG9mIHRoZSBBUEkgY2FsbHMsIGJvdGggZnVuY3Rpb25zIGFuZCBjbGFzc2VzLiAgRWxlbWVudHMgYXJlIGNvbmZpZ3VyZWQsIGluLXBsYWNlLCBieSBzZXR0aW5nIG9uZSBvciBtb3JlIG9wdGlvbmFsIHBhcmFtZXRlcnMuICBGb3IgZXhhbXBsZSwgYSBUZXh0IGVsZW1lbnQncyBjb2xvciBpcyBjaG9zZW4gYnkgc2V0dGluZyB0aGUgb3B0aW9uYWwgYHRleHRfY29sb3JgIHBhcmFtZXRlci5cblxuKip0a2ludGVyKipcbnRraW50ZXIgaXMgdGhlIFwib2ZmaWNpYWxcIiBHVUkgdGhhdCBQeXRob24gc3VwcG9ydHMuICBJdCBydW5zIG9uIFdpbmRvd3MsIExpbnV4LCBhbmQgTWFjLiAgSXQgd2FzIGNob3NlbiBhcyB0aGUgZmlyc3QgdGFyZ2V0IEdVSSBmcmFtZXdvcmsgZHVlIHRvIGl0cyAqKip1YmlxdWl0eSoqKi4gIE5lYXJseSBhbGwgUHl0aG9uIGluc3RhbGxhdGlvbnMsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBVYnVudHUgTGludXgsIGNvbWUgcHJlLWxvYWRlZCB3aXRoIHRraW50ZXIuICAgSXQgaXMgdGhlIFwic2ltcGxlc3RcIiBvZiB0aGUgR1VJIGZyYW1ld29ya3MgdG8gZ2V0IHVwIGFuIHJ1bm5pbmcgKGFtb25nIFF0LCBXeFB5dGhvbiwgS2l2eSwgZXRjKS5cblxuRnJvbSB0aGUgc3RhcnQgb2YgdGhlIFBTRyBwcm9qZWN0LCB0a2ludGVyIHdhcyBub3QgbWVhbnQgdG8gYmUgdGhlIG9ubHkgdW5kZXJseWluZyBHVUkgZnJhbWV3b3JrIGZvciBQeVNpbXBsZUdVSS4gIEl0IGlzIG1lcmVseSBhIHN0YXJ0aW5nIHBvaW50LiAgQWxsIGpvdXJuZXlzIGJlZ2luIHdpdGggb25lIHN0ZXAgZm9yd2FyZCBhbmQgY2hvb3NpbmcgdGtpbnRlciB3YXMgdGhlIGZpcnN0IG9mIG1hbnkgc3RlcHMgZm9yIFB5U2ltcGxlR1VJLiAgTm93IHRoZXJlIGFyZSA0IHBvcnRzIHVwIGFuZCBydW5uaW5nIC0gdGtpbnRlciwgV3hQeXRob24sIFF0IGFuZCBSZW1pICh3ZWIgc3VwcG9ydClcblxuIyMgQXV0aG9yICYgT3duZXJcblxuVGhlIFB5U2ltcGxlR1VJIE9yZ2FuaXphdGlvblxuXG5UaGlzIGRvY3VtZW50YXRpb24gYXMgd2VsbCBhcyBhbGwgUHlTaW1wbGVHVUkgY29kZSBpcyBDb3B5cmlnaHQgMjAxOCwgMjAxOSBieSBQeVNpbXBsZUdVSS5vcmdcblxuU2VuZCBjb3JyZXNwb25kYW5jZSB0byBQeVNpbXBsZUdVSUBQeVNpbXBsZUdVSS5jb21cblxuIyMgTGljZW5zZVxuXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgKExHUEwgMykgK1xuXG4jIyBBY2tub3dsZWRnbWVudHNcblxuVGhlcmUgYXJlIGEgbnVtYmVyIG9mIHBlb3BsZSB0aGF0IGhhdmUgYmVlbiBrZXkgY29udHJpYnV0b3JzIHRvIHRoaXMgcHJvamVjdCBib3RoIGRpcmVjdGx5IGFuZCBpbmRpcmVjdGx5LiAgUGFpZCBwcm9mZXNzaW9uYWwgaGVscCBoYXMgYmVlbiBkZXBsb3llZCBhIG51bWJlciBvZiBjcml0aWNhbCB0aW1lcyBpbiB0aGUgcHJvamVjdCdzIGhpc3RvcnkuICBUaGlzIGhhcHBlbnMgaW4gdGhlIGxpZmUgb2Ygc29mdHdhcmUgZGV2ZWxvcG1lbnQgZnJvbSB0aW1lIHRvIHRpbWUuXG5cbklmIHlvdSd2ZSBoZWxwZWQsIEkgc3VyZSBob3BlIHRoYXQgeW91IGZlZWwgbGlrZSB5b3UndmUgYmVlbiBwcm9wZXJseSB0aGFua2VkLiAgVGhhdCB5b3UgaGF2ZSBiZWVuIHJlY29nbml6ZWQuICBJZiBub3QsIHRoZW4gc2F5IHNvbWV0aGluZy4uLi4gZHJvcCBhbiBlbWFpbCB0byBjb21tZW50c0BQeVNpbXBsZUdVSS5vcmcuXG5cbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL01pa2VUaGVXYXRjaEd1eS9QeVNpbXBsZUdVSSIs
ICAgICJrZXl3b3JkcyI6ICJHVUkgVUkgdGtpbnRlciB3cmFwcGVyIHNpbXBsZSBlYXN5IGJlZ2lubmVyIG5vdmljZSBzdHVkZW50IGdyYXBoaWNzIHByb2dyZXNzYmFyIHByb2dyZXNzbWV0ZXIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIlB5U2ltcGxlR1VJMjciLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlTaW1wbGVHVUkyNy8iLA==
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlTaW1wbGVHVUkyNy8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9NaWtlVGhlV2F0Y2hHdXkvUHlTaW1wbGVHVUki
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvUHlTaW1wbGVHVUkyNy8yLjQuMS8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImZ1dHVyZSI=
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIlB5dGhvbiAyLjcgdmVyc2lvbiBvZiBQeVNpbXBsZUdVSSAtIEdVSSBTREsgTGF1bmNoZWQgaW4gMjAxOCBBY3RpdmVseSBkZXZlbG9wZWQgYW5kIHN1cHBvcnRlZC4gU3VwZXItc2ltcGxlIHRvIGNyZWF0ZSBjdXN0b20gR1VJJ3MuICBQeXRob24gMi43ICYgMyBTdXBwb3J0LiAxMDAgRGVtbyBwcm9ncmFtcyAmIENvb2tib29rIGZvciByYXBpZCBzdGFydC4gRXh0ZW5zaXZlIGRvY3VtZW50YXRpb24uIEV4YW1wbGVzIHVzaW5nIE1hY2hpbmUgTGVhcm5pbmcoR1VJLCBPcGVuQ1YgSW50ZWdyYXRpb24sICBDaGF0dGVyYm90KSwgUmFpbm1ldGVyIFN0eWxlIEZsb2F0aW5nIERlc2t0b3AgV2lkZ2V0cywgTWF0cGxvdGxpYiArIFB5cGxvdCBpbnRlZ3JhdGlvbiwgYWRkIEdVSSB0byBjb21tYW5kIGxpbmUgc2NyaXB0cywgUERGICYgSW1hZ2UgVmlld2VyLiBHcmVhdCBmb3IgYmVnaW5uZXJzIGFzIHdlbGwgYXMgYWR2YW5jZWQgR1VJIHByb2dyYW1tZXJzIiw=
ICAgICJ2ZXJzaW9uIjogIjIuNC4xIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA1NzkyNzE3LA==
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjAuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4ZmE1MGFmYzE3Zjg0YzRhNWVmNjBhYzE0ZDI0MjJlNThmODIyZmUzZDkyZGIyYjA4NTI3ZmFkZDQ0MmIyOTVkIiw=
ICAgICAgICAgICJtZDUiOiAiYzVmNDZhYzc5OTQ3OTYwMmM1OTIwOTAxOGQ4NmIyYmMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNmY1MzYzZjkzYjE4YjNmMGY4ZTE3YmU4YWM5ZThjMmNmOWMzNzM3MzgxMmUxZGJiZTkxMDBkOWEwNWI5MWU0OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjAuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjNWY0NmFjNzk5NDc5NjAyYzU5MjA5MDE4ZDg2YjJiYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDg3MTE5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wOS0yNVQxODozODoxMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wOS0yNVQxODozODoxMC4wODYyODlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Zi9hNS8wYWZjMTdmODRjNGE1ZWY2MGFjMTRkMjQyMmU1OGY4MjJmZTNkOTJkYjJiMDg1MjdmYWRkNDQyYjI5NWQvUHlTaW1wbGVHVUkyNy0xLjAuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4YjNlMGY1ZWNjOThmMGNhMzQwYTViMzJkMWIwYmFjYTc3N2I0OGMzYTBmYjY5MjMyYWU1NTNlYTc5ODBiOGM5Iiw=
ICAgICAgICAgICJtZDUiOiAiZmI5YmNlNjBkMmNkNDY0OWIzNWU1YzRhMDQ2MWRjZDYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDhkZDA0YzAxNmVlODE1YjE1Y2NhZDE5NzQxNDNmY2E3YTdjN2RjNTE5NThmYTg1MTJkNzI0NzA5OGVkZDhkZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjAuMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmYjliY2U2MGQyY2Q0NjQ5YjM1ZTVjNGEwNDYxZGNkNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzNjY0OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wOS0yNVQxODozODoxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wOS0yNVQxODozODoxOS4zNDUwMDZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yi8zZS8wZjVlY2M5OGYwY2EzNDBhNWIzMmQxYjBiYWNhNzc3YjQ4YzNhMGZiNjkyMzJhZTU1M2VhNzk4MGI4YzkvUHlTaW1wbGVHVUkyNy0xLjAuMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjAuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMjU3NDhkOWEwYWRiMTQzNGFjYjAwODU0ODA0YmViYzcwZmYwMzY5MmNlNjQ1ZDBhYzY1ODhkYjFlMmFlYWM2Iiw=
ICAgICAgICAgICJtZDUiOiAiNWZlMmM2NGM5NzA5ZTEyYzdlNDBiMzMyNGVlYjE5NjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTUxMzQ4M2Q1ZGZmZmYyMjhiNjE2OTc0MDdhMzZhYzkzMzFkMzZhNzQzYTRlMDNmOTliOTQ5YjNlZTUxOWQ2NyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjAuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1ZmUyYzY0Yzk3MDllMTJjN2U0MGIzMzI0ZWViMTk2NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDg3ODE5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wOS0yNlQyMjo1NTo0MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wOS0yNlQyMjo1NTo0MS42MjU5MTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMi81Ny80OGQ5YTBhZGIxNDM0YWNiMDA4NTQ4MDRiZWJjNzBmZjAzNjkyY2U2NDVkMGFjNjU4OGRiMWUyYWVhYzYvUHlTaW1wbGVHVUkyNy0xLjAuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3YTQzMTU5MjkzZTA5N2E3N2I1NGUwMGJjY2M3MTU3ZjJkMmRjMmMwMjU5ODQ3NzcyYjJmNzIyODkxYTliMjczIiw=
ICAgICAgICAgICJtZDUiOiAiYTg0NjBmNWVkODczN2ZkMmU5NzRiN2U2OGM1YWYzMTkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWIxYWQwMjRjMGMyZGNmZTYyMjY5YjZlMDM5Y2JkZDAzNzU3MmQ1MmVmNjUxNzZlYWZkNTJkNTA0YmI3NDVjMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjAuNC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhODQ2MGY1ZWQ4NzM3ZmQyZTk3NGI3ZTY4YzVhZjMxOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzODE1OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0wOS0yNlQyMjo1NTo0MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0wOS0yNlQyMjo1NTo0My45ODY5MzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83YS80My8xNTkyOTNlMDk3YTc3YjU0ZTAwYmNjYzcxNTdmMmQyZGMyYzAyNTk4NDc3NzJiMmY3MjI4OTFhOWIyNzMvUHlTaW1wbGVHVUkyNy0xLjAuNC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyYzhlY2U4ZTBiZWI5Mzk2YjA0MjViMjY4YWI4NzY3ZTRjMjdlYzUyODNkNmMzNmI0MzUxMWQzZGY4ZDI2M2JiIiw=
ICAgICAgICAgICJtZDUiOiAiM2Y4Y2U4MDg3ODJmMGYxZWMyMjBjZjJkNDNkY2UxNDciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiM2Q1MjkwY2UxYmRiYTljN2E1ODBjM2YwZDA2YTA0OWI2YjEyMzBlNjY5NTQ5NTRhZTUyYmM0M2RjOWEwODk0ZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzZjhjZTgwODc4MmYwZjFlYzIyMGNmMmQ0M2RjZTE0NyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDkxMzU2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0wMlQwNToyMDo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0wMlQwNToyMDo1NS4yNzM0OTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yYy84ZS9jZThlMGJlYjkzOTZiMDQyNWIyNjhhYjg3NjdlNGMyN2VjNTI4M2Q2YzM2YjQzNTExZDNkZjhkMjYzYmIvUHlTaW1wbGVHVUkyNy0xLjEuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMGYwZDJjMWYyMGZhMGE5MjRmYWU2NjJkZDVjZWU0MGQ4YmRlNWU4YTc5NzEwYzdiZDdiMmI5OTA3MjVmMGE3Iiw=
ICAgICAgICAgICJtZDUiOiAiZmM5Yzc3YjZiM2QzNjM2YjE4MzE2N2Y2NDBkNmQ4MjgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmM0MTEyMTc2NzU0NDQ4ZmU1OGIwNTJlMzE0YzllNmI0OWMzNGRkOTg5MzU2YWMwY2FlMjU0ZDZmZTRiNzkxOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmYzljNzdiNmIzZDM2MzZiMTgzMTY3ZjY0MGQ2ZDgyOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDA5Myw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0wMlQwNToyMDo1OSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0wMlQwNToyMDo1OS41MzMyMjdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMC9mMC9kMmMxZjIwZmEwYTkyNGZhZTY2MmRkNWNlZTQwZDhiZGU1ZThhNzk3MTBjN2JkN2IyYjk5MDcyNWYwYTcvUHlTaW1wbGVHVUkyNy0xLjEuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkMmExYTFjY2ZjYzg0YjhkODkzMzYwYTY2MzkzMTQ3ZDVhMTE5YmFhNDc4NDk3NzE4N2MxZmEyZTFkMzg5M2Y1Iiw=
ICAgICAgICAgICJtZDUiOiAiYTEyMDZkMmI1ZmNhYzJmZDk3OGYyNjFiZGQxNDcyOGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTNhZGM3Mjg2ZTc0OGUzZTAzODY3MDJkZmI5NGFkYzMzZjQwNTk4YjZkZDcyZmFiYWE2NzZkNjgxNzI4MGRkNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhMTIwNmQyYjVmY2FjMmZkOTc4ZjI2MWJkZDE0NzI4ZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDkyMjcxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0wOFQxNzowNjo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0wOFQxNzowNjo1My40Nzc5MzBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kMi9hMS9hMWNjZmNjODRiOGQ4OTMzNjBhNjYzOTMxNDdkNWExMTliYWE0Nzg0OTc3MTg3YzFmYTJlMWQzODkzZjUvUHlTaW1wbGVHVUkyNy0xLjEuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxZGQ3YzY1Yjg2NWFjNTk1ZDAzNWEzMjFjZGU0YWU4MjZkNWIxMTliY2YxM2JlMWYyZTZkYTUwYjJhNDA1YTBkIiw=
ICAgICAgICAgICJtZDUiOiAiM2NiZjk5Y2JkOWI1YmExZGJjZTk0YTllYTJmYTYyY2QiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTdjOTliNzg0ODgwNGFiZjEyNzA2YjhhOGQ1ZWFlMzE3YmJmYTBmYjJmMDM1YjM5YmFhODVkNzAwNzVkYTQzYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzY2JmOTljYmQ5YjViYTFkYmNlOTRhOWVhMmZhNjJjZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDU0Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0wOFQxNzowNjo1OSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0wOFQxNzowNjo1OS4zODA3MDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xZC9kNy9jNjViODY1YWM1OTVkMDM1YTMyMWNkZTRhZTgyNmQ1YjExOWJjZjEzYmUxZjJlNmRhNTBiMmE0MDVhMGQvUHlTaW1wbGVHVUkyNy0xLjEuMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEuMyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZDk1ZDBiZWUwYTE2NjJkMDdhMDk0M2JkMzIwZWFjYTA2YTM5ZDAxYjk0NGZhN2IwYjI5ZWVhMzU1NTVjZDQ2Iiw=
ICAgICAgICAgICJtZDUiOiAiMzM1ZDFkYjgxZWU5MWE2ZDM2ZTQxNGNhYTRhZDQ1ZGYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODk5ZDY5Y2ZlNTJkODUzNTVjNDYyYzMyNTYzOWNkYTFkNTFlMTZhODQ4NTJkNWJkYWM2MGRjM2IyMjJmNTYzNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzMzVkMWRiODFlZTkxYTZkMzZlNDE0Y2FhNGFkNDVkZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDk1NzQ5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0xMVQyMDoxNTowOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0xMVQyMDoxNTowOC4zOTgwMzRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZC85NS9kMGJlZTBhMTY2MmQwN2EwOTQzYmQzMjBlYWNhMDZhMzlkMDFiOTQ0ZmE3YjBiMjllZWEzNTU1NWNkNDYvUHlTaW1wbGVHVUkyNy0xLjEuMy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjNzYzNWU5MDhmY2Q1YWZlMGMxMDI0OTU2ZmY0M2I4ZDBiYTJlNGY0MmY2ZmYzZWU4MzczYWUzZjcyMjNjYTIyIiw=
ICAgICAgICAgICJtZDUiOiAiNzM1MjY1N2UwMzkyNDhlZjNmOGQxN2RhY2FmZjA5MDMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWNjZTI1ODgyMWY3ZTExZjBlZTQ2Y2UzZDc5YTA2OWNjMTcyYWJjNjNmMGI3NTg0ODFjODg2YWQxZGM2ZjA3OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuMy50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3MzUyNjU3ZTAzOTI0OGVmM2Y4ZDE3ZGFjYWZmMDkwMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE1MDg0OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0xMVQyMDoxNToxMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0xMVQyMDoxNToxMS4xNzk2MzBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jNy82My81ZTkwOGZjZDVhZmUwYzEwMjQ5NTZmZjQzYjhkMGJhMmU0ZjQyZjZmZjNlZTgzNzNhZTNmNzIyM2NhMjIvUHlTaW1wbGVHVUkyNy0xLjEuMy50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzZWZiYTliNjViNzZjMDk1ZjMzYzVjOTI1OThjOGIzNzU1NjkyYTVjNjZiODUwNGY2M2YyMjEyZDhhNWRjZGFmIiw=
ICAgICAgICAgICJtZDUiOiAiMjMwZTQ5YTM5ZGQ2MDNmZWM2NWVmMDQyOTkzMTZiNTgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODY5YzYyNjY5NWVkYjMzODA1OTk3ZmU5ZTRkZjJjNTlhM2EzOGRjY2I0ZWI1OTdhMjY2NWM0ZTUxZTBlMzA5NiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyMzBlNDlhMzlkZDYwM2ZlYzY1ZWYwNDI5OTMxNmI1OCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwMTA3NSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0xNlQxNjowNToyNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0xNlQxNjowNToyNS40MzIxMTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zZS9mYi9hOWI2NWI3NmMwOTVmMzNjNWM5MjU5OGM4YjM3NTU2OTJhNWM2NmI4NTA0ZjYzZjIyMTJkOGE1ZGNkYWYvUHlTaW1wbGVHVUkyNy0xLjEuNC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyNWVmOTIwOWJlYTFmMzZiYTcwZDBiZjA1MWNkMzM3NDE5ZjE3ZWJjNzIzN2RhZGE5NTQzZmUwYmQwMGU0YzljIiw=
ICAgICAgICAgICJtZDUiOiAiOWIxZjA3Mjg2ZWM0YzE3YTVlNTAyZGFjZmQ1N2EyMDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjM3NTRlZTAyYTIwZWVkZDNmZTkxYjdhMmI0NzRiOTE1MmVmNGYwOGY1NjFkODQyODdmMTM0Mzg5ZWFmZGE1OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEuNC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5YjFmMDcyODZlYzRjMTdhNWU1MDJkYWNmZDU3YTIwOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE2MTQyMCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0xNlQxNjowNTozMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0xNlQxNjowNTozMi4yMzM4NDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNS9lZi85MjA5YmVhMWYzNmJhNzBkMGJmMDUxY2QzMzc0MTlmMTdlYmM3MjM3ZGFkYTk1NDNmZTBiZDAwZTRjOWMvUHlTaW1wbGVHVUkyNy0xLjEuNC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjExLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlNWUyYjI2NjYzYTQ3YmI5OGRkYzVkYWI2MjE2OThhMWQ0M2JjOTI2YzJhZjg5Y2NhYTI2Mjg4ZGQyZGE4MDE1Iiw=
ICAgICAgICAgICJtZDUiOiAiOTBhNmM3YmZiMjdjNWY4OWVkMmVkYTNkNmY1M2E2ODgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTQ4OTcyZWU2NmE2ZTI0NmIwM2EwYmE3Y2ZjNGZhYmQzMjM1ODA4N2NhZTM3YjljYWY4M2I4MDk0ZjQ4ZWQ1NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjExLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5MGE2YzdiZmIyN2M1Zjg5ZWQyZWRhM2Q2ZjUzYTY4OCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExMDI0Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yOFQwNTozODo1NCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yOFQwNTozODo1NC41MzQxNTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lNS9lMi9iMjY2NjNhNDdiYjk4ZGRjNWRhYjYyMTY5OGExZDQzYmM5MjZjMmFmODljY2FhMjYyODhkZDJkYTgwMTUvUHlTaW1wbGVHVUkyNy0xLjExLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjMDFjZmUxMWNkZjUwY2QxNDI0NjcwOWIwZGYwMTJmMDkxMzIyNDNhZmFmYzgwZGMyZjA2Y2E2ODIyNWFjY2Q4Iiw=
ICAgICAgICAgICJtZDUiOiAiMThkYTNjYWQzMDdiOWExMWRhN2FlMzgyMWVhY2FkNWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzdkOTM5ZmJiN2Y3MTgwMmNiOWU1MjI1Yzk5ZWEwNDJmNGQzZWY3ZWJmMmM2ZTBmZDAwMDY4OWMzYTNkMmMwYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjExLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxOGRhM2NhZDMwN2I5YTExZGE3YWUzODIxZWFjYWQ1YyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3NjA0Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yOFQwNTozOTowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yOFQwNTozOTowMS44OTM3NzVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jMC8xYy9mZTExY2RmNTBjZDE0MjQ2NzA5YjBkZjAxMmYwOTEzMjI0M2FmYWZjODBkYzJmMDZjYTY4MjI1YWNjZDgvUHlTaW1wbGVHVUkyNy0xLjExLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEyLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4Mzg2MzJjN2U0Mzk0YjE5ZjczMTQ2YmE0YmEzMjE3M2ZlNDM2YTgwNDViZjQzZTlhYjgwNzQ0NmNjYzA5NTg0Iiw=
ICAgICAgICAgICJtZDUiOiAiZGU3MDllOGEyMmYzYTk2NTAwMjg5Mzg0NTMwYjJkYTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTBkOWI1MGNiZjkyZWZkZTliYmU3NjVkOGQ1Yzk1ZDY3MTZkNjk2OGJiYzNmNzJiZTk0MDcyODVkOTY0Mjc2MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkZTcwOWU4YTIyZjNhOTY1MDAyODkzODQ1MzBiMmRhNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExMDI4Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yOVQwMDowNToyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yOVQwMDowNToyNi41MDMyMDdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84My84Ni8zMmM3ZTQzOTRiMTlmNzMxNDZiYTRiYTMyMTczZmU0MzZhODA0NWJmNDNlOWFiODA3NDQ2Y2NjMDk1ODQvUHlTaW1wbGVHVUkyNy0xLjEyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NzAzNmNkMzZjMzg2ZmQwNzM4MWM5YzNiN2Q4MTE4NDNhNmEwY2U0MjFkODNjODFhNDI2YWE5YmQxYmI1Njk0Iiw=
ICAgICAgICAgICJtZDUiOiAiYjA3NzI3YTZhOTJhMTMwMmM3M2E2NzE0ZTUwMTBlYWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTAwZDc3YzYxMDZkOTBhMDQ3MzRjMjM2M2NkZjY3NjcyZDE2NTQzZjkyZTY1YThlOWMxMTBlM2IxZmYyZjJlMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEyLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiMDc3MjdhNmE5MmExMzAyYzczYTY3MTRlNTAxMGVhYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3NjUwNiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yOVQwMDowNTozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yOVQwMDowNTozMS4wMzczNzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81Ny8wMy82Y2QzNmMzODZmZDA3MzgxYzljM2I3ZDgxMTg0M2E2YTBjZTQyMWQ4M2M4MWE0MjZhYTliZDFiYjU2OTQvUHlTaW1wbGVHVUkyNy0xLjEyLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjEzLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3N2I0NDZhNDQyZDdlZTY3Y2IxMDBlNmEyYzEzNWNmNGNmNWE3MzlkM2NmYzYzN2M4NTRhMmYzNDFlM2FlMzRhIiw=
ICAgICAgICAgICJtZDUiOiAiNGJiNzc1ZTc1OTVhZDc0ZjUxMjY5OGY0MzFjNTg5NWEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjU3YmQyNDBkYzdmNGI0NzQyMjFiZTI1MzRjMGVmNTEyNjlhNWI4M2ZiMTcxZjFmMjYyMzc0ZDY1YmI1MTUwNiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0YmI3NzVlNzU5NWFkNzRmNTEyNjk4ZjQzMWM1ODk1YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExMDk3MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0zMFQwMjozNTowNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0zMFQwMjozNTowNi4xNTA4NDhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Ny9iNC80NmE0NDJkN2VlNjdjYjEwMGU2YTJjMTM1Y2Y0Y2Y1YTczOWQzY2ZjNjM3Yzg1NGEyZjM0MWUzYWUzNGEvUHlTaW1wbGVHVUkyNy0xLjEzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmMTc1ZjFiYzA1ZWFlYzI1YTJmOWM4MmUzYWY4NWE1MjdiM2YxZmNmODdlNTQwYWUyOWE2NTVjNTQwMzUxZDQwIiw=
ICAgICAgICAgICJtZDUiOiAiOWUzNzM1ZDIyMzNjZjVhYzczODIwNzRkNWQ4ZTI2NDMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODgxYjZkYTY4ZGRjMWZlODE0ODJmMDBmMjhkNTRmMmM1NTVjNmI0MmY1ZWE4ZWVkZTYzYTIxNWRkMzQ1ZjJmOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjEzLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ZTM3MzVkMjIzM2NmNWFjNzM4MjA3NGQ1ZDhlMjY0MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3NzQzMiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0zMFQwMjozNToxMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0zMFQwMjozNToxMy4xMTAyODJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mMS83NS9mMWJjMDVlYWVjMjVhMmY5YzgyZTNhZjg1YTUyN2IzZjFmY2Y4N2U1NDBhZTI5YTY1NWM1NDAzNTFkNDAvUHlTaW1wbGVHVUkyNy0xLjEzLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE0LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ZDUxMzFmMjY5OWJhMjVlNzRlYTc5MDlkMzA4MzY2Nzk5Zjk0Yjk1NTRlZDQwMTA5NjE5NWU2YzVlZmNiZmRlIiw=
ICAgICAgICAgICJtZDUiOiAiNzc1Y2M1MDAwMDUwNWM0YjFlMGZkNjU5NmRmNzYxNGIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzUwYWQ2OGM2OTU5MTA1ODA4N2M5YjFiMWRlZjM0NGE4MGRlOGFjZmNmNjRkM2E2MzI5NDZjYjg3YTRhMWEyYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3NzVjYzUwMDAwNTA1YzRiMWUwZmQ2NTk2ZGY3NjE0YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExMjg0NSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0wMlQxNjoyNjoyMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0wMlQxNjoyNjoyMC42MDk1MDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83ZC81MS8zMWYyNjk5YmEyNWU3NGVhNzkwOWQzMDgzNjY3OTlmOTRiOTU1NGVkNDAxMDk2MTk1ZTZjNWVmY2JmZGUvUHlTaW1wbGVHVUkyNy0xLjE0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5MjQzY2U4NjJkNjNlOWY3OTUxNGJiOGU3OTM5YjMzN2FiMmE2YTJhNGE3NjI0ZDlhODNkYmVjMDFkMWUwZmM4Iiw=
ICAgICAgICAgICJtZDUiOiAiNzc5NTczN2FhMzhhYjI0MzE2OTA3YzAxNjM0MmEwNDAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTkxY2ZkOTgxYjhjNzFkOWNlMDQ0NDE0MDI5Nzg5MTFhNzMzMDUwNTZlMjJjMDgwZDY2NGY2OTQ1NTc4ODYxNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE0LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3Nzk1NzM3YWEzOGFiMjQzMTY5MDdjMDE2MzQyYTA0MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE4MDYyNSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0wMlQxNjoyNjoyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0wMlQxNjoyNjoyMy41NTM4NDlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Mi80My9jZTg2MmQ2M2U5Zjc5NTE0YmI4ZTc5MzliMzM3YWIyYTZhMmE0YTc2MjRkOWE4M2RiZWMwMWQxZTBmYzgvUHlTaW1wbGVHVUkyNy0xLjE0LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE0LjEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiNTIwM2JlMmJmOWNlZWQyY2IzNTU0YjU0NjEwMDBkYjg4ZDUyYTk5NDhjYzgwMDkwZGEyN2ZkNjA5ZWRhZTVlIiw=
ICAgICAgICAgICJtZDUiOiAiM2ViODY3NDFlYzU2OWU0ZDQ4MDYwYzJkM2MxNWU2ODQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZDBkZmM1NTAyOGQzZDE3YjBkNThlYTU4NTEyY2RjODBjMzg3M2QxMzFhMzkwNjQ4YzNlYTlkNWE3MTg2NjNhMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE0LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzZWI4Njc0MWVjNTY5ZTRkNDgwNjBjMmQzYzE1ZTY4NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExMjg4NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0wM1QwMjowMjowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0wM1QwMjowMjowNS44ODgwODhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iNS8yMC8zYmUyYmY5Y2VlZDJjYjM1NTRiNTQ2MTAwMGRiODhkNTJhOTk0OGNjODAwOTBkYTI3ZmQ2MDllZGFlNWUvUHlTaW1wbGVHVUkyNy0xLjE0LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiOTBkZGNjNzgxNGIzMTE0ZDJkNjk1MjE0ZDQzNmZiMjE3ZGQ0Y2I0OWRiNTdjN2M0ZDAxZjc5YjU3M2RhNTE4Iiw=
ICAgICAgICAgICJtZDUiOiAiZGE0MDZkN2U5NzRhNjE1Yzc1OTIxODNlNjU5MGNkZDciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjQ0NTJlYzRmNzM1Y2ZmMmY2N2M3MzNlOTgxYjc2MTcyMjliMjJkM2QxNWIwNWE1NDdiN2E4OTUwOTg1ZDViNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE0LjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkYTQwNmQ3ZTk3NGE2MTVjNzU5MjE4M2U2NTkwY2RkNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE4MDY1OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0wM1QwMjowMjoxNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0wM1QwMjowMjoxNS4zOTA2NzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iOS8wZC9kY2M3ODE0YjMxMTRkMmQ2OTUyMTRkNDM2ZmIyMTdkZDRjYjQ5ZGI1N2M3YzRkMDFmNzliNTczZGE1MTgvUHlTaW1wbGVHVUkyNy0xLjE0LjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE1LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZWNkMWZiYTI2NGVlOGZmZGFhNTlhZTgzYTBlY2I1OWZiNDYzMzEwYWEyNmVkZDI5MzliYTcyMzU4YjNlZTViIiw=
ICAgICAgICAgICJtZDUiOiAiMjg0NjM0NDE0MDE1NzQ0YzMxOWJkN2ZiNTM1MzY3ZmMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzkyM2ExYzhjNDA0MzEwOThhNjQ1NTE1NmY1YzliMjAwMDg4MjlhOGFlYzExZDU4NTgxZmIxYzM5NTNlMDJjYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyODQ2MzQ0MTQwMTU3NDRjMzE5YmQ3ZmI1MzUzNjdmYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNDY5Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0yMFQxNjowMDo1NCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0yMFQxNjowMDo1NC45NzQ1NTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZS9jZC8xZmJhMjY0ZWU4ZmZkYWE1OWFlODNhMGVjYjU5ZmI0NjMzMTBhYTI2ZWRkMjkzOWJhNzIzNThiM2VlNWIvUHlTaW1wbGVHVUkyNy0xLjE1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0NzJlOGZiNmI0MDIxMjMwN2Y5MjRiZGI1MDhkODY1ZGI2YzU1NWI4NzQwOTljZjYxNjJiZDM3YTQ1MmZmMjRjIiw=
ICAgICAgICAgICJtZDUiOiAiZjc1Zjg4ZDE1OGI3OTlkNmY2MzY2MWVjMGYzNjAzNGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWRjOWUwZDk0NGFlNDc3NjZlYWMzZmY5ZmZjZmQyYzRmMzZmZWUzNGE3ZjAxMmFhNDEyNmE0ZjJmODNjZDZhYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE1LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmNzVmODhkMTU4Yjc5OWQ2ZjYzNjYxZWMwZjM2MDM0YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE4MzExMyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0yMFQxNjowMDo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0yMFQxNjowMDo1Ny4zODU1MTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80Ny8yZS84ZmI2YjQwMjEyMzA3ZjkyNGJkYjUwOGQ4NjVkYjZjNTU1Yjg3NDA5OWNmNjE2MmJkMzdhNDUyZmYyNGMvUHlTaW1wbGVHVUkyNy0xLjE1LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE2LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3NzMwODRmZjM3OTgwN2Y0YTU3ZGM0MjIwZWIyOGFjYjlhZmFjMDFkNDAzMTc3ODAwNGNiMWIwYzU0YzUyZjZkIiw=
ICAgICAgICAgICJtZDUiOiAiZDM0YzFlMzVjNTA2MWIzNzIyYTE2OTBjMjQwZDI0OTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWRkYzBjMzEyYzBlY2I3NmVjN2IzOTk4Nzk5OGUyOWQ4YmI2N2E4NjY0NDVjZTBmNmMzMjZjODgzMmNmZDI3NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkMzRjMWUzNWM1MDYxYjM3MjJhMTY5MGMyNDBkMjQ5NSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExNDk0OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0yNlQxMzo0NjoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0yNlQxMzo0NjoyNi41MTQ4NzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Ny8zMC84NGZmMzc5ODA3ZjRhNTdkYzQyMjBlYjI4YWNiOWFmYWMwMWQ0MDMxNzc4MDA0Y2IxYjBjNTRjNTJmNmQvUHlTaW1wbGVHVUkyNy0xLjE2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyNGRhMTNkNGViMmE1ODFjMTEwMjc4Yjg2NDNkMDI5NjhlZmRlYjU2NjViMzc0ODZmNzU5YzBmNjA5OTZmMjFlIiw=
ICAgICAgICAgICJtZDUiOiAiYTAwMjUyMDM0YTc0MDdiYTRiN2YwODIwNDc0MmZhOGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTYxYTlhYzUwNDFjMTkyMTE4OTYxMDhiNDQzM2I2MzM0YmFlY2ZhZWYxNjMzZDIxZjc1OGM5ZThmNDFjZTVjNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE2LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhMDAyNTIwMzRhNzQwN2JhNGI3ZjA4MjA0NzQyZmE4YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE4MzU2OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMS0yNlQxMzo0NjozMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMS0yNlQxMzo0NjozMC4wNDMxMzRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNC9kYS8xM2Q0ZWIyYTU4MWMxMTAyNzhiODY0M2QwMjk2OGVmZGViNTY2NWIzNzQ4NmY3NTljMGY2MDk5NmYyMWUvUHlTaW1wbGVHVUkyNy0xLjE2LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE3LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1YTI4YzA3MzY4NzJmYWM5MWMyN2M5YzM1Mjk2NzE0MDBjZDkzMDgxNzYyOTFmYjM3OTRiMDJhOGQ2MWEyNThlIiw=
ICAgICAgICAgICJtZDUiOiAiZTY5ODkyYWJlNTE0NWNjNTMwZDU1ODZiMGVlYzU3YWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTU3YTMzNGUxNjczOGU1NzIyYTkyY2NmYTNhMzU4OWZlNWEzZDIxMWI0ZjNmYjdiMzdjN2I0MzVkYWZmZmVmYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlNjk4OTJhYmU1MTQ1Y2M1MzBkNTU4NmIwZWVjNTdhYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExODkwMyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0wMlQxOToyNjoxNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0wMlQxOToyNjoxNS42ODQwMTFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81YS8yOC9jMDczNjg3MmZhYzkxYzI3YzljMzUyOTY3MTQwMGNkOTMwODE3NjI5MWZiMzc5NGIwMmE4ZDYxYTI1OGUvUHlTaW1wbGVHVUkyNy0xLjE3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ODQ2NzZiMDQ0MTM3ZmFjMWFhOWQ5ZGJhNGM1MmIwOWUyNmY0OWU5ZjllZWM1MzhhZGY4NDU4ZmRhNmU1Yzk0Iiw=
ICAgICAgICAgICJtZDUiOiAiY2ZjMzFkYzdjYTI4MDhiMjIxNjkzYmM4NjM4NDNjMzIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZGUyYzA3ZDViNGU4NTZkYjQzZjViY2FhZTZhODYzYTE2MjA5YTkxNDA2MjQwZjU3NWViNjg2ZDFjY2Y5YWFmOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE3LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjZmMzMWRjN2NhMjgwOGIyMjE2OTNiYzg2Mzg0M2MzMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE5MDE0Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0wMlQxOToyNjoxOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0wMlQxOToyNjoxOC4wNTc0NDlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83OC80Ni83NmIwNDQxMzdmYWMxYWE5ZDlkYmE0YzUyYjA5ZTI2ZjQ5ZTlmOWVlYzUzOGFkZjg0NThmZGE2ZTVjOTQvUHlTaW1wbGVHVUkyNy0xLjE3LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE3LjIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2NTk4MDc4MWJlMDQzYTc3NDM4OGRmZjc5MzYyMGVkYmJjMWFiOTJlMzExZGQ2MmZiYjlkNDVmNDRhNzIwMTYyIiw=
ICAgICAgICAgICJtZDUiOiAiNTg2NGY4ZWRiNTYwMGRjNzhiNjFjZmIxZjM1YzNhMjIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNmRhODMzYjIxZTQ1YmQ0MjM5M2FmNTliMDcyNzEyMDI4MWQwOTk3ZWZjMDUzYjA4YWIxMzRkNDRlMTE1NDNmZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE3LjItcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1ODY0ZjhlZGI1NjAwZGM3OGI2MWNmYjFmMzVjM2EyMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDExODg2NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0wN1QxOToyNzoyNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0wN1QxOToyNzoyNy40OTQxMTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82NS85OC8wNzgxYmUwNDNhNzc0Mzg4ZGZmNzkzNjIwZWRiYmMxYWI5MmUzMTFkZDYyZmJiOWQ0NWY0NGE3MjAxNjIvUHlTaW1wbGVHVUkyNy0xLjE3LjItcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2ZjE2OGNiNzY5ODdlNzQ4MTZkNGZiMjQ3ZDc0MzVmNzhhNzNkOGExMTJiYTY3NTBiYjI5MWE2MDk4MDVmNDUyIiw=
ICAgICAgICAgICJtZDUiOiAiZjVlMTM1MmE0YTMyZGRmZDQxMGI3ZjRiNjZhMDMyOGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjRmMzRiOWQxNDUwYzhkYTllYmEwZjE0OWEzNDc1MjE0ZGU0YTVmYWY5YzdlYWU3YTEzZjE0ZmY1MWFkYmM3YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE3LjIudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmNWUxMzUyYTRhMzJkZGZkNDEwYjdmNGI2NmEwMzI4ZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE5MDExNyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0wN1QxOToyNzoyOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0wN1QxOToyNzoyOS45MzUxOTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Zi8xNi84Y2I3Njk4N2U3NDgxNmQ0ZmIyNDdkNzQzNWY3OGE3M2Q4YTExMmJhNjc1MGJiMjkxYTYwOTgwNWY0NTIvUHlTaW1wbGVHVUkyNy0xLjE3LjIudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjE4LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwYzU4YWZlYjQzYTE5NDEzNTQ4M2RhYzcyOGUyOWMyMTc2YzI4MTcxNGUzYThkNjAyMjQ2ZDM5Y2M0MTI1OTdjIiw=
ICAgICAgICAgICJtZDUiOiAiNTg3NDdkYzNmMjExNDkxMDhkOWMyODQwMDJkYTc5M2MiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTY1ZmRmZWFkMjAxZmRjZDdlYjkxNTU1MzlkYmJiYzE3OWQ1NjIxNmZlNTlmYzU2OTk0YTc0NTk4NjI0NmNlMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1ODc0N2RjM2YyMTE0OTEwOGQ5YzI4NDAwMmRhNzkzYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEyMTkyNyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0xMVQxODowNzozMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0xMVQxODowNzozMi4wMDc4MjdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wYy81OC9hZmViNDNhMTk0MTM1NDgzZGFjNzI4ZTI5YzIxNzZjMjgxNzE0ZTNhOGQ2MDIyNDZkMzljYzQxMjU5N2MvUHlTaW1wbGVHVUkyNy0xLjE4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjZTBhNDZmMWNhN2VmMWM4ODM5NjZhMGMwMTQzNDExYjlkODY5Y2IwMWY5MDRlZTJlZmYxMDhjYzEwOWUzNzEwIiw=
ICAgICAgICAgICJtZDUiOiAiMjRlNTFjZTY4YTRjYzU3YjRmYmUyMjQyZTYxMzYxNmQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWFjMjcxZDA2ODhiNzViZjdlNjA1M2U2MjMzODYxMjZmMmFjZGEwODg5YzAyNGY4MTY1ZjQ0NzE2M2NkMTU3MCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjE4LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyNGU1MWNlNjhhNGNjNTdiNGZiZTIyNDJlNjEzNjE2ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE5NTc5OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0xMVQxODowNzozNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0xMVQxODowNzozNi4zOTgwNzhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jZS8wYS80NmYxY2E3ZWYxYzg4Mzk2NmEwYzAxNDM0MTFiOWQ4NjljYjAxZjkwNGVlMmVmZjEwOGNjMTA5ZTM3MTAvUHlTaW1wbGVHVUkyNy0xLjE4LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmMWRiZTgzYzhjMWZlODAyM2VmMmM1MmRkZDkyNzgyZTQ5OWRjZWUwODcwZGJkMGZlY2E2ZWFhZThkOTUwMmFlIiw=
ICAgICAgICAgICJtZDUiOiAiNmI5M2U0YzBhOWZiMGQ0MTFlMTVhM2U2NTM3MmEwZTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjRhMzE3NWVkZjNlMWYwYjNlOTJiZjhiZWNkZWUwNzdhZDg2ZjdmYTNiOTJiZDY4YzM3MWU4NmYwMTI4MGQxMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2YjkzZTRjMGE5ZmIwZDQxMWUxNWEzZTY1MzcyYTBlMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwNzE3Myw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yMFQxNTo1ODo0MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yMFQxNTo1ODo0My41ODM5ODVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mMS9kYi9lODNjOGMxZmU4MDIzZWYyYzUyZGRkOTI3ODJlNDk5ZGNlZTA4NzBkYmQwZmVjYTZlYWFlOGQ5NTAyYWUvUHlTaW1wbGVHVUkyNy0xLjIuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3MTI0M2VmOGJkNzM5YWE3N2I0MmE0ZmQ1YjUzZmY0NzU3ZWNkMjNlYTYzNDg5M2IyNGZhY2NmNGRjMTBkMmUzIiw=
ICAgICAgICAgICJtZDUiOiAiMTdlMmZiOWRlZGJjNWNiZjVkMzM0ZDMzNzNkMDBmNWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjg3NWQxNjZhNTE0Y2ZhOGUwZTEyZjIyYzE1NzVkMGE4MmIyYzQzN2IwODgzMTFmM2YzZTU0OGUwZjI3YjRjMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxN2UyZmI5ZGVkYmM1Y2JmNWQzMzRkMzM3M2QwMGY1ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3MTI1Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yMFQxNTo1ODo1MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yMFQxNTo1ODo1Mi4zNDI3MDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83MS8yNC8zZWY4YmQ3MzlhYTc3YjQyYTRmZDViNTNmZjQ3NTdlY2QyM2VhNjM0ODkzYjI0ZmFjY2Y0ZGMxMGQyZTMvUHlTaW1wbGVHVUkyNy0xLjIuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxYmMzYzQ1ZWUwMzFkYmI4NWYzYWU5OGI5MmYzYjBhMjMzMTc5ZWVkNzgxZWQzODI0YTIyZTk0Yzk4MDJmOTQxIiw=
ICAgICAgICAgICJtZDUiOiAiNWZlMTcwMDY5YmUzYThlMTNjMDM3MDNlY2RkZmIxMzgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzZhOTAwYjM1ZmFkM2IxNmQzZmRlMzhhOGNiZDA1NjljNzc3MDBiZDY5NjJlZTIxNjFlNTMxNDA2NjY2ZDM2NyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1ZmUxNzAwNjliZTNhOGUxM2MwMzcwM2VjZGRmYjEzOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwNzMzNyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yMFQyMjowMzoyNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yMFQyMjowMzoyNy43MTk0MjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xYi9jMy9jNDVlZTAzMWRiYjg1ZjNhZTk4YjkyZjNiMGEyMzMxNzllZWQ3ODFlZDM4MjRhMjJlOTRjOTgwMmY5NDEvUHlTaW1wbGVHVUkyNy0xLjIuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2Mjk1Y2YwMTY5MzIyNTRlZTM3NDJkZjc1M2QzZThlNWNkNTEzMWE3ZTc2ZTE2NWRmNDU3NDcyMDg0NjIwOTJmIiw=
ICAgICAgICAgICJtZDUiOiAiMjg2NjM0ZjJjNTFjMjUxZThjNGY2MGZlNTg2NDViODMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODk5MjM5ZGViYjI1NzdhY2Q3NWFiMDFmOTE0YmQ5YWFlOWU1ZWM3MzRkMjY4ZWUxODJmYWUxYjVmMzY1MDI2MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyODY2MzRmMmM1MWMyNTFlOGM0ZjYwZmU1ODY0NWI4MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3MTQ5NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yMFQyMjowMzozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yMFQyMjowMzozMS4yODU2MThaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Mi85NS9jZjAxNjkzMjI1NGVlMzc0MmRmNzUzZDNlOGU1Y2Q1MTMxYTdlNzZlMTY1ZGY0NTc0NzIwODQ2MjA5MmYvUHlTaW1wbGVHVUkyNy0xLjIuMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIuMyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2Y2I1NDljMzBlNGI2MDA3MmNmNjMxZTc4YjcyM2Q3MzEwNmEyZGM4MzI2NDU5YWUyMTc3YzUxNTQ1MWEwNGQ3Iiw=
ICAgICAgICAgICJtZDUiOiAiNjI2MWI4MmZjN2RmZTkyODAxZWZlMjZiNWVlMjlhNTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjYzY2NjMWNhNTE5NmUwMWJlYjc4Y2QwZDYzYWE0N2RlMzQ4ZDRjYmZiNmQxY2FjNWNmZThmNDk4YTFjOGVkMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2MjYxYjgyZmM3ZGZlOTI4MDFlZmUyNmI1ZWUyOWE1NSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEwODEwMCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yM1QxNzoyMzo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yM1QxNzoyMzo1My41MzE1MjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Yy9iNS80OWMzMGU0YjYwMDcyY2Y2MzFlNzhiNzIzZDczMTA2YTJkYzgzMjY0NTlhZTIxNzdjNTE1NDUxYTA0ZDcvUHlTaW1wbGVHVUkyNy0xLjIuMy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmMzY3NzFkYjdhMjRhNzE4YjZhMjk1NzRmNWQxMzYzNmE2OGMyNGVmMTkwOWUwY2EyZjdjNmZiYjNkYzE0MzZiIiw=
ICAgICAgICAgICJtZDUiOiAiOWYxNWNiNjlmY2VhNGNhYWY2OWM5ZDUxODQ3YmJiNzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzUxYWVjYmNmYTU2NDdmZDY1ZTBkYmYyODY1NDFmZDQxZjY2ZWRhM2U5MzE2YjU1YmU3MzQ0MGNjZjcwZTQ5MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIuMy50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ZjE1Y2I2OWZjZWE0Y2FhZjY5YzlkNTE4NDdiYmI3MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE3MjUwNiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMC0yM1QxNzoyMzo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMC0yM1QxNzoyMzo1Ny4zMzU0NDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mMy82Ny83MWRiN2EyNGE3MThiNmEyOTU3NGY1ZDEzNjM2YTY4YzI0ZWYxOTA5ZTBjYTJmN2M2ZmJiM2RjMTQzNmIvUHlTaW1wbGVHVUkyNy0xLjIuMy50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIwLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ZjlhYmE2YzY5YTQ5ODE4NWQ0Zjc5ODlhOTQ4OTI2MmNkYjM4ODNmMDY0YmU5NjBjNDc5ZTA5MjFkNjJlYjJkIiw=
ICAgICAgICAgICJtZDUiOiAiYTA3OWVhNjFhNWM2OTIyOGIyZDI0MGUxNDdjYjE2MmQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGI1MzQ5ZTk3NDI1Y2IyNDdhYzZmZmY5YWIzOTE0ZjM5NDQ2YzFlNzY5MTM5ZWExYTJmYTE4YzZhMzc0ZWM4ZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIwLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhMDc5ZWE2MWE1YzY5MjI4YjJkMjQwZTE0N2NiMTYyZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEyNDQ2MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0xOFQyMjoxOToxMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0xOFQyMjoxOToxMS41MDIyMTNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Zi85YS9iYTZjNjlhNDk4MTg1ZDRmNzk4OWE5NDg5MjYyY2RiMzg4M2YwNjRiZTk2MGM0NzllMDkyMWQ2MmViMmQvUHlTaW1wbGVHVUkyNy0xLjIwLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4MTVlNGIyYmE3YjM3OWQ4MTc4MjRmZmExMWY1YTEwNDM1Y2RkNDYzMTc4YmEyOGJhNzY1Yjk4ZGM1M2VkNGNkIiw=
ICAgICAgICAgICJtZDUiOiAiNGJlZTIwNTJlMjQ5YzdkYTJhYWFhZTljMGJmMTZlODUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzVlOTM5MzU0NWNjN2YwODM2MjkzMmE0ZmQ5M2Q0NmIwZTdlODMzZWE0ZDNlMTg4MjlmNWNlZjQ0YTg4OWE2YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIwLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0YmVlMjA1MmUyNDljN2RhMmFhYWFlOWMwYmYxNmU4NSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE5OTQxNCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0xOFQyMjoxOToxMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0xOFQyMjoxOToxMy44MDcyMjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84MS81ZS80YjJiYTdiMzc5ZDgxNzgyNGZmYTExZjVhMTA0MzVjZGQ0NjMxNzhiYTI4YmE3NjViOThkYzUzZWQ0Y2QvUHlTaW1wbGVHVUkyNy0xLjIwLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIxLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzYWUzOThiMWE0NWM3YzM4ZWUwYjVkOTg1YTg0MTI3NmU3YWM0ZGI0OGZmZmVkMjhmN2MyYmE2NmNiYzMyM2Q0Iiw=
ICAgICAgICAgICJtZDUiOiAiMzQ4NjM2ZmE0NmU3MjY2ODBiZDRlNmVkOWUzMmZiMmMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODRkNjJjY2E2YzczYmY5NDgxNTg0ZjAwMTYxYTRkMmMxZDcwOGUyNjgyNjNmODRjNGY3ZmUxZGJmN2UyMjk1NiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIxLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzNDg2MzZmYTQ2ZTcyNjY4MGJkNGU2ZWQ5ZTMyZmIyYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzMzQ3Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0yOVQwMjoxNDowMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0yOVQwMjoxNDowMy4xNDI5NzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYS9lMy85OGIxYTQ1YzdjMzhlZTBiNWQ5ODVhODQxMjc2ZTdhYzRkYjQ4ZmZmZWQyOGY3YzJiYTY2Y2JjMzIzZDQvUHlTaW1wbGVHVUkyNy0xLjIxLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1ZTJkMjU3ZmUyMjNmYzQ1N2JkZjc2ZTM5ODZmZmY2MWY0N2YyMDVjY2E3MmNhMDM5ZGVkN2U4ZWM5ODM1ZDM2Iiw=
ICAgICAgICAgICJtZDUiOiAiYTk4MjE4OGU5ZGViMDEyMTZhMDEzYzNiOWE1ZWJjMjciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiN2QyN2FlNzA4NmM4MTBmMDE0NDNjMWU1YTAxMmVjMWY5MTRmY2IxMThmMDNhMDdhMTZjNDM3MWE4YTk4ZjEzZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIxLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhOTgyMTg4ZTlkZWIwMTIxNmEwMTNjM2I5YTVlYmMyNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIxNDEyNCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOC0xMi0yOVQwMjoxNDoxNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOC0xMi0yOVQwMjoxNDoxNS4xNDQ5MzdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81ZS8yZC8yNTdmZTIyM2ZjNDU3YmRmNzZlMzk4NmZmZjYxZjQ3ZjIwNWNjYTcyY2EwMzlkZWQ3ZThlYzk4MzVkMzYvUHlTaW1wbGVHVUkyNy0xLjIxLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIyLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyNTZmMTc0MjA0MTYzNmYxNDk4NTQ2OGU4NmVkOTkyZDI4MTIwZTI5NjhlOWE2YTM4NTg5YzA4N2EzNjNmMmZhIiw=
ICAgICAgICAgICJtZDUiOiAiZGE4NGE1M2VlYThiYzc2YjBiYTJiNWU3ZjA4OTdlZWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDZkNjcwYjI5YzBhNzQzZTFlYTNkYjI1M2M5YzE2NjI3ZGM5ZmVhMWIwNTA0OTE2ZjM4MGJhMDFjNDY4MGNiNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkYTg0YTUzZWVhOGJjNzZiMGJhMmI1ZTdmMDg5N2VlZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzNDQ3MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xM1QxNzozOToxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xM1QxNzozOToxOS42MDQxODBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNS82Zi8xNzQyMDQxNjM2ZjE0OTg1NDY4ZTg2ZWQ5OTJkMjgxMjBlMjk2OGU5YTZhMzg1ODljMDg3YTM2M2YyZmEvUHlTaW1wbGVHVUkyNy0xLjIyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiMTdhMTZmZDUwYTE2OWY4YWFlM2M3OTQ4Njk3MTkzOTBlZTIzMTY2NTQwNjkwNTI2OGUyODM0ODM2ZmY0MmYyIiw=
ICAgICAgICAgICJtZDUiOiAiNDlhNzUxY2YyOGRkZjM2Y2VmNjZmZTgwMTQxYTdlOTAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjk4YzNhZTcyODBjMTIyNGM0YjNhOGZiNWYxMjU0NDVmYjZkYzAyY2Q0ZWE3NDdjNTE1M2FjYTEwMWRjZWUzMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIyLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0OWE3NTFjZjI4ZGRmMzZjZWY2NmZlODAxNDFhN2U5MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIxNTk3OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xM1QxNzozOToyNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xM1QxNzozOToyNy4zNTA0MDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iMS83YS8xNmZkNTBhMTY5ZjhhYWUzYzc5NDg2OTcxOTM5MGVlMjMxNjY1NDA2OTA1MjY4ZTI4MzQ4MzZmZjQyZjIvUHlTaW1wbGVHVUkyNy0xLjIyLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjIzLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjOGQyMGY1ZjgwYzc1NWZhNTQ5ZWVhM2FhNDRiYWM5ZTRhYzNkMWM5MzY4ZTJmZjVlMzhjYTBhZmIxY2FhOGJjIiw=
ICAgICAgICAgICJtZDUiOiAiYmQxY2FhNzk2YmI5NGNhMTA2ZDEyNWZjMzBlNGUxOWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTU2Y2QzYTMzNDVkODY2Y2M0ODBmOGQyMjc3OGMyMzlhZWFkZWVhYzY4ZTU3ODI4MGJiZmU1NjM5YjIwYWI4ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiZDFjYWE3OTZiYjk0Y2ExMDZkMTI1ZmMzMGU0ZTE5YyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEzNDgzMyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xNlQyMjowNzoxMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xNlQyMjowNzoxMi43MjAxMzhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jOC9kMi8wZjVmODBjNzU1ZmE1NDllZWEzYWE0NGJhYzllNGFjM2QxYzkzNjhlMmZmNWUzOGNhMGFmYjFjYWE4YmMvUHlTaW1wbGVHVUkyNy0xLjIzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMzI3YjE4M2QxYTkwZDllNTFjZTFkODlkNmMwYmJiZjczOWY0ODE3ODYwMmM4OGZlOGJlZjJhNGM4NTY3ZGNiIiw=
ICAgICAgICAgICJtZDUiOiAiY2E5OTg1MmU4Mzg5ZTc0YjhmZGExZTE0YTQyZGYxMDkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTBkZGQ4MDkyZmRmMzQ4M2NjZTg2ODFjYWNjZjhiYjliNTcwYmUxMTcxZjkyYWYyMzJkMTMzOWVjYWZmNzkxMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjIzLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYTk5ODUyZTgzODllNzRiOGZkYTFlMTRhNDJkZjEwOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIxNjcyMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xNlQyMjowNzoyMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xNlQyMjowNzoyMi42NDM1NDVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMy8yNy9iMTgzZDFhOTBkOWU1MWNlMWQ4OWQ2YzBiYmJmNzM5ZjQ4MTc4NjAyYzg4ZmU4YmVmMmE0Yzg1NjdkY2IvUHlTaW1wbGVHVUkyNy0xLjIzLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI0LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwODAwNDhjMzY3MzMxOTllMDAwYmZhNzYxZDBlNTk1YTBiMTkwOTM4YTk3YWJiNzc3ZTE4Y2Y2M2I3ZjEwMjcyIiw=
ICAgICAgICAgICJtZDUiOiAiM2I0ZjgxZTU3OTVhZmJiNmFhM2NhYTRmMGIzYmZiMDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODM1MDM2ZWVhODJiZTkyZDlhOWFmYzM5YmY3NjFhYzdmMmVhNGMwMTZiZWMwZjgzYTdmOGM0ZGIyODZjMGRhNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzYjRmODFlNTc5NWFmYmI2YWEzY2FhNGYwYjNiZmIwOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MTMwOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xN1QwNTozNTo0MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xN1QwNTozNTo0My40NDE2NTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wOC8wMC80OGMzNjczMzE5OWUwMDBiZmE3NjFkMGU1OTVhMGIxOTA5MzhhOTdhYmI3NzdlMThjZjYzYjdmMTAyNzIvUHlTaW1wbGVHVUkyNy0xLjI0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlMTU1NDUzNDNlMjBmOTlmNWI2MTExN2JkMDAxYTI4YmYzN2JiN2FmOTViNDg3MmRkOWQ5YjI4MDBlZWU1YWIwIiw=
ICAgICAgICAgICJtZDUiOiAiYzkzNzA1MzU2N2NkZDQ2YWY3MmQ5MWU3MzMyYTU0YTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOGFjN2RhZDZiYjNjNWI0YmJjZTdhNDBlNTQwYWEwMTUxZDI5YWY1ZTI0ZGZiM2Q2MjZhNzBjYzVkNzRkOWNkOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI0LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjOTM3MDUzNTY3Y2RkNDZhZjcyZDkxZTczMzJhNTRhNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMzYyOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMS0xN1QwNTozNjowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMS0xN1QwNTozNjowMS44OTQxOTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lMS81NS80NTM0M2UyMGY5OWY1YjYxMTE3YmQwMDFhMjhiZjM3YmI3YWY5NWI0ODcyZGQ5ZDliMjgwMGVlZTVhYjAvUHlTaW1wbGVHVUkyNy0xLjI0LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI1LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwZmJiYjg3NmI0MDRiZTYwMjYzOWFjZjhkYTkxMTA4YWExZWM3MTAzNjBjMjI2NDRmZmVlMWFjYTgxN2JiYTY2Iiw=
ICAgICAgICAgICJtZDUiOiAiZmU5YzU1ZjcyYjc4YTAxNDYyMmQ2YzFkMWExZDk4MWIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWY0MjVmZWRlYmY3ZTI1MGU3ZGJjZDk2NzEwMDZiMDg2ODY0ODU2YjBkNTgwN2E5YmFiNTNlY2JhNzRhNmY3OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmZTljNTVmNzJiNzhhMDE0NjIyZDZjMWQxYTFkOTgxYiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MTAxOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMi0yMFQxMzo0Mzo0OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMi0yMFQxMzo0Mzo0OC4wNjE2MTNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wZi9iYi9iODc2YjQwNGJlNjAyNjM5YWNmOGRhOTExMDhhYTFlYzcxMDM2MGMyMjY0NGZmZWUxYWNhODE3YmJhNjYvUHlTaW1wbGVHVUkyNy0xLjI1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3YTdhM2JlYTEyN2MwMzUzOGU1YzE0ZmRlYjhhMjk2YTFmN2NhYzUwYzE0ODc4Nzc5YTY0YTMwODZmYTAyNzNhIiw=
ICAgICAgICAgICJtZDUiOiAiNzg3ZGRhMTFjOTRhMDgyZGY1ZDZiODA4NzIyNTdmZGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWIzOWNlMzM2NGRiNzY0MTE0MTM0ZDE2ZDRkZGVmNjM3M2EyZDZmMzkyZWVmMmIwYzZlY2M3ZThlMjQ4MmFkOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI1LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3ODdkZGExMWM5NGEwODJkZjVkNmI4MDg3MjI1N2ZkYSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMjM5OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMi0yMFQxMzo0Mzo1MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMi0yMFQxMzo0Mzo1Mi4zNjczNTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83YS83YS8zYmVhMTI3YzAzNTM4ZTVjMTRmZGViOGEyOTZhMWY3Y2FjNTBjMTQ4Nzg3NzlhNjRhMzA4NmZhMDI3M2EvUHlTaW1wbGVHVUkyNy0xLjI1LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI2LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxOGM3NTcwYWFkZWE5NDY2NzVhMzBiMzFkM2M0YjExYTRhZTcyNjU2YjZiYjdjZDVkZGQ3NjUwMTg4ZmJhN2U5Iiw=
ICAgICAgICAgICJtZDUiOiAiNTI0OWFkYmFmOTI3NmRiYmFjYmY2ZjZkMTZlOWYyMjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjkwZDc1ODI2ZTMxOTM1ZDhlMDU5MDAxNGE1MzAwOTlkY2IwZDIwZWM4MmZhYzI2MWM3ZTgyNTMwMmY4NTNjZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1MjQ5YWRiYWY5Mjc2ZGJiYWNiZjZmNmQxNmU5ZjIyNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MTUzNyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMy0yM1QyMDo0NTowMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMy0yM1QyMDo0NTowMi41MDIwMjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xOC9jNy81NzBhYWRlYTk0NjY3NWEzMGIzMWQzYzRiMTFhNGFlNzI2NTZiNmJiN2NkNWRkZDc2NTAxODhmYmE3ZTkvUHlTaW1wbGVHVUkyNy0xLjI2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyNWZiZGI2ZDUyZjEwNDYyMjM4MDVjMTFkYTUyNDEyNThhNWViNjY2YTc0NGZmYjg2MGRhYjIyOTIwOTkwNmQ1Iiw=
ICAgICAgICAgICJtZDUiOiAiNjVkNDRlMDBhOTk1NmEzNzExM2I2ZjgxOGI3OWYzZDkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjI1NTEwY2QxNTc2YTViMzlhMGMxMDZjYWQ2ZjJjNjg5YzQ2MjhkYTAwYWY2YjRlZTNmNWNlN2VjZjgzZDJmMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI2LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2NWQ0NGUwMGE5OTU2YTM3MTEzYjZmODE4Yjc5ZjNkOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMzA2NSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMy0yM1QyMDo0NToxMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMy0yM1QyMDo0NToxMi4zMjAwMjhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNS9mYi9kYjZkNTJmMTA0NjIyMzgwNWMxMWRhNTI0MTI1OGE1ZWI2NjZhNzQ0ZmZiODYwZGFiMjI5MjA5OTA2ZDUvUHlTaW1wbGVHVUkyNy0xLjI2LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI3LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0ZTNhNzI1MzU3MDk4ZGY3ODQzZjcwMjNhYzQ5MWMwNDI5YWY5M2VmOTdjMjdmMzYwZGE2NmYwZmE2YjFlZjgzIiw=
ICAgICAgICAgICJtZDUiOiAiMjdiYmFhOTc0YTRhNGViMTBiYzhmZmFiNjM2YTkwOTMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjI3ODRjZDVhMzM3MjZjYTQwYzlhNzE0ZjZkZWVkMTQ0OTA4NzQxNTBiMjkwNWM0YTM0YTE0YzRkYTEwNzBiOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyN2JiYWE5NzRhNGE0ZWIxMGJjOGZmYWI2MzZhOTA5MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MTcxNiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMy0zMVQxNjoyNDozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMy0zMVQxNjoyNDozMS41OTQzOTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80ZS8zYS83MjUzNTcwOThkZjc4NDNmNzAyM2FjNDkxYzA0MjlhZjkzZWY5N2MyN2YzNjBkYTY2ZjBmYTZiMWVmODMvUHlTaW1wbGVHVUkyNy0xLjI3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlYmJjMzczZmE1Mjg3M2FkMWMyMDBmYTQxNzAxNDc3OWRlZDBkNTIwOGU5NWZmYzlhZmQ2ZjI4ZDRjMGI0OWRkIiw=
ICAgICAgICAgICJtZDUiOiAiN2Y3MTYzNGUzMzBiMDM1OTUzM2E0ODNiYmVmNGVkODYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzViNGVmMzQ0NjcwODVkYzQ2OWRlNTRhMzJkOTEwNzNiOWY1OGQ3YzY5ZjJkYzkwMjdmOTM5YTkyM2FjNTcyYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI3LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3ZjcxNjM0ZTMzMGIwMzU5NTMzYTQ4M2JiZWY0ZWQ4NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMzI4OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wMy0zMVQxNjoyNDozNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wMy0zMVQxNjoyNDozNy4xOTUzMjhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lYi9iYy8zNzNmYTUyODczYWQxYzIwMGZhNDE3MDE0Nzc5ZGVkMGQ1MjA4ZTk1ZmZjOWFmZDZmMjhkNGMwYjQ5ZGQvUHlTaW1wbGVHVUkyNy0xLjI3LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI4LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4YzI1ODQ3OTg4NTBiZGE1ZWJiYzZmYmU1ODVmZGM1MTQ4Zjg3MzA5OWRkZjBhODQ0NDdjMzAwZDMwYzk5MGRjIiw=
ICAgICAgICAgICJtZDUiOiAiMTkxM2Y5ODI0ZGZlYjYxY2RjMjc1YjdmNzdlODgzNjUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzQyYjI5MTUwNDAzODBmMTRlNTgyYjQ1OTA5ZGEzYzkyYTMzNWNkM2FmYzMwMThlNjIwMDZjMDg4OTBiMDU0YiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxOTEzZjk4MjRkZmViNjFjZGMyNzViN2Y3N2U4ODM2NSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MTc5NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNC0xMVQyMjoyODo0MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNC0xMVQyMjoyODo0Mi44MDk4MThaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yy8yNS84NDc5ODg1MGJkYTVlYmJjNmZiZTU4NWZkYzUxNDhmODczMDk5ZGRmMGE4NDQ0N2MzMDBkMzBjOTkwZGMvUHlTaW1wbGVHVUkyNy0xLjI4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlNTVmNWU1YTk0MGI3ZDY0Yzk2ZTg2OTVhYmM2ZTk3MWFiMWQ2OGEyOTY1YmE1MjU1OGIyNTVlOWY1OTE2NjQ5Iiw=
ICAgICAgICAgICJtZDUiOiAiNjk4NzhhNDMxODZkNzYyNjVlMTFlOGVlNzFhMTBmNDAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzQ4MjM2ZGE5Njg2ZGYyMjQ3OTk5ZDk2N2ZjOTM4MjJlNDFjZmMwNzFmMDk3NmUzOTFhMGRhYzkzMzNmM2JhYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI4LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2OTg3OGE0MzE4NmQ3NjI2NWUxMWU4ZWU3MWExMGY0MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMzM2Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNC0xMVQyMjoyODo1MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNC0xMVQyMjoyODo1Mi4xMTI3NTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lNS81Zi81ZTVhOTQwYjdkNjRjOTZlODY5NWFiYzZlOTcxYWIxZDY4YTI5NjViYTUyNTU4YjI1NWU5ZjU5MTY2NDkvUHlTaW1wbGVHVUkyNy0xLjI4LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjI5LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMmI5YTI1YjE5ZWE2NzUyMmZmMzgyOTMyODYxOTdiOGZmMmI0MzExOGVhZjQ4YmRkNzEyZWI5MGEyY2UxZDliIiw=
ICAgICAgICAgICJtZDUiOiAiY2M1NzU1YWExOGRkMTIzN2FmMTZjNDVjY2QzMzY3MTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGFkNTY1OTljYWViNjUxNjgzMmM1MzMwMzU3YWMwMzExMGE0Yzc1YjIzOTA4MDhhZDU3NWMyYzZkOTI4Zjg0ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI5LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYzU3NTVhYTE4ZGQxMjM3YWYxNmM0NWNjZDMzNjcxNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MjAzMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNC0yMlQyMjo1MDoyOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNC0yMlQyMjo1MDoyOC43NDIyMzFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMi9iOS9hMjViMTllYTY3NTIyZmYzODI5MzI4NjE5N2I4ZmYyYjQzMTE4ZWFmNDhiZGQ3MTJlYjkwYTJjZTFkOWIvUHlTaW1wbGVHVUkyNy0xLjI5LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzY2NhYTkxZGM2ZDM5NGU5MWE1MGVjODcyNjA3ZjIwY2IxN2Y0MTE5ZjVhNDBkZGM0MDdmMDk5MWFlMGVmM2I2Iiw=
ICAgICAgICAgICJtZDUiOiAiN2EyMWViZGRmNmNhOWYzMDJkZDMyNmE0NzNlOTBhMWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTc0ZTJkY2VhNjdkOGM4ZjgyNTFlOTQwYWRkNzgxMTk1M2JkZjZjYTE0OTY2OTkwODkwZWQ1NTkwMDk4OWU5ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjI5LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3YTIxZWJkZGY2Y2E5ZjMwMmRkMzI2YTQ3M2U5MGExZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyMzY5OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNC0yMlQyMjo1MDozMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNC0yMlQyMjo1MDozMi44NDI4MjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYy9jYS9hOTFkYzZkMzk0ZTkxYTUwZWM4NzI2MDdmMjBjYjE3ZjQxMTlmNWE0MGRkYzQwN2YwOTkxYWUwZWYzYjYvUHlTaW1wbGVHVUkyNy0xLjI5LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMwLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxMDBkYjFjOTVkNzY3NGNmYTliM2Y0OGEzODE2MTFhY2IxODliODg1OThmMjlkZDRhNjMxODQ2ZTFjMWEyYmM3Iiw=
ICAgICAgICAgICJtZDUiOiAiMmFkNDkwZjlhMTc2OTJjNDM4ZWY2YTMzMDY5NGJlYWYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiN2M4NTgxNTYzNjhiNGQ1YmEyYjBjMzRiNjQ0MjcyZjZjOTI5Zjk2ODhkYjFkZGRkNGYxY2Y3OWQzY2ZiZWM0NiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMwLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyYWQ0OTBmOWExNzY5MmM0MzhlZjZhMzMwNjk0YmVhZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDU3Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMToxMTowOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMToxMTowOS41NDQ4NjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xMC8wZC9iMWM5NWQ3Njc0Y2ZhOWIzZjQ4YTM4MTYxMWFjYjE4OWI4ODU5OGYyOWRkNGE2MzE4NDZlMWMxYTJiYzcvUHlTaW1wbGVHVUkyNy0xLjMwLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0ZjBiNTNjM2M2MTc4Mzk0ZmFlYWI1MmZmMDgyZDQwZmNjNDQzNzI4YTM4YjhiMmU1NDljMTk0NWIwOGMwZTEwIiw=
ICAgICAgICAgICJtZDUiOiAiM2I1NWVkMzhmOWY2ZWExMGUzNWJhNGI2ODZjZDA5NDEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWMwOWJhY2I2MTlmZjk5OWViYmY4ZDIxOWM3Yzg1Yzk2MDg4MDVjMWEwZDdiNDFmYmZmNzFhNGRjZTQ5OTdhMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMwLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzYjU1ZWQzOGY5ZjZlYTEwZTM1YmE0YjY4NmNkMDk0MSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzIxOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMToxMToxNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMToxMToxNy45NjQ0NTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80Zi8wYi81M2MzYzYxNzgzOTRmYWVhYjUyZmYwODJkNDBmY2M0NDM3MjhhMzhiOGIyZTU0OWMxOTQ1YjA4YzBlMTAvUHlTaW1wbGVHVUkyNy0xLjMwLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMxLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1ZmIyMTgzOTNhYzM3MmU0ZWIwNDFjYTgwODU1Mjk3YjFmNzI5ZjgzMDE1NDc4MThiODdjN2I2NzdjZGRiMGQ3Iiw=
ICAgICAgICAgICJtZDUiOiAiMWU3YjlmOThjYWYyZTBmMDUyOGM3NmJjZWI1MjFmY2QiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTY4MTljZmFjYThjNDgxOTJiNGFmMDJmNTkwNjFmNjcyZWY0ZjIzZDk0YTRlODcxOTdiOTA0YTYxYmE3YjBhNyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMxLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxZTdiOWY5OGNhZjJlMGYwNTI4Yzc2YmNlYjUyMWZjZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDU3Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMToyOTo1MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMToyOTo1Mi40MTcxOTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81Zi9iMi8xODM5M2FjMzcyZTRlYjA0MWNhODA4NTUyOTdiMWY3MjlmODMwMTU0NzgxOGI4N2M3YjY3N2NkZGIwZDcvUHlTaW1wbGVHVUkyNy0xLjMxLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5YmE2OTEwMmU0ZmNkNjBmYzg1YjVhYjRkNGY4YzI1ZTA0MjRkOTBjYTI3MmJhODczNDkwMGZkNTkwNmNmMTFmIiw=
ICAgICAgICAgICJtZDUiOiAiOTlkM2QxZTg4Y2JkMDcyNmU0ODBiMzg5NmFjNzg1YzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjQ3Y2Q3YTA0ZTBhNjFhM2YyMGIyZjYwNDZjZDZkNDIwOTkwY2UxNmE4NjUwNDZmNjZlNjNlYjIzNGZlYzgxOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMxLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5OWQzZDFlODhjYmQwNzI2ZTQ4MGIzODk2YWM3ODVjMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzIyMCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMTozMDowMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMTozMDowMC43NjA5MTdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Yi9hNi85MTAyZTRmY2Q2MGZjODViNWFiNGQ0ZjhjMjVlMDQyNGQ5MGNhMjcyYmE4NzM0OTAwZmQ1OTA2Y2YxMWYvUHlTaW1wbGVHVUkyNy0xLjMxLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMyLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5OTgwNmRjNTIyYzNhMTJjZDg4NTRmMjY5M2ViNmFhZjcxMzViZmIwZGJiMzJhMWU3MTVjMWE4ZDZhZjc5NDdlIiw=
ICAgICAgICAgICJtZDUiOiAiZGY5YzdiMTRkNDdiMGUyNTY0MWZmYWM2NDE0ZjFjNDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzJkNjBjNGIwMDEyM2I0ZTQ5MWY0MjBmODU1NDlhYWMzNzEyOTA1ZWRlOWE2YWE0ODIyMDUyMGIyNzgxMDU1MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkZjljN2IxNGQ0N2IwZTI1NjQxZmZhYzY0MTRmMWM0OCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDU3MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMTo0NToxMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMTo0NToxMy4zMDQ4MTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85OS84MC82ZGM1MjJjM2ExMmNkODg1NGYyNjkzZWI2YWFmNzEzNWJmYjBkYmIzMmExZTcxNWMxYThkNmFmNzk0N2UvUHlTaW1wbGVHVUkyNy0xLjMyLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmYmJmYWJlOGVkMWJiNzU2OTAxZDI4NmM2MDViYTllM2NlNjllZWVjZmQ2MmVmMWQ4MTg0YzEyNjgxNDY3NGI3Iiw=
ICAgICAgICAgICJtZDUiOiAiNmRiYTE4ZDA1OTA4M2ZjODViNTgyNzQ2MzlkZmViYzEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjVhZTRmYzJhZGFhNjg2NzliYzFiM2M3NmVjMDIzNzczYTUyODI5ZGYzZWI5YzUwZjlmYzljNjcyNDI1MTQ1OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMyLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2ZGJhMThkMDU5MDgzZmM4NWI1ODI3NDYzOWRmZWJjMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzIxOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQwMTo0NToyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQwMTo0NToyMy41MDAxNjRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mYi9iZi9hYmU4ZWQxYmI3NTY5MDFkMjg2YzYwNWJhOWUzY2U2OWVlZWNmZDYyZWYxZDgxODRjMTI2ODE0Njc0YjcvUHlTaW1wbGVHVUkyNy0xLjMyLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMzLjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5NWMyMmE0NmQ1ODUxNDBlOTllMGExNmU0ZTRmNjEyZjU1NzdmNzIxY2VmMzI1ZTZkMGIxMDM4YmU4MjFmODM1Iiw=
ICAgICAgICAgICJtZDUiOiAiYWYzZDNjMDc5MWFjNDRhMjMxMWIyYTAyODQ4MDQzOWYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNGY0MWM0M2QzZTY1MDI2YTQ3MDg5ZWM0NTViMGIxYzc0ZGZhZmY2NWYxODQyMGZjYzgwNzM4OWI5MTE1MzNiOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhZjNkM2MwNzkxYWM0NGEyMzExYjJhMDI4NDgwNDM5ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDYzMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQxOTo0OToyMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQxOTo0OToyMC43NDkzMTFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85NS9jMi8yYTQ2ZDU4NTE0MGU5OWUwYTE2ZTRlNGY2MTJmNTU3N2Y3MjFjZWYzMjVlNmQwYjEwMzhiZTgyMWY4MzUvUHlTaW1wbGVHVUkyNy0xLjMzLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhMWJlNzY2NDQ5ZmZkZjM1Y2Q4MGMyODhiYWEwODMyMDQzMTNlOWY4N2NlYWZhZGMwYWQ3MTc1NWFhODQzN2Q5Iiw=
ICAgICAgICAgICJtZDUiOiAiYTQ3OTY4N2E4MDA1MjFhOTk4OWU5MzAyZTA2YzQyYzYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjRjYTg3OGIzZmE4M2ExOTc4ODBiMzIwYTIxM2Q3ZTI0YWI5NGVlNWEyYTg2NjMyMzAzZTJhZmEwMzgyYzk3YiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjMzLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNDc5Njg3YTgwMDUyMWE5OTg5ZTkzMDJlMDZjNDJjNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzI0MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQxOTo0OTozMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQxOTo0OTozMy4zNDMxNjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hMS9iZS83NjY0NDlmZmRmMzVjZDgwYzI4OGJhYTA4MzIwNDMxM2U5Zjg3Y2VhZmFkYzBhZDcxNzU1YWE4NDM3ZDkvUHlTaW1wbGVHVUkyNy0xLjMzLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM0LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NjE4NjJhNDNmNzAzMDNmMDE1NzdhZGE2MjdlMmU3YzRlYmM4YmFkYjU3YjdjMzk5N2M1MWNmMzNjMDA3MDY4Iiw=
ICAgICAgICAgICJtZDUiOiAiMzdjYzI4MGMzZDJlMDBmZjhkM2NhYmY3OWY2NTBjMmUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNmExMGVkMjVmMTdiN2IyZTYzMThmNDE2YTFkYmIwYjc2ZTAzM2YwYTlmMGRlMGQyOWNlOWQyNWZmY2Q2MGFhNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzN2NjMjgwYzNkMmUwMGZmOGQzY2FiZjc5ZjY1MGMyZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDc5OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQyMTo1NjozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQyMTo1NjozMS45OTg4MTFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81Ni8xOC82MmE0M2Y3MDMwM2YwMTU3N2FkYTYyN2UyZTdjNGViYzhiYWRiNTdiN2MzOTk3YzUxY2YzM2MwMDcwNjgvUHlTaW1wbGVHVUkyNy0xLjM0LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmNTAzMDE0MGY5NTQyNmZhM2E5YzgyODY1MGZhOTMxN2U4N2NmOWNmY2ZlNzIxODQxMDk0MWJhNWVlYjYxMDIzIiw=
ICAgICAgICAgICJtZDUiOiAiMTg3Mzk0MzNlNzYxYzI1MmQ4YTYxMTgzNDQ0MDQ4ODkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzNkNTZhZTU1YWQ4NDZiZDlhNDRmNTY1ZmVjN2M5MDgwMWFkYWQyYTk2MmQ2NzE3MTM2ZGRmOTJkYzQ2NmFjZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM0LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxODczOTQzM2U3NjFjMjUyZDhhNjExODM0NDQwNDg4OSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzU5Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yNVQyMTo1Njo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yNVQyMTo1Njo1NS45NTAyMDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mNS8wMy8wMTQwZjk1NDI2ZmEzYTljODI4NjUwZmE5MzE3ZTg3Y2Y5Y2ZjZmU3MjE4NDEwOTQxYmE1ZWViNjEwMjMvUHlTaW1wbGVHVUkyNy0xLjM0LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM1LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxYzc3NWRlZGUxYWEzNTVlMzdjMmI4OTRjZWQ4Y2I5YTQxYWVkYmRhYTFjNjE0Y2IxMzA1ZTgzOGRhNGM3NDk1Iiw=
ICAgICAgICAgICJtZDUiOiAiMGVlNjA4MWIyZDJmZDViNGNjNmFmMzc5NGE0OTMwMGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNGE4Mzg2MDRmMGI2YWY5ZjAwYWYwY2I2NmUxY2MzMDkyOGNlOGRmY2RmMzBlYzcyMzVlNzJmYzRlZjFiMGU4MyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwZWU2MDgxYjJkMmZkNWI0Y2M2YWYzNzk0YTQ5MzAwZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NDc4OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yN1QxOToyNzo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yN1QxOToyNzo1Ny41NTMwODlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xYy83Ny81ZGVkZTFhYTM1NWUzN2MyYjg5NGNlZDhjYjlhNDFhZWRiZGFhMWM2MTRjYjEzMDVlODM4ZGE0Yzc0OTUvUHlTaW1wbGVHVUkyNy0xLjM1LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxNmE0ODNlM2ZjMzg2YTRhYTlkMDg4OWU4MzMzZWUzOWE1ZjZjMTVmM2MwMGYzM2ZlMTk0YTcxMjA4MTlkYmZiIiw=
ICAgICAgICAgICJtZDUiOiAiYjQzMDEzZTEwNTliODQ0ZmNhMWM1YmRkZDljOTliZWYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzlhMWE3ZjQ2MTZmNTI3MGQzMzRiNWFiMTBkYzNhOTIwMWVkMzcwMjhiZTUwYTQwY2UyNTU0Y2ZhMWI1ZDQ3NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM1LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiNDMwMTNlMTA1OWI4NDRmY2ExYzViZGRkOWM5OWJlZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyNzU2Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yN1QxOToyODowOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yN1QxOToyODowOC45ODI2OTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xNi9hNC84M2UzZmMzODZhNGFhOWQwODg5ZTgzMzNlZTM5YTVmNmMxNWYzYzAwZjMzZmUxOTRhNzEyMDgxOWRiZmIvUHlTaW1wbGVHVUkyNy0xLjM1LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM2LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4Y2UzY2Q5MTU5OWVlODBhNzhkZjg5NDZhNzlmYWQwMGRiMzZkMGMxYzMwMjI3NmE3OTdlZjg4ZDViOGRjOTVlIiw=
ICAgICAgICAgICJtZDUiOiAiOTEyMWUwZjU0Y2ViNjE1NDY1MTcwZDk5ZDcxODMyMjEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTVmZTI0ZTU5OWZhZThhMmIxYTBlMjE4MmExMzAyY2JkODdmNmEwY2Y1NDI4ZmFmNTQ1MzM2MmMzMTRmZGVmYiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5MTIxZTBmNTRjZWI2MTU0NjUxNzBkOTlkNzE4MzIyMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NTc3MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yOVQyMzoyOTo0MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yOVQyMzoyOTo0My43NDU3MDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yy9lMy9jZDkxNTk5ZWU4MGE3OGRmODk0NmE3OWZhZDAwZGIzNmQwYzFjMzAyMjc2YTc5N2VmODhkNWI4ZGM5NWUvUHlTaW1wbGVHVUkyNy0xLjM2LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0OWZiNzNiMjU0YjRhMDA2MzViM2U0ZWM4ODE0OWE3MDJhODhiOWY5MTRjNTRjZjg0Y2Y5ZTdjOTk0MTBlZDhkIiw=
ICAgICAgICAgICJtZDUiOiAiY2EzYWRmZmZjZmQ4MjM4ZmE3MjgyNzI4ZDViZjI3NDIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTM1YTMzYzhmOTYxZWU3ODNhODJhM2RlM2ExODA5NDIyZGIyYjU1MzdiODhkZWRiMmZiMWQxNDU0YmI5N2RhMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM2LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYTNhZGZmZmNmZDgyMzhmYTcyODI3MjhkNWJmMjc0MiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyODc5MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNS0yOVQyMzoyOTo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNS0yOVQyMzoyOTo1NS41NTE3MjRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80OS9mYi83M2IyNTRiNGEwMDYzNWIzZTRlYzg4MTQ5YTcwMmE4OGI5ZjkxNGM1NGNmODRjZjllN2M5OTQxMGVkOGQvUHlTaW1wbGVHVUkyNy0xLjM2LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM3LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiNjQzNjM4YmRmZTFlNTcyMjkyNTQwNmQzYzk4ZjU0NDA4NDg2MzJhOTM0MzBkYTI3YzFhMTJiZmVlNTczMTQxIiw=
ICAgICAgICAgICJtZDUiOiAiYzAzZmFhNzU5OTYzYjIwYmY5MDI1YWU4OGVjMzRiYzIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDNjYmNmYzBhN2RlN2U3Y2YzZjlkYTEyY2NiOGZkNzQ3YmQ0NzIyYWYxMTVmOWFjMTAyYjM4ZThjNzhlYjQ2OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjMDNmYWE3NTk5NjNiMjBiZjkwMjVhZTg4ZWMzNGJjMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0NjM0MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0wMlQwMTo0MzoxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0wMlQwMTo0MzoxOS4xMTEyMTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iNi80My82MzhiZGZlMWU1NzIyOTI1NDA2ZDNjOThmNTQ0MDg0ODYzMmE5MzQzMGRhMjdjMWExMmJmZWU1NzMxNDEvUHlTaW1wbGVHVUkyNy0xLjM3LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3YjdkYzgwZjNmZjQzMzcxYjdjZjVmZDgwMDY3NTM3MzhmM2NmZmIwYzY1YTM5YjkzMmMyODdlMjI0NTBjNmQ4Iiw=
ICAgICAgICAgICJtZDUiOiAiMzFiNjA5ZmYxYTY5NmI0ZjE0NDlkMjljZjkxYTk3MDQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWZlMjk4MGI5MmQ2ZDQyZjgxYzNjYjVkMGIyZmU3NjQ2ZWM1Y2U2OWMxMjRhMjA4NGY0OTI1NDJkZDlmOWRlOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM3LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzMWI2MDlmZjFhNjk2YjRmMTQ0OWQyOWNmOTFhOTcwNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIyOTg1MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0wMlQwMTo0MzozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0wMlQwMTo0MzozMS42MTA2MjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Yi83ZC9jODBmM2ZmNDMzNzFiN2NmNWZkODAwNjc1MzczOGYzY2ZmYjBjNjVhMzliOTMyYzI4N2UyMjQ1MGM2ZDgvUHlTaW1wbGVHVUkyNy0xLjM3LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM4LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NDA4NWY1Y2EyYTZhOTI2YmI4ODNjNWZlODIyYTg5ZGU4Mjc1ZGVkNjRjMTYzYjBjNmJhOWUwNGVmMThmZTE1Iiw=
ICAgICAgICAgICJtZDUiOiAiNzU5NmFmMTg1ODlmNWNkYTcxMWY3YzY4ZjBiMTdkMjIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjVkYTNhZDFlZWUwMmJhZTM2ZWMwODRhZWExMDNmMDE3OGYwYTYzYzZmOTgzM2I2MzBhODE4NWQ3MTIxMGNhZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3NTk2YWYxODU4OWY1Y2RhNzExZjdjNjhmMGIxN2QyMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE1NDA1Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xMFQxNDowMjo0OSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xMFQxNDowMjo0OS43MDAwMTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81NC8wOC81ZjVjYTJhNmE5MjZiYjg4M2M1ZmU4MjJhODlkZTgyNzVkZWQ2NGMxNjNiMGM2YmE5ZTA0ZWYxOGZlMTUvUHlTaW1wbGVHVUkyNy0xLjM4LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiZmVmYTI1YmIzYmZkYzI5MjNhMTYwNzhjM2NlZmM2OGYzOGJmMjMzNjhiNzk3MDhmNDAzYzFmOTMzYzE4ZGU5Iiw=
ICAgICAgICAgICJtZDUiOiAiMGE3NTc4YjdjOTg0NDU0ZjZiYWMxZjYwM2QzZjI3MzAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNjhkNGY5ZWQyZWY2MjlmYTAyOGYxMjJiM2ExM2I0ZWU0ZGM4NDUxZTQ1ZDc4ZTE5NDFkYjQ1YTk4YjI0MjI2ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM4LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwYTc1NzhiN2M5ODQ0NTRmNmJhYzFmNjAzZDNmMjczMCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzNzgwNSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xMFQxNDowMzowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xMFQxNDowMzowMS4wNDc2MjhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iZi9lZi9hMjViYjNiZmRjMjkyM2ExNjA3OGMzY2VmYzY4ZjM4YmYyMzM2OGI3OTcwOGY0MDNjMWY5MzNjMThkZTkvUHlTaW1wbGVHVUkyNy0xLjM4LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjM5LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNTA3MjY5MjY1YzJmOGM1YTU1ZmExMTQ1MGUxZTQxZWU2YmE5NmUzNmY5MDc1ZGMxNmZhZmQxMDMxZWQ5ZDY1Iiw=
ICAgICAgICAgICJtZDUiOiAiN2QwNGE1YjBhYjdjN2M1ZDg4NTQ3ZDdmZjgyMWE5NzQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWY1YTJhMGY4ZjljMzRjZjEzMTIxODFhMjZlZDljNDY2ZTE4OWFjZDkzZDA5MTA3OGQ4Y2E1MGNjODMzOWNiZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM5LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3ZDA0YTViMGFiN2M3YzVkODg1NDdkN2ZmODIxYTk3NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE1NTExMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xM1QyMjowMToyMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xM1QyMjowMToyMC4zMDI2NjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNS8wNy8yNjkyNjVjMmY4YzVhNTVmYTExNDUwZTFlNDFlZTZiYTk2ZTM2ZjkwNzVkYzE2ZmFmZDEwMzFlZDlkNjUvUHlTaW1wbGVHVUkyNy0xLjM5LjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2N2ZjZTUyMGVjNzYxZmVlYjBmNjc5YWZjMDc3NjJjZmZjZDgxMjViNDkwOWI1MTc4NjlmN2ZjMmI3NzJiYjM0Iiw=
ICAgICAgICAgICJtZDUiOiAiMGM3NTgxMDY2ZTE5NzAwNDE3YTc1ZmI5YzUyMGRkOWUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDE0NzYzOGY1YzQzYjdhNjkxMzYyYTBlMzc4Y2U1MzAyNWY4Y2I4Yzc5ODc4N2I5MTY1NjljZWU0YWFlYTZmYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0xLjM5LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwYzc1ODEwNjZlMTk3MDA0MTdhNzVmYjljNTIwZGQ5ZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzOTI2Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xM1QyMjowMTozMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xM1QyMjowMTozMi45OTg3MDNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Ny9mYy9lNTIwZWM3NjFmZWViMGY2NzlhZmMwNzc2MmNmZmNkODEyNWI0OTA5YjUxNzg2OWY3ZmMyYjc3MmJiMzQvUHlTaW1wbGVHVUkyNy0xLjM5LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiOWE5MTZjNGUxNTAxMTU4NzYwMjA0NmFkZGQzYzU0NzcxMGNhMWU3ZGI4YWY0OWU0MTllNTE0OTU4NjEyMGY1Iiw=
ICAgICAgICAgICJtZDUiOiAiZDBmYzM1OGFmZDgxNTU0YTQ1MGZkNzE4NjhhMWFkMGMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzUzYWE0OWE3OTRlYjU4NTgxZjNmMTNjNTNhZWNmMzY4NmUyMGU4Y2RjMjUxZTk0N2UyNWY4NmZkMzU1YzYwOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkMGZjMzU4YWZkODE1NTRhNDUwZmQ3MTg2OGExYWQwYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE2MDkyMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xOVQxNzoxNzo0OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xOVQxNzoxNzo0OC4zMTY1MjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iOS9hOS8xNmM0ZTE1MDExNTg3NjAyMDQ2YWRkZDNjNTQ3NzEwY2ExZTdkYjhhZjQ5ZTQxOWU1MTQ5NTg2MTIwZjUvUHlTaW1wbGVHVUkyNy0yLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyN2ExZDIwNzczOWE2MzIxNjJkNzNhZDFjOTA5MWRiZjE0NTA2ZmQ4NTRlOTYxZjM5YTRhNjA1MTg4MWM0NGUzIiw=
ICAgICAgICAgICJtZDUiOiAiMmQ2OWY5MWQxNGU0NjIxZDRlM2E0OTA1OGNmNDgwMzEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzllOGY3YzFiMTk2MmIyMmIyZmYzZDdkM2QzMTYyMDA5Zjk4NzM4ZDg4MTZhYjhlMDYyYWY3OWNhMDM3Njk2NCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjAuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyZDY5ZjkxZDE0ZTQ2MjFkNGUzYTQ5MDU4Y2Y0ODAzMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI0NTg0NSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wNi0xOVQxNzoxNzo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wNi0xOVQxNzoxNzo1Ni42NzI3ODlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNy9hMS9kMjA3NzM5YTYzMjE2MmQ3M2FkMWM5MDkxZGJmMTQ1MDZmZDg1NGU5NjFmMzlhNGE2MDUxODgxYzQ0ZTMvUHlTaW1wbGVHVUkyNy0yLjAuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjIuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiNTIzNzdkZDE0NzhjMmM0M2E3MTk1NTI5YTk4OWEyMDMzNTliZmQ1MzhmNmQ3OTg3ZDFhMzBhZWI0MzM1NGFjIiw=
ICAgICAgICAgICJtZDUiOiAiYjZlOGI5ZjE5N2U5ZTEwNzYyNjQ5MTNmMDI4NmU4N2YiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2M0ZGYyY2JiNjIwZjllMzQwNjU0ZDE3ZjMyNjA2ZjI4OWZhODRhZjc2ZWI5YjBlMTM5YWYyYzY3ZmVjZjZiNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiNmU4YjlmMTk3ZTllMTA3NjI2NDkxM2YwMjg2ZTg3ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzNDYyNyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0xOVQyMTo1NDozNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0xOVQyMTo1NDozNS42NDI4MjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iNS8yMy83N2RkMTQ3OGMyYzQzYTcxOTU1MjlhOTg5YTIwMzM1OWJmZDUzOGY2ZDc5ODdkMWEzMGFlYjQzMzU0YWMvUHlTaW1wbGVHVUkyNy0yLjIuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3N2YyNGU5MjM3OTJjNTg5YWVkNTQzNWUzZTczYTZlYmMzYTg0NWMzMzA2NGI2NGUxMmQwYzNjOGQxNmE3NmNmIiw=
ICAgICAgICAgICJtZDUiOiAiOWUxODA0NzYyNGQ5NjRhYWM3NjljYzUzYWE3ZjAzNmQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWY3ZjA1MDEwM2E4MGEzNTVjNWJhZTIyMzU2ODZkOTQ2YmY2MDlkMWZkYWZkN2YxYjgxZmI3YjM2Zjk3NGU4OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ZTE4MDQ3NjI0ZDk2NGFhYzc2OWNjNTNhYTdmMDM2ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM2OTczNiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0xOVQyMTo1NTowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0xOVQyMTo1NTowMS4xMjIzMzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83Ny9mMi80ZTkyMzc5MmM1ODlhZWQ1NDM1ZTNlNzNhNmViYzNhODQ1YzMzMDY0YjY0ZTEyZDBjM2M4ZDE2YTc2Y2YvUHlTaW1wbGVHVUkyNy0yLjIuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjIuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZGU0MTM5YzgyMjJmNzg5ZDMzYjdjMjgzZGIwNGY1ZTZiZTkxNTM4ODFkOTliNmJiZDQxOTkzOGViMTc2Y2U3Iiw=
ICAgICAgICAgICJtZDUiOiAiNGFhODI2MmVlMDdlODdhMTM2OTllY2UzMjZjYTcxMjgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWIxOTdiODMyZDlhYzJhOWRlZTJjMTMzOGNmMjc3MmEwMTY1ZWQ2MTQ4OWEyZTgyMGM1Y2EyOGRmZmYwOGUyMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0YWE4MjYyZWUwN2U4N2ExMzY5OWVjZTMyNmNhNzEyOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzNDU4MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0yMFQyMDo0NDoyNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0yMFQyMDo0NDoyNy41OTM5MDVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZC9lNC8xMzljODIyMmY3ODlkMzNiN2MyODNkYjA0ZjVlNmJlOTE1Mzg4MWQ5OWI2YmJkNDE5OTM4ZWIxNzZjZTcvUHlTaW1wbGVHVUkyNy0yLjIuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5OTU2NjI3YjJiY2NiNDc0YWU1NTVjYmRiNWUyZTZhMjgxZWZiMzhhYjJhYzA5N2VhYjhjNTQ3ZDJlNzA4NzRlIiw=
ICAgICAgICAgICJtZDUiOiAiZjc0YzkzODYwNzJjZmExOTJhYTc1ZmE5Yjk1NzFmNTAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzM0YzA5OGMyZTUzYWQzOWQ1NjljZDcwM2ViNjRjOTMwOGFhZjJjNzMwZTEzZWJmMzNmNDI2ODY0MWVhZWZjZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmNzRjOTM4NjA3MmNmYTE5MmFhNzVmYTliOTU3MWY1MCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM2OTY4MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0yMFQyMDo0NDozOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0yMFQyMDo0NDozOC4xOTQ3ODhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85OS81Ni82MjdiMmJjY2I0NzRhZTU1NWNiZGI1ZTJlNmEyODFlZmIzOGFiMmFjMDk3ZWFiOGM1NDdkMmU3MDg3NGUvUHlTaW1wbGVHVUkyNy0yLjIuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjIuMiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiNzJhYWQzZTYxYTc2MWUxOGZlNzg2NTkwOTg2YTAwNjBmY2U1OWU0MDBmZDBiMTMwYmJhMTI1ODcyNzFhYWE2Iiw=
ICAgICAgICAgICJtZDUiOiAiMDFkOTM3MWYxNWU2MmMxNDczZGZkMGZkOWUzZGI0MDMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjc5NjFkMjhmMDczYzM5NDYyYjlhODc0NzcwZDNhNzBjYTI1OTgzYjE5MTljNmVhMGU3YTkyOWJkOWE3OWMyMyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwMWQ5MzcxZjE1ZTYyYzE0NzNkZmQwZmQ5ZTNkYjQwMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzNTgwNCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0zMFQwMDo0NzoxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0zMFQwMDo0NzoxOS44NjUyOTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iNy8yYS9hZDNlNjFhNzYxZTE4ZmU3ODY1OTA5ODZhMDA2MGZjZTU5ZTQwMGZkMGIxMzBiYmExMjU4NzI3MWFhYTYvUHlTaW1wbGVHVUkyNy0yLjIuMi1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhY2MyNWUzMzRhNDc3ZDIxODk1YjIwYWE3MmYzY2EwNWY0YTc3YjNlOGY4N2JiNDQ0ODM2NTdjMDZlNzdjOTg5Iiw=
ICAgICAgICAgICJtZDUiOiAiNGQ1N2MwZGM1YmY2ZWY1NTE4ZmNjZWE3YTI4YTM2MWQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjFjZmViYWQ2ZTUxN2FkYWMxOWFhY2FiOTdkZGQ5ZDk1NDljMjk0MzI4MTY2MzYxODBhN2M5Nzk5MDZmNmNhNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjIuMi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0ZDU3YzBkYzViZjZlZjU1MThmY2NlYTdhMjhhMzYxZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM3MjM2NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOC0zMFQwMDo0NzozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOC0zMFQwMDo0NzozMS4zODQzOTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hYy9jMi81ZTMzNGE0NzdkMjE4OTViMjBhYTcyZjNjYTA1ZjRhNzdiM2U4Zjg3YmI0NDQ4MzY1N2MwNmU3N2M5ODkvUHlTaW1wbGVHVUkyNy0yLjIuMi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjQuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2YmY5YTg2OTUxMzNkZjBmMzY0MzhiYzNlOThlM2U4NjY2ODFlYzZmYTVjN2Q3NmJjOTIxYWQxMTgzZDc3MTJjIiw=
ICAgICAgICAgICJtZDUiOiAiNTU5MjU2MGJmOGVhYWNkNWI5MDA5NWYxZjE3MzlhNmUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzFmNDA3MDAwMzczNjYxM2IzYzk3Y2M5YzBjNGNiODIzODRhNDU4ZTY3N2ViZWVlM2Q1MzhiMTFhZTg5NTE4NCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjQuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1NTkyNTYwYmY4ZWFhY2Q1YjkwMDk1ZjFmMTczOWE2ZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI1MDc5OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOS0wNlQwMDoxNzowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOS0wNlQwMDoxNzowNS40NTU3MjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Yi9mOS9hODY5NTEzM2RmMGYzNjQzOGJjM2U5OGUzZTg2NjY4MWVjNmZhNWM3ZDc2YmM5MjFhZDExODNkNzcxMmMvUHlTaW1wbGVHVUkyNy0yLjQuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0NzMzZWFhMWZjZmQ3YjA4ZmQ1YWZjNDQ4YjBkOThjZWIwMjAyOGZjODg0OWRiZWVlMjM1NDliNjdlODY0OTljIiw=
ICAgICAgICAgICJtZDUiOiAiNTliZDg1OTI2NDY0ZDkyZTZlM2VjNzgyZDhmZThjNjEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzU2ZTI0NmM2ZTlkODlhYzdlOWZkZWVkOTk0MWM5MDQ4MTQ1ZjIyNmQ1NjkxZmJhY2IzZTAzYTM0YTMzZWVjYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjQuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1OWJkODU5MjY0NjRkOTJlNmUzZWM3ODJkOGZlOGM2MSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM5ODk4Myw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOS0wNlQwMDoxNzoyOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOS0wNlQwMDoxNzoyOS40NzE2MDZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80Ny8zMy9lYWExZmNmZDdiMDhmZDVhZmM0NDhiMGQ5OGNlYjAyMDI4ZmM4ODQ5ZGJlZWUyMzU0OWI2N2U4NjQ5OWMvUHlTaW1wbGVHVUkyNy0yLjQuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIyLjQuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiOGU4YzRiNDE0MzI0NDAyYzFlMWQ2NDA5ZGFlZmNhMmYzNzYyNzUyNDA4NzBhODlhYTAwMjgyY2EzN2ZjNDY5Iiw=
ICAgICAgICAgICJtZDUiOiAiY2MxNGRhNmY3NjcwYTk5YTFmNjBlZTA4ZWVlNzczZGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZGExNzljMmU3OTUwZjhkNmZkZjExYWZjYzUxODcxMTU3YzFkZjEyZTE3YzcyN2NiYzc1M2E0NjY1YjdjMmNjMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjQuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYzE0ZGE2Zjc2NzBhOTlhMWY2MGVlMDhlZWU3NzNkYSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI1MDc5Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOS0wNlQxNTowNjozNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOS0wNlQxNTowNjozNS42NTI0OTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iOC9lOC9jNGI0MTQzMjQ0MDJjMWUxZDY0MDlkYWVmY2EyZjM3NjI3NTI0MDg3MGE4OWFhMDAyODJjYTM3ZmM0NjkvUHlTaW1wbGVHVUkyNy0yLjQuMS1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2YzQyZTZlMWRkM2FjYzBiMTE0MTkwYjZiMTUyODgwNjJlYmI0ZTM1NzVlNTU1MGMzODc1OTFlNDhjN2ZiYjEwIiw=
ICAgICAgICAgICJtZDUiOiAiZjA2NjRmODViZWJmOGM5ZjM5NWQxNDBhMjFmNDRhMTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjdmOTFjNzMxOTljYzViYmYxMjFhMDk1MGJlNzc0NTE4OGFiMjk3Zjg5ZjExYzBlNGUxNDc4ZGJiZWI2NDhjNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiUHlTaW1wbGVHVUkyNy0yLjQuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMDY2NGY4NWJlYmY4YzlmMzk1ZDE0MGEyMWY0NGExNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDM5ODk3MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxOS0wOS0wNlQxNTowNjo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxOS0wOS0wNlQxNTowNjo1Ny4wNDg1NjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82Yy80Mi9lNmUxZGQzYWNjMGIxMTQxOTBiNmIxNTI4ODA2MmViYjRlMzU3NWU1NTUwYzM4NzU5MWU0OGM3ZmJiMTAvUHlTaW1wbGVHVUkyNy0yLjQuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYjhlOGM0YjQxNDMyNDQwMmMxZTFkNjQwOWRhZWZjYTJmMzc2Mjc1MjQwODcwYTg5YWEwMDI4MmNhMzdmYzQ2OSIs
ICAgICAgICAibWQ1IjogImNjMTRkYTZmNzY3MGE5OWExZjYwZWUwOGVlZTc3M2RhIiw=
ICAgICAgICAic2hhMjU2IjogImRhMTc5YzJlNzk1MGY4ZDZmZGYxMWFmY2M1MTg3MTE1N2MxZGYxMmUxN2M3MjdjYmM3NTNhNDY2NWI3YzJjYzEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIlB5U2ltcGxlR1VJMjctMi40LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiY2MxNGRhNmY3NjcwYTk5YTFmNjBlZTA4ZWVlNzczZGEiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAyNTA3OTYs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTktMDktMDZUMTU6MDY6MzUiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTktMDktMDZUMTU6MDY6MzUuNjUyNDk0WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYjgvZTgvYzRiNDE0MzI0NDAyYzFlMWQ2NDA5ZGFlZmNhMmYzNzYyNzUyNDA4NzBhODlhYTAwMjgyY2EzN2ZjNDY5L1B5U2ltcGxlR1VJMjctMi40LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNmM0MmU2ZTFkZDNhY2MwYjExNDE5MGI2YjE1Mjg4MDYyZWJiNGUzNTc1ZTU1NTBjMzg3NTkxZTQ4YzdmYmIxMCIs
ICAgICAgICAibWQ1IjogImYwNjY0Zjg1YmViZjhjOWYzOTVkMTQwYTIxZjQ0YTE0Iiw=
ICAgICAgICAic2hhMjU2IjogImI3ZjkxYzczMTk5Y2M1YmJmMTIxYTA5NTBiZTc3NDUxODhhYjI5N2Y4OWYxMWMwZTRlMTQ3OGRiYmViNjQ4YzQi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIlB5U2ltcGxlR1VJMjctMi40LjEudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZjA2NjRmODViZWJmOGM5ZjM5NWQxNDBhMjFmNDRhMTQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAzOTg5NzAs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTktMDktMDZUMTU6MDY6NTciLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTktMDktMDZUMTU6MDY6NTcuMDQ4NTY1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNmMvNDIvZTZlMWRkM2FjYzBiMTE0MTkwYjZiMTUyODgwNjJlYmI0ZTM1NzVlNTU1MGMzODc1OTFlNDhjN2ZiYjEwL1B5U2ltcGxlR1VJMjctMi40LjEudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
