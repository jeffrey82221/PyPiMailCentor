ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAidGludGlud2ViIiw=
ICAgICJhdXRob3JfZW1haWwiOiAidGludGlud2ViQG9zdHN0cm9tLmNvbSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFtdLA==
ICAgICJkZXNjcmlwdGlvbiI6ICIuLiBmaWd1cmU6OiBodHRwOi8vaTY4LnRpbnlwaWMuY29tLzJpcXo3dDIucG5nXG5cbnN0cmlwdGxzIC0gYXVkaXRpbmcgcHJveHlcbj09PT09PT09PT09PT09PT09PT09PT09PT1cblxucG9jIGltcGxlbWVudGF0aW9uIG9mIFNUQVJUVExTIHN0cmlwcGluZyBhdHRhY2tzXG5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cblxuQSBnZW5lcmljIHRjcCBwcm94eSBpbXBsZW1lbnRhdGlvbiBhbmQgYXVkaXQgdG9vbCB0byBwZXJmb3JtIHByb3RvY29sXG5pbmRlcGVuZGVudCBgYHNzbC90bHNgYCBpbnRlcmNlcHRpb24gYW5kIGBgU1RBUlRUTFNgYCBzdHJpcHBpbmcgYXR0YWNrc1xub24gYGBTTVRQYGAsIGBgUE9QM2BgLCBgYElNQVBgYCwgYGBGVFBgYCwgYGBOTlRQYGAsIGBgWE1QUGBgLCBgYEFDQVBgYFxuYW5kIGBgSVJDYGAuXG5cblJlcXVpcmVzOlxuICAgICAgICAgXG5cbi0gIFB5dGhvbiA+PSAyLjcuOSAoYGBTU0xDb250ZXh0YGApXG4tICAob3B0aW9uYWwgZm9yIHRscyBpbnRlcmNlcHRpb24pIENlcnRpZmljYXRlIGFuZCBQcml2YXRlS2V5IGluIFBFTVxuICAgZm9ybWF0IChzaW5nbGUgZmlsZSkgYGAtLWtleT1zZXJ2ZXIucGVtYGBcblxuVmVjdG9yc1xuXl5eXl5eXlxuXG4tICBHRU5FUklDXG4tICBJbnRlcmNlcHQgLSBwcm90b2NvbCBpbmRlcGVuZGVudCBzc2wvdGxzIGludGVyY2VwdGlvbi4gcGVla3MgZm9yIFRMU1xuICAgSGFuZHNoYWtlLCBjb252ZXJ0cyBzb2NrZXQgdG8gdGxzICh0bHMtdG8tdGxzIHByb3h5KVxuLSAgSW5ib3VuZEludGVyY2VwdCAtIHByb3RvY29sIGluZGVwZW5kZW50IHNzbC90bHMgaW50ZXJjZXB0aW9uIGZvciB0aGVcbiAgIGluYm91bmQgY2hhbm5lbCBvbmx5ICh0bHMtdG8tcGxhaW4gcHJveHkpXG4tICBTTVRQXG4tICBTTVRQLlN0cmlwRnJvbUNhcGFiaWxpdGllcyAtIHNlcnZlciByZXNwb25zZSBjYXBhYmlsaXR5IHBhdGNoXG4tICBTTVRQLlN0cmlwV2l0aEludmFsaWRSZXNwb25zZUNvZGUgLSBjbGllbnQgU1RBUlRUTFMgc3RyaXBwaW5nLFxuICAgaW52YWxpZCByZXNwb25zZSBjb2RlXG4tICBTTVRQLlVudHJ1c3RlZEludGVyY2VwdCAtIFNUQVJUVExTIGludGVyY2VwdGlvbiAoY2xpZW50IGFuZCBzZXJ2ZXJcbiAgIHRhbGtpbmcgc3NsKSAocmVxdWlyZXMgc2VydmVyLnBlbSBpbiBwd2QpXG4tICBTTVRQLlN0cmlwV2l0aFRlbXBvcmFyeUVycm9yXG4tICBTTVRQLlN0cmlwV2l0aEVycm9yXG4tICBTTVRQLlByb3RvY29sRG93bmdyYWRlU3RyaXBFeHRlbmRlZE1vZGVcbi0gIFNNVFAuSW5qZWN0Q29tbWFuZFxuLSAgU01UUC5JbmJvdW5kU3RhcnR0bHNQcm94eSAtIChzdGFydHRscy10by1wbGFpbiBwcm94eSlcbi0gIFBPUDNcbi0gIFBPUDMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzXG4tICBQT1AzLlN0cmlwV2l0aEVycm9yXG4tICBQT1AzLlVudHJ1c3RlZEludGVyY2VwdFxuLSAgSU1BUFxuLSAgSU1BUC5TdHJpcEZyb21DYXBhYmlsaXRpZXNcbi0gIElNQVAuU3RyaXBXaXRoRXJyb3Jcbi0gIElNQVAuVW50cnVzdGVkSW50ZXJjZXB0XG4tICBJTUFQLlByb3RvY29sRG93bmdyYWRlVG9WMlxuLSAgRlRQXG4tICBGVFAuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzXG4tICBGVFAuU3RyaXBXaXRoRXJyb3Jcbi0gIEZUUC5VbnRydXN0ZWRJbnRlcmNlcHRcbi0gIE5OVFBcbi0gIE5OVFAuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzXG4tICBOTlRQLlN0cmlwV2l0aEVycm9yXG4tICBOTlRQLlVudHJ1c3RlZEludGVyY2VwdFxuLSAgWE1QUFxuLSAgWE1QUC5TdHJpcEZyb21DYXBhYmlsaXRpZXNcbi0gIFhNUFAuU3RyaXBJbmJvdW5kVExTXG4tICBYTVBQLlVudHJ1c3RlZEludGVyY2VwdFxuLSAgQUNBUCAodW50ZXN0ZWQpXG4tICBBQ0FQLlN0cmlwRnJvbUNhcGFiaWxpdGllc1xuLSAgQUNBUC5TdHJpcFdpdGhFcnJvclxuLSAgQUNBUC5VbnRydXN0ZWRJbnRlcmNlcHRcbi0gIElSQ1xuLSAgSVJDLlN0cmlwRnJvbUNhcGFiaWxpdGllc1xuLSAgSVJDLlN0cmlwV2l0aEVycm9yXG4tICBJUkMuVW50cnVzdGVkSW50ZXJjZXB0XG4tICBJUkMuU3RyaXBXaXRoTm90UmVnaXN0ZXJlZFxuLSAgSVJDLlN0cmlwQ0FQV2l0aE5vdHJlZ2lzdGVyZWRcbi0gIElSQy5TdHJpcFdpdGhTaWxlbnREcm9wXG5cblJlc3VsdHM6XG5cbjo6XG5cbiAgICAtIFsqXSBjbGllbnQ6IDEyNy4wLjAuMVxuICAgIC0gICAgIFtWdWxuZXJhYmxlIV0gPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEludmFsaWRSZXNwb25zZUNvZGUgYXQgMHhmZmQzMTM4Yz5cbiAgICAtICAgICBbVnVsbmVyYWJsZSFdIDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhUZW1wb3JhcnlFcnJvciBhdCAweGZmZDQ2MTFjPlxuICAgIC0gICAgIFsgICAgICAgICAgIF0gPGNsYXNzIHN0cmlwdGxzLlN0cmlwRnJvbUNhcGFiaWxpdGllcyBhdCAweGZmZDMxNmJjPlxuICAgIC0gICAgIFtWdWxuZXJhYmxlIV0gPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEVycm9yIGF0IDB4ZmZkNDYxNGM+XG4gICAgLSBbKl0gY2xpZW50OiAxOTIuMTY4LjEzOS4xXG4gICAgLSAgICAgW1Z1bG5lcmFibGUhXSA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBJbmJvdW5kVExTIGF0IDB4N2YwODMxOWE2ODA4PlxuICAgIC0gICAgIFtWdWxuZXJhYmxlIV0gPGNsYXNzIHN0cmlwdGxzLlN0cmlwRnJvbUNhcGFiaWxpdGllcyBhdCAweDdmMDgzMTlhNjdhMD5cbiAgICAtICAgICBbVnVsbmVyYWJsZSFdIDxjbGFzcyBzdHJpcHRscy5VbnRydXN0ZWRJbnRlcmNlcHQgYXQgMHg3ZjA4MzE5YTY4NzA+XG5cblVzYWdlXG4tLS0tLVxuXG46OlxuXG4gICAgIz4gcHl0aG9uIC1tIHN0cmlwdGxzIC0taGVscCAgICAjIGZyb20gcGlwL3NldHVwLnB5XG4gICAgIz4gcHl0aG9uIHN0cmlwdGxzIC0taGVscCAgICAgICAjIGZyb20gc291cmNlIC8gcm9vdCBmb2xkZXJcbiAgICBVc2FnZTogc3RyaXB0bHMucHkgW29wdGlvbnNdXG5cbiAgICAgICAgICAgZXhhbXBsZTogc3RyaXB0bHMucHkgLS1saXN0ZW4gMC4wLjAuMDoyNSAtLXJlbW90ZSBtYWlsLnNlcnZlci50bGQ6MjVcblxuXG4gICAgT3B0aW9uczpcbiAgICAgIC1oLCAtLWhlbHAgICAgICAgICAgICBzaG93IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0XG4gICAgICAtcSwgLS1xdWlldCAgICAgICAgICAgYmUgcXVpZXQgW2RlZmF1bHQ6IFRydWVdXG4gICAgICAtbCBMSVNURU4sIC0tbGlzdGVuPUxJU1RFTlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RlbiBpcDpwb3J0IFtkZWZhdWx0OiAwLjAuMC4wOjxyZW1vdGVfcG9ydD5dXG4gICAgICAtciBSRU1PVEUsIC0tcmVtb3RlPVJFTU9URVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZSB0YXJnZXQgaXA6cG9ydCB0byBmb3J3YXJkIHNlc3Npb25zIHRvXG4gICAgICAtayBLRVksIC0ta2V5PUtFWSAgICAgU1NMIENlcnRpZmljYXRlIGFuZCBQcml2YXRlIGtleSBmaWxlIHRvIHVzZSwgUEVNXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0IGFzc3VtZWQgW2RlZmF1bHQ6IHNlcnZlci5wZW1dXG4gICAgICAtcywgLS1nZW5lcmljLXNzbC1pbnRlcmNlcHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkeW5hbWljYWxseSBpbnRlcmNlcHQgU1NML1RMU1xuICAgICAgLWIgQlVGRkVSX1NJWkUsIC0tYnVmc2l6PUJVRkZFUl9TSVpFXG4gICAgICAteCBWRUNUT1JTLCAtLXZlY3RvcnM9VkVDVE9SU1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHZlY3RvcnMuIFVzZSAnQUxMJyAoZGVmYXVsdClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBzZWxlY3QgYWxsIHZlY3RvcnMsICdOT05FJyBmb3IgdGNwL3NzbCBwcm94eSBtb2RlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF2YWlsYWJsZSB2ZWN0b3JzOiBBQ0FQLlN0cmlwRnJvbUNhcGFiaWxpdGllcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBQ0FQLlN0cmlwV2l0aEVycm9yLCBBQ0FQLlVudHJ1c3RlZEludGVyY2VwdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGVFAuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzLCBGVFAuU3RyaXBXaXRoRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRlRQLlVudHJ1c3RlZEludGVyY2VwdCwgR0VORVJJQy5JbnRlcmNlcHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSU1BUC5Qcm90b2NvbERvd25ncmFkZVRvVjIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSU1BUC5TdHJpcEZyb21DYXBhYmlsaXRpZXMsIElNQVAuU3RyaXBXaXRoRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSU1BUC5VbnRydXN0ZWRJbnRlcmNlcHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSVJDLlN0cmlwQ0FQV2l0aE5vdFJlZ2lzdGVyZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSVJDLlN0cmlwRnJvbUNhcGFiaWxpdGllcywgSVJDLlN0cmlwV2l0aEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIElSQy5TdHJpcFdpdGhOb3RSZWdpc3RlcmVkLCBJUkMuU3RyaXBXaXRoU2lsZW50RHJvcCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJUkMuVW50cnVzdGVkSW50ZXJjZXB0LCBOTlRQLlN0cmlwRnJvbUNhcGFiaWxpdGllcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOTlRQLlN0cmlwV2l0aEVycm9yLCBOTlRQLlVudHJ1c3RlZEludGVyY2VwdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQT1AzLlN0cmlwRnJvbUNhcGFiaWxpdGllcywgUE9QMy5TdHJpcFdpdGhFcnJvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQT1AzLlVudHJ1c3RlZEludGVyY2VwdCwgU01UUC5JbmJvdW5kU3RhcnR0bHNQcm94eSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTTVRQLkluamVjdENvbW1hbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU01UUC5Qcm90b2NvbERvd25ncmFkZVN0cmlwRXh0ZW5kZWRNb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNNVFAuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzLCBTTVRQLlN0cmlwV2l0aEVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNNVFAuU3RyaXBXaXRoSW52YWxpZFJlc3BvbnNlQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTTVRQLlN0cmlwV2l0aFRlbXBvcmFyeUVycm9yLCBTTVRQLlVudHJ1c3RlZEludGVyY2VwdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBYTVBQLlN0cmlwRnJvbUNhcGFiaWxpdGllcywgWE1QUC5TdHJpcEluYm91bmRUTFMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgWE1QUC5VbnRydXN0ZWRJbnRlcmNlcHQgW2RlZmF1bHQ6IEFMTF1cblxuSW5zdGFsbCAob3B0aW9uYWwpXG4tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnJvbSBwaXBcblxuOjpcblxuICAgICM+IHBpcCBpbnN0YWxsIHN0cmlwdGxzXG5cbmZyb20gc291cmNlXG5cbjo6XG5cbiAgICAjPiBzZXR1cC5weSBpbnN0YWxsXG5cbkV4YW1wbGVzXG4tLS0tLS0tLVxuXG46OlxuXG4gICAgICAgICAgICAgICAgICAgICAgaW5ib3VuZCAgICAgICAgICAgICAgICAgICAgb3V0Ym91bmRcbiAgICBbaW5ib3VuZF9wZWVyXTwtLS0tLS0tLS0tLS0tPltsaXN0ZW46cHJveHldPC0tLS0tLS0tLS0tLS0+W291dGJvdW5kX3BlZXIvdGFyZ2V0XVxuICAgICAgc210cC1jbGllbnQgICAgICAgICAgICAgICAgICAgc3RyaXB0bHMgICAgICAgICAgICAgICAgICAgIHJlbW90ZS90YXJnZXRcblxubG9jYWwgYGBzbXRwLWNsaWVudGBgIC0+IGBgbG9jYWxob3N0Ojg4MjVgYCAocHJveHkpIC0+XG5gYG1haWwuZ214Lm5ldDoyNWBgXG5cbkdlbmVyaWMgU1NML1RMUyBJbnRlcmNlcHRpb25cbn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5cblxuYGAtLWdlbmVyaWMtc3NsLWludGVyY2VwdGBgIGlzIGEgZ2xvYmFsIHN3aXRjaCB0byBlbmFibGUgZ2VuZXJpYyBzc2wvdGxzXG5oYW5kc2hha2UgZGV0ZWN0aW9uIGFuZCBzZXNzaW9uIGNvbnZlcnNpb24uIENhbiBiZSBjb21iaW5lZCB3aXRoIGFueVxubWFuZ2xlL3ZlY3Rvci5cblxuYGBHRU5FUklDLkludGVyY2VwdGBgIGlzIGEgbWFuZ2xlL3ZlY3RvciBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgc3NsL3Rsc1xuaGFuZHNoYWtlIGRldGVjdCBhbmQgY29udmVydCBmZWF0dXJlLlxuXG46OlxuXG4gICAgIyBweXRob24gc3RyaXB0bHMucHkgLWwgMC4wLjAuMDo5OTk5IC1yIG1haWwuZ214LmNvbTo0NjUgLXggR0VORVJJQy5JbnRlcmNlcHRcbiAgICAtIElORk8gICAgIC0gPFByb3h5IDB4MWZkY2Y1MCBsaXN0ZW49KCcwLjAuMC4wJywgOTk5OSkgdGFyZ2V0PSgnbWFpbC5nbXguY29tJywgNDY1KT4gcmVhZHkuXG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdmVjdG9yIChwb3J0Ok5vbmUgLCBwcm90bzogR0VORVJJQyk6IDxjbGFzcyBfX21haW5fXy5JbnRlcmNlcHQgYXQgMHgwMjE4QUFCMD5cbiAgICAtIElORk8gICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyIHNzbC90bHNfaW50ZXJjZXB0PUZhbHNlIHZlY3RvcnM9e05vbmU6IHNldChbPGNsYXNzIF9fbWFpbl9fLkludGVyY2VwdCBhdCAweDAyMThBQUIwPl0pfT5cbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHgxZmYwMGIwPiBjbGllbnQgKCcxMjcuMC4wLjEnLCA4MjI4KSBoYXMgY29ubmVjdGVkXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4MWZmMDBiMD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdtYWlsLmdteC5jb20nLCA0NjUpXG4gICAgLSBERUJVRyAgICAtIDxSZXdyaXRlRGlzcGF0Y2hlciAgLSBjaGFuZ2VkIG1hbmdsZTogX19tYWluX18uSW50ZXJjZXB0IG5ldzogVHJ1ZT5cbiAgICAtIElORk8gICAgIC0gUHJvdG9jb2xEZXRlY3Q6IFNTTC9UTFMgdmVyc2lvbjogVExTXzFfMFxuICAgIC0gSU5GTyAgICAgLSBTU0wgSGFuZHNoYWtlIGRldGVjdGVkIC0gcGVyZm9ybWluZyBzc2wvdGxzIGNvbnZlcnNpb25cbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmYwMGIwPiBbY2xpZW50XSA8PiBbICAgICAgXSAgICAgICAgICBTU0wgaGFuZHNoYWtlIGRvbmU6ICgnRUNESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0JywgJ1RMU3YxL1NTTHYzJywgMjU2KVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZjAwYjA+IFsgICAgICBdIDw+IFtzZXJ2ZXJdICAgICAgICAgIFNTTCBoYW5kc2hha2UgZG9uZTogKCdESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0JywgJ1RMU3YxL1NTTHYzJywgMjU2KVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZjAwYjA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyMjAgZ214LmNvbSAobXJnbXgxMDEpIE5lbWVzaXMgRVNNVFAgU2VydmljZSByZWFkeVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmYwMGIwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnaGlcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZmMDBiMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzUwMCBTeW50YXggZXJyb3IsIGNvbW1hbmQgdW5yZWNvZ25pemVkXFxyXFxuJ1xuXG4gICAgIyBweXRob24gc3RyaXB0bHMucHkgLWwgMC4wLjAuMDo5OTk5IC1yIG1haWwuZ214LmNvbToyNSAteCBOT05FIC0tZ2VuZXJpYy1zc2wtaW50ZXJjZXB0XG4gICAgLSBJTkZPICAgICAtIDxQcm94eSAweDFlZmJmNzAgbGlzdGVuPSgnMC4wLjAuMCcsIDk5OTkpIHRhcmdldD0oJ21haWwuZ214LmNvbScsIDI1KT4gcmVhZHkuXG4gICAgLSBJTkZPICAgICAtIDxSZXdyaXRlRGlzcGF0Y2hlciBzc2wvdGxzX2ludGVyY2VwdD1UcnVlIHZlY3RvcnM9e30+XG4gICAgLSBERUJVRyAgICAtIDxQcm90b2NvbERldGVjdCAweDFmMjFiNzAgcHJvdG9jb2xfaWQ9UFJPVE9fU01UUCBsZW5faGlzdG9yeT0wPiAtIHByb3RvY29sIGRldGVjdGVkICh0YXJnZXQgcG9ydClcbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHgxZjEwMTEwPiBjbGllbnQgKCcxMjcuMC4wLjEnLCA4MjkwKSBoYXMgY29ubmVjdGVkXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4MWYxMDExMD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdtYWlsLmdteC5jb20nLCAyNSlcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjEwMTEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjIwIGdteC5jb20gKG1yZ214MTAxKSBOZW1lc2lzIEVTTVRQIFNlcnZpY2UgcmVhZHlcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWYxMDExMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ0VITE8gb3BlbnNzbC5jbGllbnQubmV0XFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmMTAxMTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAtZ214LmNvbSBIZWxsbyBvcGVuc3NsLmNsaWVudC5uZXQgW3h4eC54eHgueHh4Lnh4eF1cXHJcXG4yNTAtU0laRSAzMTQ1NzI4MFxcclxcbjI1MC1BVVRIIExPR0lOIFBMQUlOXFxyXFxuMjUwIFNUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmMTAxMTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdTVEFSVFRMU1xcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjEwMTEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjIwIE9LXFxyXFxuJ1xuICAgIC0gSU5GTyAgICAgLSBQcm90b2NvbERldGVjdDogU1NML1RMUyB2ZXJzaW9uOiBUTFNfMV8wXG4gICAgLSBJTkZPICAgICAtIFNTTCBIYW5kc2hha2UgZGV0ZWN0ZWQgLSBwZXJmb3JtaW5nIHNzbC90bHMgY29udmVyc2lvblxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmMTAxMTA+IFtjbGllbnRdIDw+IFsgICAgICBdICAgICAgICAgIFNTTCBoYW5kc2hha2UgZG9uZTogKCdFQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODQnLCAnVExTdjEvU1NMdjMnLCAyNTYpXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWYxMDExMD4gWyAgICAgIF0gPD4gW3NlcnZlcl0gICAgICAgICAgU1NMIGhhbmRzaGFrZSBkb25lOiAoJ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODQnLCAnVExTdjEvU1NMdjMnLCAyNTYpXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWYxMDExMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ0VITE8gQVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjEwMTEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwLWdteC5jb20gSGVsbG8gQSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDY5OTIwNDI3XFxyXFxuMjUwQVVUSCBMT0dJTiBQTEFJTlxcclxcbidcblxuQXVkaXQgTW9kZVxufn5+fn5+fn5+flxuXG5pdGVyYXRlcyBhbGwgcHJvdG9jb2wgc3BlY2lmaWMgY2FzZXMgb24gYSBwZXIgY2xpZW50IGJhc2lzIGFuZCBrZWVwc1xudHJhY2sgb2YgY2xpZW50cyB2aW9sYXRpbmcgdGhlIHN0YXJ0dGxzIHByb3RvY29sLiBDdHJsK0MgdG8gYWJvcnQgYXVkaXRcbmFuZCBwcmludCByZXN1bHRzLlxuXG46OlxuXG4gICAgIz4gcHl0aG9uIHN0cmlwdGxzIC0tbGlzdGVuIGxvY2FsaG9zdDo4ODI1IC0tcmVtb3RlPW1haWwuZ214Lm5ldDoyNVxuICAgIC0gSU5GTyAgICAgLSA8UHJveHkgMHhmZmNmNmQwY0wgbGlzdGVuPSgnbG9jYWxob3N0JywgODgyNSkgdGFyZ2V0PSgnbWFpbC5nbXgubmV0JywgMjUpPiByZWFkeS5cbiAgICAtIERFQlVHICAgIC0gKiBhZGRlZCB0ZXN0IChwb3J0OjIxICAgLCBwcm90bzogICAgIEZUUCk6IDxjbGFzcyBzdHJpcHRscy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgYXQgMHhmZmQ0NjMyYz5cbiAgICAtIERFQlVHICAgIC0gKiBhZGRlZCB0ZXN0IChwb3J0OjIxICAgLCBwcm90bzogICAgIEZUUCk6IDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhFcnJvciBhdCAweGZmZDQ2MzVjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MjEgICAsIHByb3RvOiAgICAgRlRQKTogPGNsYXNzIHN0cmlwdGxzLlVudHJ1c3RlZEludGVyY2VwdCBhdCAweGZmZDQ2MzhjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MTQzICAsIHByb3RvOiAgICBJTUFQKTogPGNsYXNzIHN0cmlwdGxzLlN0cmlwRnJvbUNhcGFiaWxpdGllcyBhdCAweGZmZDQ2MjZjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MTQzICAsIHByb3RvOiAgICBJTUFQKTogPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEVycm9yIGF0IDB4ZmZkNDYyOWM+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDoxNDMgICwgcHJvdG86ICAgIElNQVApOiA8Y2xhc3Mgc3RyaXB0bHMuVW50cnVzdGVkSW50ZXJjZXB0IGF0IDB4ZmZkNDYyY2M+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDoxMTkgICwgcHJvdG86ICAgIE5OVFApOiA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIGF0IDB4ZmZkNDYzZWM+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDoxMTkgICwgcHJvdG86ICAgIE5OVFApOiA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoRXJyb3IgYXQgMHhmZmQ0NjQxYz5cbiAgICAtIERFQlVHICAgIC0gKiBhZGRlZCB0ZXN0IChwb3J0OjExOSAgLCBwcm90bzogICAgTk5UUCk6IDxjbGFzcyBzdHJpcHRscy5VbnRydXN0ZWRJbnRlcmNlcHQgYXQgMHhmZmQ0NjQ0Yz5cbiAgICAtIERFQlVHICAgIC0gKiBhZGRlZCB0ZXN0IChwb3J0OjExMCAgLCBwcm90bzogICAgUE9QMyk6IDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhFcnJvciBhdCAweGZmZDQ2MWRjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MTEwICAsIHByb3RvOiAgICBQT1AzKTogPGNsYXNzIHN0cmlwdGxzLlVudHJ1c3RlZEludGVyY2VwdCBhdCAweGZmZDQ2MjBjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MjUgICAsIHByb3RvOiAgICBTTVRQKTogPGNsYXNzIHN0cmlwdGxzLlN0cmlwRnJvbUNhcGFiaWxpdGllcyBhdCAweGZmZDMxNmJjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MjUgICAsIHByb3RvOiAgICBTTVRQKTogPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEVycm9yIGF0IDB4ZmZkNDYxNGM+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDoyNSAgICwgcHJvdG86ICAgIFNNVFApOiA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoSW52YWxpZFJlc3BvbnNlQ29kZSBhdCAweGZmZDMxMzhjPlxuICAgIC0gREVCVUcgICAgLSAqIGFkZGVkIHRlc3QgKHBvcnQ6MjUgICAsIHByb3RvOiAgICBTTVRQKTogPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aFRlbXBvcmFyeUVycm9yIGF0IDB4ZmZkNDYxMWM+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDoyNSAgICwgcHJvdG86ICAgIFNNVFApOiA8Y2xhc3Mgc3RyaXB0bHMuVW50cnVzdGVkSW50ZXJjZXB0IGF0IDB4ZmZkNDYxN2M+XG4gICAgLSBERUJVRyAgICAtICogYWRkZWQgdGVzdCAocG9ydDo1MjIyICwgcHJvdG86ICAgIFhNUFApOiA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIGF0IDB4ZmZkNDY0YWM+XG4gICAgLSBJTkZPICAgICAtIDxSZXdyaXRlRGlzcGF0Y2hlciB2ZWN0b3JzPXs1MjIyOiBzZXQoWzxjbGFzcyBzdHJpcHRscy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgYXQgMHhmZmQ0NjRhYz5dKSwgMTEwOiBzZXQoWzxjbGFzcyBzdHJpcHRscy5VbnRydXN0ZWRJbnRlcmNlcHQgYXQgMHhmZmQ0NjIwYz4sIDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhFcnJvciBhdCAweGZmZDQ2MWRjPl0pLCAxNDM6IHNldChbPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEVycm9yIGF0IDB4ZmZkNDYyOWM+LCA8Y2xhc3Mgc3RyaXB0bHMuVW50cnVzdGVkSW50ZXJjZXB0IGF0IDB4ZmZkNDYyY2M+LCA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIGF0IDB4ZmZkNDYyNmM+XSksIDIxOiBzZXQoWzxjbGFzcyBzdHJpcHRscy5VbnRydXN0ZWRJbnRlcmNlcHQgYXQgMHhmZmQ0NjM4Yz4sIDxjbGFzcyBzdHJpcHRscy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgYXQgMHhmZmQ0NjMyYz4sIDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhFcnJvciBhdCAweGZmZDQ2MzVjPl0pLCAxMTk6IHNldChbPGNsYXNzIHN0cmlwdGxzLlN0cmlwV2l0aEVycm9yIGF0IDB4ZmZkNDY0MWM+LCA8Y2xhc3Mgc3RyaXB0bHMuVW50cnVzdGVkSW50ZXJjZXB0IGF0IDB4ZmZkNDY0NGM+LCA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIGF0IDB4ZmZkNDYzZWM+XSksIDI1OiBzZXQoWzxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhJbnZhbGlkUmVzcG9uc2VDb2RlIGF0IDB4ZmZkMzEzOGM+LCA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoVGVtcG9yYXJ5RXJyb3IgYXQgMHhmZmQ0NjExYz4sIDxjbGFzcyBzdHJpcHRscy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgYXQgMHhmZmQzMTZiYz4sIDxjbGFzcyBzdHJpcHRscy5TdHJpcFdpdGhFcnJvciBhdCAweGZmZDQ2MTRjPiwgPGNsYXNzIHN0cmlwdGxzLlVudHJ1c3RlZEludGVyY2VwdCBhdCAweGZmZDQ2MTdjPl0pfT5cbiAgICAtIERFQlVHICAgIC0gPFByb3RvY29sRGV0ZWN0IDB4ZmZjZjZlY2NMIHByb3RvY29sX2lkPVBST1RPX1NNVFAgbGVuX2hpc3Rvcnk9MD4gLSBwcm90b2NvbCBkZXRlY3RlZCAodGFyZ2V0IHBvcnQpXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4ZmZjZjZlNGNMPiBjbGllbnQgKCcxMjcuMC4wLjEnLCAyODkwMikgaGFzIGNvbm5lY3RlZFxuICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweGZmY2Y2ZTRjTD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdtYWlsLmdteC5uZXQnLCAyNSlcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmNmNmU0Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyMjAgZ214LmNvbSAobXJnbXgwMDEpIE5lbWVzaXMgRVNNVFAgU2VydmljZSByZWFkeVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyICAtIGNoYW5nZWQgbWFuZ2xlOiBzdHJpcHRscy5TdHJpcFdpdGhJbnZhbGlkUmVzcG9uc2VDb2RlIG5ldzogVHJ1ZT5cbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmNmNmU0Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdlaGxvIFsxOTIuMTY4LjEzOS4xXVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmNmNmU0Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAtZ214LmNvbSBIZWxsbyBbMTkyLjE2OC4xMzkuMV0gW3h4eC54eHgueHh4Lnh4eF1cXHJcXG4yNTAtU0laRSAzMTQ1NzI4MFxcclxcbjI1MC1BVVRIIExPR0lOIFBMQUlOXFxyXFxuMjUwIFNUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmY2Y2ZTRjTD4gW2NsaWVudF0gPD0gW3NlcnZlcl1bbWFuZ2xlZF0gJzI1MC1nbXguY29tIEhlbGxvIFsxOTIuMTY4LjEzOS4xXSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDMxNDU3MjgwXFxyXFxuMjUwLUFVVEggTE9HSU4gUExBSU5cXHJcXG4yNTAtU1RBUlRUTFNcXHJcXG4yNTAgU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZjZjZlNGNMPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZjZjZlNGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSAnMjAwIFNUUklQVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmY2Y2ZTRjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl1bbWFuZ2xlZF0gTm9uZVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmY2Y2ZTRjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ21haWwgRlJPTTo8YUBiLmNvbT4gc2l6ZT0xMFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmNmNmU0Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICc1MzAgQXV0aGVudGljYXRpb24gcmVxdWlyZWRcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZjZjZlNGNMPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAncnNldFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmNmNmU0Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAgT0tcXHJcXG4nXG4gICAgLSBXQVJOSU5HICAtIDxTZXNzaW9uIDB4ZmZjZjZlNGNMPiB0ZXJtaW5hdGVkLlxuICAgIC0gREVCVUcgICAgLSA8UHJvdG9jb2xEZXRlY3QgMHhmZmQwOTIwY0wgcHJvdG9jb2xfaWQ9UFJPVE9fU01UUCBsZW5faGlzdG9yeT0wPiAtIHByb3RvY29sIGRldGVjdGVkICh0YXJnZXQgcG9ydClcbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHhmZmQwOTE4Y0w+IGNsaWVudCAoJzEyNy4wLjAuMScsIDI4OTA1KSBoYXMgY29ubmVjdGVkXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4ZmZkMDkxOGNMPiBjb25uZWN0aW5nIHRvIHRhcmdldCAoJ21haWwuZ214Lm5ldCcsIDI1KVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MThjTD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzIyMCBnbXguY29tIChtcmdteDAwMykgTmVtZXNpcyBFU01UUCBTZXJ2aWNlIHJlYWR5XFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8UmV3cml0ZURpc3BhdGNoZXIgIC0gY2hhbmdlZCBtYW5nbGU6IHN0cmlwdGxzLlN0cmlwV2l0aFRlbXBvcmFyeUVycm9yIG5ldzogVHJ1ZT5cbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTE4Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdlaGxvIFsxOTIuMTY4LjEzOS4xXVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTE4Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAtZ214LmNvbSBIZWxsbyBbMTkyLjE2OC4xMzkuMV0gW3h4eC54eHgueHh4Lnh4eF1cXHJcXG4yNTAtU0laRSAzMTQ1NzI4MFxcclxcbjI1MC1BVVRIIExPR0lOIFBMQUlOXFxyXFxuMjUwIFNUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MThjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ1NUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MThjTD4gW2NsaWVudF0gPD0gW3NlcnZlcl1bbWFuZ2xlZF0gJzQ1NCBUTFMgbm90IGF2YWlsYWJsZSBkdWUgdG8gdGVtcG9yYXJ5IHJlYXNvblxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTE4Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdW21hbmdsZWRdIE5vbmVcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTE4Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdtYWlsIEZST006PGFAYi5jb20+IHNpemU9MTBcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkxOGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnNTMwIEF1dGhlbnRpY2F0aW9uIHJlcXVpcmVkXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MThjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ3JzZXRcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkxOGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwIE9LXFxyXFxuJ1xuICAgIC0gV0FSTklORyAgLSA8U2Vzc2lvbiAweGZmZDA5MThjTD4gdGVybWluYXRlZC5cbiAgICAtIERFQlVHICAgIC0gPFByb3RvY29sRGV0ZWN0IDB4ZmZkMDkyZWNMIHByb3RvY29sX2lkPVBST1RPX1NNVFAgbGVuX2hpc3Rvcnk9MD4gLSBwcm90b2NvbCBkZXRlY3RlZCAodGFyZ2V0IHBvcnQpXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4ZmZkMDkyNmNMPiBjbGllbnQgKCcxMjcuMC4wLjEnLCAyODkwOCkgaGFzIGNvbm5lY3RlZFxuICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweGZmZDA5MjZjTD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdtYWlsLmdteC5uZXQnLCAyNSlcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTI2Y0w+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyMjAgZ214LmNvbSAobXJnbXgwMDMpIE5lbWVzaXMgRVNNVFAgU2VydmljZSByZWFkeVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyICAtIGNoYW5nZWQgbWFuZ2xlOiBzdHJpcHRscy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgbmV3OiBUcnVlPlxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MjZjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ2VobG8gWzE5Mi4xNjguMTM5LjFdXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MjZjTD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzI1MC1nbXguY29tIEhlbGxvIFsxOTIuMTY4LjEzOS4xXSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDMxNDU3MjgwXFxyXFxuMjUwLUFVVEggTE9HSU4gUExBSU5cXHJcXG4yNTAgU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkyNmNMPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSAnMjUwLWdteC5jb20gSGVsbG8gWzE5Mi4xNjguMTM5LjFdIFt4eHgueHh4Lnh4eC54eHhdXFxyXFxuMjUwLVNJWkUgMzE0NTcyODBcXHJcXG4yNTAgQVVUSCBMT0dJTiBQTEFJTlxcclxcbidcbiAgICAtIFdBUk5JTkcgIC0gPFNlc3Npb24gMHhmZmQwOTI2Y0w+IHRlcm1pbmF0ZWQuXG4gICAgLSBERUJVRyAgICAtIDxQcm90b2NvbERldGVjdCAweGZmZDA5M2NjTCBwcm90b2NvbF9pZD1QUk9UT19TTVRQIGxlbl9oaXN0b3J5PTA+IC0gcHJvdG9jb2wgZGV0ZWN0ZWQgKHRhcmdldCBwb3J0KVxuICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweGZmZDA5MzRjTD4gY2xpZW50ICgnMTI3LjAuMC4xJywgMjg5MTEpIGhhcyBjb25uZWN0ZWRcbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHhmZmQwOTM0Y0w+IGNvbm5lY3RpbmcgdG8gdGFyZ2V0ICgnbWFpbC5nbXgubmV0JywgMjUpXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkzNGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjIwIGdteC5jb20gKG1yZ214MDAyKSBOZW1lc2lzIEVTTVRQIFNlcnZpY2UgcmVhZHlcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxSZXdyaXRlRGlzcGF0Y2hlciAgLSBjaGFuZ2VkIG1hbmdsZTogc3RyaXB0bHMuU3RyaXBXaXRoRXJyb3IgbmV3OiBUcnVlPlxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MzRjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ2VobG8gWzE5Mi4xNjguMTM5LjFdXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MzRjTD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzI1MC1nbXguY29tIEhlbGxvIFsxOTIuMTY4LjEzOS4xXSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDMxNDU3MjgwXFxyXFxuMjUwLUFVVEggTE9HSU4gUExBSU5cXHJcXG4yNTAgU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkzNGNMPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkzNGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSAnNTAxIFN5bnRheCBlcnJvclxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTM0Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdW21hbmdsZWRdIE5vbmVcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHhmZmQwOTM0Y0w+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdtYWlsIEZST006PGFAYi5jb20+IHNpemU9MTBcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkzNGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnNTMwIEF1dGhlbnRpY2F0aW9uIHJlcXVpcmVkXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweGZmZDA5MzRjTD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ3JzZXRcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4ZmZkMDkzNGNMPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwIE9LXFxyXFxuJ1xuICAgIC0gV0FSTklORyAgLSA8U2Vzc2lvbiAweGZmZDA5MzRjTD4gdGVybWluYXRlZC5cbiAgICAtIFdBUk5JTkcgIC0gQ3RybCBDIC0gU3RvcHBpbmcgc2VydmVyXG4gICAgLSBJTkZPICAgICAtICAtLSBhdWRpdCByZXN1bHRzIC0tXG4gICAgLSBJTkZPICAgICAtIFsqXSBjbGllbnQ6IDEyNy4wLjAuMVxuICAgIC0gSU5GTyAgICAgLSAgICAgW1Z1bG5lcmFibGUhXSA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoSW52YWxpZFJlc3BvbnNlQ29kZSBhdCAweGZmZDMxMzhjPlxuICAgIC0gSU5GTyAgICAgLSAgICAgW1Z1bG5lcmFibGUhXSA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoVGVtcG9yYXJ5RXJyb3IgYXQgMHhmZmQ0NjExYz5cbiAgICAtIElORk8gICAgIC0gICAgIFsgICAgICAgICAgIF0gPGNsYXNzIHN0cmlwdGxzLlN0cmlwRnJvbUNhcGFiaWxpdGllcyBhdCAweGZmZDMxNmJjPlxuICAgIC0gSU5GTyAgICAgLSAgICAgW1Z1bG5lcmFibGUhXSA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBXaXRoRXJyb3IgYXQgMHhmZmQ0NjE0Yz5cblxuU3RyaXAgU1RBUlRUTFMgZnJvbSBzZXJ2ZXIgY2FwYWJpbGl0aWVzXG5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5cblxuOjpcblxuICAgICM+IHB5dGhvbiBzdHJpcHRscyAtLWxpc3Rlbj1sb2NhbGhvc3Q6ODgyNSAtLXJlbW90ZT1tYWlsLmdteC5uZXQ6MjUgLS10ZXN0PVNNVFAuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzXG4gICAgLSBJTkZPICAgICAtIDxQcm94eSAweDFmZTZlNzAgbGlzdGVuPSgnbG9jYWxob3N0JywgODgyNSkgdGFyZ2V0PSgnbWFpbC5nbXgubmV0JywgMjUpPiByZWFkeS5cbiAgICAtIElORk8gICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyIGF0dGFja3M9ezI1OiBzZXQoWzxjbGFzcyBfX21haW5fXy5TdHJpcEZyb21DYXBhYmlsaXRpZXMgYXQgMHgwMUZFNzdEOD5dKX0+XG4gICAgLSBERUJVRyAgICAtIDxQcm90b2NvbERldGVjdCAweDFmZTZmOTAgaXNfcHJvdG9jb2w9UFJPVE9fU01UUCBsZW5faGlzdG9yeT0wPiAtIHByb3RvY29sIGRldGVjdGVkICh0YXJnZXQgcG9ydClcbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHgxZmU2ZjEwPiBjbGllbnQgKCcxMjcuMC4wLjEnLCAyMDA3MCkgaGFzIGNvbm5lY3RlZFxuICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweDFmZTZmMTA+IGNvbm5lY3RpbmcgdG8gdGFyZ2V0ICgnbWFpbC5nbXgubmV0JywgMjUpXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlNmYxMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzIyMCBnbXguY29tIChtcmdteDAwMykgTmVtZXNpcyBFU01UUCBTZXJ2aWNlIHJlYWR5XFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZTZmMTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdlaGxvIFsxOTIuMTY4LjEzOS4xXVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmU2ZjEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwLWdteC5jb20gSGVsbG8gWzE5Mi4xNjguMTM5LjFdIFt4eHgueHh4Lnh4eC54eHhdXFxyXFxuMjUwLVNJWkUgMzE0NTcyODBcXHJcXG4yNTAtQVVUSCBMT0dJTiBQTEFJTlxcclxcbjI1MCBTVEFSVFRMU1xcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmU2ZjEwPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSAnMjUwLWdteC5jb20gSGVsbG8gWzE5Mi4xNjguMTM5LjFdIFt4eHgueHh4Lnh4eC54eHhdXFxyXFxuMjUwLVNJWkUgMzE0NTcyODBcXHJcXG4yNTAgQVVUSCBMT0dJTiBQTEFJTlxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmU2ZjEwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnbWFpbCBGUk9NOjxhQGIuY29tPiBzaXplPTEwXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZTZmMTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICc1MzAgQXV0aGVudGljYXRpb24gcmVxdWlyZWRcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlNmYxMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ3JzZXRcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlNmYxMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzI1MCBPS1xcclxcbidcbiAgICAtIFdBUk5JTkcgIC0gPFNlc3Npb24gMHgxZmU2ZjEwPiB0ZXJtaW5hdGVkLlxuXG5JbnZhbGlkIFNUQVJUVExTIHJlc3BvbnNlIGNvZGVcbn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+flxuXG46OlxuXG4gICAgIz4gcHl0aG9uIHN0cmlwdGxzIC0tbGlzdGVuPWxvY2FsaG9zdDo4ODI1IC0tcmVtb3RlPW1haWwuZ214Lm5ldDoyNSAtLXRlc3Q9U01UUC5TdHJpcFdpdGhJbnZhbGlkUmVzcG9uc2VDb2RlXG4gICAgLSBJTkZPICAgICAtIDxQcm94eSAweDFmZWZlNzAgbGlzdGVuPSgnbG9jYWxob3N0JywgODgyNSkgdGFyZ2V0PSgnbWFpbC5nbXgubmV0JywgMjUpPiByZWFkeS5cbiAgICAtIElORk8gICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyIGF0dGFja3M9ezI1OiBzZXQoWzxjbGFzcyBfX21haW5fXy5TdHJpcFdpdGhJbnZhbGlkUmVzcG9uc2VDb2RlIGF0IDB4MDIwMTA3MzA+XSl9PlxuICAgIC0gREVCVUcgICAgLSA8UHJvdG9jb2xEZXRlY3QgMHgxZmVmZjkwIGlzX3Byb3RvY29sPVBST1RPX1NNVFAgbGVuX2hpc3Rvcnk9MD4gLSBwcm90b2NvbCBkZXRlY3RlZCAodGFyZ2V0IHBvcnQpXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gY2xpZW50ICgnMTI3LjAuMC4xJywgMjAwNjEpIGhhcyBjb25uZWN0ZWRcbiAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHgxZmVmZjEwPiBjb25uZWN0aW5nIHRvIHRhcmdldCAoJ21haWwuZ214Lm5ldCcsIDI1KVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZWZmMTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyMjAgZ214LmNvbSAobXJnbXgwMDMpIE5lbWVzaXMgRVNNVFAgU2VydmljZSByZWFkeVxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmVmZjEwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnZWhsbyBbMTkyLjE2OC4xMzkuMV1cXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzI1MC1nbXguY29tIEhlbGxvIFsxOTIuMTY4LjEzOS4xXSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDMxNDU3MjgwXFxyXFxuMjUwLUFVVEggTE9HSU4gUExBSU5cXHJcXG4yNTAgU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gW2NsaWVudF0gPD0gW3NlcnZlcl1bbWFuZ2xlZF0gJzI1MC1nbXguY29tIEhlbGxvIFsxOTIuMTY4LjEzOS4xXSBbeHh4Lnh4eC54eHgueHh4XVxcclxcbjI1MC1TSVpFIDMxNDU3MjgwXFxyXFxuMjUwLUFVVEggTE9HSU4gUExBSU5cXHJcXG4yNTAtU1RBUlRUTFNcXHJcXG4yNTAgU1RBUlRUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ1NUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZWZmMTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdW21hbmdsZWRdICcyMDAgU1RSSVBUTFNcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gW2NsaWVudF0gPT4gW3NlcnZlcl1bbWFuZ2xlZF0gTm9uZVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmZWZmMTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdtYWlsIEZST006PGFAYi5jb20+IHNpemU9MTBcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWZlZmYxMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzUzMCBBdXRoZW50aWNhdGlvbiByZXF1aXJlZFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmVmZjEwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAncnNldFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZmVmZjEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwIE9LXFxyXFxuJ1xuICAgIC0gV0FSTklORyAgLSA8U2Vzc2lvbiAweDFmZWZmMTA+IHRlcm1pbmF0ZWQuXG5cblVudHJ1c3RlZCBTU0wgSW50ZXJjZXB0IChmb3IgY2xpZW50cyBub3QgY2hlY2tpbmcgc2VydmVyIGNlcnQgdHJ1c3QpXG5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+flxuXG46OlxuXG4gICAgIz4gcHl0aG9uIHN0cmlwdGxzIC0tbGlzdGVuPWxvY2FsaG9zdDo4ODI1IC0tcmVtb3RlPW1haWwuZ214Lm5ldDoyNSAtLXRlc3Q9U01UUC5VbnRydXN0ZWRJbnRlcmNlcHRcbiAgICAtIElORk8gICAgIC0gPFByb3h5IDB4MWY0NjhmMCBsaXN0ZW49KCdsb2NhbGhvc3QnLCA4ODI1KSB0YXJnZXQ9KCdtYWlsLmdteC5uZXQnLCAyNSk+IHJlYWR5LlxuICAgIC0gSU5GTyAgICAgLSA8UmV3cml0ZURpc3BhdGNoZXIgYXR0YWNrcz17MjU6IHNldChbPGNsYXNzIF9fbWFpbl9fLlVudHJ1c3RlZEludGVyY2VwdCBhdCAweDAxRjQ1Mjk4Pl0pfT5cbiAgICAtIERFQlVHICAgIC0gPFByb3RvY29sRGV0ZWN0IDB4MWY0NmExMCBwcm90b2NvbF9pZD1QUk9UT19TTVRQIGxlbl9oaXN0b3J5PTA+IC0gcHJvdG9jb2wgZGV0ZWN0ZWQgKHRhcmdldCBwb3J0KVxuICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IGNsaWVudCAoJzEyNy4wLjAuMScsIDIwMjM4KSBoYXMgY29ubmVjdGVkXG4gICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4MWY0Njk5MD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdtYWlsLmdteC5uZXQnLCAyNSlcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjIwIGdteC5jb20gKG1yZ214MDAyKSBOZW1lc2lzIEVTTVRQIFNlcnZpY2UgcmVhZHlcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWY0Njk5MD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ2VobG8gWzE5Mi4xNjguMTM5LjFdXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAtZ214LmNvbSBIZWxsbyBbMTkyLjE2OC4xMzkuMV0gW3h4eC54eHgueHh4Lnh4eF1cXHJcXG4yNTAtU0laRSAzMTQ1NzI4MFxcclxcbjI1MC1BVVRIIExPR0lOIFBMQUlOXFxyXFxuMjUwIFNUQVJUVExTXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdTVEFSVFRMU1xcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSAnMjIwIEdvIGFoZWFkXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdW21hbmdsZWRdIHdhaXRpbmcgZm9yIGluYm91bmQgU1NMIEhhbmRzaGFrZVxuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdTVEFSVFRMU1xcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA9PiBbc2VydmVyXVttYW5nbGVkXSBwZXJmb3JtaW5nIG91dGJvdW5kIFNTTCBoYW5kc2hha2VcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA9PiBbc2VydmVyXVttYW5nbGVkXSBOb25lXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWY0Njk5MD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJ2VobG8gWzE5Mi4xNjguMTM5LjFdXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgICcyNTAtZ214LmNvbSBIZWxsbyBbMTkyLjE2OC4xMzkuMV0gW3h4eC54eHgueHh4Lnh4eF1cXHJcXG4yNTAtU0laRSA2OTkyMDQyN1xcclxcbjI1MCBBVVRIIExPR0lOIFBMQUlOXFxyXFxuJ1xuICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICdtYWlsIEZST006PGFAYi5jb20+IHNpemU9MTBcXHJcXG4nXG4gICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4MWY0Njk5MD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgJzUzMCBBdXRoZW50aWNhdGlvbiByZXF1aXJlZFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAncnNldFxcclxcbidcbiAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHgxZjQ2OTkwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnMjUwIE9LXFxyXFxuJ1xuICAgIC0gV0FSTklORyAgLSA8U2Vzc2lvbiAweDFmNDY5OTA+IHRlcm1pbmF0ZWQuXG5cblhNUFAgQXVkaXQgVHJhaWxcbn5+fn5+fn5+fn5+fn5+fn5cblxuRXhhbXBsZTogUGlkZ2luIHdpdGggb3B0aW9uYWwgdHJhbnNwb3J0IHNlY3VyaXR5LlxuXG5YTVBQLlN0cmlwSW5ib3VuZFRMUyAtIEluYm91bmQgUGxhaW4gLSBPdXRib3VuZCBUTFMgLSBpbiBjYXNlIHNlcnZlciByZXF1aXJlcyBzdGFydHRsc1xuXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cblxuOjpcblxuICAgICAgICBweXRob24gc3RyaXB0bHMgLS1saXN0ZW4gMC4wLjAuMDo1MjIyIC0tcmVtb3RlIGphYmJlci5jY2MuZGU6NTIyMiAtayAuLi9zZXJ2ZXIucGVtXG4gICAgICAgIC0gSU5GTyAgICAgLSA8UHJveHkgMHg3ZjA4MzIyYmEzMTAgbGlzdGVuPSgnMC4wLjAuMCcsIDUyMjIpIHRhcmdldD0oJ2phYmJlci5jY2MuZGUnLCA1MjIyKT4gcmVhZHkuXG4gICAgICAgIC4uLlxuICAgICAgICAtIERFQlVHICAgIC0gPFByb3RvY29sRGV0ZWN0IDB4N2YwODMxOTZhODEwIHByb3RvY29sX2lkPVBST1RPX1hNUFAgbGVuX2hpc3Rvcnk9MD4gLSBwcm90b2NvbCBkZXRlY3RlZCAodGFyZ2V0IHBvcnQpXG4gICAgICAgIC4uLlxuICAgICAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE3ZDA+IGNsaWVudCAoJzE5Mi4xNjguMTM5LjEnLCA1Njg4OCkgaGFzIGNvbm5lY3RlZFxuICAgICAgICAtIElORk8gICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE3ZDA+IGNvbm5lY3RpbmcgdG8gdGFyZ2V0ICgnamFiYmVyLmNjYy5kZScsIDUyMjIpXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTdkMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgXCI8P3htbCB2ZXJzaW9uPScxLjAnID8+PHN0cmVhbTpzdHJlYW0gdG89J2phYmJlci5jY2MuZGUnIHhtbG5zPSdqYWJiZXI6Y2xpZW50JyB4bWxuczpzdHJlYW09J2h0dHA6Ly9ldGhlcnguamFiYmVyLm9yZy9zdHJlYW1zJyB2ZXJzaW9uPScxLjAnPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8UmV3cml0ZURpc3BhdGNoZXIgIC0gY2hhbmdlZCBtYW5nbGU6IHN0cmlwdGxzLlN0cmlwSW5ib3VuZFRMUyBuZXc6IFRydWU+XG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTdkMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgXCI8P3htbCB2ZXJzaW9uPScxLjAnPz48c3RyZWFtOnN0cmVhbSB4bWxucz0namFiYmVyOmNsaWVudCcgeG1sbnM6c3RyZWFtPSdodHRwOi8vZXRoZXJ4LmphYmJlci5vcmcvc3RyZWFtcycgaWQ9JzEzODIxNzAxNTg5OTcyOTc4NTk0JyBmcm9tPSdqYWJiZXIuY2NjLmRlJyB2ZXJzaW9uPScxLjAnIHhtbDpsYW5nPSdlbic+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhN2QwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICBcIjxzdHJlYW06ZmVhdHVyZXM+PGMgeG1sbnM9J2h0dHA6Ly9qYWJiZXIub3JnL3Byb3RvY29sL2NhcHMnIGhhc2g9J3NoYS0xJyBub2RlPSdodHRwOi8vd3d3LnByb2Nlc3Mtb25lLm5ldC9lbi9lamFiYmVyZC8nIHZlcj0nYnZFT2pXOXE4Q0V3OG13OGVjTlRMWHZZNVdRPScvPjxzdGFydHRscyB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXRscyc+PHJlcXVpcmVkLz48L3N0YXJ0dGxzPjwvc3RyZWFtOmZlYXR1cmVzPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTdkMD4gW2NsaWVudF0gPT4gW3NlcnZlcl1bbWFuZ2xlZF0gXCI8c3RhcnR0bHMgeG1sbnM9J3VybjppZXRmOnBhcmFtczp4bWw6bnM6eG1wcC10bHMnLz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE3ZDA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdW21hbmdsZWRdIHBlcmZvcm1pbmcgb3V0Ym91bmQgU1NMIGhhbmRzaGFrZVxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE3ZDA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdW21hbmdsZWRdIFwiPHN0cmVhbTpmZWF0dXJlcz48YyB4bWxucz0naHR0cDovL2phYmJlci5vcmcvcHJvdG9jb2wvY2FwcycgaGFzaD0nc2hhLTEnIG5vZGU9J2h0dHA6Ly93d3cucHJvY2Vzcy1vbmUubmV0L2VuL2VqYWJiZXJkLycgdmVyPSdidkVPalc5cThDRXc4bXc4ZWNOVExYdlk1V1E9Jy8+PC9zdHJlYW06ZmVhdHVyZXM+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhN2QwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICBcIjxpcSB0eXBlPSdnZXQnIGlkPSdwdXJwbGU5ZjkxNGY4MCc+PHF1ZXJ5IHhtbG5zPSdqYWJiZXI6aXE6YXV0aCc+PHVzZXJuYW1lPnRpbjwvdXNlcm5hbWU+PC9xdWVyeT48L2lxPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTdkMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgXCI8P3htbCB2ZXJzaW9uPScxLjAnPz48c3RyZWFtOnN0cmVhbSB4bWxucz0namFiYmVyOmNsaWVudCcgeG1sbnM6c3RyZWFtPSdodHRwOi8vZXRoZXJ4LmphYmJlci5vcmcvc3RyZWFtcycgaWQ9JzEzNTE1NDQ2OTQ4MjgyODM1NTA3JyBmcm9tPSdqYWJiZXIuY2NjLmRlJyB4bWw6bGFuZz0nZW4nPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTdkMD4gW2NsaWVudF0gPD0gW3NlcnZlcl0gICAgICAgICAgXCI8c3RyZWFtOmVycm9yPjxpbnZhbGlkLW5hbWVzcGFjZSB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXN0cmVhbXMnPjwvaW52YWxpZC1uYW1lc3BhY2U+PC9zdHJlYW06ZXJyb3I+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhN2QwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICAnPC9zdHJlYW06c3RyZWFtPidcbiAgICAgICAgLSBXQVJOSU5HICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhN2QwPiB0ZXJtaW5hdGVkLlxuXG5YTVBQLlN0cmlwRnJvbUNhcGFiaWxpdGllcyAtIHN0cmlwIHN0YXJ0dGxzIHNlcnZlciBhbm5vdWNlbWVudFxuXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5cblxuOjpcblxuICAgICAgICAtIERFQlVHICAgIC0gPFByb3RvY29sRGV0ZWN0IDB4N2YwODMxOTZhOTkwIHByb3RvY29sX2lkPVBST1RPX1hNUFAgbGVuX2hpc3Rvcnk9MD4gLSBwcm90b2NvbCBkZXRlY3RlZCAodGFyZ2V0IHBvcnQpXG4gICAgICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTkxMD4gY2xpZW50ICgnMTkyLjE2OC4xMzkuMScsIDU2ODkwKSBoYXMgY29ubmVjdGVkXG4gICAgICAgIC0gSU5GTyAgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTkxMD4gY29ubmVjdGluZyB0byB0YXJnZXQgKCdqYWJiZXIuY2NjLmRlJywgNTIyMilcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOTEwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICBcIjw/eG1sIHZlcnNpb249JzEuMCcgPz48c3RyZWFtOnN0cmVhbSB0bz0namFiYmVyLmNjYy5kZScgeG1sbnM9J2phYmJlcjpjbGllbnQnIHhtbG5zOnN0cmVhbT0naHR0cDovL2V0aGVyeC5qYWJiZXIub3JnL3N0cmVhbXMnIHZlcnNpb249JzEuMCc+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxSZXdyaXRlRGlzcGF0Y2hlciAgLSBjaGFuZ2VkIG1hbmdsZTogc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIG5ldzogVHJ1ZT5cbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOTEwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICBcIjw/eG1sIHZlcnNpb249JzEuMCc/PjxzdHJlYW06c3RyZWFtIHhtbG5zPSdqYWJiZXI6Y2xpZW50JyB4bWxuczpzdHJlYW09J2h0dHA6Ly9ldGhlcnguamFiYmVyLm9yZy9zdHJlYW1zJyBpZD0nMTIzODE1MjU1MjUyNTg5ODYzMjInIGZyb209J2phYmJlci5jY2MuZGUnIHZlcnNpb249JzEuMCcgeG1sOmxhbmc9J2VuJz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE5MTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgIFwiPHN0cmVhbTpmZWF0dXJlcz48YyB4bWxucz0naHR0cDovL2phYmJlci5vcmcvcHJvdG9jb2wvY2FwcycgaGFzaD0nc2hhLTEnIG5vZGU9J2h0dHA6Ly93d3cucHJvY2Vzcy1vbmUubmV0L2VuL2VqYWJiZXJkLycgdmVyPSdidkVPalc5cThDRXc4bXc4ZWNOVExYdlk1V1E9Jy8+PHN0YXJ0dGxzIHhtbG5zPSd1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOnhtcHAtdGxzJz48cmVxdWlyZWQvPjwvc3RhcnR0bHM+PC9zdHJlYW06ZmVhdHVyZXM+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOTEwPiBbY2xpZW50XSA8PSBbc2VydmVyXVttYW5nbGVkXSBcIjxzdHJlYW06ZmVhdHVyZXM+PGMgeG1sbnM9J2h0dHA6Ly9qYWJiZXIub3JnL3Byb3RvY29sL2NhcHMnIGhhc2g9J3NoYS0xJyBub2RlPSdodHRwOi8vd3d3LnByb2Nlc3Mtb25lLm5ldC9lbi9lamFiYmVyZC8nIHZlcj0nYnZFT2pXOXE4Q0V3OG13OGVjTlRMWHZZNVdRPScvPjwvc3RyZWFtOmZlYXR1cmVzPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YTkxMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgXCI8aXEgdHlwZT0nZ2V0JyBpZD0ncHVycGxlY2ZlMmVlMDcnPjxxdWVyeSB4bWxucz0namFiYmVyOmlxOmF1dGgnPjx1c2VybmFtZT50aW48L3VzZXJuYW1lPjwvcXVlcnk+PC9pcT5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE5MTA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgIFwiPHN0cmVhbTplcnJvcj48cG9saWN5LXZpb2xhdGlvbiB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXN0cmVhbXMnPjwvcG9saWN5LXZpb2xhdGlvbj48dGV4dCB4bWw6bGFuZz0nJyB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXN0cmVhbXMnPlVzZSBvZiBTVEFSVFRMUyByZXF1aXJlZDwvdGV4dD48L3N0cmVhbTplcnJvcj48L3N0cmVhbTpzdHJlYW0+XCJcbiAgICAgICAgLSBXQVJOSU5HICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOTEwPiB0ZXJtaW5hdGVkLlxuXG5YTVBQLlN0cmlwVW50cnVzdGVkSW50ZXJjZXB0IC0gVExTIEludGVyY2VwdGlvbiBpbmJvdW5kIGFuZCBvdXRib3VuZCB3aXRoIG93biBjZXJ0aWZpY2F0ZS9rZXlcbl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXlxuXG46OlxuXG4gICAgICAgIC0gREVCVUcgICAgLSA8UHJvdG9jb2xEZXRlY3QgMHg3ZjA4MzE5NmFhOTAgcHJvdG9jb2xfaWQ9UFJPVE9fWE1QUCBsZW5faGlzdG9yeT0wPiAtIHByb3RvY29sIGRldGVjdGVkICh0YXJnZXQgcG9ydClcbiAgICAgICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBjbGllbnQgKCcxOTIuMTY4LjEzOS4xJywgNTY4OTIpIGhhcyBjb25uZWN0ZWRcbiAgICAgICAgLSBJTkZPICAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBjb25uZWN0aW5nIHRvIHRhcmdldCAoJ2phYmJlci5jY2MuZGUnLCA1MjIyKVxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgIFwiPD94bWwgdmVyc2lvbj0nMS4wJyA/PjxzdHJlYW06c3RyZWFtIHRvPSdqYWJiZXIuY2NjLmRlJyB4bWxucz0namFiYmVyOmNsaWVudCcgeG1sbnM6c3RyZWFtPSdodHRwOi8vZXRoZXJ4LmphYmJlci5vcmcvc3RyZWFtcycgdmVyc2lvbj0nMS4wJz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFJld3JpdGVEaXNwYXRjaGVyICAtIGNoYW5nZWQgbWFuZ2xlOiBzdHJpcHRscy5VbnRydXN0ZWRJbnRlcmNlcHQgbmV3OiBUcnVlPlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgIFwiPD94bWwgdmVyc2lvbj0nMS4wJz8+PHN0cmVhbTpzdHJlYW0geG1sbnM9J2phYmJlcjpjbGllbnQnIHhtbG5zOnN0cmVhbT0naHR0cDovL2V0aGVyeC5qYWJiZXIub3JnL3N0cmVhbXMnIGlkPScxMDA1MTc0MzU3OTU3MjMwNDk0OCcgZnJvbT0namFiYmVyLmNjYy5kZScgdmVyc2lvbj0nMS4wJyB4bWw6bGFuZz0nZW4nPjxzdHJlYW06ZmVhdHVyZXM+PGMgeG1sbnM9J2h0dHA6Ly9qYWJiZXIub3JnL3Byb3RvY29sL2NhcHMnIGhhc2g9J3NoYS0xJyBub2RlPSdodHRwOi8vd3d3LnByb2Nlc3Mtb25lLm5ldC9lbi9lamFiYmVyZC8nIHZlcj0nYnZFT2pXOXE4Q0V3OG13OGVjTlRMWHZZNVdRPScvPjxzdGFydHRscyB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXRscyc+PHJlcXVpcmVkLz48L3N0YXJ0dGxzPjwvc3RyZWFtOmZlYXR1cmVzPlwiXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YThkMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgXCI8c3RhcnR0bHMgeG1sbnM9J3VybjppZXRmOnBhcmFtczp4bWw6bnM6eG1wcC10bHMnLz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdW21hbmdsZWRdIFwiPHByb2NlZWQgeG1sbnM9J3VybjppZXRmOnBhcmFtczp4bWw6bnM6eG1wcC10bHMnLz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdW21hbmdsZWRdIHdhaXRpbmcgZm9yIGluYm91bmQgU1NMIEhhbmRzaGFrZVxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgIFwiPHN0YXJ0dGxzIHhtbG5zPSd1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOnhtcHAtdGxzJy8+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA9PiBbc2VydmVyXVttYW5nbGVkXSBwZXJmb3JtaW5nIG91dGJvdW5kIFNTTCBoYW5kc2hha2VcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA9PiBbc2VydmVyXVttYW5nbGVkXSBOb25lXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YThkMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgJzwnXG4gICAgICAgIC0gREVCVUcgICAgLSA8U2Vzc2lvbiAweDdmMDgzMTk2YThkMD4gW2NsaWVudF0gPT4gW3NlcnZlcl0gICAgICAgICAgXCJzdHJlYW06c3RyZWFtIHRvPSdqYWJiZXIuY2NjLmRlJyB4bWxucz0namFiYmVyOmNsaWVudCcgeG1sbnM6c3RyZWFtPSdodHRwOi8vZXRoZXJ4LmphYmJlci5vcmcvc3RyZWFtcycgdmVyc2lvbj0nMS4wJz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdIDw9IFtzZXJ2ZXJdICAgICAgICAgIFwiPD94bWwgdmVyc2lvbj0nMS4wJz8+PHN0cmVhbTpzdHJlYW0geG1sbnM9J2phYmJlcjpjbGllbnQnIHhtbG5zOnN0cmVhbT0naHR0cDovL2V0aGVyeC5qYWJiZXIub3JnL3N0cmVhbXMnIGlkPSc2OTM4NjQyMTA3Mzk4NTM0MjU5JyBmcm9tPSdqYWJiZXIuY2NjLmRlJyB2ZXJzaW9uPScxLjAnIHhtbDpsYW5nPSdlbic+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICBcIjxzdHJlYW06ZmVhdHVyZXM+PGMgeG1sbnM9J2h0dHA6Ly9qYWJiZXIub3JnL3Byb3RvY29sL2NhcHMnIGhhc2g9J3NoYS0xJyBub2RlPSdodHRwOi8vd3d3LnByb2Nlc3Mtb25lLm5ldC9lbi9lamFiYmVyZC8nIHZlcj0nYnZFT2pXOXE4Q0V3OG13OGVjTlRMWHZZNVdRPScvPjxyZWdpc3RlciB4bWxucz0naHR0cDovL2phYmJlci5vcmcvZmVhdHVyZXMvaXEtcmVnaXN0ZXInLz48bWVjaGFuaXNtcyB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXNhc2wnPjxtZWNoYW5pc20+UExBSU48L21lY2hhbmlzbT48bWVjaGFuaXNtPlgtT0FVVEgyPC9tZWNoYW5pc20+PG1lY2hhbmlzbT5TQ1JBTS1TSEEtMTwvbWVjaGFuaXNtPjwvbWVjaGFuaXNtcz48L3N0cmVhbTpmZWF0dXJlcz5cIlxuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgICc8J1xuICAgICAgICAtIERFQlVHICAgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IFtjbGllbnRdID0+IFtzZXJ2ZXJdICAgICAgICAgIFwiYXV0aCB4bWxucz0ndXJuOmlldGY6cGFyYW1zOnhtbDpuczp4bXBwLXNhc2wnIG1lY2hhbmlzbT0nUExBSU4nIHhtbG5zOmdhPSdodHRwOi8vd3d3Lmdvb2dsZS5jb20vdGFsay9wcm90b2NvbC9hdXRoJyBnYTpjbGllbnQtdXNlcy1mdWxsLWJpbmQtcmVzdWx0PSd0cnVlJz5BSFJwYmdCNGVBPT08L2F1dGg+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA8PSBbc2VydmVyXSAgICAgICAgICBcIjxmYWlsdXJlIHhtbG5zPSd1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOnhtcHAtc2FzbCc+PG5vdC1hdXRob3JpemVkLz48L2ZhaWx1cmU+XCJcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnPCdcbiAgICAgICAgLSBERUJVRyAgICAtIDxTZXNzaW9uIDB4N2YwODMxOTZhOGQwPiBbY2xpZW50XSA9PiBbc2VydmVyXSAgICAgICAgICAnL3N0cmVhbTpzdHJlYW0+J1xuICAgICAgICAtIFdBUk5JTkcgIC0gPFNlc3Npb24gMHg3ZjA4MzE5NmE4ZDA+IHRlcm1pbmF0ZWQuXG5cblhNUFAgQXVkaXQgcmVzdWx0c1xuXl5eXl5eXl5eXl5eXl5eXl5eXG5cbjo6XG5cbiAgICAgICAgLSBXQVJOSU5HICAtIEN0cmwgQyAtIFN0b3BwaW5nIHNlcnZlclxuICAgICAgICAtIElORk8gICAgIC0gIC0tIGF1ZGl0IHJlc3VsdHMgLS1cbiAgICAgICAgLSBJTkZPICAgICAtIFsqXSBjbGllbnQ6IDE5Mi4xNjguMTM5LjFcbiAgICAgICAgLSBJTkZPICAgICAtICAgICBbVnVsbmVyYWJsZSFdIDxjbGFzcyBzdHJpcHRscy5TdHJpcEluYm91bmRUTFMgYXQgMHg3ZjA4MzE5YTY4MDg+XG4gICAgICAgIC0gSU5GTyAgICAgLSAgICAgW1Z1bG5lcmFibGUhXSA8Y2xhc3Mgc3RyaXB0bHMuU3RyaXBGcm9tQ2FwYWJpbGl0aWVzIGF0IDB4N2YwODMxOWE2N2EwPlxuICAgICAgICAtIElORk8gICAgIC0gICAgIFtWdWxuZXJhYmxlIV0gPGNsYXNzIHN0cmlwdGxzLlVudHJ1c3RlZEludGVyY2VwdCBhdCAweDdmMDgzMTlhNjg3MD5cblxuIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9zdHJpcHRscy90YXJiYWxsL3YwLjUiLA==
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9zdHJpcHRscy8iLA==
ICAgICJrZXl3b3JkcyI6ICJzdHJpcHRscyIs
ICAgICJsaWNlbnNlIjogIkdQTHYyIiw=
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInN0cmlwdGxzIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaXB0bHMvIiw=
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaXB0bHMvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkRvd25sb2FkIjogImh0dHBzOi8vZ2l0aHViLmNvbS90aW50aW53ZWIvc3RyaXB0bHMvdGFyYmFsbC92MC41Iiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS90aW50aW53ZWIvc3RyaXB0bHMvIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaXB0bHMvMC41LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogInBvYyBpbXBsZW1lbnRhdGlvbiBvZiBTVEFSVFRMUyBzdHJpcHBpbmcgYXR0YWNrcyIs
ICAgICJ2ZXJzaW9uIjogIjAuNSIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAzMDM3OTUyLA==
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNzlmMTJmOWRlM2I1ODU1NTJjMTRiNzkyZTg2N2U2MzJiMWMxNTc1YjBkYjQwYjkzNGQ2NGY3MDc0MmIyYmQ4Iiw=
ICAgICAgICAgICJtZDUiOiAiZWZhZDQyOTFkZWU2NmMxYTM3NTdhYWQzNzQyMzA3NzkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjc4OTFjODRiZDVlN2VhMDhlYjk4ZDhhOWJiOTU0ZDcxNWQyYTUyYTEwY2U1Zjg5ZTZlZjcwNTVkOWRjZTc4NyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaXB0bHMtMC4xLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlZmFkNDI5MWRlZTY2YzFhMzc1N2FhZDM3NDIzMDc3OSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEyMzk5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0wMi0wMlQyMTo1OToxNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0wMi0wMlQyMTo1OToxNi4xMjQ1OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNy85Zi8xMmY5ZGUzYjU4NTU1MmMxNGI3OTJlODY3ZTYzMmIxYzE1NzViMGRiNDBiOTM0ZDY0ZjcwNzQyYjJiZDgvc3RyaXB0bHMtMC4xLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNTlmYWRlNTQyNDE4Y2EyNmU2M2UxZjA0MjU3MDc5ODZhNzVlY2MyMTAzMGM5OTJjYzJiZWUxN2IwOTA5NDQ4Iiw=
ICAgICAgICAgICJtZDUiOiAiYTBiZWIyYWFkODU3YWY2YmUzYTlmMDlkOWE2OTBlNWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTIyMDA5OGQzOTgwNjdmNTgzYjM1ZDFkOTFhNzI5YzNmZmE3YWYwNDNmMzI5ZmZmMGY5N2MzZDUyNDQ4NjMxYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaXB0bHMtMC4yLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhMGJlYjJhYWQ4NTdhZjZiZTNhOWYwOWQ5YTY5MGU1YyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIwMjUzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0wMi0xMFQyMTozOTo1OSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0wMi0xMFQyMTozOTo1OS4zNzY3NjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNS85Zi9hZGU1NDI0MThjYTI2ZTYzZTFmMDQyNTcwNzk4NmE3NWVjYzIxMDMwYzk5MmNjMmJlZTE3YjA5MDk0NDgvc3RyaXB0bHMtMC4yLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjMiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhYjJkMzNlYjg1ZDc3ODEzZDM0NjM0NTI4NTJjZDA4Y2UwYjg3ZDExOWU0YmNjNzg4NTA1ZjRlM2Y4NGRhMjgwIiw=
ICAgICAgICAgICJtZDUiOiAiOTE3OGVlNTcwOWNkOTc0YWNjZTNlMGNkODlmOTI4NWEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjVlZjhlYzM1NGQ2NDIxMzc5Mzk0ZmU2ODQwNzM0NDM3NmRhN2E3ZGY1YTBlZjM4NWVlNzdkZDdkZDcyYzExNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaXB0bHMtMC4zLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5MTc4ZWU1NzA5Y2Q5NzRhY2NlM2UwY2Q4OWY5Mjg1YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDIzNzI5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0wMy0yMFQxOToyODo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0wMy0yMFQxOToyODo0Ny4wOTkxMjVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hYi8yZC8zM2ViODVkNzc4MTNkMzQ2MzQ1Mjg1MmNkMDhjZTBiODdkMTE5ZTRiY2M3ODg1MDVmNGUzZjg0ZGEyODAvc3RyaXB0bHMtMC4zLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjQiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZGNjMTNmNWI5NDgxZTY2YWFkNjAzNzQxY2YxNzg5YzhjY2M1ZGNhMWJjZDUyN2EzZjlmNDk0ZDI3ZjNlMWM1Iiw=
ICAgICAgICAgICJtZDUiOiAiYTY1ODE2YjQyZjAwNTYwM2MwNzFkZTYzMTA4ZmVkMTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjYxNzE5NjkxZTQxOGQxMDUwMDJmMmNmZDIwOGUwNTE0ZDQ1Y2FiOTdhYjZhYTg5MTQzMjE0MTQyNmM5Mjk1ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaXB0bHMtMC40LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNjU4MTZiNDJmMDA1NjAzYzA3MWRlNjMxMDhmZWQxNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI1Njc2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0wNS0xNVQyMTowODoyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0wNS0xNVQyMTowODoyMy40MjM2MjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZC9jYy8xM2Y1Yjk0ODFlNjZhYWQ2MDM3NDFjZjE3ODljOGNjYzVkY2ExYmNkNTI3YTNmOWY0OTRkMjdmM2UxYzUvc3RyaXB0bHMtMC40LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjUiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNDY1NTg1Mzg3MGVlMzE5NmI5OTNlYzAxNjYwNWNmMTdlZDE1MDYxMDRmMzFkZDI3NjUxMzNjYmUwNjM3YjYwIiw=
ICAgICAgICAgICJtZDUiOiAiYThlYzhkNjVkN2Q4M2VjYjgxZmZjNmVlZjE1YzI0MmYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjJjMTA5MGRiNThlMzE4OGY4NDRlMzBiZTJhZmE0MDRjYmM3ZjFjMmM4YmMxM2EyYTAzMDkyYzIwNzFjZTNmZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaXB0bHMtMC41LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhOGVjOGQ2NWQ3ZDgzZWNiODFmZmM2ZWVmMTVjMjQyZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDI2NDk1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNy0wNy0yMFQyMjowMTozNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNy0wNy0yMFQyMjowMTozNS4yOTAyMzNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNC82NS81ODUzODcwZWUzMTk2Yjk5M2VjMDE2NjA1Y2YxN2VkMTUwNjEwNGYzMWRkMjc2NTEzM2NiZTA2MzdiNjAvc3RyaXB0bHMtMC41LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMDQ2NTU4NTM4NzBlZTMxOTZiOTkzZWMwMTY2MDVjZjE3ZWQxNTA2MTA0ZjMxZGQyNzY1MTMzY2JlMDYzN2I2MCIs
ICAgICAgICAibWQ1IjogImE4ZWM4ZDY1ZDdkODNlY2I4MWZmYzZlZWYxNWMyNDJmIiw=
ICAgICAgICAic2hhMjU2IjogIjIyYzEwOTBkYjU4ZTMxODhmODQ0ZTMwYmUyYWZhNDA0Y2JjN2YxYzJjOGJjMTNhMmEwMzA5MmMyMDcxY2UzZmQi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInN0cmlwdGxzLTAuNS50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYThlYzhkNjVkN2Q4M2VjYjgxZmZjNmVlZjE1YzI0MmYiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAyNjQ5NSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTctMDctMjBUMjI6MDE6MzUiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTctMDctMjBUMjI6MDE6MzUuMjkwMjMzWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMDQvNjUvNTg1Mzg3MGVlMzE5NmI5OTNlYzAxNjYwNWNmMTdlZDE1MDYxMDRmMzFkZDI3NjUxMzNjYmUwNjM3YjYwL3N0cmlwdGxzLTAuNS50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
