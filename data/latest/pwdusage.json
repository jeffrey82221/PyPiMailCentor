ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiQnVvbmdpb3Jub1RleGFzIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICI8IS0tLVxuIyBjc3BlbGw6IGlnbm9yZSB2ZW52IGJlYXV0aWZ1bHNvdXAgdHpkYXRhIG51bXB5IHNpbXBsZWpzb24gZGF0YXNvdXJjZSBweXBpIHB3ZHVzYWdlXG4tLS0+IFxuXG4jIHB3ZHVzYWdlXG5cbkEgdXNhZ2UgKG1haW5seSB0aW1lIG9mIHVzZSkgcHJveHkgbWljcm9zZXJ2aWNlIGZvciBQb3dlcndhbGwtRGFzaGJvYXJkLlxuXG4hW1VzYWdlIGRldGFpbCA3ZF0oaHR0cHM6Ly9naXRodWIuY29tL0J1b25naW9ybm9UZXhhcy9wd2R1c2FnZS9hc3NldHMvNDgyNjQzNTgvZjJhMDE0ZTYtNGYxNy00MzdlLThhYjAtNDA5ZjUxMjZlYTdmKVxuXG4jIENoYW5nZSBMb2dcblxuSSdtIHRyYWNraW5nIHByb2dyZXNzIHRvd2FyZHMgdjEuMCBhdDogXG5odHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL3B3ZHVzYWdlL2lzc3Vlcy8xLlxuXG5Gcm9tIHYwLjkuNCwgdGhlIHB5dGhvbi9taWNyb3NlcnZpY2UgaXMgZmVhdHVyZSBjb21wbGV0ZS4gUmVsZWFzZXMgdXAgdG8gdjEuMCB3aWxsIFxuYWRkcmVzcyBidWcgZml4ZXMgYW5kIGRvY3VtZW50YXRpb24gKGFuZCBpbmNvcnBvcmF0ZSBhbnkgbmV3IGFnZW50IGNvbnRyaWJ1dGlvbnMpLiBcblxuIyMgQnJlYWtpbmdcblxuVGhpcyBzZWN0aW9uIG5vdGVzIGFueSBicmVha2luZyBjaGFuZ2VzLCBmcm9tIG5ld2VzdCB0byBvbGRlc3QuXG5cbi0gKip2MC45LjQqKi4gXG4gIC0gUHJvamVjdCByZW5hbWVkIHRvIHB3ZHVzYWdlIHRvIGdpdmUgYSBzaG9ydGVyIG5hbWUgZm9yIHB5cGkgcGFja2FnZS5cbiAgLSBTZXBhcmF0ZWQgcHl0aG9uIGNvbXBvbmVudCBmcm9tIGRhc2hib2FyZCBjb21wb25lbnRzLiBJbiB0aGUgaW50ZXJpbSwgdGhlIGxhdHRlciBjYW5cbiAgYmUgZm91bmQgYXQ6XG4gIGh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvUG93ZXJ3YWxsLURhc2hib2FyZC90cmVlL21haW4vdG9vbHMvdXNhZ2Utc2VydmljZSxcbiAgYW5kIHNob3VsZCBiZSBpbnRlZ3JhdGVkIGludG8gdGhlIG1haW4gdHJlZSBhZnRlciBiZXRhIHBoYXNlLlxuICAtIEZpcnN0IHJlbGVhc2Ugb2YgcHl0aG9uIHBhY2thZ2UgZnJvbSBweXBpLCBuZXcgaW5zdGFsbCBwcm9jZWR1cmUuXG4tICoqdjAuOS4xKiouIFwic3VwcGx5UHJpb3JpdHlcIiBpbiBgdXNhZ2UuanNvbmAgcmVuYW1lZCB0byBcInN1cHBseV9wcmlvcml0eVwiIHRvIGltcHJvdmVcbm5hbWluZyBjb25zaXN0ZW5jeS5cblxuIyMgTmV3IEZlYXR1cmVzXG5cbioqdjEuMC4wKiogXG4tIERvY3VtZW50YXRpb24gZm9yIGJ1aWxkaW5nIGFuZCB0ZXN0aW5nIGRvY2tlciBpbWFnZSwgaW5zdHJ1Y3Rpb25zIGZvciBhZGRpbmdcbnRoZSBkb2NrZXIgY29udGFpbmVyIHRvIHRoZSBQb3dlcndhbGwtRGFzaGJvYXJkIHN0YWNrLiBcbi0gRG9jdW1lbnRhdGlvbiBmb3IgZ3JhZmFuYSBjb25maWd1cmF0aW9uLlxuLSBTYW1wbGUgZGFzaGJvYXJkcyBhZGRlZCB0byB0aGUgUG93ZXJ3YWxsLURhc2hib2FyZCByZXBvLlxuXG4qKnYwLjkuMSoqXG4tIFJlc2FtcGxpbmcgdG8gbW9yZSB1c2VmdWwgcGVyaW9kcyBmb3IgYmFyIGNoYXJ0cy5cbi0gUGF5bG9hZCBmZWF0dXJlcyBpbXBsZW1lbnRlZC4gWW91IGNhbiBub3cgdHVybiByZXNhbXBsaW5nIG9uL29mZiwgcmVxdWVzdCBzdW1tYXJ5IFxucmVwb3J0cywgYW5kIHNlbGVjdCB5ZWFyIHRvIGRhdGUgb3IgbW9udGggdG8gZGF0ZSByZXBvcnRpbmcgKHdoaWNoIGlnbm9yZSB0aGUgZ3JhZmFuYVxucmFuZ2UpLlxuLSBNb250aCBhbmNob3IgZm9yIGFubnVhbCByZXBvcnRpbmcsIHdlZWtkYXkgYW5jaG9yIGZvciBtb250aGx5IHJlcG9ydGluZyBieSB3ZWVrLlxuLSBDTEkgaW50ZXJmYWNlIHRvIGR1bXAgb3V0IGNzdiBmb3JtYXQgZmlsZXMgZm9yIGRlYnVnZ2luZy5cblxuIyBLZXkgRmVhdHVyZXNcblxuVGhlIGZvbGxvd2luZyBkb3QgcG9pbnRzIG91dGxpbmUga2V5IGVsZW1lbnRzIG9mIHRoZSB1c2FnZSBlbmdpbmU6XG5cbi0gVGhlIHVzYWdlIGVuZ2luZSBwcm92aWRlcyBhIGZyYW1ld29yayBmb3IgdGltZSBvZiB1c2UgZW5lcmd5IGFuZCBjb3N0IHJlcG9ydGluZy5cbi0gVGhlIGZyYW1ld29yayBhc3N1bWVzIHRoYXQgYSB1dGlsaXR5J3Mgc3VwcGx5IGFncmVlbWVudC9jb250cmFjdCBjYW4gYmUgYnJva2VuIGludG86IGEgXG51c2FnZSBwbGFuIHRoYXQgZGVzY3JpYmVzIHRoZSBtb3N0bHktY29uc3RhbnQgZWxlbWVudHMgb2YgdGhlIGNvbnRyYWN0LCBhbmQgYSBjYWxlbmRhclxudGhhdCBzcGVjaWZpZXMgd2hpY2ggdXNhZ2UgcGxhbiBzaG91bGQgYmUgYWN0aXZlIGF0IGFueSB0aW1lIGFuZCB0aGUgdmFyaWFibGUgcGFyYW1ldGVyc1xub2YgdGhlIHBsYW4sIHN1Y2ggYXMgc3VwcGx5IGNvc3RzLCBmZWVkIGluIHRhcmlmZnMgYW5kIHNhdmluZ3MgcmF0ZXMuXG4tIFRoZSBlbmdpbmUgY2FuIGhhbmRsZSBtdWx0aXBsZSB1c2FnZSBwbGFucywgd2hlcmUgZWFjaCBwbGFuIGlzIGJyb2tlbiBpbnRvIGEgbnVtYmVyXG5vZiBzZWFzb25zLCBhbmQgc3BlY2lmaWVzIHRoZSB1c2FnZSBhZ2VudCB0aGF0IHdpbGwgYmUgdXNlZCB0byBjYWxjdWxhdGUgZW5lcmd5IGNvc3RzXG5hbmQgc2F2aW5ncy4gXG4tIEVhY2ggc2Vhc29uIGlzIHNwZWNpZmllZCBhczpcbiAgICAtIFJlcGVhdGluZyBncm91cHMgb2Ygd2VlayBkYXlzIGluIGEgc2Vhc29uLiBGb3IgZXhhbXBsZSwgd2Vla2RheSBhbmQgd2Vla2VuZHMuXG4gICAgLSBSZXBlYXRpbmcgdGFyaWZmIHBlcmlvZHMgd2l0aGluIGVhY2ggZGF5IG9mIHRoZSBncm91cCwgd2hlcmUgZWFjaCB0YXJpZmYgaXMgYWN0aXZlXG4gICAgZm9yIGEgcG9ydGlvbiBvZiB0aGF0IGRheS4gRm9yIGV4YW1wbGUsIFBlYWssIFxuICAgIE9mZi1QZWFrLCBTaG91bGRlciwgU3VwZXItUGVhay5cbi0gQSBjYWxlbmRhciB3aGljaCBzcGVjaWZpZXMgd2hlbiBlYWNoIHVzYWdlIHBsYW4vc2Vhc29uIGlzIGFjdGl2ZSwgYW5kIHByb3ZpZGVzIFxuY29zdC9zYXZpbmdzIHJhdGUgZGF0YSB0aGF0IHNob3VsZCBiZSB1c2VkIHdoaWxlIHRoZSBjYWxlbmRhciBlbnRyeSBpcyBhY3RpdmUuIFRoZSBcbmNhbGVuZGFyIG1lY2hhbmlzbSBpcyBkZXNpZ25lZCB0byBhbGxvdyBjb21wYWN0IGNoYW5nZXMgb2Ygc2Vhc29ucyBhbmQgcmF0ZSB0YWJsZXMuXG4tIEl0IHByb3ZpZGVzIGEgZGVmYXVsdCBzaW1wbGUgYWdlbnQgdGhhdCBjYWxjdWxhdGVzIGNvc3RzIGFuZCBzYXZpbmdzIGJhc2VkIG9uIGVuZXJneSBcbnVzZSBpbiBlYWNoIHRhcmlmZiBwZXJpb2QuXG4tICoqVmVyeSBpbXBvcnRhbnRseToqKiBJdCBwcm92aWRlcyBob29rcyBmb3IgaW1wbGVtZW50aW5nIG90aGVyIHVzYWdlIHBsYW5zLCBzdWNoIGFzIFxudGFyaWZmcyBiYXNlZCBvbiB0aWVyZWQgY29uc3VtcHRpb24uIEknbSBoYXBweSB0byBwcm92aWRlIGFzc2lzdGFuY2UgaW4gcHV0dGluZyB0aGVzZVxudG9nZXRoZXIsIGJ1dCBJJ20gaG9waW5nIG1vc3Qgb2YgdGhlIHdvcmsgd2lsbCBiZSBkb25lIGJ5IHRoZSBwZW9wbGUgb24gdGhvc2UgdXNhZ2VcbnBsYW5zLlxuXG4jIyBJbXBsZW1lbnRhdGlvblxuXG5UaGUgdXNhZ2UgZW5naW5lIGlzIGltcGxlbWVudGVkIGFzIHByb3h5IGxheWVyIGJldHdlZW4gSW5mbHV4REIgYW5kIGdyYWZhbmEuIFRoaXMgXG5hcHByb2FjaCB0aGUgZm9sbG93aW5nIGJlbmVmaXRzOlxuXG4xKSBUaGUgdXNhZ2UgZW5naW5lIGRvZXMgbm90IG1vZGlmeSBkYXRhIGluIEluZmx1eERCLlxuMikgSXQgaXMgcmVsYXRpdmVseSBlYXN5IHRvIGltcGxlbWVudCBtdWx0aXBsZSB1c2FnZSBwbGFuIHR5cGVzLlxuMykgSXQgY2FuIGJlIGNvbmZpZ3VyZWQgdmlhIGEganNvbiBmaWxlIGFuZCByZXNldC9yZXN0YXJ0ZWQgd2l0aG91dCBuZWVkaW5nIHRvIHJlc3RhcnRcbnRoZSBweXBvd2Vyd2FsbCBzZXJ2ZXIgb3IgaW5mbHV4IGluc3RhbmNlIChub3QgYXBwbGljYWJsZSB3aGlsZSBkZXZlbG9waW5nIG5ldyB1c2FnZVxuYWdlbnRzKS5cbjQpIEl0J3MgZWFzeSB0byB0ZXN0IHRoZSBlZmZlY3RzIG9mIGRpZmZlcmVudCB0YXJpZmYgdHlwZXMgb24gaGlzdG9yaWNhbCBkYXRhIChhbGJlaXQsXG50aGUgaGlzdG9yaWNhbCBkYXRhIG1heSBub3QgcmVmbGVjdCBvcHRpbWlzYXRpb24gZm9yIHRoZSB0YXJpZmYpLlxuXG4jIFNldHVwXG5cblRoaXMgc2VjdGlvbiBkZXRhaWxzIHNldHVwIGZvciBlbmQgdXNlcnMuIERldmVsb3BlcnMgYW5kIHVzZXJzIHdobyB3aXNoIHRvIHVzZSB0aGUgQ0xJXG5jb21wb25lbnRzIHNob3VsZCByZWZlciB0byBcbltcIkluc3RhbGxhdGlvbiBmb3IgZGV2ZWxvcG1lbnQvdGVzdGluZ1wiXSgjaW5zdGFsbGF0aW9uLWZvci1kZXZlbG9wbWVudHRlc3RpbmcpLCB3aGljaFxuZGV0YWlscyBzZXR0aW5nIHVwIGEgbG9jYWwgc2VydmVyIGluc3RhbmNlIHJ1bm5pbmcgdW5kZXIgcHl0aG9uLlxuXG5BbGwgb2YgdGhlIHNjcmlwdCBhbmQgY29uZmlndXJhdGlvbiBmaWxlcyByZWZlcnJlZCB0byBpbiB0aGlzIGRvY3VtZW50IGNhbiBiZSBmb3VuZCBpblxudGhlIGB0b29sL3VzYWdlLXNlcnZpY2VgIHN1YmZvbGRlciBvZiB0aGUgXG5bYFBvd2Vyd2FsbC1EYXNoYm9hcmRgIHJlcG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9qYXNvbmFjb3gvUG93ZXJ3YWxsLURhc2hib2FyZCkuIChBcyBcbnRoZXkgYmVsb25nIHdpdGggdGhlIERhc2hib2FyZCByYXRoZXIgdGhlIHB5dGhvbiBzZXJ2aWNlLilcblxuKElmIHlvdSBjYW4ndCBmaW5kIGZpbGVzIHRoYXQgdGhpcyBkb2N1bWVudCByZWZlcnMgdG8sIGl0IGlzIHBvc3NpYmxlIHRoYXQgdGhpc1xudmVyc2lvbiBvZiBgcHdkdXNhZ2VgIGNvbnRhaW5zIGZpbGVzIHRoYXQgaGF2ZSBub3QgeWV0IGJlZW4gY29tbWl0dGVkIHRvIHRoZSBtYWluXG5yZXBvc2l0b3J5IC0gY2hlY2sgaHR0cHM6Ly9naXRodWIuY29tL0J1b25naW9ybm9UZXhhcy9Qb3dlcndhbGwtRGFzaGJvYXJkIGZvciB3b3JrIGluXG5wcm9ncmVzcykuXG5cbiMjIE9wZW4gZmlyZXdhbGwgcG9ydFxuXG5EZWNpZGUgd2hpY2ggcG9ydCB0aGUgdXNhZ2UgbWljcm8tc2VydmljZSB3aWxsIHVzZSBhbmQgbWFrZSB0aGUgY2hhbmdlcyByZXF1aXJlZCB0b1xuYWxsb3cgeW91ciBncmFmYW5hIGhvc3QgdG8gYWNjZXNzIHRoaXMgcG9ydCAoYW5kIGFueSBvdGhlciBtYWNoaW5lIHRoYXQgbWlnaHQgbmVlZCBcbmFjY2VzcykuIEZvciBleGFtcGxlLCBJJ20gdXNpbmcgdWZ3IG9uIG15IGxvY2FsIG5ldHdvcms6XG5gYGBcbnVmdyBhbGxvdyBmcm9tIDE5Mi4xNjgueHh4LjAvMjQgdG8gYW55IHBvcnQgOTA1MCBwcm90byB0Y3BcbmBgYFxuXG4jIyBCdWlsZCBEb2NrZXIgSW1hZ2VcblxuSSBoYXZlIHByb3ZpZGVkIHV0aWxpdHkgc2NyaXB0cyB0byBidWlsZCB0aGUgZG9ja2VyIGltYWdlIGZvciB5b3VyIGxvY2FsIG1hY2hpbmUuIFxuRGVwZW5kaW5nIG9uIGRlbWFuZCwgdGhpcyBtYXkgYmVjb21lIGEgZGlzdHJpYnV0ZWQgaW1hZ2UgaW4gdGhlIGZ1dHVyZS4gXG5cbk9wZW4gYSB0ZXJtaW5hbCBhbmQgbmF2aWdhdGUgdG8gdGhlIGB0b29scy91c2FnZS1zZXJ2aWNlYCBzdWItZm9sZGVyIG9mIFxuYFBvd2Vyd2FsbC1EYXNoYm9hcmRgLiBJbiB0aGlzIGZvbGRlciBnZW5lcmF0ZSB0aGUgaW1hZ2UgdXNpbmc6XG5gYGBcbmJhc2ggYnVpbGQuc2hcbmBgYFxuTm90ZSBmb3IgZGV2ZWxvcGVyczogVGhpcyBzY3JpcHQgd2lsbCBkZWxldGUgYW55IGV4aXN0aW5nIGBwd2R1c2FnZWAgaW1hZ2VzIGFuZCBcbmNvbnRhaW5lcnMgKGlmIHlvdSBhcmUgYSBub3JtYWwgZW5kIHVzZXIsIHRoaXMgaXMgbW9zdCBsaWtlbHkgd2hhdCB5b3Ugd2FudCB0byBoYXBwZW4pLlxuXG4jIyBUZXN0IERvY2tlciBJbWFnZVxuXG5UaGlzIGlzIGFuIG9wdGlvbmFsIHN0ZXAgd2hpY2ggbWF5IGJlIHVzZWZ1bCBmb3IgdHJvdWJsZSBzaG9vdGluZy4gVGhlIHRlc3QgcHJvY2Vzc1xuaXMgYXMgZm9sbG93czpcblxuLSBOYXZpZ2F0ZSB0byB0aGUgYHRvb2xzL3VzYWdlLXNlcnZpY2VgIHN1Yi1mb2xkZXIgb2YgYFBvd2Vyd2FsbC1EYXNoYm9hcmRgLlxuLSBDb3B5IHRoZSBgZXhhbXBsZV91c2FnZS5qc29uYCBmaWxlIHRvIGB1c2FnZS5qc29uYCBpbiB0aGUgYHVzYWdlLXNlcnZpY2VgIGZvbGRlci5cbi0gRWRpdCBgdXNhZ2UuanNvbmAgc28gdGhhdCBmaWxlICBzbyB0aGF0IGBpbmZsdXhfdXJsYCBwb2ludHMgYXQgeW91ciBpbmZsdXggc2VydmVyXG4ocHJvYmFibHkgdGhlIHNhbWUgbWFjaGluZSBhcyB5b3VyIFBvd2Vyd2FsbC1EYXNoYm9hcmQpIGFuZCwgb3B0aW9uYWxseSwgc2V0IHRoZSBjb3JyZWN0XG4gYHRpbWV6b25lYCBmb3IgeW91ciByZWdpb24uXG4tIFJ1biBhIHRlc3Qgc2NyaXB0IHdoaWNoIHBlcmZvcm1zIHRoZSBmb2xsb3dpbmcgYWN0aW9uczpcbiAgLSBTdG9wcyBhbmQgZGVsZXRlcyB0aGUgYHB3ZHVzYWdlYCBjb250YWluZXIuXG4gIC0gQ3JlYXRlcyBhbmQgc3RhcnQgYSBuZXcgYHB3ZHVzYWdlYCBjb250YWluZXIgY29uZmlndXJlZCBieSB0aGUgdGVzdCBgdXNhZ2UuanNvbmAuXG4gIC0gUGF1c2VzIHdoaWxlIHlvdSBjaGVjayB0aGUgc2VydmVyIHN0YXR1cy5cbiAgXG4gIFRoZSB0ZXN0IHNjcmlwdCBjb21tYW5kIGlzOlxuICBgYGBcbiAgYmFzaCB0ZXN0X3NlcnZpY2Uuc2hcbiAgYGBgXG5cbi0gQ2hlY2sgdGhhdCB0aGUgdXNhZ2Ugc2VydmVyIGlzIHJlc3BvbmRpbmcgYnkgcG9pbnRpbmcgYSB3ZWIgYnJvd3NlciBhdFxuYGh0dHA6Ly9zZXJ2ZXIuYWRkcmVzczo8cG9ydD4vdXNhZ2VfZW5naW5lYC4gSWYgZXZlcnl0aGluZyBpcyBhcyBpdCBzaG91bGQgYmUsIHlvdVxuIHNob3VsZCBzZWUgYSBwYWdlIGNvbnRhaW5pbmcgdGhlIG1lc3NhZ2U6XG5cbiAgYGBgXG4gIFVzYWdlIEVuZ2luZSBTdGF0dXNcdFwiRW5naW5lIE9LLCB0YXJpZmZzIChyZSlsb2FkZWRcIlxuICBgYGBcbi0gUmV0dXJuIHRvIHRoZSB0ZXJtaW5hbCBydW5uaW5nIHRoZSB0ZXN0IHNjcmlwdCBhbmQgaGl0IGVudGVyLiBUaGlzIHdpbGwgY2xlYW4gdXAgdGhlXG50ZXN0IGJ5IHN0b3BwaW5nIGFuZCBkZWxldGluZyB0aGUgY29udGFpbmVyIChidXQga2VlcHMgdGhlIGltYWdlIHlvdSBjcmVhdGVkIGluIHRoZVxucHJldmlvdXMgc2VjdGlvbikuIFxuXG5UaGUgbmV4dCBzZWN0aW9ucyBkZXRhaWxzIGFkZGluZyB0aGUgdXNhZ2Ugc2VydmljZSB0byB5b3VyIFxuYFBvd2Vyd2FsbC1EYXNoYm9hcmRgIHN0YWNrLlxuXG4jIyBBZGQgYHB3ZHVzYWdlYCB0byBgUG93ZXJ3YWxsLURhc2hib2FyZGBcblxuVGhpcyBzdGVwIGFzc3VtZXMgeW91IGhhdmUgc2V0IHVwIGEgYHVzYWdlLmpzb25gIGNvbmZpZ3VyYXRpb24gZmlsZSBpbiB0aGUgXG5gdG9vbHMvdXNhZ2Utc2VydmljZWAgc3ViZm9sZGVyIG9mIFBvd2Vyd2FsbC1EYXNoYm9hcmQuIFNlZSB0aGUgcHJldmlvdXMgc2VjdGlvbiBmb3JcbnVzaW5nIHRoZSBleGFtcGxlIGZpbGUsIGFuZCB0aGUgZm9sbG93aW5nIHNlY3Rpb24gZm9yIGRldGFpbHMgb24gc2V0dGluZyBpdCB1cCB0b1xubWF0Y2ggeW91ciBvd24gdXNhZ2UgcGxhbi5cblxuVGhlIGBwd2R1c2FnZWAgaW5zdGFsbCBzdGVwcyBhcmU6XG5cbi0gSWYgYHBvd2Vyd2FsbC5leHRlbmQueW1sYCBleGlzdHMgaW4geW91ciBgUG93ZXJ3YWxsLURhc2hib2FyZGAgZm9sZGVyLCB0aGVuIGNvcHkgdGhlIFxuY29udGVudHMgb2YgdGhlIGBwd2R1c2FnZS5leHRlbmQueW1sYCBmaWxlIHN0YXJ0aW5nIGZyb20gdGhlIGxpbmUgYHB3ZHVzYWdlOmAgaW50byBcbmBwb3dlcndhbGwuZXh0ZW5kLnltbGAgKHRoaXMgc2hvdWxkIGJlIGluIHRoZSBzZXJ2aWNlcyBzZWN0aW9uKS5cbi0gT3RoZXJ3aXNlLCBjb3B5IGBwd2R1c2FnZS5leHRlbmQueW1sYCBpbnRvIHRoZSBgUG93ZXJ3YWxsLURhc2hib2FyZGAgZm9sZGVyIGFuZCByZW5hbWVcbml0IHRvIGBwb3dlcndhbGwuZXh0ZW5kLnltbGAuXG4tIEVkaXQgYHBvd2Vyd2FsbC5leHRlbmQueW1sYCB0byByZWZsZWN0IHlvdXIgdXNlciBpZCBhbmQgYW55IGNoYW5nZXMgeW91IG1heSBoYXZlIG1hZGVcbnRvIHRoZSBkZWZhdWx0IHBvcnQgYW5kIGBVU0FHRV9KU09OYCBmaWxlIHBhdGguXG5cbkZpbmFsbHksIHJlc3RhcnQgdGhlIFBvd2Vyd2FsbC1EYXNoYm9hcmQgc2VydmljZXM6XG5gYGBcbi4vY29tcG9zZS1kYXNoLnNoIHN0b3Bcbi4vY29tcG9zZS1kYXNoLnNoIHVwIC1kXG5gYGBcblxuIyBgcHdkdXNhZ2VgIENvbmZpZ3VyYXRpb25cblxuQmVjYXVzZSB0aGVyZSBhcmUgc28gbWFueSBkaWZmZXJlbnQgdXNhZ2UgcGxhbnMsIGBwd2R1c2FnZWAgcmVxdWlyZXMgYSBKU09OXG5jb25maWd1cmF0aW9uIGZpbGUgdG8gZGVmaW5lICp5b3VyKiB1c2FnZSBwbGFucyBhbmQgY2FsZW5kYXJzLiBUaGlzIHNlY3Rpb24gZGlzY3Vzc2VzXG50aGUgbGF5b3V0IG9mIHRoaXMgZmlsZSBhbmQgdGhlIGhvdyB1c2FnZSBlbmdpbmUgbG9jYXRlcyB0aGlzIGZpbGUuIFlvdSB3aWxsIHZlcnkgbGlrZWx5XG5hbHNvIG5lZWQgdG8gZG8gc29tZSBjdXN0b21pc2F0aW9uIGluIGdyYWZhbmEgdG8gZ2V0IHJlcG9ydCBvdXQgaW4gdGhlIGZvcm1hdCB5b3VcbnByZWZlciwgd2hpY2ggdGhlIG5leHQgc2VjdGlvbiBjb3ZlcnMuXG5cblRoZSBwcm9qZWN0IGRvY3VtZW50YXRpb24gYXNzdW1lcyB0aGlzIGZpbGUgd2lsbCBiZSBuYW1lZCAgYHVzYWdlLmpzb25gIGZpbGUuIEhvd2V2ZXIsXG55b3UgY2FuIHVzZSBhbnkgbmFtZSB5b3UgbGlrZSBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBgVVNBR0VfSlNPTmAgZW52aXJvbm1lbnQgdmFyaWFibGVcbihzZWUgYmVsb3cpLlxuXG5UaGUgYHRvb2xzL3VzYWdlLXNlcnZpY2VgIGZvbGRlciBpbiBQb3dlcndhbGwtRGFzaGJvYXJkIHJlcG9zaXRvcnkgY29udGFpbnMgYSBmaWxlIG5hbWVkIGBleGFtcGxlX3VzYWdlLmpzb25gIHRoYXQgeW91IGNhbiB1c2UgdG8gYnVpbGQgeW91ciBvd24gYHVzYWdlLmpzb25gLiBUaGUgcmVjb21tZW5kZWRcbmRlZmF1bHQgbG9jYXRpb24gZm9yIHlvdXIgYHVzYWdlLmpzb25gIGlzIHRoZSBgdG9vbHMvdXNhZ2Utc2VydmljZWAgZm9sZGVyLiAoQXMgYSBcbmNvbnZlbmllbmNlIGZvciBkZXZlbG9wZXJzLCB0aGlzIGV4YW1wbGUgZmlsZSBpcyBhbHNvIGR1cGxpY2F0ZWQgaW4gdGhlIGBwd2R1c2FnZWAgdXNhZ2UgcmVwb3N0b3J5LilcblxuIyMgTG9hZGluZyBgdXNhZ2UuanNvbmBcblxuVGhlIHVzYWdlIGVuZ2luZSB3aWxsIGxvb2sgZm9yIHRoZSBjb25maWd1cmF0aW9uIGZpbGVzIGluIHRoZSBmb2xsb3dpbmcgbG9jYXRpb25zOlxuLSBZb3UgY2FuIHVzZSB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYFVTQUdFX0pTT05gIHRvIHNwZWNpZnkgdGhlIChvcHRpb25hbCkgcGF0aCBhbmRcbnRoZSBmaWxlIG5hbWUgZm9yIHRoZSBjb25maWd1cmF0aW9uIGZpbGUuIFlvdSAqKm11c3QqKiB1c2UgdGhpcyBtZXRob2QgZm9yIHJ1bm5pbmcgYVxudXNhZ2Ugc2VydmVyIGluIGEgKipkb2NrZXIgY29udGFpbmVyKiogKG1vc3QgdXNlcnMpLiBTZWUgdGhlIGBwd2R1c2FnZS5leHRlbmQueW1sYCBhbmQgXG5gdGVzdF9zZXJ2aWNlLnNoYCBmaWxlcyBpbiB0aGUgcHJldmlvdXMgc2VjdGlvbnMgZm9yIGV4YW1wbGVzIG9mIG1hcHBpbmcgYSBsb2NhbCBjb3B5IG9mXG5gdXNhZ2UuanNvbmAgdG8gYSBkb2NrZXIgY29udGFpbmVyIHZvbHVtZS4gIFxuLSBJZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNwZWNpZmllZCwgdGhlIGVuZ2luZXIgd2lsbCB0cnkgdG8gbG9hZCBcbmB1c2FnZS5qc29uYCBmcm9tIHRoZSB3b3JraW5nIGRpcmVjdG9yeS4gXG4tIElmIHlvdSBhcmUgcnVubmluZyB0aGUgZW5naW5lIGluIENMSSBtb2RlIHRvIGR1bXAgY3N2IGZpbGVzLCB5b3UgKiptdXN0Kiogc3BlY2lmeSB0aGVcbmxvY2F0aW9uIG9mIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgKG9wdGlvbmFsIHBhdGggKyBmaWxlIG5hbWUpIHVzaW5nIHRoZSBgLS1jb25maWdgXG5hcmd1bWVudC4gYFVTQUdFX0pTT05gIGlzIGlnbm9yZWQgaW4gdGhpcyBtb2RlLlxuXG5Ob3RlOiBpZiB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3RlcHMgZm9yIGFkZGluZyBgcHdkdXNhZ2VgIHRvIHRoZSBQb3dlcndhbGwtRGFzaGJvYXJkXG5kb2NrZXIgc3RhY2sgYW5kIHlvdXIgYHVzYWdlLmpzb25gIGlzIGluIHRoZSByZWNvbW1lbmRlZCBsb2NhdGlvbiwgZXZlcnl0aGluZyBzaG91bGQgcnVuXG5vdXQgb2YgdGhlIGJveC4gXG5cbiMjIFN0cmluZ3MgZnJvbSBgY29tbW9uLnB5YFxuXG5XaGlsZSBtb3N0IG9mIHRoZSBoZWF2eSBsaWZ0aW5nIGlzIGRvbmUgaW4gdGhlIGB1c2FnZS5qc29uYCBmaWxlLCB0aGlzIGNvbmZpZ3VyYXRpb24gXG5maWxlIGRlcGVuZHMgaGVhdmlseSBvbiBjb25zdGFudHMgZGVmaW5lZCBpbiBgY29tbW9uLnB5YC4gVGhpcyBzZWN0aW9uIG91dGxpbmVzIHRoZXNlXG5jb25zdGFudHMuXG5cblRoZSBzdHJpbmdzIGRlZmluZWQgaW4gdGhlIGBQRENvbE5hbWVgIEVudW0gaW4gYGNvbW1vbi5weWAgYXJlIGxhYmVscyBmb3Iga2V5IGNhbGN1bGF0ZWRcbmRhdGEgY29sdW1ucyBpbiB0aGUgdXNhZ2UgZW5naW5lLiBZb3UgbWF5IGNob29zZSB0byBvdXRwdXQgYW55IHN1YnNldCBvZiB0aGUgbnVtZXJpY1xuY2FsY3VsYXRpb25zLCBhbmQgeW91IGNhbiBhbHNvIGNoYW5nZSB0aGUgZGVmYXVsdCBuYW1lcyBvZiB0aGUgb3V0cHV0cyB0byB5b3VyXG5wcmVmZXJyZWQgbGFiZWxzLlxuXG5UaGUgZm9sbG93aW5nIHRhYmxlIHN1bW1hcmlzZXMgdGhlIHN0cmluZ3MgYXZhaWxhYmxlIGFzIGF0IDEzIE1heSAyMDIzLiBUaGlzIHNldCBtYXkgYmVcbmV4dGVuZGVkIGluIGZ1dHVyZS5cblxufCBTdHJpbmcgICAgICAgIHwgRGVmYXVsdCBzdHJpbmcgIHwgRGVzY3JpcHRpb24gYW5kIE5vdGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG58LS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbnwgR1JJRF9TVVBQTFkgICB8IEdyaWQgc3VwcGx5ICAgICB8IFBvd2VyIGZyb20gZ3JpZCwgZ3JpZCBpbXBvcnQuICAgICAgICAgICAgICAgICAgICAgfFxufCBHUklEX0VYUE9SVCAgIHwgR3JpZCBleHBvcnQgICAgIHwgUG93ZXIgZnJvbSBob21lIHRvIGdyaWQsIGdyaWQgZXhwb3J0LiAgICAgICAgICAgICB8XG58IFBXX1NVUFBMWSAgICAgfCBQVyBzdXBwbHkgICAgICAgfCBPdXRwdXQgZnJvbSBwb3dlcndhbGwgKHRvdGFsKS4gICAgICAgICAgICAgICAgICAgIHxcbnwgSE9NRV9ERU1BTkQgICB8IEhvbWUgRGVtYW5kICAgICB8IEhvbWUgcG93ZXIgdXNhZ2UuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxufCBTT0xBUl9TVVBQTFkgIHwgU29sYXIgc3VwcGx5ICAgIHwgU29sYXIgZ2VuZXJhdGlvbiAodG90YWwpLiAgICAgICAgICAgICAgICAgICAgICAgICB8XG58IEdSSURfVE9fSE9NRSAgfCBHcmlkIHRvIEhvbWUgICAgfCBHcmlkIHN1cHBseSBhbGxvY2F0ZWQgdG8gaG9tZSBkZW1hbmQuICAgICAgICAgICAgIHxcbnwgUFdfVE9fSE9NRSAgICB8IFBXIHRvIEhvbWUgICAgICB8IFBvd2Vyd2FsbCBvdXRwdXQgYWxsb2NhdGVkIHRvIGhvbWUgZGVtYW5kLiAgICAgICAgfFxufCBTT0xBUl9UT19IT01FIHwgU29sYXIgdG8gSG9tZSAgIHwgU29sYXIgZ2VuZXJhdGlvbiBhbGxvY2F0ZWQgdG8gaG9tZSBkZW1hbmQuICAgICAgICB8XG58IEdSSURfQ0hBUkdJTkcgfCBHcmlkIGNoYXJnaW5nICAgfCBHcmlkIHN1cHBseSB1c2VkIHRvIGNoYXJnZSBwb3dlcndhbGwgKGFsbG9jYXRlZCkuIHxcbnwgUkVTSURVQUxfREVNQU5EXzEgfCBIb21lIGRlbWFuZCBleCBzdXBwbHkgMSB8IFNlZSBuZXh0IHNlY3Rpb24gZm9yIHByaW9yaXRpZXMgYW5kIHJlc2lkdWFscy4gfFxufCBSRVNJRFVBTF9ERU1BTkRfMiB8IEhvbWUgZGVtYW5kIGV4IHN1cHBseSAxKzIgfCBTZWUgbmV4dCBzZWN0aW9uIGZvciBwcmlvcml0aWVzIGFuZCByZXNpZHVhbHMuIHxcbnwgUkVTSURVQUxfREVNQU5EX0ZJTkFMIHwgSG9tZSBkZW1hbmQgZXggc3VwcGxpZXMgfCBTZWUgbmV4dCBzZWN0aW9uIGZvciBwcmlvcml0aWVzIGFuZCByZXNpZHVhbHMgKHNob3VsZCBiZSB6ZXJvLCBidXQgZG9uJ3QgcmVseSBvbiBpdCwgYmVjYXVzZSBUZXNsYS4pLiB8IFxufCBTRUxGX1BXX05FVF9PRl9HUklEIHwgUFcgdG8gaG9tZS1ncmlkIGNoYXJnZSB8IFBvd2VyIHN1cHBseSB0byBob21lIGxlc3MgZ3JpZCBjaGFyZ2luZyBvZiBwb3dlcndhbGwuIFNlZSBuZXh0IHNlY3Rpb24gZm9yIGRpc2N1c3Npb24uIHxcbnwgU0VMRl9TT0xBUl9QTFVTX1JFUyB8IFNvbGFyIHRvIGhvbWUrcmVzaWR1YWwgfCBQb3dlciBzdXBwbHkgdG8gaG9tZSBwbHVzIGFueSB1bmFjY291bnRlZCByZXNpZHVhbCBkZW1hbmQuIFNlZSBuZXh0IHNlY3Rpb24gZm9yIGRpc2N1c3Npb24uIHxcbnwgU0VMRl9UT1RBTCAgICB8IFNlbGYgY29uc3VtcHRpb24gfCBUb3RhbCBzZWxmIGNvbnN1bXB0aW9uLiBTRUxGX1BXX1RPX0hPTUUgKyBTRUxGX1NPTEFSX1BMVVNfUkVTLiB8XG58IFNVUFBMWV9DSEFSR0UgfCBTdXBwbHkgQ2hhcmdlIHwgSWYgc3BlY2lmaWVkIGluIGNhbGVuZGFyIHJhdGUgdGFibGUsIHdpbGwgYWRkIDEgdW5pdCBvZiBzdXBwbHkgY2hhcmdlIHRvIGNvc3Qgb3V0cHV0IGZvciBlYWNoIGRhdGEgcG9pbnQuIElnbm9yZWQgaWYgc3BlY2lmaWVkIGluIHVzYWdlX3BsYW5zIHZhcmlhYmxlIHJlcG9ydCBsaXN0LiB8XG58IFRBUklGRiAgICAgICAgfCBUYXJpZmYgfCBTdHJpbmcgdXNlZCBpbnRlcm5hbGx5LiBOb3QgaW50ZW5kZWQgZm9yIGVuZCB1c2Vycy4gfFxufCBUSU1FICAgICAgICAgIHwgX3RpbWUgIHwgU3RyaW5nIHVzZWQgaW50ZXJuYWxseS4gTm90IGludGVuZGVkIGZvciBlbmQgdXNlcnMuIHxcblxuIyMgYHVzYWdlLmpzb25gIHN0cnVjdHVyZVxuXG5Nb3N0IG9mIHRoZSB1c2FnZSBlbmdpbmUgc2V0dXAgaXMgdmlhIHRoZSBgdXNhZ2UuanNvbmAgY29uZmlndXJhdGlvbiBmaWxlLiBBcyBhbHdheXNcbndpdGggSlNPTiwgaXQncyBmaW5pY2t5IG9uIGV4YWN0IHN5bnRheCwgYW5kIHRoZSBzZXJ2ZXIgY2FuIGJlIG9wYXF1ZSB3aXRoXG5lcnJvciBtZXNzYWdlcywgc28gaWYgeW91IGhhdmUgdHJvdWJsZSB3aXRoIHNldHRpbmcgdXAgdGhlIHVzYWdlIGVuZ2luZSwgdGhlIGZpcnN0IHN0ZXBcbnNob3VsZCBiZSB0byBjaGVjayB0aGlzIGZpbGUgZm9yIHN5bnRheCBlcnJvcnMgYW5kIHR5cG9zLiBcblxuSW4gdGhlIGZvbGxvd2luZyBzZWN0aW9ucywgdGhlIHZhcmlvdXMgZWxlbWVudHMgb2YgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBhcmUgaWRlbnRpZmllZFxuYXMgZWl0aGVyICoqcmVxdWlyZWQqKiBvciAqKm9wdGlvbmFsKiouIFJlcXVpcmVkIGVsZW1lbnRzIG11c3QgYmUgc3VwcGxpZWQsIHdoaWxlIFxub3B0aW9uYWwgZWxlbWVudHMgdHlwaWNhbGx5IGhhdmUgc3RhbmRhcmQgZGVmYXVsdHMsIG9yIG1heSByZXBlYXQgcHJldmlvdXNseSBzcGVjaWZpZWRcbmlucHV0LiBCb3RoIHJlcXVpcmVkIGFuZCBvcHRpb25hbCBlbGVtZW50cyBjYW4gaGF2ZSBhZGRpdGlvbmFsIHF1YWxpZmllcnMgdGhhdCBhcHBseSB0b1xudGhhdCBpbnB1dC5cblxuVGhlIGhpZ2ggbGV2ZWwgc3RydWN0dXJlIG9mIHRoZSBqc29uIGZpbGUgaXM6XG5cbmBgYFxue1xuICBcInNldHRpbmdzXCI6IHsgLi4uIGRpY3Rpb25hcnkgb2Ygc2V0dGluZ3MgLi4ufSxcbiAgXCJwbGFuc1wiOiBbXG4gICAgPHVzYWdlIHBsYW4gMT4sXG4gICAgPHVzYWdlIHBsYW4gMj4sXG4gICAgPHVzYWdlIHBsYW4gMz4sXG4gICAgLi4uXG4gIF0sXG4gIFwiY2FsZW5kYXJcIjoge1xuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIC4uLiAgICBcbiAgfVxufVxuYGBgXG5UaGUgc2V0dGluZ3MsIHBsYW5zLCBhbmQgY2FsZW5kYXIgc2VjdGlvbnMgYXJlIGFsbCAqKnJlcXVpcmVkKiouXG5cblxuIyMjIFNldHRpbmdzIFNlY3Rpb25cblxuVGhlIHN0cnVjdHVyZSBvZiB0aGUgc2V0dGluZ3MgZGljdGlvbmFyeSBpczpcbmBgYFxuXCJzZXR0aW5nc1wiOiB7XG4gICAgICAgIFwiaW5mbHV4X3VybFwiOiBcImh0dHA6Ly88aG9zdG5hbWU+OjgwODZcIixcbiAgICAgICAgXCJidWNrZXRcIjogXCJwb3dlcndhbGwva3doXCIsXG4gICAgICAgIFwidGltZXpvbmVcIjogXCJBdXN0cmFsaWEvSG9iYXJ0XCIsXG4gICAgICAgIFwic3VwcGx5X3ByaW9yaXR5XCI6IFtcbiAgICAgICAgICAgIFwiR1JJRF9TVVBQTFlcIixcbiAgICAgICAgICAgIFwiUFdfU1VQUExZXCIsXG4gICAgICAgICAgICBcIlNPTEFSX1NVUFBMWVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiY29zdF91bml0XCI6IFwiJFwiLFxuICAgICAgICBcImVuZXJneV91bml0XCI6IFwia1doXCIsXG4gICAgICAgIFwicmVuYW1lXCI6IHtcbiAgICAgICAgICAgIFwiR1JJRF9TVVBQTFlcIjogXCJHcmlkIHN1cHBseS0tLVwiLFxuICAgICAgICAgICAgXCJHUklEX0VYUE9SVFwiOiBcIkdyaWQgZXhwb3J0KysrXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJyZXNhbXBsZVwiOiB0cnVlLFxuICAgICAgICBcIndlZWtfYW5jaG9yXCI6IFwiTU9OVEhcIixcbiAgICAgICAgXCJ5ZWFyX2FuY2hvclwiOiBcIkpBTlwiXG4gICAgfSxcbmBgYFxuXG5UaGUgZGljdGlvbmFyeSBlbnRyaWVzIGFyZTpcbi0gWyoqcmVxdWlyZWQqKl0gYGluZmx1eF91cmxgIHBvaW50cyBhdCB0aGUgaW5mbHV4IGRhdGFiYXNlIHNlcnZpY2UsIHdoaWNoIGlzIHR5cGljYWxseVxudGhlIGhvc3RuYW1lIG9yIGFkZHJlc3Mgb2YgdGhlIFBvd2Vyd2FsbCBEYXNoYm9hcmQgaG9zdCwgd2l0aCBhIHBvcnQgb2YgODA4Ni5cbi0gWyoqcmVxdWlyZWQqKl0gYGJ1Y2tldGAgaXMgdGhlIG5hbWUgb2YgdGhlIGluZmx1eCBjb250aW51b3VzIHF1ZXJ5IHRoYXQgc3VwcGxpZXMgZGF0YVxuZm9yIHRoZSB1c2FnZSBlbmdpbmUuIFRoaXMgc2hvdWxkIGhhdmUgdGhlIHNhbWUgZmllbGRzIGFzIHRoZSBgcG93ZXJ3YWxsL2t3aGAgQ1EgKHRoZSBcbmRlZmF1bHQsIHdoaWNoIHByb3ZpZGVzIGRhdGEgb24gYW4gaG91cmx5IGJhc2lzKS5cbi0gWyoqcmVxdWlyZWQqKl0gYHRpbWV6b25lYCAtIFRoaXMgc2hvdWxkIGJlIHNldCB0byB5b3VyIGxvY2FsIHRpbWV6b25lLlxuLSBgY29zdF91bml0YCBhbmQgYGVuZXJneV91bml0YCAtICoqb3B0aW9uYWwqKiBzdHJpbmcgYXBwZW5kZWQgdG8gdGhlIHNlcmllcyBsYWJlbHMgXG5mb3IgdXNhZ2UgY29zdCBhbmQgZW5lcmd5IGRhdGEuIERlZmF1bHQgdG8gXCIkXCIgYW5kIFwia1doXCIuXG4tIGByZW5hbWVgIC0gQW4gKipvcHRpb25hbCoqIGRpY3Rpb25hcnkgdGhhdCBhbGxvd3MgcmVwbGFjZW1lbnQgb2YgdGhlIGRlZmF1bHQgc3RyaW5ncyBcbmRlZmluZWQgaW4gYGNvbW1vbi5weWAuIElmIHlvdSB3YW50IHRvIGhhdmUgYSBuZXcgbGFiZWwgc3RyaW5nIGZvciB0aGUgYFwiU09MQVJfU1VQUExZXCJgLFxueW91IGNhbiBnbyBudXRzLiBCZSBteSBndWVzdC4gVGhlIGJvcmluZyBleGFtcGxlIGFib3ZlIGFkZHMgbXVsdGlwbGUgLSBhbmQgKyBzaWducyB0b1xudGhlIHN0cmluZ3MgZm9yIGdyaWQgc3VwcGx5IGFuZCBncmlkIGV4cG9ydC5cbi0gYHJlc2FtcGxlYCAtIEFuICoqb3B0aW9uYWwqKiBzZXR0aW5nIHdoaWNoIHNwZWNpZmllcyBpZiBkYXRhIHNob3VsZCBiZSBkb3duc2FtcGxlZCxcbndpdGggYSBkZWZhdWx0IG9mIHRydWUgKHRydWUgb3IgZmFsc2UpLiBUaGlzIGNhbiBhbHNvIGJlIHNldCBieSBhIGdyYWZhbmEgcGF5bG9hZC4gU2VlXG5bSlNPTiBQYXlsb2FkXSgjanNvbi1wYXlsb2FkKSBmb3IgZGlzY3Vzc2lvbiBvbiByZXNhbXBsaW5nIGltcGxlbWVudGF0aW9uIGFuZCBob3cgdG9cbmNvbmZpZ3VyZSB0aGUgcGF5bG9hZC5cbi0gYHdlZWtfYW5jaG9yYCAtIEFuICoqb3B0aW9uYWwqKiBzZXR0aW5nIHdpdGggZGVmYXVsdCB2YWx1ZSBvZiBcIk1PTlRIXCIuIFRoaXMgc3BlY2lmaWVzXG50aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrIHVzZWQgaW4gZGF0YSByZXNhbXBsaW5nLiBUaGUgZGVmYXVsdCBpcyB0byBhbmNob3IgdGhlIHdlZWtcbnN0YXJ0IHRvIHRoZSBmaXJzdCBkYXkgb2YgdGhlIG1vbnRoLCBidXQgeW91IGNhbiBsb2NrIGl0IHRvIGEgZml4ZWQgZGF5IG9mIHRoZSB3ZWVrXG51c2luZyBvbmUgb2Y6IFtcIk1PTlwiLCBcIlRVRVwiLCBcIldFRFwiLCBcIlRIVVwiLCBcIkZSSVwiLCBcIlNBVFwiLCBcIlNVTlwiXS4gXG4tIGB5ZWFyX2FuY2hvcmAgLSBBbiAqKm9wdGlvbmFsKiogc2V0dGluZyB3aXRoIGRlZmF1bHQgdmFsdWUgb2YgXCJKQU5cIi4gVGhpcyBzcGVjaWZpZXNcbnRoZSBmaXJzdCBtb250aCBvZiB0aGUgeWVhciBmb3IgYW5udWFsIHJlcG9ydGluZyAocHJvdmlkZWQgaW4gY2FzZSBhbnlvbmUgd2FudHMgdG8gcnVuXG5yZXBvcnRzIHRoYXQgbGluZSB1cCB3aXRoIGxvY2FsIGZpbmFuY2lhbCB5ZWFycykuIFlvdSBjYW4gbW9kaWZ5IHVzaW5nIGFueSB0aHJlZSBkYXlcbm1vbnRoIGFiYnJldmlhdGlvbiBbXCJKQU5cIiwgXCJGRUJcIiwgXCJNQVJcIiwgLi4uICwgXCJERUNcIl0uIE5vdGU6IHRoZSBmaXJzdCBkYXkgb2YgdGhlIFxucmVwb3J0aW5nIHllYXIgY29ycmVzcG9uZHMgdG8gdGhlIGZpcnN0IGRheSBvZiB0aGUgc3BlY2lmaWVkIG1vbnRoIC0gZS5nLiAxc3QgSnVseSBmb3IgXG5cIkpVTFwiLlxuXG5GaW5hbGx5LCBgXCJzdXBwbHlfcHJpb3JpdHlcImAgaXMgYW4gKipvcHRpb25hbCoqIGVudHJ5IHRoYXQgcHJvdmlkZXMgdGhlIG9yZGVyIGluIHdoaWNoXG5zdXBwbHkgaXMgYWxsb2NhdGVkIHRvIG1lZXQgaG9tZSBkZW1hbmQgZm9yIHBvd2VyLiBJZiBzcGVjaWZpZWQsIHRoZSBlbnRyeSAqKm11c3QqKiBiZSBhXG50aHJlZSBlbGVtZW50IGxpc3QgdGhhdCBzdGF0ZXMgdGhlIG9yZGVyIG9mIGBcIkdSSURfU1VQUExZXCJgLCBgXCJQV19TVVBQTFlcImAgYW5kIFxuYFwiU09MQVJfU1VQUExZXCJgLiBJZiBgXCJzdXBwbHlfcHJpb3JpdHlcImAgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gdGhlIGxpc3Qgc3BlY2lmaWVkXG5hYm92ZSAoZ3JpZCwgcG93ZXJ3YWxsLCBhbmQgdGhlbiBzb2xhcikuXG5cblRoaXMgbGlzdCBpcyB1c2VkIHRvIGFsbG9jYXRlIHN1cHBseSB0byBkZW1hbmQgYXMgZm9sbG93czpcblxuLSBQb3dlciBmcm9tIHRoZSBmaXJzdCBzdXBwbHkgKGUuZy4gZ3JpZCBzdXBwbHkpIGlzIGFsbG9jYXRlZCB0byBgSE9NRV9ERU1BTkRgLiBcbiAgLSBJZiB0aGlzIHN1cHBseSBleGNlZWRzIGRlbWFuZCAoYEdSSURfU1VQUExZID4gSE9NRV9ERU1BTkRgKSwgdGhlbiBhbGwgaG9tZSBkZW1hbmRcbiAgaXMgbWV0IGZyb20gdGhpcyBzdXBwbHkgYW5kIHJlbWFpbmluZyBkZW1hbmQgYWZ0ZXIgdGhlIGZpcnN0IHN1cHBseSBpcyBzZXQgdG8gemVybyBcbiAgKGBSRVNJRFVBTF9ERU1BTkRfMSA9IDBgKS4gXG4gIC0gT3RoZXJ3aXNlLCBob21lIGRlbWFuZCBjb25zdW1lcyBhbGwgb2YgdGhlIGF2YWlsYWJsZSBzdXBwbHkgYW5kIHRoZSByZXNpZHVhbCBcbiAgZGVtYW5kIGlzIGNhbGN1bGF0ZWQgZnJvbSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGRlbWFuZCBhbmQgc3VwcGx5IC0gZm9yIG91ciBleGFtcGxlLCBcbiAgaXQgaXMgYFJFU0lEVUFMX0RFTUFORF8xID0gSE9NRV9ERU1BTkQgLSBHUklEX1NVUFBMWWAuXG4gIC0gRmluYWxseSwgdGhlIHRvdGFsIHBvd2VyIGFsbG9jYXRlZCBmcm9tIHRoZSBmaXJzdCBzdXBwbHkgdG8gdGhlIGhvbWUgaXMgdGhlIFxuICBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGhvbWUgZGVtYW5kIGFuZCB0aGUgZmlyc3QgcmVzaWR1YWwgLSBmb3Igb3VyIGV4YW1wbGU6XG4gIGBHUklEX1RPX0hPTUUgPSBIT01FX0RFTUFORCAtIFJFU0lEVUFMX0RFTUFORF8xYC4gXG4tIFdlIGFwcGx5IHRoZSBzYW1lIHByb2Nlc3MgdG8gdGhlIHNlY29uZCBzdXBwbHkgKGUuZy4gUFcgc3VwcGx5KSB0byByZXNpZHVhbCBkZW1hbmQgMS5cbkluIHN1bW1hcnkgZm9yIHRoaXMgY2FzZTpcbiAgLSBJZiBgUFdfU1VQUExZID4gUkVTSURVQUxfREVNQU5EXzFgLCB0aGVuIGBSRVNJRFVBTF9ERU1BTkRfMiA9IDBgLCBvdGhlcndpc2UgXG4gIGBSRVNJRFVBTF9ERU1BTkRfMiA9IFJFU0lEVUFMX0RFTUFORF8yIC0gUFdfU1VQUExZYC5cbiAgLSBQb3dlciBhbGxvY2F0ZWQgZnJvbSB0aGUgc2Vjb25kIHN1cHBseSB0byBob21lOiBgUFdfVE9fSE9NRSA9IFJFU0lEVUFMX0RFTUFORF8xIC0gXG4gIFJFU0lEVUFMX0RFTUFORF8yYC5cbi0gQW5kIHdlIGFwcGx5IHRoZSBzYW1lIHByb2Nlc3MgYSB0aGlyZCB0aW1lIHRvIGNhbGN1bGF0ZSBgUkVTSURVQUxfREVNQU5EX0ZJTkFMYCBhbmQgXG50aGUgdGhpcmQgc3VwcGx5IGFsbG9jYXRpb24gdG8gdGhlIGhvbWUgYFNPTEFSX1RPX0hPTUVgLlxuXG5Ob3RlIHRoYXQgdGhlIFRlc2xhIGFuZC9vciBJbmZsdXhEQiBkYXRhIGlzIG5vdCBhbHdheXMgdG8gaW50ZXJuYWxseSBjb25zaXN0ZW50LiBBc1xuYSByZXN1bHQgaXQgaXMgcG9zc2libGUgZm9yIGBSRVNJRFVBTF9GSU5BTF9ERU1BTkRgIHRvIGJlIG5vbi16ZXJvIChpdCBjYW4ndCBiZSBcbnBoeXNpY2FsbHksIGJ1dCByb3VuZGluZywgY2FsY3VsYXRpb24gZXJyb3JzIGFuZCBzb21lIFRlc2xhIG9kZGl0aWVzIHJlc3VsdCBpdCBpbiBcbmhhcHBlbmluZyBmcm9tIHRpbWUgdG8gdGltZSAtIGl0IGlzIHplcm8gbW9zdCBvZiB0aGUgdGltZSkuIENvbnNlcXVlbnRseSwgYWxsIG9mIHRoZVxucmVzaWR1YWwgdmFsdWVzIGFyZSBhdmFpbGFibGUgZm9yIHJlcG9ydGluZyBpZiB5b3Ugd2FudCB0byBzZWUgd2hhdCBpcyBoYXBwZW5pbmcuIFxuKEFzaWRlOiBTb21ldGltZXMgdGhlIGVuZXJneSBiYWxhbmNlIGRvZXNuJ3Qgd29yayBhdCBhbGwgLSBtb3JlIGVuZXJneSBjb21pbmcgaW4gdGhhblxuZ29pbmcgb3V0L2JlaW5nIGNvbnN1bWVkIG9yIHZpY2UgdmVyc2EgLSB0aGUgdXNhZ2UgZW5naW5lIGlnbm9yZXMgdGhpcyBzaXR1YXRpb24gYXMgaXRcbmlzIGEpIGluZnJlcXVlbnQgYW5kIGIpIHRoZXJlIGlzIG5vIHByYWN0aWNhbCBtZXRob2QgdG8gYWRkcmVzcyBpdC4pXG5cblRoZSB3YXkgSSBoYXZlIGNob3NlbiB0byBhZGRyZXNzIHRoaXMgaXMgdG8gYXNzdW1lIHRoYXQgYW55IHBvc2l0aXZlIG5vbi16ZXJvIHJlc2lkdWFsIFxuZGVtYW5kIG11c3QgaGF2ZSBiZWVuIG1ldCBieSBpbnRlcm5hbCBnZW5lcmF0aW9uIChlcnJpbmcgb24gdGhlIHRoaW5raW5nIHBvc2l0aXZlIHNpZGUpLFxuYW5kIEkgaGF2ZSBhbHNvIGFzc3VtZWQgdGhpcyBpcyB1bmRlci1yZXBvcnRlZCBzb2xhciBnZW5lcmF0aW9uLiBTbyBJIGhhdmUgYWxzbyBpbmNsdWRlZFxuYSBjb3JyZWN0ZWQgc29sYXIgc2VsZiBjb25zdW1wdGlvbiB2YXJpYWJsZSB3aGljaCBpcyBkZWZpbmVkIGFzOlxuICBgYGBcbiAgU0VMRl9TT0xBUl9QTFVTX1JFUyA9IFNPTEFSX1RPX0hPTUUgKyBSRVNJRFVBTF9ERU1BTkRfRklOQUxcbiAgYGBgXG4oVGhpcyBtYXkgbGVhZCB0byBpbmZyZXF1ZW50IHNtYWxsIHNvbGFyIGNvbnN1bXB0aW9uIGJlaW5nIHJlcG9ydGVkIGluIHRoZSBtaWRkbGUgb2ZcbnRoZSBuaWdodCkuXG5cblRoZSBleGFtcGxlIGB1c2FnZS5qc29uYCBmaWxlIHVzZXMgdGhpcyB2YXJpYWJsZSwgYnV0IHlvdSBjYW4gdXNlIGBTT0xBUl9UT19IT01FYCBcbmluc3RlYWQgaWYgeW91IGRvbid0IHdhbnQgdG8gdXNlIG15IGFzc3VtcHRpb24uIE5vdGUgdG90YWwgc2VsZiBjb25zdW1wdGlvbiBhbHNvIFxuaW5jbHVkZXMgdGhpcyByZXNpZHVhbDpcbiAgYGBgXG4gIFNFTEZfVE9UQUwgPSBQV19UT19IT01FICsgU0VMRl9TT0xBUl9QTFVTX1JFU1xuICBgYGBcbklmIHlvdSBkb24ndCB3YW50IHRvIGluY2x1ZGUgdGhlIGZpbmFsIHJlc2lkdWFsIGluIHRvdGFsIHNlbGYgY29uc3VtcHRpb24sIHlvdSB3aWxsIG5lZWRcbnRvIGNyZWF0ZSBhIGN1c3RvbSBhZ2VudCBvciByZXBvcnQgYFNPTEFSX1RPX0hPTUVgIGFuZCBgUFdfVE9fSE9NRWAgYW5kIHRoZW4gc3VtIHRoZXNlXG5pbiBncmFmYW5hIHRvIG9idGFpbiBhIHRvdGFsIHNlbGYgY29uc3VtcHRpb24uXG5cbkZpbmFsbHkgd2l0aCB0aGUgY2FsY3VsYXRpb25zIGFib3ZlIGluIHBsYWNlLCB0aGUgdXNhZ2UgZW5naW5lIGNhbGN1bGF0ZXMgdHdvIG1vcmUgXG51dGlsaXR5IHZhcmlhYmxlczpcbi0gYEdSSURfQ0hBUkdJTkcgPSBHUklEX1NVUFBMWSAtIEdSSURfVE9fSE9NRWAsIHdoZXJlIEkgYXNzdW1lIGFueSBncmlkIHN1cHBseSBpbiBleGNlc3Ncbm9mIHRoYXQgYWxsb2NhdGVkIHRvIGhvbWUgZGVtYW5kIGlzIHVzZWQgdG8gY2hhcmdlIHRoZSBwb3dlcndhbGwuXG4tIGBTRUxGX1BXX05FVF9PRl9HUklEID0gUFdfVE9fSE9NRSAtIEdSSURfQ0hBUkdJTkdgLCB3aGljaCBpcyB0aGUgcG93ZXJ3YWxsIHN1cHBseSB0byBcbmhvbWUgbGVzcyBhbnkgZ3JpZCBjaGFyZ2luZyBvZiB0aGUgcG93ZXJ3YWxsIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kLiBTZWUgZGlzY3Vzc2lvbiBvblxucG93ZXJ3YWxsIHNhdmluZ3MgaW4gdGhlIGNhbGVuZGFyIHNlY3Rpb24gZm9yIHRoZSByZWFzb24gZm9yIHRoaXMgdmFyaWFibGUgYW5kIGl0c1xuKG9wdGlvbmFsKSB1c2FnZS5cblxuRmluYWwgbm90ZTogVGhlIHVzYWdlIGVuZ2luZSBkb2VzIG5vdCB0cnkgdG8gcmVjb25jaWxlIHRoZSBlbmVyZ3kgYmFsYW5jZSAob3V0IG9mXG5zY29wZSkuXG5cbiMjIyBQbGFucyBzZWN0aW9uXG5cblRoZSBwbGFucyBzZWN0aW9uICoqbXVzdCoqIGNvbnRhaW4gYXQgbGVhc3Qgb25lIHVzYWdlIHBsYW4sIGFuZCBjYW4gY29udGFpbiBhbiBhbnkgXG5udW1iZXIgb2YgdXNhZ2UgcGxhbnMuIFxuXG5gYGBcbiAgXCJwbGFuc1wiOiBbXG4gICAgPHVzYWdlIHBsYW4gMT4sXG4gICAgPHVzYWdlIHBsYW4gMj4sXG4gICAgPHVzYWdlIHBsYW4gMz4sXG4gICAgLi4uXG4gIF1cbmBgYFxuXG5FYWNoIHBsYW4gdXNlcyB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZSwgd2l0aCB1c2VyIHNwZWNpZmllZCBuYW1lcyBpbiA8PjpcblxuIGBgYFxuIHtcbiAgXCJuYW1lXCI6IFwiPHBsYW4gbmFtZSAtIGZvciBleGFtcGxlIFV0aWxpdHkgWFlaPlwiLFxuICBcInJlcG9ydFwiOiBbXG4gICAgICBcIkdSSURfU1VQUExZXCIsXG4gICAgICBcIkdSSURfRVhQT1JUXCIsXG4gICAgICBcIlNFTEZfUFdfTkVUX09GX0dSSURcIixcbiAgICAgIFwiU0VMRl9TT0xBUl9QTFVTX1JFU1wiXG4gIF0sXG4gIFwiYWdlbnRcIjogXCJTaW1wbGVcIixcbiAgXCJzZWFzb25zXCI6IHtcbiAgICAgIFwiPHNlYXNvbiBuYW1lIC0gZS5nLiBTdW1tZXIgRFNUPlwiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcInNjaGVkdWxlXCI6IFwiPGUuZy4gV2Vla2RheT4gXCIsXG4gICAgICAgICAgICAgIFwiZGF5c1wiOiBbXG4gICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgICAgICAzLFxuICAgICAgICAgICAgICAgICAgNFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInBlcmlvZHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCIyMjowMFwiOiBcIk9mZi1QZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjA4OjAwXCI6IFwiUGVha1wiLFxuICAgICAgICAgICAgICAgICAgXCIxMTowMFwiOiBcIk9mZi1QZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjE3OjAwXCI6IFwiUGVha1wiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJzY2hlZHVsZVwiOiBcIjxlLmcuIFdlZWtlbmQ+XCIsXG4gICAgICAgICAgICAgIFwiZGF5c1wiOiBbXG4gICAgICAgICAgICAgICAgICA1LFxuICAgICAgICAgICAgICAgICAgNlxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInBlcmlvZHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCIwMDowMFwiOiBcIk9mZi1QZWFrXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcIjxzZWFzb24gbmFtZSAtIGUuZy4gV2ludGVyIFdTVD5cIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJzY2hlZHVsZVwiOiBcIjxlLmcuIFdlZWtkYXk+XCIsXG4gICAgICAgICAgICAgIFwicGVyaW9kc1wiOiB7XG4gICAgICAgICAgICAgICAgICBcIjIxOjAwXCI6IFwiT2ZmLVBlYWtcIixcbiAgICAgICAgICAgICAgICAgIFwiMDc6MDBcIjogXCJQZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjEwOjAwXCI6IFwiT2ZmLVBlYWtcIixcbiAgICAgICAgICAgICAgICAgIFwiMTY6MDBcIjogXCJQZWFrXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIF1cbiAgfVxufVxuYGBgXG5UaGUgZm9sbG93aW5nIHBvaW50cyBwcm92aWRlIG1vcmUgZGV0YWlsIG9uIHRoZXNlIGVsZW1lbnRzOlxuXG4tIFsqKnJlcXVpcmVkKipdIFwibmFtZVwiIGlzIGEgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB1c2FnZSBwbGFuLiBGb3IgZXhhbXBsZTogXG5cIkF1cm9yYS1UQVMtVG9VXCIgZm9yIHRoZSBUYXNtYW5pYW4gQXVyb3JhIHRpbWUgb2YgdXNlIHBsYW4uIFxuLSBbKipyZXF1aXJlZCoqXSBcInJlcG9ydFwiIGxpc3RzIHRoZSBlbmVyZ3kgdmFyaWFibGVzIHRoYXQgeW91IHdhbnQgcmVwb3J0ZWQgdG8gZ3JhZmFuYVxuZm9yIHRoZSBwbGFuLiBBdmFpbGFibGUgdmFyaWFibGVzIGFyZSBkZWZpbmVkIGluIFxuW2Bjb21tb24ucHlgXSgjc3RyaW5ncy1mcm9tLWNvbW1vbnB5KSBzdHJpbmdzIGFib3ZlLiBOb3RlOiBhKSB5b3UgbXVzdCBzcGVjaWZ5IFxuYXQgbGVhc3Qgb25lIHJlcG9ydCB2YXJpYWJsZSBldmVuIGlmIHlvdSBkbyBub3QgcGxhbiB0byB1c2UgdGhlc2UgdmFyaWFibGVzLCBhbmQgYilcbkNvc3Qvc2F2aW5ncyB2YXJpYWJsZXMgYXJlIHNwZWNpZmllZCBpbiB0aGUgY2FsZW5kYXIgc2VjdGlvbi5cbi0gWyoqcmVxdWlyZWQqKl0gXCJhZ2VudFwiIHNwZWNpZmllcyB0aGUgdXNhZ2UgYWdlbnQgZm9yIGNhbGN1bGF0aW5nIGNvc3RzLiBSaWdodCBub3csIFxub25seSB0aGUgXCJTaW1wbGVcIiBhZ2VudCBpcyBhdmFpbGFibGUuXG4tIFsqKnJlcXVpcmVkKipdIFwic2Vhc29uc1wiLiBFYWNoIHBsYW4gKiptdXN0KiogY29udGFpbiBhdCBsZWFzdCBvbmUgc2Vhc29uLCBhbmQgY2FuIFxuY29udGFpbiBhbiBhcmJpdHJhcnkgbnVtYmVyIG9mIHNlYXNvbnMuIEFsbCBzZWFzb25zIGluIHRoZSBwbGFuIGhhdmUgc2hhcmUgdGhlIHNhbWUgXG5iYXNpYyB0YXJpZmYgc2NoZWR1bGUgc3RydWN0dXJlLCBidXQgdGhlIHRpbWluZyBkZXRhaWwgb2YgdGhlIHRhcmlmZiBzY2hlZHVsZXMgdmFyaWVzIFxuYmV0d2VlbiBzZWFzb25zICh0aGUgZXhwbGFuYXRpb24gYmVsb3cgbWFrZXMgdGhpcyBjbGVhcmVyKS4gU2Vhc29uIHRpbWluZ3MgYXJlIGRlZmluZWQgXG5pbiB0aGUgY2FsZW5kYXIgc2VjdGlvbiAoYW5kIEFSRSBOT1QgdGllZCB0byBwaHlzaWNhbCBzZWFzb25zKS5cblRoZSBydWxlcyBmb3Igc2Vhc29ucyBhcmU6XG4gIC0gWyoqcmVxdWlyZWQqKl0gRWFjaCBzZWFzb24gKiptdXN0KiogaGF2ZSBhIFwibmFtZVwiLiBcbiAgLSBbKipyZXF1aXJlZCoqXSBUaGUgZmlyc3Qgc2Vhc29uIG11c3QgZnVsbHkgZGVmaW5lICoqYWxsKiogb2YgdGhlIHRhcmlmZiBzY2hlZHVsZXNcbiAgdXNlZCBpbiB0aGUgcGxhbi4gSW4gdGhlIGV4YW1wbGUgYWJvdmUgdGhlIFwic3VtbWVyXCIgc2Vhc29uIGRlZmluZXMgYSBcIldlZWtkYXlcIiBhbmQgYSBcbiAgXCJXZWVrZW5kXCIgc2NoZWR1bGUuIFxuICAtIFsqKm9wdGlvbmFsKipdIFRoZSBzZWNvbmQgc2Vhc29uIGNhbiByZXBsYWNlIG9uZSBvciBtb3JlIG9mIHRoZSB0YXJpZmYgc2NoZWR1bGVzIFxuICBuYW1lZCBpbiB0aGUgZmlyc3Qgc2Vhc29uICh0ZWNobmljYWxseSwgaXQgY2FuIGFsc28gYWRkIG5ldyB0YXJpZmYgc2NoZWR1bGVzIC0gSSdkXG4gIGFkdmlzZSBhZ2FpbnN0IHRoaXMgdGhvdWdoIC0gb3V0Y29tZXMgd2lsbCBiZSB1bnByZWRpY3RhYmxlKS4gSW4gb3VyIGV4YW1wbGUgYWJvdmUsXG4gIHRoZSBcIldlZWtlbmRcIiBzY2hlZHVsZSBpcyB0aGUgc2FtZSBpbiBzdW1tZXIgYW5kIHdpbnRlciwgc28gaXQgaXMgbm90IHJlcGxhY2VkLlxuICBIb3dldmVyLCB0aGUgdGltaW5nIG9mIHRoZSBcIldlZWtkYXlcIiBzY2hlZHVsZSBkb2VzIGNoYW5nZSwgc28gd2UgcmVwbGFjZSB0aGF0LiBcbiAgLSBUaGUgdGhpcmQgYXBwbGllcyB0aGUgc2FtZSByZXBsYWNlbWVudCBsb2dpYywgYnV0IHRvIHRoZSBzZWNvbmQgc2Vhc29uLCBhbmQgc28gb24uXG5cbiAgVGhpcyBwcm9jZXNzIGlzIGludGVuZGVkIHRvIHNpbXBsaWZ5IGRlYWxpbmcgd2l0aCBtdWx0aS10YXJpZmYgdXNhZ2UgcGxhbnMgd2hlcmUgbm90XG4gIHRvbyBtdWNoIGNoYW5nZXMgYmV0d2VlbiBzZWFzb25zIC0gdGhlIGFsdGVybmF0aXZlIGlzIHRvIHJlcXVpcmUgZGVmaW5pdGlvbiBvZiBldmVyeVxuICB0YXJpZmYgaW4gZXZlcnkgc2Vhc29uIChpZiB1c2VycyBwcmVmZXIsIGl0IHdvdWxkIG5vdCBiZSBoYXJkIHRvIHN3aXRjaCB0byB0aGlzIG1vZGUpLiBcbi0gRmluYWxseSwgZWFjaCB0YXJpZmYgc2NoZWR1bGUgc3BlY2lmaWVzIHRhcmlmZiB0aW1pbmdzIGZvciBhIGdyb3VwIG9mIHdlZWtkYXlzLiBUaGVcbnJ1bGVzIGZvciB0YXJpZmYgc2NoZWR1bGVzIGFyZTpcbiAgLSBbKipyZXF1aXJlZCoqXSBUaGV5IG11c3QgaGF2ZSBhIHVuaXF1ZSBcInNjaGVkdWxlXCIgbmFtZSBpbiB0aGUgcGxhbiAoeW91IGNhbiByZS11c2VcbiAgdGhlIHNjaGVkdWxlIG5hbWUgaW4gb3RoZXIgcGxhbnMpLiBUaGUgbmFtZSBpcyByZXF1aXJlZCBpbiB0aGUgZmlyc3Qgc2Vhc29uIChpbml0aWFsXG4gIGRlZmluaXRpb24pIGFuZCBmdXR1cmUgc2Vhc29ucyAodG8gaWRlbnRpZnkgd2hpY2ggdGFyaWZmIHNjaGVkdWxlIHdpbGwgYmUgcmVwbGFjZWQpLlxuICAtIFsqKnJlcXVpcmVkKipdIFdoZW4gdGhleSBhcmUgZmlyc3QgZGVmaW5lZCBpbiB0aGUgZmlyc3Qgc2Vhc29uIG9mIHRoZSBwbGFuLCB5b3VcbiAgKiptdXN0Kiogc3BlY2lmeTpcbiAgICAtIFRoZSB3ZWVrIGRheXMgdGhlIHNjaGVkdWxlIHdpbGwgYXBwbHkgd2l0aCBhIFwiZGF5c1wiIGxpc3QgKDAgPSBNb25kYXksIFxuICAgIDYgPSBTdW5kYXkpLlxuICAgIC0gVGhlIHN0YXJ0IHRpbWVzIGZvciBlYWNoIHRhcmlmZiBkdXJpbmcgdGhlIGRheSB3aXRoIGEgXCJwZXJpb2RzXCIgZGljdGlvbmFyeS5cbiAgLSBbKipvcHRpb25hbCoqIFdoZW4gc2NoZWR1bGVzIGFyZSBkZWZpbmVkIGluIGFueSBzZWFzb24gYWZ0ZXIgdGhlIGZpcnN0LCB0aGV5IFxuICAqKm11c3QqKiBoYXZlIHRoZSBzYW1lIG5hbWUgYXMgdGhlIG9uZSBvZiB0aGUgc2NoZWR1bGVzIGluIHRoZSBmaXJzdCBzZWFzb24gYW5kXG4gICoqbXVzdCoqIGRlZmluZSBlaXRoZXIgXCJkYXlzXCIgYW5kIFwicGVyaW9kc1wiIChhbmQgKiptYXkqKiBkZWZpbmUgYm90aCksIHdoaWNoIHdpbGwgXG4gIHJlcGxhY2UgdGhlIHJlbGV2YW50IGVsZW1lbnRzIG9mIHRoZSB0YXJpZmYgc2NoZWR1bGUgaW4gdGhlIHByZWNlZGluZyBzZWFzb24uXG5cblxuICBTZWUgdGhlIGV4YW1wbGUgYWJvdmUgZm9yIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlc2UgZW50cmllcy4gXG5cbiAgU3BlY2lmaWMgbm90ZXMgb24gXCJwZXJpb2RzXCIgYW5kIFwiZGF5c1wiOlxuICAtIEF0IGxlYXN0IG9uZSBkYXkgKiptdXN0KiogYmUgc3BlY2lmaWVkIGluIFwiZGF5c1wiLlxuICAtIEF0IGxlYXN0IG9uZSBwZXJpb2QgKiptdXN0KiogYmUgc3BlY2lmaWVkIGluIFwicGVyaW9kc1wiLlxuICAtIEVhY2ggZW50cnkgaXMgXCJbdGFyaWZmIHN0YXJ0IHRpbWUgaW4gMjQ6MDAgbm90YXRpb25dXCI6IFwiW3RhcmlmZiBuYW1lXVwiLlxuICAtIFRhcmlmZnMgbXVzdCBhcHBlYXIgaW4gY2hyb25vbG9naWNhbCBvcmRlciEgVGhlIHVzYWdlIGVuZ2luZSBjYWxjdWxhdGVzIHRoZSB0YXJpZmZcbiAgYWN0aXZlIGR1cmF0aW9uIGFzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdHdvIGVudHJpZXMuXG4gIC0gWW91IGNhbiBwaWNrIGFueSBwZXJpb2QgdG8gc3RhcnQgdGhlIGxpc3QgKGJ1dCB0byBrZWVwIHlvdXIgaGVhZCBpbiBvbmUgcGllY2UsIGl0IFxuICBtYWtlcyBtb3N0IHNlbnNlIHRvIHN0YXJ0IHdpdGggdGhlIGZpcnN0IG9uZSBhZnRlciBtaWRuaWdodCBhbmQgZW5kIHdpdGggdGhlIGxhc3Qgb25lXG4gIGJlZm9yZSBtaWRuaWdodCkuXG4gIC0gVGhlIHVzYWdlIGVuZ2luZSBhdXRvbWF0aWNhbGx5IHJvbGxzIGFyb3VuZCBiZXR3ZWVuIHRoZSBsYXN0IGFuZCBmaXJzdCBlbnRyaWVzLCBhbmRcbiAgaGFuZGxlcyBtaWRuaWdodCBjcm9zc292ZXIgKHNvIHlvdSBkb24ndCBoYXZlIHRvIHRoaW5rIGFib3V0IHN0YXJ0IGFuZCBlbmQgb2YgZGF5XG4gIGlzc3VlcykuXG4gIC0gVGhlIHNjaGVkdWxlIHJlcGxhY2VtZW50IG1lY2hhbmlzbSByZXBsYWNlcyB0aGUgZW50aXJlIFwiZGF5c1wiIGFuZCBcInBlcmlvZHNcIiBlbnRyaWVzXG4gICh5b3UgY2FuJ3QgbW9kaWZ5IGEgc2luZ2xlIGRheSBvciBwZXJpb2QgZW50cnkgLSB5b3UgbXVzdCBmdWxseSByZXNwZWNpZnkgZGF5IGdyb3Vwc1xuICBhbmQgcGVyaW9kcyB3aXRoaW4gdGhlIGRheSkuXG5cbiMjIyBDYWxlbmRhciBzZWN0aW9uXG5cblRoZSBjYWxlbmRhciBzZWN0aW9uIGlzIGEgZGljdGlvbmFyeSBvZiBjYWxlbmRhciBlbnRyeSBkaWN0aW9uYXJpZXMsIHdoZXJlIGVhY2ggZW50cnkgXG5kaWN0aW9uYXJ5IGhhcyB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZTpcblxuYGBgXG5cIjIwMjItMTAtMDZcIjoge1xuICAgIFwicGxhblwiOiBcIkF1cm9yYS1UQVMtVG9VXCIsXG4gICAgXCJzZWFzb25cIjogXCJTdW1tZXJcIixcbiAgICBcInRhcmlmZnNcIjoge1xuICAgICAgICBcIlBlYWtcIjoge1xuICAgICAgICAgICAgXCJHUklEX1NVUFBMWVwiOiAtMC4zMzM5OSxcbiAgICAgICAgICAgIFwiR1JJRF9FWFBPUlRcIjogMC4wODg4MyxcbiAgICAgICAgICAgIFwiU0VMRl9QV19ORVRfT0ZfR1JJRFwiOiAwLjMzMzk5LFxuICAgICAgICAgICAgXCJTRUxGX1NPTEFSX1BMVVNfUkVTXCI6IDAuMzMzOTksXG4gICAgICAgICAgICBcIlNVUFBMWV9DSEFSR0VcIjogLTAuMDQ1NzkyOTE2NjZcbiAgICAgICAgfSxcbiAgICAgICAgXCJPZmYtUGVha1wiOiB7XG4gICAgICAgICAgICBcIkdSSURfU1VQUExZXCI6IC0wLjE1NTUxLFxuICAgICAgICAgICAgXCJHUklEX0VYUE9SVFwiOiAwLjA4ODgzLFxuICAgICAgICAgICAgXCJTRUxGX1BXX05FVF9PRl9HUklEXCI6IDAuMTU1NTEsXG4gICAgICAgICAgICBcIlNFTEZfU09MQVJfUExVU19SRVNcIjogMC4xNTU1MSxcbiAgICAgICAgICAgIFwiU1VQUExZX0NIQVJHRVwiOiAtMC4wNDU3OTI5MTY2NlxuICAgICAgICB9XG4gICAgfVxufSxcbmBgYFxuXG5bKipyZXF1aXJlZCoqXSBUaGUgZGF0ZSBrZXkgc3BlY2lmaWVzIHRoZSBzdGFydGluZyBkYXRlIGZvciB0aGUgY2FsZW5kYXIgZW50cnkuIFRoZVxuZmlyc3QgZW50cnkgaW4gZGF0ZSBvcmRlciAqKm11c3QqKiBjb250YWluIHRoZSBmb2xsb3dpbmcgc3ViLWVsZW1lbnRzOlxuLSBbKipyZXF1aXJlZCoqXSBcInBsYW5cIjogXCJbcGxhbiBuYW1lXVwiLCB3aGVyZSBgcGxhbiBuYW1lYCBpcyB0aGUgcGxhbiB0aGF0IHdpbGwgYmVcbmFjdGl2ZSBmcm9tIHRoZSBzdGFydCBkYXRlLCBhbmQgbXVzdCBjb3JyZXNwb25kIHRvIG9uZSBvZiB0aGUgcGxhbnMgaW4gdGhlIFwicGxhbnNcIlxuc2VjdGlvbi5cbi0gWyoqcmVxdWlyZWQqKl0gXCJzZWFzb25cIjogXCJbc2Vhc29uIG5hbWVdXCIsIHdoZXJlIGBzZWFzb24gbmFtZWAgaXMgdGhlIHNlYXNvbiBvZlxuYHBsYW4gbmFtZWAgdGhhdCB3aWxsIGJlIGFjdGl2ZSBmcm9tIHRoZSBzdGFydCBkYXRlLCBhbmQgbXVzdCBtYXRjaCBvbmUgb2YgdGhlIHNlYXNvbnNcbmluIGBwbGFuIG5hbWVgLlxuLSBbKipyZXF1aXJlZCoqXSBcInRhcmlmZnNcIjogW2RpY3Rpb25hcnkgb2YgdGFyaWZmIHJhdGUgdGFibGVzXS4gSW4gdGhlIGFib3ZlIGV4YW1wbGUsXG5cIlBlYWtcIiBhbmQgXCJPZmYtcGVha1wiIHJhdGUgdGFibGVzIHNwZWNpZnkgY29zdCBhbmQgc2F2aW5ncyByYXRlcyBmb3IgdmFyaW91cyBzdXBwbGllc1xuYW5kIGV4cG9ydHMgLSB5b3UgY2FuIGZsaXAgdGhlIHNpZ24gb2Ygc2F2aW5ncyBhbmQgY29zdHMgaWYgeW91IHByZWZlci4gVW5mb3J0dW5hdGVseSwgXG5pZiB5b3UgYXJlIG5vdCBpbnRlcmVzdGVkIGluIGNvc3QgZGF0YSwgeW91IG11c3Qgc3RpbGwgc3BlY2lmeSBhdCBsZWFzdCBvbmUgdGFyaWZmIHJhdGVcbnRhYmxlLCBidXQgeW91IGNhbiBpZ25vcmUgY29zdCBvdXRwdXQgaW4geW91ciBmaW5hbCBkYXNoYm9hcmQuIFxuXG4gIEFnZW50IGltcGxlbWVudGF0aW9uIG5vdGU6IEFnZW50cyBnZW5lcmFsbHkgc2hvdWxkIHJlcG9ydCBjb3N0IGFuZCBzYXZpbmdzIGZvciBhbnkgXG4gIHZhcmlhYmxlIHNwZWNpZmllZCBpbiB0aGUgcmF0ZSB0YWJsZXMuXG5cblNlZSB0aGUgZm9sbG93aW5nIHNlY3Rpb24gZm9yIGEgZGlzY3Vzc2lvbiBvZiBob3cgdGhlIHNpbXBsZSB1c2FnZSBhZ2VudCB3b3JrcyBhbmQgZm9yIGEgXG5kaXNjdXNzaW9uIG9mIHdoeSBJIHVzZSB0aGUgc3BlY2lhbCB2YXJpYWJsZXMgYFNFTEZfU09MQVJfUExVU19SRVNgIGFuZCBcbmBTRUxGX1BXX05FVF9PRl9HUklEYCBpbiBteSBzYXZpbmdzIGNhbGN1bGF0aW9ucyAoaWYgeW91IGRvbid0IGxpa2UgbXkgbG9naWMsIHlvdSBjYW5cbnVzZSBhbnkgb2YgdGhlIG90aGVyIHZhcmlhYmxlcyBzcGVjaWZpZWQgaW4gYGNvbW1vbi5weWAgaW5zdGVhZCkuXG5cblRoZSBzZWNvbmQgYW5kIGZvbGxvd2luZyBjYWxlbmRhciBlbnRyaWVzIG9wZXJhdGUgYnkgZGlmZmVyZW5jZSB0byB0aGUgcHJldmlvdXMgZW50cnkgaW5cbmNhbGVuZGFyIG9yZGVyLiBZb3UgbWF5IHNwZWNpZnkgYW55IG9yIGFsbCBvZiB0aGUgZWxlbWVudHMgcmVxdWlyZWQgZm9yIHRoZSBmaXJzdCBlbnRyeSxcbmFuZCB0aGVzZSB3aWxsIHRoZW4gcmVwbGFjZSB0aGUgdmFsdWVzIHVzZWQgaW4gdGhlIHRoZSBwcmV2aW91cyBlbnRyeS4gSW4gdGhlIGZvbGxvd2luZ1xuZXhhbXBsZSwgdGhlIHBsYW4gYW5kIHRhcmlmZnMgcmVtYWluIHRoZSBzYW1lIGFzIHRoZSBwcmV2aW91cyBlbnRyeSwgYnV0IHRoZSBzZWFzb24gaXNcbmNoYW5nZWQgdG8gV2ludGVyLlxuYGBgXG5cIjIwMjMtMDQtMDJcIjoge1xuICAgIFwic2Vhc29uXCI6IFwiV2ludGVyXCJcbn1cbmBgYFxuIyMgU2ltcGxlIHVzYWdlIGFnZW50XG5cblRoZSBzaW1wbGUgdXNhZ2UgYWdlbnQgaXMgdmVyeSBzdHJhaWdodCBmb3J3YXJkLiBGb3IgZWFjaCBlbmVyZ3kgdmFyaWFibGUgaW4gdGhlIHJhdGUgXG50YWJsZSwgaXQgY2FsY3VsYXRlcyB0aGUgY29zdC9zYXZpbmcgYXMgYFZhcmlhYmxlIHZhbHVlIHggdmFyaWFibGUgcmF0ZWAsIGFuZCBwZXJmb3JtcyBcbnRoaXMgY2FsY3VsYXRpb24gZm9yIGVhY2ggdGltZSBpbnRlcnZhbCByZWNvcmQgcmV0dXJuZWQgZnJvbSB0aGUgaW5mbHV4IGRhdGFiYXNlLlxuXG5BcyBub3RlZCBwcmV2aW91c2x5LCBJIHVzZSB0d28gc3BlY2lhbCB2YXJpYWJsZXMgaW4gbXkgc2F2aW5ncyBjYWxjdWxhdGlvbnM6XG5cbi0gYFNFTEZfU09MQVJfUExVU19SRVNgLCB3aGljaCBpcyB0aGUgdG90YWwgc29sYXIgZW5lcmd5IGFsbG9jYXRlZCBmb3IgaG9tZSB1c2UgcGx1c1xuYW55IHJlc2lkdWFsIGZyb20gdGhlIGRlbWFuZCBhbGxvY2F0aW9uIGNhbGN1bGF0aW9ucy4gSSBkbyB0aGlzIGJhc2VkIG9uIHRoZSBmb2xsb3dpbmdcbnJlYXNvbmluZzpcbiAgLSBBcyBub3RlZCBwcmV2aW91c2x5LCB0aGUgZmluYWwgcmVzaWR1YWwgbWF5IGJlIG5vbi16ZXJvIGVpdGhlciBkdWUgY2FsY3VsYXRpb24gXG4gIG1ldGhvZHMgKGludGVncmF0aW9uLCByb3VuZGluZywgZXRjKSBvciBUZXNsYSdzIGNhcHJpY2UuXG4gIC0gSSdtIGFyYml0cmFyaWx5IGFzc3VtaW5nIHRoYXQgVGVzbGEncyBjYWxjdWxhdGlvbiBvZiBob3VzZWhvbGQgZGVtYW5kIGFuZCBncmlkXG4gIHN1cHBseSBpcyBjb3JyZWN0LiBIZW5jZSwgYW55IHJlc2lkdWFsIGRlbWFuZCBpcyByZWFsIGFuZCBzaG91bGQgYmUgc3VwcGxpZWQgYnkgdGhlXG4gIHNvbGFyIHN5c3RlbSBvciB0aGUgcG93ZXJ3YWxsLiBJJ3ZlIGFyYml0cmFyaWx5IGFzc3VtZWQgdGhlIHNvbGFyIHN5c3RlbSBzdXBwbGllcyBcbiAgdGhpcyByZXNpZHVhbC4gXG5cbiAgSWYgeW91IGRvbid0IGxpa2UgdGhpcyBhc3N1bXB0aW9uLCBJIHN1Z2dlc3QgeW91IHVzZSBgU09MQVJfVE9fSE9NRWAgaW5zdGVhZCBhbmQgXG4gIGlnbm9yZSB0aGUgcmVzaWR1YWwuXG5cbi0gYFNFTEZfUFdfTkVUX09GX0dSSURgLCB3aGljaCBpcyBlbmVyZ3kgc3VwcGxpZWQgdG8gdGhlIGhvdXNlIGxlc3MgZW5lcmd5IHVzZWQgdG8gXG5jaGFyZ2UgdGhlIHBvd2Vyd2FsbCwgd2hlcmUgSSB2YWx1ZSB0aGUgcG93ZXJ3YWxsIHNhdmluZ3MgcmF0ZSBhcyB0aGUgbmVnYXRpdmUgb2YgdGhlIFxuZ3JpZCBzdXBwbHkgY29zdCBhdCB0aGUgdGltZSAoZS5nLiBwZWFrL29mZiBwZWFrIGdyaWQgc3VwcGx5IG9mIC0kMC4zMC8tJDAuMjAgcmVzdWx0cyBpbiBcbmEgcG93ZXJ3YWxsIHNhdmluZyBvZiAkMC4zMC8kMC4yMCkuIFRoZSBhcmd1bWVudCBoZXJlIGlzIGEgYml0IG1vcmUgc3VidGxlIHRoYW4gdGhlXG5wcmV2aW91cyBjYXNlIC0gaW4gZWZmZWN0IHRoZSBwb3dlcndhbGwgc2F2aW5nIGlzIHRoZSBzdW0gb2YgdHdvIGVmZmVjdHM6XG4gIC0gVG90YWwgcG93ZXJ3YWxsIHN1cHBseSB0byBob21lIGBYYCBnZW5lcmF0ZXMgYSBzYXZpbmcgb2YgYFggKiByYCBpbiBhIGdpdmVuIHBlcmlvZC4gXG4gIC0gSWYgd2UgY2hhcmdlIHRoZSBwb3dlcndhbGwgd2l0aCBhbiBhbW91bnQgYFlgIGZyb20gdGhlIGdyaWQgaW4gdGhlIHNhbWUgcGVyaW9kIChlLmcuIFxuICB0aGUgYmF0dGVyeSBicmVha3MgYW4gaG91ciBpbnRvIDQwIG1pbnV0ZXMgcG93ZXJpbmcgdGhlIGhvbWUsIDEwIG1pbnV0ZXMgY2hhcmdpbmcgZnJvbVxuICB0aGUgZ3JpZCwgMTAgbWludXRlcyBpZGxlKSwgd2UgICBkb24ndCBnZXQgYSBob21lIHN1cHBseSBiZW5lZml0IGZyb20gdGhhdCBncmlkIHBvd2VyXG4gIHVudGlsIGl0IGRpc2NoYXJnZXMgdG8gdGhlIGhvbWUuIFNvIHdlICBhbGxvY2F0ZSBhICoqbmVnYXRpdmUqKiBzYXZpbmcgb2YgYC1ZICogcmAuXG4gIC0gVGFrZW4gdG9nZXRoZXIsIHdlIGdldCB0aGUgXCJzYXZpbmdzXCIgZnJvbSB0aGUgcG93ZXIgd2FsbCBvZiBgKFggLSBZKSAqIHJgLCBvciBcbiAgcG93ZXJ3YWxsIHN1cHBseSB0byBob21lIG5ldCBvZiBncmlkIGNoYXJnaW5nIHRvIHBvd2Vyd2FsbCBmb3IgdGhhdCBwZXJpb2QuXG5cbiAgVGhpcyBhcHByb2FjaCBoYXMgdHdvIGJlbmVmaXRzOlxuICAtIEZpcnN0LCBpdCBkZWFscyB3aXRoIHRoZSBwb3RlbnRpYWwgcHJvYmxlbSBvZiB2YWx1aW5nIGVuZXJneSB1c2UgdHdpY2U6IG9uY2Ugd2hlblxuICBidXlpbmcgZnJvbSB0aGUgZ3JpZCB0byBjaGFyZ2UgdGhlIGJhdHRlcnksIGFuZCBhZ2FpbiB3aGVuIGRpc2NoYXJnaW5nIHRoZSBzYW1lIGVuZXJneVxuICBmcm9tIHRoZSBiYXR0ZXJ5IGZvciB1c2UgYnkgdGhlIGhvdXNlLiBGb3IgZXhhbXBsZSwgaWYgSSB0YWtlIGFuIGV4YW1wbGUgb2Ygc3BlbmRpbmdcbiAgNDBjIHRvIGNoYXJnZSB0aGUgYmF0dGVyeSB3aXRoIDJrV2ggYXQgbmlnaHQgYW5kIHRoZW4gdXNpbmcgdGhhdCAya1dIIHRoZSBuZXh0IGRheSBhdFxuICB0aGUgc2FtZSByYXRlIG9mIDIwYy9rV2gsIHRoZW5cbiAgICAtIFVzaW5nIGEgc2ltcGxlIG1vZGVsLCBJIHBheSA0MGMgdG8gZmlsbCB0aGUgYmF0dGVyeSwgYW5kIHRoZW4gcmVjb3ZlciA0MGMgaW4gXG4gICAgc2F2aW5ncyB3aGVuIEkgdXNlIHRoZSBncmlkIHBvd2VyLiBXaGljaCByZXN1bHRzIGluIGZyZWUgZWxlY3RyaWNpdHkuIFRvIGZpeCB0aGlzIFxuICAgIHNpbXBsZSBtb2RlbCByZXF1aXJlcyB0cmFja2luZyBib3RoIHNvbGFyIGFuZCBncmlkIGVuZXJneSBpbiB0aGUgYmF0dGVyeSAod2hpY2ggSSdtXG4gICAgdG9vIGxhenkgdG8gY29udGVtcGxhdGUpLCBvciBkb2luZyBzb21lIGNvbXBsaWNhdGVkIG1hdGggd2l0aCBzYXZpbmdzIHJhdGVzIChhZ2FpbixcbiAgICB0b28gbGF6eSkuXG4gICAgLSBVc2luZyB0aGUgbmV0IG9mIGdyaWQgbW9kZWwsIHRoZSBiYXR0ZXJ5IGluIGVmZmVjdCBwYXlzIDQwYyBmb3IgdGhlIGdyaWQgY2hhcmdlIFxuICAgIGVuZXJneSBhbmQgdGhlbiByZWNvdmVycyB0aGF0IDQwYyB3aGVuIGl0IGRpc2NoYXJnZXMgdGhlIGVuZXJneSwgcmVzdWx0aW5nIGluIHplcm9cbiAgICBzYXZpbmcgYXNzb2NpYXRlZCB3aXRoIHRoZSBncmlkIGVuZXJneSBpbiBhbmQgb3V0IG9mIHRoZSBwb3dlcndhbGwgYW5kIHRoZSBjb3JyZWN0XG4gICAgY2hhcmdlIG9mIDQwYyBmb3IgdGhlIG9yaWdpbmFsIHN1cHBseSBvZiBncmlkIHBvd2VyIChtb3JlIG9yIGxlc3MgaG93IHdlJ2QgbGlrZSB0aGVcbiAgICBtYXRoIHRvIHdvcmspLlxuICAtIFNlY29uZGx5LCBhbmQgbW9yZSBpbXBvcnRhbnRseSwgaXQgYXV0b21hdGljYWxseSBoYW5kbGVzIGdyaWQgc3VwcGx5IGF0IG9uZSB0YXJpZmZcbiAgYW5kIGRpc2NoYXJnZSBhdCBhbm90aGVyLiBGb3IgZXhhbXBsZSwgaWYgd2UgY2hhcmdlIHRoZSBiYXR0ZXJ5IHdpdGggMmtXaCBhdCBhbiBvZmYgXG4gIHBlYWsgdGFyaWZmIG9mIDIwYyBhbmQgb3VyIHBlYWsgdGFyaWZmIGlzIDMwYywgdGhlbjpcbiAgICAtIFdlIHBheSA0MGMgZm9yIHRoZSBncmlkIHN1cHBseS5cbiAgICAtIFRoZSBiYXR0ZXJ5IGhhcyBhIHNhdmluZ3MgcmVkdWN0aW9uIG9mIDQwYyBhdCB0aGUgdGltZSBvZiBzdXBwbHkuIFxuICAgIC0gSWYgd2UgdXNlIHRoZSBlbmVyZ3kgYXQgb2ZmIHBlYWsgdGltZSwgdGhlIGJhdHRlcnkgZ2VuZXJhdGVzIHNhdmluZ3Mgb2YgNDBjIChuZXRcbiAgICAwYykuXG4gICAgLSBCdXQsIGlmIHdlIHVzZSB0aGUgZW5lcmd5IGF0IHBlYWsgdGltZSwgdGhlIGJhdHRlcnkgZ2VuZXJhdGVzIGEgc2F2aW5ncyBvZiA2MGMgXG4gICAgKG5ldCAyMGMpLiBUaGlzIGVmZmVjdCB3b3VsZCByZXZlcnNlIGZvciBjaGFyZ2luZyBvbiBwZWFrIChuZXQgc2F2aW5ncyByZWR1Y3Rpb24gb2ZcbiAgICAyMGMpLlxuICBcbkFzIGNhbiBiZSBzZWVuIGZyb20gdGhpcywgdGhlIG5ldCBvZiBncmlkIGNoYXJnaW5nIGFwcHJvYWNoIHByb3ZpZGVzIGEgcmVsYXRpdmVseSBcbmVsZWdhbnQgKGlmIG5vdCBwZXJmZWN0bHkgYWNjdXJhdGUpIG1ldGhvZCBmb3IgYWNjb3VudGluZyBmb3IgZ3JpZCBzdXBwbHkgYXJiaXRyYWdlIFxudXNpbmcgdGhlIGJhdHRlcnkuXG5cblRoZSBtYWluIGRpc2FkdmFudGFnZSBvZiB0aGlzIGFwcHJvYWNoIGlzIHRoYXQgaXQgZG9lc24ndCBhY2NvdW50IGNvcnJlY3RseSBmb3Igcm91bmRcbnRyaXAgZWZmaWNpZW5jeSBvbiB0aGUgZ3JpZCBlbmVyZ3kuIEJ1dCB0byBkbyB0aGlzLCB3ZSdkIG5lZWQgdG8gYnVpbGQgYW4gYWdlbnQgdGhhdCBcbnRyYWNrcyBzdXBwbHkgYW5kIGRpc2NoYXJnZSBmcm9tIHNvbGFyIGFuZCBncmlkIGFuZCBkbyBhIGNvbnRpbnVvdXMgYWxsb2NhdGlvblxuY2FsY3VsYXRpb24gYXMgdG8gd2hpY2ggc3VwcGx5IGlzIGdvaW5nIHZpYSB0aGUgcG93ZXJ3YWxsIHRvIHRoZSBob21lLiBUaGlzIHByb2JsZW1cbnByb21wdGx5IHdlbnQgaW50byBteSBcblwidGhpcy1pcy10b28taGFyZC1hbmQtdGhlLWN1cnJlbnQtYXBwcm94aW1hdGlvbi1pcy1nb29kLWVub3VnaFwiIGJhc2tldC5cblxuSWYgeW91IGRvbid0IGxpa2UgdGhpcyBhcHByb2FjaCwgeW91IGNhbiB1c2UgYFBXX1RPX0hPTUVgIGluc3RlYWQuIEJ1dCBub3RlIHRoYXQgeW91XG53aWxsIG5lZWQgdG8gYWRqdXN0IHlvdXIgc2F2aW5ncyByYXRlIHRvIG1hbmFnZSB0aGUgZG91YmxlIGRpcHBpbmcgZWZmZWN0IGFib3ZlLCBhbmQgaXQgXG5kb2Vzbid0IGFkZHJlc3MgdGhlIGlzc3VlIG9mIGNoYXJnaW5nIGF0IG9uZSB0YXJpZmYgYW5kIGRpc2NoYXJnaW5nIGF0IGFub3RoZXIuIEEgZmluYWxcbmFsdGVybmF0aXZlIGlzIHRvIGltcGxlbWVudCBhIGJldHRlciB1c2FnZSBhZ2VudCB5b3Vyc2VsZiAob2ZmZXJzIHdlbGNvbWVkISkuXG5cbiMjIE90aGVyIHVzYWdlIGFnZW50c1xuXG5SaWdodCBub3csIEkgaGF2ZSBvbmx5IGltcGxlbWVudGVkIHRoZSBzaW1wbGUgdXNhZ2UgYWdlbnQgZGV0YWlsZWQgaW4gdGhlIHByZXZpb3VzIFxuc2VjdGlvbi4gSG93ZXZlciwgdGhlIHN5c3RlbSBwcm92aWRlcyBob29rcyBmb3IgZXh0ZW5zaW9uIHdpdGggYWRkaXRpb25hbCB1c2FnZSBhZ2VudHMuIFxuSWYgeW91IGtub3cgeW91ciB3YXkgYXJvdW5kIHB5dGhvbiwgeW91IGNhbiBmb2xsb3cgdGhlIHN0cnVjdHVyZSBvZiBgc2ltcGxlX2FnZW50LnB5YCB0b1xuYnVpbGQgeW91ciBvd24gYWdlbnQgKGlmIG5vdCwgbGV0IG1lIGtub3cgdmlhIGFuIGlzc3VlIGFuZCBJJ2xsIHNlZSBpZiBJIGNhbiBoZWxwIGJ1aWx0XG5hbiBhZ2VudCBmb3IgeW91ciB1c2UgY2FzZSkuXG5cbiMgR3JhZmFuYSBzZXR1cFxuXG5UaGlzIHNlY3Rpb24gYXNzdW1lcyB5b3UgaGF2ZSBhbHJlYWR5IGdvdCBhIFxuW2RvY2tlcl0oI2FkZC1wd2R1c2FnZS10by1wb3dlcndhbGwtZGFzaGJvYXJkKSBvciBbc3RhbmQgYWxvbmVdKCNpbnN0YWxsYXRpb24tZm9yLWRldmVsb3BtZW50dGVzdGluZykgYHB3ZHVzYWdlYCBzZXJ2ZXIgdXAgYW5kIHJ1bm5pbmcsIGFuZCB5b3Uga25vdyBcbnRoZSBob3N0bmFtZS9ob3N0IGFkZHJlc3MgYW5kIHBvcnQgZm9yIHRoZSBzZXJ2ZXIuXG5cbiMjIEpTT04gZGF0YXNvdXJjZVxuXG5Gcm9tIHRoZSBnZW5lcmFsIGdyYWZhbmEgY29uZmlndXJhdGlvbiAoY29nIHdoZWVsIGljb24sIGJvdHRvbSBsZWZ0KTpcblxuLSBTZWxlY3QgYERhdGEgc291cmNlc2AuXG4tIENsaWNrIGBBZGQgZGF0YSBzb3VyY2VgIGFuZCBhZGQgYSBKU09OIGRhdGEgc291cmNlLlxuLSBHaXZlIGl0IGEgbmFtZSAtIHRoZSBleGFtcGxlIGRhc2ggYm9hcmQgdXNlcyBgSlNPTiBVc2FnZWAuIFxuLSBTZXQgdGhlIFVSTCB0bzogYGh0dHA6Ly88aG9zdG5hbWU+Ojxwb3J0Pi91c2FnZV9lbmdpbmVgLiBUaGUgZGVmYXVsdCB1c2FnZSBlbmdpbmUgcG9ydFxuaXMgOTA1MCwgYnV0IHlvdSBjYW4gb3ZlcnJpZGUgdGhpcyB2aWEgdGhlIGRvY2tlciBgLnltbGAgY29uZmlndXJhdGlvbiBvciB2aWEgXG5gVVNBR0VfUE9SVGAgZm9yIGEgc3RhbmQgYWxvbmUgc2VydmVyLlxuXG4gICFbaW1hZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvYXNzZXRzLzQ4MjY0MzU4LzJiZmUxMDYyLWI3YjEtNDBhNC04ODcwLTMyY2E0NzRhOTQyMSlcblxuLSBIaXQgXCJTYXZlIGFuZCBUZXN0XCIuIFlvdSBzaG91bGQgc2VlIHR3byBncmVlbiB0aWNrIG1lc3NhZ2VzIFwiRGF0YXNvdXJjZSB1cGRhdGVkXCIgYW5kIFxuXCJEYXRhIHNvdXJjZSBpcyB3b3JraW5nXCIuIFxuXG4jIyMgRGF0YXNvdXJjZSB0cm91Ymxlc2hvb3RpbmdcblxuSWYgdGhlIHVzYWdlIGVuZ2luZSBzZXJ2aWNlIGhhcyBub3Qgc3RhcnRlZCBwcm9wZXJseSwgdGhlIHNlY29uZCBtZXNzYWdlIHdpbGwgc2hvdyBhIFxuZ3JlZW4gXCJUZXN0aW5nIC4uLlwiIGZvciBhIHdoaWxlLCBmb2xsb3dlZCBieSBhIHJlZC9waW5rIFwiR2F0ZXdheSBUaW1lb3V0XCIuXG5cbklmIHRoZSBkYXRhc291cmNlIHVybCBpcyBpbmNvcnJlY3QsIHRoZSBzZWNvbmQgbWVzc2FnZSB3aWxsIHJlYWQ6IFwiTm90IEZvdW5kXCIuIFxuXG5JZiB0aGUgc2VydmVyIGhhcyBzdGFydGVkIGFuZCB0aGUgdXJsIGlzIGNvcnJlY3QsIGJ1dCB0aGVyZSBpcyBwcm9ibGVtIHdpdGggdGhlIHVzYWdlXG5lbmdpbmUgY29uZmlndXJhdGlvbiwgdGhlIHNlY29uZCBtZXNzYWdlIHdpbGwgcmVhZDogXCJzdGF0dXMgY29kZSA1OTlcIi4gSW4gdGhpcyBjYXNlLFxudHJ5OlxuXG4tIFVzaW5nIGEgd2ViIGJyb3dzZXIgdG8gb3BlbiBgaHR0cDovLzxob3N0bmFtZT46PHBvcnQ+L3VzYWdlX2VuZ2luZWAuIFRoZSBwYWdlIG1heSBcbmdpdmUgc29tZSBoaW50cy5cbi0gQ2hlY2sgdGhlIHNlcnZlciBsb2cgKGlmIHlvdSBhcmUgcnVubmluZyBkb2NrZXIsIGNoZWNrIHRoZSBkb2NrZXIgbG9nKS5cbi0gSWYgbm9uZSBvZiB0aGlzIGhlbHBzLCByYWlzZSBhbiBpc3N1ZSBhdDogXG4gIGBodHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL3B3ZHVzYWdlL2lzc3Vlc2AuXG5cbiMjIEdyYWZhbmEgRGFzaGJvYXJkIHNldHVwXG5cblRoaXMgc2VjdGlvbiBvdXRsaW5lcyBzZXR0aW5nIHVwIGdyYWZhbmEgZGFzaGJvYXJkcyBiYXNlZCBvbiB1c2FnZSBxdWVyaWVzLiBJdCByZWZlcnMgdG9cbnRoZSBleGFtcGxlIGRhc2hib2FyZHMgaW4gdGhlIGB0b29scy91c2FnZS1zZXJ2aWNlYCBmb2xkZXIsIGFuZCB0aGVzZSBhbHNvIHByb3ZpZGVcbnVzZWZ1bCBzdGFydGluZyBwb2ludHMgZm9yIGRldmVsb3BpbmcgeW91ciBvd24gZGFzaGJvYXJkLiBUaGUgc2FtcGxlIGRhc2hib2FyZHMgYXJlOiBcbi0gQSB1c2FnZSBkZXRhaWwgZGFzaGJvYXJkICh0aGUgaW1hZ2UgYXQgdGhlIHRvcCBvZiB0aGlzIFJFQURNRSksIHdoaWNoIHVzZXNcbmhvdXJseSBkYXRhIGdlbmVyYXRlZCBmcm9tIHRoZSBleGFtcGxlIGB1c2FnZS5qc29uYC5cbi0gVHdvIHZlcnNpb25zIG9mIG9mIGEgc3VtbWFyeSBzdGF0aXN0aWNzIGRhc2hib2FyZCwgd2hpY2ggdXNlIHRoZSBgc3VtbWFyeWAgcGF5bG9hZCBcbmVudHJ5LiBUaGUgW3BlcmZvcm1hbmNlIHNpZGViYXJdKCNwZXJmb3JtYW5jZS1zaWRlYmFyKSBiZWxvdyBleHBsYWlucyB0aGUgZGlmZmVyZW5jZVxuYmV0d2VlbiB0aGUgdmVyc2lvbnMsIGFuZCB0aGUgW0pTT04gcGF5bG9hZF0oI2pzb24tcGF5bG9hZCkgc2VjdGlvbiBkZXRhaWxzIHBheWxvYWRcbm9wdGlvbnMuIFRoZSB2MSBvdXRwdXQgaXMgc2hvd24gaW4gdGhlIGZvbGxvd2luZyBpbWFnZSBhbmQgaXMgc2ltaWxhciB0byB0aGF0IHByZXNlbnRlZFxuaW4gdGhlIGRldGFpbGVkIGRhc2hib2FyZC4gXG5cbiFbVXNhZ2UgbXRkXShodHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL3B3ZHVzYWdlL2Fzc2V0cy80ODI2NDM1OC9lMzQ0ZWMzMS1hZmVhLTQwMjctOWE3My00ZDkzNzU2YWNlYjQpXG5cblRoZSBgdXNhZ2Utc2VydmljZWAgZm9sZGVyIGFsc28gaW5jbHVkZXMgYW4gZXhhbXBsZSBkcm9wIGluIHJlcGxhY2VtZW50IHBhbmVsIGZvciB0aGVcbm1haW4gZGFzaGJvYXJkIHNhdmluZ3MgcGFuZWwgLSBidWlsdCBhcm91bmQgYHN1bW1hcnlgIGFuZCBgbW9udGhfdG9fZGF0ZWAgcmVwb3J0aW5nXG4odmlhIFtKU09OIHBheWxvYWRdKCNqc29uLXBheWxvYWQpKSBhbmQgdGhlIHNhbXBsZSBgdXNhZ2UuanNvbmAgKHlvdSdsbCBuZWVkIHRvIHR3ZWFrIGl0XG50byBtYXRjaCB5b3VyIHV0aWxpdHkpLiBUaGlzIHBhbmVsIGxvYWRzIGEgbGl0dGxlIHNsb3dlciB0aGFuIG1vc3Qgb2YgdGhlIGRhc2hib2FyZFxuZWxlbWVudHMsIGJ1dCBzdGlsbCBtdWNoIGZhc3RlciB0aGFuIHRoZSBUZXNsYSBwb3dlciBmbG93IGFuaW1hdGlvbi4gXG5cbiFbU2F2aW5ncyBwYW5lbF0oaHR0cHM6Ly9naXRodWIuY29tL0J1b25naW9ybm9UZXhhcy9wd2R1c2FnZS9hc3NldHMvNDgyNjQzNTgvM2M4OWU3MTEtYjc3NS00MTM5LWJhOWItMTFiMTdlMjIyZGU2KVxuXG5Ob3RlIDE6IEkgaGF2ZSBub3Qgc3BlbnQgbXVjaCB0aW1lIG9uIGNvbG9ycyBvciBsYXlvdXQsIGFzIGVhY2ggdXNlciB3aWxsIG5lZWRcbnRvIGN1c3RvbWlzZSB0aGVzZSByZXBvcnRzIHRvIG1hdGNoIHRoZWlyIHV0aWxpdHkgYW5kIHRoZWlyIG93biByZXBvcnRpbmcgbmVlZHMuIChJIGtub3cgXG5JJ3ZlIHN0aWxsIGdvdCBhIGJpdCBvZiB3b3JrIHRvIGRvIG9uIG15IG93biEpIEhvd2V2ZXIsIHRoZSBleGFtcGxlIGRhc2hib2FyZHMgZG9cbnByb3ZpZGUgYSByZWFzb25hYmxlIGlkZWEgb2Ygd2hhdCB5b3UgY2FuIGRvIHdpdGggdGhlIHVzYWdlIGRhdGEgYW5kIGhvdyB5b3UgY2FuXG5tYW5pcHVsYXRlIGl0LlxuXG5Ob3RlIDI6IEJvdGggdGhlIGRldGFpbCB1c2FnZSBhbmQgdjEgc3VtbWFyeSBkYXNoYm9hcmRzIGNhbiBiZSBzbG93IHRvIGxvYWQgcmVnYXJkbGVzc1xub2YgcmVwb3J0aW5nIHRpbWUgaW50ZXJ2YWwgLSByZWZlciB0byB0aGUgW3BlcmZvcm1hbmNlIHNpZGViYXJdKCNwZXJmb3JtYW5jZS1zaWRlYmFyKVxuZm9yIHJlYXNvbnMgYW5kIG1ldGhvZHMgdG8gYWRkcmVzcyB0aGlzIGlzc3VlLiBUaGUgdjIgc3VtbWFyeSBkYXNoYm9hcmQgYW5kIHNhdmluZ3NcbnBhbmVsIGFyZSBxdWljayB0byBsb2FkIGZvciBzaG9ydGVyIHRpbWUgaW50ZXJ2YWxzICg8IDFtb250aCksIGJ1dCBsaWtlIG90aGVyIGdyYWZhbmFcbnF1ZXJpZXMsIHRoZXNlIHdpbGwgc2xvdyBkb3duIGZvciBsb25nZXIgaW50ZXJ2YWxzLlxuXG5UaGUgbWFpbiB0aGluZyB0byBiZSBhd2FyZSBvZiB3aGVuIHNldHRpbmcgdXAgYSB1c2FnZSBkYXNoYm9hcmQgaXMgdGhhdCB0aGUgdXNhZ2UgXG5kYXRhc291cmNlIHBlcmZvcm1zIGEgc2V0IG9mIGNvbXB1dGF0aW9uYWxseSBleHBlbnNpdmUgKGkuZS4gc2xvdykgY2FsY3VsYXRpb25zIGFuZCB0aGVuXG5yZXR1cm5zICoqYWxsKiogdGltZSBvZiB1c2UgZGF0YSBpbiBhICoqc2luZ2xlIHRhYmxlKiouIEJlY2F1c2Ugb2YgdGhpcywgYW5kIGFzIFxuZGlzY3Vzc2VkIGluIHRoZSBbcGVyZm9ybWFuY2Ugc2lkZSBiYXJdKCNwZXJmb3JtYW5jZS1zaWRlYmFyKSwgeW91IHNob3VsZCBjYWxsIHRoZSB1c2FnZSBkYXRhc291cmNlIGluIG9ubHkgb25lIGhlcm8gcGFuZWwgcGVyIGRhc2hib2FyZC4gSWYgeW91IHdhbnQgdG8gdXNlIHRoZSBzYW1lIHVzYWdlIFxuZGF0YSBpbiBhbnkgb3RoZXIgcGFuZWxzIG9uIGEgZGFzaGJvYXJkLCB5b3Ugc2hvdWxkIHRoZW4gKipkdXBsaWNhdGUqKiB0aGlzIGRhdGEgdXNpbmdcbnRoZSBpbnRlcm5hbCBncmFmYW5hIGAtLSBEYXNoYm9hcmQgLS1gIGRhdGFzb3VyY2UuIEZpbmFsbHksIGJlY2F1c2UgdGhlIHVzYWdlXG5kYXRhc291cmNlIHJldHVybnMgYWxsIG9mIHRoZSBkYXRhLCB5b3Ugd2lsbCBuZWVkIHRvIGFwcGx5IGZpbHRlciB0cmFuc2Zvcm1zIGluIGVhY2hcbnVzYWdlIHBhbmVsIHRvIGdldCB0aGUgZGF0YSB0aGF0IHlvdSB3YW50IHRvIHByZXNlbnQgKGFuZCBkaXNjYXJkIHRoZSBkYXRhIHlvdSBkb24ndFxud2FudCkgLSB0aGlzIHByb2Nlc3MgaXMgb3V0bGluZWQgYmVsb3cuXG5cblRoZSBwcm9jZXNzIGZvciBzZXR0aW5nIHVwIHVzYWdlIHBhbmVscyBpbiBhIGRhc2hib2FyZCBpczpcbi0gQ2hvb3NlIGEgKipoZXJvKiogcGFuZWwgd2hpY2ggeW91IHdpbGwgdXNlIGFzIHlvdXIgbWFpbiB1c2FnZSBkYXRhIHNvdXJjZS4gSW5cbnRoZSBcIlVzYWdlIERldGFpbFwiIGV4YW1wbGUgZGFzaGJvYXJkLCB0aGUgXCJHcmlkIEltcG9ydFwiIHBhbmVsIGlzIHRoZSBoZXJvIHBhbmVsLiBTZXRcbnRoZSBEYXRhIHNvdXJjZSB0byBtYXRjaCB5b3VyIEpTT04gcHdkdXNhZ2UgZGF0YSBzb3VyY2UgKFwiSlNPTiBVc2FnZVwiIGluIHRoZSBleGFtcGxlcylcbmFuZCBzZXQgdGhlIG1ldHJpYyB0byBcIlVzYWdlXCIuXG4gIFxuICAhW0RhdGFzb3VyY2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvYXNzZXRzLzQ4MjY0MzU4LzMyN2M2ZjM2LWUwYmQtNGE5Yy05YzY1LTdiODEwNDM3OWRlZSlcblxuLSBGb3IgYWxsIG90aGVyIHVzYWdlIHBhbmVscyBpbiB0aGUgZGFzaGJvYXJkLCBzZXQgdGhlIGRhdGEgc291cmNlIHRvIFwiLS0gRGFzaGJvYXJkIC0tXCJcbmFuZCBzZXQgdGhlICpVc2UgcmVzdWx0cyBmcm9tIHBhbmVsKiBmaWVsZCB0byB0aGUgbmFtZSBvZiB5b3VyIGhlcm8gcGFuZWwgKFwiR3JpZCBcbkltcG9ydFwiKS5cblxuICAhW0R1cGxpY2F0ZSBkYXRhIHNvdXJjZV0oaHR0cHM6Ly9naXRodWIuY29tL0J1b25naW9ybm9UZXhhcy9wd2R1c2FnZS9hc3NldHMvNDgyNjQzNTgvODQ5MjUzMWItNDU3Ny00YTZhLWE0ZjUtYzY4Y2VlODY0MjY3KSBcblxuLSBGb3IgZWFjaCB1c2FnZSBwYW5lbCwgYXBwbHkgYSBcIkZpbHRlciBieSBOYW1lXCIgdHJhbnNmb3JtIHRvIHNlbGVjdCB0aGUgdmFyaWFibGVzIHlvdVxud2FudCB0byBwcmVzZW50IGluIHRoZSBwYW5lbC4gWW91IGNhbiBlaXRoZXIgc2VsZWN0IHRoZSB2YXJpYWJsZXMgaW5kaXZpZHVhbGx5LCBvciB5b3VcbmNhbiB1c2UgYSByZWdleC4gRWl0aGVyIHdheSwgaWYgeW91IHdhbnQgdG8gcGxvdCBhZ2FpbnN0IHRpbWUsIHlvdSBtdXN0IHNlbGVjdCBcIl90aW1lXCJcbm9yIHlvdSB3aWxsIGdldCBcIk5vIGRhdGFcIiBlcnJvcnMgKGFzayBtZSBob3cgSSBrbm93IC4uLikuIEFuIGV4YW1wbGUgb2YgcmVnZXhwIHRoYXRcbnNlbGVjdHMgYWxsIGdyaWQgZXhwb3J0IHBvd2VyIGFuZCB0aW1lIGlzIFwiX3RpbWV8KEdyaWQgZXhwb3J0KS4qXFwoa1doXFwpXCIuXG5cbi0gVGhlIFwiQWRkIGZpZWxkIGZyb20gY2FsY3VsYXRpb25cIiB0cmFuc2Zvcm0gaXMgdXNlZnVsIGZvciBjcmVhdGluZyBzdWJ0b3RhbHMgYW5kIFxudG90YWxzLCBhbmQgdGhlIFwiT3JnYW5pc2UgZmllbGRzXCIgdHJhbnNmb3JtIGNhbiBiZSB1c2VmdWwgZm9yIGhpZGluZyBpbnRlcm1lZGlhdGVcbnZhbHVlcyBhbmQgYXJyYW5naW5nIGZpZWxkcy4gVG8gc2VlIGV4YW1wbGVzIG9mIHRoZXNlIHRyYW5zZm9ybXMsIGNoZWNrIHRoZSBcIlNlbGYgXG5Db25zdW1wdGlvbiBWYWx1ZVwiIHN1bW1hcnkgc3RhdCB0YWJsZSBpbiB0aGUgXCJVc2FnZSBEZXRhaWxcIiBleGFtcGxlIGRhc2hib2FyZC5cblxuIyMjIFBlcmZvcm1hbmNlIHNpZGViYXJcblxuVW5mb3J0dW5hdGVseSwgdGhlcmUgYXJlIHR3byBpbnRlcmFjdGluZyBwZXJmb3JtYW5jZSBpc3N1ZXMgdGhhdCBpbXBhY3QgZ3JhZmFuYSBcbnByZXNlbnRhdGlvbiBvZiB1c2FnZSBlbmdpbmUgZGF0YS4gRm9yIHJlZmVyZW5jZSwgdGhlIHBlcmZvcm1hbmNlIGJlbmNobWFya3MgaW4gdGhpcyBcbnNlY3Rpb24gYXJlIGZvciBhIDIwMTMgQ2VsZXJvbiBOVUMgd2l0aCAyR0IoPykgbWVtb3J5IGFuZCBhIFNBVEEgU1NELlxuXG4xKSBBIHVzYWdlIGVuZ2luZSBxdWVyeSBpcyBzbG93ZXIgdGhhbiBhIG5vcm1hbCBncmFmYW5hL2luZmx1eGRiIHF1ZXJ5LiBUaGlzIGlzIGJlY2F1c2Vcbml0IGluY2x1ZGVzIGEgc2V0IG9mIHRyYW5zZm9ybSBjYWxjdWxhdGlvbnMgdG8gZ2VuZXJhdGUgdGhlIHVzYWdlIGRhdGEgYW5kIGFub3RoZXJcbnNldCBvZiB0cmFuc2Zvcm1zIHRoYXQgY29udmVydCB0aGUgdXNhZ2UgZGF0YSB0byBhIEpTT04gZm9ybWF0IGZvciBleHBvcnQgdG8gZ3JhZmFuYS5cbldoaWxlIGl0IGlzIGRlZmluaXRlbHkgcG9zc2libGUgdG8gaW1wcm92ZSB0aGlzIHBlcmZvcm1hbmNlLCBpdCB3aWxsIGJlIGF0IHRoZSBjb3N0IG9mIFxubXVjaCBoYXJkZXIgZGV2ZWxvcG1lbnQgZWZmb3J0IC0gSSd2ZSBhY2NlcHRlZCB0aGUgcGVyZm9ybWFuY2UgaGl0IGFzIGFzIGNvbnNlcXVlbmNlXG5vZiBzaW1wbGVyIGRldmVsb3BtZW50IHVzaW5nIHBhbmRhcyB1bmRlciBweXRob24uXG5cbiAgICBUaGUgc3BlZWQgb2YgdXNhZ2UgZW5naW5lIHJlc3BvbnNlcyBpcyBub24taXNzdWUgZm9yIHNob3J0ZXIgdGltZSBpbnRlcnZhbHMgXG4gICg8IDEgbW9udGgpLCBidXQgYmVjb21lcyBzaWduaWZpY2FudCBhYm92ZSB0aGlzOiB+NnMgZm9yIDYgbW9udGhzLCAxNHMgZm9yIDEwIG1vbnRocy5cbiAgVGhpcyBpcyBzbG93ZXIgdGhhbiBvdGhlciBQb3dlcndhbGwtRGFzaGJvYXJkIHF1ZXJpZXMsIGJ1dCBzdGlsbCBhY2NlcHRhYmxlIGZvciBtb3N0IHVzZXMuIFxuXG4gICAgSG93ZXZlciEgR3JhZmFuYSB1c2FnZSBwYW5lbHMgd2lsbCB0aW1lb3V0IGlmIGEgZGFzaGJvYXJkIGluY2x1ZGVzIHR3byB1c2FnZSBxdWVyaWVzXG53aXRoIGxvbmcgKDYrIG1vbnRocylpbnRlcnZhbHMuIFxuXG4gICAgVG8gYXZvaWQgdGhlIHRpbWVvdXQgcHJvYmxlbSBmb3IgbG9uZyBpbnRlcnZhbCBxdWVyaWVzLCBJIHJlY29tbWVuZCB1c2luZyBvbmx5IG9uZVxudXNhZ2UgcXVlcnkgcGVyIGRhc2hib2FyZCwgYW5kIHRoZW4gZHVwbGljYXRpbmcgdGhlIHF1ZXJ5IHZpYSB0aGUgZ3JhZmFuYSBEYXNoYm9hcmQgZGF0YVxuc291cmNlLiBUaGlzIHByb2Nlc3MgaXMgZGV0YWlsZWQgaW4gdGhlIHByZXZpb3VzIHNlY3Rpb24uIFxuXG4yKSBUaGUgc2Vjb25kIHBlcmZvcm1hbmNlIHByb2JsZW0gYXJpc2VzIGlmIHdlIHdhbnQgdG8gdXNlIGEgbG90IG9mIHVzYWdlIHBhbmVscyBhbmQgd2VcbnVzZSB0aGUgZ3JhZmFuYSBEYXNoYm9hcmQgZGF0YSBzb3VyY2UgKGUuZy4gdGhlIGV4YW1wbGUgZGV0YWlsIGRhc2hib2FyZCBhbmQgdGhlIHYxXG5zdW1tYXJ5IGRhc2hib2FyZCkuIEluIHRoaXMgc2l0dWF0aW9uLCB0aGUgZGFzaGJvYXJkIGxvYWRzIHNsb3dseSBmb3IgYWxsIHRpbWUgaW50ZXJ2YWxzXG4odGhlIGZpcnN0IGxvYWQgY2FuIGJlIHZlcnkgc2xvdykuIEJ1dCwgdGhleSBkbyBsb2FkIVxuXG5UaGVyZSBhcmUgdHdvIHBvc3NpYmxlIGFwcHJvYWNoZXMgdG8gYWRkcmVzc2luZyB0aGUgcGVyZm9ybWFuY2UgcHJvYmxlbXM6XG5cbi0gSWYgeW91IG5lZWQgbXVsdGlwbGUgcGFuZWxzIGZvciBjb21wbGV4IHZpZXdzIG9uIHRoZSBkYXRhIChlLmcuIHRoZSBkZXRhaWxlZFxudXNhZ2UgZGFzaGJvYXJkKSwgeW91IHdpbGwgaGF2ZSB0byBhY2NlcHQgdGhlIHNsb3cgbG9hZCB0aW1lcy5cblxuLSBJZiB0aGUgZGF0YSB5b3Ugd2FudCB0byBwcmVzZW50IGlzIHNpbXBsZXIsIHlvdSBtYXkgYmUgYWJsZSB0byByZXdvcmsgeW91ciBkYXNoYm9hcmRcbnRvIHVzZSBmZXdlciB1c2FnZSBwYW5lbHMuIFRoaXMgaXMgdGhlIGFwcHJvYWNoIHRha2VuIGluIHRoZSB2MiBzdW1tYXJ5IGRhc2hib2FyZCwgd2hpY2hcbnJlcGxhY2VzIHRoZSA3IHBhbmVscyBpbiB0aGUgdjEgZGFzaGJvYXJkIHdpdGggMiBwYW5lbHMgLSBhbGJlaXQgYXQgdGhlIGNvc3Qgb2Ygc29tZVxucmVhZGFiaWxpdHkuXG5cbkluIHN1bW1hcnksIHJlZ2FyZGxlc3Mgb2YgdGhlIGFwcHJvYWNoIGFkb3B0ZWQsIHlvdSBzaG91bGQgb25seSB1c2Ugb25lIHVzYWdlIGVuZ2luZSBcbnF1ZXJ5IHBlciBkYXNoYm9hcmQgYW5kIGR1cGxpY2F0ZSBkYXRhIHRvIG90aGVyIHBhbmVscyB2aWEgZ3JhZmFuYSBEYXNoYm9hcmQgZGF0YVxuc291cmNlcy4gSWYgeW91IGRvbid0IHlvdSBtYXkgcnVuIGludG8gcGFuZWwgdGltZW91dHMuXG5cbiMjIEpTT04gcGF5bG9hZFxuXG5UaGUgdXNhZ2UgZGF0YXNvdXJjZSBzdXBwb3J0cyBhIGBwYXlsb2FkYCBkaWN0aW9uYXJ5LCB3aGljaCBjYW4gYmUgc3BlY2lmaWVkIGluIHRoZSBcbmdyYWZhbmEgcXVlcnkgY29uZmlndXJhdGlvbiwgYXMgc2hvd24gaW4gdGhlIGZvbGxvd2luZyBpbWFnZS5cblxuIVtKU09OIFBheWxvYWRdKGh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvYXNzZXRzLzQ4MjY0MzU4LzRiZjRkMmVlLTU1NzUtNGRiYy04N2I0LWI2YzlkYjdiNzU5NylcblxuVGhlIHN1cHBvcnRlZCBwYXlsb2FkIGVudHJpZXMgYXJlOlxuXG5gYGBcbntcbiAgXCJzdW1tYXJ5XCI6IFt0cnVlIHwgZmFsc2VdLCBcbiAgXCJtb250aF90b19kYXRlXCI6IFt0cnVlIHwgZmFsc2VdLCBcbiAgXCJ5ZWFyX3RvX2RhdGVcIjogW3RydWUgfCBmYWxzZV0sIFxuICBcInJlc2FtcGxlXCI6IFt0cnVlIHwgZmFsc2VdIFxufVxuYGBgXG4xKSBOb3RlIHRoYXQgYHRydWVgIGFuZCBgZmFsc2VgIGFyZSBib3RoIHVuY2FwaXRhbGlzZWQgYW5kIHVucXVvdGVkLlxuXG4yKSBJZiBgc3VtbWFyeWAgaXMgYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgdmFsdWVzIGZvciBlYWNoIHZhcmlhYmxlIG92ZXIgdGhlIFxucmVwb3J0aW5nIHJhbmdlIGFyZSBzdW1tZWQgdG8gZ2l2ZSB0b3RhbCBwb3dlciBhbmQgdG90YWwgY29zdHMsIGFuZCB0aGUgcmVzdWx0aW5nIHRvdGFsc1xuYXJlIHJldHVybmVkIChwZXIgaW50ZXJ2YWwgdmFsdWVzIGFyZSBub3QgcmVwb3J0ZWQvZGlzY2FyZGVkKS4gTm90ZSB0aGF0IHRyYW5zZm9ybXNcbmNhbiBiZSB1c2VkIGluIGdyYWZhbmEgdG8gZ2V0IHRoZSBzYW1lIHJlc3VsdCBpZiB5b3Ugd2FudCB0byB3b3JrIHdpdGggYm90aCB0aW1lIHNlcmllc1xuYW5kIHN1bW1hcnkgdmFsdWVzICh1c2UgYGZhbHNlYCBpbiB0aGlzIGNhc2UpLiBcblxuMykgU2V0dGluZyBgbW9udGhfdG9fZGF0ZWAgdG8gYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgcmVwb3J0IHRpbWUgcmFuZ2UgaXMgXG5yZXBsYWNlZCB3aXRoIHRoZSBjdXJyZW50IGNhbGVuZGFyIG1vbnRoICh1dGlsaXR5IGZvciBkYXNoYm9hcmQgcmVwb3J0aW5nKS4gQm90aCBcbmBzdW1tYXJ5YCBhbmQgYHJlc2FtcGxlYCBhcHBseSBub3JtYWxseS4gXG5cbjQpIFNldHRpbmcgYHllYXJfdG9fZGF0ZWAgdG8gYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgcmVwb3J0IHRpbWUgcmFuZ2UgaXMgXG5yZXBsYWNlZCB3aXRoIHRoZSBjdXJyZW50IHllYXIgYmFzZWQgb24gdGhlIGB5ZWFyX2FuY2hvcmAgc2V0dGluZyAodXRpbGl0eSBmb3IgZGFzaGJvYXJkXG5yZXBvcnRpbmcpLiBCb3RoIGBzdW1tYXJ5YCBhbmQgYHJlc2FtcGxlYCBhcHBseSBub3JtYWxseS4gSWYgYG1vbnRoX3RvX2RhdGVgIGFuZCBcbmB5ZWFyX3RvX2RhdGVgIGFyZSBib3RoIHRydWUsIGB5ZWFyX3RvX2RhdGVgIHRha2VzIHByaW9yaXR5IGFuZCBpcyByZXBvcnRlZC5cblxuNSkgSWYgYHJlc2FtcGxlYCBpcyBgdHJ1ZWAgKGRlZmF1bHQpLCB0aGUgdXNhZ2UgZGF0YSBpcyByZXNhbXBsZWRcbiAgIGFjY29yZGluZyB0byB0aGUgZm9sbG93aW5nIHJ1bGVzOiBcblxuICAgIHwgUXVlcnkgdGltZSByYW5nZSB8IFJlc2FtcGxpbmcgfFxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tfFxuICAgIHwgV2l0aGluIGEgc2luZ2xlIGRheSAgICB8IEhvdXJseSAgICAgfFxuICAgIHwgV2l0aGluIGEgc2luZ2xlIG1vbnRoICB8IFdlZWtseSAgICAgfFxuICAgIHwgV2l0aGluIGEgc2luZ2xlIHllYXIgICB8IE1vbnRobHkgICAgfFxuICAgIHwgTGFyZ2VyIGludGVydmFscyAgICAgICB8IFllYXJseSAgICAgfFxuXG4gICAgSW4gdGhpcyBjb250ZXh0IHdpdGhpbiBhIHNpbmdsZSBkYXkgbWVhbnMgdGhlIHF1ZXJ5IGludGVydmFsIGlzIGZvciBvbmUgY2FsZW5kYXIgZGF5XG4gICAgbWF4aW11bSwgYW5kIHNvIG9uIGZvciB0aGUgb3RoZXIgaW50ZXJ2YWxzLiBJZiByZXNhbXBsZSBpcyBzZXQgdG8gZmFsc2UsIHRoZSBkYXRhIGlzIFxuICAgIG5vdCByZXNhbXBsZWQgYW5kIG91dHB1dCBpcyByZXR1cm5lZCBhdCB0aGUgcmF3IGluZmx1eCBkYXRhYmFzZSBxdWVyeSBpbnRlcnZhbHMuIFxuXG4gICAgVGhlIGRlZmF1bHQgcmVzYW1wbGluZyBpcyBgdHJ1ZWAsIGFuZCB0aGlzIGNhbiBhbHNvIGJlIG92ZXItcmlkZGVuIGluIGB1c2FnZS5qc29uYC5cbiAgICBJZiBgc3VtbWFyeWAgaXMgYHRydWVgLCBgcmVzYW1wbGVgIGlzIGlnbm9yZWQuXG5cbiMgSW5zdGFsbGF0aW9uIGZvciBkZXZlbG9wbWVudC90ZXN0aW5nIFxuXG4jIyBUZXN0aW5nIHB3ZHVzYWdlXG5cbkFzIG9mIHZlcnNpb24gMC45LjQsIGBwd2R1c2FnZWAgaXMgYXZhaWxhYmxlIGFzIGEgcHlwaSBwYWNrYWdlLCBhbmQgaXQgYW5kIGl0cyBcbmRlcGVuZGVuY2llcyBjYW4gYmUgaW5zdGFsbGVkIHVzaW5nIHBpcC4gVGhpcyBpcyB0aGUgcmVjb21tZW5kZWQgbWV0aG9kIGlmIHlvdSB3YW50IHRvXG50ZXN0IHRoZSBzZXJ2aWNlIGFuZCBkb24ndCB3YW50IHRvIHNldCB1cCB0aGUgZG9ja2VyIGNvbnRhaW5lciBvciBkbyBhbnkgZGV2ZWxvcG1lbnQuXG5cbk9wdGlvbmFsLCBidXQgc3Ryb25nbHkgcmVjb21tZW5kZWQ6IHNldCB1cCBhIHB5dGhvbiB2aXJ0dWFsIGVudmlyb25tZW50IGZvciBpbnN0YWxsaW5nXG5hbmQgcnVubmluZyBgcHdkdXNhZ2VgIChwbGVhc2UgcmVmZXIgdG8gdGhlIHB5dGhvbiBkb2N1bWVudGF0aW9uIGZvciBkZXRhaWxzKS4gVG8gXG5pbnN0YWxsOlxuYGBgXG5waXAgaW5zdGFsbCBwd2R1c2FnZVxuYGBgXG5cbkFmdGVyIGluc3RhbGxhdGlvbiwgeW91IGNhbiBydW4gdGhlIHNlcnZlciB3aXRoOlxuYGBgXG5weSAtbSBwd2R1c2FnZS5zZXJ2ZXJcbmBgYFxuSWYgeW91IHdhbnQgdG8gZ2VuZXJhdGUgLmNzdiBkdW1wcyBmb3IgdGVzdGluZy9kZWJ1Z2dpbmcsIHRoZSBDTEkgaGVscCBpcyBhdmFpbGFibGVcbmZyb206XG5gYGBcbnB5IC1tIHB3ZHVzYWdlLmVuZ2luZSAtaFxuYGBgXG5cbiMjIERlYnVnZ2luZyBhbmQgRGV2ZWxvcG1lbnRcblxuSWYgeW91IGFyZSBkZWJ1Z2dpbmcgdGhlIGN1cnJlbnQgY29kZSBvciBkZXZlbG9waW5nIG5ldyB1c2FnZSBhZ2VudHMsIHRoaXMgc2VjdGlvbiBcbm91dGxpbmVzIG15IGFwcHJvYWNoIHRvIHNldHRpbmcgdXAgYSB0ZXN0L2RldmVsb3BtZW50IGVudmlyb25tZW50IChiYXNlZCBvbiBteSBmYWlybHlcbmxpbWl0ZWQgcHl0aG9uIGV4cGVyaWVuY2UgLSBpZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcsIHRoaXMgc2VjdGlvbiBjYW4gYmVcbmlnbm9yZWQpLlxuXG5UaGUgbWFpbiBzdGVwcyBhcmU6XG5cbi0gWW91IHdpbGwgbmVlZCB0byBiZSBydW5uaW5nIHB5dGhvbiAzLjExIG9yIGhpZ2hlci4gXG4tIEkgc3Ryb25nbHkgc3VnZ2VzdCB1c2luZyBhIHNlcGFyYXRlIHB5dGhvbiB2aXJ0dWFsIGVudmlyb25tZW50IGZvciBkZXZlbG9wbWVudC4gXG5cbiAgIGBweSAtbSB2ZW52IHVzYWdlX3Rlc3RgXG5cbi0gQWN0aXZhdGUgeW91ciBlbnZpcm9ubWVudCAocmVmZXIgcHl0aG9uIGRvY3MpIGFuZCBpbnN0YWxsIHNpbXBsZWpzb24sIGFuZCB0aGVcbmluZmx1eGRiIEZsdXggY2xpZW50IChJJ20gcnVubmluZyB3aXRob3V0IHRoZSBoaWdoIGVmZmljaWVuY3kgYyBpc28gODYwMSBsaWJyYXJ5IGZvciBcbm5vdykuIFRoZSBgW2V4dHJhXWAgYWxzbyBpbnN0YWxscyBudW1weSBhbmQgcGFuZGFzLiBcblxuICBgcGlwIGluc3RhbGwgc2ltcGxlanNvbmBcblxuICBgcGlwIGluc3RhbGwgaW5mbHV4ZGItY2xpZW50W2V4dHJhXWBcblxuLSBDbG9uZSBteSAoQEJ1b25naW9ybm9UZXhhcykgdXNhZ2UgZW5naW5lIHJlcG9zaXRvcnkgdG8gYSB3b3JraW5nIGRpcmVjdG9yeS4gXG5cbi0gVXNlIHBpcCB0byBjcmVhdGUgYW4gZWRpdGFibGUgaW5zdGFsbCBmcm9tIHRoZSB3b3JraW5nIGRpcmVjdG9yeTpcblxuICBgcGlwIGluc3RhbGwgLS1lZGl0YWJsZSAuYFxuXG4gIChXaGVuIHlvdSBhcmUgZG9uZSwgeW91IGNhbiB1bmluc3RhbGwgd2l0aCBgcGlwIHVuaW5zdGFsbCBwd2R1c2FnZWApXG5cbi0gQ29uZmlndXJlIHlvdXIgdXNhZ2UgcHJveHkgc2VydmVyLiBZb3UgY2FuIHNwZWNpZnkgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZvciB0aGVcbkpTT04gY29uZmlndXJhdGlvbiBmaWxlLCBzZXJ2ZXIgYmluZCBhZGRyZXNzLCBkZWJ1Z2dpbmcsIHNlcnZlciBwb3J0IGFuZCBIVFRQUyBtb2RlXG5bVE9ETyAtIGh0dHBzIGlzIG5vdCB3b3JraW5nIGF0IHRoZSBtb21lbnRdIChgVVNBR0VfSlNPTiwgVVNBR0VfQklORF9BRERSRVNTLFxuVVNBR0VfREVCVUcsIFVTQUdFX1BPUlQsIFVTQUdFX0hUVFBTYCkuIEZvciBleGFtcGxlLCBteSB2c2NvZGUgYGxhdW5jaC5qc29uYFxuc3BlY2lmaWVzIHBvcnQgOTA1MCAodGhlIGRlZmF1bHQpIGZvciB0aGUgdGVzdCBzZXJ2ZXIgYW5kIHRoZSBsb2NhdGlvbiBvZiB0aGVcbmNvbmZpZ3VyYXRpb24gZmlsZTogXG5gYGBcbntcbiAgICBcInZlcnNpb25cIjogXCIwLjIuMFwiLFxuICAgIFwiY29uZmlndXJhdGlvbnNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgICBcIm5hbWVcIjogXCJQeXRob246IEN1cnJlbnQgRmlsZVwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwicHl0aG9uXCIsXG4gICAgICAgICAgICBcInJlcXVlc3RcIjogXCJsYXVuY2hcIixcbiAgICAgICAgICAgIFwicHJvZ3JhbVwiOiBcIiR7ZmlsZX1cIixcbiAgICAgICAgICAgIFwiY29uc29sZVwiOiBcImludGVncmF0ZWRUZXJtaW5hbFwiLFxuICAgICAgICAgICAgXCJqdXN0TXlDb2RlXCI6IHRydWUsXG4gICAgICAgICAgICBcImVudlwiOiB7XG4gICAgICAgICAgICAgICAgXCJVU0FHRV9QT1JUXCI6IFwiOTA1MFwiLFxuICAgICAgICAgICAgICAgIFwiVVNBR0VfSlNPTlwiOiBcIkM6L3VzZXJzL3h4eHgveXl5L3VzYWdlLmpzb25cIlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXVxufVxuYGBgXG4tIEZvciBpbml0aWFsIHRlc3RpbmcsIGNyZWF0ZSBhIGB1c2FnZS5qc29uYCBjb25maWd1cmF0aW9uIGZpbGUgYXMgZGV0YWlsZWQgaW4gXG5bVGVzdCBEb2NrZXIgSW1hZ2VdKCN0ZXN0LWRvY2tlci1pbWFnZSkuXG4tIFNldCB0aGUgYFVTQUdFX0pTT05gIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIHBvaW50IGF0IHRoaXMgYHVzYWdlLmpzb25gLlxuLSBBdCB0aGlzIHBvaW50LCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gcnVuIHRoZSBzZXJ2ZXIgdXNpbmc6IFxuICBgYGBcbiAgcHkgLW0gcHdkdXNhZ2Uuc2VydmVyXG4gIGBgYFxuICBZb3Ugc2hvdWxkIHRoZW4gY2hlY2sgdGhhdCB0aGUgdXNhZ2Ugc2VydmVyIGlzIHJlc3BvbmRpbmcgYnkgcG9pbnRpbmcgYSB3ZWIgYnJvd3NlciBhdFxuICBgaHR0cDovL3NlcnZlci5hZGRyZXNzOjxwb3J0Pi91c2FnZV9lbmdpbmVgLiBcbi0gSWYgZXZlcnl0aGluZyBpcyBhcyBpdCBzaG91bGQgYmUsIHlvdSBzaG91bGQgc2VlIGEgcGFnZSBjb250YWluaW5nIHRoZSBtZXNzYWdlOlxuXG4gIGBgYFxuICBVc2FnZSBFbmdpbmUgU3RhdHVzXHRcIkVuZ2luZSBPSywgdGFyaWZmcyAocmUpbG9hZGVkXCJcbiAgYGBgXG5JZiB5b3UgZG9uJ3Qgc2VlIHRoaXMsIHBsZWFzZSBjaGVjayB0aGF0IGB1c2FnZS5qc29uYCBtYXRjaGVzIHRoZSBkZXNjcmlwdGlvbiBpbiBcbltUZXN0IERvY2tlciBJbWFnZV0oI3Rlc3QtZG9ja2VyLWltYWdlKS4gSWYgXG55b3Ugc3RpbGwgaGF2ZSBwcm9ibGVtcywgbGV0IHVzIGtub3cgb24gdGhlIGRldiBpc3N1ZSB0aHJlYWQgdG8gc2VlIGlmIHdlIGNhbiB0cm91YmxlIFxuc2hvb3QuXG5cbklmIHlvdSBkbyBnZXQgdGhlIGV4cGVjdGVkIHJlc3BvbnNlLCB5b3UgY2FuIG5vdyBtb2RpZnkgdGhlIGB1c2FnZS5qc29uYCBmaWxlIHRvXG5yZWZsZWN0IHlvdXIgb3duIHRhcmlmZiBzdHJ1Y3R1cmUgW2Bwd2R1c2FnZWAgQ29uZmlndXJhdGlvbl0oI3B3ZHVzYWdlLWNvbmZpZ3VyYXRpb24pLlxuXG5GaW5hbGx5LCB5b3UgY2FuIHJ1biB0aGUgZW5naW5lIGluIGNsaSBtb2RlIHRvIGdlbmVyYXRlIC5jc3YgZHVtcCBmaWxlcyBmb3IgZGVidWdnaW5nLlxuRm9yIHRoaXMsIHVzZSBgcHkgLW0gcHdkdXNhZ2UuZW5naW5lIFthcmd1bWVudHNdYCwgd2l0aCBoZWxwIGF2YWlsYWJsZSBmcm9tIFxuYHB5IHB3ZHVzYWdlLmVuZ2luZSAtaGAuXG4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInB3ZHVzYWdlIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvaXNzdWVzIiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2Ui
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvMS4wLjAvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImluZmx1eGRiLWNsaWVudFtleHRyYV0iLA==
ICAgICAgInNpbXBsZWpzb24i
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjExIiw=
ICAgICJzdW1tYXJ5IjogIlVzYWdlIChtYWlubHkgdGltZSBvZiB1c2UpIHByb3h5IG1pY3Jvc2VydmljZSBmb3IgUG93ZXJ3YWxsLURhc2hib2FyZC4iLA==
ICAgICJ2ZXJzaW9uIjogIjEuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODQ1NTQ3Niw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjkuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkY2Y4YzcwOTY0NzUwMTJmOWJlYmFlZTM3ZWM3YTY0NGViOTIxNmM3MzM2ZDQxMGMyNmNkOTQ3NGI3ZmY1YjJlIiw=
ICAgICAgICAgICJtZDUiOiAiYjFhYmM2NTVhM2YyOWQ0ZWU0OWZlODZlMmVjNGMzZWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2M3MjFmMDI1MTVkM2NhODA2N2IyZmUwYzdkY2NhNzBhM2IwNTA1MGRiODRiZmZjODc1ZWZiM2I4MGUxYTMyMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMC45LjQtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiMWFiYzY1NWEzZjI5ZDRlZTQ5ZmU4NmUyZWM0YzNlYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDM4NDAzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNVQwMTozOTo0MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNVQwMTozOTo0MS4yNzY3MDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kYy9mOC9jNzA5NjQ3NTAxMmY5YmViYWVlMzdlYzdhNjQ0ZWI5MjE2YzczMzZkNDEwYzI2Y2Q5NDc0YjdmZjViMmUvcHdkdXNhZ2UtMC45LjQtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyMmEzMDliMjNiOWNhMTg2YjZmZWVjNzM5YTQ3MjEwNDNlNWIwYjg1ZWY0Njg1YWNhZTU5NjQzNGNjNWFhNDEwIiw=
ICAgICAgICAgICJtZDUiOiAiODk3YTk4MDg2ZWVlMjBhMDJjNTA2NmFlZjg0OTg5MTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTU1OTU2YzZlZWQ2YjA2NzJiYTE2MTczYzM2ZTYwZmFiMmNmODkwYjk2ZGNmMGNjMDIyOGRkODJhYmM0Zjg4YSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMC45LjQudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4OTdhOTgwODZlZWUyMGEwMmM1MDY2YWVmODQ5ODkxMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDQ3MDk5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNVQwMTozOTo0MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNVQwMTozOTo0Mi45Nzg5MTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yMi9hMy8wOWIyM2I5Y2ExODZiNmZlZWM3MzlhNDcyMTA0M2U1YjBiODVlZjQ2ODVhY2FlNTk2NDM0Y2M1YWE0MTAvcHdkdXNhZ2UtMC45LjQudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhMzA2YTczNDAwNjdkYzcyYmMxNTM2NjBmNTY2ZDVmMWRiZTAwNWMzNzA3NTNmNDFhODZlODdiOWQ1YjU3YTFiIiw=
ICAgICAgICAgICJtZDUiOiAiZjc0ODU5ZjNiYjI1YjljNDQ1ZWIzMTE1ZDYxODI4NTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGM3YzliMWRhNmFlYjdkNGNlZTYwZGNmMGVkMzBmZjIzZDQyMzdkNDQ2NDhlMWI0ZmIxYmNkM2IxN2Q0YjE4NSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmNzQ4NTlmM2JiMjViOWM0NDVlYjMxMTVkNjE4Mjg1NyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDQyNDYyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0xMVQwMjo1NzowNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0xMVQwMjo1NzowNC4wNTc5MDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hMy8wNi9hNzM0MDA2N2RjNzJiYzE1MzY2MGY1NjZkNWYxZGJlMDA1YzM3MDc1M2Y0MWE4NmU4N2I5ZDViNTdhMWIvcHdkdXNhZ2UtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2ZTYwNGVmMGVkNDllNjQ5NGQxMmExOTA4OGEzNzRmNTcwNzE4NzJhNGM5OTI5YTFiNTRmOTJjNDA5ZDA0ZGI0Iiw=
ICAgICAgICAgICJtZDUiOiAiZWU0MjJlNDZmOThkYTQ5ODZkNzM0ZWFhODA3MWUyZDQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzQzZWEyMzg0NDNjNWU3NDVmODUyNTA1NzMxZDIxYTA5NTY3YjU3NDk2YmM2NjA2YTM5ZjY3Y2JiM2VjZWJhNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMS4wLjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlZTQyMmU0NmY5OGRhNDk4NmQ3MzRlYWE4MDcxZTJkNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDU1MzcxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0xMVQwMjo1NzowNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0xMVQwMjo1NzowNi4wMzY0NjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82ZS82MC80ZWYwZWQ0OWU2NDk0ZDEyYTE5MDg4YTM3NGY1NzA3MTg3MmE0Yzk5MjlhMWI1NGY5MmM0MDlkMDRkYjQvcHdkdXNhZ2UtMS4wLjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiYTMwNmE3MzQwMDY3ZGM3MmJjMTUzNjYwZjU2NmQ1ZjFkYmUwMDVjMzcwNzUzZjQxYTg2ZTg3YjlkNWI1N2ExYiIs
ICAgICAgICAibWQ1IjogImY3NDg1OWYzYmIyNWI5YzQ0NWViMzExNWQ2MTgyODU3Iiw=
ICAgICAgICAic2hhMjU2IjogIjBjN2M5YjFkYTZhZWI3ZDRjZWU2MGRjZjBlZDMwZmYyM2Q0MjM3ZDQ0NjQ4ZTFiNGZiMWJjZDNiMTdkNGIxODUi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInB3ZHVzYWdlLTEuMC4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZjc0ODU5ZjNiYjI1YjljNDQ1ZWIzMTE1ZDYxODI4NTciLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTEiLA==
ICAgICAgInNpemUiOiA0MjQ2Miw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMTFUMDI6NTc6MDQiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMTFUMDI6NTc6MDQuMDU3OTAyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvYTMvMDYvYTczNDAwNjdkYzcyYmMxNTM2NjBmNTY2ZDVmMWRiZTAwNWMzNzA3NTNmNDFhODZlODdiOWQ1YjU3YTFiL3B3ZHVzYWdlLTEuMC4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiNmU2MDRlZjBlZDQ5ZTY0OTRkMTJhMTkwODhhMzc0ZjU3MDcxODcyYTRjOTkyOWExYjU0ZjkyYzQwOWQwNGRiNCIs
ICAgICAgICAibWQ1IjogImVlNDIyZTQ2Zjk4ZGE0OTg2ZDczNGVhYTgwNzFlMmQ0Iiw=
ICAgICAgICAic2hhMjU2IjogIjc0M2VhMjM4NDQzYzVlNzQ1Zjg1MjUwNTczMWQyMWEwOTU2N2I1NzQ5NmJjNjYwNmEzOWY2N2NiYjNlY2ViYTQi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInB3ZHVzYWdlLTEuMC4wLnRhci5neiIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZWU0MjJlNDZmOThkYTQ5ODZkNzM0ZWFhODA3MWUyZDQiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTEiLA==
ICAgICAgInNpemUiOiA1NTM3MSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMTFUMDI6NTc6MDYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMTFUMDI6NTc6MDYuMDM2NDYwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvNmUvNjAvNGVmMGVkNDllNjQ5NGQxMmExOTA4OGEzNzRmNTcwNzE4NzJhNGM5OTI5YTFiNTRmOTJjNDA5ZDA0ZGI0L3B3ZHVzYWdlLTEuMC4wLnRhci5neiIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
