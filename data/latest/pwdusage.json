ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiQnVvbmdpb3Jub1RleGFzIiw=
ICAgICJhdXRob3JfZW1haWwiOiAiIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IE1JVCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICI8IS0tLVxuIyBjc3BlbGw6IGlnbm9yZSB2ZW52IGJlYXV0aWZ1bHNvdXAgdHpkYXRhIG51bXB5IHNpbXBsZWpzb24gZGF0YXNvdXJjZSBweXBpIHB3ZHVzYWdlXG4tLS0+IFxuXG4jIENoYW5nZSBMb2dcblxuSSdtIHRyYWNraW5nIHByb2dyZXNzIHRvd2FyZHMgdjEuMCBhdDogXG5odHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL3B3ZHVzYWdlL2lzc3Vlcy8xLlxuXG5Gcm9tIHYwLjkuNCwgdGhlIHB5dGhvbi9taWNyb3NlcnZpY2UgaXMgZmVhdHVyZSBjb21wbGV0ZS4gUmVsZWFzZXMgdXAgdG8gdjEuMCB3aWxsIFxuYWRkcmVzcyBidWcgZml4ZXMgYW5kIGRvY3VtZW50YXRpb24gKGFuZCBpbmNvcnBvcmF0ZSBhbnkgbmV3IGFnZW50IGNvbnRyaWJ1dGlvbnMpLiBcblxuIyMgQnJlYWtpbmdcblxuVGhpcyBzZWN0aW9uIG5vdGVzIGFueSBicmVha2luZyBjaGFuZ2VzLCBmcm9tIG5ld2VzdCB0byBvbGRlc3QuXG5cbi0gKip2MC45LjQqKi4gXG4gIC0gUHJvamVjdCByZW5hbWVkIHRvIHB3ZHVzYWdlIHRvIGdpdmUgYSBzaG9ydGVyIG5hbWUgZm9yIHB5cGkgcGFja2FnZS5cbiAgLSBTZXBhcmF0ZWQgcHl0aG9uIGNvbXBvbmVudCBmcm9tIGRhc2hib2FyZCBjb21wb25lbnRzLiBJbiB0aGUgaW50ZXJpbSwgdGhlIGxhdHRlciBjYW5cbiAgYmUgZm91bmQgYXQ6ICBodHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL1Bvd2Vyd2FsbC1EYXNoYm9hcmQvdHJlZS9tYWluL3Rvb2xzL3VzYWdlLXNlcnZpY2UsIGFuZCBzaG91bGQgYmUgaW50ZWdyYXRlZCBpbnRvIHRoZSBtYWluIHRyZWUgYWZ0ZXIgYmV0YSBwaGFzZS5cbiAgLSBGaXJzdCByZWxlYXNlIG9mIHB5dGhvbiBwYWNrYWdlIGZyb20gcHlwaSwgbmV3IGluc3RhbGwgcHJvY2VkdXJlLlxuLSAqKnYwLjkuMSoqLiBcInN1cHBseVByaW9yaXR5XCIgaW4gYHVzYWdlLmpzb25gIHJlbmFtZWQgdG8gXCJzdXBwbHlfcHJpb3JpdHlcIiB0byBpbXByb3ZlXG5uYW1pbmcgY29uc2lzdGVuY3kuXG5cbiMjIE5ldyBGZWF0dXJlc1xuXG4qKnYwLjkuMSoqXG4tIFJlc2FtcGxpbmcgdG8gbW9yZSB1c2VmdWwgcGVyaW9kcyBmb3IgYmFyIGNoYXJ0cy5cbi0gUGF5bG9hZCBmZWF0dXJlcyBpbXBsZW1lbnRlZC4gWW91IGNhbiBub3cgdHVybiByZXNhbXBsaW5nIG9uL29mZiwgcmVxdWVzdCBzdW1tYXJ5IFxucmVwb3J0cywgYW5kIHNlbGVjdCB5ZWFyIHRvIGRhdGUgb3IgbW9udGggdG8gZGF0ZSByZXBvcnRpbmcgKHdoaWNoIGlnbm9yZSB0aGUgZ3JhZmFuYVxucmFuZ2UpLlxuLSBNb250aCBhbmNob3IgZm9yIGFubnVhbCByZXBvcnRpbmcsIHdlZWtkYXkgYW5jaG9yIGZvciBtb250aGx5IHJlcG9ydGluZyBieSB3ZWVrLlxuLSBDTEkgaW50ZXJmYWNlIHRvIGR1bXAgb3V0IGNzdiBmb3JtYXQgZmlsZXMgZm9yIGRlYnVnZ2luZy5cblxuIyBwd2R1c2FnZVxuXG5Vc2FnZSAobWFpbmx5IHRpbWUgb2YgdXNlKSBwcm94eSBtaWNyb3NlcnZpY2UgZm9yIFBvd2Vyd2FsbC1EYXNoYm9hcmRcblxuVGhlIGZvbGxvd2luZyBkb3QgcG9pbnRzIG91dGxpbmUga2V5IGVsZW1lbnRzIG9mIHRoZSB1c2FnZSBlbmdpbmU6XG5cbi0gVGhlIHVzYWdlIGVuZ2luZSBwcm92aWRlcyBhIGZyYW1ld29yayBmb3IgdGltZSBvZiB1c2UgZW5lcmd5IGFuZCBjb3N0IHJlcG9ydGluZy5cbi0gVGhlIGZyYW1ld29yayBhc3N1bWVzIHRoYXQgYSB1dGlsaXR5J3Mgc3VwcGx5IGFncmVlbWVudC9jb250cmFjdCBjYW4gYmUgYnJva2VuIGludG86IGEgXG51c2FnZSBwbGFuIHRoYXQgZGVzY3JpYmVzIHRoZSBtb3N0bHktY29uc3RhbnQgZWxlbWVudHMgb2YgdGhlIGNvbnRyYWN0LCBhbmQgYSBjYWxlbmRhclxudGhhdCBzcGVjaWZpZXMgd2hpY2ggdXNhZ2UgcGxhbiBzaG91bGQgYmUgYWN0aXZlIGF0IGFueSB0aW1lIGFuZCB0aGUgdmFyaWFibGUgcGFyYW1ldGVyc1xub2YgdGhlIHBsYW4sIHN1Y2ggYXMgc3VwcGx5IGNvc3RzLCBmZWVkIGluIHRhcmlmZnMgYW5kIHNhdmluZ3MgcmF0ZXMuXG4tIFRoZSBlbmdpbmUgY2FuIGhhbmRsZSBtdWx0aXBsZSB1c2FnZSBwbGFucywgd2hlcmUgZWFjaCBwbGFuIGlzIGJyb2tlbiBpbnRvIGEgbnVtYmVyXG5vZiBzZWFzb25zLCBhbmQgc3BlY2lmaWVzIHRoZSB1c2FnZSBhZ2VudCB0aGF0IHdpbGwgYmUgdXNlZCB0byBjYWxjdWxhdGUgZW5lcmd5IGNvc3RzXG5hbmQgc2F2aW5ncy4gXG4tIEVhY2ggc2Vhc29uIGlzIHNwZWNpZmllZCBhczpcbiAgICAtIFJlcGVhdGluZyBncm91cHMgb2Ygd2VlayBkYXlzIGluIGEgc2Vhc29uLiBGb3IgZXhhbXBsZSwgd2Vla2RheSBhbmQgd2Vla2VuZHMuXG4gICAgLSBSZXBlYXRpbmcgdGFyaWZmIHBlcmlvZHMgd2l0aGluIGVhY2ggZGF5IG9mIHRoZSBncm91cCwgd2hlcmUgZWFjaCB0YXJpZmYgaXMgYWN0aXZlXG4gICAgZm9yIGEgcG9ydGlvbiBvZiB0aGF0IGRheS4gRm9yIGV4YW1wbGUsIFBlYWssIFxuICAgIE9mZi1QZWFrLCBTaG91bGRlciwgU3VwZXItUGVhay5cbi0gQSBjYWxlbmRhciB3aGljaCBzcGVjaWZpZXMgd2hlbiBlYWNoIHVzYWdlIHBsYW4vc2Vhc29uIGlzIGFjdGl2ZSwgYW5kIHByb3ZpZGVzIFxuY29zdC9zYXZpbmdzIHJhdGUgZGF0YSB0aGF0IHNob3VsZCBiZSB1c2VkIHdoaWxlIHRoZSBjYWxlbmRhciBlbnRyeSBpcyBhY3RpdmUuIFRoZSBcbmNhbGVuZGFyIG1lY2hhbmlzbSBpcyBkZXNpZ25lZCB0byBhbGxvdyBjb21wYWN0IGNoYW5nZXMgb2Ygc2Vhc29ucyBhbmQgcmF0ZSB0YWJsZXMuXG4tIEl0IHByb3ZpZGVzIGEgZGVmYXVsdCBzaW1wbGUgYWdlbnQgdGhhdCBjYWxjdWxhdGVzIGNvc3RzIGFuZCBzYXZpbmdzIGJhc2VkIG9uIGVuZXJneSBcbnVzZSBpbiBlYWNoIHRhcmlmZiBwZXJpb2QuXG4tICoqVmVyeSBpbXBvcnRhbnRseToqKiBJdCBwcm92aWRlcyBob29rcyBmb3IgaW1wbGVtZW50aW5nIG90aGVyIHVzYWdlIHBsYW5zLCBzdWNoIGFzIFxudGFyaWZmcyBiYXNlZCBvbiB0aWVyZWQgY29uc3VtcHRpb24uIEknbSBoYXBweSB0byBwcm92aWRlIGFzc2lzdGFuY2UgaW4gcHV0dGluZyB0aGVzZVxudG9nZXRoZXIsIGJ1dCBJJ20gaG9waW5nIG1vc3Qgb2YgdGhlIHdvcmsgd2lsbCBiZSBkb25lIGJ5IHRoZSBwZW9wbGUgb24gdGhvc2UgdXNhZ2VcbnBsYW5zLlxuXG4jIyBJbXBsZW1lbnRhdGlvblxuXG5UaGUgdXNhZ2UgZW5naW5lIGlzIGltcGxlbWVudGVkIGFzIHByb3h5IGxheWVyIGJldHdlZW4gSW5mbHV4REIgYW5kIGdyYWZhbmEuIFRoaXMgXG5hcHByb2FjaCB0aGUgZm9sbG93aW5nIGJlbmVmaXRzOlxuXG4xKSBUaGUgdXNhZ2UgZW5naW5lIGRvZXMgbm90IG1vZGlmeSBkYXRhIGluIEluZmx1eERCLlxuMikgSXQgaXMgcmVsYXRpdmVseSBlYXN5IHRvIGltcGxlbWVudCBtdWx0aXBsZSB1c2FnZSBwbGFuIHR5cGVzLlxuMykgSXQgY2FuIGJlIGNvbmZpZ3VyZWQgdmlhIGEganNvbiBmaWxlIGFuZCByZXNldC9yZXN0YXJ0ZWQgd2l0aG91dCBuZWVkaW5nIHRvIHJlc3RhcnRcbnRoZSBweXBvd2Vyd2FsbCBzZXJ2ZXIgb3IgaW5mbHV4IGluc3RhbmNlIChub3QgYXBwbGljYWJsZSB3aGlsZSBkZXZlbG9waW5nIG5ldyB1c2FnZVxuYWdlbnRzKS5cbjQpIEl0J3MgZWFzeSB0byB0ZXN0IHRoZSBlZmZlY3RzIG9mIGRpZmZlcmVudCB0YXJpZmYgdHlwZXMgb24gaGlzdG9yaWNhbCBkYXRhIChhbGJlaXQsXG50aGUgaGlzdG9yaWNhbCBkYXRhIG1heSBub3QgcmVmbGVjdCBvcHRpbWlzYXRpb24gZm9yIHRoZSB0YXJpZmYpLlxuXG4jIFNldHVwXG5cblRPRE86IFNldCB1cCBkb2NrZXIgY29udGFpbmVyIGZvciBtaWNyb3NlcnZpY2UuIFVudGlsIHRoaXMgaXMgZG9uZSB0aW1lLCB1c2VycyB3aWxsXG5laXRoZXIgbmVlZCB0byBwcmVwYXJlIGEgY3VzdG9tIGRvY2tlciBpbWFnZSwgb3IgZm9sbG93IHRoZSBcbltcIkluc3RhbGxhdGlvbiBmb3IgZGV2ZWxvcG1lbnQvdGVzdGluZ1wiXSgjaW5zdGFsbGF0aW9uLWZvci1kZXZlbG9wbWVudHRlc3RpbmcpIFxuaW5zdHJ1Y3Rpb25zIGJlbG93IHRvIHNldHVwIGEgc3RhbmQgYWxvbmUgc2VydmVyIGluc3RhbmNlIGZvciBydW5uaW5nIHRoZVxudXNhZ2UgZW5naW5lLlxuXG4jIENvbmZpZ3VyYXRpb25cblxuQmVjYXVzZSB0aGVyZSBhcmUgc28gbWFueSBkaWZmZXJlbnQgdGFyaWZmcywgY29uZmlndXJhdGlvbiB3aWxsIHJlcXVpcmUgc2V0dGluZyB1cCBhXG5gdXNhZ2UuanNvbmAgZmlsZSB0byBkZWZpbmUgdXNhZ2UgcGxhbnMgYW5kIGNhbGVuZGFycywgYW5kIHlvdSB3aWxsIHZlcnkgbGlrZWx5IGFsc29cbm5lZWQgdG8gZG8gc29tZSBjdXN0b21pc2F0aW9uIGluIGdyYWZhbmEgdG8gZ2V0IHJlcG9ydCBvdXQgaW4gdGhlIGZvcm1hdCB5b3UgcHJlZmVyLlxuXG5UaGlzIHJlcG9zaXRvcnkgY29udGFpbnMgYSBmaWxlIG5hbWVkIGBleGFtcGxlX3VzYWdlLmpzb25gIHRoYXQgeW91IGNhbiB1c2UgdG8gYnVpbGRcbnlvdXIgb3duIGB1c2FnZS5qc29uYC4gSWYgeW91IGFyZSBydW5uaW5nIGEgc3RhbmQgYWxvbmUgc2VydmVyLCB1c2UgYSBgVVNBR0VfSlNPTmAgXG5lbnZpcm9ubWVudCB2YXJpYWJsZSB0byBzcGVjaWZ5IHRoZSBwYXRoIHRvIHlvdXIgY29uZmlndXJhdGlvbiBmaWxlICh0aGUgZW52aXJvbm1lbnRcbnZhcmlhYmxlIG11c3Qgc3BlY2lmeSB0aGUgcGF0aCBhbmQgdGhlIGZpbGUgbmFtZSwgYW5kIHlvdSBtYXkgdXNlIGEgZGlmZmVyZW50IGZpbGUgbmFtZVxuaWYgeW91IHByZWZlcikuIElmIHlvdSBkbyBub3Qgc3BlY2lmeSB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgaXQgd2lsbCBkZWZhdWx0IHRvIGl0XG53aWxsIGRlZmF1bHQgdG8gc2VhcmNoaW5nIGZvciBgdXNhZ2UuanNvbmAgaW4gdGhlIHB5dGhvbiB3b3JraW5nIGRpcmVjdG9yeS4gXG5cbklmIHlvdSBhcmUgcnVubmluZyB0aGUgdXNhZ2UgZW5naW5lIGZyb20gYSBkb2NrZXIgaW5zdGFuY2UsIHlvdSAqKm11c3QqKiBzcGVjaWZ5IHRoZSBcbmBVU0FHRV9KU09OYCBlbnZpcm9ubWVudCB2YXJpYWJsZSwgYXMgdGhlcmUgaXMgbm8gZGVmYXVsdCBjb25maWd1cmF0aW9uIGZpbGUuIFRPRE8gbW9yZSBcbmRldGFpbCBvbiBVU0FHRV9KU09OIGVudmlyb25tZW50IHZhcmlhYmxlIGZvciBkb2NrZXIgYnVpbGQuIFxuXG5XaGlsZSBtb3N0IG9mIHRoZSBoZWF2eSBsaWZ0aW5nIGlzIGRvbmUgaW4gdGhlIGB1c2FnZS5qc29uYCBmaWxlLCB0aGlzIGNvbmZpZ3VyYXRpb24gXG5maWxlIGRlcGVuZHMgaGVhdmlseSBvbiBjb25zdGFudHMgZGVmaW5lZCBpbiBgY29tbW9uLnB5YC4gVGhlIG5leHQgc2VjdGlvbnNcbmRldGFpbHMgdGhlc2UgY29uc3RhbnRzLCB0aGUgc3RydWN0dXJlIG9mIGB1c2FnZS5qc29uYCwgYW5kIGZpbmFsbHkgb3V0bGluZXMgZ3JhZmFuYVxuY3VzdG9taXNhdGlvbiBzdGVwcy5cblxuIyMgU3RyaW5ncyBmcm9tIGBjb21tb24ucHlgXG5cblRoZSBzdHJpbmdzIGRlZmluZWQgaW4gdGhlIGBQRENvbE5hbWVgIEVudW0gaW4gYGNvbW1vbi5weWAgYXJlIGxhYmVscyBmb3Iga2V5IGNhbGN1bGF0ZWRcbmRhdGEgY29sdW1ucyBpbiB0aGUgdXNhZ2UgZW5naW5lLiBZb3UgbWF5IGNob29zZSB0byBvdXRwdXQgYW55IHN1YnNldCBvZiB0aGUgbnVtZXJpY1xuY2FsY3VsYXRpb25zLCBhbmQgeW91IGNhbiBhbHNvIGNoYW5nZSB0aGUgZGVmYXVsdCBuYW1lcyBvZiB0aGUgb3V0cHV0cyB0byB5b3VyXG5wcmVmZXJyZWQgbGFiZWxzLlxuXG5UaGUgZm9sbG93aW5nIHRhYmxlIHN1bW1hcmlzZXMgdGhlIHN0cmluZ3MgYXZhaWxhYmxlIGFzIGF0IDEzIE1heSAyMDIzLiBUaGlzIHNldCBtYXkgYmVcbmV4dGVuZGVkIGluIGZ1dHVyZS5cblxufCBTdHJpbmcgICAgICAgIHwgRGVmYXVsdCBzdHJpbmcgIHwgRGVzY3JpcHRpb24gYW5kIE5vdGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG58LS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbnwgR1JJRF9TVVBQTFkgICB8IEdyaWQgc3VwcGx5ICAgICB8IFBvd2VyIGZyb20gZ3JpZCwgZ3JpZCBpbXBvcnQuICAgICAgICAgICAgICAgICAgICAgfFxufCBHUklEX0VYUE9SVCAgIHwgR3JpZCBleHBvcnQgICAgIHwgUG93ZXIgZnJvbSBob21lIHRvIGdyaWQsIGdyaWQgZXhwb3J0LiAgICAgICAgICAgICB8XG58IFBXX1NVUFBMWSAgICAgfCBQVyBzdXBwbHkgICAgICAgfCBPdXRwdXQgZnJvbSBwb3dlcndhbGwgKHRvdGFsKS4gICAgICAgICAgICAgICAgICAgIHxcbnwgSE9NRV9ERU1BTkQgICB8IEhvbWUgRGVtYW5kICAgICB8IEhvbWUgcG93ZXIgdXNhZ2UuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxufCBTT0xBUl9TVVBQTFkgIHwgU29sYXIgc3VwcGx5ICAgIHwgU29sYXIgZ2VuZXJhdGlvbiAodG90YWwpLiAgICAgICAgICAgICAgICAgICAgICAgICB8XG58IEdSSURfVE9fSE9NRSAgfCBHcmlkIHRvIEhvbWUgICAgfCBHcmlkIHN1cHBseSBhbGxvY2F0ZWQgdG8gaG9tZSBkZW1hbmQuICAgICAgICAgICAgIHxcbnwgUFdfVE9fSE9NRSAgICB8IFBXIHRvIEhvbWUgICAgICB8IFBvd2Vyd2FsbCBvdXRwdXQgYWxsb2NhdGVkIHRvIGhvbWUgZGVtYW5kLiAgICAgICAgfFxufCBTT0xBUl9UT19IT01FIHwgU29sYXIgdG8gSG9tZSAgIHwgU29sYXIgZ2VuZXJhdGlvbiBhbGxvY2F0ZWQgdG8gaG9tZSBkZW1hbmQuICAgICAgICB8XG58IEdSSURfQ0hBUkdJTkcgfCBHcmlkIGNoYXJnaW5nICAgfCBHcmlkIHN1cHBseSB1c2VkIHRvIGNoYXJnZSBwb3dlcndhbGwgKGFsbG9jYXRlZCkuIHxcbnwgUkVTSURVQUxfREVNQU5EXzEgfCBIb21lIGRlbWFuZCBleCBzdXBwbHkgMSB8IFNlZSBuZXh0IHNlY3Rpb24gZm9yIHByaW9yaXRpZXMgYW5kIHJlc2lkdWFscy4gfFxufCBSRVNJRFVBTF9ERU1BTkRfMiB8IEhvbWUgZGVtYW5kIGV4IHN1cHBseSAxKzIgfCBTZWUgbmV4dCBzZWN0aW9uIGZvciBwcmlvcml0aWVzIGFuZCByZXNpZHVhbHMuIHxcbnwgUkVTSURVQUxfREVNQU5EX0ZJTkFMIHwgSG9tZSBkZW1hbmQgZXggc3VwcGxpZXMgfCBTZWUgbmV4dCBzZWN0aW9uIGZvciBwcmlvcml0aWVzIGFuZCByZXNpZHVhbHMgKHNob3VsZCBiZSB6ZXJvLCBidXQgZG9uJ3QgcmVseSBvbiBpdCwgYmVjYXVzZSBUZXNsYS4pLiB8IFxufCBTRUxGX1BXX05FVF9PRl9HUklEIHwgUFcgdG8gaG9tZS1ncmlkIGNoYXJnZSB8IFBvd2VyIHN1cHBseSB0byBob21lIGxlc3MgZ3JpZCBjaGFyZ2luZyBvZiBwb3dlcndhbGwuIFNlZSBuZXh0IHNlY3Rpb24gZm9yIGRpc2N1c3Npb24uIHxcbnwgU0VMRl9TT0xBUl9QTFVTX1JFUyB8IFNvbGFyIHRvIGhvbWUrcmVzaWR1YWwgfCBQb3dlciBzdXBwbHkgdG8gaG9tZSBwbHVzIGFueSB1bmFjY291bnRlZCByZXNpZHVhbCBkZW1hbmQuIFNlZSBuZXh0IHNlY3Rpb24gZm9yIGRpc2N1c3Npb24uIHxcbnwgU0VMRl9UT1RBTCAgICB8IFNlbGYgY29uc3VtcHRpb24gfCBUb3RhbCBzZWxmIGNvbnN1bXB0aW9uLiBTRUxGX1BXX1RPX0hPTUUgKyBTRUxGX1NPTEFSX1BMVVNfUkVTLiB8XG58IFNVUFBMWV9DSEFSR0UgfCBTdXBwbHkgQ2hhcmdlIHwgSWYgc3BlY2lmaWVkIGluIGNhbGVuZGFyIHJhdGUgdGFibGUsIHdpbGwgYWRkIDEgdW5pdCBvZiBzdXBwbHkgY2hhcmdlIHRvIGNvc3Qgb3V0cHV0IGZvciBlYWNoIGRhdGEgcG9pbnQuIElnbm9yZWQgaWYgc3BlY2lmaWVkIGluIHVzYWdlX3BsYW5zIHZhcmlhYmxlIHJlcG9ydCBsaXN0LiB8XG58IFRBUklGRiAgICAgICAgfCBUYXJpZmYgfCBTdHJpbmcgdXNlZCBpbnRlcm5hbGx5LiBOb3QgaW50ZW5kZWQgZm9yIGVuZCB1c2Vycy4gfFxufCBUSU1FICAgICAgICAgIHwgX3RpbWUgIHwgU3RyaW5nIHVzZWQgaW50ZXJuYWxseS4gTm90IGludGVuZGVkIGZvciBlbmQgdXNlcnMuIHxcblxuIyMgYHVzYWdlLmpzb25gIHN0cnVjdHVyZVxuXG5Nb3N0IG9mIHRoZSB1c2FnZSBlbmdpbmUgc2V0dXAgaXMgdmlhIHRoZSBgdXNhZ2UuanNvbmAgY29uZmlndXJhdGlvbiBmaWxlLiBBcyBhbHdheXNcbndpdGggSlNPTiwgaXQncyBmaW5pY2t5IG9uIGV4YWN0IHN5bnRheCwgYW5kIHRoZSBzZXJ2ZXIgY2FuIGJlIG9wYXF1ZSB3aXRoXG5lcnJvciBtZXNzYWdlcywgc28gaWYgeW91IGhhdmUgdHJvdWJsZSB3aXRoIHNldHRpbmcgdXAgdGhlIHVzYWdlIGVuZ2luZSwgdGhlIGZpcnN0IHN0ZXBcbnNob3VsZCBiZSB0byBjaGVjayB0aGlzIGZpbGUgZm9yIHN5bnRheCBlcnJvcnMgYW5kIHR5cG9zLiBcblxuSW4gdGhlIGZvbGxvd2luZyBzZWN0aW9ucywgdGhlIHZhcmlvdXMgZWxlbWVudHMgb2YgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBhcmUgaWRlbnRpZmllZFxuYXMgZWl0aGVyICoqcmVxdWlyZWQqKiBvciAqKm9wdGlvbmFsKiouIFJlcXVpcmVkIGVsZW1lbnRzIG11c3QgYmUgc3VwcGxpZWQsIHdoaWxlIFxub3B0aW9uYWwgZWxlbWVudHMgdHlwaWNhbGx5IGhhdmUgc3RhbmRhcmQgZGVmYXVsdHMsIG9yIG1heSByZXBlYXQgcHJldmlvdXNseSBzcGVjaWZpZWRcbmlucHV0LiBCb3RoIHJlcXVpcmVkIGFuZCBvcHRpb25hbCBlbGVtZW50cyBjYW4gaGF2ZSBhZGRpdGlvbmFsIHF1YWxpZmllcnMgdGhhdCBhcHBseSB0b1xudGhhdCBpbnB1dC5cblxuVGhlIGhpZ2ggbGV2ZWwgc3RydWN0dXJlIG9mIHRoZSBqc29uIGZpbGUgaXM6XG5cbmBgYFxue1xuICBcInNldHRpbmdzXCI6IHsgLi4uIGRpY3Rpb25hcnkgb2Ygc2V0dGluZ3MgLi4ufSxcbiAgXCJwbGFuc1wiOiBbXG4gICAgPHVzYWdlIHBsYW4gMT4sXG4gICAgPHVzYWdlIHBsYW4gMj4sXG4gICAgPHVzYWdlIHBsYW4gMz4sXG4gICAgLi4uXG4gIF0sXG4gIFwiY2FsZW5kYXJcIjoge1xuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIFwiPGVmZmVjdGl2ZSBkYXRlPlwiOiB7PGNhbGVuZGFyIGRhdGEgZGljdGlvbmFyeT59LFxuICAgIC4uLiAgICBcbiAgfVxufVxuYGBgXG5UaGUgc2V0dGluZ3MsIHBsYW5zLCBhbmQgY2FsZW5kYXIgc2VjdGlvbnMgYXJlIGFsbCAqKnJlcXVpcmVkKiouXG5cblxuIyMjIFNldHRpbmdzIFNlY3Rpb25cblxuVGhlIHN0cnVjdHVyZSBvZiB0aGUgc2V0dGluZ3MgZGljdGlvbmFyeSBpczpcbmBgYFxuXCJzZXR0aW5nc1wiOiB7XG4gICAgICAgIFwiaW5mbHV4X3VybFwiOiBcImh0dHA6Ly88aG9zdG5hbWU+OjgwODZcIixcbiAgICAgICAgXCJidWNrZXRcIjogXCJwb3dlcndhbGwva3doXCIsXG4gICAgICAgIFwidGltZXpvbmVcIjogXCJBdXN0cmFsaWEvSG9iYXJ0XCIsXG4gICAgICAgIFwic3VwcGx5X3ByaW9yaXR5XCI6IFtcbiAgICAgICAgICAgIFwiR1JJRF9TVVBQTFlcIixcbiAgICAgICAgICAgIFwiUFdfU1VQUExZXCIsXG4gICAgICAgICAgICBcIlNPTEFSX1NVUFBMWVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiY29zdF91bml0XCI6IFwiJFwiLFxuICAgICAgICBcImVuZXJneV91bml0XCI6IFwia1doXCIsXG4gICAgICAgIFwicmVuYW1lXCI6IHtcbiAgICAgICAgICAgIFwiR1JJRF9TVVBQTFlcIjogXCJHcmlkIHN1cHBseS0tLVwiLFxuICAgICAgICAgICAgXCJHUklEX0VYUE9SVFwiOiBcIkdyaWQgZXhwb3J0KysrXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJyZXNhbXBsZVwiOiB0cnVlLFxuICAgICAgICBcIndlZWtfYW5jaG9yXCI6IFwiTU9OVEhcIixcbiAgICAgICAgXCJ5ZWFyX2FuY2hvclwiOiBcIkpBTlwiXG4gICAgfSxcbmBgYFxuXG5UaGUgZGljdGlvbmFyeSBlbnRyaWVzIGFyZTpcbi0gWyoqcmVxdWlyZWQqKl0gYGluZmx1eF91cmxgIHBvaW50cyBhdCB0aGUgaW5mbHV4IGRhdGFiYXNlIHNlcnZpY2UsIHdoaWNoIGlzIHR5cGljYWxseVxudGhlIGhvc3RuYW1lIG9yIGFkZHJlc3Mgb2YgdGhlIFBvd2Vyd2FsbCBEYXNoYm9hcmQgaG9zdCwgd2l0aCBhIHBvcnQgb2YgODA4Ni5cbi0gWyoqcmVxdWlyZWQqKl0gYGJ1Y2tldGAgaXMgdGhlIG5hbWUgb2YgdGhlIGluZmx1eCBjb250aW51b3VzIHF1ZXJ5IHRoYXQgc3VwcGxpZXMgZGF0YVxuZm9yIHRoZSB1c2FnZSBlbmdpbmUuIFRoaXMgc2hvdWxkIGhhdmUgdGhlIHNhbWUgZmllbGRzIGFzIHRoZSBgcG93ZXJ3YWxsL2t3aGAgQ1EgKHRoZSBcbmRlZmF1bHQsIHdoaWNoIHByb3ZpZGVzIGRhdGEgb24gYW4gaG91cmx5IGJhc2lzKS5cbi0gWyoqcmVxdWlyZWQqKl0gYHRpbWV6b25lYCAtIFRoaXMgc2hvdWxkIGJlIHNldCB0byB5b3VyIGxvY2FsIHRpbWV6b25lLlxuLSBgY29zdF91bml0YCBhbmQgYGVuZXJneV91bml0YCAtICoqb3B0aW9uYWwqKiBzdHJpbmcgYXBwZW5kZWQgdG8gdGhlIHNlcmllcyBsYWJlbHMgXG5mb3IgdXNhZ2UgY29zdCBhbmQgZW5lcmd5IGRhdGEuIERlZmF1bHQgdG8gXCIkXCIgYW5kIFwia1doXCIuXG4tIGByZW5hbWVgIC0gQW4gKipvcHRpb25hbCoqIGRpY3Rpb25hcnkgdGhhdCBhbGxvd3MgcmVwbGFjZW1lbnQgb2YgdGhlIGRlZmF1bHQgc3RyaW5ncyBcbmRlZmluZWQgaW4gYGNvbW1vbi5weWAuIElmIHlvdSB3YW50IHRvIGhhdmUgYSBuZXcgbGFiZWwgc3RyaW5nIGZvciB0aGUgYFwiU09MQVJfU1VQUExZXCJgLFxueW91IGNhbiBnbyBudXRzLiBCZSBteSBndWVzdC4gVGhlIGJvcmluZyBleGFtcGxlIGFib3ZlIGFkZHMgbXVsdGlwbGUgLSBhbmQgKyBzaWducyB0b1xudGhlIHN0cmluZ3MgZm9yIGdyaWQgc3VwcGx5IGFuZCBncmlkIGV4cG9ydC5cbi0gYHJlc2FtcGxlYCAtIEFuICoqb3B0aW9uYWwqKiBzZXR0aW5nIHdoaWNoIHNwZWNpZmllcyBpZiBkYXRhIHNob3VsZCBiZSBkb3duc2FtcGxlZCxcbndpdGggYSBkZWZhdWx0IG9mIHRydWUgKHRydWUgb3IgZmFsc2UpLiBUaGlzIGNhbiBhbHNvIGJlIHNldCBieSBhIGdyYWZhbmEgcGF5bG9hZC4gU2VlXG5bSlNPTiBQYXlsb2FkXSgjanNvbi1wYXlsb2FkKSBmb3IgZGlzY3Vzc2lvbiBvbiByZXNhbXBsaW5nIGltcGxlbWVudGF0aW9uIGFuZCBob3cgdG9cbmNvbmZpZ3VyZSB0aGUgcGF5bG9hZC5cbi0gYHdlZWtfYW5jaG9yYCAtIEFuICoqb3B0aW9uYWwqKiBzZXR0aW5nIHdpdGggZGVmYXVsdCB2YWx1ZSBvZiBcIk1PTlRIXCIuIFRoaXMgc3BlY2lmaWVzXG50aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrIHVzZWQgaW4gZGF0YSByZXNhbXBsaW5nLiBUaGUgZGVmYXVsdCBpcyB0byBhbmNob3IgdGhlIHdlZWtcbnN0YXJ0IHRvIHRoZSBmaXJzdCBkYXkgb2YgdGhlIG1vbnRoLCBidXQgeW91IGNhbiBsb2NrIGl0IHRvIGEgZml4ZWQgZGF5IG9mIHRoZSB3ZWVrXG51c2luZyBvbmUgb2Y6IFtcIk1PTlwiLCBcIlRVRVwiLCBcIldFRFwiLCBcIlRIVVwiLCBcIkZSSVwiLCBcIlNBVFwiLCBcIlNVTlwiXS4gXG4tIGB5ZWFyX2FuY2hvcmAgLSBBbiAqKm9wdGlvbmFsKiogc2V0dGluZyB3aXRoIGRlZmF1bHQgdmFsdWUgb2YgXCJKQU5cIi4gVGhpcyBzcGVjaWZpZXNcbnRoZSBmaXJzdCBtb250aCBvZiB0aGUgeWVhciBmb3IgYW5udWFsIHJlcG9ydGluZyAocHJvdmlkZWQgaW4gY2FzZSBhbnlvbmUgd2FudHMgdG8gcnVuXG5yZXBvcnRzIHRoYXQgbGluZSB1cCB3aXRoIGxvY2FsIGZpbmFuY2lhbCB5ZWFycykuIFlvdSBjYW4gbW9kaWZ5IHVzaW5nIGFueSB0aHJlZSBkYXlcbm1vbnRoIGFiYnJldmlhdGlvbiBbXCJKQU5cIiwgXCJGRUJcIiwgXCJNQVJcIiwgLi4uICwgXCJERUNcIl0uIE5vdGU6IHRoZSBmaXJzdCBkYXkgb2YgdGhlIFxucmVwb3J0aW5nIHllYXIgY29ycmVzcG9uZHMgdG8gdGhlIGZpcnN0IGRheSBvZiB0aGUgc3BlY2lmaWVkIG1vbnRoIC0gZS5nLiAxc3QgSnVseSBmb3IgXG5cIkpVTFwiLlxuXG5GaW5hbGx5LCBgXCJzdXBwbHlfcHJpb3JpdHlcImAgaXMgYW4gKipvcHRpb25hbCoqIGVudHJ5IHRoYXQgcHJvdmlkZXMgdGhlIG9yZGVyIGluIHdoaWNoXG5zdXBwbHkgaXMgYWxsb2NhdGVkIHRvIG1lZXQgaG9tZSBkZW1hbmQgZm9yIHBvd2VyLiBJZiBzcGVjaWZpZWQsIHRoZSBlbnRyeSAqKm11c3QqKiBiZSBhXG50aHJlZSBlbGVtZW50IGxpc3QgdGhhdCBzdGF0ZXMgdGhlIG9yZGVyIG9mIGBcIkdSSURfU1VQUExZXCJgLCBgXCJQV19TVVBQTFlcImAgYW5kIFxuYFwiU09MQVJfU1VQUExZXCJgLiBJZiBgXCJzdXBwbHlfcHJpb3JpdHlcImAgaXMgb21pdHRlZCwgaXQgZGVmYXVsdHMgdG8gdGhlIGxpc3Qgc3BlY2lmaWVkXG5hYm92ZSAoZ3JpZCwgcG93ZXJ3YWxsLCBhbmQgdGhlbiBzb2xhcikuXG5cblRoaXMgbGlzdCBpcyB1c2VkIHRvIGFsbG9jYXRlIHN1cHBseSB0byBkZW1hbmQgYXMgZm9sbG93czpcblxuLSBQb3dlciBmcm9tIHRoZSBmaXJzdCBzdXBwbHkgKGUuZy4gZ3JpZCBzdXBwbHkpIGlzIGFsbG9jYXRlZCB0byBgSE9NRV9ERU1BTkRgLiBcbiAgLSBJZiB0aGlzIHN1cHBseSBleGNlZWRzIGRlbWFuZCAoYEdSSURfU1VQUExZID4gSE9NRV9ERU1BTkRgKSwgdGhlbiBhbGwgaG9tZSBkZW1hbmRcbiAgaXMgbWV0IGZyb20gdGhpcyBzdXBwbHkgYW5kIHJlbWFpbmluZyBkZW1hbmQgYWZ0ZXIgdGhlIGZpcnN0IHN1cHBseSBpcyBzZXQgdG8gemVybyBcbiAgKGBSRVNJRFVBTF9ERU1BTkRfMSA9IDBgKS4gXG4gIC0gT3RoZXJ3aXNlLCBob21lIGRlbWFuZCBjb25zdW1lcyBhbGwgb2YgdGhlIGF2YWlsYWJsZSBzdXBwbHkgYW5kIHRoZSByZXNpZHVhbCBcbiAgZGVtYW5kIGlzIGNhbGN1bGF0ZWQgZnJvbSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGRlbWFuZCBhbmQgc3VwcGx5IC0gZm9yIG91ciBleGFtcGxlLCBcbiAgaXQgaXMgYFJFU0lEVUFMX0RFTUFORF8xID0gSE9NRV9ERU1BTkQgLSBHUklEX1NVUFBMWWAuXG4gIC0gRmluYWxseSwgdGhlIHRvdGFsIHBvd2VyIGFsbG9jYXRlZCBmcm9tIHRoZSBmaXJzdCBzdXBwbHkgdG8gdGhlIGhvbWUgaXMgdGhlIFxuICBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGhvbWUgZGVtYW5kIGFuZCB0aGUgZmlyc3QgcmVzaWR1YWwgLSBmb3Igb3VyIGV4YW1wbGU6XG4gIGBHUklEX1RPX0hPTUUgPSBIT01FX0RFTUFORCAtIFJFU0lEVUFMX0RFTUFORF8xYC4gXG4tIFdlIGFwcGx5IHRoZSBzYW1lIHByb2Nlc3MgdG8gdGhlIHNlY29uZCBzdXBwbHkgKGUuZy4gUFcgc3VwcGx5KSB0byByZXNpZHVhbCBkZW1hbmQgMS5cbkluIHN1bW1hcnkgZm9yIHRoaXMgY2FzZTpcbiAgLSBJZiBgUFdfU1VQUExZID4gUkVTSURVQUxfREVNQU5EXzFgLCB0aGVuIGBSRVNJRFVBTF9ERU1BTkRfMiA9IDBgLCBvdGhlcndpc2UgXG4gIGBSRVNJRFVBTF9ERU1BTkRfMiA9IFJFU0lEVUFMX0RFTUFORF8yIC0gUFdfU1VQUExZYC5cbiAgLSBQb3dlciBhbGxvY2F0ZWQgZnJvbSB0aGUgc2Vjb25kIHN1cHBseSB0byBob21lOiBgUFdfVE9fSE9NRSA9IFJFU0lEVUFMX0RFTUFORF8xIC0gXG4gIFJFU0lEVUFMX0RFTUFORF8yYC5cbi0gQW5kIHdlIGFwcGx5IHRoZSBzYW1lIHByb2Nlc3MgYSB0aGlyZCB0aW1lIHRvIGNhbGN1bGF0ZSBgUkVTSURVQUxfREVNQU5EX0ZJTkFMYCBhbmQgXG50aGUgdGhpcmQgc3VwcGx5IGFsbG9jYXRpb24gdG8gdGhlIGhvbWUgYFNPTEFSX1RPX0hPTUVgLlxuXG5Ob3RlIHRoYXQgdGhlIFRlc2xhIGFuZC9vciBJbmZsdXhEQiBkYXRhIGlzIG5vdCBhbHdheXMgdG8gaW50ZXJuYWxseSBjb25zaXN0ZW50LiBBc1xuYSByZXN1bHQgaXQgaXMgcG9zc2libGUgZm9yIGBSRVNJRFVBTF9GSU5BTF9ERU1BTkRgIHRvIGJlIG5vbi16ZXJvIChpdCBjYW4ndCBiZSBcbnBoeXNpY2FsbHksIGJ1dCByb3VuZGluZywgY2FsY3VsYXRpb24gZXJyb3JzIGFuZCBzb21lIFRlc2xhIG9kZGl0aWVzIHJlc3VsdCBpdCBpbiBcbmhhcHBlbmluZyBmcm9tIHRpbWUgdG8gdGltZSAtIGl0IGlzIHplcm8gbW9zdCBvZiB0aGUgdGltZSkuIENvbnNlcXVlbnRseSwgYWxsIG9mIHRoZVxucmVzaWR1YWwgdmFsdWVzIGFyZSBhdmFpbGFibGUgZm9yIHJlcG9ydGluZyBpZiB5b3Ugd2FudCB0byBzZWUgd2hhdCBpcyBoYXBwZW5pbmcuIFxuKEFzaWRlOiBTb21ldGltZXMgdGhlIGVuZXJneSBiYWxhbmNlIGRvZXNuJ3Qgd29yayBhdCBhbGwgLSBtb3JlIGVuZXJneSBjb21pbmcgaW4gdGhhblxuZ29pbmcgb3V0L2JlaW5nIGNvbnN1bWVkIG9yIHZpY2UgdmVyc2EgLSB0aGUgdXNhZ2UgZW5naW5lIGlnbm9yZXMgdGhpcyBzaXR1YXRpb24gYXMgaXRcbmlzIGEpIGluZnJlcXVlbnQgYW5kIGIpIHRoZXJlIGlzIG5vIHByYWN0aWNhbCBtZXRob2QgdG8gYWRkcmVzcyBpdC4pXG5cblRoZSB3YXkgSSBoYXZlIGNob3NlbiB0byBhZGRyZXNzIHRoaXMgaXMgdG8gYXNzdW1lIHRoYXQgYW55IHBvc2l0aXZlIG5vbi16ZXJvIHJlc2lkdWFsIFxuZGVtYW5kIG11c3QgaGF2ZSBiZWVuIG1ldCBieSBpbnRlcm5hbCBnZW5lcmF0aW9uIChlcnJpbmcgb24gdGhlIHRoaW5raW5nIHBvc2l0aXZlIHNpZGUpLFxuYW5kIEkgaGF2ZSBhbHNvIGFzc3VtZWQgdGhpcyBpcyB1bmRlci1yZXBvcnRlZCBzb2xhciBnZW5lcmF0aW9uLiBTbyBJIGhhdmUgYWxzbyBpbmNsdWRlZFxuYSBjb3JyZWN0ZWQgc29sYXIgc2VsZiBjb25zdW1wdGlvbiB2YXJpYWJsZSB3aGljaCBpcyBkZWZpbmVkIGFzOlxuICBgYGBcbiAgU0VMRl9TT0xBUl9QTFVTX1JFUyA9IFNPTEFSX1RPX0hPTUUgKyBSRVNJRFVBTF9ERU1BTkRfRklOQUxcbiAgYGBgXG4oVGhpcyBtYXkgbGVhZCB0byBpbmZyZXF1ZW50IHNtYWxsIHNvbGFyIGNvbnN1bXB0aW9uIGJlaW5nIHJlcG9ydGVkIGluIHRoZSBtaWRkbGUgb2ZcbnRoZSBuaWdodCkuXG5cblRoZSBleGFtcGxlIGB1c2FnZS5qc29uYCBmaWxlIHVzZXMgdGhpcyB2YXJpYWJsZSwgYnV0IHlvdSBjYW4gdXNlIGBTT0xBUl9UT19IT01FYCBcbmluc3RlYWQgaWYgeW91IGRvbid0IHdhbnQgdG8gdXNlIG15IGFzc3VtcHRpb24uIE5vdGUgdG90YWwgc2VsZiBjb25zdW1wdGlvbiBhbHNvIFxuaW5jbHVkZXMgdGhpcyByZXNpZHVhbDpcbiAgYGBgXG4gIFNFTEZfVE9UQUwgPSBQV19UT19IT01FICsgU0VMRl9TT0xBUl9QTFVTX1JFU1xuICBgYGBcbklmIHlvdSBkb24ndCB3YW50IHRvIGluY2x1ZGUgdGhlIGZpbmFsIHJlc2lkdWFsIGluIHRvdGFsIHNlbGYgY29uc3VtcHRpb24sIHlvdSB3aWxsIG5lZWRcbnRvIGNyZWF0ZSBhIGN1c3RvbSBhZ2VudCBvciByZXBvcnQgYFNPTEFSX1RPX0hPTUVgIGFuZCBgUFdfVE9fSE9NRWAgYW5kIHRoZW4gc3VtIHRoZXNlXG5pbiBncmFmYW5hIHRvIG9idGFpbiBhIHRvdGFsIHNlbGYgY29uc3VtcHRpb24uXG5cbkZpbmFsbHkgd2l0aCB0aGUgY2FsY3VsYXRpb25zIGFib3ZlIGluIHBsYWNlLCB0aGUgdXNhZ2UgZW5naW5lIGNhbGN1bGF0ZXMgdHdvIG1vcmUgXG51dGlsaXR5IHZhcmlhYmxlczpcbi0gYEdSSURfQ0hBUkdJTkcgPSBHUklEX1NVUFBMWSAtIEdSSURfVE9fSE9NRWAsIHdoZXJlIEkgYXNzdW1lIGFueSBncmlkIHN1cHBseSBpbiBleGNlc3Ncbm9mIHRoYXQgYWxsb2NhdGVkIHRvIGhvbWUgZGVtYW5kIGlzIHVzZWQgdG8gY2hhcmdlIHRoZSBwb3dlcndhbGwuXG4tIGBTRUxGX1BXX05FVF9PRl9HUklEID0gUFdfVE9fSE9NRSAtIEdSSURfQ0hBUkdJTkdgLCB3aGljaCBpcyB0aGUgcG93ZXJ3YWxsIHN1cHBseSB0byBcbmhvbWUgbGVzcyBhbnkgZ3JpZCBjaGFyZ2luZyBvZiB0aGUgcG93ZXJ3YWxsIGluIHRoZSByZXBvcnRpbmcgcGVyaW9kLiBTZWUgZGlzY3Vzc2lvbiBvblxucG93ZXJ3YWxsIHNhdmluZ3MgaW4gdGhlIGNhbGVuZGFyIHNlY3Rpb24gZm9yIHRoZSByZWFzb24gZm9yIHRoaXMgdmFyaWFibGUgYW5kIGl0c1xuKG9wdGlvbmFsKSB1c2FnZS5cblxuRmluYWwgbm90ZTogVGhlIHVzYWdlIGVuZ2luZSBkb2VzIG5vdCB0cnkgdG8gcmVjb25jaWxlIHRoZSBlbmVyZ3kgYmFsYW5jZSAob3V0IG9mXG5zY29wZSkuXG5cbiMjIyBQbGFucyBzZWN0aW9uXG5cblRoZSBwbGFucyBzZWN0aW9uICoqbXVzdCoqIGNvbnRhaW4gYXQgbGVhc3Qgb25lIHVzYWdlIHBsYW4sIGFuZCBjYW4gY29udGFpbiBhbiBhbnkgXG5udW1iZXIgb2YgdXNhZ2UgcGxhbnMuIFxuXG5gYGBcbiAgXCJwbGFuc1wiOiBbXG4gICAgPHVzYWdlIHBsYW4gMT4sXG4gICAgPHVzYWdlIHBsYW4gMj4sXG4gICAgPHVzYWdlIHBsYW4gMz4sXG4gICAgLi4uXG4gIF1cbmBgYFxuXG5FYWNoIHBsYW4gdXNlcyB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZSwgd2l0aCB1c2VyIHNwZWNpZmllZCBuYW1lcyBpbiA8PjpcblxuIGBgYFxuIHtcbiAgXCJuYW1lXCI6IFwiPHBsYW4gbmFtZSAtIGZvciBleGFtcGxlIFV0aWxpdHkgWFlaPlwiLFxuICBcInJlcG9ydFwiOiBbXG4gICAgICBcIkdSSURfU1VQUExZXCIsXG4gICAgICBcIkdSSURfRVhQT1JUXCIsXG4gICAgICBcIlNFTEZfUFdfTkVUX09GX0dSSURcIixcbiAgICAgIFwiU0VMRl9TT0xBUl9QTFVTX1JFU1wiXG4gIF0sXG4gIFwiYWdlbnRcIjogXCJTaW1wbGVcIixcbiAgXCJzZWFzb25zXCI6IHtcbiAgICAgIFwiPHNlYXNvbiBuYW1lIC0gZS5nLiBTdW1tZXIgRFNUPlwiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcInNjaGVkdWxlXCI6IFwiPGUuZy4gV2Vla2RheT4gXCIsXG4gICAgICAgICAgICAgIFwiZGF5c1wiOiBbXG4gICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgICAgICAzLFxuICAgICAgICAgICAgICAgICAgNFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInBlcmlvZHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCIyMjowMFwiOiBcIk9mZi1QZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjA4OjAwXCI6IFwiUGVha1wiLFxuICAgICAgICAgICAgICAgICAgXCIxMTowMFwiOiBcIk9mZi1QZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjE3OjAwXCI6IFwiUGVha1wiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJzY2hlZHVsZVwiOiBcIjxlLmcuIFdlZWtlbmQ+XCIsXG4gICAgICAgICAgICAgIFwiZGF5c1wiOiBbXG4gICAgICAgICAgICAgICAgICA1LFxuICAgICAgICAgICAgICAgICAgNlxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInBlcmlvZHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCIwMDowMFwiOiBcIk9mZi1QZWFrXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcIjxzZWFzb24gbmFtZSAtIGUuZy4gV2ludGVyIFdTVD5cIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJzY2hlZHVsZVwiOiBcIjxlLmcuIFdlZWtkYXk+XCIsXG4gICAgICAgICAgICAgIFwicGVyaW9kc1wiOiB7XG4gICAgICAgICAgICAgICAgICBcIjIxOjAwXCI6IFwiT2ZmLVBlYWtcIixcbiAgICAgICAgICAgICAgICAgIFwiMDc6MDBcIjogXCJQZWFrXCIsXG4gICAgICAgICAgICAgICAgICBcIjEwOjAwXCI6IFwiT2ZmLVBlYWtcIixcbiAgICAgICAgICAgICAgICAgIFwiMTY6MDBcIjogXCJQZWFrXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIF1cbiAgfVxufVxuYGBgXG5UaGUgZm9sbG93aW5nIHBvaW50cyBwcm92aWRlIG1vcmUgZGV0YWlsIG9uIHRoZXNlIGVsZW1lbnRzOlxuXG4tIFsqKnJlcXVpcmVkKipdIFwibmFtZVwiIGlzIGEgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB1c2FnZSBwbGFuLiBGb3IgZXhhbXBsZTogXG5cIkF1cm9yYS1UQVMtVG9VXCIgZm9yIHRoZSBUYXNtYW5pYW4gQXVyb3JhIHRpbWUgb2YgdXNlIHBsYW4uIFxuLSBbKipyZXF1aXJlZCoqXSBcInJlcG9ydFwiIGxpc3RzIHRoZSBlbmVyZ3kgdmFyaWFibGVzIHRoYXQgeW91IHdhbnQgcmVwb3J0ZWQgdG8gZ3JhZmFuYVxuZm9yIHRoZSBwbGFuLiBBdmFpbGFibGUgdmFyaWFibGVzIGFyZSBkZWZpbmVkIGluIFxuW2Bjb21tb24ucHlgXSgjc3RyaW5ncy1mcm9tLWNvbW1vbnB5KSBzdHJpbmdzIGFib3ZlLiBOb3RlOiBhKSB5b3UgbXVzdCBzcGVjaWZ5IFxuYXQgbGVhc3Qgb25lIHJlcG9ydCB2YXJpYWJsZSBldmVuIGlmIHlvdSBkbyBub3QgcGxhbiB0byB1c2UgdGhlc2UgdmFyaWFibGVzLCBhbmQgYilcbkNvc3Qvc2F2aW5ncyB2YXJpYWJsZXMgYXJlIHNwZWNpZmllZCBpbiB0aGUgY2FsZW5kYXIgc2VjdGlvbi5cbi0gWyoqcmVxdWlyZWQqKl0gXCJhZ2VudFwiIHNwZWNpZmllcyB0aGUgdXNhZ2UgYWdlbnQgZm9yIGNhbGN1bGF0aW5nIGNvc3RzLiBSaWdodCBub3csIFxub25seSB0aGUgXCJTaW1wbGVcIiBhZ2VudCBpcyBhdmFpbGFibGUuXG4tIFsqKnJlcXVpcmVkKipdIFwic2Vhc29uc1wiLiBFYWNoIHBsYW4gKiptdXN0KiogY29udGFpbiBhdCBsZWFzdCBvbmUgc2Vhc29uLCBhbmQgY2FuIFxuY29udGFpbiBhbiBhcmJpdHJhcnkgbnVtYmVyIG9mIHNlYXNvbnMuIEFsbCBzZWFzb25zIGluIHRoZSBwbGFuIGhhdmUgc2hhcmUgdGhlIHNhbWUgXG5iYXNpYyB0YXJpZmYgc2NoZWR1bGUgc3RydWN0dXJlLCBidXQgdGhlIHRpbWluZyBkZXRhaWwgb2YgdGhlIHRhcmlmZiBzY2hlZHVsZXMgdmFyaWVzIFxuYmV0d2VlbiBzZWFzb25zICh0aGUgZXhwbGFuYXRpb24gYmVsb3cgbWFrZXMgdGhpcyBjbGVhcmVyKS4gU2Vhc29uIHRpbWluZ3MgYXJlIGRlZmluZWQgXG5pbiB0aGUgY2FsZW5kYXIgc2VjdGlvbiAoYW5kIEFSRSBOT1QgdGllZCB0byBwaHlzaWNhbCBzZWFzb25zKS5cblRoZSBydWxlcyBmb3Igc2Vhc29ucyBhcmU6XG4gIC0gWyoqcmVxdWlyZWQqKl0gRWFjaCBzZWFzb24gKiptdXN0KiogaGF2ZSBhIFwibmFtZVwiLiBcbiAgLSBbKipyZXF1aXJlZCoqXSBUaGUgZmlyc3Qgc2Vhc29uIG11c3QgZnVsbHkgZGVmaW5lICoqYWxsKiogb2YgdGhlIHRhcmlmZiBzY2hlZHVsZXNcbiAgdXNlZCBpbiB0aGUgcGxhbi4gSW4gdGhlIGV4YW1wbGUgYWJvdmUgdGhlIFwic3VtbWVyXCIgc2Vhc29uIGRlZmluZXMgYSBcIldlZWtkYXlcIiBhbmQgYSBcbiAgXCJXZWVrZW5kXCIgc2NoZWR1bGUuIFxuICAtIFsqKm9wdGlvbmFsKipdIFRoZSBzZWNvbmQgc2Vhc29uIGNhbiByZXBsYWNlIG9uZSBvciBtb3JlIG9mIHRoZSB0YXJpZmYgc2NoZWR1bGVzIFxuICBuYW1lZCBpbiB0aGUgZmlyc3Qgc2Vhc29uICh0ZWNobmljYWxseSwgaXQgY2FuIGFsc28gYWRkIG5ldyB0YXJpZmYgc2NoZWR1bGVzIC0gSSdkXG4gIGFkdmlzZSBhZ2FpbnN0IHRoaXMgdGhvdWdoIC0gb3V0Y29tZXMgd2lsbCBiZSB1bnByZWRpY3RhYmxlKS4gSW4gb3VyIGV4YW1wbGUgYWJvdmUsXG4gIHRoZSBcIldlZWtlbmRcIiBzY2hlZHVsZSBpcyB0aGUgc2FtZSBpbiBzdW1tZXIgYW5kIHdpbnRlciwgc28gaXQgaXMgbm90IHJlcGxhY2VkLlxuICBIb3dldmVyLCB0aGUgdGltaW5nIG9mIHRoZSBcIldlZWtkYXlcIiBzY2hlZHVsZSBkb2VzIGNoYW5nZSwgc28gd2UgcmVwbGFjZSB0aGF0LiBcbiAgLSBUaGUgdGhpcmQgYXBwbGllcyB0aGUgc2FtZSByZXBsYWNlbWVudCBsb2dpYywgYnV0IHRvIHRoZSBzZWNvbmQgc2Vhc29uLCBhbmQgc28gb24uXG5cbiAgVGhpcyBwcm9jZXNzIGlzIGludGVuZGVkIHRvIHNpbXBsaWZ5IGRlYWxpbmcgd2l0aCBtdWx0aS10YXJpZmYgdXNhZ2UgcGxhbnMgd2hlcmUgbm90XG4gIHRvbyBtdWNoIGNoYW5nZXMgYmV0d2VlbiBzZWFzb25zIC0gdGhlIGFsdGVybmF0aXZlIGlzIHRvIHJlcXVpcmUgZGVmaW5pdGlvbiBvZiBldmVyeVxuICB0YXJpZmYgaW4gZXZlcnkgc2Vhc29uIChpZiB1c2VycyBwcmVmZXIsIGl0IHdvdWxkIG5vdCBiZSBoYXJkIHRvIHN3aXRjaCB0byB0aGlzIG1vZGUpLiBcbi0gRmluYWxseSwgZWFjaCB0YXJpZmYgc2NoZWR1bGUgc3BlY2lmaWVzIHRhcmlmZiB0aW1pbmdzIGZvciBhIGdyb3VwIG9mIHdlZWtkYXlzLiBUaGVcbnJ1bGVzIGZvciB0YXJpZmYgc2NoZWR1bGVzIGFyZTpcbiAgLSBbKipyZXF1aXJlZCoqXSBUaGV5IG11c3QgaGF2ZSBhIHVuaXF1ZSBcInNjaGVkdWxlXCIgbmFtZSBpbiB0aGUgcGxhbiAoeW91IGNhbiByZS11c2VcbiAgdGhlIHNjaGVkdWxlIG5hbWUgaW4gb3RoZXIgcGxhbnMpLiBUaGUgbmFtZSBpcyByZXF1aXJlZCBpbiB0aGUgZmlyc3Qgc2Vhc29uIChpbml0aWFsXG4gIGRlZmluaXRpb24pIGFuZCBmdXR1cmUgc2Vhc29ucyAodG8gaWRlbnRpZnkgd2hpY2ggdGFyaWZmIHNjaGVkdWxlIHdpbGwgYmUgcmVwbGFjZWQpLlxuICAtIFsqKnJlcXVpcmVkKipdIFdoZW4gdGhleSBhcmUgZmlyc3QgZGVmaW5lZCBpbiB0aGUgZmlyc3Qgc2Vhc29uIG9mIHRoZSBwbGFuLCB5b3VcbiAgKiptdXN0Kiogc3BlY2lmeTpcbiAgICAtIFRoZSB3ZWVrIGRheXMgdGhlIHNjaGVkdWxlIHdpbGwgYXBwbHkgd2l0aCBhIFwiZGF5c1wiIGxpc3QgKDAgPSBNb25kYXksIFxuICAgIDYgPSBTdW5kYXkpLlxuICAgIC0gVGhlIHN0YXJ0IHRpbWVzIGZvciBlYWNoIHRhcmlmZiBkdXJpbmcgdGhlIGRheSB3aXRoIGEgXCJwZXJpb2RzXCIgZGljdGlvbmFyeS5cbiAgLSBbKipvcHRpb25hbCoqIFdoZW4gc2NoZWR1bGVzIGFyZSBkZWZpbmVkIGluIGFueSBzZWFzb24gYWZ0ZXIgdGhlIGZpcnN0LCB0aGV5IFxuICAqKm11c3QqKiBoYXZlIHRoZSBzYW1lIG5hbWUgYXMgdGhlIG9uZSBvZiB0aGUgc2NoZWR1bGVzIGluIHRoZSBmaXJzdCBzZWFzb24gYW5kXG4gICoqbXVzdCoqIGRlZmluZSBlaXRoZXIgXCJkYXlzXCIgYW5kIFwicGVyaW9kc1wiIChhbmQgKiptYXkqKiBkZWZpbmUgYm90aCksIHdoaWNoIHdpbGwgXG4gIHJlcGxhY2UgdGhlIHJlbGV2YW50IGVsZW1lbnRzIG9mIHRoZSB0YXJpZmYgc2NoZWR1bGUgaW4gdGhlIHByZWNlZGluZyBzZWFzb24uXG5cblxuICBTZWUgdGhlIGV4YW1wbGUgYWJvdmUgZm9yIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlc2UgZW50cmllcy4gXG5cbiAgU3BlY2lmaWMgbm90ZXMgb24gXCJwZXJpb2RzXCIgYW5kIFwiZGF5c1wiOlxuICAtIEF0IGxlYXN0IG9uZSBkYXkgKiptdXN0KiogYmUgc3BlY2lmaWVkIGluIFwiZGF5c1wiLlxuICAtIEF0IGxlYXN0IG9uZSBwZXJpb2QgKiptdXN0KiogYmUgc3BlY2lmaWVkIGluIFwicGVyaW9kc1wiLlxuICAtIEVhY2ggZW50cnkgaXMgXCJbdGFyaWZmIHN0YXJ0IHRpbWUgaW4gMjQ6MDAgbm90YXRpb25dXCI6IFwiW3RhcmlmZiBuYW1lXVwiLlxuICAtIFRhcmlmZnMgbXVzdCBhcHBlYXIgaW4gY2hyb25vbG9naWNhbCBvcmRlciEgVGhlIHVzYWdlIGVuZ2luZSBjYWxjdWxhdGVzIHRoZSB0YXJpZmZcbiAgYWN0aXZlIGR1cmF0aW9uIGFzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdHdvIGVudHJpZXMuXG4gIC0gWW91IGNhbiBwaWNrIGFueSBwZXJpb2QgdG8gc3RhcnQgdGhlIGxpc3QgKGJ1dCB0byBrZWVwIHlvdXIgaGVhZCBpbiBvbmUgcGllY2UsIGl0IFxuICBtYWtlcyBtb3N0IHNlbnNlIHRvIHN0YXJ0IHdpdGggdGhlIGZpcnN0IG9uZSBhZnRlciBtaWRuaWdodCBhbmQgZW5kIHdpdGggdGhlIGxhc3Qgb25lXG4gIGJlZm9yZSBtaWRuaWdodCkuXG4gIC0gVGhlIHVzYWdlIGVuZ2luZSBhdXRvbWF0aWNhbGx5IHJvbGxzIGFyb3VuZCBiZXR3ZWVuIHRoZSBsYXN0IGFuZCBmaXJzdCBlbnRyaWVzLCBhbmRcbiAgaGFuZGxlcyBtaWRuaWdodCBjcm9zc292ZXIgKHNvIHlvdSBkb24ndCBoYXZlIHRvIHRoaW5rIGFib3V0IHN0YXJ0IGFuZCBlbmQgb2YgZGF5XG4gIGlzc3VlcykuXG4gIC0gVGhlIHNjaGVkdWxlIHJlcGxhY2VtZW50IG1lY2hhbmlzbSByZXBsYWNlcyB0aGUgZW50aXJlIFwiZGF5c1wiIGFuZCBcInBlcmlvZHNcIiBlbnRyaWVzXG4gICh5b3UgY2FuJ3QgbW9kaWZ5IGEgc2luZ2xlIGRheSBvciBwZXJpb2QgZW50cnkgLSB5b3UgbXVzdCBmdWxseSByZXNwZWNpZnkgZGF5IGdyb3Vwc1xuICBhbmQgcGVyaW9kcyB3aXRoaW4gdGhlIGRheSkuXG5cbiMjIyBDYWxlbmRhciBzZWN0aW9uXG5cblRoZSBjYWxlbmRhciBzZWN0aW9uIGlzIGEgZGljdGlvbmFyeSBvZiBjYWxlbmRhciBlbnRyeSBkaWN0aW9uYXJpZXMsIHdoZXJlIGVhY2ggZW50cnkgXG5kaWN0aW9uYXJ5IGhhcyB0aGUgZm9sbG93aW5nIHN0cnVjdHVyZTpcblxuYGBgXG5cIjIwMjItMTAtMDZcIjoge1xuICAgIFwicGxhblwiOiBcIkF1cm9yYS1UQVMtVG9VXCIsXG4gICAgXCJzZWFzb25cIjogXCJTdW1tZXJcIixcbiAgICBcInRhcmlmZnNcIjoge1xuICAgICAgICBcIlBlYWtcIjoge1xuICAgICAgICAgICAgXCJHUklEX1NVUFBMWVwiOiAtMC4zMzM5OSxcbiAgICAgICAgICAgIFwiR1JJRF9FWFBPUlRcIjogMC4wODg4MyxcbiAgICAgICAgICAgIFwiU0VMRl9QV19ORVRfT0ZfR1JJRFwiOiAwLjMzMzk5LFxuICAgICAgICAgICAgXCJTRUxGX1NPTEFSX1BMVVNfUkVTXCI6IDAuMzMzOTksXG4gICAgICAgICAgICBcIlNVUFBMWV9DSEFSR0VcIjogLTAuMDQ1NzkyOTE2NjZcbiAgICAgICAgfSxcbiAgICAgICAgXCJPZmYtUGVha1wiOiB7XG4gICAgICAgICAgICBcIkdSSURfU1VQUExZXCI6IC0wLjE1NTUxLFxuICAgICAgICAgICAgXCJHUklEX0VYUE9SVFwiOiAwLjA4ODgzLFxuICAgICAgICAgICAgXCJTRUxGX1BXX05FVF9PRl9HUklEXCI6IDAuMTU1NTEsXG4gICAgICAgICAgICBcIlNFTEZfU09MQVJfUExVU19SRVNcIjogMC4xNTU1MSxcbiAgICAgICAgICAgIFwiU1VQUExZX0NIQVJHRVwiOiAtMC4wNDU3OTI5MTY2NlxuICAgICAgICB9XG4gICAgfVxufSxcbmBgYFxuXG5bKipyZXF1aXJlZCoqXSBUaGUgZGF0ZSBrZXkgc3BlY2lmaWVzIHRoZSBzdGFydGluZyBkYXRlIGZvciB0aGUgY2FsZW5kYXIgZW50cnkuIFRoZVxuZmlyc3QgZW50cnkgaW4gZGF0ZSBvcmRlciAqKm11c3QqKiBjb250YWluIHRoZSBmb2xsb3dpbmcgc3ViLWVsZW1lbnRzOlxuLSBbKipyZXF1aXJlZCoqXSBcInBsYW5cIjogXCJbcGxhbiBuYW1lXVwiLCB3aGVyZSBgcGxhbiBuYW1lYCBpcyB0aGUgcGxhbiB0aGF0IHdpbGwgYmVcbmFjdGl2ZSBmcm9tIHRoZSBzdGFydCBkYXRlLCBhbmQgbXVzdCBjb3JyZXNwb25kIHRvIG9uZSBvZiB0aGUgcGxhbnMgaW4gdGhlIFwicGxhbnNcIlxuc2VjdGlvbi5cbi0gWyoqcmVxdWlyZWQqKl0gXCJzZWFzb25cIjogXCJbc2Vhc29uIG5hbWVdXCIsIHdoZXJlIGBzZWFzb24gbmFtZWAgaXMgdGhlIHNlYXNvbiBvZlxuYHBsYW4gbmFtZWAgdGhhdCB3aWxsIGJlIGFjdGl2ZSBmcm9tIHRoZSBzdGFydCBkYXRlLCBhbmQgbXVzdCBtYXRjaCBvbmUgb2YgdGhlIHNlYXNvbnNcbmluIGBwbGFuIG5hbWVgLlxuLSBbKipyZXF1aXJlZCoqXSBcInRhcmlmZnNcIjogW2RpY3Rpb25hcnkgb2YgdGFyaWZmIHJhdGUgdGFibGVzXS4gSW4gdGhlIGFib3ZlIGV4YW1wbGUsXG5cIlBlYWtcIiBhbmQgXCJPZmYtcGVha1wiIHJhdGUgdGFibGVzIHNwZWNpZnkgY29zdCBhbmQgc2F2aW5ncyByYXRlcyBmb3IgdmFyaW91cyBzdXBwbGllc1xuYW5kIGV4cG9ydHMgLSB5b3UgY2FuIGZsaXAgdGhlIHNpZ24gb2Ygc2F2aW5ncyBhbmQgY29zdHMgaWYgeW91IHByZWZlci4gVW5mb3J0dW5hdGVseSwgXG5pZiB5b3UgYXJlIG5vdCBpbnRlcmVzdGVkIGluIGNvc3QgZGF0YSwgeW91IG11c3Qgc3RpbGwgc3BlY2lmeSBhdCBsZWFzdCBvbmUgdGFyaWZmIHJhdGVcbnRhYmxlLCBidXQgeW91IGNhbiBpZ25vcmUgY29zdCBvdXRwdXQgaW4geW91ciBmaW5hbCBkYXNoYm9hcmQuIFxuXG4gIEFnZW50IGltcGxlbWVudGF0aW9uIG5vdGU6IEFnZW50cyBnZW5lcmFsbHkgc2hvdWxkIHJlcG9ydCBjb3N0IGFuZCBzYXZpbmdzIGZvciBhbnkgXG4gIHZhcmlhYmxlIHNwZWNpZmllZCBpbiB0aGUgcmF0ZSB0YWJsZXMuXG5cblNlZSB0aGUgZm9sbG93aW5nIHNlY3Rpb24gZm9yIGEgZGlzY3Vzc2lvbiBvZiBob3cgdGhlIHNpbXBsZSB1c2FnZSBhZ2VudCB3b3JrcyBhbmQgZm9yIGEgXG5kaXNjdXNzaW9uIG9mIHdoeSBJIHVzZSB0aGUgc3BlY2lhbCB2YXJpYWJsZXMgYFNFTEZfU09MQVJfUExVU19SRVNgIGFuZCBcbmBTRUxGX1BXX05FVF9PRl9HUklEYCBpbiBteSBzYXZpbmdzIGNhbGN1bGF0aW9ucyAoaWYgeW91IGRvbid0IGxpa2UgbXkgbG9naWMsIHlvdSBjYW5cbnVzZSBhbnkgb2YgdGhlIG90aGVyIHZhcmlhYmxlcyBzcGVjaWZpZWQgaW4gYGNvbW1vbi5weWAgaW5zdGVhZCkuXG5cblRoZSBzZWNvbmQgYW5kIGZvbGxvd2luZyBjYWxlbmRhciBlbnRyaWVzIG9wZXJhdGUgYnkgZGlmZmVyZW5jZSB0byB0aGUgcHJldmlvdXMgZW50cnkgaW5cbmNhbGVuZGFyIG9yZGVyLiBZb3UgbWF5IHNwZWNpZnkgYW55IG9yIGFsbCBvZiB0aGUgZWxlbWVudHMgcmVxdWlyZWQgZm9yIHRoZSBmaXJzdCBlbnRyeSxcbmFuZCB0aGVzZSB3aWxsIHRoZW4gcmVwbGFjZSB0aGUgdmFsdWVzIHVzZWQgaW4gdGhlIHRoZSBwcmV2aW91cyBlbnRyeS4gSW4gdGhlIGZvbGxvd2luZ1xuZXhhbXBsZSwgdGhlIHBsYW4gYW5kIHRhcmlmZnMgcmVtYWluIHRoZSBzYW1lIGFzIHRoZSBwcmV2aW91cyBlbnRyeSwgYnV0IHRoZSBzZWFzb24gaXNcbmNoYW5nZWQgdG8gV2ludGVyLlxuYGBgXG5cIjIwMjMtMDQtMDJcIjoge1xuICAgIFwic2Vhc29uXCI6IFwiV2ludGVyXCJcbn1cbmBgYFxuIyMgU2ltcGxlIHVzYWdlIGFnZW50XG5cblRoZSBzaW1wbGUgdXNhZ2UgYWdlbnQgaXMgdmVyeSBzdHJhaWdodCBmb3J3YXJkLiBGb3IgZWFjaCBlbmVyZ3kgdmFyaWFibGUgaW4gdGhlIHJhdGUgXG50YWJsZSwgaXQgY2FsY3VsYXRlcyB0aGUgY29zdC9zYXZpbmcgYXMgYFZhcmlhYmxlIHZhbHVlIHggdmFyaWFibGUgcmF0ZWAsIGFuZCBwZXJmb3JtcyBcbnRoaXMgY2FsY3VsYXRpb24gZm9yIGVhY2ggdGltZSBpbnRlcnZhbCByZWNvcmQgcmV0dXJuZWQgZnJvbSB0aGUgaW5mbHV4IGRhdGFiYXNlLlxuXG5BcyBub3RlZCBwcmV2aW91c2x5LCBJIHVzZSB0d28gc3BlY2lhbCB2YXJpYWJsZXMgaW4gbXkgc2F2aW5ncyBjYWxjdWxhdGlvbnM6XG5cbi0gYFNFTEZfU09MQVJfUExVU19SRVNgLCB3aGljaCBpcyB0aGUgdG90YWwgc29sYXIgZW5lcmd5IGFsbG9jYXRlZCBmb3IgaG9tZSB1c2UgcGx1c1xuYW55IHJlc2lkdWFsIGZyb20gdGhlIGRlbWFuZCBhbGxvY2F0aW9uIGNhbGN1bGF0aW9ucy4gSSBkbyB0aGlzIGJhc2VkIG9uIHRoZSBmb2xsb3dpbmdcbnJlYXNvbmluZzpcbiAgLSBBcyBub3RlZCBwcmV2aW91c2x5LCB0aGUgZmluYWwgcmVzaWR1YWwgbWF5IGJlIG5vbi16ZXJvIGVpdGhlciBkdWUgY2FsY3VsYXRpb24gXG4gIG1ldGhvZHMgKGludGVncmF0aW9uLCByb3VuZGluZywgZXRjKSBvciBUZXNsYSdzIGNhcHJpY2UuXG4gIC0gSSdtIGFyYml0cmFyaWx5IGFzc3VtaW5nIHRoYXQgVGVzbGEncyBjYWxjdWxhdGlvbiBvZiBob3VzZWhvbGQgZGVtYW5kIGFuZCBncmlkXG4gIHN1cHBseSBpcyBjb3JyZWN0LiBIZW5jZSwgYW55IHJlc2lkdWFsIGRlbWFuZCBpcyByZWFsIGFuZCBzaG91bGQgYmUgc3VwcGxpZWQgYnkgdGhlXG4gIHNvbGFyIHN5c3RlbSBvciB0aGUgcG93ZXJ3YWxsLiBJJ3ZlIGFyYml0cmFyaWx5IGFzc3VtZWQgdGhlIHNvbGFyIHN5c3RlbSBzdXBwbGllcyBcbiAgdGhpcyByZXNpZHVhbC4gXG5cbiAgSWYgeW91IGRvbid0IGxpa2UgdGhpcyBhc3N1bXB0aW9uLCBJIHN1Z2dlc3QgeW91IHVzZSBgU09MQVJfVE9fSE9NRWAgaW5zdGVhZCBhbmQgXG4gIGlnbm9yZSB0aGUgcmVzaWR1YWwuXG5cbi0gYFNFTEZfUFdfTkVUX09GX0dSSURgLCB3aGljaCBpcyBlbmVyZ3kgc3VwcGxpZWQgdG8gdGhlIGhvdXNlIGxlc3MgZW5lcmd5IHVzZWQgdG8gXG5jaGFyZ2UgdGhlIHBvd2Vyd2FsbCwgd2hlcmUgSSB2YWx1ZSB0aGUgcG93ZXJ3YWxsIHNhdmluZ3MgcmF0ZSBhcyB0aGUgbmVnYXRpdmUgb2YgdGhlIFxuZ3JpZCBzdXBwbHkgY29zdCBhdCB0aGUgdGltZSAoZS5nLiBwZWFrL29mZiBwZWFrIGdyaWQgc3VwcGx5IG9mIC0kMC4zMC8tJDAuMjAgcmVzdWx0cyBpbiBcbmEgcG93ZXJ3YWxsIHNhdmluZyBvZiAkMC4zMC8kMC4yMCkuIFRoZSBhcmd1bWVudCBoZXJlIGlzIGEgYml0IG1vcmUgc3VidGxlIHRoYW4gdGhlXG5wcmV2aW91cyBjYXNlIC0gaW4gZWZmZWN0IHRoZSBwb3dlcndhbGwgc2F2aW5nIGlzIHRoZSBzdW0gb2YgdHdvIGVmZmVjdHM6XG4gIC0gVG90YWwgcG93ZXJ3YWxsIHN1cHBseSB0byBob21lIGBYYCBnZW5lcmF0ZXMgYSBzYXZpbmcgb2YgYFggKiByYCBpbiBhIGdpdmVuIHBlcmlvZC4gXG4gIC0gSWYgd2UgY2hhcmdlIHRoZSBwb3dlcndhbGwgd2l0aCBhbiBhbW91bnQgYFlgIGZyb20gdGhlIGdyaWQgaW4gdGhlIHNhbWUgcGVyaW9kIChlLmcuIFxuICB0aGUgYmF0dGVyeSBicmVha3MgYW4gaG91ciBpbnRvIDQwIG1pbnV0ZXMgcG93ZXJpbmcgdGhlIGhvbWUsIDEwIG1pbnV0ZXMgY2hhcmdpbmcgZnJvbVxuICB0aGUgZ3JpZCwgMTAgbWludXRlcyBpZGxlKSwgd2UgICBkb24ndCBnZXQgYSBob21lIHN1cHBseSBiZW5lZml0IGZyb20gdGhhdCBncmlkIHBvd2VyXG4gIHVudGlsIGl0IGRpc2NoYXJnZXMgdG8gdGhlIGhvbWUuIFNvIHdlICBhbGxvY2F0ZSBhICoqbmVnYXRpdmUqKiBzYXZpbmcgb2YgYC1ZICogcmAuXG4gIC0gVGFrZW4gdG9nZXRoZXIsIHdlIGdldCB0aGUgXCJzYXZpbmdzXCIgZnJvbSB0aGUgcG93ZXIgd2FsbCBvZiBgKFggLSBZKSAqIHJgLCBvciBcbiAgcG93ZXJ3YWxsIHN1cHBseSB0byBob21lIG5ldCBvZiBncmlkIGNoYXJnaW5nIHRvIHBvd2Vyd2FsbCBmb3IgdGhhdCBwZXJpb2QuXG5cbiAgVGhpcyBhcHByb2FjaCBoYXMgdHdvIGJlbmVmaXRzOlxuICAtIEZpcnN0LCBpdCBkZWFscyB3aXRoIHRoZSBwb3RlbnRpYWwgcHJvYmxlbSBvZiB2YWx1aW5nIGVuZXJneSB1c2UgdHdpY2U6IG9uY2Ugd2hlblxuICBidXlpbmcgZnJvbSB0aGUgZ3JpZCB0byBjaGFyZ2UgdGhlIGJhdHRlcnksIGFuZCBhZ2FpbiB3aGVuIGRpc2NoYXJnaW5nIHRoZSBzYW1lIGVuZXJneVxuICBmcm9tIHRoZSBiYXR0ZXJ5IGZvciB1c2UgYnkgdGhlIGhvdXNlLiBGb3IgZXhhbXBsZSwgaWYgSSB0YWtlIGFuIGV4YW1wbGUgb2Ygc3BlbmRpbmdcbiAgNDBjIHRvIGNoYXJnZSB0aGUgYmF0dGVyeSB3aXRoIDJrV2ggYXQgbmlnaHQgYW5kIHRoZW4gdXNpbmcgdGhhdCAya1dIIHRoZSBuZXh0IGRheSBhdFxuICB0aGUgc2FtZSByYXRlIG9mIDIwYy9rV2gsIHRoZW5cbiAgICAtIFVzaW5nIGEgc2ltcGxlIG1vZGVsLCBJIHBheSA0MGMgdG8gZmlsbCB0aGUgYmF0dGVyeSwgYW5kIHRoZW4gcmVjb3ZlciA0MGMgaW4gXG4gICAgc2F2aW5ncyB3aGVuIEkgdXNlIHRoZSBncmlkIHBvd2VyLiBXaGljaCByZXN1bHRzIGluIGZyZWUgZWxlY3RyaWNpdHkuIFRvIGZpeCB0aGlzIFxuICAgIHNpbXBsZSBtb2RlbCByZXF1aXJlcyB0cmFja2luZyBib3RoIHNvbGFyIGFuZCBncmlkIGVuZXJneSBpbiB0aGUgYmF0dGVyeSAod2hpY2ggSSdtXG4gICAgdG9vIGxhenkgdG8gY29udGVtcGxhdGUpLCBvciBkb2luZyBzb21lIGNvbXBsaWNhdGVkIG1hdGggd2l0aCBzYXZpbmdzIHJhdGVzIChhZ2FpbixcbiAgICB0b28gbGF6eSkuXG4gICAgLSBVc2luZyB0aGUgbmV0IG9mIGdyaWQgbW9kZWwsIHRoZSBiYXR0ZXJ5IGluIGVmZmVjdCBwYXlzIDQwYyBmb3IgdGhlIGdyaWQgY2hhcmdlIFxuICAgIGVuZXJneSBhbmQgdGhlbiByZWNvdmVycyB0aGF0IDQwYyB3aGVuIGl0IGRpc2NoYXJnZXMgdGhlIGVuZXJneSwgcmVzdWx0aW5nIGluIHplcm9cbiAgICBzYXZpbmcgYXNzb2NpYXRlZCB3aXRoIHRoZSBncmlkIGVuZXJneSBpbiBhbmQgb3V0IG9mIHRoZSBwb3dlcndhbGwgYW5kIHRoZSBjb3JyZWN0XG4gICAgY2hhcmdlIG9mIDQwYyBmb3IgdGhlIG9yaWdpbmFsIHN1cHBseSBvZiBncmlkIHBvd2VyIChtb3JlIG9yIGxlc3MgaG93IHdlJ2QgbGlrZSB0aGVcbiAgICBtYXRoIHRvIHdvcmspLlxuICAtIFNlY29uZGx5LCBhbmQgbW9yZSBpbXBvcnRhbnRseSwgaXQgYXV0b21hdGljYWxseSBoYW5kbGVzIGdyaWQgc3VwcGx5IGF0IG9uZSB0YXJpZmZcbiAgYW5kIGRpc2NoYXJnZSBhdCBhbm90aGVyLiBGb3IgZXhhbXBsZSwgaWYgd2UgY2hhcmdlIHRoZSBiYXR0ZXJ5IHdpdGggMmtXaCBhdCBhbiBvZmYgXG4gIHBlYWsgdGFyaWZmIG9mIDIwYyBhbmQgb3VyIHBlYWsgdGFyaWZmIGlzIDMwYywgdGhlbjpcbiAgICAtIFdlIHBheSA0MGMgZm9yIHRoZSBncmlkIHN1cHBseS5cbiAgICAtIFRoZSBiYXR0ZXJ5IGhhcyBhIHNhdmluZ3MgcmVkdWN0aW9uIG9mIDQwYyBhdCB0aGUgdGltZSBvZiBzdXBwbHkuIFxuICAgIC0gSWYgd2UgdXNlIHRoZSBlbmVyZ3kgYXQgb2ZmIHBlYWsgdGltZSwgdGhlIGJhdHRlcnkgZ2VuZXJhdGVzIHNhdmluZ3Mgb2YgNDBjIChuZXRcbiAgICAwYykuXG4gICAgLSBCdXQsIGlmIHdlIHVzZSB0aGUgZW5lcmd5IGF0IHBlYWsgdGltZSwgdGhlIGJhdHRlcnkgZ2VuZXJhdGVzIGEgc2F2aW5ncyBvZiA2MGMgXG4gICAgKG5ldCAyMGMpLiBUaGlzIGVmZmVjdCB3b3VsZCByZXZlcnNlIGZvciBjaGFyZ2luZyBvbiBwZWFrIChuZXQgc2F2aW5ncyByZWR1Y3Rpb24gb2ZcbiAgICAyMGMpLlxuICBcbkFzIGNhbiBiZSBzZWVuIGZyb20gdGhpcywgdGhlIG5ldCBvZiBncmlkIGNoYXJnaW5nIGFwcHJvYWNoIHByb3ZpZGVzIGEgcmVsYXRpdmVseSBcbmVsZWdhbnQgKGlmIG5vdCBwZXJmZWN0bHkgYWNjdXJhdGUpIG1ldGhvZCBmb3IgYWNjb3VudGluZyBmb3IgZ3JpZCBzdXBwbHkgYXJiaXRyYWdlIFxudXNpbmcgdGhlIGJhdHRlcnkuXG5cblRoZSBtYWluIGRpc2FkdmFudGFnZSBvZiB0aGlzIGFwcHJvYWNoIGlzIHRoYXQgaXQgZG9lc24ndCBhY2NvdW50IGNvcnJlY3RseSBmb3Igcm91bmRcbnRyaXAgZWZmaWNpZW5jeSBvbiB0aGUgZ3JpZCBlbmVyZ3kuIEJ1dCB0byBkbyB0aGlzLCB3ZSdkIG5lZWQgdG8gYnVpbGQgYW4gYWdlbnQgdGhhdCBcbnRyYWNrcyBzdXBwbHkgYW5kIGRpc2NoYXJnZSBmcm9tIHNvbGFyIGFuZCBncmlkIGFuZCBkbyBhIGNvbnRpbnVvdXMgYWxsb2NhdGlvblxuY2FsY3VsYXRpb24gYXMgdG8gd2hpY2ggc3VwcGx5IGlzIGdvaW5nIHZpYSB0aGUgcG93ZXJ3YWxsIHRvIHRoZSBob21lLiBUaGlzIHByb2JsZW1cbnByb21wdGx5IHdlbnQgaW50byBteSBcblwidGhpcy1pcy10b28taGFyZC1hbmQtdGhlLWN1cnJlbnQtYXBwcm94aW1hdGlvbi1pcy1nb29kLWVub3VnaFwiIGJhc2tldC5cblxuSWYgeW91IGRvbid0IGxpa2UgdGhpcyBhcHByb2FjaCwgeW91IGNhbiB1c2UgYFBXX1RPX0hPTUVgIGluc3RlYWQuIEJ1dCBub3RlIHRoYXQgeW91XG53aWxsIG5lZWQgdG8gYWRqdXN0IHlvdXIgc2F2aW5ncyByYXRlIHRvIG1hbmFnZSB0aGUgZG91YmxlIGRpcHBpbmcgZWZmZWN0IGFib3ZlLCBhbmQgaXQgXG5kb2Vzbid0IGFkZHJlc3MgdGhlIGlzc3VlIG9mIGNoYXJnaW5nIGF0IG9uZSB0YXJpZmYgYW5kIGRpc2NoYXJnaW5nIGF0IGFub3RoZXIuIEEgZmluYWxcbmFsdGVybmF0aXZlIGlzIHRvIGltcGxlbWVudCBhIGJldHRlciB1c2FnZSBhZ2VudCB5b3Vyc2VsZiAob2ZmZXJzIHdlbGNvbWVkISkuXG5cbiMjIE90aGVyIHVzYWdlIGFnZW50c1xuXG5SaWdodCBub3csIEkgaGF2ZSBvbmx5IGltcGxlbWVudGVkIHRoZSBzaW1wbGUgdXNhZ2UgYWdlbnQgZGV0YWlsZWQgaW4gdGhlIHByZXZpb3VzIFxuc2VjdGlvbi4gSG93ZXZlciwgdGhlIHN5c3RlbSBwcm92aWRlcyBob29rcyBmb3IgZXh0ZW5zaW9uIHdpdGggYWRkaXRpb25hbCB1c2FnZSBhZ2VudHMuIFxuSWYgeW91IGtub3cgeW91ciB3YXkgYXJvdW5kIHB5dGhvbiwgeW91IGNhbiBmb2xsb3cgdGhlIHN0cnVjdHVyZSBvZiBgc2ltcGxlX2FnZW50LnB5YCB0b1xuYnVpbGQgeW91ciBvd24gYWdlbnQgKGlmIG5vdCwgbGV0IG1lIGtub3cgdmlhIGFuIGlzc3VlIGFuZCBJJ2xsIHNlZSBpZiBJIGNhbiBoZWxwIGJ1aWx0XG5hbiBhZ2VudCBmb3IgeW91ciB1c2UgY2FzZSkuXG5cbiMgR3JhZmFuYSBzZXR1cFxuXG4jIyBKU09OIGRhdGFzb3VyY2VcblxuVE9ETyBhZGQgaW1hZ2VzIHRvIHRoaXMgc2VjdGlvbi5cblxuSWYgeW91IGFyZSB1c2luZyBhIHRlc3QgdXNhZ2Ugc2VydmVyLCBzdGFydCBpdCBub3cuIEZvciBhIGZpcnN0IHRpbWUgcnVuLCBJJ2Qgc3VnZ2VzdFxudXNpbmcgdGhlIGV4YW1wbGUgYHVzYWdlLmpzb25gIHdpdGggZWRpdHMgdG8gcmVmbGVjdCB5b3VyIGluZmx1eCBob3N0bmFtZSBhbmQgXG5sb2NhbCB0aW1lem9uZS4gXG5cbkZyb20gdGhlIGdlbmVyYWwgZ3JhZmFuYSBjb25maWd1cmF0aW9uIChib3R0b20gbGVmdCk6XG5cbi0gU2VsZWN0IGBEYXRhIHNvdXJjZXNgLlxuLSBDbGljayBgQWRkIGRhdGEgc291cmNlYCBhbmQgYWRkIGEgSlNPTiBkYXRhIHNvdXJjZS5cbi0gR2l2ZSBpdCBhIG5hbWUgLSB0aGUgZXhhbXBsZSBkYXNoIGJvYXJkIHVzZXMgYEpTT04gVXNhZ2VgLiBcbi0gU2V0IHRoZSBVUkwgdG86IGBodHRwOi8vPGhvc3RuYW1lPjo8cG9ydD4vdXNhZ2VfZW5naW5lYC4gVGhlIGRlZmF1bHQgdXNhZ2UgZW5naW5lIHBvcnRcbmlzIDkwNTAsIGJ1dCB5b3UgY2FuIG92ZXJyaWRlIHRoaXMgdmlhIHRoZSBgVVNBR0VfUE9SVGAgZW52aXJvbm1lbnQgdmFyaWFibGUuXG4tIEhpdCBcIlNhdmUgYW5kIFRlc3RcIi4gWW91IHNob3VsZCBzZWUgdHdvIGdyZWVuIHRpY2sgbWVzc2FnZXMgXCJEYXRhc291cmNlIHVwZGF0ZWRcIiBhbmQgXG5cIkRhdGEgc291cmNlIGlzIHdvcmtpbmdcIi4gXG5cbiMjIyBEYXRhc291cmNlIHRyb3VibGVzaG9vdGluZ1xuXG5JZiB0aGUgdXNhZ2UgZW5naW5lIHNlcnZpY2UgaGFzIG5vdCBzdGFydGVkIHByb3Blcmx5LCB0aGUgc2Vjb25kIG1lc3NhZ2Ugd2lsbCBzaG93IGEgXG5ncmVlbiBcIlRlc3RpbmcgLi4uXCIgZm9yIGEgd2hpbGUsIGZvbGxvd2VkIGJ5IGEgcmVkL3BpbmsgXCJHYXRld2F5IFRpbWVvdXRcIi5cblxuSWYgdGhlIGRhdGFzb3VyY2UgdXJsIGlzIGluY29ycmVjdCwgdGhlIHNlY29uZCBtZXNzYWdlIHdpbGwgcmVhZDogXCJOb3QgRm91bmRcIi4gXG5cbklmIHRoZSBzZXJ2ZXIgaGFzIHN0YXJ0ZWQgYW5kIHRoZSB1cmwgaXMgY29ycmVjdCwgYnV0IHRoZXJlIGlzIHByb2JsZW0gd2l0aCB0aGUgdXNhZ2VcbmVuZ2luZSBjb25maWd1cmF0aW9uLCB0aGUgc2Vjb25kIG1lc3NhZ2Ugd2lsbCByZWFkOiBcInN0YXR1cyBjb2RlIDU5OVwiLiBJbiB0aGlzIGNhc2UsXG50cnk6XG5cbi0gVXNpbmcgYSB3ZWIgYnJvd3NlciB0byBvcGVuIGBodHRwOi8vPGhvc3RuYW1lPjo8cG9ydD4vdXNhZ2VfZW5naW5lYC4gVGhlIHBhZ2UgbWF5IFxuZ2l2ZSBzb21lIGhpbnRzLlxuLSBDaGVjayB0aGUgc2VydmVyIGxvZyAoaWYgeW91IGFyZSBydW5uaW5nIGRvY2tlciwgY2hlY2sgdGhlIGRvY2tlciBsb2cpLlxuLSBJZiBub25lIG9mIHRoaXMgaGVscHMsIHJhaXNlIGFuIGlzc3VlIGF0OiBcbiAgYGh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvaXNzdWVzYC5cblxuIyMjIEpTT04gcGF5bG9hZFxuXG5UaGUgdXNhZ2UgZGF0YXNvdXJjZSBzdXBwb3J0cyBhIGBwYXlsb2FkYCBkaWN0aW9uYXJ5LCB3aGljaCBjYW4gYmUgc3BlY2lmaWVkIGluIHRoZSBcbmdyYWZhbmEgcXVlcnkgY29uZmlndXJhdGlvbiwgYXMgc2hvd24gaW4gVE9ETyBpbnNlcnQgc2NyZWVuIHNob3QuIFRPRE8gVGhpcyBtYXkgYmVsb25nXG5pbiB0aGUgbmV4dCBzZWN0aW9uP1xuXG5UaGUgc3VwcG9ydGVkIHBheWxvYWQgZW50cmllcyBhcmU6XG5cbmBgYFxue1xuICBcInN1bW1hcnlcIjogW3RydWUgfCBmYWxzZV0sIFxuICBcIm1vbnRoX3RvX2RhdGVcIjogW3RydWUgfCBmYWxzZV0sIFxuICBcInllYXJfdG9fZGF0ZVwiOiBbdHJ1ZSB8IGZhbHNlXSwgXG4gIFwicmVzYW1wbGVcIjogW3RydWUgfCBmYWxzZV0sIFxufVxuYGBgXG4xKSBJZiBgc3VtbWFyeWAgaXMgYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgdmFsdWVzIGZvciBlYWNoIHZhcmlhYmxlIG92ZXIgdGhlIFxucmVwb3J0aW5nIHJhbmdlIGFyZSBzdW1tZWQgdG8gZ2l2ZSB0b3RhbCBwb3dlciBhbmQgdG90YWwgY29zdHMsIGFuZCB0aGUgcmVzdWx0aW5nIHRvdGFsc1xuYXJlIHJldHVybmVkIChwZXIgaW50ZXJ2YWwgdmFsdWVzIGFyZSBub3QgcmVwb3J0ZWQvZGlzY2FyZGVkKS4gTm90ZSB0aGF0IHRyYW5zZm9ybXNcbmNhbiBiZSB1c2VkIGluIGdyYWZhbmEgdG8gZ2V0IHRoZSBzYW1lIHJlc3VsdCBpZiB5b3Ugd2FudCB0byB3b3JrIHdpdGggYm90aCB0aW1lIHNlcmllc1xuYW5kIHN1bW1hcnkgdmFsdWVzICh1c2UgYGZhbHNlYCBpbiB0aGlzIGNhc2UpLiBcblxuMikgU2V0dGluZyBgbW9udGhfdG9fZGF0ZWAgdG8gYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgcmVwb3J0IHRpbWUgcmFuZ2UgaXMgXG5yZXBsYWNlZCB3aXRoIHRoZSBjdXJyZW50IGNhbGVuZGFyIG1vbnRoICh1dGlsaXR5IGZvciBkYXNoYm9hcmQgcmVwb3J0aW5nKS4gQm90aCBcbmBzdW1tYXJ5YCBhbmQgYHJlc2FtcGxlYCBhcHBseSBub3JtYWxseS4gXG5cbjMpIFNldHRpbmcgYHllYXJfdG9fZGF0ZWAgdG8gYHRydWVgIChkZWZhdWx0IGBmYWxzZWApLCB0aGUgcmVwb3J0IHRpbWUgcmFuZ2UgaXMgXG5yZXBsYWNlZCB3aXRoIHRoZSBjdXJyZW50IHllYXIgYmFzZWQgb24gdGhlIGB5ZWFyX2FuY2hvcmAgc2V0dGluZyAodXRpbGl0eSBmb3IgZGFzaGJvYXJkXG5yZXBvcnRpbmcpLiBCb3RoIGBzdW1tYXJ5YCBhbmQgYHJlc2FtcGxlYCBhcHBseSBub3JtYWxseS4gSWYgYG1vbnRoX3RvX2RhdGVgIGFuZCBcbmB5ZWFyX3RvX2RhdGVgIGFyZSBib3RoIHRydWUsIGB5ZWFyX3RvX2RhdGVgIHRha2VzIHByaW9yaXR5IGFuZCBpcyByZXBvcnRlZC5cblxuNCkgSWYgYHJlc2FtcGxlYCBpcyBgdHJ1ZWAgKG5vdGU6IHVucXVvdGVkLCBsb3dlciBjYXNlISksIHRoZSB1c2FnZSBkYXRhIGlzIHJlc2FtcGxlZFxuICAgYWNjb3JkaW5nIHRvIHRoZSBmb2xsb3dpbmcgcnVsZXM6IFxuXG4gICAgfCBRdWVyeSB0aW1lIHJhbmdlIHwgUmVzYW1wbGluZyB8XG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS18XG4gICAgfCBXaXRoaW4gYSBzaW5nbGUgZGF5ICAgIHwgSG91cmx5ICAgICB8XG4gICAgfCBXaXRoaW4gYSBzaW5nbGUgbW9udGggIHwgV2Vla2x5ICAgICB8XG4gICAgfCBXaXRoaW4gYSBzaW5nbGUgeWVhciAgIHwgTW9udGhseSAgICB8XG4gICAgfCBMYXJnZXIgaW50ZXJ2YWxzICAgICAgIHwgWWVhcmx5ICAgICB8XG5cbiAgICBJbiB0aGlzIGNvbnRleHQgd2l0aGluIGEgc2luZ2xlIGRheSBtZWFucyB0aGUgcXVlcnkgaW50ZXJ2YWwgaXMgZm9yIG9uZSBjYWxlbmRhciBkYXlcbiAgICBtYXhpbXVtLCBhbmQgc28gb24gZm9yIHRoZSBvdGhlciBpbnRlcnZhbHMuIElmIHJlc2FtcGxlIGlzIHNldCB0byBmYWxzZSwgdGhlIGRhdGEgaXMgXG4gICAgbm90IHJlc2FtcGxlZCBhbmQgb3V0cHV0IGlzIHJldHVybmVkIGF0IHRoZSByYXcgaW5mbHV4IGRhdGFiYXNlIHF1ZXJ5IGludGVydmFscy4gXG5cbiAgICBUaGUgZGVmYXVsdCByZXNhbXBsaW5nIGlzIGB0cnVlYCwgYW5kIHRoaXMgY2FuIGFsc28gYmUgb3Zlci1yaWRkZW4gaW4gYHVzYWdlLmpzb25gLlxuICAgIElmIGBzdW1tYXJ5YCBpcyBgdHJ1ZWAsIGByZXNhbXBsZWAgaXMgaWdub3JlZC5cblxuIyMgR3JhZmFuYSBEYXNoYm9hcmQgc2V0dXBcblxuVE9ETyB3cml0ZSB0aGlzIHNlY3Rpb24uXG5cbk5vdGU6IGFzIG9mIHZlcnNpb24gMC45LjQsIHRoZSBzYW1wbGUgZ3JhZmFuYSBmaWxlcyBkaXNjdXNzZWQgaW4gdGhpcyBzZWN0aW9uIGFyZSBoZWxkXG5hdDogXG5odHRwczovL2dpdGh1Yi5jb20vQnVvbmdpb3Jub1RleGFzL1Bvd2Vyd2FsbC1EYXNoYm9hcmQvdHJlZS9tYWluL3Rvb2xzL3VzYWdlLXNlcnZpY2UuXG5cbkluIHRoZSBpbnRlcmltLCBJJ3ZlIHByb3ZpZGVkIGV4YW1wbGUgZGFzaGJvYXJkIGNhbGxlZCBgZXhhbXBsZV9kYXNoYm9hcmQuanNvbmAuIEltcG9ydFxudGhpcyBpbnRvIGdyYWZhbmEgYW5kIGhhdmUgYW4gZXhwbG9yZS5cblxuIyBJbnN0YWxsYXRpb24gZm9yIGRldmVsb3BtZW50L3Rlc3RpbmcgXG5cbiMjIFRlc3RpbmcgcHdkdXNhZ2VcblxuQXMgb2YgdmVyc2lvbiAwLjkuNCwgYHB3ZHVzYWdlYCBpcyBhdmFpbGFibGUgYXMgYSBweXBpIHBhY2thZ2UsIGFuZCBpdCBhbmQgaXRzIFxuZGVwZW5kZW5jaWVzIGNhbiBiZSBpbnN0YWxsZWQgdXNpbmcgcGlwLiBUaGlzIGlzIHRoZSByZWNvbW1lbmRlZCBtZXRob2QgaWYgeW91IHdhbnQgdG9cbnRlc3QgdGhlIHNlcnZpY2UgYW5kIGRvbid0IHdhbnQgdG8gc2V0IHVwIHRoZSBkb2NrZXIgY29udGFpbmVyIG9yIGRvIGFueSBkZXZlbG9wbWVudC5cblxuT3B0aW9uYWwsIGJ1dCBzdHJvbmdseSByZWNvbW1lbmRlZDogc2V0IHVwIGEgcHl0aG9uIHZpcnR1YWwgZW52aXJvbm1lbnQgZm9yIGluc3RhbGxpbmdcbmFuZCBydW5uaW5nIGBwd2R1c2FnZWAgKHBsZWFzZSByZWZlciB0byB0aGUgcHl0aG9uIGRvY3VtZW50YXRpb24gZm9yIGRldGFpbHMpLiBUbyBcbmluc3RhbGw6XG5gYGBcbnBpcCBpbnN0YWxsIHB3ZHVzYWdlXG5gYGBcblxuQWZ0ZXIgaW5zdGFsbGF0aW9uLCB5b3UgY2FuIHJ1biB0aGUgc2VydmVyIHdpdGg6XG5gYGBcbnB5IC1tIHB3ZHVzYWdlLnNlcnZlclxuYGBgXG5JZiB5b3Ugd2FudCB0byBnZW5lcmF0ZSAuY3N2IGR1bXBzIGZvciB0ZXN0aW5nL2RlYnVnZ2luZywgdGhlIENMSSBoZWxwIGlzIGF2YWlsYWJsZVxuZnJvbTpcbmBgYFxucHkgLW0gcHdkdXNhZ2UuZW5naW5lIC1oXG5gYGBcblxuIyMgRGVidWdnaW5nIGFuZCBEZXZlbG9wbWVudFxuXG5JZiB5b3UgYXJlIGRlYnVnZ2luZyB0aGUgY3VycmVudCBjb2RlIG9yIGRldmVsb3BpbmcgbmV3IHVzYWdlIGFnZW50cywgdGhpcyBzZWN0aW9uIFxub3V0bGluZXMgbXkgYXBwcm9hY2ggdG8gc2V0dGluZyB1cCBhIHRlc3QvZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQgKGJhc2VkIG9uIG15IGZhaXJseVxubGltaXRlZCBweXRob24gZXhwZXJpZW5jZSAtIGlmIHlvdSBrbm93IHdoYXQgeW91IGFyZSBkb2luZywgdGhpcyBzZWN0aW9uIGNhbiBiZVxuaWdub3JlZCkuXG5cblRoZSBtYWluIHN0ZXBzIGFyZTpcblxuLSBZb3Ugd2lsbCBuZWVkIHRvIGJlIHJ1bm5pbmcgcHl0aG9uIDMuMTEgb3IgaGlnaGVyLiBcbi0gSSBzdHJvbmdseSBzdWdnZXN0IHVzaW5nIGEgc2VwYXJhdGUgcHl0aG9uIHZpcnR1YWwgZW52aXJvbm1lbnQgZm9yIGRldmVsb3BtZW50LiBcblxuICAgYHB5IC1tIHZlbnYgdXNhZ2VfdGVzdGBcblxuLSBBY3RpdmF0ZSB5b3VyIGVudmlyb25tZW50IChyZWZlciBweXRob24gZG9jcykgYW5kIGluc3RhbGwgc2ltcGxlanNvbiwgYW5kIHRoZVxuaW5mbHV4ZGIgRmx1eCBjbGllbnQgKEknbSBydW5uaW5nIHdpdGhvdXQgdGhlIGhpZ2ggZWZmaWNpZW5jeSBjIGlzbyA4NjAxIGxpYnJhcnkgZm9yIFxubm93KS4gVGhlIGBbZXh0cmFdYCBhbHNvIGluc3RhbGxzIG51bXB5IGFuZCBwYW5kYXMuIFxuXG4gIGBwaXAgaW5zdGFsbCBzaW1wbGVqc29uYFxuXG4gIGBwaXAgaW5zdGFsbCBpbmZsdXhkYi1jbGllbnRbZXh0cmFdYFxuXG4tIENsb25lIG15IChAQnVvbmdpb3Jub1RleGFzKSB1c2FnZSBlbmdpbmUgcmVwb3NpdG9yeSB0byBhIHdvcmtpbmcgZGlyZWN0b3J5LiBcblxuLSBVc2UgcGlwIHRvIGNyZWF0ZSBhbiBlZGl0YWJsZSBpbnN0YWxsIGZyb20gdGhlIHdvcmtpbmcgZGlyZWN0b3J5OlxuXG4gIGBwaXAgaW5zdGFsbCAtLWVkaXRhYmxlIC5gXG5cbiAgKFdoZW4geW91IGFyZSBkb25lLCB5b3UgY2FuIHVuaW5zdGFsbCB3aXRoIGBwaXAgdW5pbnN0YWxsIHB3ZHVzYWdlYClcblxuLSBDb25maWd1cmUgeW91ciB1c2FnZSBwcm94eSBzZXJ2ZXIuIFlvdSBjYW4gc3BlY2lmeSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZm9yIHRoZVxuSlNPTiBjb25maWd1cmF0aW9uIGZpbGUsIHNlcnZlciBiaW5kIGFkZHJlc3MsIGRlYnVnZ2luZywgc2VydmVyIHBvcnQgYW5kIEhUVFBTIG1vZGVcbltUT0RPIC0gaHR0cHMgaXMgbm90IHdvcmtpbmcgYXQgdGhlIG1vbWVudF0gKGBVU0FHRV9KU09OLCBVU0FHRV9CSU5EX0FERFJFU1MsXG5VU0FHRV9ERUJVRywgVVNBR0VfUE9SVCwgVVNBR0VfSFRUUFNgKS4gRm9yIGV4YW1wbGUsIG15IHZzY29kZSBgbGF1bmNoLmpzb25gXG5zcGVjaWZpZXMgcG9ydCA5MDUwICh0aGUgZGVmYXVsdCkgZm9yIHRoZSB0ZXN0IHNlcnZlciBhbmQgdGhlIGxvY2F0aW9uIG9mIHRoZVxuY29uZmlndXJhdGlvbiBmaWxlOiBcbmBgYFxue1xuICAgIFwidmVyc2lvblwiOiBcIjAuMi4wXCIsXG4gICAgXCJjb25maWd1cmF0aW9uc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIlB5dGhvbjogQ3VycmVudCBGaWxlXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJweXRob25cIixcbiAgICAgICAgICAgIFwicmVxdWVzdFwiOiBcImxhdW5jaFwiLFxuICAgICAgICAgICAgXCJwcm9ncmFtXCI6IFwiJHtmaWxlfVwiLFxuICAgICAgICAgICAgXCJjb25zb2xlXCI6IFwiaW50ZWdyYXRlZFRlcm1pbmFsXCIsXG4gICAgICAgICAgICBcImp1c3RNeUNvZGVcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwiZW52XCI6IHtcbiAgICAgICAgICAgICAgICBcIlVTQUdFX1BPUlRcIjogXCI5MDUwXCIsXG4gICAgICAgICAgICAgICAgXCJVU0FHRV9KU09OXCI6IFwiQzovdXNlcnMveHh4eC95eXkvdXNhZ2UuanNvblwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdXG59XG5gYGBcbi0gRm9yIGluaXRpYWwgdGVzdGluZywgY3JlYXRlIGEgY29weSBvZiB0aGUgYGV4YW1wbGVfdXNhZ2UuanNvbmAgZmlsZSwgc2V0IHRoZSBcbmBVU0FHRV9KU09OYCBlbnZpcm9ubWVudCB2YXJpYWJsZSB0byBwb2ludCBhdCB0aGlzIGZpbGUgYW5kIG1vZGlmeSB0aGUgY29udGVudHMgb2YgdGhlXG5maWxlICBzbyB0aGF0IGBpbmZsdXhfdXJsYCBwb2ludHMgYXQgeW91ciBpbmZsdXggc2VydmVyIChwcm9iYWJseSB0aGUgc2FtZSBtYWNoaW5lIGFzXG55b3VyIFBvd2Vyd2FsbC1EYXNoYm9hcmQpIGFuZCB5b3VyIGB0aW1lem9uZWAgaXMgY29ycmVjdC5cbi0gQXQgdGhpcyBwb2ludCwgeW91IHNob3VsZCBiZSBhYmxlIHRvIHJ1biB0aGUgc2VydmVyIHVzaW5nOiBcbiAgYGBgXG4gIHB5IC1tIHB3ZHVzYWdlLnNlcnZlclxuICBgYGBcbiAgWW91IHNob3VsZCB0aGVuIGNoZWNrIHRoYXQgdGhlIHVzYWdlIHNlcnZlciBpcyByZXNwb25kaW5nIGJ5IHBvaW50aW5nIGEgd2ViIGJyb3dzZXIgYXRcbiAgYGh0dHA6Ly9zZXJ2ZXIuYWRkcmVzczo8cG9ydD4vdXNhZ2VfZW5naW5lYC4gXG4tIElmIGV2ZXJ5dGhpbmcgaXMgYXMgaXQgc2hvdWxkIGJlLCB5b3Ugc2hvdWxkIHNlZSBhIHBhZ2UgY29udGFpbmluZyB0aGUgbWVzc2FnZTpcblxuICBgYGBcbiAgVXNhZ2UgRW5naW5lIFN0YXR1c1x0XCJFbmdpbmUgT0ssIHRhcmlmZnMgKHJlKWxvYWRlZFwiXG4gIGBgYFxuSWYgeW91IGRvbid0IHNlZSB0aGlzLCBwbGVhc2UgY2hlY2sgdGhhdCB5b3UgYXJlIHVzaW5nIHRoZSB1bm1vZGlmaWVkIGB1c2FnZS5qc29uYC4gSWYgXG55b3Ugc3RpbGwgaGF2ZSBwcm9ibGVtcywgbGV0IHVzIGtub3cgb24gdGhlIGRldiBpc3N1ZSB0aHJlYWQgdG8gc2VlIGlmIHdlIGNhbiB0cm91YmxlIFxuc2hvb3QuXG5cbklmIHlvdSBkbyBnZXQgdGhlIGV4cGVjdGVkIHJlc3BvbnNlLCB5b3UgY2FuIG5vdyBtb2RpZnkgdGhlIGB1c2FnZS5qc29uYCBmaWxlIHRvXG5yZWZsZWN0IHlvdXIgb3duIHRhcmlmZiBzdHJ1Y3R1cmUuXG5cbkZpbmFsbHksIHlvdSBjYW4gcnVuIHRoZSBlbmdpbmUgaW4gY2xpIG1vZGUgdG8gZ2VuZXJhdGUgLmNzdiBkdW1wIGZpbGVzIGZvciBkZWJ1Z2dpbmcuXG5Gb3IgdGhpcywgdXNlIGBweSAtbSBwd2R1c2FnZS5lbmdpbmUgW2FyZ3VtZW50c11gLCB3aXRoIGhlbHAgYXZhaWxhYmxlIGZyb20gXG5gcHkgcHdkdXNhZ2UuZW5naW5lIC1oYC4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInB3ZHVzYWdlIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkJ1ZyBUcmFja2VyIjogImh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2UvaXNzdWVzIiw=
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9CdW9uZ2lvcm5vVGV4YXMvcHdkdXNhZ2Ui
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvcHdkdXNhZ2UvMC45LjQvIiw=
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImluZmx1eGRiLWNsaWVudFtleHRyYV0iLA==
ICAgICAgInNpbXBsZWpzb24i
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjExIiw=
ICAgICJzdW1tYXJ5IjogIlVzYWdlIChtYWlubHkgdGltZSBvZiB1c2UpIHByb3h5IG1pY3Jvc2VydmljZSBmb3IgUG93ZXJ3YWxsLURhc2hib2FyZC4iLA==
ICAgICJ2ZXJzaW9uIjogIjAuOS40Iiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODM3MDk3Nyw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjkuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkY2Y4YzcwOTY0NzUwMTJmOWJlYmFlZTM3ZWM3YTY0NGViOTIxNmM3MzM2ZDQxMGMyNmNkOTQ3NGI3ZmY1YjJlIiw=
ICAgICAgICAgICJtZDUiOiAiYjFhYmM2NTVhM2YyOWQ0ZWU0OWZlODZlMmVjNGMzZWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2M3MjFmMDI1MTVkM2NhODA2N2IyZmUwYzdkY2NhNzBhM2IwNTA1MGRiODRiZmZjODc1ZWZiM2I4MGUxYTMyMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMC45LjQtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiMWFiYzY1NWEzZjI5ZDRlZTQ5ZmU4NmUyZWM0YzNlYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDM4NDAzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNVQwMTozOTo0MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNVQwMTozOTo0MS4yNzY3MDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kYy9mOC9jNzA5NjQ3NTAxMmY5YmViYWVlMzdlYzdhNjQ0ZWI5MjE2YzczMzZkNDEwYzI2Y2Q5NDc0YjdmZjViMmUvcHdkdXNhZ2UtMC45LjQtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyMmEzMDliMjNiOWNhMTg2YjZmZWVjNzM5YTQ3MjEwNDNlNWIwYjg1ZWY0Njg1YWNhZTU5NjQzNGNjNWFhNDEwIiw=
ICAgICAgICAgICJtZDUiOiAiODk3YTk4MDg2ZWVlMjBhMDJjNTA2NmFlZjg0OTg5MTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTU1OTU2YzZlZWQ2YjA2NzJiYTE2MTczYzM2ZTYwZmFiMmNmODkwYjk2ZGNmMGNjMDIyOGRkODJhYmM0Zjg4YSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAicHdkdXNhZ2UtMC45LjQudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4OTdhOTgwODZlZWUyMGEwMmM1MDY2YWVmODQ5ODkxMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My4xMSIs
ICAgICAgICAic2l6ZSI6IDQ3MDk5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNVQwMTozOTo0MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNVQwMTozOTo0Mi45Nzg5MTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yMi9hMy8wOWIyM2I5Y2ExODZiNmZlZWM3MzlhNDcyMTA0M2U1YjBiODVlZjQ2ODVhY2FlNTk2NDM0Y2M1YWE0MTAvcHdkdXNhZ2UtMC45LjQudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZGNmOGM3MDk2NDc1MDEyZjliZWJhZWUzN2VjN2E2NDRlYjkyMTZjNzMzNmQ0MTBjMjZjZDk0NzRiN2ZmNWIyZSIs
ICAgICAgICAibWQ1IjogImIxYWJjNjU1YTNmMjlkNGVlNDlmZTg2ZTJlYzRjM2VjIiw=
ICAgICAgICAic2hhMjU2IjogImNjNzIxZjAyNTE1ZDNjYTgwNjdiMmZlMGM3ZGNjYTcwYTNiMDUwNTBkYjg0YmZmYzg3NWVmYjNiODBlMWEzMjIi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInB3ZHVzYWdlLTAuOS40LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYjFhYmM2NTVhM2YyOWQ0ZWU0OWZlODZlMmVjNGMzZWMiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTEiLA==
ICAgICAgInNpemUiOiAzODQwMyw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMDVUMDE6Mzk6NDEiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMDVUMDE6Mzk6NDEuMjc2NzAyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZGMvZjgvYzcwOTY0NzUwMTJmOWJlYmFlZTM3ZWM3YTY0NGViOTIxNmM3MzM2ZDQxMGMyNmNkOTQ3NGI3ZmY1YjJlL3B3ZHVzYWdlLTAuOS40LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMjJhMzA5YjIzYjljYTE4NmI2ZmVlYzczOWE0NzIxMDQzZTViMGI4NWVmNDY4NWFjYWU1OTY0MzRjYzVhYTQxMCIs
ICAgICAgICAibWQ1IjogIjg5N2E5ODA4NmVlZTIwYTAyYzUwNjZhZWY4NDk4OTExIiw=
ICAgICAgICAic2hhMjU2IjogIjk1NTk1NmM2ZWVkNmIwNjcyYmExNjE3M2MzNmU2MGZhYjJjZjg5MGI5NmRjZjBjYzAyMjhkZDgyYWJjNGY4OGEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInB3ZHVzYWdlLTAuOS40LnRhci5neiIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiODk3YTk4MDg2ZWVlMjBhMDJjNTA2NmFlZjg0OTg5MTEiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuMTEiLA==
ICAgICAgInNpemUiOiA0NzA5OSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMDVUMDE6Mzk6NDIiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMDVUMDE6Mzk6NDIuOTc4OTEyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMjIvYTMvMDliMjNiOWNhMTg2YjZmZWVjNzM5YTQ3MjEwNDNlNWIwYjg1ZWY0Njg1YWNhZTU5NjQzNGNjNWFhNDEwL3B3ZHVzYWdlLTAuOS40LnRhci5neiIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
