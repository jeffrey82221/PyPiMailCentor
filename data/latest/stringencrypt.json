ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiQmFydG9zeiBXw7NqY2lrIiw=
ICAgICJhdXRob3JfZW1haWwiOiAic3VwcG9ydEBwZWxvY2suY29tIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA1IC0gUHJvZHVjdGlvbi9TdGFibGUiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEFwYWNoZSBTb2Z0d2FyZSBMaWNlbnNlIiw=
ICAgICAgIk5hdHVyYWwgTGFuZ3VhZ2UgOjogRW5nbGlzaCIs
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyA6OiBQeXRob24gTW9kdWxlcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIjIFN0cmluZ0VuY3J5cHQg4oCUIFN0cmluZyAmIEZpbGUgRW5jcnlwdGlvbiBmb3IgUHl0aG9uIERldmVsb3BlcnNcblxuU3RyaW5nRW5jcnlwdCBhbGxvd3MgeW91IHRvICoqZW5jcnlwdCBzdHJpbmdzIGFuZCBmaWxlcyoqIHVzaW5nXG5yYW5kb21seSBnZW5lcmF0ZWQgYWxnb3JpdGhtLCBnZW5lcmF0aW5nIGEgdW5pcXVlIGRlY3J5cHRpb24gY29kZVxuKHNvLWNhbGxlZCAqcG9seW1vcnBoaWMgY29kZSopIGVhY2ggdGltZSBpbiB0aGUgc2VsZWN0ZWQgcHJvZ3JhbW1pbmdcbmxhbmd1YWdlLlxuXG5odHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbVxuXG4jIyBQbGFpbiB0ZXh0IFB5dGhvbiBzdHJpbmdcbmBgYHB5dGhvblxuY3V0ZV93YWJiaXQgPSBcIkEgbGl0dGxlIGdpcmwgZ29lcyBpbnRvIGEgcGV0IHNob3cgYW5kIGFza3MgZm9yIGEgd2FiYml0Li4uIGh0dHAuLi5cIlxuYGBgXG5cbiMjIEVuY3J5cHRlZCBzdHJpbmcgaW4gUHl0aG9uIHNvdXJjZSBjb2RlIGZvcm1hdFxuXG5gYGBweXRob25cbiMgZW5jcnlwdGVkIHdpdGggaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20gKHYxLjMuMCkgW1B5dGhvbl1cbiMgY3V0ZV93YWJiaXQgPSBcIkEgbGl0dGxlIGdpcmwgZ29lcyBpbnRvIGEgcGV0IHNob3cgYW5kIGFza3MgZm9yIGEgd2FiYml0Li4uIGh0dHAuLi5cIlxuY3V0ZV93YWJiaXQgPSBbIDB4MTAwNSwgMHg0MDA0LCAweDQwMDUsIDB4NTAwNiwgMHg0MDAzLCAweDAwMDQsIDB4NDAwMiwgMHg5MDAxLFxuICAgICAgICAgICAgICAgIDB4MDAwOSwgMHgzMDBFLCAweDEwMEYsIDB4RTAwRiwgMHhDMDBBLCAweDQwMEQsIDB4RjAwQywgMHgzMDBCLFxuICAgICAgICAgICAgICAgIDB4NTAxMywgMHg3MDEzLCAweDgwMTUsIDB4NTAxMiwgMHhFMDE4LCAweDAwMTgsIDB4NzAxNiwgMHhDMDExLFxuICAgICAgICAgICAgICAgIDB4MTAxOSwgMHg0MDFFLCAweDgwMUMsIDB4OTAxQywgMHg0MDFELCAweDQwMTksIDB4QjAxRiwgMHg0MDFGLFxuICAgICAgICAgICAgICAgIDB4RjAyRiwgMHgzMDJGLCAweDgwMjksIDB4RDAyRSwgMHhFMDJDLCAweDAwMkIsIDB4ODAyRSwgMHhEMDI5LFxuICAgICAgICAgICAgICAgIDB4MzAyNiwgMHhGMDI2LCAweEIwMjgsIDB4QzAyNCwgMHg2MDIyLCAweEIwMjEsIDB4QTAyMywgMHhDMDI3LFxuICAgICAgICAgICAgICAgIDB4MTAzQiwgMHg0MDQwLCAweEYwM0EsIDB4RDAzQSwgMHgyMDQwLCAweDYwM0YsIDB4MTAzRSwgMHg4MDNFLFxuICAgICAgICAgICAgICAgIDB4RTAzNSwgMHhBMDM2LCAweDYwMzcsIDB4QzAzOCwgMHg4MDM2LCAweDAwMzYsIDB4QzAzNywgMHhDMDM4LFxuICAgICAgICAgICAgICAgIDB4MzA1OCwgMHhFMDUzLCAweDcwNTEsIDB4MzA1MiwgMHg3MDUzLCAweDMwNTQsIDB4RjA1MSwgMHgyMDU1LFxuICAgICAgICAgICAgICAgIDB4MDA1RSwgMHhEMDVELCAweEMwNjAsIDB4NDA2MCwgMHhGMDVBLCAweEEwNTksIDB4NjA2MCwgMHgzMDVCLFxuICAgICAgICAgICAgICAgIDB4MjA0NCwgMHgzMDQ0LCAweDcwNDUsIDB4ODA0MiwgMHhGMDQ4LCAweDcwNDcsIDB4NzA0MiwgMHg0MDQ1LFxuICAgICAgICAgICAgICAgIDB4NTA0QSwgMHg5MDRBLCAweDcwNEIsIDB4RTA0QiwgMHhGMDRBLCAweDcwNDksIDB4QjA1MCwgMHg5MDUwLFxuICAgICAgICAgICAgICAgIDB4NDA4MCwgMHgxMDgwLCAweDUwNzksIDB4QjA3RCwgMHgxMDdDLCAweDYwN0IsIDB4QTA3QSwgMHg1MDc5LFxuICAgICAgICAgICAgICAgIDB4NDA3NiBdXG5cbmZvciB3RXpkdCBpbiByYW5nZSgxMDUpOlxuICB6V3FFVCA9IGN1dGVfd2FiYml0W3dFemR0XVxuICB6V3FFVCAtPSAxXG4gIHpXcUVUIF49IHdFemR0XG4gIHpXcUVUID0gKCgoeldxRVQgJiAweEZGRkYpID4+IDE0KSB8ICh6V3FFVCA8PCAyKSkgJiAweEZGRkZcbiAgeldxRVQgXj0gd0V6ZHRcbiAgeldxRVQgPSAoKCh6V3FFVCAmIDB4RkZGRikgPj4gMTQpIHwgKHpXcUVUIDw8IDIpKSAmIDB4RkZGRlxuICBjdXRlX3dhYmJpdFt3RXpkdF0gPSB6V3FFVFxuXG5jdXRlX3dhYmJpdCA9ICcnLmpvaW4oY2hyKHpXcUVUICYgMHhGRkZGKSBmb3IgeldxRVQgaW4gY3V0ZV93YWJiaXQpXG5cbmRlbCB3RXpkdCwgeldxRVRcblxucHJpbnQoY3V0ZV93YWJiaXQpXG5gYGBcblxuXG4jIyBUaGUgcHJvYmxlbSB3aXRoIHBsYWluIHRleHQgc3RyaW5nc1xuXG5JJ20gYSBkZXZlbG9wZXIsIGFuZCBJIGxvdmUgcHJvZ3JhbW1pbmcuIEknbSBhbHNvIGFuIGF2aWQgW3JldmVyc2UgZW5naW5lZXJdKGh0dHBzOi8vd3d3LnBlbG9jay5jb20vc2VydmljZXMpLlxuSSBwZXJmb3JtIGEgd2lkZSBhcnJheSBvZiBzb2Z0d2FyZSBhbmFseXNpcyBpbiBteSBkYWlseSB3b3JrIGFuZCBzb21ldGltZXNcbkkgZmluZCB0aGluZ3MgaW4gY29tcGlsZWQgYXBwbGljYXRpb25zIHRoYXQgKipzaG91bGRuJ3QgYmUgZXhwb3NlZCoqIHRvIHRoZVxuZmlyc3QgcGVyc29uIHdpdGggYSBzaW1wbGUgaGV4LWVkaXRvciBpbiBoYW5kLlxuXG4jIyMgV2hhdCBjYW4gYmUgZm91bmQgaW4gYXBwbGljYXRpb24gYmluYXJpZXM/XG5cbkV2ZXJ5dGhpbmchIEkndmUgbGlzdGVkIGEgZmV3IGV4YW1wbGVzIG9mIHRoZSB0aGluZ3MgSSBmb3VuZCBiZWxvdy5cblNvbWV0aW1lcyB0aGVzZSB0aGluZ3Mgc2hvdWxkbid0IGV2ZW4gYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb25zXG5hdCBhbGwgKHRoZXkgYXJlIHRoZXJlIGR1ZSB0byBwb29yIGRlc2lnbiBjaG9pY2VzIG9yIHJ1c2hlZCB3b3JrKSxcbmJ1dCBzb21lIGFyZSBqdXN0IGNhbm5vdCBiZSBhdm9pZGVkLlxuXG4qIERhdGFiYXNlIHBhc3N3b3Jkc1xuKiBGVFAgcGFzc3dvcmRzXG4qIExvZ2luIGNyZWRlbnRpYWxzXG4qIEVuY3J5cHRpb24gJiBkZWNyeXB0aW9uIGtleXNcbiogQ3VzdG9tIGNvZGUgc2NyaXB0cyBpbiByZWFkYWJsZSB0ZXh0XG4qIENvbXBsZXggU1FMIHF1ZXJpZXMgaW4gcGxhaW4gdGV4dFxuKiBIaWRkZW4gd2Vic2l0ZSBlbmRwb2ludHNcbiogQml0Q29pbiB3YWxsZXRzIGxvY2F0aW9uc1xuKiAuLi5hbmQgbWFueSBtb3JlXG5cbkFzayB5b3Vyc2VsZiwgZGlkIHlvdSBldmVyIHB1dCBzb21lIHNlbnNpdGl2ZSBjb250ZW50IGluIHlvdXIgc29mdHdhcmUgdGhhdCB5b3UgbGF0ZXIgcmVncmV0P1xuXG4jIyMgV2h5IHNob3VsZCBJIGNhcmU/XG5cbklmIGFueSBvZiB0aGVzZSB0aGluZ3Mgd2VyZSB0byBmYWxsIGludG8gdGhlICoqd3JvbmcgaGFuZHMqKiwgdGhleSBjb3VsZCBiZVxudXNlZCB0byBjb21wcm9taXNlIHlvdXIgc29mdHdhcmUgb3IgeW91ciBpbmZyYXN0cnVjdHVyZS5cblxuIVtZb3UgZG9uJ3Qgd2FudCB0aGlzIHRvIGhhcHBlbiB0byB5b3VyIHNvZnR3YXJlLl0oaHR0cHM6Ly93d3cucGVsb2NrLmNvbS9pbWcvZW4vcHJvZHVjdHMvc3RyaW5nLWVuY3J5cHQvZGF0YWJhc2UtcGFzc3dvcmQtcGxhaW4tdGV4dC5wbmcpXG5cblRha2UgZm9yIGV4YW1wbGUgZGF0YWJhc2UgcGFzc3dvcmRzLiBBIGNvbXBldGl0b3IgY291bGQgdXNlIHRoZW1cbnRvIHZpZXcgeW91ciBkYXRhYmFzZSBzdHJ1Y3R1cmUgb3IgZHVtcCBhbGwgb2YgaXRzIGNvbnRlbnRzLiBZb3UgZG9uJ3Qgd2FudCB0byBsb3NlIGFsbCB5b3VyIGhhcmQgd29yayBiZWNhdXNlIHNvbWVvbmUgd2l0aCBhIHNpbXBsZSBoZXgtZWRpdG9yIGNhbiBkaXNjb3ZlciB5b3VyIHBhc3N3b3JkIGluIHBsYWluIHRleHQuXG5cbiMjIFRoZSBzb2x1dGlvbiDigJQgU3RyaW5nIEVuY3J5cHRcblxuSSd2ZSBkZWNpZGVkIHRvIGNyZWF0ZSBhIHNpbXBsZSBzZXJ2aWNlIGNhbGxlZCBTdHJpbmcgRW5jcnlwdCBmb3IgZGV2ZWxvcGVycywgb2ZmZXJpbmcgZmFzdCBzdHJpbmcgJiBmaWxlIGVuY3J5cHRpb24gd2l0aG91dCB0aGUgbmVlZCB0byB3cml0ZSBjdXN0b20gZW5jcnlwdGlvbiB0b29scyBvdmVyIGFuZCBvdmVyIGFnYWluIGJlY2F1c2UgSSBkaWQgdGhhdCBtYW55IHRpbWVzLlxuXG5TdHJpbmcgRW5jcnlwdCBjYW4gaGVscCB5b3UgaGlkZSB0aGUgdGhpbmdzIHRoYXQgc2hvdWxkbid0IGJlIHZpc2libGUgYXQgZmlyc3QgZ2xhbmNlIHRvIGFueW9uZSB3aXRoIGEgaGV4LWVkaXRvci5cblxuIVtTdHJpbmdFbmNyeXB0IG1haW4gd2luZG93XShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9pbWFnZXMvc3RyaW5nZW5jcnlwdC5wbmcpXG5cbiMjIyBTYXkgaGVsbG8gdG8gcG9seW1vcnBoaWMgZW5jcnlwdGlvbiFcblxuRm9yZ2V0IGFib3V0IHNpbXBsZSBgeG9yYCBlbmNyeXB0aW9uISBTdHJpbmdFbmNyeXB0IGNvbWVzIHdpdGggYSB1bmlxdWUgZW5jcnlwdGlvbiBlbmdpbmUuXG5cbkl0J3MgYSAqKnBvbHltb3JwaGljIGVuY3J5cHRpb24gZW5naW5lKiosIHNpbWlsYXIgdG8gdGhlIGVuY3J5cHRpb24gbWV0aG9kcyB1c2VkIGJ5IHRoZSBzb2Z0d2FyZSBwcm90ZWN0aW9uIHNvbHV0aW9ucyBhbmQgYWR2YW5jZWQgY29tcHV0ZXIgdmlydXNlcy5cblxuIyMjIEhvdyBpdCB3b3Jrcz9cblxuTGV0IG1lIGV4cGxhaW4gaG93IHRoZSBwb2x5bW9ycGhpYyBlbmNyeXB0aW9uIHByb2Nlc3Mgd29ya3MuXG5cbjEuIEEgcmFuZG9tIHNldCBvZiBlbmNyeXB0aW9uIGNvbW1hbmRzIGlzIHNlbGVjdGVkIChgeG9yYCwgYGFkZGl0aW9uYCwgYHN1YnRyYWN0aW9uYCwgYGJpdCByb3RhdGlvbnNgLCBgYml0IHNoaWZ0c2AsIGBsb2dpY2FsIG5lZ2F0aW9uYCBldGMuKS5cbjIuIEEgcmFuZG9tIHNldCBvZiBoZWxwZXIgYGVuY3J5cHRpb24ga2V5c2AgaXMgZ2VuZXJhdGVkLlxuMy4gRXZlcnkgYnl0ZSBvZiB0aGUgaW5wdXQgc3RyaW5nIGlzIGVuY3J5cHRlZCB3aXRoIGV2ZXJ5IGVuY3J5cHRpb24gY29tbWFuZCBpbiB0aGUgcmFuZG9tIHNldC5cbjQuIFRoZSBkZWNyeXB0aW9uIGNvZGUgaW4gdGhlIHNlbGVjdGVkIHByb2dyYW1taW5nIGxhbmd1YWdlIGlzIGdlbmVyYXRlZCB3aXRoIGEgcmV2ZXJzZSBzZXQgb2YgZW5jcnlwdGlvbiBjb21tYW5kcy5cblxuTW9yZSBhYm91dCBwb2x5bW9ycGhpYyBlbmdpbmVzOlxuXG4qIEhvdyB0byBidWlsZCBhIHBvbHltb3JwaGljIGVuZ2luZSBpbiBDKysgLSBodHRwczovL3d3dy5wZWxvY2suY29tL2FydGljbGVzL3BvbHltb3JwaGljLWVuY3J5cHRpb24tYWxnb3JpdGhtc1xuKiBQb2x5bW9ycGhpYyBlbmdpbmUgaW4gMzItYml0IE1BU00gYXNzZW1ibGVyIC0gaHR0cHM6Ly9naXRodWIuY29tL1BFTG9jay9TaW1wbGUtUG9seW1vcnBoaWMtRW5naW5lLVNQRTMyXG4qIFBvbHkgUG9seW1vcnBoaWMgRW5naW5lIC0gaHR0cHM6Ly93d3cucGVsb2NrLmNvbS9wcm9kdWN0cy9wb2x5LXBvbHltb3JwaGljLWVuZ2luZVxuXG4jIyMgV2hhdCBkb2VzIGl0IG1lYW4/XG5cblRoZSBlbmNyeXB0ZWQgY29udGVudCBpcyAqKmRpZmZlcmVudCoqIGV2ZXJ5IHRpbWUgeW91IGFwcGx5IFN0cmluZ0VuY3J5cHQgZW5jcnlwdGlvbiB0byBpdC5cblxuVGhlIGFsZ29yaXRobSBpcyBhbHdheXMgKip1bmlxdWUqKiwgdGhlIGVuY3J5cHRpb24ga2V5cyBhcmUgYWx3YXlzICoqcmFuZG9tbHkgc2VsZWN0ZWQqKiBhbmQgdGhlIGRlY3J5cHRpb24gY29kZSBpcyBhbHNvICoqdW5pcXVlKiogZm9yIGV2ZXJ5IHRpbWUgeW91IHVzZSBvdXIgZW5jcnlwdGlvbi5cblxuIyMgU3RyaW5nRW5jcnlwdCBmZWF0dXJlc1xuXG4qIE91dCBvZiBib3ggc3VwcG9ydCBmb3IgYFVOSUNPREVgIChXaWRlQ2hhciB0eXBlIGluIGBDL0MrK2AgbGFuZ3VhZ2VzKSwgYFVURi04YCAobXVsdGlieXRlKSAmIGBBTlNJYCAoc2luZ2xlIGJ5dGUpIHN0cmluZ3MgZW5jb2RpbmdzXG4qIENvbmZpZ3VyYWJsZSBtaW5pbXVtICYgbWF4aW11bSBudW1iZXIgb2YgZW5jcnlwdGlvbiBjb21tYW5kc1xuKiBEaWZmZXJlbnQgd2F5cyB0byBzdG9yZSB0aGUgZW5jcnlwdGVkIHN0cmluZyAoYXMgYSBgZ2xvYmFsYCBvciBgbG9jYWxgIHZhcmlhYmxlIGlmIHRoZSBzZWxlY3RlZCBwcm9ncmFtbWluZyBsYW5ndWFnZSBzdXBwb3J0cyBpdClcbiogV2lkZSBhcnJheSBvZiBzdXBwb3J0ZWQgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzXG4qIFlvdSBjYW4gYXV0b21hdGUgdGhlIGVuY3J5cHRpb24gcHJvY2VzcyBpbiB5b3VyIGJ1aWxkcyB1c2luZyBvdXIgYFdlYkFQSWAgaW50ZXJmYWNlIChgUEhQYCBhbmQgYFB5dGhvbmAgYmluZGluZ3MpXG5cbiMjIEF2YWlsYWJsZSBlZGl0aW9uc1xuXG5TdHJpbmdFbmNyeXB0IGNhbiBiZSB1c2VkOlxuXG4qIERpcmVjdGx5IG9uIGl0cyB3ZWJzaXRlIC0gaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vXG4qIFlvdSBjYW4gZG93bmxvYWQgc3RhbmRhbG9uZSBXaW5kb3dzIGNsaWVudCAtIGh0dHBzOi8vd3d3LnN0cmluZ2VuY3J5cHQuY29tL2Rvd25sb2FkL1xuKiBZb3UgY2FuIHVzZSBpdCB2aWEgV2ViQVBJIGludGVyZmFjZSAoZnJvbSBgUEhQYCBhbmQgYFB5dGhvbmApIC0gaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vYXBpL1xuKiBWaXN1YWwgU3R1ZGlvIENvZGUgZXh0ZW5zaW9uIC0gaHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPVBFTG9jay5zdHJpbmdlbmNyeXB0XG5cbiMjIEhvdyB0byB1c2UgU3RyaW5nRW5jcnlwdCBmcm9tIFB5dGhvbiAzIGNvZGU/XG5cblRoZSBwcmVmZXJyZWQgd2F5IG9mIFN0cmluZ0VuY3J5cHQgbW9kdWxlIGluc3RhbGxhdGlvbiBpcyB2aWEgW3BpcF0oaHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L3BpcC8pLlxuXG5SdW46XG5cbmBgYFxucGlwIGluc3RhbGwgc3RyaW5nZW5jcnlwdFxuYGBgXG5cbm9yIFxuXG5gYGBcbnB5dGhvbjMgLW0gcGlwIGluc3RhbGwgc3RyaW5nZW5jcnlwdFxuYGBgXG5cblxuQW5kIHRoZW4gYWRkIHRoaXMgaW1wb3J0IHRvIHlvdXIgc291cmNlIGNvZGU6XG5cbmBgYHB5dGhvblxuZnJvbSBzdHJpbmdlbmNyeXB0IGltcG9ydCBTdHJpbmdFbmNyeXB0XG5gYGBcblxuVGhlIGluc3RhbGxhdGlvbiBwYWNrYWdlIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaW5nZW5jcnlwdC9cblxuIyMjIEJhc2ljIHN0cmluZyBlbmNyeXB0aW9uIHVzYWdlIGV4YW1wbGUgKHdpdGggZGVmYXVsdCBvcHRpb25zKVxuXG5gYGBweXRob25cbiMhL3Vzci9iaW4vZW52IHB5dGhvblxuXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4jXG4jIFN0cmluZyBFbmNyeXB0IFdlYkFwaSBpbnRlcmZhY2UgdXNhZ2UgZXhhbXBsZS5cbiNcbiMgSW4gdGhpcyBleGFtcGxlIHdlIHdpbGwgZW5jcnlwdCBzYW1wbGUgc3RyaW5nIHdpdGggZGVmYXVsdCBvcHRpb25zLlxuI1xuIyBWZXJzaW9uICAgICAgICA6IHYxLjBcbiMgTGFuZ3VhZ2UgICAgICAgOiBQeXRob25cbiMgQXV0aG9yICAgICAgICAgOiBCYXJ0b3N6IFfDs2pjaWtcbiMgUHJvamVjdCBwYWdlICAgOiBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbVxuIyBXZWIgcGFnZSAgICAgICA6IGh0dHBzOi8vd3d3LnBlbG9jay5jb21cbiNcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuI1xuIyBpbmNsdWRlIFN0cmluZ0VuY3J5cHQgbW9kdWxlXG4jXG5mcm9tIHN0cmluZ2VuY3J5cHQgaW1wb3J0IFN0cmluZ0VuY3J5cHRcblxuI1xuIyBpZiB5b3UgZG9uJ3Qgd2FudCB0byB1c2UgUHl0aG9uIG1vZHVsZSwgeW91IGNhbiBpbXBvcnQgaXQgZGlyZWN0bHkgZnJvbSB0aGUgZmlsZVxuI1xuI2Zyb20gc3RyaW5nZW5jcnlwdC5zdHJpbmdlbmNyeXB0IGltcG9ydCBTdHJpbmdFbmNyeXB0XG5cbiNcbiMgY3JlYXRlIFN0cmluZ0VuY3J5cHQgY2xhc3MgaW5zdGFuY2UgKHdlIGFyZSB1c2luZyBvdXIgYWN0aXZhdGlvbiBjb2RlKVxuI1xubXlTdHJpbmdFbmNyeXB0ID0gU3RyaW5nRW5jcnlwdChcIkFCQ0QtQUJDRC1BQkNELUFCQ0RcIilcblxuI1xuIyBlbmNyeXB0IGEgc3RyaW5nIHVzaW5nIGFsbCB0aGUgZGVmYXVsdCBvcHRpb25zXG4jXG5yZXN1bHQgPSBteVN0cmluZ0VuY3J5cHQuZW5jcnlwdF9zdHJpbmcoXCJIZWxsbywgd29ybGQhXCIsIFwibGFiZWxfZW5jcnlwdGVkXCIpXG5cbiNcbiMgcmVzdWx0W10gYXJyYXkgaG9sZHMgdGhlIGVuY3J5cHRpb24gcmVzdWx0cyBhcyB3ZWxsIGFzIG90aGVyIGluZm9ybWF0aW9uXG4jXG4jIHJlc3VsdFtcImVycm9yXCJdIChpbnQpIC0gZXJyb3IgY29kZVxuIyByZXN1bHRbXCJlcnJvcl9zdHJpbmdcIl0gKHN0cmluZykgLSBlcnJvciBjb2RlIGFzIGEgc3RyaW5nXG4jIHJlc3VsdFtcInNvdXJjZVwiXSAoc3RyaW5nKSAtIGRlY3J5cHRvciBzb3VyY2UgY29kZVxuIyByZXN1bHRbXCJleHBpcmVkXCJdIChib29sZWFuKSAtIGV4cGlyYXRpb24gZmxhZ1xuIyByZXN1bHRbXCJjcmVkaXRzX2xlZnRcIl0gKGludCkgLSBudW1iZXIgb2YgY3JlZGl0cyBsZWZ0XG4jIHJlc3VsdFtcImNyZWRpdHNfdG90YWxcIl0gKGludCkgLSBpbml0aWFsIG51bWJlciBvZiBjcmVkaXRzXG5cbmlmIHJlc3VsdCBhbmQgXCJlcnJvclwiIGluIHJlc3VsdDpcblxuICAgICMgZGlzcGxheSBzb3VyY2UgY29kZSBvZiB0aGUgZGVjcnlwdGlvbiBjb2RlXG4gICAgaWYgcmVzdWx0W1wiZXJyb3JcIl0gPT0gU3RyaW5nRW5jcnlwdC5FcnJvckNvZGVzLkVSUk9SX1NVQ0NFU1M6XG4gICAgICAgIHByaW50KHJlc3VsdFtcInNvdXJjZVwiXSlcbiAgICBlbHNlOlxuICAgICAgICBwcmludChmJ0FuIGVycm9yIG9jY3VycmVkLCBlcnJvciBjb2RlOiB7cmVzdWx0W1wiZXJyb3JcIl19ICh7cmVzdWx0W1wiZXJyb3Jfc3RyaW5nXCJdfSknKVxuXG5lbHNlOlxuICAgIHByaW50KFwiU29tZXRoaW5nIHVuZXhwZWN0ZWQgaGFwcGVuIHdoaWxlIHRyeWluZyB0byBlbmNyeXB0IHRoZSBzdHJpbmcuXCIpXG5gYGBcblxuIyMjIyBSZXR1cm4gdmFsdWVzOlxuXG4qIGBgYHJlc3VsdFtcImVycm9yXCJdIChpbnQpYGBgIC0gZXJyb3IgY29kZVxuKiBgYGByZXN1bHRbXCJzb3VyY2VcIl0gKHN0cmluZylgYGAgLSBkZWNyeXB0b3Igc291cmNlIGNvZGVcbiogYGBgcmVzdWx0W1wiZXhwaXJlZFwiXSAoYm9vbGVhbilgYGAgLSBleHBpcmF0aW9uIGZsYWdcbiogYGBgcmVzdWx0W1wiY3JlZGl0c19sZWZ0XCJdIChpbnQpYGBgIC0gbnVtYmVyIG9mIGNyZWRpdHMgbGVmdFxuKiBgYGByZXN1bHRbXCJjcmVkaXRzX3RvdGFsXCJdIChpbnQpYGBgIC0gaW5pdGlhbCBudW1iZXIgb2YgY3JlZGl0c1xuXG4jIyMjIEVycm9yIGNvZGVzOlxuXG4qIGBgYEVSUk9SX1NVQ0NFU1MgKDApYGBgIC0gZXZlcnl0aGluZyB3ZW50IGZpbmVcbiogYGBgRVJST1JfRU1QVFlfTEFCRUwgKDEpYGBgIC0gbGFiZWwgcGFyYW1ldGVyIGlzIGVtcHR5XG4qIGBgYEVSUk9SX0xFTkdUSF9MQUJFTCAoMilgYGAgLSBsYWJlbCBsZW5ndGggaXMgdG9vIGxvbmdcbiogYGBgRVJST1JfRU1QVFlfU1RSSU5HICgzKWBgYCAtIGlucHV0IHN0cmluZyBpcyBlbXB0eVxuKiBgYGBFUlJPUl9FTVBUWV9CWVRFUyAoNClgYGAgLSBpbnB1dCBmaWxlIGJ5dGVzIGFycmF5IGlzIGVtcHR5XG4qIGBgYEVSUk9SX0VNUFRZX0lOUFVUICg1KWBgYCAtIGlucHV0IHNvdXJjZSAoZWl0aGVyIHN0cmluZyBvciBmaWxlKSBpcyBtaXNzaW5nXG4qIGBgYEVSUk9SX0xFTkdUSF9TVFJJTkcgKDYpYGBgIC0gc3RyaW5nIG9yIGJ5dGVzIGxlbmd0aCBpcyB0b28gbG9uZ1xuKiBgYGBFUlJPUl9JTlZBTElEX0xBTkcgKDcpYGBgIC0gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2Ugbm90IHN1cHBvcnRlZFxuKiBgYGBFUlJPUl9JTlZBTElEX0xPQ0FMRSAoOClgYGAgLSBsYW5ndWFnZSBsb2NhbGUgaXMgbm90IHN1cHBvcnRlZFxuKiBgYGBFUlJPUl9DTURfTUlOICg5KWBgYCAtIGludmFsaWQgbnVtYmVyIG9mIG1pbmltdW0gZW5jcnlwdGlvbiBjb21tYW5kc1xuKiBgYGBFUlJPUl9DTURfTUFYICgxMClgYGAgLSBpbnZhbGlkIG51bWJlciBvZiBtYXhpbXVtIGVuY3J5cHRpb24gY29tbWFuZHNcbiogYGBgRVJST1JfREVNTyAoMTAwKWBgYCAtIHlvdSBuZWVkIGEgdmFsaWQgY29kZSB0byB1c2UgZnVsbCB2ZXJzaW9uIGZlYXR1cmVzXG5cbiMjIyBDdXN0b20gc3RyaW5nIGVuY3J5cHRpb24gZm9yIG90aGVyIHByb2dyYW1taW5nIGxhbmd1YWdlc1xuXG5gYGBweXRob25cbiMhL3Vzci9iaW4vZW52IHB5dGhvblxuXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4jXG4jIFN0cmluZyBFbmNyeXB0IFdlYkFwaSBpbnRlcmZhY2UgdXNhZ2UgZXhhbXBsZS5cbiNcbiMgSW4gdGhpcyBleGFtcGxlIHdlIHdpbGwgZW5jcnlwdCBzYW1wbGUgc3RyaW5ncyB3aXRoIGN1c3RvbSBvcHRpb25zLlxuI1xuIyBWZXJzaW9uICAgICAgICA6IHYxLjBcbiMgTGFuZ3VhZ2UgICAgICAgOiBQeXRob25cbiMgQXV0aG9yICAgICAgICAgOiBCYXJ0b3N6IFfDs2pjaWtcbiMgUHJvamVjdCBwYWdlICAgOiBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbVxuIyBXZWIgcGFnZSAgICAgICA6IGh0dHBzOi8vd3d3LnBlbG9jay5jb21cbiNcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuI1xuIyBpbmNsdWRlIFN0cmluZ0VuY3J5cHQgbW9kdWxlXG4jXG5mcm9tIHN0cmluZ2VuY3J5cHQgaW1wb3J0IFN0cmluZ0VuY3J5cHRcblxuI1xuIyBpZiB5b3UgZG9uJ3Qgd2FudCB0byB1c2UgUHl0aG9uIG1vZHVsZSwgeW91IGNhbiBpbXBvcnQgaXQgZGlyZWN0bHkgZnJvbSB0aGUgZmlsZVxuI1xuI2Zyb20gc3RyaW5nZW5jcnlwdC5zdHJpbmdlbmNyeXB0IGltcG9ydCBTdHJpbmdFbmNyeXB0XG5cblxuZGVmIHByaW50X3Jlc3VsdHMocmVzdWx0KTpcblxuICAgICNcbiAgICAjIHJlc3VsdFtdIGFycmF5IGhvbGRzIHRoZSBlbmNyeXB0aW9uIHJlc3VsdHMgYXMgd2VsbCBhcyBvdGhlciBpbmZvcm1hdGlvblxuICAgICNcbiAgICAjIHJlc3VsdFtcImVycm9yXCJdIChpbnQpIC0gZXJyb3IgY29kZVxuICAgICMgcmVzdWx0W1wiZXJyb3Jfc3RyaW5nXCJdIChzdHJpbmcpIC0gZXJyb3IgY29kZSBhcyBhIHN0cmluZ1xuICAgICMgcmVzdWx0W1wic291cmNlXCJdIChzdHJpbmcpIC0gZGVjcnlwdG9yIHNvdXJjZSBjb2RlXG4gICAgIyByZXN1bHRbXCJleHBpcmVkXCJdIChib29sZWFuKSAtIGV4cGlyYXRpb24gZmxhZ1xuICAgICMgcmVzdWx0W1wiY3JlZGl0c19sZWZ0XCJdIChpbnQpIC0gbnVtYmVyIG9mIGNyZWRpdHMgbGVmdFxuICAgICMgcmVzdWx0W1wiY3JlZGl0c190b3RhbFwiXSAoaW50KSAtIGluaXRpYWwgbnVtYmVyIG9mIGNyZWRpdHNcblxuICAgIGlmIHJlc3VsdCBhbmQgXCJlcnJvclwiIGluIHJlc3VsdDpcblxuICAgICAgICAjIGRpc3BsYXkgc291cmNlIGNvZGUgb2YgdGhlIGRlY3J5cHRpb24gY29kZVxuICAgICAgICBpZiByZXN1bHRbXCJlcnJvclwiXSA9PSBTdHJpbmdFbmNyeXB0LkVycm9yQ29kZXMuRVJST1JfU1VDQ0VTUzpcbiAgICAgICAgICAgIHByaW50KHJlc3VsdFtcInNvdXJjZVwiXSlcbiAgICAgICAgZWxzZTpcbiAgICAgICAgICAgIHByaW50KGYnQW4gZXJyb3Igb2NjdXJyZWQsIGVycm9yIGNvZGU6IHtyZXN1bHRbXCJlcnJvclwiXX0gKHtyZXN1bHRbXCJlcnJvcl9zdHJpbmdcIl19KScpXG5cbiAgICBlbHNlOlxuICAgICAgICBwcmludChcIlNvbWV0aGluZyB1bmV4cGVjdGVkIGhhcHBlbiB3aGlsZSB0cnlpbmcgdG8gZW5jcnlwdCB0aGUgc3RyaW5nLlwiKVxuXG5cbiNcbiMgY3JlYXRlIFN0cmluZ0VuY3J5cHQgY2xhc3MgaW5zdGFuY2UgKHdlIGFyZSB1c2luZyBvdXIgYWN0aXZhdGlvbiBjb2RlKVxuI1xubXlTdHJpbmdFbmNyeXB0ID0gU3RyaW5nRW5jcnlwdChcIkFCQ0QtQUJDRC1BQkNELUFCQ0RcIilcblxuI1xuIyBlbmNyeXB0IGEgc3RyaW5nIHVzaW5nIGFsbCB0aGUgZGVmYXVsdCBvcHRpb25zXG4jXG5yZXN1bHQgPSBteVN0cmluZ0VuY3J5cHQuZW5jcnlwdF9zdHJpbmcoXCJIZWxsb1wiLCBcImxhYmVsXCIpXG5wcmludF9yZXN1bHRzKHJlc3VsdClcblxuI1xuIyBsZXRzIGNoYW5nZSB0aGUgb3V0cHV0IHByb2dyYW1taW5nIGxhbmd1YWdlIGludG8gQysrXG4jXG5teVN0cmluZ0VuY3J5cHQub3V0cHV0UHJvZ3JhbW1pbmdMYW5ndWFnZSA9IFN0cmluZ0VuY3J5cHQuT3V0cHV0UHJvZ3JhbW1pbmdMYW5ndWFnZXMuTEFOR19DUFBcblxucmVzdWx0ID0gbXlTdHJpbmdFbmNyeXB0LmVuY3J5cHRfc3RyaW5nKFwiQysrXCIsIFwid3N6TGJsXCIpXG5wcmludF9yZXN1bHRzKHJlc3VsdClcblxuI1xuIyBjaGFuZ2UgdGhlIGVuY29kaW5nIG9mIHRoZSBzdHJpbmcgdG8gQU5TSVxuI1xubXlTdHJpbmdFbmNyeXB0LnVzZVVuaWNvZGUgPSBGYWxzZVxuXG5yZXN1bHQgPSBteVN0cmluZ0VuY3J5cHQuZW5jcnlwdF9zdHJpbmcoXCJBTlNJIVwiLCBcInN6TGJsXCIpXG5wcmludF9yZXN1bHRzKHJlc3VsdClcblxuI1xuIyBjaGFuZ2UgdG8gSmF2YVNjcmlwdCBsYW5ndWFnZSBvdXRwdXQgYW5kIHNlZSB0aGUgZGlmZmVyZW5jZVxuIyBiZXR3ZWVuIGxvY2FsIHZhcmlhYmxlIGVuY29kaW5nIGFuZCBnbG9iYWwgdmFyaWFibGUgZW5jb2RpbmdcbiNcbm15U3RyaW5nRW5jcnlwdC51c2VVbmljb2RlID0gVHJ1ZVxubXlTdHJpbmdFbmNyeXB0Lm91dHB1dFByb2dyYW1taW5nTGFuZ3VhZ2UgPSBTdHJpbmdFbmNyeXB0Lk91dHB1dFByb2dyYW1taW5nTGFuZ3VhZ2VzLkxBTkdfSlNcbm15U3RyaW5nRW5jcnlwdC5kZWNsYXJlQXNMb2NhbFZhcmlhYmxlID0gVHJ1ZVxuXG5yZXN1bHQgPSBteVN0cmluZ0VuY3J5cHQuZW5jcnlwdF9zdHJpbmcoXCJMb2NhbFwiLCBcImxvY2FsXCIpXG5wcmludF9yZXN1bHRzKHJlc3VsdClcblxuI1xuIyBzd2l0Y2ggdG8gZ2xvYmFsIHZhcmlhYmxlIGVuY29kaW5nIChpZiBwb3NzaWJsZSBmb3IgdGhlIHByb2dyYW1taW5nIGxhbmd1YWdlKVxuI1xubXlTdHJpbmdFbmNyeXB0LmRlY2xhcmVBc0xvY2FsVmFyaWFibGUgPSBGYWxzZVxuXG5yZXN1bHQgPSBteVN0cmluZ0VuY3J5cHQuZW5jcnlwdF9zdHJpbmcoXCJHbG9iYWxcIiwgXCJnbG9iYWxcIilcbnByaW50X3Jlc3VsdHMocmVzdWx0KVxuYGBgXG5cbiMjIyMgUmV0dXJuIHZhbHVlczpcblxuKiBgYGByZXN1bHRbXCJlcnJvclwiXSAoaW50KWBgYCAtIGVycm9yIGNvZGVcbiogYGBgcmVzdWx0W1wic291cmNlXCJdIChzdHJpbmcpYGBgIC0gZGVjcnlwdG9yIHNvdXJjZSBjb2RlXG4qIGBgYHJlc3VsdFtcImV4cGlyZWRcIl0gKGJvb2xlYW4pYGBgIC0gZXhwaXJhdGlvbiBmbGFnXG4qIGBgYHJlc3VsdFtcImNyZWRpdHNfbGVmdFwiXSAoaW50KWBgYCAtIG51bWJlciBvZiBjcmVkaXRzIGxlZnRcbiogYGBgcmVzdWx0W1wiY3JlZGl0c190b3RhbFwiXSAoaW50KWBgYCAtIGluaXRpYWwgbnVtYmVyIG9mIGNyZWRpdHNcblxuIyMjIyBFcnJvciBjb2RlczpcblxuKiBgYGBFUlJPUl9TVUNDRVNTICgwKWBgYCAtIGV2ZXJ5dGhpbmcgd2VudCBmaW5lXG4qIGBgYEVSUk9SX0VNUFRZX0xBQkVMICgxKWBgYCAtIGxhYmVsIHBhcmFtZXRlciBpcyBlbXB0eVxuKiBgYGBFUlJPUl9MRU5HVEhfTEFCRUwgKDIpYGBgIC0gbGFiZWwgbGVuZ3RoIGlzIHRvbyBsb25nXG4qIGBgYEVSUk9SX0VNUFRZX1NUUklORyAoMylgYGAgLSBpbnB1dCBzdHJpbmcgaXMgZW1wdHlcbiogYGBgRVJST1JfRU1QVFlfQllURVMgKDQpYGBgIC0gaW5wdXQgZmlsZSBieXRlcyBhcnJheSBpcyBlbXB0eVxuKiBgYGBFUlJPUl9FTVBUWV9JTlBVVCAoNSlgYGAgLSBpbnB1dCBzb3VyY2UgKGVpdGhlciBzdHJpbmcgb3IgZmlsZSkgaXMgbWlzc2luZ1xuKiBgYGBFUlJPUl9MRU5HVEhfU1RSSU5HICg2KWBgYCAtIHN0cmluZyBvciBieXRlcyBsZW5ndGggaXMgdG9vIGxvbmdcbiogYGBgRVJST1JfSU5WQUxJRF9MQU5HICg3KWBgYCAtIHByb2dyYW1taW5nIGxhbmd1YWdlIG5vdCBzdXBwb3J0ZWRcbiogYGBgRVJST1JfSU5WQUxJRF9MT0NBTEUgKDgpYGBgIC0gbGFuZ3VhZ2UgbG9jYWxlIGlzIG5vdCBzdXBwb3J0ZWRcbiogYGBgRVJST1JfQ01EX01JTiAoOSlgYGAgLSBpbnZhbGlkIG51bWJlciBvZiBtaW5pbXVtIGVuY3J5cHRpb24gY29tbWFuZHNcbiogYGBgRVJST1JfQ01EX01BWCAoMTApYGBgIC0gaW52YWxpZCBudW1iZXIgb2YgbWF4aW11bSBlbmNyeXB0aW9uIGNvbW1hbmRzXG4qIGBgYEVSUk9SX0RFTU8gKDEwMClgYGAgLSB5b3UgbmVlZCBhIHZhbGlkIGNvZGUgdG8gdXNlIGZ1bGwgdmVyc2lvbiBmZWF0dXJlc1xuXG5cbiMjIyBDaGVjayB0aGUgc3RhdHVzIG9mIHRoZSBhY3RpdmF0aW9uIGNvZGUgYW5kIHNob3cgY3VycmVudCBsaW1pdGF0aW9uc1xuXG5UaGlzIGV4YW1wbGUgc2hvd3MgaG93IHRvIGdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBhY3RpdmF0aW9uIGNvZGUgYW5kIGl0cyBmZWF0dXJlcy5cblxuYGBgcHl0aG9uXG4jIS91c3IvYmluL2VudiBweXRob25cblxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuI1xuIyBTdHJpbmdFbmNyeXB0IFdlYkFwaSBpbnRlcmZhY2UgdXNhZ2UgZXhhbXBsZS5cbiNcbiMgSW4gdGhpcyBleGFtcGxlIHdlIHdpbGwgdmVyaWZ5IG91ciBhY3RpdmF0aW9uIGNvZGUgc3RhdHVzLlxuI1xuIyBWZXJzaW9uICAgICAgICA6IHYxLjBcbiMgTGFuZ3VhZ2UgICAgICAgOiBQeXRob25cbiMgQXV0aG9yICAgICAgICAgOiBCYXJ0b3N6IFfDs2pjaWtcbiMgUHJvamVjdCBwYWdlICAgOiBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbVxuIyBXZWIgcGFnZSAgICAgICA6IGh0dHBzOi8vd3d3LnBlbG9jay5jb21cbiNcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuI1xuIyBpbmNsdWRlIFN0cmluZ0VuY3J5cHQgbW9kdWxlXG4jXG5mcm9tIHN0cmluZ2VuY3J5cHQgaW1wb3J0IFN0cmluZ0VuY3J5cHRcblxuI1xuIyBpZiB5b3UgZG9uJ3Qgd2FudCB0byB1c2UgUHl0aG9uIG1vZHVsZSwgeW91IGNhbiBpbXBvcnQgaXQgZGlyZWN0bHkgZnJvbSB0aGUgZmlsZVxuI1xuI2Zyb20gc3RyaW5nZW5jcnlwdC5zdHJpbmdlbmNyeXB0IGltcG9ydCBTdHJpbmdFbmNyeXB0XG5cbiNcbiMgY3JlYXRlIFN0cmluZ0VuY3J5cHQgY2xhc3MgaW5zdGFuY2UgKHdlIGFyZSB1c2luZyBvdXIgYWN0aXZhdGlvbiBjb2RlKVxuI1xubXlTdHJpbmdFbmNyeXB0ID0gU3RyaW5nRW5jcnlwdChcIkFCQ0QtQUJDRC1BQkNELUFCQ0RcIilcblxuI1xuIyBsb2dpbiB0byB0aGUgc2VydmljZVxuI1xucmVzdWx0ID0gbXlTdHJpbmdFbmNyeXB0LmlzX2RlbW8oKVxuXG4jXG4jIHJlc3VsdFtdIGFycmF5IGhvbGRzIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGljZW5zZVxuI1xuIyByZXN1bHRbXCJkZW1vXCJdIChib29sZWFuKSAtIGRlbW8gbW9kZSBmbGFnXG4jIHJlc3VsdFtcImxhYmVsX2xpbWl0XCJdIChpbnQpIC0gbGFiZWwgbGltaXQgbGVuZ3RoXG4jIHJlc3VsdFtcInN0cmluZ19saW1pdFwiXSAoaW50KSAtIHN0cmluZyBsaW1pdCBsZW5ndGhcbiMgcmVzdWx0W1wiYnl0ZXNfbGltaXRcIl0gKGludCkgLSBieXRlcy9maWxlIGxpbWl0IGxlbmd0aFxuIyByZXN1bHRbXCJjcmVkaXRzX2xlZnRcIl0gKGludCkgLSBudW1iZXIgb2YgY3JlZGl0cyBsZWZ0XG4jIHJlc3VsdFtcImNyZWRpdHNfdG90YWxcIl0gKGludCkgLSBpbml0aWFsIG51bWJlciBvZiBjcmVkaXRzXG4jIHJlc3VsdFtcImNtZF9taW5cIl0gKGludCkgLSBtaW5pbXVtIG51bWJlciBvZiBlbmNyeXB0aW9uIGNvbW1hbmRzXG4jIHJlc3VsdFtcImNtZF9tYXhcIl0gKGludCkgLSBtYXhpbXVtIG51bWJlciBvZiBlbmNyeXB0aW9uIGNvbW1hbmRzXG4jXG5pZiByZXN1bHQ6XG5cbiAgIHByaW50KGYnRGVtbyB2ZXJzaW9uIHN0YXR1cyAtIHtcIlRydWVcIiBpZiByZXN1bHRbXCJkZW1vXCJdIGVsc2UgXCJGYWxzZVwifScpXG5cbiAgIHByaW50KGYnTGFiZWwgbGVuZ3RoIGxpbWl0IC0ge3Jlc3VsdFtcImxhYmVsX2xpbWl0XCJdfScpXG4gICBwcmludChmJ1N0cmluZyBsZW5ndGggbGltaXQgLSB7cmVzdWx0W1wic3RyaW5nX2xpbWl0XCJdfScpXG5cbiAgIHByaW50KGYnRmlsZSBieXRlcyBsaW1pdCAtIHtyZXN1bHRbXCJieXRlc19saW1pdFwiXX0nKVxuXG4gICBwcmludChmJ1VzYWdlIGNyZWRpdHMgbGVmdCAtIHtyZXN1bHRbXCJjcmVkaXRzX2xlZnRcIl19JylcbiAgIHByaW50KGYnVG90YWwgdXNhZ2UgY3JlZGl0cyAtIHtyZXN1bHRbXCJjcmVkaXRzX3RvdGFsXCJdfScpXG5cbiAgIHByaW50KGYnTWluLiBudW1iZXIgb2YgZW5jcnlwdGlvbiBjb21tYW5kcyAtIHtyZXN1bHRbXCJjbWRfbWluXCJdfScpXG4gICBwcmludChmJ01heC4gbnVtYmVyIG9mIGVuY3J5cHRpb24gY29tbWFuZHMgLSB7cmVzdWx0W1wiY21kX21heFwiXX0nKVxuXG5lbHNlOlxuICAgcHJpbnQoXCJTb21ldGhpbmcgdW5leHBlY3RlZCBoYXBwZW4gd2hpbGUgdHJ5aW5nIHRvIGxvZ2luIHRvIHRoZSBzZXJ2aWNlLlwiKVxuYGBgXG5cbiMjIyMgUmV0dXJuIHZhbHVlczpcblxuKiBgYGAkcmVzdWx0W1wiZGVtb1wiXSAoYm9vbGVhbilgYGAgLSBkZW1vIG1vZGUgZmxhZ1xuKiBgYGAkcmVzdWx0W1wibGFiZWxfbGltaXRcIl0gKGludClgYGAgLSBsYWJlbCBsaW1pdCBsZW5ndGhcbiogYGBgJHJlc3VsdFtcInN0cmluZ19saW1pdFwiXSAoaW50KWBgYCAtIHN0cmluZy9maWxlIGxpbWl0IGxlbmd0aFxuKiBgYGAkcmVzdWx0W1wiY3JlZGl0c19sZWZ0XCJdIChpbnQpYGBgIC0gbnVtYmVyIG9mIGNyZWRpdHMgbGVmdFxuKiBgYGAkcmVzdWx0W1wiY3JlZGl0c190b3RhbFwiXSAoaW50KWBgYCAtIGluaXRpYWwgbnVtYmVyIG9mIGNyZWRpdHNcbiogYGBgJHJlc3VsdFtcImNtZF9taW5cIl0gKGludClgYGAgLSBtaW5pbXVtIG51bWJlciBvZiBlbmNyeXB0aW9uIGNvbW1hbmRzXG4qIGBgYCRyZXN1bHRbXCJjbWRfbWF4XCJdIChpbnQpYGBgIC0gbWF4aW11bSBudW1iZXIgb2YgZW5jcnlwdGlvbiBjb21tYW5kc1xuXG4jIyMjIEVycm9yIGNvZGVzXG4qIG5vbmVcblxuIyMgU3VwcG9ydGVkIHByb2dyYW1taW5nIGxhbmd1YWdlc1xuXG5TdHJpbmdFbmNyeXB0IGVuZ2luZSBzdXBwb3J0cyBjb2RlIGdlbmVyYXRpb24gZm9yIHRoZSBmb2xsb3dpbmcgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzOlxuXG4qIFtDICYgQysrXShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9jLWNwcC1lbmNyeXB0aW9uLylcbiogW0MjIChDIFNoYXJwIGZvciAuTkVUKV0oaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vYy1zaGFycC1lbmNyeXB0aW9uLylcbiogW1Zpc3VhbCBCYXNpYyAuTkVUIChWQi5ORVQpXShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS92aXN1YWwtYmFzaWMtbmV0LXZiLW5ldC1lbmNyeXB0aW9uLylcbiogW0RlbHBoaSAvIFBhc2NhbF0oaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vZGVscGhpLXBhc2NhbC1lbmNyeXB0aW9uLylcbiogW0phdmFdKGh0dHBzOi8vd3d3LnN0cmluZ2VuY3J5cHQuY29tL2phdmEtZW5jcnlwdGlvbi8pXG4qIFtKYXZhU2NyaXB0XShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9qYXZhc2NyaXB0LWVuY3J5cHRpb24vKVxuKiBbUHl0aG9uXShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9weXRob24tZW5jcnlwdGlvbi8pXG4qIFtSdWJ5XShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9ydWJ5LWVuY3J5cHRpb24vKVxuKiBbQXV0b0l0XShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9hdXRvaXQtZW5jcnlwdGlvbi8pXG4qIFtQb3dlcnNoZWxsXShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9wb3dlcnNoZWxsLWVuY3J5cHRpb24vKVxuKiBbSGFza2VsbF0oaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vaGFza2VsbC1lbmNyeXB0aW9uLylcbiogW01BU00gYXNzZW1ibGVyXShodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9tYXNtLWVuY3J5cHRpb24vKVxuKiBbRkFTTSBhc3NlbWJsZXJdKGh0dHBzOi8vd3d3LnN0cmluZ2VuY3J5cHQuY29tL2Zhc20tZW5jcnlwdGlvbi8pXG5cblNvbWUgZXhhbXBsZXMgb2YgZ2VuZXJhdGVkIHNvdXJjZSBjb2RlIGZvciBzdXBwb3J0ZWQgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzOlxuXG4jIyMgQy9DKysgZW5jcnlwdGlvbiAoVU5JQ09ERSBleGFtcGxlKVxuYGBgY3BwXG4vLyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbQy9DKytdXG4vLyB3c3pMYWJlbCA9IFwiQy9DKysgU3RyaW5nIEVuY3J5cHRpb25cIlxud2NoYXJfdCB3c3pMYWJlbFsyNF0gPSB7IDB4NUFEQSwgMHg2QzIxLCAweDVBMjQsIDB4NkRFRiwgMHg2REZFLCAweDc0QzUsIDB4NTI0MCwgMHg0MjhCLFxuICAgICAgICAgICAgICAgICAgICAgICAgIDB4NDM4MiwgMHg0RjY5LCAweDRDREMsIDB4NDgyNywgMHg3M0E2LCAweDU5OEQsIDB4NENGOCwgMHg0QTQzLFxuICAgICAgICAgICAgICAgICAgICAgICAgIDB4NDBBQSwgMHgzRkIxLCAweDREMzQsIDB4NDJERiwgMHg0NzRFLCAweDQyRDUsIDB4NEM1MCwgMHg4NTE0IH07XG5cbmZvciAodW5zaWduZWQgaW50IEpUSWlmID0gMCwga3RUY3MgPSAwOyBKVElpZiA8IDI0OyBKVElpZisrKVxue1xuICAgICAgICBrdFRjcyA9IHdzekxhYmVsW0pUSWlmXTtcbiAgICAgICAga3RUY3MgXj0gSlRJaWY7XG4gICAgICAgIGt0VGNzICsrO1xuICAgICAgICBrdFRjcyArPSBKVElpZjtcbiAgICAgICAga3RUY3MgXj0gSlRJaWY7XG4gICAgICAgIGt0VGNzID0gKCgoa3RUY3MgJiAweEZGRkYpID4+IDMpIHwgKGt0VGNzIDw8IDEzKSkgJiAweEZGRkY7XG4gICAgICAgIGt0VGNzID0gfmt0VGNzO1xuICAgICAgICBrdFRjcyArPSBKVElpZjtcbiAgICAgICAga3RUY3MgPSAoKChrdFRjcyAmIDB4RkZGRikgPj4gMSkgfCAoa3RUY3MgPDwgMTUpKSAmIDB4RkZGRjtcbiAgICAgICAga3RUY3MgPSB+a3RUY3M7XG4gICAgICAgIGt0VGNzICs9IEpUSWlmO1xuICAgICAgICBrdFRjcyBePSAweEI3QjU7XG4gICAgICAgIGt0VGNzICs9IEpUSWlmO1xuICAgICAgICBrdFRjcyBePSBKVElpZjtcbiAgICAgICAga3RUY3MgLT0gSlRJaWY7XG4gICAgICAgIGt0VGNzID0gKChrdFRjcyA8PCAxMykgfCAoIChrdFRjcyAmIDB4RkZGRikgPj4gMykpICYgMHhGRkZGO1xuICAgICAgICB3c3pMYWJlbFtKVElpZl0gPSBrdFRjcztcbn1cblxud3ByaW50Zih3c3pMYWJlbCk7XG5gYGBcblxuIyMjIEMjIFNoYXJwIGVuY3J5cHRpb24gKFVOSUNPREUgZXhhbXBsZSlcblxuYGBgY3NoYXJwXG4vLyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbQyNdXG4vLyBzdXBlclNlY3JldFN0cmluZyA9IFwiRWFzeSBlbmNyeXB0aW9uIGluIEMjXCJcblN0cmluZyBzdXBlclNlY3JldFN0cmluZyA9IFwiXFx1NkI1NlxcdUExNEFcXHU4MzRCXFx1OTU0Q1xcdUQ5NUFcXHVCMTRFXFx1ODE0RlxcdTU5NURcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcdTk1NTFcXHU4MTUyXFx1OTU1M1xcdUJGNTRcXHU1QjYyXFx1OTU1NlxcdTkxNTdcXHUyRjY1XCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXHU1MzY2XFx1OUY1QVxcdUM1NjhcXHUwMTY5XFx1RkY2QVwiO1xuXG5mb3IgKGludCBYQmFzRCA9IDAsIERiemVqID0gMDsgWEJhc0QgPCAyMTsgWEJhc0QrKylcbntcbiAgICAgICAgRGJ6ZWogPSBzdXBlclNlY3JldFN0cmluZ1tYQmFzRF07XG4gICAgICAgIERiemVqIC09IFhCYXNEO1xuICAgICAgICBEYnplaiA9ICgoRGJ6ZWogPDwgOCkgfCAoIChEYnplaiAmIDB4RkZGRikgPj4gOCkpICYgMHhGRkZGO1xuICAgICAgICBEYnplaiBePSAweEY5QTE7XG4gICAgICAgIERiemVqID0gKCgoRGJ6ZWogJiAweEZGRkYpID4+IDEpIHwgKERiemVqIDw8IDE1KSkgJiAweEZGRkY7XG4gICAgICAgIERiemVqIC09IDB4QTNDQztcbiAgICAgICAgRGJ6ZWogXj0gWEJhc0Q7XG4gICAgICAgIERiemVqICs9IDB4NEMyQztcbiAgICAgICAgc3VwZXJTZWNyZXRTdHJpbmcgPSBzdXBlclNlY3JldFN0cmluZy5TdWJzdHJpbmcoMCwgWEJhc0QpICsgKGNoYXIpKERiemVqICYgMHhGRkZGKSArIHN1cGVyU2VjcmV0U3RyaW5nLlN1YnN0cmluZyhYQmFzRCArIDEpO1xufVxuXG5NZXNzYWdlQm94LlNob3coc3VwZXJTZWNyZXRTdHJpbmcpO1xuYGBgXG5cbiMjIFZpc3VhbCBCYXNpYyAuTkVUIGFrYSBWQi5ORVQgZW5jcnlwdGlvbiAoVU5JQ09ERSBFWEFNUExFKVxuXG5gYGB2Ym5ldFxuJyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbVmlzdWFsIEJhc2ljIC5ORVRdXG4nIEVuY3J5cHRlZFN0cmluZyA9IFwiVmlzdWFsIEJhc2ljIC5ORVQgc3RyaW5nIGVuY3J5cHRpb25cIlxuRGltIGVwVGx6KCkgQXMgSW50ZWdlciA9IHsgJkg4RUQ5LCAmSDNCRDksICZIRjFEOCwgJkhBRkQ4LCAmSDYzRDgsICZIMzhEOCwgJkg0NEQ4LCAmSEMyRDcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAmSDg1RDcsICZIMzNENywgJkhGREQ2LCAmSEEzRDYsICZIQzRENiwgJkg3NkQ2LCAmSDE2RDYsICZIQzFENSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICZIOTBENSwgJkg4NEQ1LCAmSEYxRDQsICZIQjBENCwgJkg3NkQ0LCAmSDNGRDQsICZIRkFEMywgJkhCREQzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgJkhDNEQzLCAmSDIxRDMsICZIRkFEMiwgJkhDN0QyLCAmSDc2RDIsICZIMkREMiwgJkhGNEQxLCAmSEIwRDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAmSDYzRDEsICZIMzVEMSwgJkhGNkQwIH1cbkRpbSBFbmNyeXB0ZWRTdHJpbmcgQXMgU3RyaW5nXG5EaW0gQmVQdVEgQXMgSW50ZWdlclxuXG5EaW0gYmx2am4gQXMgSW50ZWdlclxuRm9yIGJsdmpuID0gMCBUbyAzNFxuICBCZVB1USA9IGVwVGx6KGJsdmpuKVxuICBCZVB1USAtPSAxXG4gIEJlUHVRID0gKCgoQmVQdVEgQW5kICZIRkZGRikgPj4gMTMpIE9yIChCZVB1USA8PCAzKSkgQW5kICZIRkZGRlxuICBCZVB1USArPSBibHZqblxuICBCZVB1USAtPSAmSEY3NENcbiAgQmVQdVEgKz0gYmx2am5cbiAgQmVQdVEgLT0gJkgyRTdCXG4gIEJlUHVRID0gKCgoQmVQdVEgQW5kICZIRkZGRikgPj4gOCkgT3IgKEJlUHVRIDw8IDgpKSBBbmQgJkhGRkZGXG4gIEJlUHVRID0gTm90IEJlUHVRXG4gIEJlUHVRID0gQmVQdVEgWG9yIGJsdmpuXG4gIEJlUHVRICs9IDFcbiAgQmVQdVEgKz0gYmx2am5cbiAgQmVQdVEgPSAoKEJlUHVRIDw8IDEzKSBPciAoIChCZVB1USBBbmQgJkhGRkZGKSA+PiAzKSkgQW5kICZIRkZGRlxuICBFbmNyeXB0ZWRTdHJpbmcgPSBFbmNyeXB0ZWRTdHJpbmcgKyBDaHJXKEJlUHVRIEFuZCAmSEZGRkYpXG5OZXh0IGJsdmpuXG5cbk1lc3NhZ2VCb3guU2hvdyhFbmNyeXB0ZWRTdHJpbmcpXG5gYGBcblxuIyMgRGVscGhpICYgUGFzY2FsIGVuY3J5cHRpb24gKFVOSUNPREUgZXhhbXBsZSlcblxuYGBgZGVscGhpXG4vLyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbRGVscGhpIC8gUGFzY2FsXVxudmFyXG4gIC8vIG15U2VjcmV0ID0gXCJEZWxwaGkgaXMgYXdlc29tZSFcIlxuICBteVNlY3JldDogYXJyYXlbMC4uMTldIG9mIFdpZGVDaGFyO1xuICBFUG13ZDogSW50ZWdlcjtcbiAgWkhucHM6IEludGVnZXI7XG5cbmJlZ2luXG5cbiAgbXlTZWNyZXRbMTZdIDo9IFdpZGVDaGFyKCRDMjJFKTsgbXlTZWNyZXRbNV0gOj0gV2lkZUNoYXIoJEMxRkEpO1xuICBteVNlY3JldFs3XSA6PSBXaWRlQ2hhcigkQzIwNik7IG15U2VjcmV0WzhdIDo9IFdpZGVDaGFyKCRDMjA4KTtcbiAgbXlTZWNyZXRbMTBdIDo9IFdpZGVDaGFyKCRDMUZBKTsgbXlTZWNyZXRbNF0gOj0gV2lkZUNoYXIoJEMxRkIpO1xuICBteVNlY3JldFs5XSA6PSBXaWRlQ2hhcigkQzFBRCk7IG15U2VjcmV0WzE3XSA6PSBXaWRlQ2hhcigkQzFFQSk7XG4gIG15U2VjcmV0WzJdIDo9IFdpZGVDaGFyKCRDMUZCKTsgbXlTZWNyZXRbMTFdIDo9IFdpZGVDaGFyKCRDMUJDKTtcbiAgbXlTZWNyZXRbM10gOj0gV2lkZUNoYXIoJEMxRkQpOyBteVNlY3JldFs2XSA6PSBXaWRlQ2hhcigkQzFCRik7XG4gIG15U2VjcmV0WzE1XSA6PSBXaWRlQ2hhcigkQzIwMik7IG15U2VjcmV0WzBdIDo9IFdpZGVDaGFyKCRDMThGKTtcbiAgbXlTZWNyZXRbMV0gOj0gV2lkZUNoYXIoJEMxRUUpOyBteVNlY3JldFsxMl0gOj0gV2lkZUNoYXIoJEMyMDYpO1xuICBteVNlY3JldFsxOF0gOj0gV2lkZUNoYXIoJEMyOEYpOyBteVNlY3JldFsxNF0gOj0gV2lkZUNoYXIoJEMyMDApO1xuICBteVNlY3JldFsxM10gOj0gV2lkZUNoYXIoJEMxQjgpO1xuXG4gIGZvciBaSG5wcyA6PSAwIHRvIDE5IGRvXG4gIGJlZ2luXG4gICAgRVBtd2QgOj0gT3JkKG15U2VjcmV0W1pIbnBzXSk7XG4gICAgRVBtd2QgOj0gRVBtd2QgLSBaSG5wcztcbiAgICBFUG13ZCA6PSBFUG13ZCAtICQwMUJFO1xuICAgIEVQbXdkIDo9IG5vdCBFUG13ZDtcbiAgICBFUG13ZCA6PSBFUG13ZCArICQyRDdBO1xuICAgIEVQbXdkIDo9IEVQbXdkIC0gWkhucHM7XG4gICAgRVBtd2QgOj0gRVBtd2QgeG9yIFpIbnBzO1xuICAgIEVQbXdkIDo9IEVQbXdkICsgJDAwNEI7XG4gICAgRVBtd2QgOj0gRVBtd2QgeG9yIFpIbnBzO1xuICAgIEVQbXdkIDo9IEVQbXdkICsgWkhucHM7XG4gICAgSW5jKEVQbXdkKTtcbiAgICBFUG13ZCA6PSBFUG13ZCB4b3IgJEVCNUM7XG4gICAgRVBtd2QgOj0gRVBtd2QgKyAkNzk5QztcbiAgICBFUG13ZCA6PSBFUG13ZCB4b3IgWkhucHM7XG4gICAgbXlTZWNyZXRbWkhucHNdIDo9IFdpZGVDaGFyKEVQbXdkKTtcbiAgZW5kO1xuXG4gIFNob3dNZXNzYWdlKG15U2VjcmV0KTtcbmBgYFxuXG4jIyBKYXZhIGVuY3J5cHRpb24gKFVOSUNPREUgZXhhbXBsZSlcblxuYGBgamF2YVxuLy8gZW5jcnlwdGVkIHdpdGggaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20gKHYxLjMuMCkgW0phdmFdXG4vLyBteUphdmFQYXNzd29yZCA9IFwiVmVyeSBzZWNyZXQgcGFzc3dvcmQhIFFXRVJUWVwiXG5TdHJpbmcgbXlKYXZhUGFzc3dvcmQgPSBcIlwiO1xuXG5pbnQgSmJlTVlbXSA9IHsgMHgwNDM0LCAweDg0MkMsIDB4MDQyNiwgMHg4NDIyLCAweDAzQ0QsIDB4ODQyMywgMHg4NDJDLCAweDg0MkIsXG4gICAgICAgICAgICAgICAgMHgwNDE2LCAweDg0M0MsIDB4MDQxMywgMHgwM0RELCAweDA0MTUsIDB4ODQzRSwgMHg4NDEzLCAweDg0MTMsXG4gICAgICAgICAgICAgICAgMHg4NDIxLCAweDg0MjUsIDB4MDQyNiwgMHgwNDBCLCAweDgzQUUsIDB4MDNBRCwgMHg4NDM2LCAweDg0MzEsXG4gICAgICAgICAgICAgICAgMHg4M0NDLCAweDA0MDYsIDB4MDQwMywgMHg4NDAyIH07XG5cbmZvciAoaW50IHp1TFJHID0gMCwgdG5ZenkgPSAwOyB6dUxSRyA8IDI4OyB6dUxSRysrKVxue1xuICAgICAgICB0bll6eSA9IEpiZU1ZW3p1TFJHXTtcbiAgICAgICAgdG5ZenkgLS07XG4gICAgICAgIHRuWXp5IF49IHp1TFJHO1xuICAgICAgICB0bll6eSArPSAweDk5Qzg7XG4gICAgICAgIHRuWXp5IF49IHp1TFJHO1xuICAgICAgICB0bll6eSBePSAweDk1QzE7XG4gICAgICAgIHRuWXp5ID0gKCgodG5ZenkgJiAweEZGRkYpID4+IDE1KSB8ICh0bll6eSA8PCAxKSkgJiAweEZGRkY7XG4gICAgICAgIHRuWXp5IC0tO1xuICAgICAgICB0bll6eSBePSAweEZGRkY7XG4gICAgICAgIHRuWXp5ICs9IDB4MTBDQTtcbiAgICAgICAgbXlKYXZhUGFzc3dvcmQgPSBteUphdmFQYXNzd29yZCArIChjaGFyKSh0bll6eSAmIDB4RkZGRik7XG59XG5cblN5c3RlbS5vdXQucHJpbnRsbihteUphdmFQYXNzd29yZCk7XG5gYGBcblxuIyMjIEphdmFTY3JpcHQgZW5jcnlwdGlvbiAoQU5TSSlcblxuYGBganNcbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuLy8gZW5jcnlwdGVkIHdpdGggaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20gKHYxLjMuMCkgW0phdmFTY3JpcHRdXG4vLyBoaWRkZW5KYXZhU2NyaXB0U3RyaW5nID0gXCJIb3cgdG8gZW5jcnlwdCBzdHJpbmcgaW4gSmF2YVNjcmlwdD8gVGhhdFxcJ3MgaG93IVwiXG52YXIgaGlkZGVuSmF2YVNjcmlwdFN0cmluZyA9IFwiXFx4OENcXHhCNFxceDRFXFx4NUJcXHg0QVxceEQ0XFx4MDdcXHhCQ1xceEI0XFx4QzRcXHg1MlxceDdFXFx4MUFcXHg3MlxceEU3XFx4QjZcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFx4REFcXHhEQVxceDg4XFx4NjdcXHhGOFxceDVDXFx4NjdcXHg0OVxceDUwXFx4QjlcXHg0N1xceEZBXFx4MURcXHhFRFxceDJEXFx4MzlcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFx4OERcXHgyMVxceDU3XFx4NjZcXHhBMFxceEIxXFx4QTlcXHg4RFxceDVGXFx4RjBcXHg1M1xceDlDXFx4N0FcXHgxRVxceEMzXFx4RjBcIjtcblxuZm9yICh2YXIgb0JGRWkgPSAwLCBoRlNyQSA9IDA7IG9CRkVpIDwgNDg7IG9CRkVpKyspXG57XG4gICAgICAgIGhGU3JBID0gaGlkZGVuSmF2YVNjcmlwdFN0cmluZy5jaGFyQ29kZUF0KG9CRkVpKTtcbiAgICAgICAgaEZTckEgPSAoKGhGU3JBIDw8IDEpIHwgKCAoaEZTckEgJiAweEZGKSA+PiA3KSkgJiAweEZGO1xuICAgICAgICBoRlNyQSArPSAweDlFO1xuICAgICAgICBoRlNyQSA9ICgoaEZTckEgPDwgNikgfCAoIChoRlNyQSAmIDB4RkYpID4+IDIpKSAmIDB4RkY7XG4gICAgICAgIGhGU3JBIF49IG9CRkVpO1xuICAgICAgICBoRlNyQSAtPSBvQkZFaTtcbiAgICAgICAgaEZTckEgXj0gMHhGRjtcbiAgICAgICAgaEZTckEgPSAoKChoRlNyQSAmIDB4RkYpID4+IDYpIHwgKGhGU3JBIDw8IDIpKSAmIDB4RkY7XG4gICAgICAgIGhGU3JBIF49IDB4QzM7XG4gICAgICAgIGhGU3JBID0gKChoRlNyQSA8PCA0KSB8ICggKGhGU3JBICYgMHhGRikgPj4gNCkpICYgMHhGRjtcbiAgICAgICAgaEZTckEgKz0gMHhEMTtcbiAgICAgICAgaEZTckEgLT0gb0JGRWk7XG4gICAgICAgIGhGU3JBICs9IDB4MEI7XG4gICAgICAgIGhGU3JBIF49IDB4RDg7XG4gICAgICAgIGhGU3JBID0gKCgoaEZTckEgJiAweEZGKSA+PiA3KSB8IChoRlNyQSA8PCAxKSkgJiAweEZGO1xuICAgICAgICBoRlNyQSArPSAweEIwO1xuICAgICAgICBoaWRkZW5KYXZhU2NyaXB0U3RyaW5nID0gaGlkZGVuSmF2YVNjcmlwdFN0cmluZy5zdWJzdHIoMCwgb0JGRWkpICsgU3RyaW5nLmZyb21DaGFyQ29kZShoRlNyQSAmIDB4RkYpICsgaGlkZGVuSmF2YVNjcmlwdFN0cmluZy5zdWJzdHIob0JGRWkgKyAxKTtcbn1cblxuYWxlcnQoaGlkZGVuSmF2YVNjcmlwdFN0cmluZyk7XG48L3NjcmlwdD5cbmBgYFxuXG4jIyMgUnVieSBlbmNyeXB0aW9uIChVTklDT0RFIGV4YW1wbGUpXG5cbmBgYHJ1YnlcblxuIyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbUnVieV1cbiMgcnVieSA9IFwiUnVieSBvbiByYWlsc1wiXG5ydWJ5ID0gXCJcXHU2OEVBXFx1NjBBMlxcdTc4QzZcXHU3MDk2XFx1NDk0NlxcdTQwQTZcXHU1OEE2XFx1NTE0MFxcdTI4N0FcXHUyMDlBXFx1MzhDOFxcdTMwQzBcXHUwODcwXCJcblxucnVieS5jb2RlcG9pbnRzLmVhY2hfd2l0aF9pbmRleCBkbyB8a29tZ3UsIHJ5ZHV0fFxuICBrb21ndSA9ICgoa29tZ3UgPDwgNSkgfCAoIChrb21ndSAmIDB4RkZGRikgPj4gMTEpKSAmIDB4RkZGRlxuICBrb21ndSBePSByeWR1dFxuICBrb21ndSA9ICgoKGtvbWd1ICYgMHhGRkZGKSA+PiA2KSB8IChrb21ndSA8PCAxMCkpICYgMHhGRkZGXG4gIGtvbWd1ICs9IHJ5ZHV0XG4gIGtvbWd1IC09IDB4MzREMFxuICBrb21ndSBePSByeWR1dFxuICBrb21ndSA9ICgoa29tZ3UgPDwgMTMpIHwgKCAoa29tZ3UgJiAweEZGRkYpID4+IDMpKSAmIDB4RkZGRlxuICBrb21ndSA9IH5rb21ndVxuICBrb21ndSAtPSAxXG4gIGtvbWd1ID0gKChrb21ndSA8PCAzKSB8ICggKGtvbWd1ICYgMHhGRkZGKSA+PiAxMykpICYgMHhGRkZGXG4gIGtvbWd1IF49IHJ5ZHV0XG4gIHJ1YnlbcnlkdXRdID0gW2tvbWd1ICYgMHhGRkZGXS5wYWNrKCdVJykuZm9yY2VfZW5jb2RpbmcoJ1VURi04JylcbmVuZFxuXG5wdXRzIHJ1YnlcbmBgYFxuXG5gYGBBdXRvSXQgZW5jcnlwdGlvbiAoVU5JQ09ERSBleGFtcGxlKVxuXG5gYGBhdXRvaXRcbjsgZW5jcnlwdGVkIHdpdGggaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20gKHYxLjMuMCkgW0F1dG9JdF1cbiNpbmNsdWRlIDxBcnJheS5hdTM+XG5cbjsgJGF1dG9pdF9vYmZ1c2NhdG9yID0gXCJXZSBnb3QgaXQgdG9vIGh0dHBzOi8vd3d3LnBlbG9jay5jb20vcHJvZHVjdHMvYXV0b2l0LW9iZnVzY2F0b3JcIlxuR2xvYmFsICRhdXRvaXRfb2JmdXNjYXRvcls2NF0gPSBbIDB4RDQ0MCwgMHhDRDAxLCAweEVGNDIsIDB4Q0M4MywgMHhDOTQ0LCAweEM0ODUsIDB4RUU0NiwgMHhDQTg3LCBfXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhDN0M4LCAweEVEODksIDB4Qzc0QSwgMHhDQThCLCAweENCNEMsIDB4RUM4RCwgMHhDODRFLCAweEM2MEYsIF9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweEMxRDAsIDB4QzM5MSwgMHhDMkQyLCAweEU2MTMsIDB4RUQ1NCwgMHhFRDE1LCAweEMxRDYsIDB4QzE5NywgX1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4QzI1OCwgMHhFRTk5LCAweEMxNUEsIDB4Q0I5QiwgMHhDRURDLCAweENGMUQsIDB4QzlERSwgMHhDRDlGLCBfXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhFMEUwLCAweEM2MjEsIDB4QzBFMiwgMHhDMUEzLCAweEUxNjQsIDB4Q0VBNSwgMHhDRjY2LCAweEMxQTcsIF9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweEM3RTgsIDB4Q0YyOSwgMHhDNEVBLCAweENGMkIsIDB4Q0Q2QywgMHhFMzJELCAweEM0RUUsIDB4Q0VBRiwgX1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4QzlGMCwgMHhDNDMxLCAweEM3RjIsIDB4QzkzMywgMHhFNDc0LCAweEM1MzUsIDB4QzM3NiwgMHhDMTM3LCBfXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHhDQjc4LCAweEM4MzksIDB4QzBGQSwgMHhDMUJCLCAweENBRkMsIDB4QzczRCwgMHhDOTdFLCAweEYwM0YgXVxuXG5Gb3IgJFB4V3RFID0gMCB0byA2M1xuICAgICRlVU9QYSA9ICRhdXRvaXRfb2JmdXNjYXRvclskUHhXdEVdXG4gICAgJGVVT1BhID0gQml0WE9SKCRlVU9QYSwgJFB4V3RFKVxuICAgICRlVU9QYSA9ICRlVU9QYSAtIDFcbiAgICAkZVVPUGEgPSBCaXRSb3RhdGUoJGVVT1BhLCAxMCwgXCJXXCIpXG4gICAgJGVVT1BhID0gJGVVT1BhICsgMVxuICAgICRlVU9QYSA9IEJpdFhPUigkZVVPUGEsICRQeFd0RSlcbiAgICAkZVVPUGEgPSBCaXROT1QoJGVVT1BhKVxuICAgICRlVU9QYSA9IEJpdFJvdGF0ZSgkZVVPUGEsIDE1LCBcIldcIilcbiAgICAkYXV0b2l0X29iZnVzY2F0b3JbJFB4V3RFXSA9IENoclcoQml0QU5EKCRlVU9QYSwgMHhGRkZGKSlcbk5leHRcblxuJGF1dG9pdF9vYmZ1c2NhdG9yID0gX0FycmF5VG9TdHJpbmcoJGF1dG9pdF9vYmZ1c2NhdG9yLCBcIlwiKVxuXG5Db25zb2xlV3JpdGUoJGF1dG9pdF9vYmZ1c2NhdG9yKVxuYGBgXG5cbiMjIyBQb3dlclNoZWxsIGVuY3J5cHRpb24gKFVOSUNPREUgZXhhbXBsZSlcblxuYGBgcG93ZXJzaGVsbFxuIyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbUG93ZXJTaGVsbF1cbiMgJExhYmVsID0gXCJXZWxsLCBpdCBoYXMgc29tZSBpbnRlcmVzdGluZyBzeW50YXghXCJcblt1aW50MTZbXV0gJHBZZU9TID0gMHg1NjU0LCAweDU2NTEsIDB4MTY1MCwgMHg5NjUwLCAweDE2NjEsIDB4OTY2NCwgMHhENjUyLCAweDk2NTAsXG4gICAgICAgICAgICAgICAgICAgIDB4MTY2NiwgMHg5NjU0LCAweEQ2NTYsIDB4RDY1MiwgMHgxNjY4LCAweEQ2NTMsIDB4NTY1NSwgMHg1NjU2LFxuICAgICAgICAgICAgICAgICAgICAweEQ2NTgsIDB4OTY2QSwgMHhENjU4LCAweDE2NTgsIDB4MTY1NywgMHg1NjVCLCAweDk2NTgsIDB4NTY1QyxcbiAgICAgICAgICAgICAgICAgICAgMHg1NjU5LCAweDk2NTksIDB4RDY1QywgMHgxNjVDLCAweDU2NUUsIDB4OTY3MCwgMHg1NjVDLCAweDU2NUIsXG4gICAgICAgICAgICAgICAgICAgIDB4OTY1RSwgMHg5NjVELCAweEQ2NjIsIDB4OTY1RCwgMHhENjczXG5bc3RyaW5nXSAkTGFiZWwgPSBcIlwiXG5cbmZvciAoJFRQWVNMID0gMDsgJFRQWVNMIC1sdCAzNzsgJFRQWVNMKyspXG57XG4gICRrcVN1SyA9ICRwWWVPU1skVFBZU0xdXG4gICRrcVN1SyA9IC1ibm90ICRrcVN1S1xuICAka3FTdUsgPSAoKCRrcVN1SyAtc2hsIDcpIC1ib3IgKCAoJGtxU3VLIC1iYW5kIDB4RkZGRikgLXNociA5KSkgLWJhbmQgMHhGRkZGXG4gICRrcVN1SyArPSAxXG4gICRrcVN1SyA9ICgoKCRrcVN1SyAtYmFuZCAweEZGRkYpIC1zaHIgNSkgLWJvciAoJGtxU3VLIC1zaGwgMTEpKSAtYmFuZCAweEZGRkZcbiAgJGtxU3VLICs9ICRUUFlTTFxuICAka3FTdUsgLT0gMVxuICAka3FTdUsgKz0gJFRQWVNMXG4gICRrcVN1SyAtPSAweEFFNTZcbiAgJExhYmVsICs9IFtjaGFyXSgka3FTdUsgLWJhbmQgMHhGRkZGKVxufVxuXG5Xcml0ZS1Ib3N0ICRMYWJlbFxuYGBgXG5cbiMjIyBIYXNrZWxsIGVuY3J5cHRpb24gKEFOU0kgZXhhbXBsZSlcblxuYGBgaGFza2VsbFxuLS0gZW5jcnlwdGVkIHdpdGggaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20gKHYxLjMuMCkgW0hhc2tlbGxdXG5tb2R1bGUgTWFpbiB3aGVyZVxuXG5pbXBvcnQgcXVhbGlmaWVkIERhdGEuQ2hhclxuaW1wb3J0IHF1YWxpZmllZCBEYXRhLkJpdHNcblxubWFpbiA9IGRvXG4gIHB1dFN0ckxuICQgZ2ltbWVoXG5cbi0tIGdpbW1laCA9IFwiTW9uYWRzISBJIG5lZWQgbW9yZSBNb25hZHMhXCJcbmdpbW1laCA9IHppcFdpdGggZiBbMC4uXSBbIDB4NDAsIDB4N0YsIDB4NjEsIDB4NTMsIDB4NkQsIDB4NjcsIDB4OTYsIDB4OTYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAweDRDLCAweDk4LCAweDY5LCAweDQ3LCAweDQ0LCAweDQwLCAweDlGLCAweDRCLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg0RSwgMHg2RSwgMHhCRSwgMHg4MiwgMHg5NCwgMHhCMywgMHhCNSwgMHg0NyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4QjEsIDB4QTMsIDB4OEEgXVxuICB3aGVyZVxuICAgIGYgdnBrcXEgdWp6c2QgPSBsZXQgd2N1ZmUwID0gdWp6c2RcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjdWZlMSA9IHdjdWZlMCBgRGF0YS5CaXRzLnhvcmAgMHhCMFxuICAgICAgICAgICAgICAgICAgICAgICAgd2N1ZmUyID0gRGF0YS5CaXRzLmNvbXBsZW1lbnQgd2N1ZmUxXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y3VmZTMgPSB3Y3VmZTIgLSAweEQwXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y3VmZTQgPSBEYXRhLkJpdHMuY29tcGxlbWVudCB3Y3VmZTNcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjdWZlNSA9IHdjdWZlNCAtIDB4MEVcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjdWZlNiA9IHdjdWZlNSAtIHZwa3FxXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y3VmZTcgPSB3Y3VmZTYgYERhdGEuQml0cy54b3JgIHZwa3FxXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y3VmZTggPSB3Y3VmZTcgLSB2cGtxcVxuICAgICAgICAgICAgICAgICAgICAgICAgd2N1ZmU5ID0gRGF0YS5CaXRzLmNvbXBsZW1lbnQgd2N1ZmU4XG4gICAgICAgICAgICAgICAgICAgIGluIERhdGEuQ2hhci5jaHIgKHdjdWZlOSBEYXRhLkJpdHMuLiYuIDB4RkYpXG5gYGBcblxuIyMjIE1BU00gQXNzZW1ibGVyIDMyIGJpdCBlbmNyeXB0aW9uIChVTklDT0RFIGV4YW1wbGUpXG5cbmBgYGFzbVxuOyBlbmNyeXB0ZWQgd2l0aCBodHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbSAodjEuMy4wKSBbTUFTTSBBc3NlbWJsZXIgKDMyIGJpdCldXG5cbi5kYXRhXG5cbiAgICAgICAgOyBzek15R29vZE9sZEZyaWVuZCA9IFwiSSB3aWxsIGJlIGFsd2F5cyBoZXJlIDopXCJcbiAgICAgICAgc3pNeUdvb2RPbGRGcmllbmQgICAgICAgZHcgMEJEMzdoLCAwQkQ0QmgsIDBCRDYzaCwgMEJEMTRoLCAwQkQwQ2gsIDBCRDEzaCwgMEJENEVoLCAwQkQxN2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHcgMEJEMTNoLCAwQkQ1M2gsIDBCRDE1aCwgMEJENTVoLCAwQkNFOWgsIDBCRDVBaCwgMEJDRjFoLCAwQkNFMmhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHcgMEJDOTRoLCAwQkQ2M2gsIDBCRDU5aCwgMEJDQjNoLCAwQkQ1RmgsIDBCQzlGaCwgMEJDRjhoLCAwQkNBOGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHcgMEJEM0NoXG5cbi5jb2RlXG4gICAgICAgIG1vdiAgICAgZWN4LCBvZmZzZXQgc3pNeUdvb2RPbGRGcmllbmRcbiAgICAgICAgbW92ICAgICBlZHgsIDI1XG4gICAgICAgIGFuZCAgICAgZWF4LCAwXG5cbkBAOlxuICAgICAgICBtb3YgICAgIGJ4LCB3b3JkIHB0ciBbZWN4ICsgZWF4XVxuICAgICAgICBub3QgICAgIGVieFxuICAgICAgICBzdWIgICAgIGVieCwgZWF4XG4gICAgICAgIG5vdCAgICAgZWJ4XG4gICAgICAgIHhvciAgICAgZWJ4LCAwMkM1OWhcbiAgICAgICAgc3ViICAgICBlYngsIDBERkI1aFxuICAgICAgICBhZGQgICAgIGVieCwgZWF4XG4gICAgICAgIG5vdCAgICAgZWJ4XG4gICAgICAgIGFkZCAgICAgZWJ4LCAwNjFDNWhcbiAgICAgICAgeG9yICAgICBlYngsIDA0RkJDaFxuICAgICAgICBkZWMgICAgIGVieFxuICAgICAgICBhZGQgICAgIGVieCwgZWF4XG4gICAgICAgIG5vdCAgICAgZWJ4XG4gICAgICAgIG1vdiAgICAgd29yZCBwdHIgW2VjeCArIGVheF0sIGJ4XG4gICAgICAgIGluYyAgICAgZWF4XG4gICAgICAgIGRlYyAgICAgZWR4XG4gICAgICAgIGpuZSAgICAgQGJcblxuICAgICAgICBwdXNoICAgIDBcbiAgICAgICAgcHVzaCAgICBlY3hcbiAgICAgICAgcHVzaCAgICBlY3hcbiAgICAgICAgcHVzaCAgICAwXG4gICAgICAgIGNhbGwgICAgTWVzc2FnZUJveFdcbmBgYFxuXG4jIyMgRkFTTSBBc3NlbWJsZXIgMzIgYml0IChBTlNJIGV4YW1wbGUpXG5cbmBgYGFzbVxuXG47IGVuY3J5cHRlZCB3aXRoIGh0dHBzOi8vd3d3LnN0cmluZ2VuY3J5cHQuY29tICh2MS4zLjApIFtGQVNNIEFzc2VtYmxlciAoMzIgYml0KV1cblxuICAgICAgICA7IHN6RmFzbSA9IFwiSGkgVG9tZWsgR3J5c3p0YXIgOilcIlxuICAgICAgICBsb2NhbCAgIHN6RmFzbVsyMV06QllURVxuXG4gICAgICAgIGxlYSAgICAgZWR4LCBbc3pGYXNtXVxuXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgOF0sIDBENmhcbiAgICAgICAgbW92ICAgICBieXRlIFtlZHggKyA5XSwgMEY1aFxuICAgICAgICBtb3YgICAgIGJ5dGUgW2VkeCArIDVdLCAwOUZoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMF0sIDBFRWhcbiAgICAgICAgbW92ICAgICBieXRlIFtlZHggKyAzXSwgMDg0aFxuICAgICAgICBtb3YgICAgIGJ5dGUgW2VkeCArIDJdLCAwRTJoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTZdLCAwOENoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTldLCAwRkJoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTBdLCAwQTRoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgN10sIDA5RGhcbiAgICAgICAgbW92ICAgICBieXRlIFtlZHggKyAxOF0sIDBGQ2hcbiAgICAgICAgbW92ICAgICBieXRlIFtlZHggKyAxN10sIDA5NGhcbiAgICAgICAgbW92ICAgICBieXRlIFtlZHggKyA0XSwgMEFEaFxuICAgICAgICBtb3YgICAgIGJ5dGUgW2VkeCArIDZdLCAwQTdoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTFdLCAwQkJoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTJdLCAwQTFoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTVdLCAwQUJoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTRdLCAwQkVoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMjBdLCAwRkVoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMTNdLCAwQUFoXG4gICAgICAgIG1vdiAgICAgYnl0ZSBbZWR4ICsgMV0sIDA5M2hcblxuICAgICAgICBtb3YgICAgIGVheCwgMjFcbiAgICAgICAgc3ViICAgICBlYngsIGVieFxuXG5AQDpcbiAgICAgICAgbW92ICAgICBjbCwgYnl0ZSBbZWR4ICsgZWJ4XVxuICAgICAgICB4b3IgICAgIGVjeCwgZWJ4XG4gICAgICAgIGRlYyAgICAgZWN4XG4gICAgICAgIHhvciAgICAgZWN4LCAwNDNoXG4gICAgICAgIG5vdCAgICAgZWN4XG4gICAgICAgIGFkZCAgICAgZWN4LCAwMTVoXG4gICAgICAgIHhvciAgICAgZWN4LCBlYnhcbiAgICAgICAgYWRkICAgICBlY3gsIGVieFxuICAgICAgICBhZGQgICAgIGVjeCwgMDU1aFxuICAgICAgICB4b3IgICAgIGVjeCwgZWJ4XG4gICAgICAgIHhvciAgICAgZWN4LCAwMjloXG4gICAgICAgIHhvciAgICAgZWN4LCBlYnhcbiAgICAgICAgeG9yICAgICBlY3gsIDAzNGhcbiAgICAgICAgeG9yICAgICBlY3gsIGVieFxuICAgICAgICB4b3IgICAgIGVjeCwgMEVGaFxuICAgICAgICBkZWMgICAgIGVjeFxuICAgICAgICBtb3YgICAgIGJ5dGUgW2VkeCArIGVieF0sIGNsXG4gICAgICAgIGluYyAgICAgZWJ4XG4gICAgICAgIGRlYyAgICAgZWF4XG4gICAgICAgIGpuZSAgICAgQGJcblxuICAgICAgICBwdXNoICAgIDBcbiAgICAgICAgcHVzaCAgICBlZHhcbiAgICAgICAgcHVzaCAgICBlZHhcbiAgICAgICAgcHVzaCAgICAwXG4gICAgICAgIGNhbGwgICAgW01lc3NhZ2VCb3hBXVxuYGBgXG5cbiMjIEZyZWUgZGVtbyB2ZXJzaW9uIGxpbWl0YXRpb25zXG5cblRoZSBmcmVlIGRlbW8gdmVyc2lvbiBjb21lcyB3aXRoIHNvbWUgKipsaW1pdGF0aW9ucyoqLlxuXG58IEZlYXR1cmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEZW1vIHZlcnNpb24gICAgIHwgRnVsbCB2ZXJzaW9uIHxcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18Oi0tLS0tLS0tLS0tLS0tLS06fC0tLS0tLS0tLS0tLS06fFxufCBTdHJpbmcgZW5jcnlwdGlvbiAgICAgICAgICAgICAgICAgICAgIHwg4pyFICAgICAgICAgICAgICB8IOKchSAgICAgICAgICAgfFxufCBGaWxlIGVuY3J5cHRpb24gKHRleHQgb3IgYmluYXJ5IGZpbGUpIHwg4p2MICAgICAgICAgICAgICB8IOKchSAgICAgICAgICAgfFxufCBNYXguIGxhYmVsIGxlbmd0aCAoY2hhcmFjdGVycykgICAgICAgIHwgYDEwYCAgICAgICAgICAgICB8IGA2NGAgICAgICAgICB8XG58IE1heC4gc3RyaW5nIGxlbmd0aCAoY2hhcmFjdGVycykgICAgICAgfCBgMTBgICAgICAgICAgICAgIHwgYDQwOTZgICAgICAgIHxcbnwgTWF4LiBmaWxlIGxlbmd0aCAoYnl0ZXMpICAgICAgICAgICAgICB8IOKAlCAgICAgICAgICAgICAgICB8IGA0IE1CYCAgICAgICB8XG58IE1pbi4gbnVtYmVyIG9mIGVuY3J5cHRpb24gY29tbWFuZHMgICAgfCBgM2AgICAgICAgICAgICAgIHwgYDUwYCAgICAgICAgIHxcbnwgTWF4LiBudW1iZXIgb2YgZW5jcnlwdGlvbiBjb21tYW5kcyAgICB8IGAzYCAgICAgICAgICAgICAgfCBgNTBgICAgICAgICAgfFxuXG4jIyBQdXJjaGFzZSBhY3RpdmF0aW9uIGNvZGVcblxuVG8gcmVtb3ZlIHRoZSBsaW1pdGF0aW9ucyBhbmQgc3VwcG9ydCBvdXIgcHJvamVjdCBhbmQgaXRzIGRldmVsb3BtZW50LCB5b3UgbmVlZCB0byBidXkgYW4gYWN0aXZhdGlvbiBjb2RlIGF0OlxuXG5odHRwczovL3d3dy5zdHJpbmdlbmNyeXB0LmNvbS9idXkvXG5cbkVhY2ggYWN0aXZhdGlvbiBjb2RlIGhhcyBhbiBhc3NpZ25lZCBudW1iZXIgb2YgKip1c2FnZSBjcmVkaXRzKiouIFlvdSBjYW4gdXNlIHRoZSBzb2Z0d2FyZSBpbiBmdWxsIHZlcnNpb24gYXMgbWFueSB0aW1lcyBhcyB5b3UgaGF2ZSB1c2FnZSBjcmVkaXRzIG9uIHlvdXIgYWNjb3VudCBiYWxhbmNlLlxuXG4jIyBIb3cgdG8gZ2V0IGEgZnJlZSBhY3RpdmF0aW9uIGNvZGU/XG5cbllvdSBjYW4gZ2V0IGEgKipmcmVlIGFjdGl2YXRpb24gY29kZSoqICg1MDAgdXNhZ2UgY3JlZGl0cykgaWYgeW91IGNhbiBhZHZlcnRpc2UgU3RyaW5nRW5jcnlwdCBzZXJ2aWNlIHdpdGggYSBsaW5rIHRvIHRoZSBwcm9qZWN0IHNpdGUgaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vIGF0OlxuXG4qIFByb2dyYW1taW5nIGZvcnVtc1xuKiBQcm9ncmFtbWluZyBibG9nc1xuKiBUZWNobmljYWwgYXJ0aWNsZXNcbiogVHdpdHRlciAvIEZhY2Vib29rIC8gb3RoZXIgc29jaWFsIG1lZGlhIHNpdGVcbiogLi4ub3IgYW55IG90aGVyIHdlYnNpdGUgcmVsYXRlZCB0byBwcm9ncmFtbWluZyBhbmQgZGV2ZWxvcG1lbnRcblxuU2VuZCBtZSBhbGwgdGhlIGRldGFpbHMgYXQgbXkgW2NvbnRhY3QgYWRkcmVzc10oaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20vKSBhbmQgaWYgaXQncyBsZWdpdCAtICoqYmFtISoqLCB5b3UgZ290IHlvdXJzZWxmIGEgZnJlZSBjb2RlIDopXG5cbiMjIENoYW5nZWxvZ1xuXG4jIyMgWzEuMC4wXSAtIDIwMjEtMDEtMDNcblxuLSBJbml0aWFsIHJlbGVhc2Ugb2YgYSBTdHJpbmdFbmNyeXB0IFB5dGhvbiAzIG1vZHVsZVxuXG4jIEZpblxuXG5JIGhvcGUgeW91IGxpa2UgaXQgYW5kIHlvdSB3aWxsIHRyeSBpdCBhdCBsZWFzdCA6KVxuXG5CYXJ0b3N6IFfDs2pjaWtcbmh0dHBzOi8vd3d3LnBlbG9jay5jb21cblxuXG4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly93d3cuc3RyaW5nZW5jcnlwdC5jb20iLA==
ICAgICJrZXl3b3JkcyI6ICJlbmNyeXB0aW9uIHN0cmluZyBmaWxlIHN0cmluZy1lbmNyeXB0aW9uIGZpbGUtZW5jcnlwdGlvbiBzZWN1cml0eSBjcnlwdG9ncmFwaHkiLA==
ICAgICJsaWNlbnNlIjogIkFwYWNoZS0yLjAiLA==
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogInN0cmluZ2VuY3J5cHQiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaW5nZW5jcnlwdC8iLA==
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaW5nZW5jcnlwdC8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vd3d3LnN0cmluZ2VuY3J5cHQuY29tIg==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvc3RyaW5nZW5jcnlwdC8xLjAuMC8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIlN0cmluZ0VuY3J5cHQgcGFnZSBhbGxvd3MgeW91IHRvIGVuY3J5cHQgc3RyaW5ncyBhbmQgZmlsZXMgdXNpbmcgcmFuZG9tbHkgZ2VuZXJhdGVkIGFsZ29yaXRobSwgZ2VuZXJhdGluZyBhIHVuaXF1ZSBkZWNyeXB0aW9uIGNvZGUgKHNvIGNhbGxlZCBwb2x5bW9ycGhpYyBjb2RlKSBlYWNoIHRpbWUgaW4gdGhlIHNlbGVjdGVkIHByb2dyYW1taW5nIGxhbmd1YWdlLiIs
ICAgICJ2ZXJzaW9uIjogIjEuMC4wIiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA5MDM5NTgwLA==
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjAuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyYjIwNjNjNjJjZTY0NmFhODY2N2RjOGViZjdjNDgyNDllMjVhYTdkODIwZjYzYWJlN2I4NDhiNjUwNjE0NzZkIiw=
ICAgICAgICAgICJtZDUiOiAiYmQ4N2VkMzM0NGU5NjA1OWFlNzk3ZmEwN2M0YjUzZTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYTYyZGQ0ZWU0OTRlNzg0OGJhNzYzNTExOGRkMzk1NTIwNWEyMTQyNmM1OWE0OGE3NjNjMDllZjI2YzhkODNkNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaW5nZW5jcnlwdC0xLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiZDg3ZWQzMzQ0ZTk2MDU5YWU3OTdmYTA3YzRiNTNlNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDE0MzYxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wMS0wM1QwMTozNjo0MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wMS0wM1QwMTozNjo0My4wMTkwOTJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yYi8yMC82M2M2MmNlNjQ2YWE4NjY3ZGM4ZWJmN2M0ODI0OWUyNWFhN2Q4MjBmNjNhYmU3Yjg0OGI2NTA2MTQ3NmQvc3RyaW5nZW5jcnlwdC0xLjAuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMmNjZmY2YjgxZWEyYzJiY2Q2OGMwNGQ2OTliNTVjNWNjNmY2OTk2NTliOTBjMTczYTA3Y2JkYTNkMmM1ZjY1Iiw=
ICAgICAgICAgICJtZDUiOiAiNmQ4MzhkZjJiZDZjMzkwYmNmMDM5MTQyNWQ3YTY1NTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjU3N2E1NDU4MzM1MzgyYmM0OWU1YWMzOWMyOTYxYjFjOTA2YTAxZmJjMTNmNjY4ZmNlODc2ZjE1ODI0MjMzZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAic3RyaW5nZW5jcnlwdC0xLjAuMC50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2ZDgzOGRmMmJkNmMzOTBiY2YwMzkxNDI1ZDdhNjU1NSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDMyODEzLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wMS0wM1QwMTozNjo0NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wMS0wM1QwMTozNjo0NS40MDc1NzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMi9jYy9mZjZiODFlYTJjMmJjZDY4YzA0ZDY5OWI1NWM1Y2M2ZjY5OTY1OWI5MGMxNzNhMDdjYmRhM2QyYzVmNjUvc3RyaW5nZW5jcnlwdC0xLjAuMC50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMmIyMDYzYzYyY2U2NDZhYTg2NjdkYzhlYmY3YzQ4MjQ5ZTI1YWE3ZDgyMGY2M2FiZTdiODQ4YjY1MDYxNDc2ZCIs
ICAgICAgICAibWQ1IjogImJkODdlZDMzNDRlOTYwNTlhZTc5N2ZhMDdjNGI1M2U3Iiw=
ICAgICAgICAic2hhMjU2IjogImE2MmRkNGVlNDk0ZTc4NDhiYTc2MzUxMThkZDM5NTUyMDVhMjE0MjZjNTlhNDhhNzYzYzA5ZWYyNmM4ZDgzZDQi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInN0cmluZ2VuY3J5cHQtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYmQ4N2VkMzM0NGU5NjA1OWFlNzk3ZmEwN2M0YjUzZTciLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAxNDM2MSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDEtMDNUMDE6MzY6NDMiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDEtMDNUMDE6MzY6NDMuMDE5MDkyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMmIvMjAvNjNjNjJjZTY0NmFhODY2N2RjOGViZjdjNDgyNDllMjVhYTdkODIwZjYzYWJlN2I4NDhiNjUwNjE0NzZkL3N0cmluZ2VuY3J5cHQtMS4wLjAtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMDJjY2ZmNmI4MWVhMmMyYmNkNjhjMDRkNjk5YjU1YzVjYzZmNjk5NjU5YjkwYzE3M2EwN2NiZGEzZDJjNWY2NSIs
ICAgICAgICAibWQ1IjogIjZkODM4ZGYyYmQ2YzM5MGJjZjAzOTE0MjVkN2E2NTU1Iiw=
ICAgICAgICAic2hhMjU2IjogImI1NzdhNTQ1ODMzNTM4MmJjNDllNWFjMzljMjk2MWIxYzkwNmEwMWZiYzEzZjY2OGZjZTg3NmYxNTgyNDIzM2Qi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogInN0cmluZ2VuY3J5cHQtMS4wLjAudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNmQ4MzhkZjJiZDZjMzkwYmNmMDM5MTQyNWQ3YTY1NTUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAzMjgxMyw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDEtMDNUMDE6MzY6NDUiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDEtMDNUMDE6MzY6NDUuNDA3NTcyWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMDIvY2MvZmY2YjgxZWEyYzJiY2Q2OGMwNGQ2OTliNTVjNWNjNmY2OTk2NTliOTBjMTczYTA3Y2JkYTNkMmM1ZjY1L3N0cmluZ2VuY3J5cHQtMS4wLjAudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
