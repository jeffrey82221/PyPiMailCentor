ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiZnRDTEkiLA==
ICAgICJhdXRob3JfZW1haWwiOiAiZnRjbGlAcHJvdG9uLm1lIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJbIVtDb2RhY3kgQmFkZ2VdKGh0dHBzOi8vYXBwLmNvZGFjeS5jb20vcHJvamVjdC9iYWRnZS9HcmFkZS80MGUzOTliMGE4ZTA0NzEzODQ4YzM0YTU5ZDllODkxNCldKGh0dHBzOi8vYXBwLmNvZGFjeS5jb20vZ2gvZnRDTEkvZnRDTEkvZGFzaGJvYXJkP3V0bV9zb3VyY2U9Z2gmdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY29udGVudD0mdXRtX2NhbXBhaWduPUJhZGdlX2dyYWRlKVxuXG4jIGZ0Q0xJXG5cbmZ0Q0xJIGlzIGEgY29tbWFuZCBsaW5lIGludGVyZmFjZSBidWlsdCB3aXRoIFtjbGlja10oaHR0cHM6Ly9jbGljay5wYWxsZXRzcHJvamVjdHMuY29tL2VuLzguMC54LykgdG8gZWRpdCBmb250cyB1c2luZ1xuW0ZvbnRUb29sc10oaHR0cHM6Ly9naXRodWIuY29tL2ZvbnR0b29scy9mb250dG9vbHMpLlxuXG5QeXRob24gPj0zLjcgaXMgcmVxdWlyZWQgdG8gaW5zdGFsbCBmdENMSS5cblxuVGhlIGZvbGxvd2luZyBwYWNrYWdlcyB3aWxsIGJlIGluc3RhbGxlZCBkdXJpbmcgc2V0dXA6XG5cbi0gZm9udHRvb2xzXG4tIGFmZGtvXG4tIGJlemllcnNcbi0gYnJvdGxpXG4tIGNsaWNrXG4tIGNmZnN1YnJcbi0gZGVoaW50ZXJcbi0gcGF0aHZhbGlkYXRlXG4tIHJpY2hcbi0gc2tpYS1wYXRob3BzXG4tIHR0ZmF1dG9oaW50LXB5XG4tIHpvcGZsaVxuXG4jIyBJbnN0YWxsYXRpb25cblxuICAgIHBpcCBpbnN0YWxsIGZvbnQtY2xpXG5cbk9yLCB0byBpbnN0YWxsIGluIGVkaXRhYmxlIG1vZGU6XG5cbiAgICBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL2Z0Q0xJL2Z0Q0xJLmdpdFxuXG4gICAgY2QgZnRDTElcblxuICAgIHBpcCBpbnN0YWxsIC1lIC5cblxuIyMgdGw7ZHJcblxuVG8gc3RhcnQgdXNpbmcgZnRDTEksIGp1c3QgaW5zdGFsbCwgb3BlbiBhIHNoZWxsIGFuZCB0eXBlIGBmdGNsaSAtLWhlbHBgIHRvIGxpc3QgYWxsIGNvbW1hbmRzLlxuXG4hW2ltYWdlXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS84MzA2MzUwNi8yMjk1Mjk2ODctYzcxMWU4NjAtYzkzYi00OWM4LWExMzctMWU5ZTM3YzZhMGFmLnBuZylcblxuXG5FYWNoIGxldmVsIDEgY29tbWFuZCBoYXMgaXRzIG93biBoZWxwLi4uXG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzgzMDYzNTA2LzIyOTUyOTgyMy04NTFiMjU3ZC02OWMzLTRkYWEtYTcyYy00MmJlOTZkYjIwOWYucG5nKVxuXG4uLi4gYXMgd2VsbCBhcyBlYWNoIGxldmVsIDIgY29tbWFuZC5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vODMwNjM1MDYvMjI5NTI5OTU0LWNlZGMwZTFkLTlkMTUtNGM2Yy04MWJlLWQ4OTIzZjhkYzdkNy5wbmcpXG5cblJlbWVtYmVyIHRvIHVzZSBgLS1uby1vdmVyd3JpdGVgIG9yIGAtb3V0YCB0byBhdm9pZCBvdmVyd3JpdGluZyB5b3VyIGZvbnRzIHdoZW4gZXhwZXJpbWVudGluZy5cblxuIyMgQXJndW1lbnRzXG5cbi0gW0lOUFVUX1BBVEhdKCNpbnB1dHBhdGgpXG5cbiMjIENvbW1vbiBvcHRpb25zXG5cbi0gWy1vdXQsIC0tb3V0cHV0LWRpcl0oIy1vdXQtLS1vdXRwdXQtZGlyKVxuLSBbLS1yZWNhbGMtdGltZXN0YW1wXSgjLS1yZWNhbGMtdGltZXN0YW1wKVxuLSBbLS1uby1vdmVyd3JpdGVdKCMtLW5vLW92ZXJ3cml0ZSlcblxuIyMgQ29tbWFuZHMgbGlzdFxuXG4tIFsqKmFzc2lzdGFudCoqXSgjZnRjbGktYXNzaXN0YW50KVxuXG4gIC0gW3VpXSgjZnRjbGktYXNzaXN0YW50LXVpKVxuICAtIFtjb21taXRdKCNmdGNsaS1hc3Npc3RhbnQtY29tbWl0KVxuICAtIFtpbml0LWNvbmZpZ10oI2Z0Y2xpLWFzc2lzdGFudC1pbml0LWNvbmZpZylcbiAgLSBbaW5pdC1kYXRhXSgjZnRjbGktYXNzaXN0YW50LWluaXQtZGF0YSlcblxuLSBbKipjZmYqKl0oI2Z0Y2xpLWNmZilcblxuICAtIFtkZWwtbmFtZXNdKCNmdGNsaS1jZmYtZGVsLW5hbWVzKVxuICAtIFtmaW5kLXJlcGxhY2VdKCNmdGNsaS1jZmYtZmluZC1yZXBsYWNlKVxuICAtIFtmaXgtdmVyc2lvbl0oI2Z0Y2xpLWNmZi1maXgtdmVyc2lvbilcbiAgLSBbc2V0LW5hbWVzXSgjZnRjbGktY2ZmLXNldC1uYW1lcylcblxuLSBbKipjb252ZXJ0ZXIqKl0oI2Z0Y2xpLWNvbnZlcnRlcilcblxuICAtIFtvdGYydHRmXSgjZnRjbGktY29udmVydGVyLW90ZjJ0dGYpXG4gIC0gW3R0ZjJvdGZdKCNmdGNsaS1jb252ZXJ0ZXItdHRmMm90ZilcbiAgLSBbZnQyd2ZdKCNmdGNsaS1jb252ZXJ0ZXItZnQyd2YpXG4gIC0gW3dmMmZ0XSgjZnRjbGktY29udmVydGVyLXdmMmZ0KVxuICAtIFt2YXIyc3RhdGljXSgjZnRjbGktY29udmVydGVyLXZhcjJzdGF0aWMpXG4gIC0gW3R0YzJzZm50XSgjZnRjbGktY29udmVydGVyLXR0YzJzZm50KVxuXG4tIFsqKmZpeCoqXSgjZnRjbGktZml4KVxuXG4gIC0gW2NhcmV0LW9mZnNldF0oI2Z0Y2xpLWZpeC1jYXJldC1vZmZzZXQpXG4gIC0gW2NvbnRvdXJzXSgjZnRjbGktZml4LWNvbnRvdXJzKVxuICAtIFtkZWNvbXBvc2UtdHJhbnNmb3JtZWRdKCNmdGNsaS1maXgtZGVjb21wb3NlLXRyYW5zZm9ybWVkKVxuICAtIFtkdXBsaWNhdGUtY29tcG9uZW50c10oI2Z0Y2xpLWZpeC1kdXBsaWNhdGUtY29tcG9uZW50cylcbiAgLSBbaXRhbGljLWFuZ2xlXSgjZnRjbGktZml4LWl0YWxpYy1hbmdsZSlcbiAgLSBba2Vybi10YWJsZV0oI2Z0Y2xpLWZpeC1rZXJuLXRhYmxlKVxuICAtIFttb25vc3BhY2VdKCNmdGNsaS1maXgtbW9ub3NwYWNlKVxuICAtIFtuYnNwLW1pc3NpbmddKCNmdGNsaS1maXgtbmJzcC1taXNzaW5nKVxuICAtIFtuYnNwLXdpZHRoXSgjZnRjbGktZml4LW5ic3Atd2lkdGgpXG4gIC0gW29zMi1yYW5nZXNdKCNmdGNsaS1maXgtb3MyLXJhbmdlcylcbiAgLSBbc3RyaXAtbmFtZXNdKCNmdGNsaS1maXgtc3RyaXAtbmFtZXMpXG4gIC0gW3VwcmlnaHRzXSgjZnRjbGktZml4LXVwcmlnaHRzKVxuXG4tIFsqKmhoZWEqKl0oI2Z0Y2xpLWhoZWEpXG5cbi0gWyoqbWV0cmljcyoqXSgjZnRjbGktbWV0cmljcylcblxuICAtIFthbGlnbl0oI2Z0Y2xpLW1ldHJpY3MtYWxpZ24pXG4gIC0gW2NvcHktbWV0cmljc10oI2Z0Y2xpLW1ldHJpY3MtY29weS1tZXRyaWNzKVxuICAtIFtzZXQtbGluZWdhcF0oI2Z0Y2xpLW1ldHJpY3Mtc2V0LWxpbmVnYXApXG5cbi0gWyoqbmFtZSoqXSgjZnRjbGktbmFtZSlcblxuICAtIFthcHBlbmRdKCNmdGNsaS1uYW1lLWFwcGVuZClcbiAgLSBbZGVsLW1hYy1uYW1lc10oI2Z0Y2xpLW5hbWUtZGVsLW1hYy1uYW1lcylcbiAgLSBbZGVsLW5hbWVzXSgjZnRjbGktbmFtZS1kZWwtbmFtZXMpXG4gIC0gW2ZpbmQtcmVwbGFjZV0oI2Z0Y2xpLW5hbWUtZmluZC1yZXBsYWNlKVxuICAtIFtmaW5kLXNldC1uYW1lXSgjZnRjbGktbmFtZS1zZXQtbmFtZSlcblxuLSBbKipvczIqKl0oI2Z0Y2xpLW9zMilcblxuLSBbKipwb3N0KipdKCNmdGNsaS1wb3N0KVxuXG4tIFsqKnByaW50KipdKCNmdGNsaS1wcmludClcbiAgLSBbZm9udC1pbmZvXSgjZnRjbGktcHJpbnQtZm9udC1pbmZvKVxuICAtIFtmb250LW5hbWVzXSgjZnRjbGktcHJpbnQtZm9udC1uYW1lcylcbiAgLSBbZm9udHMtbGlzdF0oI2Z0Y2xpLXByaW50LWZvbnRzLWxpc3QpXG4gIC0gW2luc3RhbmNlc10oI2Z0Y2xpLXByaW50LWluc3RhbmNlcylcbiAgLSBbb3MyLXRhYmxlXSgjZnRjbGktcHJpbnQtb3MyLXRhYmxlKVxuXG4tIFsqKnV0aWxzKipdKCNmdGNsaS11dGlscylcbiAgLSBbYWRkLWRzaWddKCNmdGNsaS11dGlscy1hZGQtZHNpZylcbiAgLSBbY2ZmLWF1dG9oaW50XSgjZnRjbGktdXRpbHMtY2ZmLWF1dG9oaW50KVxuICAtIFtjZmYtY2hlY2stb3V0bGluZXNdKCNmdGNsaS11dGlscy1jZmYtY2hlY2stb3V0bGluZXMpXG4gIC0gW2NmZi1kZWhpbnRdKCNmdGNsaS11dGlscy1jZmYtZGVoaW50KVxuICAtIFtjZmYtZGVzdWJyXSgjZnRjbGktdXRpbHMtY2ZmLWRlc3VicilcbiAgLSBbY2ZmLXN1YnJdKCNmdGNsaS11dGlscy1jZmYtc3VicilcbiAgLSBbZGVsLXRhYmxlXSgjZnRjbGktdXRpbHMtZGVsLXRhYmxlKVxuICAtIFtmb250LW9yZ2FuaXplcl0oI2Z0Y2xpLXV0aWxzLWZvbnQtb3JnYW5pemVyKVxuICAtIFtmb250LXJlbmFtZXJdKCNmdGNsaS11dGlscy1mb250LXJlbmFtZXIpXG4gIC0gW3NjYWxlLXVwbV0oI2Z0Y2xpLXV0aWxzLXNjYWxlLXVwbSlcbiAgLSBbc2V0LXJldmlzaW9uXSgjZnRjbGktdXRpbHMtc2V0LXJldmlzaW9uKVxuICAtIFt0dGYtYXV0b2hpbnRdKCNmdGNsaS11dGlscy10dGYtYXV0b2hpbnQpXG4gIC0gW3R0Zi1kZWhpbnRdKCNmdGNsaS11dGlscy10dGYtZGVoaW50KVxuICAtIFt0dGYtcmVtb3ZlLW92ZXJsYXBzXSgjZnRjbGktdXRpbHMtdHRmLXJlbW92ZS1vdmVybGFwcylcblxuIyMgQXJndW1lbnRzXG5cbiMjIyBJTlBVVF9QQVRIXG5cbldpdGggc29tZSBleGNlcHRpb25zLCBhbGwgZnRDTEkgc3ViY29tbWFuZHMgcHJvY2VzcyBmaWxlcyBpbiB0aGUgZ2l2ZW4gcGF0aC4gVGhlIGBJTlBVVF9QQVRIYCBhcmd1bWVudCBjYW4gYmUgZ2VuZXJhbGx5XG5hIHNpbmdsZSBmb250IGZpbGUgb3IgYSBmb2xkZXIgY29udGFpbmluZyBvbmUgb3IgbW9yZSBmb250cy4gSW4gY2FzZSBhIGRpcmVjdG9yeSBpcyBwYXNzZWQgYXMgSU5QVVRfUEFUSCwgYWxsIGZvbnRzXG5zdG9yZWQgaW4gaXQgd2lsbCBiZSBwcm9jZXNzZWQsIHdpdGggdGhlIGV4Y2x1c2lvbiBvZiBmb250cyBzdG9yZWQgaW4gc3ViZGlyZWN0b3JpZXMuXG5cbiMjIENvbW1vbiBvcHRpb25zXG5cblRoZSBgLW91dCwgLW91dHB1dC1kaXJgLCBgLS1yZWNhbGMtdGltZXN0YW1wYCBhbmQgYC0tbm8tb3ZlcndyaXRlYCBvcHRpb25zIGNhbiBiZSB1c2VkIGluIGFsbCBzdWJjb21tYW5kcywgdW5sZXNzXG5vdGhlcndpc2Ugc3BlY2lmaWVkLlxuXG4jIyMgLW91dCwgLS1vdXRwdXQtZGlyXG5cblRoZSBkaXJlY3Rvcnkgd2hlcmUgdGhlIG91dHB1dCBmaWxlcyBhcmUgdG8gYmUgc2F2ZWQuIElmIGBvdXRwdXRfZGlyYCBpcyBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWQgdG8gdGhlIHNhbWVcbmZvbGRlci4gSWYgdGhlIHVzZXIgcGFzc2VzIGEgZGlyZWN0b3J5IHRoYXQgZG9lc24ndCBleGlzdCwgaXQgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGNyZWF0ZWQuXG5cbiMjIyAtLXJlY2FsYy10aW1lc3RhbXBcblxuQnkgZGVmYXVsdCwgb3JpZ2luYWwgYGhlYWQubW9kaWZpZWRgIHZhbHVlIGlzIGtlcHQgd2hlbiBhIGZvbnQgaXMgc2F2ZWQuIFVzZSB0aGlzIG9wdGlvbiB0byBzZXQgYGhlYWQubW9kaWZpZWRgXG50aW1lc3RhbXAgdG8gY3VycmVudCB0aW1lLlxuXG4jIyMgLS1uby1vdmVyd3JpdGVcblxuQnkgZGVmYXVsdCwgbW9kaWZpZWQgZmlsZXMgYXJlIG92ZXJ3cml0dGVuLiBVc2UgdGhpcyBzd2l0Y2ggdG8gc2F2ZSB0aGVtIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbm9mIGZpbGUgbmFtZSwgc28gdGhhdCBUaW1lcy1Cb2xkLm90ZiBiZWNvbWVzIFRpbWVzQm9sZCMxLm90ZikuXG5cbiMjIyBVc2FnZSBleGFtcGxlczpcblxuYGZ0Y2xpIG1ldHJpY3MgYWxpZ24gXCJDOlxcRm9udHNcIiAtb3V0IFwiQzpcXEZvbnRzXFxBbGlnbmVkXCJgXG5cbmBmdGNsaSBtZXRyaWNzIGNvcHkgLXMgXCJDOlxcRm9udHNcXFNvdXJjZUZvbnQub3RmXCIgLWQgXCJDOlxcRm9udHNcXFwiIC0tcmVjYWxjLXRpbWVzdGFtcGBcblxuYGZ0Y2xpIG1ldHJpY3MgY29weSAtcyBcIkM6XFxGb250c1xcU291cmNlRm9udC5vdGZcIiAtZCBcIkM6XFxGb250c1xcXCIgLS1uby1vdmVyd3JpdGVgXG5cbiMjIGZ0Y2xpIGFzc2lzdGFudFxuXG5BIHNldCBvZiB0b29scyB0byBjb3JyZWN0bHkgY29tcGlsZSB0aGUgJ25hbWUnIHRhYmxlIGFuZCBzZXQgcHJvcGVyIHZhbHVlcyBmb3IgdXNXZWlnaHRDbGFzcywgdXNXaWR0aENsYXNzLCBCb2xkLCBJdGFsaWNcbmFuZCBPYmxpcXVlIGJpdHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGFzc2lzdGFudFxuXG4qKkNvbW1hbmRzKio6XG5cbiAgICAgIGNvbW1pdFxuICAgICAgaW5pdC1jb25maWdcbiAgICAgIGluaXQtZGF0YVxuICAgICAgdWlcblxuVGhlIGxvZ2ljYWwgc3RlcHMgYXJlIHRoZSBmb2xsb3dpbmc6XG5cbjEuIENyZWF0ZSBhIENTViBmaWxlIGNvbnRhaW5pbmcsIGZvciBlYWNoIGZvbnQgaW4gdGhlIHNvdXJjZSBwYXRoLCB0aGUgZm9sbG93aW5nIGRhdGE6XG4gICAtIEZpbGUgcGF0aFxuICAgLSBGYW1pbHkgbmFtZVxuICAgLSB1c1dpZHRoQ2xhc3NcbiAgIC0gdXNXZWlnaHRDbGFzc1xuICAgLSBTbG9wZSBjbGFzc2VzIChJdGFsaWMgYW5kL29yIE9ibGlxdWUpIGFuZCBCb2xkIGZsYWdcbiAgIC0gV2VpZ2h0LCBXaWR0aCBhbmQgU2xvcGUgc3R5bGUgbmFtZXNcbjIuIFJldmlldyB0aGUgQ1NWIGZpbGVcbjMuIFdyaXRlIGRhdGEgZnJvbSB0aGUgQ1NWIGZpbGUgdG8gdGhlIHRhcmdldCBmb250czogdGhpcyB3aWxsIGNvbXBpbGUgdGhlIG5hbWUgdGFibGUgYW5kIHNldCB0aGUgcHJvcGVyXG4gICB1c1dpZHRoQ2xhc3MsIHVzV2VpZ2h0Q2xhc3MgU2xvcGUgY2xhc3MgYW5kIEJvbGQgdmFsdWVzLlxuXG4qKlN0ZXAgMSoqIGNhbiBiZSBleGVjdXRlZCB3aXRoIG9uZSBvZiB0aGUgZm9sbG93aW5nIGNvbW1hbmRzOlxuXG4tIGBmdGNsaSBhc3Npc3RhbnQgaW5pdC1kYXRhIElOUFVUX1BBVEhgXG4tIGBmdGNsaSBhc3Npc3RhbnQgdWkgSU5QVVRfUEFUSGBcblxuVGhlIGZpcnN0IGNvbW1hbmQgd2lsbCBjcmVhdGUgYSBkaXJlY3RvcnkgbmFtZWQgYGZ0Q0xJX2ZpbGVzYCBjb250YWluaW5nIHR3byBmaWxlczogYGZvbnRzX2RhdGEuY3N2YCBhbmRcbmBzdHlsZXNfbWFwcGluZy5qc29uYC4gVGhlIHNlY29uZCBvbmUgd2lsbCBvcGVuIHRoZSBjb21tYW5kIGxpbmUgdXNlciBpbnRlcmZhY2UgdGhhdCBhbGxvd3MgdG8gZWRpdCBib3RoLlxuXG5UaGUgYHN0eWxlc19tYXBwaW5nLmpzb25gIGlzIGNyZWF0ZWQgYXQgZmlyc3QsIHVubGVzcyBpdCBhbHJlYWR5IGV4aXN0cywgYW5kIGNvbnRhaW5zIHRoZSBkZWZhdWx0IFN0eWxlIE5hbWVzIHRvIHBhaXJcbndpdGggdXNXaWR0aENsYXNzLCB1c1dlaWdodENsYXNzIGFuZCBTbG9wZSBjbGFzcy4gVGhlIGRlZmF1bHQgdmFsdWVzIGFyZSB0aGUgZm9sbG93aW5nOlxuXG4gICAge1xuICAgICAgICBcIml0YWxpY3NcIjogW1wiSXRcIiwgXCJJdGFsaWNcIl0sXG4gICAgICAgIFwib2JsaXF1ZXNcIjogW1wiT2JsXCIsIFwiT2JsaXF1ZVwiXSxcbiAgICAgICAgXCJ3ZWlnaHRzXCI6IHtcbiAgICAgICAgICAgIFwiMjUwXCI6IFtcIlRoXCIsIFwiVGhpblwiIF0sXG4gICAgICAgICAgICBcIjI3NVwiOiBbXCJYTHRcIiwgXCJFeHRyYUxpZ2h0XCJdLFxuICAgICAgICAgICAgXCIzMDBcIjogW1wiTHRcIiwgXCJMaWdodFwiXSxcbiAgICAgICAgICAgIFwiMzUwXCI6IFtcIkJrXCIsIFwiQm9va1wiXSxcbiAgICAgICAgICAgIFwiNDAwXCI6IFtcIlJnXCIsIFwiUmVndWxhclwiXSxcbiAgICAgICAgICAgIFwiNTAwXCI6IFtcIk1kXCIsIFwiTWVkaXVtXCJdLFxuICAgICAgICAgICAgXCI2MDBcIjogW1wiU0JkXCIsIFwiU2VtaUJvbGRcIl0sXG4gICAgICAgICAgICBcIjcwMFwiOiBbXCJCZFwiLCBcIkJvbGRcIl0sXG4gICAgICAgICAgICBcIjgwMFwiOiBbXCJYQmRcIiwgXCJFeHRyYUJvbGRcIl0sXG4gICAgICAgICAgICBcIjg1MFwiOiBbXCJIdnlcIiwgXCJIZWF2eVwiXSxcbiAgICAgICAgICAgIFwiOTAwXCI6IFtcIkJsa1wiLFwiQmxhY2tcIl0sXG4gICAgICAgICAgICBcIjk1MFwiOiBbXCJVbHRcIiwgXCJVbHRyYVwiXVxuICAgICAgICB9LFxuICAgICAgICBcIndpZHRoc1wiOiB7XG4gICAgICAgICAgICBcIjFcIjogW1wiQ21cIiwgXCJDb21wcmVzc2VkXCJdLFxuICAgICAgICAgICAgXCIyXCI6IFtcIlhDblwiLCBcIkV4dHJhQ29uZGVuc2VkXCJdLFxuICAgICAgICAgICAgXCIzXCI6IFtcIkNuXCIsIFwiQ29uZGVuc2VkXCJdLFxuICAgICAgICAgICAgXCI0XCI6IFtcIk5yXCIsIFwiTmFycm93XCJdLFxuICAgICAgICAgICAgXCI1XCI6IFtcIk5vclwiLFwiTm9ybWFsXCJdLFxuICAgICAgICAgICAgXCI2XCI6IFtcIldkXCIsIFwiV2lkZVwiXSxcbiAgICAgICAgICAgIFwiN1wiOiBbXCJFeHRcIiwgXCJFeHRlbmRlZFwiXSxcbiAgICAgICAgICAgIFwiOFwiOiBbXCJYRXh0XCIsIFwiRXh0cmFFeHRlbmRlZFwiXSxcbiAgICAgICAgICAgIFwiOVwiOiBbXCJFeHBcIiwgXCJFeHBhbmRlZFwiXVxuICAgICAgICB9XG4gICAgfVxuXG5BZnRlciBjcmVhdGlvbiBvZiBgc3R5bGVzX21hcHBpbmcuanNvbmAsIGFsbCB2YWxpZCBmb250IGZpbGVzIGZvdW5kIGluIGBJTlBVVF9QQVRIYCBhcmUgcGFyc2VkIHRvIHJldHJpZXZlIEZhbWlseSBOYW1lLFxudXNXaWR0aENsYXNzLCB1c1dlaWdodENsYXNzLCBTbG9wZSBDbGFzcyAoVXByaWdodCwgSXRhbGljIG9yIE9ibGlxdWUpLiBUaGUgcHJvY2VzcyBzZWFyY2hlcyBmb3IgbWF0Y2hlcyBiZXR3ZWVuIHRoZVxucmV0cmlldmVkIHZhbHVlcyBhbmQgdGhlIEpTT04gZGF0YSwgdHJ5aW5nIHRvIGRldGVybWluZSB0aGUgcHJvcGVyIHN0eWxlIG5hbWVzLiBUaGUgcmVzdWx0cyBhcmUgd3JpdHRlbiBpbnRvIHRoZVxuYGZvbnRzX2RhdGEuY3N2YCBmaWxlLlxuXG5UaGUgYGZvbnRzX2RhdGEuY3N2YCBjb250YWlucyB0aGUgZm9sbG93aW5nIGNvbHVtbnM6XG5cbi0gYGZpbGVfbmFtZWA6IHBhdGggdG8gdGhlIGZvbnQgZmlsZVxuLSBgZmFtaWx5X25hbWVgOiB0aGUgZm9udCdzIGZhbWlseSBuYW1lLCByZXRyaWV2ZWQgcmVhZGluZyB0aGUgbmFtZSB0YWJsZVxuLSBgaXNfYm9sZGA6IFRydWUgaWYgdGhlIGJvbGQgYml0cyBhcmUgc2V0LCBGYWxzZSBpZiB0aGV5IGFyZSBub3Qgc2V0LiBUaGlzIGNvbHVtbiBpcyBwcmVzZW50IG9ubHkgZm9yIGNvbXBsZXRlbmVzcyxcbiAgYnV0IGl0J3MgdmFsdWUgd2lsbCBiZSBpZ25vcmVkLiBBIGZvbnQgd2lsbCBiZSBzZXQgYXMgYm9sZCBvbmx5IGFuZCBvbmx5IGlmLCB3aGlsZSBydW5uaW5nIHRoZSBgZnRjbGkgYXNzaXN0YW50IGNvbW1pdGBcbiAgY29tbWFuZCwgdGhlIHVzZXIgd2lsbCBjaG9vc2UgdG8gdXNlIGxpbmtlZCBzdHlsZXMuXG4gICgtbHMgLyAtLWxpbmtlZCBzdHlsZXMpIG9wdGlvbiB3aGlsZSB3cml0aW5nIGRhdGEgZnJvbSBDU1YgdG8gZm9udHNcbi0gYGlzX2l0YWxpY2A6IFRydWUgaWYgdGhlIGl0YWxpYyBiaXRzIGFyZSBzZXQsIEZhbHNlIGlmIHRoZXkgYXJlIG5vdCBzZXRcbi0gYGlzX29ibGlxdWVgOiBUcnVlIGlmIHRoZSBvYmxpcXVlIGJpdCBpcyBzZXQsIEZhbHNlIGlmIGl0J3Mgbm90IHNldFxuLSBgdXNfd2lkdGhfY2xhc3NgOiB1c1dpZHRoQ2xhc3MgdmFsdWVcbi0gYHVzX3dlaWdodF9jbGFzc2A6IHVzV2VpZ2h0Q2xhc3MgdmFsdWVcbi0gYHdkdGA6IHNob3J0IGxpdGVyYWwgZm9yIHRoZSBXaWR0aCBzdHlsZSBuYW1lXG4tIGB3aWR0aGA6IGxvbmcgbGl0ZXJhbCBmb3IgdGhlIFdpZHRoIHN0eWxlIG5hbWVcbi0gYHdndGA6IHNob3J0IGxpdGVyYWwgZm9yIHRoZSBXZWlnaHQgc3R5bGUgbmFtZVxuLSBgd2VpZ2h0YDogbG9uZyBsaXRlcmFsIGZvciB0aGUgV2VpZ2h0IHN0eWxlIG5hbWVcbi0gYHNscGA6IHNob3J0IGxpdGVyYWwgZm9yIHRoZSBTbG9wZSBzdHlsZSBuYW1lXG4tIGBzbG9wZWA6IGxvbmcgbGl0ZXJhbCBmb3IgdGhlIFNsb3BlIHN0eWxlIG5hbWVcbi0gYHNlbGVjdGVkYDogMCB0byBleGNsdWRlIHRoZSBmaWxlIHdoaWxlIHdyaXRpbmcgZGF0YSBmcm9tIENTViB0byBmb250cywgMSB0byBpbmNsdWRlIHRoZSBmaWxlXG5cbkJvdGggZmlsZXMgY2FuIGJlIGVkaXRlZCBtYW51YWxseSBvciB1c2luZyB0aGUgY2hhcmFjdGVyIGludGVyZmFjZS5cblxuKipTdGVwIDIqKiBjYW4gYmUgZXhlY3V0ZWQsIGFmdGVyIHJldmlld2luZyBgZm9udHNfZGF0YS5jc3ZgLCBydW5uaW5nIHRoZSBgZnRjbGkgYXNzaXN0YW50IGNvbW1pdGAgY29tbWFuZC5cblxuIyMjIGZ0Y2xpIGFzc2lzdGFudCB1aVxuXG5PcGVucyB0aGUgY2hhcmFjdGVyIHVzZXIgaW50ZXJmYWNlIHRvIGVkaXQgdGhlIGBzdHlsZXNfbWFwcGluZy5qc29uYCBhbmQgYGZvbnRzX2RhdGEuY3N2YCBmaWxlcy4gSWYgb25lIG9yIGJvdGggZmlsZXNcbmRvIG5vdCBleGlzdCwgdGhleSB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgY3JlYXRlZC5cblxuKipVc2FnZSoqXG5cbiAgICBmdGNsaSBhc3Npc3RhbnQgdWkgSU5QVVRfUEFUSFxuXG5UaGUgbWFpbiB3aW5kb3cgZGlzcGxheXMgYSBsaXN0IG9mIGZvbnRzIGZvdW5kIGluIGBJTlBVVF9QQVRIYCBhbmQgYWxsb3dzIHRvIGFjY2VzcyB0aGUgZWRpdG9ycyBmb3JcbmBzdHlsZXNfbWFwcGluZy5qc29uYCBhbmQgYGZvbnRzX2RhdGEuY3N2YC5cblxuVGhlIE1haW4gV2luZG93OlxuXG4hW2ltYWdlXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS84MzA2MzUwNi8yMjY5MzU2OTMtNTE5MzA5YTQtYzc2Yy00MzIxLThmMWQtNWJjMGU3YTMyZGU1LnBuZyBcImZ0Q0xJIGFzc2lzdGFudCBtYWluIHdpbmRvd1wiKVxuXG5UaGUgU3R5bGVzIE1hcHBpbmcgRWRpdG9yOlxuXG4hW2ltYWdlXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS84MzA2MzUwNi8yMjcxNTAzNDQtNmZmZDU3MzAtYzc1Yy00ODM2LWE4YTctY2NiMTUxOGQ2NDE0LnBuZyBcIlN0eWxlcyBNYXBwaW5nIEVkaXRvclwiKVxuXG5UaGUgRm9udHMgRGF0YSBFZGl0b3I6XG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzgzMDYzNTA2LzIyNzE1MDY5OC1jN2M1YzBjMy0yMzc0LTQyMmQtOGJlNy1jMTljOGM0MWM2OWQucG5nIFwiVGhlIEZvbnRzIERhdGEgRWRpdG9yXCIpXG5cbldoZW4gdGhlIGBmb250c19kYXRhLmNzdmAgZmlsZSBjb250YWlucyB0aGUgZGVzaXJlZCB2YWx1ZXMsIGRhdGEgYXJlIHJlYWR5IHRvIGJlIHdyaXR0ZW4gdG8gZm9udHMgdXNpbmcgdGhlIGBmdGNsaVxuYXNzaXN0YW50IGNvbW1pdGAgY29tbWFuZC5cblxuIyMjIGZ0Y2xpIGFzc2lzdGFudCBjb21taXRcblxuV3JpdGVzIGRhdGEgZnJvbSBDU1YgdG8gZm9udHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGFzc2lzdGFudCBjb21taXQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAgIC0td2lkdGgtZWxpZGFibGUgVEVYVCAgICAgICAgICAgVGhlIHdpZHRoIHdvcmQgdG8gZWxpZGUgd2hlbiBidWlsZGluZyB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXJlY29yZHMuICBbZGVmYXVsdDogTm9ybWFsXVxuICAgICAgLS13ZWlnaHQtZWxpZGFibGUgVEVYVCAgICAgICAgICBUaGUgd2VpZ2h0IHdvcmQgdG8gZWxpZGUgd2hlbiBidWlsZGluZyB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXJlY29yZHMuICBbZGVmYXVsdDogUmVndWxhcl1cbiAgICAgIC1scywgLS1saW5rZWQtc3R5bGVzIDxJTlRFR0VSIFJBTkdFIElOVEVHRVIgUkFOR0U+Li4uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZSB0aGlzIG9wdGlvbiB0byBhY3RpdmF0ZSBsaW5rZWQgc3R5bGVzLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGlzIG9wdGlvbiBpcyBhY3RpdmUsIGxpbmtlZCBzdHlsZXMgbXVzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBzcGVjaWZpZWQuIEZvciBleGFtcGxlOiAtbHMgNDAwIDcwMCwgb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLWxzIDMwMCA2MDAuXG4gICAgICAteCwgLS1leGNsdWRlLW5hbWVyZWNvcmRzIFsxfDJ8M3w0fDV8NnwxNnwxN3wxOF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZSBJRHMgdG8gc2tpcC4gVGhlIHNwZWNpZmllZCBuYW1lIElEc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b24ndCBiZSByZWNhbGN1bGF0ZWQuIFRoaXMgb3B0aW9uIGNhbiBiZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBlYXRlZCAoZm9yIGV4YW1wbGU6IC14IDMgLXggNSAteCA2Li4uKS5cbiAgICAgIC1zd2R0LCAtLXNob3J0ZW4td2lkdGggWzF8NHw2fDE2fDE3XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lIElEcyB3aGVyZSB0byB1c2UgdGhlIHNob3J0IHdvcmQgZm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoIHN0eWxlIG5hbWUgKGZvciBleGFtcGxlLCAnQ24nIGluc3RlYWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgJ0NvbmRlbnNlZCcpLiBUaGlzIG9wdGlvbiBjYW4gYmUgcmVwZWF0ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGZvciBleGFtcGxlOiAtc3dkdCAxIC1zd2R0IDUsIC1zd2R0IDE2Li4uKS5cbiAgICAgIC1zd2d0LCAtLXNob3J0ZW4td2VpZ2h0IFsxfDR8NnwxN11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZSBJRHMgd2hlcmUgdG8gdXNlIHRoZSBzaG9ydCB3b3JkIGZvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWlnaHQgc3R5bGUgbmFtZSAoZm9yIGV4YW1wbGUsICdNZCcgaW5zdGVhZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiAnTWVkaXVtJykuIFRoaXMgb3B0aW9uIGNhbiBiZSByZXBlYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZm9yIGV4YW1wbGU6IC1zd2d0IDEgLXN3Z3QgNSAtc3dndCA2Li4uKS5cbiAgICAgIC1rd2R0LCAtLWtlZXAtd2lkdGgtZWxpZGFibGUgICAgRG9lc24ndCByZW1vdmUgdGhlIHdpZHRoIGVsaWRhYmxlIHdvcmRzIChieVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBcIk5vclwiIGFuZCBcIk5vcm1hbFwiKS5cbiAgICAgIC1rd2d0LCAtLWtlZXAtd2VpZ2h0LWVsaWRhYmxlICAgRG9lc24ndCByZW1vdmUgdGhlIHdlaWdodCBlbGlkYWJsZSB3b3JkcyAoYnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgXCJSZ1wiIGFuZCBcIlJlZ3VsYXJcIikuXG4gICAgICAtc3NscCwgLS1zaG9ydGVuLXNsb3BlIFs0fDZ8MTZ8MTddXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgSURzIHdoZXJlIHRvIHVzZSB0aGUgc2hvcnQgd29yZCBmb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xvcGUgc3R5bGUgbmFtZSAoZm9yIGV4YW1wbGUsICdJdCcgaW5zdGVhZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiAnSXRhbGljJykuIFRoaXMgb3B0aW9uIGNhbiBiZSByZXBlYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZm9yIGV4YW1wbGU6IC1zc2xwIDMgLXNzbHAgNSAtc3NscCA2Li4uKS5cbiAgICAgIC1zZiwgLS1zdXBlci1mYW1pbHkgICAgICAgICAgICAgU3VwZXJmYW1pbHkgbW9kZS4gVGhpcyBvcHRpb24gYWZmZWN0cyBuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEcyAzLCA2LCAxNiBhbmQgMTcgaW4gY2FzZSBvZiBmYW1pbGllcyB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRocyBkaWZmZXJlbnQgdGhhbiAnTm9ybWFsJy4gSWYgdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb24gaXMgYWN0aXZlLCBuYW1lIElEIDYgd2lsbCBiZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnRmFtaWx5TmFtZS1XaWR0aFdlaWdodFNsb3BlJyBpbnN0ZWFkIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdGYW1pbHlOYW1lV2lkdGgtV2VpZ2h0U2xvcGUnLiBNYWMgYW5kIE9UXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbWlseS9zdWJmYW1pbHkgbmFtZXMgd2lsbCBiZSBGYW1pbHlOYW1lIC9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2lkdGggV2VpZ2h0IFNsb3BlJyBpbnN0ZWFkIG9mICdGYW1pbHkgTmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXaWR0aCAvIFdlaWdodCBTbG9wZScuXG4gICAgICAtYXVpLCAtLWFsdC11aWQgICAgICAgICAgICAgICAgIFVzZSBhbHRlcm5hdGUgdW5pcXVlIGlkZW50aWZpZXIuIEJ5IGRlZmF1bHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVJRCAzIChVbmlxdWUgaWRlbnRpZmllcikgaXMgY2FsY3VsYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2NvcmRpbmcgdG8gdGhlIGZvbGxvd2luZyBzY2hlbWU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdWZXJzaW9uO1ZlbmRvciBjb2RlO1Bvc3RzY3JpcHROYW1lJy4gVGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdGVybmF0ZSB1bmlxdWUgaWRlbnRpZmllciBpcyBjYWxjdWxhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY29yZGluZyB0byB0aGUgZm9sbG93aW5nIHNjaGVtZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ01hbnVmYWN0dXJlcjogRnVsbCBGb250IE5hbWU6IENyZWF0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFllYXInLlxuICAgICAgLW9ibmksIC0tb2JsaXF1ZS1ub3QtaXRhbGljICAgICBCeSBkZWZhdWx0LCBpZiBhIGZvbnQgaGFzIHRoZSBvYmxpcXVlIGJpdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQsIHRoZSBpdGFsaWMgYml0cyB3aWxsIGJlIHNldCB0b28uIFVzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzIG9wdGlvbiB0byBvdmVycmlkZSB0aGUgZGVmYXVsdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZWhhdmlvdXIgKGZvciBleGFtcGxlLCB3aGVuIHRoZSBmYW1pbHkgaGFzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdGggaXRhbGljIGFuZCBvYmxpcXVlIHN0eWxlcyBhbmQgeW91IG5lZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8ga2VlcCBvYmxpcXVlIGFuZCBpdGFsaWMgc3R5bGVzIHNlcGFyYXRlKS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIGl0YWxpYyBiaXRzIHdpbGwgYmUgY2xlYXJlZCB3aGVuIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmxpcXVlIGJpdCBpcyBzZXQuXG4gICAgICAtLW5vLWF1dG8tc2hvcnRlbiAgICAgICAgICAgICAgIFdoZW4gbmFtZSBpZCAxLCA0IG9yIDYgYXJlIGxvbmdlciB0aGFuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heGltdW0gYWxsb3dlZCAoMjcgY2hhcmFjdGVycyBmb3IgbmFtZUlEIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMxIGZvciBuYW1lSUQgNCBhbmQgMjkgZm9yIG5hbWVJRCA2KSwgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcmlwdCB0cmllcyB0byBhdXRvIHNob3J0ZW4gdGhvc2UgbmFtZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjaW5nIGxvbmcgd29yZHMgd2l0aCBzaG9ydCB3b3Jkcy4gVXNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgb3B0aW9uIHRvIHByZXZlbnQgdGhlIHNjcmlwdCBmcm9tIGF1dG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcnRlbmluZyBuYW1lcy5cbiAgICAgIC1jZmYgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgdGhpcyBvcHRpb24gaXMgYWN0aXZlLCBmb250TmFtZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZ1bGxOYW1lLCBGYW1pbHlOYW1lIGFuZCBXZWlnaHQgdmFsdWVzIGluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSAnQ0ZGJyB0YWJsZSB3aWxsIGJlIHJlY2FsY3VsYXRlZC5cbiAgICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgICAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbCBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZWQgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCeSBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgYXNzaXN0YW50IGluaXQtY29uZmlnXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGFzc2lzdGFudCBpbml0LWNvbmZpZyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKlxuXG4gICAgLXEsIC0tcXVpZXQgIFN1cHByZXNzIHRoZSBvdmVyd3JpdGUgY29uZmlybWF0aW9uIG1lc3NhZ2UgaWYgdGhlIGNvbmZpZy5qc29uXG4gICAgICAgICAgICAgICAgIGZpbGUgYWxyZWFkeSBleGlzdHMuXG4gICAgLS1oZWxwICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG5JZiwgZm9yIHNvbWUgcmVhc29uLCB0aGUgdXNlciBuZWVkcyB0byBjcmVhdGUgb3IgcmVzZXQgdGhlIGBzdHlsZXNfbWFwcGluZ3MuanNvbmAgZmlsZSB0byB0aGUgZGVmYXVsdCB2YWx1ZXMsIHRoaXNcbmNvbW1hbmQgd2lsbCBzZXJ2ZSB0aGUgcHVycG9zZS4gTm90IG5lZWRlZCBpZiBgZnRjbGkgYXNzaXN0YW50IHVpYCBpcyB1c2VkLlxuXG4jIyMgZnRjbGkgYXNzaXN0YW50IGluaXQtZGF0YVxuXG5DcmVhdGVzIHRoZSBDU1YgZGF0YWJhc2UgZmlsZSBgZm9udHNfZGF0YS5jc3ZgIGluIHRoZSBgZnRDTElfZmlsZXNgIHN1YmRpcmVjdG9yeS4gTm90IG5lZWRlZCBpZiBgZnRjbGkgYXNzaXN0YW50IHVpYFxuaXMgdXNlZC5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgYXNzaXN0YW50IGluaXQtZGF0YSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1zLCAtLXN0eWxlcy1tYXBwaW5nLWZpbGUgRklMRSAgVXNlIGEgY3VzdG9tIHN0eWxlcyBtYXBwaW5nIGZpbGUgaW5zdGVhZCBvZlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGRlZmF1bHQgc3R5bGVzX21hcHBpbmcuanNvbiBmaWxlIGxvY2F0ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIHRoZSBmdENMSV9maWxlcyBmb2xkZXIuXG4gICAgLXEsIC0tcXVpZXQgICAgICAgICAgICAgICAgICAgICBTdXBwcmVzcyB0aGUgb3ZlcndyaXRlIGNvbmZpcm1hdGlvbiBtZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB0aGUgZm9udHNfZGF0YS5jc3YgYW5kL29yIHN0eWxlc19tYXBwaW5nLmpzb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVzIGFscmVhZHkgZXhpc3QgaW4gdGhlIGZ0Q0xJX2ZpbGVzIGZvbGRlci5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBjZmZcblxuYENGRmAgdGFibGUgZWRpdG9yLlxuXG4qKlVzYWdlOioqXG5cbiAgICBmdGNsaSBjZmYgQ09NTUFORCBbQVJHU11cblxuKipDb21tYW5kczoqKlxuXG4gICAgZGVsLW5hbWVzXG4gICAgZmluZC1yZXBsYWNlXG4gICAgZml4LXZlcnNpb25cbiAgICBzZXQtbmFtZXNcblxuIyMjIGZ0Y2xpIGNmZiBkZWwtbmFtZXNcblxuRGVsZXRlcyBDRkYgbmFtZXMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNmZiBkZWwtbmFtZXMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWZ1bGwtbmFtZSAgICAgICAgICAgICAgICAgICBEZWxldGVzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIEZ1bGxOYW1lXG4gICAgLS1mYW1pbHktbmFtZSAgICAgICAgICAgICAgICAgRGVsZXRlcyBDRkYuY2ZmLnRvcERpY3RJbmRleFswXSBGYW1pbHlOYW1lXG4gICAgLS13ZWlnaHQgICAgICAgICAgICAgICAgICAgICAgRGVsZXRlcyBDRkYuY2ZmLnRvcERpY3RJbmRleFswXSBXZWlnaHRcbiAgICAtLXZlcnNpb24gICAgICAgICAgICAgICAgICAgICBEZWxldGVzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIHZlcnNpb25cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgY2ZmIGZpbmQtcmVwbGFjZVxuXG5GaW5kcyBhIHN0cmluZyBpbiB0aGUgZm9sbG93aW5nIGl0ZW1zIG9mIENGRiB0YWJsZSB0b3BEaWN0IGFuZCByZXBsYWNlcyBpdCB3aXRoIGEgbmV3IHN0cmluZzogYHZlcnNpb25gLCBgRnVsbE5hbWVgLFxuYEZhbWlseU5hbWVgLCBgV2VpZ2h0YCwgYENvcHlyaWdodGAsIGBOb3RpY2VgLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjZmYgZmluZC1yZXBsYWNlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW9zLCAtLW9sZC1zdHJpbmcgVEVYVCAgICAgICAgVGhlIHN0cmluZyB0byBiZSByZXBsYWNlZCAgW3JlcXVpcmVkXVxuICAgIC1ucywgLS1uZXctc3RyaW5nIFRFWFQgICAgICAgIFRoZSBzdHJpbmcgdG8gcmVwbGFjZSB0aGUgb2xkIHN0cmluZyB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3JlcXVpcmVkXVxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjZmYgZml4LXZlcnNpb25cblxuQWxpZ25zIHRvcERpY3QgdmVyc2lvbiBzdHJpbmcgdG8gdGhlIGBoZWFkLmZvbnRSZXZpc2lvbmAgdmFsdWUuXG5cbkZvciBleGFtcGxlLCBpZiBgaGVhZC5mb250UmV2aXNpb25gIHZhbHVlIGlzIDIuMDAxLCBDRkYgdG9wRGljdCB2ZXJzaW9uIHZhbHVlIHdpbGwgYmUgMi4xLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjZmYgZml4LXZlcnNpb24gW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgY2ZmIHNldC1uYW1lc1xuXG5TZXRzIENGRiBuYW1lcy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY2ZmIHNldC1uYW1lcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0tZm9udC1uYW1lcyBURVhUICAgICAgICAgICAgIFNldHMgQ0ZGLmNmZi5mb250TmFtZXMgdmFsdWVcbiAgICAtLWZ1bGwtbmFtZSBURVhUICAgICAgICAgICAgICBTZXRzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIEZ1bGxOYW1lIHZhbHVlXG4gICAgLS1mYW1pbHktbmFtZSBURVhUICAgICAgICAgICAgU2V0cyBDRkYuY2ZmLnRvcERpY3RJbmRleFswXSBGYW1pbHlOYW1lIHZhbHVlXG4gICAgLS13ZWlnaHQgVEVYVCAgICAgICAgICAgICAgICAgU2V0cyBDRkYuY2ZmLnRvcERpY3RJbmRleFswXSBXZWlnaHQgdmFsdWVcbiAgICAtLXZlcnNpb24gVEVYVCAgICAgICAgICAgICAgICBTZXRzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIHZlcnNpb24gdmFsdWVcbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBjb252ZXJ0ZXJcblxuRm9udCBjb252ZXJ0ZXIuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciBbT1BUSU9OU10gQ09NTUFORCBbQVJHU10uLi5cblxuKipPcHRpb25zKio6XG4tLWhlbHAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbioqQ29tbWFuZHMqKjpcblxuICAgIGZ0MndmXG4gICAgb3RmMnR0ZlxuICAgIHR0YzJzZm50XG4gICAgdHRmMm90ZlxuICAgIHZhcjJzdGF0aWNcbiAgICB3ZjJmdFxuXG4jIyMgZnRjbGkgY29udmVydGVyIGZ0MndmXG5cbkNvbnZlcnRzIFNGTlQgZm9udHMgKFRURiBvciBPVEYpIHRvIHdlYiBmb250cyAoV09GRiBhbmQvb3IgV09GRjIpXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciBmdDJ3ZiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1mLCAtLWZsYXZvciBbd29mZnx3b2ZmMl0gICAgIEJ5IGRlZmF1bHQsIHRoZSBzY3JpcHQgY29udmVydHMgU0ZOVCBmb250c1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChUcnVlVHlwZSBvciBPcGVuVHlwZSkgYm90aCB0byB3b2ZmIGFuZCB3b2ZmMlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXZvcmVkIHdlYiBmb250cy4gVXNlIHRoaXMgb3B0aW9uIHRvIGNyZWF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ubHkgd29mZiAoLS1mbGF2b3Igd29mZikgb3Igd29mZjIgKC0tZmxhdm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd29mZjIpIGZpbGVzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgb3RmMnR0ZlxuXG5Db252ZXJ0cyBmb250cyBmcm9tIE9URiB0byBUVEYgZm9ybWF0LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjb252ZXJ0ZXIgb3RmMnR0ZiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgdHRjMnNmbnRcblxuRXh0cmFjdHMgZWFjaCBmb250IGZyb20gYSBUVEMgZmlsZSwgYW5kIHNhdmVzIGl0IGFzIGEgVFRGIG9yIE9URiBmaWxlLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjb252ZXJ0ZXIgdHRjMnNmbnQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgY29udmVydGVyIHR0ZjJvdGZcblxuQ29udmVydHMgVFRGIGZvbnRzIChvciBUcnVlVHlwZSBmbGF2b3JlZCB3b2ZmL3dvZmYyIHdlYiBmb250cykgdG8gT1RGIGZvbnRzIChvciBDRkYgZmxhdm9yZWQgd29mZi93b2ZmMiB3ZWIgZm9udHMpLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjb252ZXJ0ZXIgdHRmMm90ZiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC10LCAtLXRvbGVyYW5jZSBGTE9BVCBSQU5HRSAgIENvbnZlcnNpb24gdG9sZXJhbmNlICgwLTIuNSwgZGVmYXVsdCAxKS4gTG93XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9sZXJhbmNlIGFkZHMgbW9yZSBwb2ludHMgYnV0IGtlZXBzIHNoYXBlcy5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIaWdoIHRvbGVyYW5jZSBhZGRzIGZldyBwb2ludHMgYnV0IG1heSBjaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFwZXMuXG4gICAgLS1zYWZlICAgICAgICAgICAgICAgICAgICAgICAgU29tZXRpbWVzIFF1MkN1UGVuIG1heSBmYWlsIG9yIHByb2R1Y2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0b3J0ZWQgb3V0bGluZXMuIE1vc3Qgb2YgdGltZXMsIHVzZSBvZiAnLS1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYWZlJyB3aWxsIHByZXZlbnQgZXJyb3JzIGJ5IGNvbnZlcnRpbmcgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlIFRURiBmb250IHRvIGEgdGVtcG9yYXJ5IE9URiBidWlsdCB1c2luZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFQyQ2hhcnN0cmluZ3NQZW4sIGFuZCB0aGVuIHJlY29udmVydGluZyBpdCB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgdGVtcG9yYXJ5IFRURiBmb250LiBUaGlzIGxhc3Qgb25lIHdpbGwgYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VkIGZvciBUVEYgdG8gT1RGIGNvbnZlcnNpb24gaW5zdGVhZCBvZiB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgVFRGIGZpbGUuIFRoaXMgaXMgc2xvd2VyLCBidXQgc2FmZXN0LlxuICAgIC0tc2NhbGUtdXBtICAgICAgICAgICAgICAgICAgIFNjYWxlIHVuaXRzLXBlci1lbSBvZiBjb252ZXJ0ZWQgZm9udHMgdG8gMTAwMFxuICAgIC0ta2VlcC1nbHlwaHMgICAgICAgICAgICAgICAgIEtlZXBzIE5VTEwgYW5kIENSIGdseXBocyBmcm9tIHRoZSBvdXRwdXQgZm9udFxuICAgIC0tbm8tc3ViciAgICAgICAgICAgICAgICAgICAgIERvIG5vdCBzdWJyb3V0aW5pemUgY29udmVydGVkIGZvbnRzXG4gICAgLS1jaGVjay1vdXRsaW5lcyAgICAgICAgICAgICAgUGVyZm9ybXMgb3B0aW9uYWwgb3V0bGluZSBxdWFsaXR5IGNoZWNrcyBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVzIG92ZXJsYXBzIHdpdGggYWZka28uY2hlY2tvdXRsaW5lc3Vmb1xuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgdmFyMnN0YXRpY1xuXG5FeHBvcnRzIHN0YXRpYyBpbnN0YW5jZXMgZnJvbSB2YXJpYWJsZSBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY29udmVydGVyIHZhcjJzdGF0aWMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtcywgLS1zZWxlY3QtaW5zdGFuY2UgICAgICAgICBCeSBkZWZhdWx0LCB0aGUgc2NyaXB0IGV4cG9ydHMgYWxsIG5hbWVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VzLiBVc2UgdGhpcyBvcHRpb24gdG8gc2VsZWN0IGN1c3RvbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF4aXMgdmFsdWVzIGZvciBhIHNpbmdsZSBpbnN0YW5jZS5cbiAgICAtLW5vLWNsZWFudXAgICAgICAgICAgICAgICAgICBCeSBkZWZhdWx0LCBTVEFUIHRhYmxlIGlzIGRyb3BwZWQgYW5kIGF4aXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lSURzIGFyZSBkZWxldGVkIGZyb20gbmFtZSB0YWJsZS4gVXNlIC0tbm8tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYW51cCB0byBrZWVwIFNUQVQgdGFibGUgYW5kIHByZXZlbnQgYXhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVJRHMgdG8gYmUgZGVsZXRlZCBmcm9tIG5hbWUgdGFibGUuXG4gICAgLS1uby11cGRhdGUtbmFtZS10YWJsZSAgICAgICAgUHJldmVudCB1cGRhdGluZyBpbnN0YW50aWF0ZWQgZm9udHMgYG5hbWVgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUuIElucHV0IGZvbnRzIG11c3QgaGF2ZSBhIFNUQVQgdGFibGUgd2l0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF4aXMgVmFsdWUgVGFibGVzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgd2YyZnRcblxuQ29udmVydHMgd2ViIGZvbnRzIChXT0ZGIGFuZCBXT0ZGMikgdG8gU0ZOVCBmb250cyAoVFRGIG9yIE9URikuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciB3ZjJmdCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1mLCAtLWZsYXZvciBbd29mZnx3b2ZmMl0gICAgIEJ5IGRlZmF1bHQsIHRoZSBzY3JpcHQgY29udmVydHMgYm90aCB3b2ZmIGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvZmYyIGZsYXZvcmVkIHdlYiBmb250cyB0byBTRk5UIGZvbnRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFRydWVUeXBlIG9yIE9wZW5UeXBlKS4gVXNlIHRoaXMgb3B0aW9uIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVydCBvbmx5IHdvZmYgb3Igd29mZjIgZmxhdm9yZWQgd2ViIGZvbnRzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIGZpeFxuXG5BIHNldCBvZiBjb21tYW5kcyB0byBkZXRlY3QgYW5kIGF1dG9tYXRpY2FsbHkgZml4IGZvbnQgZXJyb3JzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggW09QVElPTlNdIENPTU1BTkQgW0FSR1NdLi4uXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgY2FyZXQtb2Zmc2V0XG4gICAgY29udG91cnNcbiAgICBkZWNvbXBvc2UtdHJhbnNmb3JtZWRcbiAgICBkdXBsaWNhdGUtY29tcG9uZW50c1xuICAgIGl0YWxpYy1hbmdsZVxuICAgIGtlcm4tdGFibGVcbiAgICBuYnNwLW1pc3NpbmdcbiAgICBuYnNwLXdpZHRoXG4gICAgb3MyLXJhbmdlc1xuICAgIHN0cmlwLW5hbWVzXG4gICAgdXByaWdodHNcblxuIyMjIGZ0Y2xpIGZpeCBjYXJldC1vZmZzZXRcblxuUmVjYWxjdWxhdGVzIGBoaGVhLmNhcmV0T2Zmc2V0YCB2YWx1ZS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IGNhcmV0LW9mZnNldCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggY29udG91cnNcblxuRml4IGNvbnRvdXJzIGJ5IHJlbW92aW5nIG92ZXJsYXBzIGFuZCBjb3JyZWN0aW5nIGRpcmVjdGlvbi5cblxuVGhpcyBjb21tYW5kIHdpbGwgZHJvcCBoaW50cyBmcm9tIGJvdGggVFRGcyBhbmQgT1RGcy4gSGludGluZyBjYW4gYmUgcmVzdG9yZWQgd2l0aCBmdGNsaSB1dGlscyB0dGYtYXV0b2hpbnQgZm9yIFRURlxuZmlsZXMsIGFuZCBmdGNsaSB1dGlscyBjZmYtYXV0b2hpbnQgZm9yIE9URiBmaWxlcy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IGNvbnRvdXJzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBkZWNvbXBvc2UtdHJhbnNmb3JtZWRcblxuRGVjb21wb3NlcyBjb21wb3NpdGUgZ2x5cGhzIHRoYXQgaGF2ZSB0cmFuc2Zvcm1lZCBjb21wb25lbnRzLlxuXG5mb250YmFrZXJ5IGNoZWNrIGlkOiBjb20uZ29vZ2xlLmZvbnRzL2NoZWNrL3RyYW5zZm9ybWVkX2NvbXBvbmVudHNcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IGRlY29tcG9zZS10cmFuc2Zvcm1lZCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggZHVwbGljYXRlLWNvbXBvbmVudHNcblxuUmVtb3ZlcyBkdXBsaWNhdGUgY29tcG9uZW50cyB3aGljaCBoYXZlIHRoZSBzYW1lIHgseSBjb29yZGluYXRlcy5cblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay9nbHlmX25vbl90cmFuc2Zvcm1lZF9kdXBsaWNhdGVfY29tcG9uZW50c1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggZHVwbGljYXRlLWNvbXBvbmVudHMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgZml4IGl0YWxpYy1hbmdsZVxuXG5SZWNhbGN1bGF0ZXMgYHBvc3QuaXRhbGljQW5nbGVgLCBgaGhlYS5jYXJldFNsb3BlUmlzZWAsIGBoaGVhLmNhcmV0U2xvcGVSdW5gIGFuZCBzZXRzL2NsZWFycyB0aGUgaXRhbGljL29ibGlxdWUgYml0c1xuYWNjb3JkaW5nIHRvIHRoZSBjYWxjdWxhdGVkIHZhbHVlcy4gSW4gQ0ZGIGZvbnRzLCBhbHNvIGBDRkYudG9wRGljdEluZGV4WzBdLkl0YWxpY0FuZ2xlYCBpcyByZWNhbGN1bGF0ZWQuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBpdGFsaWMtYW5nbGUgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtbSwgLS1tb2RlIElOVEVHRVIgUkFOR0UgICAgICAxOiBzZXRzIG9ubHkgdGhlIGl0YWxpYyBiaXRzIGFuZCBjbGVhcnMgdGhlIG9ibGlxdWUgYml0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjogc2V0cyBpdGFsaWMgYW5kIG9ibGlxdWUgYml0c1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM6IHNldHMgb25seSB0aGUgb2JsaXF1ZSBiaXQgYW5kIGNsZWFycyBpdGFsaWMgYml0cyAgWzE8PXg8PTNdXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBrZXJuLXRhYmxlXG5cblNvbWUgYXBwbGljYXRpb25zIHN1Y2ggYXMgTVMgUG93ZXJQb2ludCByZXF1aXJlIGtlcm5pbmcgaW5mbyBvbiB0aGUga2VyblxudGFibGUuIE1vcmUgc3BlY2lmaWNhbGx5LCB0aGV5IHJlcXVpcmUgYSBmb3JtYXQgMCBrZXJuIHN1YnRhYmxlIGZyb20gYSBrZXJuXG50YWJsZSB2ZXJzaW9uIDAgd2l0aCBvbmx5IGdseXBocyBkZWZpbmVkIGluIHRoZSBjbWFwIHRhYmxlLlxuXG5HaXZlbiB0aGlzLCB0aGUgY29tbWFuZCBkZWxldGVzIGFsbCBrZXJuaW5nIHBhaXJzIGZyb20ga2VybiB2MCBzdWJ0YWJsZXNcbndoZXJlIG9uZSBvZiB0aGUgdHdvIGdseXBocyBpcyBub3QgZGVmaW5lZCBpbiB0aGUgY21hcCB0YWJsZS5cblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay9rZXJuX3RhYmxlXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBrZXJuLXRhYmxlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBtb25vc3BhY2VcblxuSWYgdGhlIGZhbWlseSBpcyBtb25vc3BhY2VkOlxuXG4tIHBvc3QuaXNGaXhlZFBpdGNoIG11c3QgYmUgc2V0IHRvIGEgbm9uLXplcm8gdmFsdWVcbi0gT1MvMi5wYW5vc2UuYlByb3BvcnRpb24gbXVzdCBiZSBzZXQgdG8gOVxuLSBDRkYuY2ZmLlRvcERpY3RJbmRleFswXS5pc0ZpeGVkUGl0Y2ggbXVzdCBiZSBzZXQgdG8gVHJ1ZVxuXG5mb250YmFrZXJ5IGNoZWNrIGlkOiBjb20uZ29vZ2xlLmZvbnRzL2NoZWNrL21vbm9zcGFjZVxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggbW9ub3NwYWNlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBuYnNwLW1pc3NpbmdcblxuQ2hlY2tzIGlmIHRoZSBmb250IGhhcyBhIG5vbi1icmVha2luZyBzcGFjZSBjaGFyYWN0ZXIsIGFuZCBpZiBpdCBkb2Vzbid0LCBpdCBhZGRzIG9uZSBieSBkb3VibGUgbWFwcGluZyAnc3BhY2UnXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBuYnNwLW1pc3NpbmcgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgZml4IG5ic3Atd2lkdGhcblxuQ2hlY2tzIGlmICduYnNwYWNlJyBhbmQgJ3NwYWNlJyBnbHlwaHMgaGF2ZSB0aGUgc2FtZSB3aWR0aC4gSWYgbm90LCBjb3JyZWN0cyAnbmJzcGFjZScgd2lkdGggdG8gbWF0Y2ggJ3NwYWNlJyB3aWR0aC5cblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay93aGl0ZXNwYWNlX3dpZHRoc1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggbmJzcC13aWR0aCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggb3MyLXJhbmdlc1xuXG5HZW5lcmF0ZXMgYSB0ZW1wb3JhcnkgVHlwZSAxIGZyb20gdGhlIGZvbnQgZmlsZSB1c2luZyB0eCwgY29udmVydHMgdGhhdCB0byBhbiBPcGVuVHlwZSBmb250IHVzaW5nIG1ha2VvdGYsIHJlYWRzIHRoZVxuVW5pY29kZSByYW5nZXMgYW5kIGNvZGVwYWdlIHJhbmdlcyBmcm9tIHRoZSB0ZW1wb3JhcnkgT3BlblR5cGUgZm9udCBmaWxlLCBhbmQgdGhlbiB3cml0ZXMgdGhvc2UgcmFuZ2VzIHRvIHRoZVxub3JpZ2luYWwgZm9udCdzIE9TLzIgdGFibGUuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBvczItcmFuZ2VzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBzdHJpcC1uYW1lc1xuXG5SZW1vdmVzIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHNwYWNlcyBmcm9tIGFsbCBuYW1lcmVjb3Jkcy5cblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay9uYW1lL3RyYWlsaW5nX3NwYWNlc1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggc3RyaXAtbmFtZXMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG5cbiMjIyBmdGNsaSBmaXggdXByaWdodHNcblxuQXNzdW1pbmcgdGhhdCB0aGUgZm9udCBpcyBjb3JyZWN0bHkgc2V0IGFzIHVwcmlnaHQgKGkuZS46IGl0YWxpYyBvYmxpcXVlXG5iaXRzIGFyZSBhbGwgY2xlYXIpLCB0aGUgc2NyaXB0IHNldHMgdGhlIGZvbGxvd2luZyB2YWx1ZXM6XG5cbi0gcG9zdC5pdGFsaWNBbmdsZSA9IDAuMFxuLSBoaGVhLmNhcmV0U2xvcGVSaXNlID0gMVxuLSBoaGVhLmNhcmV0U2xvcGVSdW4gPSAwXG4tIGhoZWEuY2FyZXRPZmZzZXQgPSAwXG4tIENGRi5jZmYudG9wRGljdEluZGV4WzBdLkl0YWxpY0FuZ2xlID0gMCAob25seSBpZiB0aGUgZm9udCBoYXMgYSBDRkYgdGFibGUpXG5cblRoZSBmb250IGlzIHNhdmVkIG9ubHkgaWYgYXQgbGVhc3Qgb25lIHRhYmxlIGhhcyBjaGFuZ2VkLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggdXByaWdodHMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBoaGVhXG5cbkNvbW1hbmQgbGluZSBoaGVhIHRhYmxlIGVkaXRvci5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgaGhlYSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0tcmlzZSBJTlRFR0VSICAgICAgICAgICAgICAgIFNldHMgdGhlIGBjYXJldFNsb3BlUmlzZWAgdmFsdWUuXG4gICAgLS1ydW4gSU5URUdFUiAgICAgICAgICAgICAgICAgU2V0cyB0aGUgYGNhcmV0U2xvcGVSdW5gIHZhbHVlLlxuICAgIC0tb2Zmc2V0IElOVEVHRVIgICAgICAgICAgICAgIFNldHMgdGhlIGBjYXJldE9mZnNldGAgdmFsdWUuXG4gICAgLS1hc2NlbnQgSU5URUdFUiAgICAgICAgICAgICAgU2V0cyB0aGUgYGFzY2VudGAgdmFsdWUuXG4gICAgLS1kZXNjZW50IElOVEVHRVIgICAgICAgICAgICAgU2V0cyB0aGUgYGRlc2NlbnRgIHZhbHVlLlxuICAgIC0tbGluZWdhcCBJTlRFR0VSICAgICAgICAgICAgIFNldHMgdGhlIGBsaW5lR2FwYCB2YWx1ZS5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBtZXRyaWNzXG5cblZlcnRpY2FsIG1ldHJpY3MgdG9vbHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG1ldHJpY3MgW09QVElPTlNdIENPTU1BTkQgW0FSR1NdLi4uXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgYWxpZ25cbiAgICBjb3B5XG4gICAgc2V0LWxpbmVnYXBcblxuIyMjIGZ0Y2xpIG1ldHJpY3MgYWxpZ25cblxuQWxpZ25zIGFsbCBmb250cyBzdG9yZWQgaW4gSU5QVVRfUEFUSCBmb2xkZXIgdG8gdGhlIHNhbWUgYmFzZWxpbmUuXG5cblRvIGFjaGlldmUgdGhpcywgdGhlIHNjcmlwdCBmaW5kcyB0aGUgbWF4aW11bSBhc2NlbmRlciBhbmQgdGhlIG1pbmltdW0gZGVzY2VuZGVyIHZhbHVlcyBvZiB0aGUgZm9udHMgc3RvcmVkIGluIHRoZVxuSU5QVVRfUEFUSCBmb2xkZXIgYW5kIGFwcGxpZXMgdGhvc2UgdmFsdWVzIHRvIGFsbCBmb250cy5cblxuVGhpcyBjYW4gcHJvZHVjZSB1bmRlc2lyZWQgZWZmZWN0cyAoYW4gZXhhZ2dlcmF0ZWQgbGluZSBoZWlnaHQpIHdoZW4gb25lIG9yIG1vcmUgZm9udHMgY29udGFpbiBzd2FzaGVzLCBmb3IgZXhhbXBsZS4gSW5cbnN1Y2ggY2FzZXMsIGl0J3MgYmV0dGVyIHRvIGNvcHkgdGhlIHZlcnRpY2FsIG1ldHJpY3MgZnJvbSBhIHRlbXBsYXRlIGZvbnQgdG8gb25lIG9yIG1vcmUgZGVzdGluYXRpb24gZm9udHMgdXNpbmcgdGhlXG5bYGZ0Y2xpIG1ldHJpY3MgY29weWBdKCNmdGNsaS1tZXRyaWNzLWNvcHktbWV0cmljcykgY29tbWFuZC5cblxuU2VlIGh0dHBzOi8va2x0Zi5kZS9kb3dubG9hZC9Gb250TWV0cmljcy1rbHRmLnBkZiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgbWV0cmljcyBhbGlnbiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuT3B0aW9uczpcblxuICAgIC0td2l0aC1saW5lZ2FwICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIFNJTCBtZXRob2RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaHR0cHM6Ly9zaWxucnNpLmdpdGh1Yi5pby9GREJQL2VuLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVTL0xpbmVfTWV0cmljcy5odG1sKSBpcyB1c2VkLiBUaGlzIG1lYW5zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdCwgaW4gT1MvMiB0YWJsZSwgc1R5cG9Bc2NlbmRlciBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzVHlwb0Rlc2NlbmRlciB2YWx1ZXMgYXJlIHNldCwgcmVzcGVjdGl2ZWx5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVxdWFsIHRvIG1heGltdW0gcmVhbCBhc2NlbmRlciBhbmQgbWluaW11bVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWwgZGVzY2VuZGVyLCBhbmQgdGhlIHNUeXBvTGluZUdhcCBpcyBzZXQgdG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6ZXJvLiBVc2UgJy0td2l0aC1saW5lZ2FwJyB0byBzZXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzVHlwb0FzY2VuZGVyIHZhbHVlIHRvIHRoZSBtYXhpbXVtIGlkZWFsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNjZW5kZXIgKGNhbGN1bGF0ZWQgZnJvbSBsZXR0ZXJzIGIsIGYsIGYsIGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaywgbCBhbmQgdCkgYW5kIHRoZSBzVHlwb0Rlc2NlbmRlciB2YWx1ZSB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBtaW5pbXVtIGlkZWFsIGRlc2NlbmRlciAoY2FsY3VsYXRlZCBmcm9tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVycyBnLCBqLCBwLCBxIGFuZCB5KS4gVGhlIHNUeXBvTGluZUdhcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgY2FsY3VsYXRlZCBhcyBmb2xsb3dzOiAocmVhbCBhc2NlbmRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgYWJzKHJlYWwgZGVzY2VuZGVyKSkgLSAoaWRlYWwgYXNjZW5kZXIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFicyhpZGVhbCBkZXNjZW5kZXIpKS5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgbWV0cmljcyBjb3B5LW1ldHJpY3NcblxuQ29waWVzIHZlcnRpY2FsIG1ldHJpY3MgZnJvbSBhIHNvdXJjZSBmb250IHRvIG9uZSBvciBtb3JlIGRlc3RpbmF0aW9uIGZvbnRzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBtZXRyaWNzIGNvcHkgW09QVElPTlNdXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXMsIC0tc291cmNlLWZpbGUgRklMRSAgICAgIFNvdXJjZSBmaWxlLiBWZXJ0aWNhbCBtZXRyaWNzIGZyb20gdGhpcyBmb250XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgYXBwbGllZCB0byBhbGwgZGVzdGluYXRpb24gZm9udHMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtyZXF1aXJlZF1cbiAgICAtZCwgLS1kZXN0aW5hdGlvbiBQQVRIICAgICAgRGVzdGluYXRpb24gZmlsZSBvciBkaXJlY3RvcnkuICBbcmVxdWlyZWRdXG4gICAgLW8sIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFRoZSBvdXRwdXQgZGlyZWN0b3J5IHdoZXJlIHRoZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIGNyZWF0ZWQuIElmIGl0IGRvZXNuJ3QgZXhpc3QsIHdpbGwgYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgQnkgZGVmYXVsdCwgb3JpZ2luYWwgaGVhZC5tb2RpZmllZCB2YWx1ZSBpcyBrZXB0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4gYSBmb250IGlzIHNhdmVkLiBVc2UgdGhpcyBzd2l0Y2ggdG8gc2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWQubW9kaWZpZWQgdGltZXN0YW1wIHRvIGN1cnJlbnQgdGltZS5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgQnkgZGVmYXVsdCwgbW9kaWZpZWQgZmlsZXMgYXJlIG92ZXJ3cml0dGVuLiBVc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyBzd2l0Y2ggdG8gc2F2ZSB0aGVtIHRvIGEgbmV3IGZpbGUgKG51bWJlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmQgb2YgZmlsZSBuYW1lKS5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBtZXRyaWNzIHNldC1saW5lZ2FwXG5cbk1vZGlmaWVzIHRoZSBsaW5lIHNwYWNpbmcgbWV0cmljcyBpbiBvbmUgb3IgbW9yZSBmb250cy5cblxuVGhpcyBpcyBhIGZvcmsgb2YgZm9udC1saW5lIGJ5IFNvdXJjZSBGb3VuZHJ5OiBodHRwczovL2dpdGh1Yi5jb20vc291cmNlLWZvdW5kcnkvZm9udC1saW5lXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG1ldHJpY3Mgc2V0LWxpbmVnYXAgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtcCwgLS1wZXJjZW50IElOVEVHRVIgUkFOR0UgICAgIEFkanVzdCBmb250IGxpbmUgc3BhY2luZyB0byAlIG9mIFVQTSB2YWx1ZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxPD14PD0xMDA7IHJlcXVpcmVkXVxuICAgIC1tZm4sIC0tbW9kaWZ5LWZhbWlseS1uYW1lICAgICAgQWRkcyBMRyUgdG8gdGhlIGZvbnQgZmFtaWx5IHRvIHJlZmxlY3QgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RpZmllZCBsaW5lIGdhcC5cbiAgICAtbywgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgICAgIFRoZSBvdXRwdXQgZGlyZWN0b3J5IHdoZXJlIHRoZSBvdXRwdXQgZmlsZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZSB0byBiZSBjcmVhdGVkLiBJZiBpdCBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdmVkIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgLyAtLW5vLXJlY2FsYy10aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEtlZXBzIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tb3ZlcndyaXRlIC8gLS1uby1vdmVyd3JpdGUgICAgT3ZlcndyaXRlcyBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbSB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGVuZCBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIG5hbWVcblxuQ29tbWFuZCBsaW5lIGBuYW1lYCB0YWJsZSBlZGl0b3IuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG5hbWUgW09QVElPTlNdIENPTU1BTkQgW0FSR1NdLi4uXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgYXBwZW5kXG4gICAgZGVsLW1hYy1uYW1lc1xuICAgIGRlbC1uYW1lc1xuICAgIGZpbmQtcmVwbGFjZVxuICAgIHNldC1uYW1lXG5cbiMjIyBmdGNsaSBuYW1lIGFwcGVuZFxuXG5BcHBlbmRzIGEgcHJlZml4LCBvciBhIHN1ZmZpeCB0byB0aGUgc3BlY2lmaWVkIG5hbWVyZWNvcmRzXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG5hbWUgYXBwZW5kIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW4sIC0tbmFtZS1pZCBJTlRFR0VSICAgICAgICAgTmFtZUlEIHdoZXJlIHRvIGFwcGVuZCB0aGUgcHJlZml4L3N1ZmZpeC4gVGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbiBjYW4gYmUgcmVwZWF0ZWQgdG8gcHJlcGVuZC9hcHBlbmQgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nIHRvIG11bHRpcGxlIG5hbWVyZWNvcmRzLiBGb3IgZXhhbXBsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtbiAxIC1uIDIgLW4gMTYgLW4gMTcgIFtyZXF1aXJlZF1cbiAgICAtcCwgLS1wbGF0Zm9ybS1pZCBbMHwxfDNdICAgICBVc2UgdGhpcyBvcHRpb24gdG8gYWRkIHRoZSBwcmVmaXgvc3VmZml4IG9ubHlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgbmFtZXJlY29yZHMgbWF0Y2hpbmcgdGhlIHByb3ZpZGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhdGZvcm1JRC5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDA6IFVuaWNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxOiBNYWNpbnRvc2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzOiBXaW5kb3dzXG4gICAgLWwsIC0tbGFuZ3VhZ2Utc3RyaW5nIFRFWFQgICAgVXNlIHRoaXMgb3B0aW9uIHRvIGFwcGVuZCB0aGUgcHJlZml4L3N1ZmZpeFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ubHkgdG8gdGhlIG5hbWVyZWNvcmRzIG1hdGNoaW5nIHRoZSBwcm92aWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlIHN0cmluZy5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZSBlcGlsb2cgZm9yIGEgbGlzdCBvZiB2YWxpZCBsYW5ndWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZ3MuXG4gICAgLS1wcmVmaXggVEVYVCAgICAgICAgICAgICAgICAgVGhlIHN0cmluZyB0byBiZSBwcmVwZW5kZWQgdG8gdGhlIG5hbWVyZWNvcmRzXG4gICAgLS1zdWZmaXggVEVYVCAgICAgICAgICAgICAgICAgVGhlIHN1ZmZpeCB0byBhcHBlbmQgdG8gdGhlIG5hbWVyZWNvcmRzXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIG5hbWUgZGVsLW1hYy1uYW1lc1xuXG5EZWxldGVzIGFsbCB0aGUgTWFjaW50b3NoIG5hbWVyZWNvcmRzIGZyb20gdGhlIG5hbWUgdGFibGUsIGV4Y2VwdCBuYW1lSURzIDEsIDIsIDQsIDUsIGFuZCA2LlxuXG5BY2NvcmRpbmcgdG8gQXBwbGUgKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9mb250cy9UcnVlVHlwZS1SZWZlcmVuY2UtTWFudWFsL1JNMDYvQ2hhcDZuYW1lLmh0bWwpLCBcIm5hbWVzIHdpdGhcbnBsYXRmb3JtSUQgMSB3ZXJlIHJlcXVpcmVkIGJ5IGVhcmxpZXIgdmVyc2lvbnMgb2YgbWFjT1MuIEl0cyB1c2Ugb24gbW9kZXJuIHBsYXRmb3JtcyBpcyBkaXNjb3VyYWdlZC4gVXNlIG5hbWVzIHdpdGhcbnBsYXRmb3JtSUQgMyBpbnN0ZWFkIGZvciBtYXhpbXVtIGNvbXBhdGliaWxpdHkuIFNvbWUgbGVnYWN5IHNvZnR3YXJlLCBob3dldmVyLCBtYXkgc3RpbGwgcmVxdWlyZSBuYW1lcyB3aXRoXG5wbGF0Zm9ybUlEIDEsIHBsYXRmb3JtU3BlY2lmaWNJRCAwXCIuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG5hbWUgZGVsLW1hYy1uYW1lcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0tZGVsLWFsbCAgICAgICAgICAgICAgICAgICAgIERlbGV0ZXMgYWxzbyBuYW1lSURzIDEsIDIsIDQsIDUgYW5kIDYuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIG5hbWUgZGVsLW5hbWVzXG5cbkRlbGV0ZXMgb25lIG9yIG1vcmUgbmFtZXJlY29yZHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG5hbWUgZGVsLW5hbWVzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW4sIC0tbmFtZS1pZCBJTlRFR0VSICAgICAgICAgTmFtZUlEKHMpIHRvIGRlbGV0ZS5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgb3B0aW9uIGNhbiBiZSByZXBlYXRlZCB0byBkZWxldGUgbXVsdGlwbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lcmVjb3JkcyBhdCBvbmNlLiBGb3IgZXhhbXBsZTogLW4gMSAtbiAyIC1uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNiAgW3JlcXVpcmVkXVxuICAgIC1wLCAtLXBsYXRmb3JtLWlkIFswfDF8M10gICAgIFBsYXRmb3JtSUQgb2YgdGhlIG5hbWVyZWNvcmRzIHRvIGRlbGV0ZTpcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDA6IFVuaWNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxOiBNYWNpbnRvc2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzOiBXaW5kb3dzXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBubyBwbGF0Zm9ybSBpcyBzcGVjaWZpZWQsIG5hbWVyZWNvcmRzIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBkZWxldGVkIGZyb20gYWxsIHRhYmxlcy5cbiAgICAtbCwgLS1sYW5ndWFnZS1zdHJpbmcgVEVYVCAgICBVc2UgdGhpcyBvcHRpb24gdG8gZmlsdGVyIHRoZSBuYW1lcmVjb3JkcyB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBieSBsYW5ndWFnZSBzdHJpbmcgKGZvciBleGFtcGxlOiAnaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZScsICdubCcpLiBTZWUgZXBpbG9nIGZvciBhIGxpc3Qgb2YgdmFsaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSBzdHJpbmdzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBuYW1lIGZpbmQtcmVwbGFjZVxuXG5GaW5kcyBhIHN0cmluZyBpbiB0aGUgc3BlY2lmaWVkIG5hbWVyZWNvcmRzIGFuZCByZXBsYWNlcyBpdCB3aXRoIGEgbmV3IHN0cmluZ1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIGZpbmQtcmVwbGFjZSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vcywgLS1vbGQtc3RyaW5nIFRFWFQgICAgICAgICBUaGUgc3RyaW5nIHRvIGJlIHJlcGxhY2VkICBbcmVxdWlyZWRdXG4gICAgLW5zLCAtLW5ldy1zdHJpbmcgVEVYVCAgICAgICAgIFRoZSBzdHJpbmcgdG8gcmVwbGFjZSB0aGUgb2xkIHN0cmluZyB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtyZXF1aXJlZF1cbiAgICAtbiwgLS1uYW1lLWlkIElOVEVHRVIgICAgICAgICAgbmFtZUlEcyB3aGVyZSB0byBzZWFyY2ggYW5kIHJlcGxhY2UgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZy4gSWYgbm90IHNwZWNpZmllZCwgdGhlIHN0cmluZyB3aWxsIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VkIGluIGFsbCBuYW1lcmVjb3Jkcy4gVGhpcyBvcHRpb24gY2FuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIHJlcGVhdGVkIHRvIHBlcmZvcm0gc2VhcmNoIGFuZCByZXBsYWNlIGluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlIG5hbWVyZWNvcmRzIChlLmcuOiAtbiAxIC1uIDQgLW4gNilcbiAgICAteCwgLS1leGNsdWRlLW5hbWUtaWQgSU5URUdFUiAgTmFtZUlEIHRvIGlnbm9yZS4gVGhlIHNwZWNpZmllZCBuYW1lSUQgd29uJ3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY2hhbmdlZC4gVGhpcyBvcHRpb24gY2FuIGJlIHJlcGVhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlIHRpbWVzIChlLmcuOiAtZXggMyAtZXggNSAtZXggMTYpLlxuICAgIC1wLCAtLXBsYXRmb3JtLWlkIFsxfDNdICAgICAgICBwbGF0Zm9ybSBpZCBbMTogbWFjaW50b3NoLCAzOiB3aW5kb3dzXS4gSWYgbm9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhdGZvcm0gaXMgc3BlY2lmaWVkLCB0aGUgc3RyaW5nIHdpbGwgYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZWQgaW4gYm90aCB0YWJsZXMuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdmVkIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIG5hbWUgc2V0LW5hbWVcblxuQWRkcyBhIG5hbWVyZWNvcmQgdG8gb25lIG9yIG1vcmUgZm9udCBmaWxlcy5cblxuSWYgdGhlIG5hbWVyZWNvcmQgaXMgYWxyZWFkeSBwcmVzZW50LCBpdCB3aWxsIGJlIG92ZXJ3cml0dGVuLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIHNldC1uYW1lIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW4sIC0tbmFtZS1pZCBJTlRFR0VSIFJBTkdFICAgVGhlIG5hbWVJRCBvZiB0aGUgbmFtZXJlY29yZCB0byBhZGQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWzA8PXg8PTMyNzY3OyByZXF1aXJlZF1cbiAgICAtcywgLS1zdHJpbmcgVEVYVCAgICAgICAgICAgICBTdHJpbmcgdG8gd3JpdGUgaW4gdGhlIG5hbWVyZWNvcmQuICBbcmVxdWlyZWRdXG4gICAgLXAsIC0tcGxhdGZvcm0taWQgWzF8M10gICAgICAgVXNlIHRoaXMgb3B0aW9uIHRvIHdyaXRlIHRoZSBuYW1lcmVjb3JkIG9ubHlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiB0aGUgc3BlY2lmaWVkIHRhYmxlOlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTogTWFjaW50b3NoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzogV2luZG93c1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgbm90IHNwZWNpZmllZCwgbmFtZXJlY29yZCB3aWxsIGJlIHdyaXR0ZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiBib3RoIHRhYmxlcy5cbiAgICAtbCwgLS1sYW5ndWFnZS1zdHJpbmcgVEVYVCAgICBVc2UgdGhpcyBvcHRpb24gdG8gd3JpdGUgdGhlIG5hbWVyZWNvcmQgaW4gYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlIGRpZmZlcmVudCB0aGFuICdlbicgKGUuZy46ICdpdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25sJywgJ2RlJykuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWUgZXBpbG9nIGZvciBhIGxpc3Qgb2YgdmFsaWQgbGFuZ3VhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmdzICBbZGVmYXVsdDogZW5dXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgb3MyXG5cbkNvbW1hbmQgbGluZSBgT1MvMmAgdGFibGUgZWRpdG9yLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBvczIgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtdmVyLCAtLXZlcnNpb24gSU5URUdFUiBSQU5HRSAgIFVwZ3JhZGVzIGBPUy8yYCB0YWJsZSB2ZXJzaW9uLiAgWzE8PXg8PTVdXG4gICAgLXdnaCwgLS13ZWlnaHQgSU5URUdFUiBSQU5HRSAgICBTZXRzIGB1c1dlaWdodENsYXNzYCB2YWx1ZS4gIFsxPD14PD0xMDAwXVxuICAgIC13ZHQsIC0td2lkdGggSU5URUdFUiBSQU5HRSAgICAgU2V0cyBgdXNXaWR0aENsYXNzYCB2YWx1ZS4gIFsxPD14PD05XVxuICAgIC1pdCwgLS1pdGFsaWMgLyAtbm8taXQsIC0tbm8taXRhbGljXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgSVRBTElDIGJpdHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChgZnNTZWxlY3Rpb25gIGJpdCAwIGFuZCBgaGVhZGAgdGFibGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBtYWNTdHlsZWAgYml0IDEpLlxuICAgIC1iZCwgLS1ib2xkIC8gLW5vLWJkLCAtLW5vLWJvbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNldHMgb3IgY2xlYXJzIHRoZSBCT0xEIGJpdHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChgT1MvMi5mc1NlbGVjdGlvbmAgYml0IDUgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgaGVhZC5tYWNTdHlsZWAgYml0IDApLlxuICAgIC1yZywgLS1yZWd1bGFyICAgICAgICAgICAgICAgICAgU2V0cyBSRUdVTEFSIChgZnNTZWxlY3Rpb25gIGJpdCkgNiBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFycyBCT0xEIChgZnNTZWxlY3Rpb25gIGJpdCA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYGhlYWQubWFjU3R5bGVgIGJpdCAwKSBhbmQgSVRBTElDXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYGZzU2VsZWN0aW9uYCBiaXQgMCwgYGhlYWQubWFjU3R5bGVgIGJpdCAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYml0cy4gVGhpcyBpcyBlcXVpdmFsZW50IHRvIGAtLW5vLWJvbGQgLS1uby1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0YWxpY2AuXG4gICAgLW9ibCwgLS1vYmxpcXVlIC8gLW5vLW9ibCwgLS1uby1vYmxpcXVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgT0JMSVFVRSBiaXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChgZnNTZWxlY3Rpb25gIGJpdCA5KS5cbiAgICAtdXRtLCAtLXVzZS10eXBvLW1ldHJpY3MgLyAtbm8tdXRtLCAtLW5vLXVzZS10eXBvLW1ldHJpY3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNldHMgb3IgY2xlYXJzIHRoZSBVU0VfVFlQT19NRVRSSUNTIGJpdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGBmc1NlbGVjdGlvbmAgYml0IDcpLlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBzZXQsIGl0IGlzIHN0cm9uZ2x5IHJlY29tbWVuZGVkIHRoYXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcGxpY2F0aW9ucyB1c2UgYE9TLzIuc1R5cG9Bc2NlbmRlcmAgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYE9TLzIuc1R5cG9EZXNjZW5kZXJgICsgIGBPUy8yLnNUeXBvTGluZUdhcGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzIHRoZSBkZWZhdWx0IGxpbmUgc3BhY2luZyBmb3IgdGhlIGZvbnQuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZTogaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cy90eXBvZ3JhcGh5L29wZW50eXBlL3NwZWMvb3MyI2Zzc2VsZWN0aW9uXG4gICAgLXd3cywgLS13d3MtY29uc2lzdGVudCAvIC1uby13d3MsIC0tbm8td3dzLWNvbnNpc3RlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNldHMgb3IgY2xlYXJzIHRoZSBXV1MgYml0IChgZnNTZWxlY3Rpb25gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaXQgOCkuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIHRoZSBgT1MvMi5mc1NlbGVjdGlvbmAgYml0IGlzIHNldCwgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250IGhhcyBgbmFtZWAgdGFibGUgc3RyaW5ncyBjb25zaXN0ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoIGEgd2VpZ2h0L3dpZHRoL3Nsb3BlIGZhbWlseSB3aXRob3V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJpbmcgdXNlIG9mIG5hbWUgSURzIDIxIGFuZCAyMi5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VlOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzL3R5cG9ncmFwaHkvb3BlbnR5cGUvc3BlYy9vczIjZnNzZWxlY3Rpb25cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWxzbzogaHR0cHM6Ly90eXBlZHJhd2Vycy5jb20vZGlzY3Vzc2lvbi8zODVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDcvZm9udGxhYi03LXdpbmRvd3MtcmVhZHMtZXhwb3J0ZWQtZm9udC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUtZGlmZmVyZW50bHlcbiAgICAtdmVuZCwgLS1hY2gtdmVuZC1pZCBURVhUICAgICAgIFNldHMgdGhlIGBhY2hWZW5kSURgIHRhZyAodmVuZG9yJ3MgZm91ci1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJhY3RlciBpZGVudGlmaWVyKS5cbiAgICAtZWwsIC0tZW1iZWQtbGV2ZWwgWzB8Mnw0fDhdICAgIFNldHMvY2xlYXJzIGBmc1R5cGVgIGJpdHMgMC0zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoRU1CRURESU5HX0xFVkVMKS5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMDogSW5zdGFsbGFibGUgZW1iZWRkaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyOiBSZXN0cmljdGVkIExpY2Vuc2UgZW1iZWRkaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0OiBQcmV2aWV3ICYgUHJpbnQgZW1iZWRkaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA4OiBFZGl0YWJsZSBlbWJlZGRpbmdcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VlOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzL3R5cG9ncmFwaHkvb3BlbnR5cGUvc3BlYy9vczIjZnN0eXBlXG4gICAgLW5zLCAtLW5vLXN1YnNldHRpbmcgLyAtYXMsIC0tYWxsb3ctc3Vic2V0dGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgYGZzVHlwZWAgYml0IDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChOT19TVUJTRVRUSU5HKS5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2hlbiB0aGlzIGJpdCBpcyBzZXQsIHRoZSBmb250IG1heSBub3QgYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YnNldHRlZCBwcmlvciB0byBlbWJlZGRpbmcuIE90aGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWJlZGRpbmcgcmVzdHJpY3Rpb25zIHNwZWNpZmllZCBpbiBiaXRzIDAtM1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIDkgYWxzbyBhcHBseS5cbiAgICAtYmVvLCAtLWJpdG1hcC1lbWJlZGRpbmctb25seSAvIC1uby1iZW8sIC0tbm8tYml0bWFwLWVtYmVkZGluZy1vbmx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyBgZnNUeXBlYCBiaXQgOVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKEJJVE1BUF9FTUJFRERJTkdfT05MWSkuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdoZW4gdGhpcyBiaXQgaXMgc2V0LCBvbmx5IGJpdG1hcHMgY29udGFpbmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiB0aGUgZm9udCBtYXkgYmUgZW1iZWRkZWQuIE5vIG91dGxpbmUgZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF5IGJlIGVtYmVkZGVkLiBJZiB0aGVyZSBhcmUgbm8gYml0bWFwc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlIGluIHRoZSBmb250LCB0aGVuIHRoZSBmb250IGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zaWRlcmVkIHVuZW1iZWRkYWJsZSBhbmQgdGhlIGVtYmVkZGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmljZXMgd2lsbCBmYWlsLiBPdGhlciBlbWJlZGRpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3RyaWN0aW9ucyBzcGVjaWZpZWQgaW4gYml0cyAwLTMgYW5kIDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsc28gYXBwbHkuXG4gICAgLS1yZWNhbGMtdW5pY29kZS1yYW5nZXMgICAgICAgICBSZWNhbGN1bGF0ZXMgdGhlIGB1bFVuaWNvZGVSYW5nZSpgIHZhbHVlcy5cbiAgICAtLXJlY2FsYy1jb2RlcGFnZS1yYW5nZXMgICAgICAgIFJlY2FsY3VsYXRlcyBgdWxDb2RlUGFnZVJhbmdlMWAgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgdWxDb2RlUGFnZVJhbmdlMmAgdmFsdWVzLlxuICAgIC0tcmVjYWxjLXgtaGVpZ2h0ICAgICAgICAgICAgICAgUmVjYWxjdWxhdGVzIGBzeEhlaWdodGAgdmFsdWUuXG4gICAgLS1yZWNhbGMtY2FwLWhlaWdodCAgICAgICAgICAgICBSZWNhbGN1bGF0ZXMgYHNDYXBIZWlnaHRgIHZhbHVlLlxuICAgIC0tcmVjYWxjLWl0YWxpYy1iaXRzICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgdGhlIGl0YWxpYyBiaXRzIGluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPUy8yLmZzU2VsZWN0aW9uIGFuZCBpbiBoZWFkLm1hY1N0eWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjb3JkaW5nIHRvIHRoZSBgaXRhbGljQW5nbGVgIHZhbHVlIGluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgcG9zdGAgdGFibGUuIElmIGBpdGFsaWNBbmdsZWAgdmFsdWUgaXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG90aGVyIHRoYW4gMC4wLCBpdGFsaWMgYml0cyB3aWxsIGJlIHNldC4gSWZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBpdGFsaWNBbmdsZWAgdmFsdWUgaXMgMC4wLCBpdGFsaWMgYml0cyB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjbGVhcmVkLlxuICAgIC0tcmVjYWxjLW1heC1jb250ZXh0ICAgICAgICAgICAgUmVjYWxjdWxhdGVzIGB1c01heENvbnRleHRgIHZhbHVlLlxuICAgIC0taW1wb3J0LXVuaWNvZGVzIEZJTEUgICAgICAgICAgSW1wb3J0cyBgdWxVbmljb2RlUmFuZ2VzKmAgZnJvbSBhIHNvdXJjZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICAgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbCBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdmVkIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQnkgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBwb3N0XG5cbkNvbW1hbmQgbGluZSBgcG9zdGAgdGFibGUgZWRpdG9yLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwb3N0IFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1pdGFsaWMtYW5nbGUgRkxPQVQgUkFOR0UgICAgICBTZXRzIHRoZSBgaXRhbGljQW5nbGVgIHZhbHVlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWy05MC4wPD14PD05MC4wXVxuICAgIC0tdWwtcG9zaXRpb24gSU5URUdFUiAgICAgICAgICAgU2V0cyB0aGUgYHVuZGVybGluZVBvc2l0aW9uYCB2YWx1ZS5cbiAgICAtLXVsLXRoaWNrbmVzcyBJTlRFR0VSICAgICAgICAgIFNldHMgdGhlIGB1bmRlcmxpbmVUaGlja25lc3NgIHZhbHVlLlxuICAgIC0tZml4ZWQtcGl0Y2ggLyAtLW5vLWZpeGVkLXBpdGNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgYGlzRml4ZWRQaXRjaGAgdmFsdWUuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZCB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgcHJpbnRcblxuUHJpbnRzIHZhcmlvdXMgZm9udCdzIGluZm9ybWF0aW9uLlxuXG4qKlVzYWdlKio6XG5mdGNsaSBwcmludCBbT1BUSU9OU10gQ09NTUFORCBbQVJHU10uLi5cblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4qKkNvbW1hbmRzKio6XG5cbiAgICBmb250LWluZm9cbiAgICBmb250LW5hbWVzXG4gICAgZm9udHMtbGlzdFxuICAgIGluc3RhbmNlc1xuICAgIG9zMi10YWJsZVxuXG4jIyMgZnRjbGkgcHJpbnQgZm9udC1pbmZvXG5cblByaW50cyBkZXRhaWxlZCBmb250IGluZm9ybWF0aW9uLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwcmludCBmb250LWluZm8gW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgcHJpbnQgZm9udC1uYW1lc1xuXG5QcmludHMgdGhlIGBuYW1lYCB0YWJsZSBhbmQsIGlmIHRoZSBmb250IGlzIENGRiwgdGhlIG5hbWVzIGluIHRoZSBgQ0ZGYCB0YWJsZSB0b3BEaWN0LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwcmludCBmb250LW5hbWVzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW1sLCAtLW1heC1saW5lcyBJTlRFR0VSICBNYXhpbXVtIG51bWJlciBvZiBsaW5lcyB0byBiZSBwcmludGVkIGZvciBlYWNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lcmVjb3JkXG4gICAgLW0sIC0tbWluaW1hbCAgICAgICAgICAgICBQcmludHMgYSBtaW5pbWFsIHNldCBvZiBuYW1lcmVjb3Jkcywgb21pdHRpbmcgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmVzIHdpdGggbmFtZUlEIG5vdCBpbiAxLCAyLCAzLCA0LCA1LCA2LCAxNiwgMTcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxOCwgIDIxLCAyMiwgMjVcbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgcHJpbnQgZm9udHMtbGlzdFxuXG5QcmludHMgYSBsaXN0IG9mIGZvbnRzIHdpdGggYmFzaWMgaW5mb3JtYXRpb24uXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHByaW50IGZvbnRzLWxpc3QgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgcHJpbnQgaW5zdGFuY2VzXG5cblByaW50cyBhIHRhYmxlIG9mIHRoZSBuYW1lZCBpbnN0YW5jZXMgb2YgYSB2YXJpYWJsZSBmb250LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwcmludCBpbnN0YW5jZXMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgcHJpbnQgb3MyLXRhYmxlXG5cblByaW50cyB0aGUgYE9TLzJgIHRhYmxlLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwcmludCBvczItdGFibGUgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSB1dGlsc1xuXG5NaXNjZWxsYW5lb3VzIHV0aWxpdGllcy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgW09QVElPTlNdIENPTU1BTkQgW0FSR1NdLi4uXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgYWRkLWRzaWdcbiAgICBjZmYtYXV0b2hpbnRcbiAgICBjZmYtY2hlY2stb3V0bGluZXNcbiAgICBjZmYtZGVoaW50XG4gICAgY2ZmLWRlc3ViclxuICAgIGNmZi1zdWJyXG4gICAgZm9udC1vcmdhbml6ZXJcbiAgICBmb250LXJlbmFtZXJcbiAgICBzY2FsZS11cG1cbiAgICBzZXQtcmV2aXNpb25cbiAgICB0dGYtYXV0b2hpbnRcbiAgICB0dGYtZGVoaW50XG4gICAgdHRmLXJlbW92ZS1vdmVybGFwc1xuXG4jIyMgZnRjbGkgdXRpbHMgYWRkLWRzaWdcblxuQWRkcyBhIGR1bW15IERTSUcgdGFibGUgdG8gZm9udHMsIHVubGVzcyB0aGUgdGFibGUgaXMgYWxyZWFkeSBwcmVzZW50LiBXT0ZGMiBmbGF2b3JlZCBmb250cyBhcmUgaWdub3JlZCwgc2luY2UgZW5jb2RlcnNcbm11c3QgcmVtb3ZlIHRoZSBEU0lHIHRhYmxlIGZyb20gd29mZjIgZm9udCBkYXRhLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBhZGQtZHNpZyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBjZmYtYXV0b2hpbnRcblxuQXV0b2hpbnRzIENGRiBmb250cyB3aXRoIHBzYXV0b2hpbnQuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIGNmZi1hdXRvaGludCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0tb3B0aW1pemUgLyAtLW5vLW9wdGltaXplICAgIE9wdGltaXplIHRoZSBoaW50ZWQgZm9udCBieSBzcGVjaWFsaXppbmcgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhcnN0cmluZ3MgYW5kIGFwcGx5aW5nIHN1YnJvdXRpbmVzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBjZmYtY2hlY2stb3V0bGluZXNcblxuUGVyZm9ybXMgYGFmZGtvLmNoZWNrb3V0bGluZXN1Zm9gIG91dGxpbmUgcXVhbGl0eSBjaGVja3MgYW5kIG92ZXJsYXBzIHJlbW92YWwuIFN1cHBvcnRzIENGRiBmb250cyBvbmx5LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBjZmYtY2hlY2stb3V0bGluZXMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgY2ZmLWRlaGludFxuXG5Ecm9wcyBoaW50aW5nIGZyb20gQ0ZGIGZvbnRzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBjZmYtZGVoaW50IFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIGNmZi1kZXN1YnJcblxuRGVzb3Vicm91dGluaXplIENGRiBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgY2ZmLWRlc3ViciBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBjZmYtc3ViclxuXG5TdWJyb3V0aW5pemUgQ0ZGIGZvbnRzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBjZmYtc3ViciBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBkZWwtdGFibGVcblxuRGVsZXRlcyB0aGUgdGFibGVzIHNwZWNpZmllZCBpbiB0aGUgdGFibGVfdGFnIGFyZ3VtZW50KHMpLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBkZWwtdGFibGUgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtdCwgLS10YWJsZS10YWcgVEVYVCAgICAgICAgICBUYWJsZVRhZyBvZiB0aGUgdGFibGUocykgdG8gZGVsZXRlLiBDYW4gYmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBlYXRlZCB0byBkZWxldGUgbXVsdGlwbGUgdGFibGVzIGF0IG9uY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVxdWlyZWRdXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIGZvbnQtb3JnYW5pemVyXG5cbk9yZ2FuaXplcyBmb250cyBieSBtb3ZpbmcgdGhlbSBpbnRvIGEgc3ViZGlyZWN0b3J5IG5hbWVkIGFmdGVyIHRoZSBmb250J3MgZmFtaWx5IG5hbWUsIGFuZCBldmVudHVhbGx5IGEgc3ViZGlyZWN0b3J5XG5uYW1lZCBhZnRlciB0aGUgZm9udCdzIGV4dGVuc2lvbiBhbmQgdmVyc2lvbi5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgZm9udC1vcmdhbml6ZXIgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLXJlbmFtZS1zb3VyY2UgWzF8MnwzfDR8NV0gIFJlbmFtZXMgdGhlIGZvbnQgZmlsZXMgYWNjb3JkaW5nIHRvIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZWQgc291cmNlIHN0cmluZyhzKS4gU2VlIGZ0Y2xpIHV0aWxzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXJlbmFtZXIuXG4gICAgLWV4dCwgLS1leHRlbnNpb24gICAgICAgICAgICBTb3J0cyBmb250cyBieSBleHRlbnNpb24uXG4gICAgLXZlciwgLS12ZXJzaW9uICAgICAgICAgICAgICBTb3J0cyBmb250cyBieSB2ZXJzaW9uLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBmb250LXJlbmFtZXJcblxuVGFrZXMgYSBwYXRoIHRvIGEgc2luZ2xlIGZvbnQgZmlsZSBvciBkaXJlY3Rvcnkgb2YgZm9udCBmaWxlcywgZXh0cmFjdHMgZWFjaCBmb250J3MgbWV0YWRhdGEgYWNjb3JkaW5nIHRvIHRoZVxuYC0tc291cmNlYCBwYXJhbWV0ZXIgcGFzc2VkIGJ5IHRoZSB1c2VyLCBhbmQgcmVuYW1lcyB0aGUgZm9udCBmaWxlIHRvIG1hdGNoIHRoZSBtZXRhZGF0YSwgYWRkaW5nIHRoZSBjb3JyZWN0XG5leHRlbnNpb24uXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIGZvbnQtcmVuYW1lciBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1zLCAtLXNvdXJjZSBbMXwyfDN8NHw1XSAgVGhlIHNvdXJjZSBzdHJpbmcocykgZnJvbSB3aGljaCB0byBleHRyYWN0IHRoZSBuZXdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUgbmFtZS4gRGVmYXVsdCBpcyAxIChGYW1pbHlOYW1lLVN0eWxlTmFtZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VkIGFsc28gYXMgZmFsbGJhY2sgbmFtZSB3aGVuIDQgb3IgNSBhcmUgcGFzc2VkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXQgdGhlIGZvbnQgaXMgVHJ1ZVR5cGVcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTogRmFtaWx5TmFtZS1TdHlsZU5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI6IFBvc3RTY3JpcHQgTmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzogRnVsbCBGb250IE5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ6IENGRiBUb3BEaWN0IGZvbnROYW1lcyAoQ0ZGIGZvbnRzIG9ubHkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1OiBDRkYgVG9wRGljdCBGdWxsTmFtZSAoQ0ZGIGZvbnRzIG9ubHkpXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuXG4jIyMgZnRjbGkgdXRpbHMgc2NhbGUtdXBtXG5cbkNoYW5nZSB0aGUgdW5pdHMtcGVyLUVNIG9mIGZvbnRzLlxuXG5IaW50aW5nIGlzIHJlbW92ZWQgZnJvbSBzY2FsZWQgVHJ1ZVR5cGUgZm9udHMgdG8gYXZvaWQgYmFkIHJlc3VsdHMuIFlvdSBtYXlcbmNvbnNpZGVyIHRvIHVzZSBgZnRjbGkgdXRpbHMgdHRmLWF1dG9oaW50YCB0byBoaW50IHRoZSBzY2FsZWQgZm9udHMuIEluXG5hZGRpdGlvbiwgQ0ZGIHNjYWxlZCBmb250cyBhcmUgbm90IHN1YnJvdXRpbml6ZWQuIFN1YnJvdXRpbmVzIGNhbiBiZSBhcHBsaWVkXG51c2luZyB0aGUgYGZ0Y2xpIHV0aWxzIGNmZi1zdWJyYCBjb21tYW5kLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBzY2FsZS11cG0gW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtdXBtIElOVEVHRVIgICAgICAgICAgICAgICAgICBOZXcgVVBNIHZhbHVlICBbZGVmYXVsdDogMTAwMF1cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgc2V0LXJldmlzaW9uXG5cblNldHMgYFtoZWFkXS5mb250UmV2aXNpb25gIGFuZCBgQ0ZGLmNmZi50b3BEaWN0SW5kZXhbMF1gLnZlcnNpb24gdmFsdWVzLlxuXG5PcHRpb25hbGx5LCBhbHNvIG5hbWVJRCAzIChVbmlxdWUgaWRlbnRpZmllcikgYW5kIG5hbWVJRCA1IChWZXJzaW9uIHN0cmluZylcbmNhbiBiZSByZWNhbGN1bGF0ZWQgYnkgdXNpbmcgLS11bmlxdWUtaWRlbnRpZmllciBhbmQgLS12ZXJzaW9uLXN0cmluZ1xub3B0aW9ucy4gRXZlbiBpZiBVbmlxdWUgaWRlbnRpZmllciBhbmQgVmVyc2lvbiBzdHJpbmcgc2hvdWxkIGJlIGNoYW5nZWRcbmFjY29yZGluZyB0byB0aGUgbmV3IHZlcnNpb24sIHRoZXkgYXJlIG9wdGlvbmFsIHRvIGxlYXZlIGNvbnRyb2wgdG8gdGhlXG51c2VyLCB3aG8gY291bGQgY2hvb3NlIHRvIHNldCB0aG9zZSBuYW1lcyBtYW51YWxseSB3aXRoIGBmdGNsaSBuYW1lIHNldC1uYW1lYFxub3IgYGZ0Y2xpIG5hbWUgZmluZCByZXBsYWNlYCBjb21tYW5kcy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgc2V0LXJldmlzaW9uIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW1ham9yIElOVEVHRVIgUkFOR0UgICAgICAgICAgTWFqb3IgdmVyc2lvbiAgWzA8PXg8PTk5OV1cbiAgICAtbWlub3IgSU5URUdFUiBSQU5HRSAgICAgICAgICBNaW5vciB2ZXJzaW9uICBbMDw9eDw9OTk5XVxuICAgIC11aSwgLS11bmlxdWUtaWRlbnRpZmllciAgICAgIFJlY2FsY3VsYXRlcyBuYW1lSUQgMyAoVW5pcXVlIGlkZW50aWZpZXIpXG4gICAgLXZzLCAtLXZlcnNpb24tc3RyaW5nICAgICAgICAgUmVjYWxjdWxhdGVzIG5hbWVJRCA1ICh2ZXJzaW9uIHN0cmluZylcbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG5cbiMjIyBmdGNsaSB1dGlscyB0dGYtYXV0b2hpbnRcblxuQXV0b2hpbnRzIFRydWVUeXBlIGZvbnRzIHVzaW5nIHR0ZmF1dG9oaW50LXB5LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyB0dGYtYXV0b2hpbnQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgdHRmLWRlaGludFxuXG5Ecm9wcyBoaW50aW5nIGZyb20gVHJ1ZVR5cGUgZm9udHMuXG5cblRoaXMgaXMgYSBDTEkgZm9yIGRlaGludGVyIGJ5IFNvdXJjZSBGb3VuZHJ5OiBodHRwczovL2dpdGh1Yi5jb20vc291cmNlLWZvdW5kcnkvZGVoaW50ZXJcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgdHRmLWRlaGludCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0ta2VlcC1jdmFyICAgICAgICAgICAgICAgICAgIGtlZXAgY3ZhciB0YWJsZVxuICAgIC0ta2VlcC1jdnQgICAgICAgICAgICAgICAgICAgIGtlZXAgY3Z0IHRhYmxlXG4gICAgLS1rZWVwLWZwZ20gICAgICAgICAgICAgICAgICAga2VlcCBmcGdtIHRhYmxlXG4gICAgLS1rZWVwLWhkbXggICAgICAgICAgICAgICAgICAga2VlcCBoZG14IHRhYmxlXG4gICAgLS1rZWVwLWx0c2ggICAgICAgICAgICAgICAgICAga2VlcCBMVFNIIHRhYmxlXG4gICAgLS1rZWVwLXByZXAgICAgICAgICAgICAgICAgICAga2VlcCBwcmVwIHRhYmxlXG4gICAgLS1rZWVwLXR0ZmEgICAgICAgICAgICAgICAgICAga2VlcCB0dGZhIHRhYmxlXG4gICAgLS1rZWVwLXZkbXggICAgICAgICAgICAgICAgICAga2VlcCB2ZG14IHRhYmxlXG4gICAgLS1rZWVwLWdseWYgICAgICAgICAgICAgICAgICAgZG8gbm90IG1vZGlmeSBnbHlmIHRhYmxlXG4gICAgLS1rZWVwLWdhc3AgICAgICAgICAgICAgICAgICAgZG8gbm90IG1vZGlmeSBnYXNwIHRhYmxlXG4gICAgLS1rZWVwLW1heHAgICAgICAgICAgICAgICAgICAgZG8gbm90IG1vZGlmeSBtYXhwIHRhYmxlXG4gICAgLS1rZWVwLWhlYWQgICAgICAgICAgICAgICAgICAgZG8gbm90IG1vZGlmeSBoZWFkIHRhYmxlXG4gICAgLS12ZXJib3NlICAgICAgICAgICAgICAgICAgICAgZGlzcGxheSBzdGFuZGFyZCBvdXRwdXRcbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgdHRmLXJlbW92ZS1vdmVybGFwc1xuXG5TaW1wbGlmeSBnbHlwaHMgaW4gVHJ1ZVR5cGUgZm9udHMgYnkgbWVyZ2luZyBvdmVybGFwcGluZyBjb250b3Vycy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgdHRmLXJlbW92ZS1vdmVybGFwcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0taWdub3JlLWVycm9ycyAgICAgICAgICAgICAgIElnbm9yZSBlcnJvcnMgd2hpbGUgcmVtb3Zpbmcgb3ZlcmxhcHMuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipUbyBTZXJnaWV2LiBNYXkgeW91IHJlc3QgaW4gcGVhY2UuKipcbiIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2Z0Q0xJL2Z0Q0xJIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImZvbnQtQ0xJIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9mdENMSS9mdENMSSI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvMC45LjIwLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImFmZGtvICg+PTMuOS42KSIs
ICAgICAgImZvbnR0b29scyAoPj00LjQwLjApIiw=
ICAgICAgImJlemllcnMgKD49MC41LjApIiw=
ICAgICAgImJyb3RsaSAoPj0xLjAuOSkiLA==
ICAgICAgImNsaWNrICg+PTguMS4zKSIs
ICAgICAgImNmZnN1YnIgKD49MC4yLjkucG9zdDEpIiw=
ICAgICAgImRlaGludGVyICg+PTQuMC4wKSIs
ICAgICAgInBhdGh2YWxpZGF0ZSAoPj0zLjAuMCkiLA==
ICAgICAgInJpY2ggKD49MTMuNC4yKSIs
ICAgICAgInNraWEtcGF0aG9wcyAoPj0wLjcuNCkiLA==
ICAgICAgInR0ZmF1dG9oaW50LXB5ICg+PTAuNS4xKSIs
ICAgICAgInpvcGZsaSAoPj0wLjIuMiki
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjgiLA==
ICAgICJzdW1tYXJ5IjogIkEgc2V0IG9mIGNvbW1hbmQgbGluZSB0b29scyB0byBlZGl0IGZvbnRzIHdpdGggRm9udFRvb2xzIiw=
ICAgICJ2ZXJzaW9uIjogIjAuOS4yMCIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODU1ODEzMSw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjkuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjNDQ4MjcyODBhOWE2NDU1MWFlZDlmZDBjZTE2NmFjMDQ1ZTQxOTJlOTU3MzU4MGQ3OGUwZWY3ZjQ0NjJlYWQ3Iiw=
ICAgICAgICAgICJtZDUiOiAiOTgwMThmZTE0MGQ1NTEwZWI3N2YwMzBkMmIzYTM2MDciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWI0ZGJlYzE1Y2FlZWQ1MGIxMGFmMDA2NzIyNzZiZDkyOTY3ODNkNGFkYjk1NWViY2YwZGFhYjI0OWJlNTgyYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ODAxOGZlMTQwZDU1MTBlYjc3ZjAzMGQyYjNhMzYwNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0MDAyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yM1QxMjoxNToxNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yM1QxMjoxNToxNi4zNTM1NzNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jNC80OC8yNzI4MGE5YTY0NTUxYWVkOWZkMGNlMTY2YWMwNDVlNDE5MmU5NTczNTgwZDc4ZTBlZjdmNDQ2MmVhZDcvZm9udC1DTEktMC45LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMDM2MzczNTJlYzIyNzRhMzEwYzRmODcwMDFhMjBhN2YyMjI1ZTRiNGFjNGJmOGE0ZGVlNTk3OTQwMGZmMmE4Iiw=
ICAgICAgICAgICJtZDUiOiAiYTZiYmJjM2M1YmMxMjQxODQ3YWQxMjZlOWFmNmU0ZDQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjY2YjYyNGMzMDc4NzkzNDMwYjgwMzA4NmI3ZGYzZWYzYmQzYmNkOGQ1MmI5MzM1ZTFiZjBmNmZhMTA2Yzc3OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNmJiYmMzYzViYzEyNDE4NDdhZDEyNmU5YWY2ZTRkNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0ODY1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yNFQxODoyNDowNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yNFQxODoyNDowNy4xMTI4NDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMC8zNi8zNzM1MmVjMjI3NGEzMTBjNGY4NzAwMWEyMGE3ZjIyMjVlNGI0YWM0YmY4YTRkZWU1OTc5NDAwZmYyYTgvZm9udC1DTEktMC45LjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0MDc5MDEzN2MxMGIzNDc1YTRiYjQ3MTZjMzgxNzdlM2M5Y2IyOGRjYmQ3ODQzYzg5ODYyZTYzNWMxYmMwYzljIiw=
ICAgICAgICAgICJtZDUiOiAiZjg5YTM3MzE1ZDNlZGEzNDBiNTM3YmEyYzZiY2E3NGYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTA2MWVlMTc2N2ViNjE5N2RhZGUyZmM4NmY5ZGRhZjcwZDFmZmVhOWJjMGY0ZWRkZjg2NGViNDhkNWViZDRhMyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmODlhMzczMTVkM2VkYTM0MGI1MzdiYTJjNmJjYTc0ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2MDQ3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MC42ODMzNDlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80MC83OS8wMTM3YzEwYjM0NzVhNGJiNDcxNmMzODE3N2UzYzljYjI4ZGNiZDc4NDNjODk4NjJlNjM1YzFiYzBjOWMvZm9udF9DTEktMC45LjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyMjJjMTg1N2M4ZmY1ZTdmODExMmFjOGZhNDc1M2Y0ZTYzN2I3NzA5M2M3NjA1OTAyNWNjMzNhNGJmMjgyOTA1Iiw=
ICAgICAgICAgICJtZDUiOiAiYmI2ZDllZTA2MWMxZDQ5MjFlMTVmYjE5ZjhhZWRkZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiM2I5YjM1MDNiYmMxNTE3ZWI3NTE0ZDBhZDU1NjM1NzBmZGU1ZmIxNTU3MTMxYjZlYTNiZDIyNWFmMzhiYjlhOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEwLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiYjZkOWVlMDYxYzFkNDkyMWUxNWZiMTlmOGFlZGRlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4ODY0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MS45OTI1NTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yMi8yYy8xODU3YzhmZjVlN2Y4MTEyYWM4ZmE0NzUzZjRlNjM3Yjc3MDkzYzc2MDU5MDI1Y2MzM2E0YmYyODI5MDUvZm9udC1DTEktMC45LjEwLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NGE3YmE0ODMzYTVmNmY0Y2EyNTA2Nzk1OGFjZGQxYmQ0NmJiNmZiNjhkZWUxMWNkNDQzMDZkYTk2NjdjYzk2Iiw=
ICAgICAgICAgICJtZDUiOiAiNmQ2NDE1MTYwMGI5YWFjOTk2ZjlkYjJiMzA2NDBmZGMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDM3YTZhYmM3YjhkZTc0ZjA2OTU5NTU3YTY4ZjkwNjU0ZDM3MDliY2NlNzdkOTdlMjRiNjI0MzVjNTFmZGZkMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2ZDY0MTUxNjAwYjlhYWM5OTZmOWRiMmIzMDY0MGZkYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2ODI3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wNVQwNjoyNTowNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wNVQwNjoyNTowNy40NDQ3ODJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81NC9hNy9iYTQ4MzNhNWY2ZjRjYTI1MDY3OTU4YWNkZDFiZDQ2YmI2ZmI2OGRlZTExY2Q0NDMwNmRhOTY2N2NjOTYvZm9udF9DTEktMC45LjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyYzI1MzY3MTI1YmIxNDgxZDJmMDFhYzE1OGExMjkwMzcxYzk5Yjc4ZDc0YjhjYjg5YzM1M2VkYjg0MmZhZWI3Iiw=
ICAgICAgICAgICJtZDUiOiAiMTkxN2Y0MjQyOTc2NTZkODkwZWEwNjNlNzAyOGE1NjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2I5ZTVmYjdhYzgxZDUxY2IxMGZjNmI0NmZjODgzNzNjZDY0NDczNjNiY2U3MzlmMTIyMTZiOThiNGI3NDVmZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjExLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxOTE3ZjQyNDI5NzY1NmQ4OTBlYTA2M2U3MDI4YTU2NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk5NjQwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wNVQwNjoyNTowOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wNVQwNjoyNTowOS4zNTkxMjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yYy8yNS8zNjcxMjViYjE0ODFkMmYwMWFjMTU4YTEyOTAzNzFjOTliNzhkNzRiOGNiODljMzUzZWRiODQyZmFlYjcvZm9udC1DTEktMC45LjExLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzY2E3ZDFhYTVjMTk0OGFlMDBmMGUxODA3YTg1MmJhNmIxNTEzNGM5NjhiM2U3MjVmYzI2NWZlYjc0OGI3Yjk1Iiw=
ICAgICAgICAgICJtZDUiOiAiODhhY2JhZDczMzcwYmIwZDIyN2RlOGE0ODFlNDhhOTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWVhMDQyYzQ4YTI4MzQ3Yzg3OTYyNzczZGQ5MjRjZTJiMzEzYWU2OWFlNzdkNWRjM2Q3NmQxOTBmZGVmZGQ0ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4OGFjYmFkNzMzNzBiYjBkMjI3ZGU4YTQ4MWU0OGE5NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg4MzU0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wOVQwNjoxODo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wOVQwNjoxODo0Ny42OTQzNjdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYy9hNy9kMWFhNWMxOTQ4YWUwMGYwZTE4MDdhODUyYmE2YjE1MTM0Yzk2OGIzZTcyNWZjMjY1ZmViNzQ4YjdiOTUvZm9udF9DTEktMC45LjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZWM1MjU1ZmVlZjY5NmE0Njg5NzQxZmQzYTlmNzkyY2IwZGE3MDY4OTEzOWY5OTk0MTJjZWNjYWJmZTBkMmExIiw=
ICAgICAgICAgICJtZDUiOiAiNDcyZWI4NWI4YTk2OWY0Y2NkMWRiMGYxNzI2NDBhZTMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTAxYmVjYzY4NmRkNDIxODIxNmU1N2Y3NjNmMTA5YjExODAzOTJiYWI2YzEwYjgyZmYzMmM4Mzk4NzM4NzYwZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEyLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0NzJlYjg1YjhhOTY5ZjRjY2QxZGIwZjE3MjY0MGFlMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTIzOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wOVQwNjoxODo1MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wOVQwNjoxODo1MC42NDgyMDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZS9jNS8yNTVmZWVmNjk2YTQ2ODk3NDFmZDNhOWY3OTJjYjBkYTcwNjg5MTM5Zjk5OTQxMmNlY2NhYmZlMGQyYTEvZm9udC1DTEktMC45LjEyLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTMiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0NDUzNWEzMTBjNjM2MjQ2NjBkNTJlN2FjZmIyYWU3YWIwY2NmNGYxM2MyMmQ5MjhkYTI1Y2ZlZjJkZWVlNWU1Iiw=
ICAgICAgICAgICJtZDUiOiAiYmE5MGFkYTU0ODAzZjBkYzI5NGU1YzMyMzkzMDljYzIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTg4YWQ1YjZmM2YzZTEzODc1MThkYjllMjk3MmM2ZWFlYzNiOTRjYjU4ZTg0NTVkOTM0NzY2M2I2MTUxYjI0YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiYTkwYWRhNTQ4MDNmMGRjMjk0ZTVjMzIzOTMwOWNjMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkwNTkxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQwNjowMToyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQwNjowMToyMy42MDMzNzhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80NC81My81YTMxMGM2MzYyNDY2MGQ1MmU3YWNmYjJhZTdhYjBjY2Y0ZjEzYzIyZDkyOGRhMjVjZmVmMmRlZWU1ZTUvZm9udF9DTEktMC45LjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ZTA5MDVlZDI5ZTJiMGEyY2VjMGRmNmRhNjg2NjU0NDgwNjBhODdmYmVkMDliNjJlMjBlZWFjNGM1ODlhNDMyIiw=
ICAgICAgICAgICJtZDUiOiAiOTkwZWYyMDc5ZDRiZmE5ZDIwMDg4ZjhmZmM0NzY3ZDIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODFhYWRmYTcxYmQ2MTVhOGJmYmJkOTFhZWY0YTgyNTJlZWRmYWNiMDJmNTNlY2RkMDlmNWI5NjlmODk0OTA3ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEzLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5OTBlZjIwNzlkNGJmYTlkMjAwODhmOGZmYzQ3NjdkMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTM5Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQwNjowMToyNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQwNjowMToyNS4zNzkzNzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83ZS8wOS8wNWVkMjllMmIwYTJjZWMwZGY2ZGE2ODY2NTQ0ODA2MGE4N2ZiZWQwOWI2MmUyMGVlYWM0YzU4OWE0MzIvZm9udC1DTEktMC45LjEzLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTQiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZGI1NzY2MjRmMzA3YzgyZGRkZjI3MGVmYjRiMjMzYmVlNmY3MDRmZGY4YjgzMjNhZjA4ZjEzOTJkY2RiZDQ4Iiw=
ICAgICAgICAgICJtZDUiOiAiY2NjY2U1MWNkMjhiYzllNDExM2U1NmE3ZmFmNTI0MGQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzhlODM5Y2QyYzY4ZDhhY2UyYjAxODAxMDMzY2FmOTZjOTk3NGZlMzIzMzFlYTI4MGIwNGUxYTQwYWI3YTU2YiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjY2NjZTUxY2QyOGJjOWU0MTEzZTU2YTdmYWY1MjQwZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkxMDMwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNC44OTc0MjFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZC9iNS83NjYyNGYzMDdjODJkZGRmMjcwZWZiNGIyMzNiZWU2ZjcwNGZkZjhiODMyM2FmMDhmMTM5MmRjZGJkNDgvZm9udF9DTEktMC45LjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1MzA0ZTMzMjAwZmY3Y2VhMzQ5ZjA0ZjRiYTJjNDk2YzdlNjE3YTNmZmZhYTUwMGJjMzQ2NWM0NGQwMDc3MTRkIiw=
ICAgICAgICAgICJtZDUiOiAiMTUzYzliYmY5NjA2Mzk3Mzg2NTI0NzczN2NhMmQyMDMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTNmYjMxODUxYjZlY2YzNmE3OTAyNzg0NzkzNjU0NThhMjc0MTE0ZDRkNmY0YzAxZTU5Y2IyOGYwMTdkMTRlYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE0LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxNTNjOWJiZjk2MDYzOTczODY1MjQ3NzM3Y2EyZDIwMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTg2OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNi45MjU2MjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81My8wNC9lMzMyMDBmZjdjZWEzNDlmMDRmNGJhMmM0OTZjN2U2MTdhM2ZmZmFhNTAwYmMzNDY1YzQ0ZDAwNzcxNGQvZm9udC1DTEktMC45LjE0LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTUiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkOWZhMWM1NDhiNWE4ODYxZjk4ODY2ZDRjNzVkZjZmMjg5MmVkOTg2M2MzODZiOWUxNzY0NjA2MjY2NDUzZDkzIiw=
ICAgICAgICAgICJtZDUiOiAiYTQzM2NhMzkyYjQ0OWQxMThhMGI1N2ZjNWY3M2QxNzEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzUzMjgzYWFkZjhlNTI5ZDM0ODYwYTgwMTRiODAxMDY4NjE2ZjhlMjVlNDIwZWY5ZjE2YzIxMmVjODRkMjg4YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNDMzY2EzOTJiNDQ5ZDExOGEwYjU3ZmM1ZjczZDE3MSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkxMTY4LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxMzowMTo0NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxMzowMTo0NS45Njk4MDdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kOS9mYS8xYzU0OGI1YTg4NjFmOTg4NjZkNGM3NWRmNmYyODkyZWQ5ODYzYzM4NmI5ZTE3NjQ2MDYyNjY0NTNkOTMvZm9udF9DTEktMC45LjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5ZDZkMTVkOWIxNzQxNzIyYmEzN2YzZjI3YjkwNWI4NzlkZGY1OGQ4YTI0M2FhMWY4ZWM0MmY5NTAyMTllZjVjIiw=
ICAgICAgICAgICJtZDUiOiAiOGU0OWIyOGZhNmM5NWZkZjc3YTMzNmFhYjJjMjkyZjkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWQ0ZjNlYjIxOTlhOWExYzUzNDZkOTIzMTRjOWUxNTg2NjIyMmJkZTcxYzI2M2M0NmYyZWM5NGE4NWZmMTBhOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE1LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4ZTQ5YjI4ZmE2Yzk1ZmRmNzdhMzM2YWFiMmMyOTJmOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTk3Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxMzowMTo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxMzowMTo0Ny44MDM3NzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85ZC82ZC8xNWQ5YjE3NDE3MjJiYTM3ZjNmMjdiOTA1Yjg3OWRkZjU4ZDhhMjQzYWExZjhlYzQyZjk1MDIxOWVmNWMvZm9udC1DTEktMC45LjE1LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTYiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2OTZjYzNkZTllMzk3ZDg2ZTlkNWNhNDEyZWQ5ODZhMjk0ZTVmZmQ3NDJkMzg0MDcxMjUzYTNmZDczNjRkODkzIiw=
ICAgICAgICAgICJtZDUiOiAiZTI1YzlkM2U0M2QxMDAyMjZlMThkOWVjYjM4ZDFjZTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiN2ZhMWM0YmEzOTVmZjRiNDRhNjJlMzRhMjUzMGU4YWQ1NWNhYTc0ZTk1ZmMyZGNlNzhmMTZlMzc5ODc0ZjkwMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlMjVjOWQzZTQzZDEwMDIyNmUxOGQ5ZWNiMzhkMWNlNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkyMTkyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NS4wNTE3MDZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82OS82Yy9jM2RlOWUzOTdkODZlOWQ1Y2E0MTJlZDk4NmEyOTRlNWZmZDc0MmQzODQwNzEyNTNhM2ZkNzM2NGQ4OTMvZm9udF9DTEktMC45LjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkZjM2MTJmMTY1MDc1ZGEyYzdjMTdkYzQ4M2E5OTI0NjQ4Nzg0OTA5M2VlOGRiMWFhOWJjZGFhZjQ4MzMxY2VmIiw=
ICAgICAgICAgICJtZDUiOiAiZWJmZjQ1ZmU2ZGM4Mzc5MTQzMzUyZTFkNzgwNWFkZDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDg0MzVmZTA3NTA5YWM3ZjIzYmNhNWU0YWZjYTlkNzdiMmQ0MmRjZDUwMDBmN2U3NjBkZTI2MjRlYmVmMDQ2MyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE2LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlYmZmNDVmZTZkYzgzNzkxNDMzNTJlMWQ3ODA1YWRkOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMzQ5OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yOFQxMDoyMjo1Ni45OTQyMTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kZi8zNi8xMmYxNjUwNzVkYTJjN2MxN2RjNDgzYTk5MjQ2NDg3ODQ5MDkzZWU4ZGIxYWE5YmNkYWFmNDgzMzFjZWYvZm9udC1DTEktMC45LjE2LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTciOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5N2U5ZWM2NWE3YTY4MTk0NTdjYzE5YWNjYmRkY2JmOWY5YTA1NDBmMzAzNDYwOTA5YmVkYTNlMDZmNmE2NDY1Iiw=
ICAgICAgICAgICJtZDUiOiAiY2MxNmRkMDUzZDNhZDI1Njc3OGJkMTczNTAyMmI4ZGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTlhYjQyNzllNWRkYTg0ZTA5M2JhZWY2MmE5Zjk5YWFlZmY2MWYyMTNhMzFhNDM2MjA3ZDIxYTYwOTdjZWRkOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYzE2ZGQwNTNkM2FkMjU2Nzc4YmQxNzM1MDIyYjhkZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDkyMjI5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoyMDoxOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoyMDoxOC45Mzk0NjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Ny9lOS9lYzY1YTdhNjgxOTQ1N2NjMTlhY2NiZGRjYmY5ZjlhMDU0MGYzMDM0NjA5MDliZWRhM2UwNmY2YTY0NjUvZm9udF9DTEktMC45LjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNjJlNzA2YjYzMTFkMDAwMWU1YTk4Nzc0ZjU5ZTkyNzE4NDdlY2M3NjUyMzBhZTllMWEwZmY0MzM1Mzc5MzMzIiw=
ICAgICAgICAgICJtZDUiOiAiYTRmNDdmZTM0YzgyMjIyNTlhMjI0ODAyOGIxZDU4YWUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGJhZGQ1NjdiODM0NjVmMDFmMDMxODcyMzBmY2MwNzkxOWNiOGY2OGZjNTljZWM3OWM1ZTdiMGFiODE2ZDdmOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE3LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNGY0N2ZlMzRjODIyMjI1OWEyMjQ4MDI4YjFkNThhZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwMzUwOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoyMDoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoyMDoyNi4yMDkzMTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNi8yZS83MDZiNjMxMWQwMDAxZTVhOTg3NzRmNTllOTI3MTg0N2VjYzc2NTIzMGFlOWUxYTBmZjQzMzUzNzkzMzMvZm9udC1DTEktMC45LjE3LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTgiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjZjg4NDcwMzQwN2RhMDA0MDE2MDcyYjZkNGFiZWY2YzY0ZjIyYzdhZWE2YWIyNjBjMmQ4NzViMDQ2NzM0MTRmIiw=
ICAgICAgICAgICJtZDUiOiAiYWE0ZmFlODcyMzFiNTkzYzY4ZmViYzUwNTZmYTIzMjkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzY4MzYzMGQ2MjYyZDgwMTcwYWIwZDFmMGZjZDAzNGYyZjkyMGIyZmU5NTRiMDNjNjViYTg2OWJhYjFjZjU5ZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhYTRmYWU4NzIzMWI1OTNjNjhmZWJjNTA1NmZhMjMyOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDk1MjA3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNlQxMzoyMTo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNlQxMzoyMTo1My41Nzk0NjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jZi84OC80NzAzNDA3ZGEwMDQwMTYwNzJiNmQ0YWJlZjZjNjRmMjJjN2FlYTZhYjI2MGMyZDg3NWIwNDY3MzQxNGYvZm9udF9DTEktMC45LjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogdHJ1ZSw=
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzY2E1YmU4MzNlMDdlYjVlNTU2YjFjNzQ3MWNkY2FhMTZjMmQwZjQzN2FiZDAwN2FlNWI2YzI3Zjg3NTZmMmY4Iiw=
ICAgICAgICAgICJtZDUiOiAiYzM3OTdkMTllMWU0NzFlNjMxM2QzM2E3OGI1MTQ1NmQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmJiNWNiODZlM2UwYjEwOWQ0NDc5ZjBjMjQwNzA4OWU4N2VhYTRhNTQ3OTNlOGZhYTI5YmRlYzRlNGNhNWFhYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE4LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjMzc5N2QxOWUxZTQ3MWU2MzEzZDMzYTc4YjUxNDU2ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwNjQ1MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNlQxMzoyMTo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNlQxMzoyMTo1NS4zODM0NzdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYy9hNS9iZTgzM2UwN2ViNWU1NTZiMWM3NDcxY2RjYWExNmMyZDBmNDM3YWJkMDA3YWU1YjZjMjdmODc1NmYyZjgvZm9udC1DTEktMC45LjE4LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogdHJ1ZSw=
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTkuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZGEzOGY1ZjVmOTVhN2RhYmM5OWQxYmMzYWZjMzFmODE4YzNiMTExYzYwYTQ3ZTQ4OWVmMGIxZTExNDk1NTNkIiw=
ICAgICAgICAgICJtZDUiOiAiMGRjZjM5MjNmYzg4NWM3M2M0NDY2ZTIyODZkN2Y1ZjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmI1OWVkZWY1N2ZjNDg4NTE5NjkyZGM0MGE5ZDUwMGM0NWYxMzI5MTMyMzEwOGVhNWQ0ZGQxNmZmZDgzZmQ2MCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE5LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwZGNmMzkyM2ZjODg1YzczYzQ0NjZlMjI4NmQ3ZjVmNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDk2MDc2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wOFQxOTo0MTo1OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wOFQxOTo0MTo1OC44MDE2NDhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZC9hMy84ZjVmNWY5NWE3ZGFiYzk5ZDFiYzNhZmMzMWY4MThjM2IxMTFjNjBhNDdlNDg5ZWYwYjFlMTE0OTU1M2QvZm9udF9DTEktMC45LjE5LjEtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkNjcwYmM1NWNkNTgxYjQ5NTZiZTUwMzAzMjBhYzIwYzBkN2NjNjk2MzZiODI1Y2IxMjVlMDllMmMwOWEzOTFmIiw=
ICAgICAgICAgICJtZDUiOiAiMDllZDI2ZDk3YjA4YTZmZGJjOTI5MjA3YmI4MTU2ZTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzllZmZmMjNhN2ZlYzI3ODg3OWMyNWQ1YzYyZTY4M2M4ZGU2ZTYwMGY2MzBkOWYzOTk3YTU4Yzk3ZjNmYmQyZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE5LjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwOWVkMjZkOTdiMDhhNmZkYmM5MjkyMDdiYjgxNTZlMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwNjkyOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wOFQxOTo0MjowMCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wOFQxOTo0MjowMC44MjM5NDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kNi83MC9iYzU1Y2Q1ODFiNDk1NmJlNTAzMDMyMGFjMjBjMGQ3Y2M2OTYzNmI4MjVjYjEyNWUwOWUyYzA5YTM5MWYvZm9udC1DTEktMC45LjE5LjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMi4xIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiOTNmMjVkYWI4MzIxYTYyY2NlM2NkZmViMWIyMTdlOGI1NDcwOTFjOGRlMzQ1Y2IyNzdkMTRlMjhlMmJlZTlkIiw=
ICAgICAgICAgICJtZDUiOiAiNzA4ZDRhNTgyNDljZTNiN2Q1NGMzYjIyYWRjMDc0NjQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGQwYTVmNTYzYjhhZTA5ZDY4OTUyMmU0N2UyYzA3NjU4ODlkMzQ3NGYyNThjZjAxODUwNDA4ZjNjYmRkYzU4OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjIuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3MDhkNGE1ODI0OWNlM2I3ZDU0YzNiMjJhZGMwNzQ2NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0NDc2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yNVQwOToyMjoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yNVQwOToyMjoyNi42NjQ4MjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iOS8zZi8yNWRhYjgzMjFhNjJjY2UzY2RmZWIxYjIxN2U4YjU0NzA5MWM4ZGUzNDVjYjI3N2QxNGUyOGUyYmVlOWQvZm9udC1DTEktMC45LjIuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5MzU2ZjhjZDZiN2ZhODYyZmY5OWYyM2Q2YTFkNGZiOGUyYjZlOTAwZTE4ZDc2MDVkYzI3YTRkMjA5NzlkNDUwIiw=
ICAgICAgICAgICJtZDUiOiAiMzY0Y2I3ZjZhZDI3ZWViYzQ4Yzg3NWIwOWU5YTUzMWIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiM2JmNzhkNTRhMTQxMDJkZWVlODcwZTU4OGJlYmE2YjRlZDk1YmVkNDI4MTBkNzQ4YjUxZjcxZjM0MWJjZTVhZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjIwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzNjRjYjdmNmFkMjdlZWJjNDhjODc1YjA5ZTlhNTMxYiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDk2NDE2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0xOVQwOTozNzoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0xOVQwOTozNzoyNi4wMzEwNjlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85My81Ni9mOGNkNmI3ZmE4NjJmZjk5ZjIzZDZhMWQ0ZmI4ZTJiNmU5MDBlMThkNzYwNWRjMjdhNGQyMDk3OWQ0NTAvZm9udF9DTEktMC45LjIwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyNzJkNWFjMmVmOTcyNDAyYWIyYjhlZTEzNTVjYjMyZDY1NzY0MDRhODJlZTUzNTc2YmMyZTE5OGI0YWYxOWZhIiw=
ICAgICAgICAgICJtZDUiOiAiYmI0MzNmYTJmYmIwMDA3YTUxNTNmN2UwMTc5NGE3MTEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOGEyOTcxMDZlMWFkNWE0NjM5NTg0N2Y3MTVhMTkwNTYxOGE1OGQxNWNjODY3MWFjZDlhOTlkMjI5ZWZlY2FhNCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjIwLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiYjQzM2ZhMmZiYjAwMDdhNTE1M2Y3ZTAxNzk0YTcxMSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwNzI0OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0xOVQwOTozNzozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0xOVQwOTozNzozNC4wNDU3MzRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yNy8yZC81YWMyZWY5NzI0MDJhYjJiOGVlMTM1NWNiMzJkNjU3NjQwNGE4MmVlNTM1NzZiYzJlMTk4YjRhZjE5ZmEvZm9udC1DTEktMC45LjIwLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiZWMxOTJiYzE4NzM2MWRhZGU2ZTlhZTRhNDc0MzY4ZmM1MWY5NjJiMzJiOWRlYWFjODQzZjcyOTNhN2U1MmE0Iiw=
ICAgICAgICAgICJtZDUiOiAiNzk4MTA0OTYyZWVkOWE3ZWQyNTM1OGM2MzdlZmQ1ZTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjg4ZWZkNzkyNjA1YzMyN2FmYjAwZGM1YjIzNWQ0NWI3Y2UxMzY0MWY5NTFkYjZlN2Q5YjhiNDFlNWQ5OGQwMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjMudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3OTgxMDQ5NjJlZWQ5YTdlZDI1MzU4YzYzN2VmZDVlNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk1MjExLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yOFQxNTo1MDo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yOFQxNTo1MDo1Ni42NzQ5MDhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iZS9jMS85MmJjMTg3MzYxZGFkZTZlOWFlNGE0NzQzNjhmYzUxZjk2MmIzMmI5ZGVhYWM4NDNmNzI5M2E3ZTUyYTQvZm9udC1DTEktMC45LjMudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1Njc4OTI1Yjk4MzI2ZDhiYWEzMzMwZDdjNmEwNzBkODNiOTQyZjMyYTBlYTJiMWRkY2NkMDliZTJhY2I1N2FmIiw=
ICAgICAgICAgICJtZDUiOiAiMWU1MzgxZWFmMzI1YWRjNmQ2MThkMWMyYTE1NTQyODMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjgyMGY0YTBiYzRmMmRmM2IyODEzMTBjMDJlM2RhMzg0M2JhMTRmZTZhNzJlYTg3ZjhjODQ0N2FiNDRmODQzZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjQudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxZTUzODFlYWYzMjVhZGM2ZDYxOGQxYzJhMTU1NDI4MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk2MzYwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wMlQxMTo0NDozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wMlQxMTo0NDozNC40Mjg5OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81Ni83OC85MjViOTgzMjZkOGJhYTMzMzBkN2M2YTA3MGQ4M2I5NDJmMzJhMGVhMmIxZGRjY2QwOWJlMmFjYjU3YWYvZm9udC1DTEktMC45LjQudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4YzQzYjBjMTI2YzhkYzI2YWE2NmIyZGQ2MWNkZjY2NTc1YmJmYTA4ZmIzM2RlMDRmOGQ1MjQ2ZTAxNTc1MzQwIiw=
ICAgICAgICAgICJtZDUiOiAiMTg0YTQ0ZWMwN2M1YTA4MjhiNzEzOWQ3MTk4MWNiOGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzFjYWFkOGZlODE3MGY0NmFhZDVhNzVkZDliZTUzMDY2NmVlMDA2OGRkMjdlOGFhMzc0ZGIzMTExMmZmYzg3MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjUudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxODRhNDRlYzA3YzVhMDgyOGI3MTM5ZDcxOTgxY2I4YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk3NjU3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wM1QwOTowMDozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wM1QwOTowMDozMS41NjI1ODFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yy80My9iMGMxMjZjOGRjMjZhYTY2YjJkZDYxY2RmNjY1NzViYmZhMDhmYjMzZGUwNGY4ZDUyNDZlMDE1NzUzNDAvZm9udC1DTEktMC45LjUudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZTdmODcwYzRmY2VlN2FiYzM2Y2UyNGMzNzk1NTQ1YzY3YThkMzNiMjg4ZDFiMjYyNGM5Yzg0NmI1MzA0YTUyIiw=
ICAgICAgICAgICJtZDUiOiAiZjA4MzQzMWM0YTdiY2VkMjA1OGY4YjkzOTI1NDU1M2IiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWI2YTVjMzNkODQwNzU4YTMxMDNiMjZmYWNlNDEwNTJkNzYzY2M5NTkwMGFiM2Y4MjM3YTQ1NDFkM2ViNjk1OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjYtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMDgzNDMxYzRhN2JjZWQyMDU4ZjhiOTM5MjU0NTUzYiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg0NDA3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wNVQwNjoxNDo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wNVQwNjoxNDo1Ny42Mzk2MjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZS83Zi84NzBjNGZjZWU3YWJjMzZjZTI0YzM3OTU1NDVjNjdhOGQzM2IyODhkMWIyNjI0YzljODQ2YjUzMDRhNTIvZm9udF9DTEktMC45LjYtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkNzM1YTkxMjFmYjBmMzI1ZjhmYmEyZWZhNzlkYjRkNmZkZWExMWZhODQ1Y2IxZDhhZTU0YjkxYThmZGNjMzljIiw=
ICAgICAgICAgICJtZDUiOiAiZTRmZjRlZjU0NTZlNjIxNzlhZDBiMmMwYjU0ZGFlYTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTNiMWUzODBiM2ZhYmU0NDE0OTMzZThiZWI2ODJmNGQyYjlkMWQyNGM1NTdlN2NlMzJjZmVmMTMzOGZmNDVmMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjYudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlNGZmNGVmNTQ1NmU2MjE3OWFkMGIyYzBiNTRkYWVhNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4MzAwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wNVQwNjoxNDo1OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wNVQwNjoxNDo1OC45MjU4NTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kNy8zNS9hOTEyMWZiMGYzMjVmOGZiYTJlZmE3OWRiNGQ2ZmRlYTExZmE4NDVjYjFkOGFlNTRiOTFhOGZkY2MzOWMvZm9udC1DTEktMC45LjYudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxYjJmNGJkMzM4ZWIwMTQ4ZDBkNGRmY2Q1MTAwMmI1NzdjYTFiNmNlYjdhYTgwODc5YmVkNDcyODdhNzc4MDdkIiw=
ICAgICAgICAgICJtZDUiOiAiYmVmMTE4YmVhMmVhNmIwNzJmY2JjMzE2ZGM2NTQwYzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTMzY2IzNjMyN2VmOGFmZGE2MDUwOTFmOTZhOTJmNTczY2YwMWRkOWMyN2QwMmE0NDlmMGU0MWM5ZDI2OWI5YSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjctcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiZWYxMThiZWEyZWE2YjA3MmZjYmMzMTZkYzY1NDBjMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg0NDk4LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xMlQxMDo1MjozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xMlQxMDo1MjozNC41NDY1MTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xYi8yZi80YmQzMzhlYjAxNDhkMGQ0ZGZjZDUxMDAyYjU3N2NhMWI2Y2ViN2FhODA4NzliZWQ0NzI4N2E3NzgwN2QvZm9udF9DTEktMC45LjctcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMzYwMzIzM2U1ZGNhZjUwMjQ3ZTEwNDNlMzI5MTJjZTIyMjM5N2E2NGUyNzVhMzkzNjZmYzk4ZjNkYWYwN2U2Iiw=
ICAgICAgICAgICJtZDUiOiAiMTg3NzhjYTZlZDRhZWNlMDI3OTg4NWMwYjc0Yzg3NDYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjJjMzZiNTY4MzE1NWI0NWUzMTBmMTdhY2IxNDlkNzUxYjcyNzE1MGFlNGYxNzM1YmQ5ZTQyZTMxZmIzNTQ3OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjcudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxODc3OGNhNmVkNGFlY2UwMjc5ODg1YzBiNzRjODc0NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4MzY0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xMlQxMDo1MjozNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xMlQxMDo1MjozNS43ODM4OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMy82MC8zMjMzZTVkY2FmNTAyNDdlMTA0M2UzMjkxMmNlMjIyMzk3YTY0ZTI3NWEzOTM2NmZjOThmM2RhZjA3ZTYvZm9udC1DTEktMC45LjcudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuOCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4MzQ1NTQxMjQwNGY3YjQzNmUyYzc3ZDk5ZDkyOWVmNDU1YzJkOGMxNDlkNGYyMmRjMWI4YTRjN2JkODgyODYyIiw=
ICAgICAgICAgICJtZDUiOiAiYzU3NjA0MTY0N2RiMDUyZjMxNTA5YzY3YWIzNDViZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjQ2M2JmNTA3N2Y0MDcyN2MwYzllODI3NTE3YjJjMzc5MGMwZDE5YTgwNWE0NGMzYTVlYzliOWU5Zjc4OTU3MyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjgtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjNTc2MDQxNjQ3ZGIwNTJmMzE1MDljNjdhYjM0NWJlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg1ODYxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xN1QwNToxODoyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xN1QwNToxODoyMS43MjMzMDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84My80NS81NDEyNDA0ZjdiNDM2ZTJjNzdkOTlkOTI5ZWY0NTVjMmQ4YzE0OWQ0ZjIyZGMxYjhhNGM3YmQ4ODI4NjIvZm9udF9DTEktMC45LjgtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNjYwOWE0ZTU2Mzc5NGRhYTkzMTM0ZDhjNTQyN2RmNmJmM2EzZDRiNTJiMWQyZjY0MDczOGI2Y2Y3YjAzZWE2Iiw=
ICAgICAgICAgICJtZDUiOiAiNTlkMzI1ODlkNzk3YjRmYWY0NGQ1MmVlNjlkNmRhOTIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWRiODU2ODhkYmExMTc1ZWNlZWQzYTkwYTJjNTE0MDM4MDkwZGI1OWFmOThhODE1ZjUzMjExZjIxNjkzZDlmMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjgudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1OWQzMjU4OWQ3OTdiNGZhZjQ0ZDUyZWU2OWQ2ZGE5MiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4OTI0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xN1QwNToxODoyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xN1QwNToxODoyMy4xMDYxNjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNi82MC85YTRlNTYzNzk0ZGFhOTMxMzRkOGM1NDI3ZGY2YmYzYTNkNGI1MmIxZDJmNjQwNzM4YjZjZjdiMDNlYTYvZm9udC1DTEktMC45LjgudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuOSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkZTdhOTA3MzQ0MzRkMWIxYjI0NjIxMjljMzQzMzM3ZGI4YWE1YjZjY2YyMzljODM0MGMwNDY1YzYxMjhjYTE2Iiw=
ICAgICAgICAgICJtZDUiOiAiYjRkNGJjYjA0NWM0N2JiYjNiMGU2N2Q3ZjMyNWMxOTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzZiZDYyMDI3YzVmNGJkZGM4YTUzNWVkODBlNmI0NzUxNTVmNGEzMjRjZWIwZWJhZWEyNzk3NTAyZTU1MmVmOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjktcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiNGQ0YmNiMDQ1YzQ3YmJiM2IwZTY3ZDdmMzI1YzE5NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2MDgwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xOVQxNjo0MDo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xOVQxNjo0MDo1My4xNjk1NTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kZS83YS85MDczNDQzNGQxYjFiMjQ2MjEyOWMzNDMzMzdkYjhhYTViNmNjZjIzOWM4MzQwYzA0NjVjNjEyOGNhMTYvZm9udF9DTEktMC45LjktcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMmEyOTJkODI3OWNmMGVjNzkwZDAxZTU1YTBiMDAyNGZlNTE4MTI4ZTE3MjhkNDJkZmJiYjU1ZTE3ZjhhNGM5Iiw=
ICAgICAgICAgICJtZDUiOiAiZWYyNTE5MTUwYmY0YzU3Y2U3MWJlM2RkMjg1MzBkMDIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODg1MmNiOGU4ZGE5YmUwNmFkYjQ4N2M5MjgwN2ZkNjlmZWZjYjVjNzkzNmM2NDQ4MWI2ZTNmNDlkNzdiMDM0ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjkudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlZjI1MTkxNTBiZjRjNTdjZTcxYmUzZGQyODUzMGQwMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4OTM1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xOVQxNjo0MDo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xOVQxNjo0MDo1NS4zMTY1MzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMi9hMi85MmQ4Mjc5Y2YwZWM3OTBkMDFlNTVhMGIwMDI0ZmU1MTgxMjhlMTcyOGQ0MmRmYmJiNTVlMTdmOGE0YzkvZm9udC1DTEktMC45LjkudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOTM1NmY4Y2Q2YjdmYTg2MmZmOTlmMjNkNmExZDRmYjhlMmI2ZTkwMGUxOGQ3NjA1ZGMyN2E0ZDIwOTc5ZDQ1MCIs
ICAgICAgICAibWQ1IjogIjM2NGNiN2Y2YWQyN2VlYmM0OGM4NzViMDllOWE1MzFiIiw=
ICAgICAgICAic2hhMjU2IjogIjNiZjc4ZDU0YTE0MTAyZGVlZTg3MGU1ODhiZWJhNmI0ZWQ5NWJlZDQyODEwZDc0OGI1MWY3MWYzNDFiY2U1YWYi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImZvbnRfQ0xJLTAuOS4yMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiMzY0Y2I3ZjZhZDI3ZWViYzQ4Yzg3NWIwOWU5YTUzMWIiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiA5NjQxNiw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMTlUMDk6Mzc6MjYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMTlUMDk6Mzc6MjYuMDMxMDY5WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOTMvNTYvZjhjZDZiN2ZhODYyZmY5OWYyM2Q2YTFkNGZiOGUyYjZlOTAwZTE4ZDc2MDVkYzI3YTRkMjA5NzlkNDUwL2ZvbnRfQ0xJLTAuOS4yMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMjcyZDVhYzJlZjk3MjQwMmFiMmI4ZWUxMzU1Y2IzMmQ2NTc2NDA0YTgyZWU1MzU3NmJjMmUxOThiNGFmMTlmYSIs
ICAgICAgICAibWQ1IjogImJiNDMzZmEyZmJiMDAwN2E1MTUzZjdlMDE3OTRhNzExIiw=
ICAgICAgICAic2hhMjU2IjogIjhhMjk3MTA2ZTFhZDVhNDYzOTU4NDdmNzE1YTE5MDU2MThhNThkMTVjYzg2NzFhY2Q5YTk5ZDIyOWVmZWNhYTQi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImZvbnQtQ0xJLTAuOS4yMC50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYmI0MzNmYTJmYmIwMDA3YTUxNTNmN2UwMTc5NGE3MTEiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiAxMDcyNDgs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMTlUMDk6Mzc6MzQiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMTlUMDk6Mzc6MzQuMDQ1NzM0WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMjcvMmQvNWFjMmVmOTcyNDAyYWIyYjhlZTEzNTVjYjMyZDY1NzY0MDRhODJlZTUzNTc2YmMyZTE5OGI0YWYxOWZhL2ZvbnQtQ0xJLTAuOS4yMC50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
