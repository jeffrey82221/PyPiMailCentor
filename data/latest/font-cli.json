ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiZnRDTEkiLA==
ICAgICJhdXRob3JfZW1haWwiOiAiZnRjbGlAcHJvdG9uLm1lIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICJbIVtDb2RhY3kgQmFkZ2VdKGh0dHBzOi8vYXBwLmNvZGFjeS5jb20vcHJvamVjdC9iYWRnZS9HcmFkZS80MGUzOTliMGE4ZTA0NzEzODQ4YzM0YTU5ZDllODkxNCldKGh0dHBzOi8vYXBwLmNvZGFjeS5jb20vZ2gvZnRDTEkvZnRDTEkvZGFzaGJvYXJkP3V0bV9zb3VyY2U9Z2gmdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY29udGVudD0mdXRtX2NhbXBhaWduPUJhZGdlX2dyYWRlKVxuXG4jIGZ0Q0xJXG5cbmZ0Q0xJIGlzIGEgY29tbWFuZCBsaW5lIGludGVyZmFjZSBidWlsdCB3aXRoIFtjbGlja10oaHR0cHM6Ly9jbGljay5wYWxsZXRzcHJvamVjdHMuY29tL2VuLzguMC54LykgdG8gZWRpdCBmb250cyB1c2luZ1xuW0ZvbnRUb29sc10oaHR0cHM6Ly9naXRodWIuY29tL2ZvbnR0b29scy9mb250dG9vbHMpLlxuXG5QeXRob24gPj0zLjcgPDMuMTEgaXMgcmVxdWlyZWQgdG8gaW5zdGFsbCBmdENMSS5cblxuVGhlIGZvbGxvd2luZyBwYWNrYWdlcyB3aWxsIGJlIGluc3RhbGxlZCBkdXJpbmcgc2V0dXA6XG5cbi0gZm9udHRvb2xzXG4tIGFmZGtvXG4tIGJlemllcnNcbi0gYnJvdGxpXG4tIGNsaWNrXG4tIGNmZnN1YnJcbi0gZGVoaW50ZXJcbi0gcGF0aHZhbGlkYXRlXG4tIHJpY2hcbi0gc2tpYS1wYXRob3BzXG4tIHR0ZmF1dG9oaW50LXB5XG4tIHpvcGZsaVxuXG4jIyBJbnN0YWxsYXRpb25cblxuICAgIHBpcCBpbnN0YWxsIGZvbnQtY2xpXG5cbk9yLCB0byBpbnN0YWxsIGluIGVkaXRhYmxlIG1vZGU6XG5cbiAgICBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL2Z0Q0xJL2Z0Q0xJLmdpdFxuXG4gICAgY2QgZnRDTElcblxuICAgIHBpcCBpbnN0YWxsIC1lIC5cblxuIyMgdGw7ZHJcblxuVG8gc3RhcnQgdXNpbmcgZnRDTEksIGp1c3QgaW5zdGFsbCwgb3BlbiBhIHNoZWxsIGFuZCB0eXBlIGBmdGNsaSAtLWhlbHBgIHRvIGxpc3QgYWxsIGNvbW1hbmRzLlxuXG4hW2ltYWdlXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS84MzA2MzUwNi8yMjk1Mjk2ODctYzcxMWU4NjAtYzkzYi00OWM4LWExMzctMWU5ZTM3YzZhMGFmLnBuZylcblxuXG5FYWNoIGxldmVsIDEgY29tbWFuZCBoYXMgaXRzIG93biBoZWxwLi4uXG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzgzMDYzNTA2LzIyOTUyOTgyMy04NTFiMjU3ZC02OWMzLTRkYWEtYTcyYy00MmJlOTZkYjIwOWYucG5nKVxuXG4uLi4gYXMgd2VsbCBhcyBlYWNoIGxldmVsIDIgY29tbWFuZC5cblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vODMwNjM1MDYvMjI5NTI5OTU0LWNlZGMwZTFkLTlkMTUtNGM2Yy04MWJlLWQ4OTIzZjhkYzdkNy5wbmcpXG5cblJlbWVtYmVyIHRvIHVzZSBgLS1uby1vdmVyd3JpdGVgIG9yIGAtb3V0YCB0byBhdm9pZCBvdmVyd3JpdGluZyB5b3VyIGZvbnRzIHdoZW4gZXhwZXJpbWVudGluZy5cblxuIyMgQXJndW1lbnRzXG5cbi0gW0lOUFVUX1BBVEhdKCNpbnB1dHBhdGgpXG5cbiMjIENvbW1vbiBvcHRpb25zXG5cbi0gWy1vdXQsIC0tb3V0cHV0LWRpcl0oIy1vdXQtLS1vdXRwdXQtZGlyKVxuLSBbLS1yZWNhbGMtdGltZXN0YW1wXSgjLS1yZWNhbGMtdGltZXN0YW1wKVxuLSBbLS1uby1vdmVyd3JpdGVdKCMtLW5vLW92ZXJ3cml0ZSlcblxuIyMgQ29tbWFuZHMgbGlzdFxuXG4tIFsqKmFzc2lzdGFudCoqXSgjZnRjbGktYXNzaXN0YW50KVxuXG4gIC0gW3VpXSgjZnRjbGktYXNzaXN0YW50LXVpKVxuICAtIFtjb21taXRdKCNmdGNsaS1hc3Npc3RhbnQtY29tbWl0KVxuICAtIFtpbml0LWNvbmZpZ10oI2Z0Y2xpLWFzc2lzdGFudC1pbml0LWNvbmZpZylcbiAgLSBbaW5pdC1kYXRhXSgjZnRjbGktYXNzaXN0YW50LWluaXQtZGF0YSlcblxuLSBbKipjZmYqKl0oI2Z0Y2xpLWNmZilcblxuICAtIFtkZWwtbmFtZXNdKCNmdGNsaS1jZmYtZGVsLW5hbWVzKVxuICAtIFtmaW5kLXJlcGxhY2VdKCNmdGNsaS1jZmYtZmluZC1yZXBsYWNlKVxuICAtIFtmaXgtdmVyc2lvbl0oI2Z0Y2xpLWNmZi1maXgtdmVyc2lvbilcbiAgLSBbc2V0LW5hbWVzXSgjZnRjbGktY2ZmLXNldC1uYW1lcylcblxuLSBbKipjb252ZXJ0ZXIqKl0oI2Z0Y2xpLWNvbnZlcnRlcilcblxuICAtIFtvdGYydHRmXSgjZnRjbGktY29udmVydGVyLW90ZjJ0dGYpXG4gIC0gW3R0ZjJvdGZdKCNmdGNsaS1jb252ZXJ0ZXItdHRmMm90ZilcbiAgLSBbZnQyd2ZdKCNmdGNsaS1jb252ZXJ0ZXItZnQyd2YpXG4gIC0gW3dmMmZ0XSgjZnRjbGktY29udmVydGVyLXdmMmZ0KVxuICAtIFt2YXIyc3RhdGljXSgjZnRjbGktY29udmVydGVyLXZhcjJzdGF0aWMpXG4gIC0gW3R0YzJzZm50XSgjZnRjbGktY29udmVydGVyLXR0YzJzZm50KVxuXG4tIFsqKmZpeCoqXSgjZnRjbGktZml4KVxuXG4gIC0gW2NhcmV0LW9mZnNldF0oI2Z0Y2xpLWZpeC1jYXJldC1vZmZzZXQpXG4gIC0gW2RlY29tcG9zZS10cmFuc2Zvcm1lZF0oI2Z0Y2xpLWZpeC1kZWNvbXBvc2UtdHJhbnNmb3JtZWQpXG4gIC0gW2R1cGxpY2F0ZS1jb21wb25lbnRzXSgjZnRjbGktZml4LWR1cGxpY2F0ZS1jb21wb25lbnRzKVxuICAtIFtpdGFsaWMtYW5nbGVdKCNmdGNsaS1maXgtaXRhbGljLWFuZ2xlKVxuICAtIFtrZXJuLXRhYmxlXSgjZnRjbGktZml4LWtlcm4tdGFibGUpXG4gIC0gW21vbm9zcGFjZV0oI2Z0Y2xpLWZpeC1tb25vc3BhY2UpXG4gIC0gW25ic3AtbWlzc2luZ10oI2Z0Y2xpLWZpeC1uYnNwLW1pc3NpbmcpXG4gIC0gW25ic3Atd2lkdGhdKCNmdGNsaS1maXgtbmJzcC13aWR0aClcbiAgLSBbb3MyLXJhbmdlc10oI2Z0Y2xpLWZpeC1vczItcmFuZ2VzKVxuICAtIFtzdHJpcC1uYW1lc10oI2Z0Y2xpLWZpeC1zdHJpcC1uYW1lcylcbiAgLSBbdXByaWdodHNdKCNmdGNsaS1maXgtdXByaWdodHMpXG5cbi0gWyoqaGhlYSoqXSgjZnRjbGktaGhlYSlcblxuLSBbKiptZXRyaWNzKipdKCNmdGNsaS1tZXRyaWNzKVxuXG4gIC0gW2FsaWduXSgjZnRjbGktbWV0cmljcy1hbGlnbilcbiAgLSBbY29weS1tZXRyaWNzXSgjZnRjbGktbWV0cmljcy1jb3B5LW1ldHJpY3MpXG4gIC0gW3NldC1saW5lZ2FwXSgjZnRjbGktbWV0cmljcy1zZXQtbGluZWdhcClcblxuLSBbKipuYW1lKipdKCNmdGNsaS1uYW1lKVxuXG4gIC0gW2FwcGVuZF0oI2Z0Y2xpLW5hbWUtYXBwZW5kKVxuICAtIFtkZWwtbWFjLW5hbWVzXSgjZnRjbGktbmFtZS1kZWwtbWFjLW5hbWVzKVxuICAtIFtkZWwtbmFtZXNdKCNmdGNsaS1uYW1lLWRlbC1uYW1lcylcbiAgLSBbZmluZC1yZXBsYWNlXSgjZnRjbGktbmFtZS1maW5kLXJlcGxhY2UpXG4gIC0gW2ZpbmQtc2V0LW5hbWVdKCNmdGNsaS1uYW1lLXNldC1uYW1lKVxuXG4tIFsqKm9zMioqXSgjZnRjbGktb3MyKVxuXG4tIFsqKnBvc3QqKl0oI2Z0Y2xpLXBvc3QpXG5cbi0gWyoqcHJpbnQqKl0oI2Z0Y2xpLXByaW50KVxuICAtIFtmb250LWluZm9dKCNmdGNsaS1wcmludC1mb250LWluZm8pXG4gIC0gW2ZvbnQtbmFtZXNdKCNmdGNsaS1wcmludC1mb250LW5hbWVzKVxuICAtIFtmb250cy1saXN0XSgjZnRjbGktcHJpbnQtZm9udHMtbGlzdClcbiAgLSBbaW5zdGFuY2VzXSgjZnRjbGktcHJpbnQtaW5zdGFuY2VzKVxuICAtIFtvczItdGFibGVdKCNmdGNsaS1wcmludC1vczItdGFibGUpXG5cbi0gWyoqdXRpbHMqKl0oI2Z0Y2xpLXV0aWxzKVxuICAtIFthZGQtZHNpZ10oI2Z0Y2xpLXV0aWxzLWFkZC1kc2lnKVxuICAtIFtjZmYtYXV0b2hpbnRdKCNmdGNsaS11dGlscy1jZmYtYXV0b2hpbnQpXG4gIC0gW2NmZi1jaGVjay1vdXRsaW5lc10oI2Z0Y2xpLXV0aWxzLWNmZi1jaGVjay1vdXRsaW5lcylcbiAgLSBbY2ZmLWRlaGludF0oI2Z0Y2xpLXV0aWxzLWNmZi1kZWhpbnQpXG4gIC0gW2NmZi1kZXN1YnJdKCNmdGNsaS11dGlscy1jZmYtZGVzdWJyKVxuICAtIFtjZmYtc3Vicl0oI2Z0Y2xpLXV0aWxzLWNmZi1zdWJyKVxuICAtIFtkZWwtdGFibGVdKCNmdGNsaS11dGlscy1kZWwtdGFibGUpXG4gIC0gW2ZvbnQtb3JnYW5pemVyXSgjZnRjbGktdXRpbHMtZm9udC1vcmdhbml6ZXIpXG4gIC0gW2ZvbnQtcmVuYW1lcl0oI2Z0Y2xpLXV0aWxzLWZvbnQtcmVuYW1lcilcbiAgLSBbc2NhbGUtdXBtXSgjZnRjbGktdXRpbHMtc2NhbGUtdXBtKVxuICAtIFtzZXQtcmV2aXNpb25dKCNmdGNsaS11dGlscy1zZXQtcmV2aXNpb24pXG4gIC0gW3R0Zi1hdXRvaGludF0oI2Z0Y2xpLXV0aWxzLXR0Zi1hdXRvaGludClcbiAgLSBbdHRmLWRlaGludF0oI2Z0Y2xpLXV0aWxzLXR0Zi1kZWhpbnQpXG4gIC0gW3R0Zi1yZW1vdmUtb3ZlcmxhcHNdKCNmdGNsaS11dGlscy10dGYtcmVtb3ZlLW92ZXJsYXBzKVxuXG4jIyBBcmd1bWVudHNcblxuIyMjIElOUFVUX1BBVEhcblxuV2l0aCBzb21lIGV4Y2VwdGlvbnMsIGFsbCBmdENMSSBzdWJjb21tYW5kcyBwcm9jZXNzIGZpbGVzIGluIHRoZSBnaXZlbiBwYXRoLiBUaGUgYElOUFVUX1BBVEhgIGFyZ3VtZW50IGNhbiBiZSBnZW5lcmFsbHlcbmEgc2luZ2xlIGZvbnQgZmlsZSBvciBhIGZvbGRlciBjb250YWluaW5nIG9uZSBvciBtb3JlIGZvbnRzLiBJbiBjYXNlIGEgZGlyZWN0b3J5IGlzIHBhc3NlZCBhcyBJTlBVVF9QQVRILCBhbGwgZm9udHNcbnN0b3JlZCBpbiBpdCB3aWxsIGJlIHByb2Nlc3NlZCwgd2l0aCB0aGUgZXhjbHVzaW9uIG9mIGZvbnRzIHN0b3JlZCBpbiBzdWJkaXJlY3Rvcmllcy5cblxuIyMgQ29tbW9uIG9wdGlvbnNcblxuVGhlIGAtb3V0LCAtb3V0cHV0LWRpcmAsIGAtLXJlY2FsYy10aW1lc3RhbXBgIGFuZCBgLS1uby1vdmVyd3JpdGVgIG9wdGlvbnMgY2FuIGJlIHVzZWQgaW4gYWxsIHN1YmNvbW1hbmRzLCB1bmxlc3Ncbm90aGVyd2lzZSBzcGVjaWZpZWQuXG5cbiMjIyAtb3V0LCAtLW91dHB1dC1kaXJcblxuVGhlIGRpcmVjdG9yeSB3aGVyZSB0aGUgb3V0cHV0IGZpbGVzIGFyZSB0byBiZSBzYXZlZC4gSWYgYG91dHB1dF9kaXJgIGlzIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZCB0byB0aGUgc2FtZVxuZm9sZGVyLiBJZiB0aGUgdXNlciBwYXNzZXMgYSBkaXJlY3RvcnkgdGhhdCBkb2Vzbid0IGV4aXN0LCBpdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgY3JlYXRlZC5cblxuIyMjIC0tcmVjYWxjLXRpbWVzdGFtcFxuXG5CeSBkZWZhdWx0LCBvcmlnaW5hbCBgaGVhZC5tb2RpZmllZGAgdmFsdWUgaXMga2VwdCB3aGVuIGEgZm9udCBpcyBzYXZlZC4gVXNlIHRoaXMgb3B0aW9uIHRvIHNldCBgaGVhZC5tb2RpZmllZGBcbnRpbWVzdGFtcCB0byBjdXJyZW50IHRpbWUuXG5cbiMjIyAtLW5vLW92ZXJ3cml0ZVxuXG5CeSBkZWZhdWx0LCBtb2RpZmllZCBmaWxlcyBhcmUgb3ZlcndyaXR0ZW4uIFVzZSB0aGlzIHN3aXRjaCB0byBzYXZlIHRoZW0gdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxub2YgZmlsZSBuYW1lLCBzbyB0aGF0IFRpbWVzLUJvbGQub3RmIGJlY29tZXMgVGltZXNCb2xkIzEub3RmKS5cblxuIyMjIFVzYWdlIGV4YW1wbGVzOlxuXG5gZnRjbGkgbWV0cmljcyBhbGlnbiBcIkM6XFxGb250c1wiIC1vdXQgXCJDOlxcRm9udHNcXEFsaWduZWRcImBcblxuYGZ0Y2xpIG1ldHJpY3MgY29weSAtcyBcIkM6XFxGb250c1xcU291cmNlRm9udC5vdGZcIiAtZCBcIkM6XFxGb250c1xcXCIgLS1yZWNhbGMtdGltZXN0YW1wYFxuXG5gZnRjbGkgbWV0cmljcyBjb3B5IC1zIFwiQzpcXEZvbnRzXFxTb3VyY2VGb250Lm90ZlwiIC1kIFwiQzpcXEZvbnRzXFxcIiAtLW5vLW92ZXJ3cml0ZWBcblxuIyMgZnRjbGkgYXNzaXN0YW50XG5cbkEgc2V0IG9mIHRvb2xzIHRvIGNvcnJlY3RseSBjb21waWxlIHRoZSAnbmFtZScgdGFibGUgYW5kIHNldCBwcm9wZXIgdmFsdWVzIGZvciB1c1dlaWdodENsYXNzLCB1c1dpZHRoQ2xhc3MsIEJvbGQsIEl0YWxpY1xuYW5kIE9ibGlxdWUgYml0cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgYXNzaXN0YW50XG5cbioqQ29tbWFuZHMqKjpcblxuICAgICAgY29tbWl0XG4gICAgICBpbml0LWNvbmZpZ1xuICAgICAgaW5pdC1kYXRhXG4gICAgICB1aVxuXG5UaGUgbG9naWNhbCBzdGVwcyBhcmUgdGhlIGZvbGxvd2luZzpcblxuMS4gQ3JlYXRlIGEgQ1NWIGZpbGUgY29udGFpbmluZywgZm9yIGVhY2ggZm9udCBpbiB0aGUgc291cmNlIHBhdGgsIHRoZSBmb2xsb3dpbmcgZGF0YTpcbiAgIC0gRmlsZSBwYXRoXG4gICAtIEZhbWlseSBuYW1lXG4gICAtIHVzV2lkdGhDbGFzc1xuICAgLSB1c1dlaWdodENsYXNzXG4gICAtIFNsb3BlIGNsYXNzZXMgKEl0YWxpYyBhbmQvb3IgT2JsaXF1ZSkgYW5kIEJvbGQgZmxhZ1xuICAgLSBXZWlnaHQsIFdpZHRoIGFuZCBTbG9wZSBzdHlsZSBuYW1lc1xuMi4gUmV2aWV3IHRoZSBDU1YgZmlsZVxuMy4gV3JpdGUgZGF0YSBmcm9tIHRoZSBDU1YgZmlsZSB0byB0aGUgdGFyZ2V0IGZvbnRzOiB0aGlzIHdpbGwgY29tcGlsZSB0aGUgbmFtZSB0YWJsZSBhbmQgc2V0IHRoZSBwcm9wZXJcbiAgIHVzV2lkdGhDbGFzcywgdXNXZWlnaHRDbGFzcyBTbG9wZSBjbGFzcyBhbmQgQm9sZCB2YWx1ZXMuXG5cbioqU3RlcCAxKiogY2FuIGJlIGV4ZWN1dGVkIHdpdGggb25lIG9mIHRoZSBmb2xsb3dpbmcgY29tbWFuZHM6XG5cbi0gYGZ0Y2xpIGFzc2lzdGFudCBpbml0LWRhdGEgSU5QVVRfUEFUSGBcbi0gYGZ0Y2xpIGFzc2lzdGFudCB1aSBJTlBVVF9QQVRIYFxuXG5UaGUgZmlyc3QgY29tbWFuZCB3aWxsIGNyZWF0ZSBhIGRpcmVjdG9yeSBuYW1lZCBgZnRDTElfZmlsZXNgIGNvbnRhaW5pbmcgdHdvIGZpbGVzOiBgZm9udHNfZGF0YS5jc3ZgIGFuZFxuYHN0eWxlc19tYXBwaW5nLmpzb25gLiBUaGUgc2Vjb25kIG9uZSB3aWxsIG9wZW4gdGhlIGNvbW1hbmQgbGluZSB1c2VyIGludGVyZmFjZSB0aGF0IGFsbG93cyB0byBlZGl0IGJvdGguXG5cblRoZSBgc3R5bGVzX21hcHBpbmcuanNvbmAgaXMgY3JlYXRlZCBhdCBmaXJzdCwgdW5sZXNzIGl0IGFscmVhZHkgZXhpc3RzLCBhbmQgY29udGFpbnMgdGhlIGRlZmF1bHQgU3R5bGUgTmFtZXMgdG8gcGFpclxud2l0aCB1c1dpZHRoQ2xhc3MsIHVzV2VpZ2h0Q2xhc3MgYW5kIFNsb3BlIGNsYXNzLiBUaGUgZGVmYXVsdCB2YWx1ZXMgYXJlIHRoZSBmb2xsb3dpbmc6XG5cbiAgICB7XG4gICAgICAgIFwiaXRhbGljc1wiOiBbXCJJdFwiLCBcIkl0YWxpY1wiXSxcbiAgICAgICAgXCJvYmxpcXVlc1wiOiBbXCJPYmxcIiwgXCJPYmxpcXVlXCJdLFxuICAgICAgICBcIndlaWdodHNcIjoge1xuICAgICAgICAgICAgXCIyNTBcIjogW1wiVGhcIiwgXCJUaGluXCIgXSxcbiAgICAgICAgICAgIFwiMjc1XCI6IFtcIlhMdFwiLCBcIkV4dHJhTGlnaHRcIl0sXG4gICAgICAgICAgICBcIjMwMFwiOiBbXCJMdFwiLCBcIkxpZ2h0XCJdLFxuICAgICAgICAgICAgXCIzNTBcIjogW1wiQmtcIiwgXCJCb29rXCJdLFxuICAgICAgICAgICAgXCI0MDBcIjogW1wiUmdcIiwgXCJSZWd1bGFyXCJdLFxuICAgICAgICAgICAgXCI1MDBcIjogW1wiTWRcIiwgXCJNZWRpdW1cIl0sXG4gICAgICAgICAgICBcIjYwMFwiOiBbXCJTQmRcIiwgXCJTZW1pQm9sZFwiXSxcbiAgICAgICAgICAgIFwiNzAwXCI6IFtcIkJkXCIsIFwiQm9sZFwiXSxcbiAgICAgICAgICAgIFwiODAwXCI6IFtcIlhCZFwiLCBcIkV4dHJhQm9sZFwiXSxcbiAgICAgICAgICAgIFwiODUwXCI6IFtcIkh2eVwiLCBcIkhlYXZ5XCJdLFxuICAgICAgICAgICAgXCI5MDBcIjogW1wiQmxrXCIsXCJCbGFja1wiXSxcbiAgICAgICAgICAgIFwiOTUwXCI6IFtcIlVsdFwiLCBcIlVsdHJhXCJdXG4gICAgICAgIH0sXG4gICAgICAgIFwid2lkdGhzXCI6IHtcbiAgICAgICAgICAgIFwiMVwiOiBbXCJDbVwiLCBcIkNvbXByZXNzZWRcIl0sXG4gICAgICAgICAgICBcIjJcIjogW1wiWENuXCIsIFwiRXh0cmFDb25kZW5zZWRcIl0sXG4gICAgICAgICAgICBcIjNcIjogW1wiQ25cIiwgXCJDb25kZW5zZWRcIl0sXG4gICAgICAgICAgICBcIjRcIjogW1wiTnJcIiwgXCJOYXJyb3dcIl0sXG4gICAgICAgICAgICBcIjVcIjogW1wiTm9yXCIsXCJOb3JtYWxcIl0sXG4gICAgICAgICAgICBcIjZcIjogW1wiV2RcIiwgXCJXaWRlXCJdLFxuICAgICAgICAgICAgXCI3XCI6IFtcIkV4dFwiLCBcIkV4dGVuZGVkXCJdLFxuICAgICAgICAgICAgXCI4XCI6IFtcIlhFeHRcIiwgXCJFeHRyYUV4dGVuZGVkXCJdLFxuICAgICAgICAgICAgXCI5XCI6IFtcIkV4cFwiLCBcIkV4cGFuZGVkXCJdXG4gICAgICAgIH1cbiAgICB9XG5cbkFmdGVyIGNyZWF0aW9uIG9mIGBzdHlsZXNfbWFwcGluZy5qc29uYCwgYWxsIHZhbGlkIGZvbnQgZmlsZXMgZm91bmQgaW4gYElOUFVUX1BBVEhgIGFyZSBwYXJzZWQgdG8gcmV0cmlldmUgRmFtaWx5IE5hbWUsXG51c1dpZHRoQ2xhc3MsIHVzV2VpZ2h0Q2xhc3MsIFNsb3BlIENsYXNzIChVcHJpZ2h0LCBJdGFsaWMgb3IgT2JsaXF1ZSkuIFRoZSBwcm9jZXNzIHNlYXJjaGVzIGZvciBtYXRjaGVzIGJldHdlZW4gdGhlXG5yZXRyaWV2ZWQgdmFsdWVzIGFuZCB0aGUgSlNPTiBkYXRhLCB0cnlpbmcgdG8gZGV0ZXJtaW5lIHRoZSBwcm9wZXIgc3R5bGUgbmFtZXMuIFRoZSByZXN1bHRzIGFyZSB3cml0dGVuIGludG8gdGhlXG5gZm9udHNfZGF0YS5jc3ZgIGZpbGUuXG5cblRoZSBgZm9udHNfZGF0YS5jc3ZgIGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgY29sdW1uczpcblxuLSBgZmlsZV9uYW1lYDogcGF0aCB0byB0aGUgZm9udCBmaWxlXG4tIGBmYW1pbHlfbmFtZWA6IHRoZSBmb250J3MgZmFtaWx5IG5hbWUsIHJldHJpZXZlZCByZWFkaW5nIHRoZSBuYW1lIHRhYmxlXG4tIGBpc19ib2xkYDogVHJ1ZSBpZiB0aGUgYm9sZCBiaXRzIGFyZSBzZXQsIEZhbHNlIGlmIHRoZXkgYXJlIG5vdCBzZXQuIFRoaXMgY29sdW1uIGlzIHByZXNlbnQgb25seSBmb3IgY29tcGxldGVuZXNzLFxuICBidXQgaXQncyB2YWx1ZSB3aWxsIGJlIGlnbm9yZWQuIEEgZm9udCB3aWxsIGJlIHNldCBhcyBib2xkIG9ubHkgYW5kIG9ubHkgaWYsIHdoaWxlIHJ1bm5pbmcgdGhlIGBmdGNsaSBhc3Npc3RhbnQgY29tbWl0YFxuICBjb21tYW5kLCB0aGUgdXNlciB3aWxsIGNob29zZSB0byB1c2UgbGlua2VkIHN0eWxlcy5cbiAgKC1scyAvIC0tbGlua2VkIHN0eWxlcykgb3B0aW9uIHdoaWxlIHdyaXRpbmcgZGF0YSBmcm9tIENTViB0byBmb250c1xuLSBgaXNfaXRhbGljYDogVHJ1ZSBpZiB0aGUgaXRhbGljIGJpdHMgYXJlIHNldCwgRmFsc2UgaWYgdGhleSBhcmUgbm90IHNldFxuLSBgaXNfb2JsaXF1ZWA6IFRydWUgaWYgdGhlIG9ibGlxdWUgYml0IGlzIHNldCwgRmFsc2UgaWYgaXQncyBub3Qgc2V0XG4tIGB1c193aWR0aF9jbGFzc2A6IHVzV2lkdGhDbGFzcyB2YWx1ZVxuLSBgdXNfd2VpZ2h0X2NsYXNzYDogdXNXZWlnaHRDbGFzcyB2YWx1ZVxuLSBgd2R0YDogc2hvcnQgbGl0ZXJhbCBmb3IgdGhlIFdpZHRoIHN0eWxlIG5hbWVcbi0gYHdpZHRoYDogbG9uZyBsaXRlcmFsIGZvciB0aGUgV2lkdGggc3R5bGUgbmFtZVxuLSBgd2d0YDogc2hvcnQgbGl0ZXJhbCBmb3IgdGhlIFdlaWdodCBzdHlsZSBuYW1lXG4tIGB3ZWlnaHRgOiBsb25nIGxpdGVyYWwgZm9yIHRoZSBXZWlnaHQgc3R5bGUgbmFtZVxuLSBgc2xwYDogc2hvcnQgbGl0ZXJhbCBmb3IgdGhlIFNsb3BlIHN0eWxlIG5hbWVcbi0gYHNsb3BlYDogbG9uZyBsaXRlcmFsIGZvciB0aGUgU2xvcGUgc3R5bGUgbmFtZVxuLSBgc2VsZWN0ZWRgOiAwIHRvIGV4Y2x1ZGUgdGhlIGZpbGUgd2hpbGUgd3JpdGluZyBkYXRhIGZyb20gQ1NWIHRvIGZvbnRzLCAxIHRvIGluY2x1ZGUgdGhlIGZpbGVcblxuQm90aCBmaWxlcyBjYW4gYmUgZWRpdGVkIG1hbnVhbGx5IG9yIHVzaW5nIHRoZSBjaGFyYWN0ZXIgaW50ZXJmYWNlLlxuXG4qKlN0ZXAgMioqIGNhbiBiZSBleGVjdXRlZCwgYWZ0ZXIgcmV2aWV3aW5nIGBmb250c19kYXRhLmNzdmAsIHJ1bm5pbmcgdGhlIGBmdGNsaSBhc3Npc3RhbnQgY29tbWl0YCBjb21tYW5kLlxuXG4jIyMgZnRjbGkgYXNzaXN0YW50IHVpXG5cbk9wZW5zIHRoZSBjaGFyYWN0ZXIgdXNlciBpbnRlcmZhY2UgdG8gZWRpdCB0aGUgYHN0eWxlc19tYXBwaW5nLmpzb25gIGFuZCBgZm9udHNfZGF0YS5jc3ZgIGZpbGVzLiBJZiBvbmUgb3IgYm90aCBmaWxlc1xuZG8gbm90IGV4aXN0LCB0aGV5IHdpbGwgYmUgYXV0b21hdGljYWxseSBjcmVhdGVkLlxuXG4qKlVzYWdlKipcblxuICAgIGZ0Y2xpIGFzc2lzdGFudCB1aSBJTlBVVF9QQVRIXG5cblRoZSBtYWluIHdpbmRvdyBkaXNwbGF5cyBhIGxpc3Qgb2YgZm9udHMgZm91bmQgaW4gYElOUFVUX1BBVEhgIGFuZCBhbGxvd3MgdG8gYWNjZXNzIHRoZSBlZGl0b3JzIGZvclxuYHN0eWxlc19tYXBwaW5nLmpzb25gIGFuZCBgZm9udHNfZGF0YS5jc3ZgLlxuXG5UaGUgTWFpbiBXaW5kb3c6XG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzgzMDYzNTA2LzIyNjkzNTY5My01MTkzMDlhNC1jNzZjLTQzMjEtOGYxZC01YmMwZTdhMzJkZTUucG5nIFwiZnRDTEkgYXNzaXN0YW50IG1haW4gd2luZG93XCIpXG5cblRoZSBTdHlsZXMgTWFwcGluZyBFZGl0b3I6XG5cbiFbaW1hZ2VdKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzgzMDYzNTA2LzIyNzE1MDM0NC02ZmZkNTczMC1jNzVjLTQ4MzYtYThhNy1jY2IxNTE4ZDY0MTQucG5nIFwiU3R5bGVzIE1hcHBpbmcgRWRpdG9yXCIpXG5cblRoZSBGb250cyBEYXRhIEVkaXRvcjpcblxuIVtpbWFnZV0oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vODMwNjM1MDYvMjI3MTUwNjk4LWM3YzVjMGMzLTIzNzQtNDIyZC04YmU3LWMxOWM4YzQxYzY5ZC5wbmcgXCJUaGUgRm9udHMgRGF0YSBFZGl0b3JcIilcblxuV2hlbiB0aGUgYGZvbnRzX2RhdGEuY3N2YCBmaWxlIGNvbnRhaW5zIHRoZSBkZXNpcmVkIHZhbHVlcywgZGF0YSBhcmUgcmVhZHkgdG8gYmUgd3JpdHRlbiB0byBmb250cyB1c2luZyB0aGUgYGZ0Y2xpXG5hc3Npc3RhbnQgY29tbWl0YCBjb21tYW5kLlxuXG4jIyMgZnRjbGkgYXNzaXN0YW50IGNvbW1pdFxuXG5Xcml0ZXMgZGF0YSBmcm9tIENTViB0byBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgYXNzaXN0YW50IGNvbW1pdCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgICAgLS13aWR0aC1lbGlkYWJsZSBURVhUICAgICAgICAgICBUaGUgd2lkdGggd29yZCB0byBlbGlkZSB3aGVuIGJ1aWxkaW5nIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lcmVjb3Jkcy4gIFtkZWZhdWx0OiBOb3JtYWxdXG4gICAgICAtLXdlaWdodC1lbGlkYWJsZSBURVhUICAgICAgICAgIFRoZSB3ZWlnaHQgd29yZCB0byBlbGlkZSB3aGVuIGJ1aWxkaW5nIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lcmVjb3Jkcy4gIFtkZWZhdWx0OiBSZWd1bGFyXVxuICAgICAgLWxzLCAtLWxpbmtlZC1zdHlsZXMgPElOVEVHRVIgUkFOR0UgSU5URUdFUiBSQU5HRT4uLi5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVXNlIHRoaXMgb3B0aW9uIHRvIGFjdGl2YXRlIGxpbmtlZCBzdHlsZXMuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIHRoaXMgb3B0aW9uIGlzIGFjdGl2ZSwgbGlua2VkIHN0eWxlcyBtdXN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIHNwZWNpZmllZC4gRm9yIGV4YW1wbGU6IC1scyA0MDAgNzAwLCBvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtbHMgMzAwIDYwMC5cbiAgICAgIC14LCAtLWV4Y2x1ZGUtbmFtZXJlY29yZHMgWzF8MnwzfDR8NXw2fDE2fDE3fDE4XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lIElEcyB0byBza2lwLiBUaGUgc3BlY2lmaWVkIG5hbWUgSURzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvbid0IGJlIHJlY2FsY3VsYXRlZC4gVGhpcyBvcHRpb24gY2FuIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGVhdGVkIChmb3IgZXhhbXBsZTogLXggMyAteCA1IC14IDYuLi4pLlxuICAgICAgLXN3ZHQsIC0tc2hvcnRlbi13aWR0aCBbMXw0fDZ8MTZ8MTddXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgSURzIHdoZXJlIHRvIHVzZSB0aGUgc2hvcnQgd29yZCBmb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggc3R5bGUgbmFtZSAoZm9yIGV4YW1wbGUsICdDbicgaW5zdGVhZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiAnQ29uZGVuc2VkJykuIFRoaXMgb3B0aW9uIGNhbiBiZSByZXBlYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZm9yIGV4YW1wbGU6IC1zd2R0IDEgLXN3ZHQgNSwgLXN3ZHQgMTYuLi4pLlxuICAgICAgLXN3Z3QsIC0tc2hvcnRlbi13ZWlnaHQgWzF8NHw2fDE3XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYW1lIElEcyB3aGVyZSB0byB1c2UgdGhlIHNob3J0IHdvcmQgZm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodCBzdHlsZSBuYW1lIChmb3IgZXhhbXBsZSwgJ01kJyBpbnN0ZWFkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mICdNZWRpdW0nKS4gVGhpcyBvcHRpb24gY2FuIGJlIHJlcGVhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmb3IgZXhhbXBsZTogLXN3Z3QgMSAtc3dndCA1IC1zd2d0IDYuLi4pLlxuICAgICAgLWt3ZHQsIC0ta2VlcC13aWR0aC1lbGlkYWJsZSAgICBEb2Vzbid0IHJlbW92ZSB0aGUgd2lkdGggZWxpZGFibGUgd29yZHMgKGJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIFwiTm9yXCIgYW5kIFwiTm9ybWFsXCIpLlxuICAgICAgLWt3Z3QsIC0ta2VlcC13ZWlnaHQtZWxpZGFibGUgICBEb2Vzbid0IHJlbW92ZSB0aGUgd2VpZ2h0IGVsaWRhYmxlIHdvcmRzIChieVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBcIlJnXCIgYW5kIFwiUmVndWxhclwiKS5cbiAgICAgIC1zc2xwLCAtLXNob3J0ZW4tc2xvcGUgWzR8NnwxNnwxN11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmFtZSBJRHMgd2hlcmUgdG8gdXNlIHRoZSBzaG9ydCB3b3JkIGZvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbG9wZSBzdHlsZSBuYW1lIChmb3IgZXhhbXBsZSwgJ0l0JyBpbnN0ZWFkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mICdJdGFsaWMnKS4gVGhpcyBvcHRpb24gY2FuIGJlIHJlcGVhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmb3IgZXhhbXBsZTogLXNzbHAgMyAtc3NscCA1IC1zc2xwIDYuLi4pLlxuICAgICAgLXNmLCAtLXN1cGVyLWZhbWlseSAgICAgICAgICAgICBTdXBlcmZhbWlseSBtb2RlLiBUaGlzIG9wdGlvbiBhZmZlY3RzIG5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSURzIDMsIDYsIDE2IGFuZCAxNyBpbiBjYXNlIG9mIGZhbWlsaWVzIHdpdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhzIGRpZmZlcmVudCB0aGFuICdOb3JtYWwnLiBJZiB0aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbiBpcyBhY3RpdmUsIG5hbWUgSUQgNiB3aWxsIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdGYW1pbHlOYW1lLVdpZHRoV2VpZ2h0U2xvcGUnIGluc3RlYWQgb2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0ZhbWlseU5hbWVXaWR0aC1XZWlnaHRTbG9wZScuIE1hYyBhbmQgT1RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFtaWx5L3N1YmZhbWlseSBuYW1lcyB3aWxsIGJlIEZhbWlseU5hbWUgL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXaWR0aCBXZWlnaHQgU2xvcGUnIGluc3RlYWQgb2YgJ0ZhbWlseSBOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdpZHRoIC8gV2VpZ2h0IFNsb3BlJy5cbiAgICAgIC1hdWksIC0tYWx0LXVpZCAgICAgICAgICAgICAgICAgVXNlIGFsdGVybmF0ZSB1bmlxdWUgaWRlbnRpZmllci4gQnkgZGVmYXVsdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZUlEIDMgKFVuaXF1ZSBpZGVudGlmaWVyKSBpcyBjYWxjdWxhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY29yZGluZyB0byB0aGUgZm9sbG93aW5nIHNjaGVtZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1ZlcnNpb247VmVuZG9yIGNvZGU7UG9zdHNjcmlwdE5hbWUnLiBUaGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0ZXJuYXRlIHVuaXF1ZSBpZGVudGlmaWVyIGlzIGNhbGN1bGF0ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjb3JkaW5nIHRvIHRoZSBmb2xsb3dpbmcgc2NoZW1lOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnTWFudWZhY3R1cmVyOiBGdWxsIEZvbnQgTmFtZTogQ3JlYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWWVhcicuXG4gICAgICAtb2JuaSwgLS1vYmxpcXVlLW5vdC1pdGFsaWMgICAgIEJ5IGRlZmF1bHQsIGlmIGEgZm9udCBoYXMgdGhlIG9ibGlxdWUgYml0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldCwgdGhlIGl0YWxpYyBiaXRzIHdpbGwgYmUgc2V0IHRvby4gVXNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgb3B0aW9uIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlaGF2aW91ciAoZm9yIGV4YW1wbGUsIHdoZW4gdGhlIGZhbWlseSBoYXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90aCBpdGFsaWMgYW5kIG9ibGlxdWUgc3R5bGVzIGFuZCB5b3UgbmVlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBrZWVwIG9ibGlxdWUgYW5kIGl0YWxpYyBzdHlsZXMgc2VwYXJhdGUpLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgaXRhbGljIGJpdHMgd2lsbCBiZSBjbGVhcmVkIHdoZW4gdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ibGlxdWUgYml0IGlzIHNldC5cbiAgICAgIC0tbm8tYXV0by1zaG9ydGVuICAgICAgICAgICAgICAgV2hlbiBuYW1lIGlkIDEsIDQgb3IgNiBhcmUgbG9uZ2VyIHRoYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4aW11bSBhbGxvd2VkICgyNyBjaGFyYWN0ZXJzIGZvciBuYW1lSUQgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzEgZm9yIG5hbWVJRCA0IGFuZCAyOSBmb3IgbmFtZUlEIDYpLCB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NyaXB0IHRyaWVzIHRvIGF1dG8gc2hvcnRlbiB0aG9zZSBuYW1lc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBsYWNpbmcgbG9uZyB3b3JkcyB3aXRoIHNob3J0IHdvcmRzLiBVc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyBvcHRpb24gdG8gcHJldmVudCB0aGUgc2NyaXB0IGZyb20gYXV0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9ydGVuaW5nIG5hbWVzLlxuICAgICAgLWNmZiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGlzIG9wdGlvbiBpcyBhY3RpdmUsIGZvbnROYW1lcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRnVsbE5hbWUsIEZhbWlseU5hbWUgYW5kIFdlaWdodCB2YWx1ZXMgaW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlICdDRkYnIHRhYmxlIHdpbGwgYmUgcmVjYWxjdWxhdGVkLlxuICAgICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZCB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBhc3Npc3RhbnQgaW5pdC1jb25maWdcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgYXNzaXN0YW50IGluaXQtY29uZmlnIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqXG5cbiAgICAtcSwgLS1xdWlldCAgU3VwcHJlc3MgdGhlIG92ZXJ3cml0ZSBjb25maXJtYXRpb24gbWVzc2FnZSBpZiB0aGUgY29uZmlnLmpzb25cbiAgICAgICAgICAgICAgICAgZmlsZSBhbHJlYWR5IGV4aXN0cy5cbiAgICAtLWhlbHAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbklmLCBmb3Igc29tZSByZWFzb24sIHRoZSB1c2VyIG5lZWRzIHRvIGNyZWF0ZSBvciByZXNldCB0aGUgYHN0eWxlc19tYXBwaW5ncy5qc29uYCBmaWxlIHRvIHRoZSBkZWZhdWx0IHZhbHVlcywgdGhpc1xuY29tbWFuZCB3aWxsIHNlcnZlIHRoZSBwdXJwb3NlLiBOb3QgbmVlZGVkIGlmIGBmdGNsaSBhc3Npc3RhbnQgdWlgIGlzIHVzZWQuXG5cbiMjIyBmdGNsaSBhc3Npc3RhbnQgaW5pdC1kYXRhXG5cbkNyZWF0ZXMgdGhlIENTViBkYXRhYmFzZSBmaWxlIGBmb250c19kYXRhLmNzdmAgaW4gdGhlIGBmdENMSV9maWxlc2Agc3ViZGlyZWN0b3J5LiBOb3QgbmVlZGVkIGlmIGBmdGNsaSBhc3Npc3RhbnQgdWlgXG5pcyB1c2VkLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBhc3Npc3RhbnQgaW5pdC1kYXRhIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXMsIC0tc3R5bGVzLW1hcHBpbmctZmlsZSBGSUxFICBVc2UgYSBjdXN0b20gc3R5bGVzIG1hcHBpbmcgZmlsZSBpbnN0ZWFkIG9mXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgZGVmYXVsdCBzdHlsZXNfbWFwcGluZy5qc29uIGZpbGUgbG9jYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gdGhlIGZ0Q0xJX2ZpbGVzIGZvbGRlci5cbiAgICAtcSwgLS1xdWlldCAgICAgICAgICAgICAgICAgICAgIFN1cHByZXNzIHRoZSBvdmVyd3JpdGUgY29uZmlybWF0aW9uIG1lc3NhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHRoZSBmb250c19kYXRhLmNzdiBhbmQvb3Igc3R5bGVzX21hcHBpbmcuanNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZXMgYWxyZWFkeSBleGlzdCBpbiB0aGUgZnRDTElfZmlsZXMgZm9sZGVyLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIGNmZlxuXG5gQ0ZGYCB0YWJsZSBlZGl0b3IuXG5cbioqVXNhZ2U6KipcblxuICAgIGZ0Y2xpIGNmZiBDT01NQU5EIFtBUkdTXVxuXG4qKkNvbW1hbmRzOioqXG5cbiAgICBkZWwtbmFtZXNcbiAgICBmaW5kLXJlcGxhY2VcbiAgICBmaXgtdmVyc2lvblxuICAgIHNldC1uYW1lc1xuXG4jIyMgZnRjbGkgY2ZmIGRlbC1uYW1lc1xuXG5EZWxldGVzIENGRiBuYW1lcy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY2ZmIGRlbC1uYW1lcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0tZnVsbC1uYW1lICAgICAgICAgICAgICAgICAgIERlbGV0ZXMgQ0ZGLmNmZi50b3BEaWN0SW5kZXhbMF0gRnVsbE5hbWVcbiAgICAtLWZhbWlseS1uYW1lICAgICAgICAgICAgICAgICBEZWxldGVzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIEZhbWlseU5hbWVcbiAgICAtLXdlaWdodCAgICAgICAgICAgICAgICAgICAgICBEZWxldGVzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIFdlaWdodFxuICAgIC0tdmVyc2lvbiAgICAgICAgICAgICAgICAgICAgIERlbGV0ZXMgQ0ZGLmNmZi50b3BEaWN0SW5kZXhbMF0gdmVyc2lvblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjZmYgZmluZC1yZXBsYWNlXG5cbkZpbmRzIGEgc3RyaW5nIGluIHRoZSBmb2xsb3dpbmcgaXRlbXMgb2YgQ0ZGIHRhYmxlIHRvcERpY3QgYW5kIHJlcGxhY2VzIGl0IHdpdGggYSBuZXcgc3RyaW5nOiBgdmVyc2lvbmAsIGBGdWxsTmFtZWAsXG5gRmFtaWx5TmFtZWAsIGBXZWlnaHRgLCBgQ29weXJpZ2h0YCwgYE5vdGljZWAuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNmZiBmaW5kLXJlcGxhY2UgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3MsIC0tb2xkLXN0cmluZyBURVhUICAgICAgICBUaGUgc3RyaW5nIHRvIGJlIHJlcGxhY2VkICBbcmVxdWlyZWRdXG4gICAgLW5zLCAtLW5ldy1zdHJpbmcgVEVYVCAgICAgICAgVGhlIHN0cmluZyB0byByZXBsYWNlIHRoZSBvbGQgc3RyaW5nIHdpdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVxdWlyZWRdXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGNmZiBmaXgtdmVyc2lvblxuXG5BbGlnbnMgdG9wRGljdCB2ZXJzaW9uIHN0cmluZyB0byB0aGUgYGhlYWQuZm9udFJldmlzaW9uYCB2YWx1ZS5cblxuRm9yIGV4YW1wbGUsIGlmIGBoZWFkLmZvbnRSZXZpc2lvbmAgdmFsdWUgaXMgMi4wMDEsIENGRiB0b3BEaWN0IHZlcnNpb24gdmFsdWUgd2lsbCBiZSAyLjEuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNmZiBmaXgtdmVyc2lvbiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjZmYgc2V0LW5hbWVzXG5cblNldHMgQ0ZGIG5hbWVzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjZmYgc2V0LW5hbWVzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1mb250LW5hbWVzIFRFWFQgICAgICAgICAgICAgU2V0cyBDRkYuY2ZmLmZvbnROYW1lcyB2YWx1ZVxuICAgIC0tZnVsbC1uYW1lIFRFWFQgICAgICAgICAgICAgIFNldHMgQ0ZGLmNmZi50b3BEaWN0SW5kZXhbMF0gRnVsbE5hbWUgdmFsdWVcbiAgICAtLWZhbWlseS1uYW1lIFRFWFQgICAgICAgICAgICBTZXRzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIEZhbWlseU5hbWUgdmFsdWVcbiAgICAtLXdlaWdodCBURVhUICAgICAgICAgICAgICAgICBTZXRzIENGRi5jZmYudG9wRGljdEluZGV4WzBdIFdlaWdodCB2YWx1ZVxuICAgIC0tdmVyc2lvbiBURVhUICAgICAgICAgICAgICAgIFNldHMgQ0ZGLmNmZi50b3BEaWN0SW5kZXhbMF0gdmVyc2lvbiB2YWx1ZVxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIGNvbnZlcnRlclxuXG5Gb250IGNvbnZlcnRlci5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY29udmVydGVyIFtPUFRJT05TXSBDT01NQU5EIFtBUkdTXS4uLlxuXG4qKk9wdGlvbnMqKjpcbi0taGVscCBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgZnQyd2ZcbiAgICBvdGYydHRmXG4gICAgdHRjMnNmbnRcbiAgICB0dGYyb3RmXG4gICAgdmFyMnN0YXRpY1xuICAgIHdmMmZ0XG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgZnQyd2ZcblxuQ29udmVydHMgU0ZOVCBmb250cyAoVFRGIG9yIE9URikgdG8gd2ViIGZvbnRzIChXT0ZGIGFuZC9vciBXT0ZGMilcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY29udmVydGVyIGZ0MndmIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLWYsIC0tZmxhdm9yIFt3b2ZmfHdvZmYyXSAgICAgQnkgZGVmYXVsdCwgdGhlIHNjcmlwdCBjb252ZXJ0cyBTRk5UIGZvbnRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFRydWVUeXBlIG9yIE9wZW5UeXBlKSBib3RoIHRvIHdvZmYgYW5kIHdvZmYyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhdm9yZWQgd2ViIGZvbnRzLiBVc2UgdGhpcyBvcHRpb24gdG8gY3JlYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25seSB3b2ZmICgtLWZsYXZvciB3b2ZmKSBvciB3b2ZmMiAoLS1mbGF2b3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b2ZmMikgZmlsZXMuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGNvbnZlcnRlciBvdGYydHRmXG5cbkNvbnZlcnRzIGZvbnRzIGZyb20gT1RGIHRvIFRURiBmb3JtYXQuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciBvdGYydHRmIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGNvbnZlcnRlciB0dGMyc2ZudFxuXG5FeHRyYWN0cyBlYWNoIGZvbnQgZnJvbSBhIFRUQyBmaWxlLCBhbmQgc2F2ZXMgaXQgYXMgYSBUVEYgb3IgT1RGIGZpbGUuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciB0dGMyc2ZudCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBjb252ZXJ0ZXIgdHRmMm90ZlxuXG5Db252ZXJ0cyBUVEYgZm9udHMgKG9yIFRydWVUeXBlIGZsYXZvcmVkIHdvZmYvd29mZjIgd2ViIGZvbnRzKSB0byBPVEYgZm9udHMgKG9yIENGRiBmbGF2b3JlZCB3b2ZmL3dvZmYyIHdlYiBmb250cykuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGNvbnZlcnRlciB0dGYyb3RmIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXQsIC0tdG9sZXJhbmNlIEZMT0FUIFJBTkdFICAgQ29udmVyc2lvbiB0b2xlcmFuY2UgKDAtMi41LCBkZWZhdWx0IDEpLiBMb3dcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2xlcmFuY2UgYWRkcyBtb3JlIHBvaW50cyBidXQga2VlcHMgc2hhcGVzLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpZ2ggdG9sZXJhbmNlIGFkZHMgZmV3IHBvaW50cyBidXQgbWF5IGNoYW5nZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlcy5cbiAgICAtLXNhZmUgICAgICAgICAgICAgICAgICAgICAgICBTb21ldGltZXMgUXUyQ3VQZW4gbWF5IGZhaWwgb3IgcHJvZHVjZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RvcnRlZCBvdXRsaW5lcy4gTW9zdCBvZiB0aW1lcywgdXNlIG9mICctLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhZmUnIHdpbGwgcHJldmVudCBlcnJvcnMgYnkgY29udmVydGluZyB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgVFRGIGZvbnQgdG8gYSB0ZW1wb3JhcnkgT1RGIGJ1aWx0IHVzaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVDJDaGFyc3RyaW5nc1BlbiwgYW5kIHRoZW4gcmVjb252ZXJ0aW5nIGl0IHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYSB0ZW1wb3JhcnkgVFRGIGZvbnQuIFRoaXMgbGFzdCBvbmUgd2lsbCBiZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZWQgZm9yIFRURiB0byBPVEYgY29udmVyc2lvbiBpbnN0ZWFkIG9mIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSBUVEYgZmlsZS4gVGhpcyBpcyBzbG93ZXIsIGJ1dCBzYWZlc3QuXG4gICAgLS1zY2FsZS11cG0gICAgICAgICAgICAgICAgICAgU2NhbGUgdW5pdHMtcGVyLWVtIG9mIGNvbnZlcnRlZCBmb250cyB0byAxMDAwXG4gICAgLS1rZWVwLWdseXBocyAgICAgICAgICAgICAgICAgS2VlcHMgTlVMTCBhbmQgQ1IgZ2x5cGhzIGZyb20gdGhlIG91dHB1dCBmb250XG4gICAgLS1uby1zdWJyICAgICAgICAgICAgICAgICAgICAgRG8gbm90IHN1YnJvdXRpbml6ZSBjb252ZXJ0ZWQgZm9udHNcbiAgICAtLWNoZWNrLW91dGxpbmVzICAgICAgICAgICAgICBQZXJmb3JtcyBvcHRpb25hbCBvdXRsaW5lIHF1YWxpdHkgY2hlY2tzIGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZXMgb3ZlcmxhcHMgd2l0aCBhZmRrby5jaGVja291dGxpbmVzdWZvXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGNvbnZlcnRlciB2YXIyc3RhdGljXG5cbkV4cG9ydHMgc3RhdGljIGluc3RhbmNlcyBmcm9tIHZhcmlhYmxlIGZvbnRzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBjb252ZXJ0ZXIgdmFyMnN0YXRpYyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1zLCAtLXNlbGVjdC1pbnN0YW5jZSAgICAgICAgIEJ5IGRlZmF1bHQsIHRoZSBzY3JpcHQgZXhwb3J0cyBhbGwgbmFtZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZXMuIFVzZSB0aGlzIG9wdGlvbiB0byBzZWxlY3QgY3VzdG9tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpcyB2YWx1ZXMgZm9yIGEgc2luZ2xlIGluc3RhbmNlLlxuICAgIC0tbm8tY2xlYW51cCAgICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIFNUQVQgdGFibGUgaXMgZHJvcHBlZCBhbmQgYXhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVJRHMgYXJlIGRlbGV0ZWQgZnJvbSBuYW1lIHRhYmxlLiBVc2UgLS1uby1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhbnVwIHRvIGtlZXAgU1RBVCB0YWJsZSBhbmQgcHJldmVudCBheGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZUlEcyB0byBiZSBkZWxldGVkIGZyb20gbmFtZSB0YWJsZS5cbiAgICAtLW5vLXVwZGF0ZS1uYW1lLXRhYmxlICAgICAgICBQcmV2ZW50IHVwZGF0aW5nIGluc3RhbnRpYXRlZCBmb250cyBgbmFtZWBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS4gSW5wdXQgZm9udHMgbXVzdCBoYXZlIGEgU1RBVCB0YWJsZSB3aXRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXhpcyBWYWx1ZSBUYWJsZXMuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGNvbnZlcnRlciB3ZjJmdFxuXG5Db252ZXJ0cyB3ZWIgZm9udHMgKFdPRkYgYW5kIFdPRkYyKSB0byBTRk5UIGZvbnRzIChUVEYgb3IgT1RGKS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgY29udmVydGVyIHdmMmZ0IFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLWYsIC0tZmxhdm9yIFt3b2ZmfHdvZmYyXSAgICAgQnkgZGVmYXVsdCwgdGhlIHNjcmlwdCBjb252ZXJ0cyBib3RoIHdvZmYgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd29mZjIgZmxhdm9yZWQgd2ViIGZvbnRzIHRvIFNGTlQgZm9udHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoVHJ1ZVR5cGUgb3IgT3BlblR5cGUpLiBVc2UgdGhpcyBvcHRpb24gdG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJ0IG9ubHkgd29mZiBvciB3b2ZmMiBmbGF2b3JlZCB3ZWIgZm9udHMuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgZml4XG5cbkEgc2V0IG9mIGNvbW1hbmRzIHRvIGRldGVjdCBhbmQgYXV0b21hdGljYWxseSBmaXggZm9udCBlcnJvcnMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBbT1BUSU9OU10gQ09NTUFORCBbQVJHU10uLi5cblxuKipPcHRpb25zKio6XG5cbiAgICAtLWhlbHAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4qKkNvbW1hbmRzKio6XG5cbiAgICBjYXJldC1vZmZzZXRcbiAgICBkZWNvbXBvc2UtdHJhbnNmb3JtZWRcbiAgICBkdXBsaWNhdGUtY29tcG9uZW50c1xuICAgIGl0YWxpYy1hbmdsZVxuICAgIGtlcm4tdGFibGVcbiAgICBuYnNwLW1pc3NpbmdcbiAgICBuYnNwLXdpZHRoXG4gICAgb3MyLXJhbmdlc1xuICAgIHN0cmlwLW5hbWVzXG4gICAgdXByaWdodHNcblxuIyMjIGZ0Y2xpIGZpeCBjYXJldC1vZmZzZXRcblxuUmVjYWxjdWxhdGVzIGBoaGVhLmNhcmV0T2Zmc2V0YCB2YWx1ZS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IGNhcmV0LW9mZnNldCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggZGVjb21wb3NlLXRyYW5zZm9ybWVkXG5cbkRlY29tcG9zZXMgY29tcG9zaXRlIGdseXBocyB0aGF0IGhhdmUgdHJhbnNmb3JtZWQgY29tcG9uZW50cy5cblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay90cmFuc2Zvcm1lZF9jb21wb25lbnRzXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGZpeCBkZWNvbXBvc2UtdHJhbnNmb3JtZWQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgZml4IGR1cGxpY2F0ZS1jb21wb25lbnRzXG5cblJlbW92ZXMgZHVwbGljYXRlIGNvbXBvbmVudHMgd2hpY2ggaGF2ZSB0aGUgc2FtZSB4LHkgY29vcmRpbmF0ZXMuXG5cbmZvbnRiYWtlcnkgY2hlY2sgaWQ6IGNvbS5nb29nbGUuZm9udHMvY2hlY2svZ2x5Zl9ub25fdHJhbnNmb3JtZWRfZHVwbGljYXRlX2NvbXBvbmVudHNcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IGR1cGxpY2F0ZS1jb21wb25lbnRzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBpdGFsaWMtYW5nbGVcblxuUmVjYWxjdWxhdGVzIGBwb3N0Lml0YWxpY0FuZ2xlYCwgYGhoZWEuY2FyZXRTbG9wZVJpc2VgLCBgaGhlYS5jYXJldFNsb3BlUnVuYCBhbmQgc2V0cy9jbGVhcnMgdGhlIGl0YWxpYy9vYmxpcXVlIGJpdHNcbmFjY29yZGluZyB0byB0aGUgY2FsY3VsYXRlZCB2YWx1ZXMuIEluIENGRiBmb250cywgYWxzbyBgQ0ZGLnRvcERpY3RJbmRleFswXS5JdGFsaWNBbmdsZWAgaXMgcmVjYWxjdWxhdGVkLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggaXRhbGljLWFuZ2xlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW0sIC0tbW9kZSBJTlRFR0VSIFJBTkdFICAgICAgMTogc2V0cyBvbmx5IHRoZSBpdGFsaWMgYml0cyBhbmQgY2xlYXJzIHRoZSBvYmxpcXVlIGJpdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI6IHNldHMgaXRhbGljIGFuZCBvYmxpcXVlIGJpdHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzOiBzZXRzIG9ubHkgdGhlIG9ibGlxdWUgYml0IGFuZCBjbGVhcnMgaXRhbGljIGJpdHMgIFsxPD14PD0zXVxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXgga2Vybi10YWJsZVxuXG5Tb21lIGFwcGxpY2F0aW9ucyBzdWNoIGFzIE1TIFBvd2VyUG9pbnQgcmVxdWlyZSBrZXJuaW5nIGluZm8gb24gdGhlIGtlcm5cbnRhYmxlLiBNb3JlIHNwZWNpZmljYWxseSwgdGhleSByZXF1aXJlIGEgZm9ybWF0IDAga2VybiBzdWJ0YWJsZSBmcm9tIGEga2VyblxudGFibGUgdmVyc2lvbiAwIHdpdGggb25seSBnbHlwaHMgZGVmaW5lZCBpbiB0aGUgY21hcCB0YWJsZS5cblxuR2l2ZW4gdGhpcywgdGhlIGNvbW1hbmQgZGVsZXRlcyBhbGwga2VybmluZyBwYWlycyBmcm9tIGtlcm4gdjAgc3VidGFibGVzXG53aGVyZSBvbmUgb2YgdGhlIHR3byBnbHlwaHMgaXMgbm90IGRlZmluZWQgaW4gdGhlIGNtYXAgdGFibGUuXG5cbmZvbnRiYWtlcnkgY2hlY2sgaWQ6IGNvbS5nb29nbGUuZm9udHMvY2hlY2sva2Vybl90YWJsZVxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXgga2Vybi10YWJsZSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggbW9ub3NwYWNlXG5cbklmIHRoZSBmYW1pbHkgaXMgbW9ub3NwYWNlZDpcblxuLSBwb3N0LmlzRml4ZWRQaXRjaCBtdXN0IGJlIHNldCB0byBhIG5vbi16ZXJvIHZhbHVlXG4tIE9TLzIucGFub3NlLmJQcm9wb3J0aW9uIG11c3QgYmUgc2V0IHRvIDlcbi0gQ0ZGLmNmZi5Ub3BEaWN0SW5kZXhbMF0uaXNGaXhlZFBpdGNoIG11c3QgYmUgc2V0IHRvIFRydWVcblxuZm9udGJha2VyeSBjaGVjayBpZDogY29tLmdvb2dsZS5mb250cy9jaGVjay9tb25vc3BhY2VcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IG1vbm9zcGFjZSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggbmJzcC1taXNzaW5nXG5cbkNoZWNrcyBpZiB0aGUgZm9udCBoYXMgYSBub24tYnJlYWtpbmcgc3BhY2UgY2hhcmFjdGVyLCBhbmQgaWYgaXQgZG9lc24ndCwgaXQgYWRkcyBvbmUgYnkgZG91YmxlIG1hcHBpbmcgJ3NwYWNlJ1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggbmJzcC1taXNzaW5nIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIGZpeCBuYnNwLXdpZHRoXG5cbkNoZWNrcyBpZiAnbmJzcGFjZScgYW5kICdzcGFjZScgZ2x5cGhzIGhhdmUgdGhlIHNhbWUgd2lkdGguIElmIG5vdCwgY29ycmVjdHMgJ25ic3BhY2UnIHdpZHRoIHRvIG1hdGNoICdzcGFjZScgd2lkdGguXG5cbmZvbnRiYWtlcnkgY2hlY2sgaWQ6IGNvbS5nb29nbGUuZm9udHMvY2hlY2svd2hpdGVzcGFjZV93aWR0aHNcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IG5ic3Atd2lkdGggW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgZml4IG9zMi1yYW5nZXNcblxuR2VuZXJhdGVzIGEgdGVtcG9yYXJ5IFR5cGUgMSBmcm9tIHRoZSBmb250IGZpbGUgdXNpbmcgdHgsIGNvbnZlcnRzIHRoYXQgdG8gYW4gT3BlblR5cGUgZm9udCB1c2luZyBtYWtlb3RmLCByZWFkcyB0aGVcblVuaWNvZGUgcmFuZ2VzIGFuZCBjb2RlcGFnZSByYW5nZXMgZnJvbSB0aGUgdGVtcG9yYXJ5IE9wZW5UeXBlIGZvbnQgZmlsZSwgYW5kIHRoZW4gd3JpdGVzIHRob3NlIHJhbmdlcyB0byB0aGVcbm9yaWdpbmFsIGZvbnQncyBPUy8yIHRhYmxlLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBmaXggb3MyLXJhbmdlcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBmaXggc3RyaXAtbmFtZXNcblxuUmVtb3ZlcyBsZWFkaW5nIGFuZCB0cmFpbGluZyBzcGFjZXMgZnJvbSBhbGwgbmFtZXJlY29yZHMuXG5cbmZvbnRiYWtlcnkgY2hlY2sgaWQ6IGNvbS5nb29nbGUuZm9udHMvY2hlY2svbmFtZS90cmFpbGluZ19zcGFjZXNcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IHN0cmlwLW5hbWVzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuXG4jIyMgZnRjbGkgZml4IHVwcmlnaHRzXG5cbkFzc3VtaW5nIHRoYXQgdGhlIGZvbnQgaXMgY29ycmVjdGx5IHNldCBhcyB1cHJpZ2h0IChpLmUuOiBpdGFsaWMgb2JsaXF1ZVxuYml0cyBhcmUgYWxsIGNsZWFyKSwgdGhlIHNjcmlwdCBzZXRzIHRoZSBmb2xsb3dpbmcgdmFsdWVzOlxuXG4tIHBvc3QuaXRhbGljQW5nbGUgPSAwLjBcbi0gaGhlYS5jYXJldFNsb3BlUmlzZSA9IDFcbi0gaGhlYS5jYXJldFNsb3BlUnVuID0gMFxuLSBoaGVhLmNhcmV0T2Zmc2V0ID0gMFxuLSBDRkYuY2ZmLnRvcERpY3RJbmRleFswXS5JdGFsaWNBbmdsZSA9IDAgKG9ubHkgaWYgdGhlIGZvbnQgaGFzIGEgQ0ZGIHRhYmxlKVxuXG5UaGUgZm9udCBpcyBzYXZlZCBvbmx5IGlmIGF0IGxlYXN0IG9uZSB0YWJsZSBoYXMgY2hhbmdlZC5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgZml4IHVwcmlnaHRzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgaGhlYVxuXG5Db21tYW5kIGxpbmUgaGhlYSB0YWJsZSBlZGl0b3IuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIGhoZWEgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLXJpc2UgSU5URUdFUiAgICAgICAgICAgICAgICBTZXRzIHRoZSBgY2FyZXRTbG9wZVJpc2VgIHZhbHVlLlxuICAgIC0tcnVuIElOVEVHRVIgICAgICAgICAgICAgICAgIFNldHMgdGhlIGBjYXJldFNsb3BlUnVuYCB2YWx1ZS5cbiAgICAtLW9mZnNldCBJTlRFR0VSICAgICAgICAgICAgICBTZXRzIHRoZSBgY2FyZXRPZmZzZXRgIHZhbHVlLlxuICAgIC0tYXNjZW50IElOVEVHRVIgICAgICAgICAgICAgIFNldHMgdGhlIGBhc2NlbnRgIHZhbHVlLlxuICAgIC0tZGVzY2VudCBJTlRFR0VSICAgICAgICAgICAgIFNldHMgdGhlIGBkZXNjZW50YCB2YWx1ZS5cbiAgICAtLWxpbmVnYXAgSU5URUdFUiAgICAgICAgICAgICBTZXRzIHRoZSBgbGluZUdhcGAgdmFsdWUuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgbWV0cmljc1xuXG5WZXJ0aWNhbCBtZXRyaWNzIHRvb2xzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBtZXRyaWNzIFtPUFRJT05TXSBDT01NQU5EIFtBUkdTXS4uLlxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0taGVscCAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbioqQ29tbWFuZHMqKjpcblxuICAgIGFsaWduXG4gICAgY29weVxuICAgIHNldC1saW5lZ2FwXG5cbiMjIyBmdGNsaSBtZXRyaWNzIGFsaWduXG5cbkFsaWducyBhbGwgZm9udHMgc3RvcmVkIGluIElOUFVUX1BBVEggZm9sZGVyIHRvIHRoZSBzYW1lIGJhc2VsaW5lLlxuXG5UbyBhY2hpZXZlIHRoaXMsIHRoZSBzY3JpcHQgZmluZHMgdGhlIG1heGltdW0gYXNjZW5kZXIgYW5kIHRoZSBtaW5pbXVtIGRlc2NlbmRlciB2YWx1ZXMgb2YgdGhlIGZvbnRzIHN0b3JlZCBpbiB0aGVcbklOUFVUX1BBVEggZm9sZGVyIGFuZCBhcHBsaWVzIHRob3NlIHZhbHVlcyB0byBhbGwgZm9udHMuXG5cblRoaXMgY2FuIHByb2R1Y2UgdW5kZXNpcmVkIGVmZmVjdHMgKGFuIGV4YWdnZXJhdGVkIGxpbmUgaGVpZ2h0KSB3aGVuIG9uZSBvciBtb3JlIGZvbnRzIGNvbnRhaW4gc3dhc2hlcywgZm9yIGV4YW1wbGUuIEluXG5zdWNoIGNhc2VzLCBpdCdzIGJldHRlciB0byBjb3B5IHRoZSB2ZXJ0aWNhbCBtZXRyaWNzIGZyb20gYSB0ZW1wbGF0ZSBmb250IHRvIG9uZSBvciBtb3JlIGRlc3RpbmF0aW9uIGZvbnRzIHVzaW5nIHRoZVxuW2BmdGNsaSBtZXRyaWNzIGNvcHlgXSgjZnRjbGktbWV0cmljcy1jb3B5LW1ldHJpY3MpIGNvbW1hbmQuXG5cblNlZSBodHRwczovL2tsdGYuZGUvZG93bmxvYWQvRm9udE1ldHJpY3Mta2x0Zi5wZGYgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIG1ldHJpY3MgYWxpZ24gW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbk9wdGlvbnM6XG5cbiAgICAtLXdpdGgtbGluZWdhcCAgICAgICAgICAgICAgICBCeSBkZWZhdWx0LCBTSUwgbWV0aG9kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGh0dHBzOi8vc2lsbnJzaS5naXRodWIuaW8vRkRCUC9lbi1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVUy9MaW5lX01ldHJpY3MuaHRtbCkgaXMgdXNlZC4gVGhpcyBtZWFuc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQsIGluIE9TLzIgdGFibGUsIHNUeXBvQXNjZW5kZXIgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc1R5cG9EZXNjZW5kZXIgdmFsdWVzIGFyZSBzZXQsIHJlc3BlY3RpdmVseSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcXVhbCB0byBtYXhpbXVtIHJlYWwgYXNjZW5kZXIgYW5kIG1pbmltdW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFsIGRlc2NlbmRlciwgYW5kIHRoZSBzVHlwb0xpbmVHYXAgaXMgc2V0IHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgemVyby4gVXNlICctLXdpdGgtbGluZWdhcCcgdG8gc2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc1R5cG9Bc2NlbmRlciB2YWx1ZSB0byB0aGUgbWF4aW11bSBpZGVhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzY2VuZGVyIChjYWxjdWxhdGVkIGZyb20gbGV0dGVycyBiLCBmLCBmLCBoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGssIGwgYW5kIHQpIGFuZCB0aGUgc1R5cG9EZXNjZW5kZXIgdmFsdWUgdG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgbWluaW11bSBpZGVhbCBkZXNjZW5kZXIgKGNhbGN1bGF0ZWQgZnJvbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlcnMgZywgaiwgcCwgcSBhbmQgeSkuIFRoZSBzVHlwb0xpbmVHYXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGJlIGNhbGN1bGF0ZWQgYXMgZm9sbG93czogKHJlYWwgYXNjZW5kZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArIGFicyhyZWFsIGRlc2NlbmRlcikpIC0gKGlkZWFsIGFzY2VuZGVyICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYnMoaWRlYWwgZGVzY2VuZGVyKSkuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIG1ldHJpY3MgY29weS1tZXRyaWNzXG5cbkNvcGllcyB2ZXJ0aWNhbCBtZXRyaWNzIGZyb20gYSBzb3VyY2UgZm9udCB0byBvbmUgb3IgbW9yZSBkZXN0aW5hdGlvbiBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgbWV0cmljcyBjb3B5IFtPUFRJT05TXVxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1zLCAtLXNvdXJjZS1maWxlIEZJTEUgICAgICBTb3VyY2UgZmlsZS4gVmVydGljYWwgbWV0cmljcyBmcm9tIHRoaXMgZm9udFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGJlIGFwcGxpZWQgdG8gYWxsIGRlc3RpbmF0aW9uIGZvbnRzLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVxdWlyZWRdXG4gICAgLWQsIC0tZGVzdGluYXRpb24gUEFUSCAgICAgIERlc3RpbmF0aW9uIGZpbGUgb3IgZGlyZWN0b3J5LiAgW3JlcXVpcmVkXVxuICAgIC1vLCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBUaGUgb3V0cHV0IGRpcmVjdG9yeSB3aGVyZSB0aGUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBjcmVhdGVkLiBJZiBpdCBkb2Vzbid0IGV4aXN0LCB3aWxsIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZCB0b1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgIEJ5IGRlZmF1bHQsIG9yaWdpbmFsIGhlYWQubW9kaWZpZWQgdmFsdWUgaXMga2VwdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVuIGEgZm9udCBpcyBzYXZlZC4gVXNlIHRoaXMgc3dpdGNoIHRvIHNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkLm1vZGlmaWVkIHRpbWVzdGFtcCB0byBjdXJyZW50IHRpbWUuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIG1vZGlmaWVkIGZpbGVzIGFyZSBvdmVyd3JpdHRlbi4gVXNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgc3dpdGNoIHRvIHNhdmUgdGhlbSB0byBhIG5ldyBmaWxlIChudW1iZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kIG9mIGZpbGUgbmFtZSkuXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgbWV0cmljcyBzZXQtbGluZWdhcFxuXG5Nb2RpZmllcyB0aGUgbGluZSBzcGFjaW5nIG1ldHJpY3MgaW4gb25lIG9yIG1vcmUgZm9udHMuXG5cblRoaXMgaXMgYSBmb3JrIG9mIGZvbnQtbGluZSBieSBTb3VyY2UgRm91bmRyeTogaHR0cHM6Ly9naXRodWIuY29tL3NvdXJjZS1mb3VuZHJ5L2ZvbnQtbGluZVxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBtZXRyaWNzIHNldC1saW5lZ2FwIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXAsIC0tcGVyY2VudCBJTlRFR0VSIFJBTkdFICAgICBBZGp1c3QgZm9udCBsaW5lIHNwYWNpbmcgdG8gJSBvZiBVUE0gdmFsdWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTw9eDw9MTAwOyByZXF1aXJlZF1cbiAgICAtbWZuLCAtLW1vZGlmeS1mYW1pbHktbmFtZSAgICAgIEFkZHMgTEclIHRvIHRoZSBmb250IGZhbWlseSB0byByZWZsZWN0IHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kaWZpZWQgbGluZSBnYXAuXG4gICAgLW8sIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgICAgICBUaGUgb3V0cHV0IGRpcmVjdG9yeSB3aGVyZSB0aGUgb3V0cHV0IGZpbGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmUgdG8gYmUgY3JlYXRlZC4gSWYgaXQgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZCB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wIC8gLS1uby1yZWNhbGMtdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBLZWVwcyB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCeSBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW92ZXJ3cml0ZSAvIC0tbm8tb3ZlcndyaXRlICAgIE92ZXJ3cml0ZXMgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW0gdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBlbmQgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyBmdGNsaSBuYW1lXG5cbkNvbW1hbmQgbGluZSBgbmFtZWAgdGFibGUgZWRpdG9yLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIFtPUFRJT05TXSBDT01NQU5EIFtBUkdTXS4uLlxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0taGVscCAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbioqQ29tbWFuZHMqKjpcblxuICAgIGFwcGVuZFxuICAgIGRlbC1tYWMtbmFtZXNcbiAgICBkZWwtbmFtZXNcbiAgICBmaW5kLXJlcGxhY2VcbiAgICBzZXQtbmFtZVxuXG4jIyMgZnRjbGkgbmFtZSBhcHBlbmRcblxuQXBwZW5kcyBhIHByZWZpeCwgb3IgYSBzdWZmaXggdG8gdGhlIHNwZWNpZmllZCBuYW1lcmVjb3Jkc1xuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIGFwcGVuZCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1uLCAtLW5hbWUtaWQgSU5URUdFUiAgICAgICAgIE5hbWVJRCB3aGVyZSB0byBhcHBlbmQgdGhlIHByZWZpeC9zdWZmaXguIFRoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb24gY2FuIGJlIHJlcGVhdGVkIHRvIHByZXBlbmQvYXBwZW5kIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZyB0byBtdWx0aXBsZSBuYW1lcmVjb3Jkcy4gRm9yIGV4YW1wbGU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLW4gMSAtbiAyIC1uIDE2IC1uIDE3ICBbcmVxdWlyZWRdXG4gICAgLXAsIC0tcGxhdGZvcm0taWQgWzB8MXwzXSAgICAgVXNlIHRoaXMgb3B0aW9uIHRvIGFkZCB0aGUgcHJlZml4L3N1ZmZpeCBvbmx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIG5hbWVyZWNvcmRzIG1hdGNoaW5nIHRoZSBwcm92aWRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXRmb3JtSUQuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwOiBVbmljb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTogTWFjaW50b3NoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzogV2luZG93c1xuICAgIC1sLCAtLWxhbmd1YWdlLXN0cmluZyBURVhUICAgIFVzZSB0aGlzIG9wdGlvbiB0byBhcHBlbmQgdGhlIHByZWZpeC9zdWZmaXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmx5IHRvIHRoZSBuYW1lcmVjb3JkcyBtYXRjaGluZyB0aGUgcHJvdmlkZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSBzdHJpbmcuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWUgZXBpbG9nIGZvciBhIGxpc3Qgb2YgdmFsaWQgbGFuZ3VhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmdzLlxuICAgIC0tcHJlZml4IFRFWFQgICAgICAgICAgICAgICAgIFRoZSBzdHJpbmcgdG8gYmUgcHJlcGVuZGVkIHRvIHRoZSBuYW1lcmVjb3Jkc1xuICAgIC0tc3VmZml4IFRFWFQgICAgICAgICAgICAgICAgIFRoZSBzdWZmaXggdG8gYXBwZW5kIHRvIHRoZSBuYW1lcmVjb3Jkc1xuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBuYW1lIGRlbC1tYWMtbmFtZXNcblxuRGVsZXRlcyBhbGwgdGhlIE1hY2ludG9zaCBuYW1lcmVjb3JkcyBmcm9tIHRoZSBuYW1lIHRhYmxlLCBleGNlcHQgbmFtZUlEcyAxLCAyLCA0LCA1LCBhbmQgNi5cblxuQWNjb3JkaW5nIHRvIEFwcGxlIChodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZm9udHMvVHJ1ZVR5cGUtUmVmZXJlbmNlLU1hbnVhbC9STTA2L0NoYXA2bmFtZS5odG1sKSwgXCJuYW1lcyB3aXRoXG5wbGF0Zm9ybUlEIDEgd2VyZSByZXF1aXJlZCBieSBlYXJsaWVyIHZlcnNpb25zIG9mIG1hY09TLiBJdHMgdXNlIG9uIG1vZGVybiBwbGF0Zm9ybXMgaXMgZGlzY291cmFnZWQuIFVzZSBuYW1lcyB3aXRoXG5wbGF0Zm9ybUlEIDMgaW5zdGVhZCBmb3IgbWF4aW11bSBjb21wYXRpYmlsaXR5LiBTb21lIGxlZ2FjeSBzb2Z0d2FyZSwgaG93ZXZlciwgbWF5IHN0aWxsIHJlcXVpcmUgbmFtZXMgd2l0aFxucGxhdGZvcm1JRCAxLCBwbGF0Zm9ybVNwZWNpZmljSUQgMFwiLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIGRlbC1tYWMtbmFtZXMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWRlbC1hbGwgICAgICAgICAgICAgICAgICAgICBEZWxldGVzIGFsc28gbmFtZUlEcyAxLCAyLCA0LCA1IGFuZCA2LlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBuYW1lIGRlbC1uYW1lc1xuXG5EZWxldGVzIG9uZSBvciBtb3JlIG5hbWVyZWNvcmRzLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBuYW1lIGRlbC1uYW1lcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1uLCAtLW5hbWUtaWQgSU5URUdFUiAgICAgICAgIE5hbWVJRChzKSB0byBkZWxldGUuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGlzIG9wdGlvbiBjYW4gYmUgcmVwZWF0ZWQgdG8gZGVsZXRlIG11bHRpcGxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXJlY29yZHMgYXQgb25jZS4gRm9yIGV4YW1wbGU6IC1uIDEgLW4gMiAtblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYgIFtyZXF1aXJlZF1cbiAgICAtcCwgLS1wbGF0Zm9ybS1pZCBbMHwxfDNdICAgICBQbGF0Zm9ybUlEIG9mIHRoZSBuYW1lcmVjb3JkcyB0byBkZWxldGU6XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwOiBVbmljb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTogTWFjaW50b3NoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzogV2luZG93c1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgbm8gcGxhdGZvcm0gaXMgc3BlY2lmaWVkLCBuYW1lcmVjb3JkcyB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgZGVsZXRlZCBmcm9tIGFsbCB0YWJsZXMuXG4gICAgLWwsIC0tbGFuZ3VhZ2Utc3RyaW5nIFRFWFQgICAgVXNlIHRoaXMgb3B0aW9uIHRvIGZpbHRlciB0aGUgbmFtZXJlY29yZHMgdG9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgYnkgbGFuZ3VhZ2Ugc3RyaW5nIChmb3IgZXhhbXBsZTogJ2l0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGUnLCAnbmwnKS4gU2VlIGVwaWxvZyBmb3IgYSBsaXN0IG9mIHZhbGlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2Ugc3RyaW5ncy5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgbmFtZSBmaW5kLXJlcGxhY2VcblxuRmluZHMgYSBzdHJpbmcgaW4gdGhlIHNwZWNpZmllZCBuYW1lcmVjb3JkcyBhbmQgcmVwbGFjZXMgaXQgd2l0aCBhIG5ldyBzdHJpbmdcblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgbmFtZSBmaW5kLXJlcGxhY2UgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3MsIC0tb2xkLXN0cmluZyBURVhUICAgICAgICAgVGhlIHN0cmluZyB0byBiZSByZXBsYWNlZCAgW3JlcXVpcmVkXVxuICAgIC1ucywgLS1uZXctc3RyaW5nIFRFWFQgICAgICAgICBUaGUgc3RyaW5nIHRvIHJlcGxhY2UgdGhlIG9sZCBzdHJpbmcgd2l0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVxdWlyZWRdXG4gICAgLW4sIC0tbmFtZS1pZCBJTlRFR0VSICAgICAgICAgIG5hbWVJRHMgd2hlcmUgdG8gc2VhcmNoIGFuZCByZXBsYWNlIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmcuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBzdHJpbmcgd2lsbCBiZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBsYWNlZCBpbiBhbGwgbmFtZXJlY29yZHMuIFRoaXMgb3B0aW9uIGNhblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSByZXBlYXRlZCB0byBwZXJmb3JtIHNlYXJjaCBhbmQgcmVwbGFjZSBpblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZSBuYW1lcmVjb3JkcyAoZS5nLjogLW4gMSAtbiA0IC1uIDYpXG4gICAgLXgsIC0tZXhjbHVkZS1uYW1lLWlkIElOVEVHRVIgIE5hbWVJRCB0byBpZ25vcmUuIFRoZSBzcGVjaWZpZWQgbmFtZUlEIHdvbid0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNoYW5nZWQuIFRoaXMgb3B0aW9uIGNhbiBiZSByZXBlYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZSB0aW1lcyAoZS5nLjogLWV4IDMgLWV4IDUgLWV4IDE2KS5cbiAgICAtcCwgLS1wbGF0Zm9ybS1pZCBbMXwzXSAgICAgICAgcGxhdGZvcm0gaWQgWzE6IG1hY2ludG9zaCwgMzogd2luZG93c10uIElmIG5vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXRmb3JtIGlzIHNwZWNpZmllZCwgdGhlIHN0cmluZyB3aWxsIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VkIGluIGJvdGggdGFibGVzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZCB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSBuYW1lIHNldC1uYW1lXG5cbkFkZHMgYSBuYW1lcmVjb3JkIHRvIG9uZSBvciBtb3JlIGZvbnQgZmlsZXMuXG5cbklmIHRoZSBuYW1lcmVjb3JkIGlzIGFscmVhZHkgcHJlc2VudCwgaXQgd2lsbCBiZSBvdmVyd3JpdHRlbi5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgbmFtZSBzZXQtbmFtZSBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1uLCAtLW5hbWUtaWQgSU5URUdFUiBSQU5HRSAgIFRoZSBuYW1lSUQgb2YgdGhlIG5hbWVyZWNvcmQgdG8gYWRkLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFswPD14PD0zMjc2NzsgcmVxdWlyZWRdXG4gICAgLXMsIC0tc3RyaW5nIFRFWFQgICAgICAgICAgICAgU3RyaW5nIHRvIHdyaXRlIGluIHRoZSBuYW1lcmVjb3JkLiAgW3JlcXVpcmVkXVxuICAgIC1wLCAtLXBsYXRmb3JtLWlkIFsxfDNdICAgICAgIFVzZSB0aGlzIG9wdGlvbiB0byB3cml0ZSB0aGUgbmFtZXJlY29yZCBvbmx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gdGhlIHNwZWNpZmllZCB0YWJsZTpcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE6IE1hY2ludG9zaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM6IFdpbmRvd3NcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIG5vdCBzcGVjaWZpZWQsIG5hbWVyZWNvcmQgd2lsbCBiZSB3cml0dGVuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYm90aCB0YWJsZXMuXG4gICAgLWwsIC0tbGFuZ3VhZ2Utc3RyaW5nIFRFWFQgICAgVXNlIHRoaXMgb3B0aW9uIHRvIHdyaXRlIHRoZSBuYW1lcmVjb3JkIGluIGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSBkaWZmZXJlbnQgdGhhbiAnZW4nIChlLmcuOiAnaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdubCcsICdkZScpLlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VlIGVwaWxvZyBmb3IgYSBsaXN0IG9mIHZhbGlkIGxhbmd1YWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5ncyAgW2RlZmF1bHQ6IGVuXVxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIG9zMlxuXG5Db21tYW5kIGxpbmUgYE9TLzJgIHRhYmxlIGVkaXRvci5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgb3MyIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXZlciwgLS12ZXJzaW9uIElOVEVHRVIgUkFOR0UgICBVcGdyYWRlcyBgT1MvMmAgdGFibGUgdmVyc2lvbi4gIFsxPD14PD01XVxuICAgIC13Z2gsIC0td2VpZ2h0IElOVEVHRVIgUkFOR0UgICAgU2V0cyBgdXNXZWlnaHRDbGFzc2AgdmFsdWUuICBbMTw9eDw9MTAwMF1cbiAgICAtd2R0LCAtLXdpZHRoIElOVEVHRVIgUkFOR0UgICAgIFNldHMgYHVzV2lkdGhDbGFzc2AgdmFsdWUuICBbMTw9eDw9OV1cbiAgICAtaXQsIC0taXRhbGljIC8gLW5vLWl0LCAtLW5vLWl0YWxpY1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgdGhlIElUQUxJQyBiaXRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYGZzU2VsZWN0aW9uYCBiaXQgMCBhbmQgYGhlYWRgIHRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgbWFjU3R5bGVgIGJpdCAxKS5cbiAgICAtYmQsIC0tYm9sZCAvIC1uby1iZCwgLS1uby1ib2xkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgQk9MRCBiaXRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYE9TLzIuZnNTZWxlY3Rpb25gIGJpdCA1IGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYGhlYWQubWFjU3R5bGVgIGJpdCAwKS5cbiAgICAtcmcsIC0tcmVndWxhciAgICAgICAgICAgICAgICAgIFNldHMgUkVHVUxBUiAoYGZzU2VsZWN0aW9uYCBiaXQpIDYgYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhcnMgQk9MRCAoYGZzU2VsZWN0aW9uYCBiaXQgNSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBoZWFkLm1hY1N0eWxlYCBiaXQgMCkgYW5kIElUQUxJQ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGBmc1NlbGVjdGlvbmAgYml0IDAsIGBoZWFkLm1hY1N0eWxlYCBiaXQgMSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpdHMuIFRoaXMgaXMgZXF1aXZhbGVudCB0byBgLS1uby1ib2xkIC0tbm8tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGFsaWNgLlxuICAgIC1vYmwsIC0tb2JsaXF1ZSAvIC1uby1vYmwsIC0tbm8tb2JsaXF1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgdGhlIE9CTElRVUUgYml0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYGZzU2VsZWN0aW9uYCBiaXQgOSkuXG4gICAgLXV0bSwgLS11c2UtdHlwby1tZXRyaWNzIC8gLW5vLXV0bSwgLS1uby11c2UtdHlwby1tZXRyaWNzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgVVNFX1RZUE9fTUVUUklDUyBiaXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChgZnNTZWxlY3Rpb25gIGJpdCA3KS5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgc2V0LCBpdCBpcyBzdHJvbmdseSByZWNvbW1lbmRlZCB0aGF0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBsaWNhdGlvbnMgdXNlIGBPUy8yLnNUeXBvQXNjZW5kZXJgIC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBPUy8yLnNUeXBvRGVzY2VuZGVyYCArICBgT1MvMi5zVHlwb0xpbmVHYXBgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcyB0aGUgZGVmYXVsdCBsaW5lIHNwYWNpbmcgZm9yIHRoZSBmb250LlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWU6IGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXMvdHlwb2dyYXBoeS9vcGVudHlwZS9zcGVjL29zMiNmc3NlbGVjdGlvblxuICAgIC13d3MsIC0td3dzLWNvbnNpc3RlbnQgLyAtbm8td3dzLCAtLW5vLXd3cy1jb25zaXN0ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXRzIG9yIGNsZWFycyB0aGUgV1dTIGJpdCAoYGZzU2VsZWN0aW9uYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYml0IDgpLlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiB0aGUgYE9TLzIuZnNTZWxlY3Rpb25gIGJpdCBpcyBzZXQsIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udCBoYXMgYG5hbWVgIHRhYmxlIHN0cmluZ3MgY29uc2lzdGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBhIHdlaWdodC93aWR0aC9zbG9wZSBmYW1pbHkgd2l0aG91dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyaW5nIHVzZSBvZiBuYW1lIElEcyAyMSBhbmQgMjIuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZTogaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cy90eXBvZ3JhcGh5L29wZW50eXBlL3NwZWMvb3MyI2Zzc2VsZWN0aW9uXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFsc286IGh0dHBzOi8vdHlwZWRyYXdlcnMuY29tL2Rpc2N1c3Npb24vMzg1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3L2ZvbnRsYWItNy13aW5kb3dzLXJlYWRzLWV4cG9ydGVkLWZvbnQtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLWRpZmZlcmVudGx5XG4gICAgLXZlbmQsIC0tYWNoLXZlbmQtaWQgVEVYVCAgICAgICBTZXRzIHRoZSBgYWNoVmVuZElEYCB0YWcgKHZlbmRvcidzIGZvdXItXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgaWRlbnRpZmllcikuXG4gICAgLWVsLCAtLWVtYmVkLWxldmVsIFswfDJ8NHw4XSAgICBTZXRzL2NsZWFycyBgZnNUeXBlYCBiaXRzIDAtM1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKEVNQkVERElOR19MRVZFTCkuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDA6IEluc3RhbGxhYmxlIGVtYmVkZGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjogUmVzdHJpY3RlZCBMaWNlbnNlIGVtYmVkZGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDogUHJldmlldyAmIFByaW50IGVtYmVkZGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgODogRWRpdGFibGUgZW1iZWRkaW5nXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZTogaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cy90eXBvZ3JhcGh5L29wZW50eXBlL3NwZWMvb3MyI2ZzdHlwZVxuICAgIC1ucywgLS1uby1zdWJzZXR0aW5nIC8gLWFzLCAtLWFsbG93LXN1YnNldHRpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNldHMgb3IgY2xlYXJzIGBmc1R5cGVgIGJpdCA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoTk9fU1VCU0VUVElORykuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdoZW4gdGhpcyBiaXQgaXMgc2V0LCB0aGUgZm9udCBtYXkgbm90IGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzZXR0ZWQgcHJpb3IgdG8gZW1iZWRkaW5nLiBPdGhlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW1iZWRkaW5nIHJlc3RyaWN0aW9ucyBzcGVjaWZpZWQgaW4gYml0cyAwLTNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCA5IGFsc28gYXBwbHkuXG4gICAgLWJlbywgLS1iaXRtYXAtZW1iZWRkaW5nLW9ubHkgLyAtbm8tYmVvLCAtLW5vLWJpdG1hcC1lbWJlZGRpbmctb25seVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgYGZzVHlwZWAgYml0IDlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChCSVRNQVBfRU1CRURESU5HX09OTFkpLlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXaGVuIHRoaXMgYml0IGlzIHNldCwgb25seSBiaXRtYXBzIGNvbnRhaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gdGhlIGZvbnQgbWF5IGJlIGVtYmVkZGVkLiBObyBvdXRsaW5lIGRhdGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heSBiZSBlbWJlZGRlZC4gSWYgdGhlcmUgYXJlIG5vIGJpdG1hcHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZSBpbiB0aGUgZm9udCwgdGhlbiB0aGUgZm9udCBpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2lkZXJlZCB1bmVtYmVkZGFibGUgYW5kIHRoZSBlbWJlZGRpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2VzIHdpbGwgZmFpbC4gT3RoZXIgZW1iZWRkaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN0cmljdGlvbnMgc3BlY2lmaWVkIGluIGJpdHMgMC0zIGFuZCA4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHNvIGFwcGx5LlxuICAgIC0tcmVjYWxjLXVuaWNvZGUtcmFuZ2VzICAgICAgICAgUmVjYWxjdWxhdGVzIHRoZSBgdWxVbmljb2RlUmFuZ2UqYCB2YWx1ZXMuXG4gICAgLS1yZWNhbGMtY29kZXBhZ2UtcmFuZ2VzICAgICAgICBSZWNhbGN1bGF0ZXMgYHVsQ29kZVBhZ2VSYW5nZTFgIGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYHVsQ29kZVBhZ2VSYW5nZTJgIHZhbHVlcy5cbiAgICAtLXJlY2FsYy14LWhlaWdodCAgICAgICAgICAgICAgIFJlY2FsY3VsYXRlcyBgc3hIZWlnaHRgIHZhbHVlLlxuICAgIC0tcmVjYWxjLWNhcC1oZWlnaHQgICAgICAgICAgICAgUmVjYWxjdWxhdGVzIGBzQ2FwSGVpZ2h0YCB2YWx1ZS5cbiAgICAtLXJlY2FsYy1pdGFsaWMtYml0cyAgICAgICAgICAgIFNldHMgb3IgY2xlYXJzIHRoZSBpdGFsaWMgYml0cyBpblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT1MvMi5mc1NlbGVjdGlvbiBhbmQgaW4gaGVhZC5tYWNTdHlsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY29yZGluZyB0byB0aGUgYGl0YWxpY0FuZ2xlYCB2YWx1ZSBpblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYHBvc3RgIHRhYmxlLiBJZiBgaXRhbGljQW5nbGVgIHZhbHVlIGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlciB0aGFuIDAuMCwgaXRhbGljIGJpdHMgd2lsbCBiZSBzZXQuIElmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgaXRhbGljQW5nbGVgIHZhbHVlIGlzIDAuMCwgaXRhbGljIGJpdHMgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY2xlYXJlZC5cbiAgICAtLXJlY2FsYy1tYXgtY29udGV4dCAgICAgICAgICAgIFJlY2FsY3VsYXRlcyBgdXNNYXhDb250ZXh0YCB2YWx1ZS5cbiAgICAtLWltcG9ydC11bmljb2RlcyBGSUxFICAgICAgICAgIEltcG9ydHMgYHVsVW5pY29kZVJhbmdlcypgIGZyb20gYSBzb3VyY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZCB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJ5IGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgcG9zdFxuXG5Db21tYW5kIGxpbmUgYHBvc3RgIHRhYmxlIGVkaXRvci5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgcG9zdCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0taXRhbGljLWFuZ2xlIEZMT0FUIFJBTkdFICAgICAgU2V0cyB0aGUgYGl0YWxpY0FuZ2xlYCB2YWx1ZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFstOTAuMDw9eDw9OTAuMF1cbiAgICAtLXVsLXBvc2l0aW9uIElOVEVHRVIgICAgICAgICAgIFNldHMgdGhlIGB1bmRlcmxpbmVQb3NpdGlvbmAgdmFsdWUuXG4gICAgLS11bC10aGlja25lc3MgSU5URUdFUiAgICAgICAgICBTZXRzIHRoZSBgdW5kZXJsaW5lVGhpY2tuZXNzYCB2YWx1ZS5cbiAgICAtLWZpeGVkLXBpdGNoIC8gLS1uby1maXhlZC1waXRjaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0cyBvciBjbGVhcnMgdGhlIGBpc0ZpeGVkUGl0Y2hgIHZhbHVlLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgICAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWxsIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZWQgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCeSBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIGZ0Y2xpIHByaW50XG5cblByaW50cyB2YXJpb3VzIGZvbnQncyBpbmZvcm1hdGlvbi5cblxuKipVc2FnZSoqOlxuZnRjbGkgcHJpbnQgW09QVElPTlNdIENPTU1BTkQgW0FSR1NdLi4uXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuKipDb21tYW5kcyoqOlxuXG4gICAgZm9udC1pbmZvXG4gICAgZm9udC1uYW1lc1xuICAgIGZvbnRzLWxpc3RcbiAgICBpbnN0YW5jZXNcbiAgICBvczItdGFibGVcblxuIyMjIGZ0Y2xpIHByaW50IGZvbnQtaW5mb1xuXG5QcmludHMgZGV0YWlsZWQgZm9udCBpbmZvcm1hdGlvbi5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgcHJpbnQgZm9udC1pbmZvIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHByaW50IGZvbnQtbmFtZXNcblxuUHJpbnRzIHRoZSBgbmFtZWAgdGFibGUgYW5kLCBpZiB0aGUgZm9udCBpcyBDRkYsIHRoZSBuYW1lcyBpbiB0aGUgYENGRmAgdGFibGUgdG9wRGljdC5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgcHJpbnQgZm9udC1uYW1lcyBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1tbCwgLS1tYXgtbGluZXMgSU5URUdFUiAgTWF4aW11bSBudW1iZXIgb2YgbGluZXMgdG8gYmUgcHJpbnRlZCBmb3IgZWFjaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXJlY29yZFxuICAgIC1tLCAtLW1pbmltYWwgICAgICAgICAgICAgUHJpbnRzIGEgbWluaW1hbCBzZXQgb2YgbmFtZXJlY29yZHMsIG9taXR0aW5nIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25lcyB3aXRoIG5hbWVJRCBub3QgaW4gMSwgMiwgMywgNCwgNSwgNiwgMTYsIDE3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTgsICAyMSwgMjIsIDI1XG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHByaW50IGZvbnRzLWxpc3RcblxuUHJpbnRzIGEgbGlzdCBvZiBmb250cyB3aXRoIGJhc2ljIGluZm9ybWF0aW9uLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSBwcmludCBmb250cy1saXN0IFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHByaW50IGluc3RhbmNlc1xuXG5QcmludHMgYSB0YWJsZSBvZiB0aGUgbmFtZWQgaW5zdGFuY2VzIG9mIGEgdmFyaWFibGUgZm9udC5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgcHJpbnQgaW5zdGFuY2VzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHByaW50IG9zMi10YWJsZVxuXG5QcmludHMgdGhlIGBPUy8yYCB0YWJsZS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgcHJpbnQgb3MyLXRhYmxlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1oZWxwICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMgZnRjbGkgdXRpbHNcblxuTWlzY2VsbGFuZW91cyB1dGlsaXRpZXMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIFtPUFRJT05TXSBDT01NQU5EIFtBUkdTXS4uLlxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC0taGVscCAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbioqQ29tbWFuZHMqKjpcblxuICAgIGFkZC1kc2lnXG4gICAgY2ZmLWF1dG9oaW50XG4gICAgY2ZmLWNoZWNrLW91dGxpbmVzXG4gICAgY2ZmLWRlaGludFxuICAgIGNmZi1kZXN1YnJcbiAgICBjZmYtc3ViclxuICAgIGZvbnQtb3JnYW5pemVyXG4gICAgZm9udC1yZW5hbWVyXG4gICAgc2NhbGUtdXBtXG4gICAgc2V0LXJldmlzaW9uXG4gICAgdHRmLWF1dG9oaW50XG4gICAgdHRmLWRlaGludFxuICAgIHR0Zi1yZW1vdmUtb3ZlcmxhcHNcblxuIyMjIGZ0Y2xpIHV0aWxzIGFkZC1kc2lnXG5cbkFkZHMgYSBkdW1teSBEU0lHIHRhYmxlIHRvIGZvbnRzLCB1bmxlc3MgdGhlIHRhYmxlIGlzIGFscmVhZHkgcHJlc2VudC4gV09GRjIgZmxhdm9yZWQgZm9udHMgYXJlIGlnbm9yZWQsIHNpbmNlIGVuY29kZXJzXG5tdXN0IHJlbW92ZSB0aGUgRFNJRyB0YWJsZSBmcm9tIHdvZmYyIGZvbnQgZGF0YS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgYWRkLWRzaWcgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgY2ZmLWF1dG9oaW50XG5cbkF1dG9oaW50cyBDRkYgZm9udHMgd2l0aCBwc2F1dG9oaW50LlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBjZmYtYXV0b2hpbnQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLW9wdGltaXplIC8gLS1uby1vcHRpbWl6ZSAgICBPcHRpbWl6ZSB0aGUgaGludGVkIGZvbnQgYnkgc3BlY2lhbGl6aW5nIHRoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJzdHJpbmdzIGFuZCBhcHBseWluZyBzdWJyb3V0aW5lcy5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgY2ZmLWNoZWNrLW91dGxpbmVzXG5cblBlcmZvcm1zIGBhZmRrby5jaGVja291dGxpbmVzdWZvYCBvdXRsaW5lIHF1YWxpdHkgY2hlY2tzIGFuZCBvdmVybGFwcyByZW1vdmFsLiBTdXBwb3J0cyBDRkYgZm9udHMgb25seS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgY2ZmLWNoZWNrLW91dGxpbmVzIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIGNmZi1kZWhpbnRcblxuRHJvcHMgaGludGluZyBmcm9tIENGRiBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgY2ZmLWRlaGludCBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBjZmYtZGVzdWJyXG5cbkRlc291YnJvdXRpbml6ZSBDRkYgZm9udHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIGNmZi1kZXN1YnIgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgY2ZmLXN1YnJcblxuU3Vicm91dGluaXplIENGRiBmb250cy5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgY2ZmLXN1YnIgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtb3V0LCAtLW91dHB1dC1kaXIgRElSRUNUT1JZICBTcGVjaWZ5IHRoZSBkaXJlY3Rvcnkgd2hlcmUgb3V0cHV0IGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGJlIHNhdmVkLiBJZiBvdXRwdXRfZGlyIGRvZXNuJ3QgZXhpc3QsIHdpbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBjcmVhdGVkLiBJZiBub3Qgc3BlY2lmaWVkLCBmaWxlcyBhcmUgc2F2ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byB0aGUgc2FtZSBmb2xkZXIuXG4gICAgLS1yZWNhbGMtdGltZXN0YW1wICAgICAgICAgICAgS2VlcCB0aGUgb3JpZ2luYWwgZm9udCAnbW9kaWZpZWQnIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChoZWFkLm1vZGlmaWVkKSBvciBzZXQgaXQgdG8gY3VycmVudCB0aW1lLiBCeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQsIG9yaWdpbmFsIHRpbWVzdGFtcCBpcyBrZXB0LlxuICAgIC0tbm8tb3ZlcndyaXRlICAgICAgICAgICAgICAgIE92ZXJ3cml0ZSBleGlzdGluZyBvdXRwdXQgZmlsZXMgb3Igc2F2ZSB0aGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYSBuZXcgZmlsZSAobnVtYmVycyBhcmUgYXBwZW5kZWQgYXQgdGhlIGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGZpbGUgbmFtZSkuIEJ5IGRlZmF1bHQsIGZpbGVzIGFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0dGVuLlxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgZGVsLXRhYmxlXG5cbkRlbGV0ZXMgdGhlIHRhYmxlcyBzcGVjaWZpZWQgaW4gdGhlIHRhYmxlX3RhZyBhcmd1bWVudChzKS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgZGVsLXRhYmxlIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXQsIC0tdGFibGUtdGFnIFRFWFQgICAgICAgICAgVGFibGVUYWcgb2YgdGhlIHRhYmxlKHMpIHRvIGRlbGV0ZS4gQ2FuIGJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwZWF0ZWQgdG8gZGVsZXRlIG11bHRpcGxlIHRhYmxlcyBhdCBvbmNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3JlcXVpcmVkXVxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbiMjIyBmdGNsaSB1dGlscyBmb250LW9yZ2FuaXplclxuXG5Pcmdhbml6ZXMgZm9udHMgYnkgbW92aW5nIHRoZW0gaW50byBhIHN1YmRpcmVjdG9yeSBuYW1lZCBhZnRlciB0aGUgZm9udCdzIGZhbWlseSBuYW1lLCBhbmQgZXZlbnR1YWxseSBhIHN1YmRpcmVjdG9yeVxubmFtZWQgYWZ0ZXIgdGhlIGZvbnQncyBleHRlbnNpb24gYW5kIHZlcnNpb24uXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIGZvbnQtb3JnYW5pemVyIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLS1yZW5hbWUtc291cmNlIFsxfDJ8M3w0fDVdICBSZW5hbWVzIHRoZSBmb250IGZpbGVzIGFjY29yZGluZyB0byB0aGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVkIHNvdXJjZSBzdHJpbmcocykuIFNlZSBmdGNsaSB1dGlsc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1yZW5hbWVyLlxuICAgIC1leHQsIC0tZXh0ZW5zaW9uICAgICAgICAgICAgU29ydHMgZm9udHMgYnkgZXh0ZW5zaW9uLlxuICAgIC12ZXIsIC0tdmVyc2lvbiAgICAgICAgICAgICAgU29ydHMgZm9udHMgYnkgdmVyc2lvbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgIFNob3cgdGhpcyBtZXNzYWdlIGFuZCBleGl0LlxuXG4jIyMgZnRjbGkgdXRpbHMgZm9udC1yZW5hbWVyXG5cblRha2VzIGEgcGF0aCB0byBhIHNpbmdsZSBmb250IGZpbGUgb3IgZGlyZWN0b3J5IG9mIGZvbnQgZmlsZXMsIGV4dHJhY3RzIGVhY2ggZm9udCdzIG1ldGFkYXRhIGFjY29yZGluZyB0byB0aGVcbmAtLXNvdXJjZWAgcGFyYW1ldGVyIHBhc3NlZCBieSB0aGUgdXNlciwgYW5kIHJlbmFtZXMgdGhlIGZvbnQgZmlsZSB0byBtYXRjaCB0aGUgbWV0YWRhdGEsIGFkZGluZyB0aGUgY29ycmVjdFxuZXh0ZW5zaW9uLlxuXG4qKlVzYWdlKio6XG5cbiAgICBmdGNsaSB1dGlscyBmb250LXJlbmFtZXIgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtcywgLS1zb3VyY2UgWzF8MnwzfDR8NV0gIFRoZSBzb3VyY2Ugc3RyaW5nKHMpIGZyb20gd2hpY2ggdG8gZXh0cmFjdCB0aGUgbmV3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlIG5hbWUuIERlZmF1bHQgaXMgMSAoRmFtaWx5TmFtZS1TdHlsZU5hbWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlZCBhbHNvIGFzIGZhbGxiYWNrIG5hbWUgd2hlbiA0IG9yIDUgYXJlIHBhc3NlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0IHRoZSBmb250IGlzIFRydWVUeXBlXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE6IEZhbWlseU5hbWUtU3R5bGVOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyOiBQb3N0U2NyaXB0IE5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM6IEZ1bGwgRm9udCBOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0OiBDRkYgVG9wRGljdCBmb250TmFtZXMgKENGRiBmb250cyBvbmx5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTogQ0ZGIFRvcERpY3QgRnVsbE5hbWUgKENGRiBmb250cyBvbmx5KVxuICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cblxuIyMjIGZ0Y2xpIHV0aWxzIHNjYWxlLXVwbVxuXG5DaGFuZ2UgdGhlIHVuaXRzLXBlci1FTSBvZiBmb250cy5cblxuSGludGluZyBpcyByZW1vdmVkIGZyb20gc2NhbGVkIFRydWVUeXBlIGZvbnRzIHRvIGF2b2lkIGJhZCByZXN1bHRzLiBZb3UgbWF5XG5jb25zaWRlciB0byB1c2UgYGZ0Y2xpIHV0aWxzIHR0Zi1hdXRvaGludGAgdG8gaGludCB0aGUgc2NhbGVkIGZvbnRzLiBJblxuYWRkaXRpb24sIENGRiBzY2FsZWQgZm9udHMgYXJlIG5vdCBzdWJyb3V0aW5pemVkLiBTdWJyb3V0aW5lcyBjYW4gYmUgYXBwbGllZFxudXNpbmcgdGhlIGBmdGNsaSB1dGlscyBjZmYtc3VicmAgY29tbWFuZC5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgc2NhbGUtdXBtIFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLXVwbSBJTlRFR0VSICAgICAgICAgICAgICAgICAgTmV3IFVQTSB2YWx1ZSAgW2RlZmF1bHQ6IDEwMDBdXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIHNldC1yZXZpc2lvblxuXG5TZXRzIGBbaGVhZF0uZm9udFJldmlzaW9uYCBhbmQgYENGRi5jZmYudG9wRGljdEluZGV4WzBdYC52ZXJzaW9uIHZhbHVlcy5cblxuT3B0aW9uYWxseSwgYWxzbyBuYW1lSUQgMyAoVW5pcXVlIGlkZW50aWZpZXIpIGFuZCBuYW1lSUQgNSAoVmVyc2lvbiBzdHJpbmcpXG5jYW4gYmUgcmVjYWxjdWxhdGVkIGJ5IHVzaW5nIC0tdW5pcXVlLWlkZW50aWZpZXIgYW5kIC0tdmVyc2lvbi1zdHJpbmdcbm9wdGlvbnMuIEV2ZW4gaWYgVW5pcXVlIGlkZW50aWZpZXIgYW5kIFZlcnNpb24gc3RyaW5nIHNob3VsZCBiZSBjaGFuZ2VkXG5hY2NvcmRpbmcgdG8gdGhlIG5ldyB2ZXJzaW9uLCB0aGV5IGFyZSBvcHRpb25hbCB0byBsZWF2ZSBjb250cm9sIHRvIHRoZVxudXNlciwgd2hvIGNvdWxkIGNob29zZSB0byBzZXQgdGhvc2UgbmFtZXMgbWFudWFsbHkgd2l0aCBgZnRjbGkgbmFtZSBzZXQtbmFtZWBcbm9yIGBmdGNsaSBuYW1lIGZpbmQgcmVwbGFjZWAgY29tbWFuZHMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIHNldC1yZXZpc2lvbiBbT1BUSU9OU10gSU5QVVRfUEFUSFxuXG4qKk9wdGlvbnMqKjpcblxuICAgIC1tYWpvciBJTlRFR0VSIFJBTkdFICAgICAgICAgIE1ham9yIHZlcnNpb24gIFswPD14PD05OTldXG4gICAgLW1pbm9yIElOVEVHRVIgUkFOR0UgICAgICAgICAgTWlub3IgdmVyc2lvbiAgWzA8PXg8PTk5OV1cbiAgICAtdWksIC0tdW5pcXVlLWlkZW50aWZpZXIgICAgICBSZWNhbGN1bGF0ZXMgbmFtZUlEIDMgKFVuaXF1ZSBpZGVudGlmaWVyKVxuICAgIC12cywgLS12ZXJzaW9uLXN0cmluZyAgICAgICAgIFJlY2FsY3VsYXRlcyBuYW1lSUQgNSAodmVyc2lvbiBzdHJpbmcpXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuXG4jIyMgZnRjbGkgdXRpbHMgdHRmLWF1dG9oaW50XG5cbkF1dG9oaW50cyBUcnVlVHlwZSBmb250cyB1c2luZyB0dGZhdXRvaGludC1weS5cblxuKipVc2FnZSoqOlxuXG4gICAgZnRjbGkgdXRpbHMgdHRmLWF1dG9oaW50IFtPUFRJT05TXSBJTlBVVF9QQVRIXG5cbioqT3B0aW9ucyoqOlxuXG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIHR0Zi1kZWhpbnRcblxuRHJvcHMgaGludGluZyBmcm9tIFRydWVUeXBlIGZvbnRzLlxuXG5UaGlzIGlzIGEgQ0xJIGZvciBkZWhpbnRlciBieSBTb3VyY2UgRm91bmRyeTogaHR0cHM6Ly9naXRodWIuY29tL3NvdXJjZS1mb3VuZHJ5L2RlaGludGVyXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIHR0Zi1kZWhpbnQgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWtlZXAtY3ZhciAgICAgICAgICAgICAgICAgICBrZWVwIGN2YXIgdGFibGVcbiAgICAtLWtlZXAtY3Z0ICAgICAgICAgICAgICAgICAgICBrZWVwIGN2dCB0YWJsZVxuICAgIC0ta2VlcC1mcGdtICAgICAgICAgICAgICAgICAgIGtlZXAgZnBnbSB0YWJsZVxuICAgIC0ta2VlcC1oZG14ICAgICAgICAgICAgICAgICAgIGtlZXAgaGRteCB0YWJsZVxuICAgIC0ta2VlcC1sdHNoICAgICAgICAgICAgICAgICAgIGtlZXAgTFRTSCB0YWJsZVxuICAgIC0ta2VlcC1wcmVwICAgICAgICAgICAgICAgICAgIGtlZXAgcHJlcCB0YWJsZVxuICAgIC0ta2VlcC10dGZhICAgICAgICAgICAgICAgICAgIGtlZXAgdHRmYSB0YWJsZVxuICAgIC0ta2VlcC12ZG14ICAgICAgICAgICAgICAgICAgIGtlZXAgdmRteCB0YWJsZVxuICAgIC0ta2VlcC1nbHlmICAgICAgICAgICAgICAgICAgIGRvIG5vdCBtb2RpZnkgZ2x5ZiB0YWJsZVxuICAgIC0ta2VlcC1nYXNwICAgICAgICAgICAgICAgICAgIGRvIG5vdCBtb2RpZnkgZ2FzcCB0YWJsZVxuICAgIC0ta2VlcC1tYXhwICAgICAgICAgICAgICAgICAgIGRvIG5vdCBtb2RpZnkgbWF4cCB0YWJsZVxuICAgIC0ta2VlcC1oZWFkICAgICAgICAgICAgICAgICAgIGRvIG5vdCBtb2RpZnkgaGVhZCB0YWJsZVxuICAgIC0tdmVyYm9zZSAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXkgc3RhbmRhcmQgb3V0cHV0XG4gICAgLW91dCwgLS1vdXRwdXQtZGlyIERJUkVDVE9SWSAgU3BlY2lmeSB0aGUgZGlyZWN0b3J5IHdoZXJlIG91dHB1dCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzYXZlZC4gSWYgb3V0cHV0X2RpciBkb2Vzbid0IGV4aXN0LCB3aWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY3JlYXRlZC4gSWYgbm90IHNwZWNpZmllZCwgZmlsZXMgYXJlIHNhdmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gdGhlIHNhbWUgZm9sZGVyLlxuICAgIC0tcmVjYWxjLXRpbWVzdGFtcCAgICAgICAgICAgIEtlZXAgdGhlIG9yaWdpbmFsIGZvbnQgJ21vZGlmaWVkJyB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaGVhZC5tb2RpZmllZCkgb3Igc2V0IGl0IHRvIGN1cnJlbnQgdGltZS4gQnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0LCBvcmlnaW5hbCB0aW1lc3RhbXAgaXMga2VwdC5cbiAgICAtLW5vLW92ZXJ3cml0ZSAgICAgICAgICAgICAgICBPdmVyd3JpdGUgZXhpc3Rpbmcgb3V0cHV0IGZpbGVzIG9yIHNhdmUgdGhlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbmV3IGZpbGUgKG51bWJlcnMgYXJlIGFwcGVuZGVkIGF0IHRoZSBlbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZiBmaWxlIG5hbWUpLiBCeSBkZWZhdWx0LCBmaWxlcyBhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdHRlbi5cbiAgICAtLWhlbHAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IHRoaXMgbWVzc2FnZSBhbmQgZXhpdC5cblxuIyMjIGZ0Y2xpIHV0aWxzIHR0Zi1yZW1vdmUtb3ZlcmxhcHNcblxuU2ltcGxpZnkgZ2x5cGhzIGluIFRydWVUeXBlIGZvbnRzIGJ5IG1lcmdpbmcgb3ZlcmxhcHBpbmcgY29udG91cnMuXG5cbioqVXNhZ2UqKjpcblxuICAgIGZ0Y2xpIHV0aWxzIHR0Zi1yZW1vdmUtb3ZlcmxhcHMgW09QVElPTlNdIElOUFVUX1BBVEhcblxuKipPcHRpb25zKio6XG5cbiAgICAtLWlnbm9yZS1lcnJvcnMgICAgICAgICAgICAgICBJZ25vcmUgZXJyb3JzIHdoaWxlIHJlbW92aW5nIG92ZXJsYXBzLlxuICAgIC1vdXQsIC0tb3V0cHV0LWRpciBESVJFQ1RPUlkgIFNwZWNpZnkgdGhlIGRpcmVjdG9yeSB3aGVyZSBvdXRwdXQgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYmUgc2F2ZWQuIElmIG91dHB1dF9kaXIgZG9lc24ndCBleGlzdCwgd2lsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlIGNyZWF0ZWQuIElmIG5vdCBzcGVjaWZpZWQsIGZpbGVzIGFyZSBzYXZlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBzYW1lIGZvbGRlci5cbiAgICAtLXJlY2FsYy10aW1lc3RhbXAgICAgICAgICAgICBLZWVwIHRoZSBvcmlnaW5hbCBmb250ICdtb2RpZmllZCcgdGltZXN0YW1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGhlYWQubW9kaWZpZWQpIG9yIHNldCBpdCB0byBjdXJyZW50IHRpbWUuIEJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCwgb3JpZ2luYWwgdGltZXN0YW1wIGlzIGtlcHQuXG4gICAgLS1uby1vdmVyd3JpdGUgICAgICAgICAgICAgICAgT3ZlcndyaXRlIGV4aXN0aW5nIG91dHB1dCBmaWxlcyBvciBzYXZlIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5ldyBmaWxlIChudW1iZXJzIGFyZSBhcHBlbmRlZCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgZmlsZSBuYW1lKS4gQnkgZGVmYXVsdCwgZmlsZXMgYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXR0ZW4uXG4gICAgLS1oZWxwICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyB0aGlzIG1lc3NhZ2UgYW5kIGV4aXQuXG5cbioqVG8gU2VyZ2lldi4gTWF5IHlvdSByZXN0IGluIHBlYWNlLioqXG4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2Z0Q0xJL2Z0Q0xJIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIiIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImZvbnQtQ0xJIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9mdENMSS9mdENMSSI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZm9udC1DTEkvMC45LjE3LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImFmZGtvICg+PTMuOS41KSIs
ICAgICAgImZvbnR0b29scyAoPj00LjM5LjMpIiw=
ICAgICAgImJlemllcnMgKD49MC41LjApIiw=
ICAgICAgImJyb3RsaSAoPj0xLjAuOSkiLA==
ICAgICAgImNsaWNrICg+PTguMS4zKSIs
ICAgICAgImNmZnN1YnIgKD49MC4yLjkucG9zdDEpIiw=
ICAgICAgImRlaGludGVyICg+PTQuMC4wKSIs
ICAgICAgInBhdGh2YWxpZGF0ZSAoPj0zLjAuMCkiLA==
ICAgICAgInJpY2ggKD49MTMuMy41KSIs
ICAgICAgInNraWEtcGF0aG9wcyAoPj0wLjcuNCkiLA==
ICAgICAgInR0ZmF1dG9oaW50LXB5ICg+PTAuNS4xKSIs
ICAgICAgInpvcGZsaSAoPj0wLjIuMiki
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjgiLA==
ICAgICJzdW1tYXJ5IjogIkEgc2V0IG9mIGNvbW1hbmQgbGluZSB0b29scyB0byBlZGl0IGZvbnRzIHdpdGggRm9udFRvb2xzIiw=
ICAgICJ2ZXJzaW9uIjogIjAuOS4xNyIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODM5MjAzMiw=
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjkuMCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjNDQ4MjcyODBhOWE2NDU1MWFlZDlmZDBjZTE2NmFjMDQ1ZTQxOTJlOTU3MzU4MGQ3OGUwZWY3ZjQ0NjJlYWQ3Iiw=
ICAgICAgICAgICJtZDUiOiAiOTgwMThmZTE0MGQ1NTEwZWI3N2YwMzBkMmIzYTM2MDciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMWI0ZGJlYzE1Y2FlZWQ1MGIxMGFmMDA2NzIyNzZiZDkyOTY3ODNkNGFkYjk1NWViY2YwZGFhYjI0OWJlNTgyYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjAudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5ODAxOGZlMTQwZDU1MTBlYjc3ZjAzMGQyYjNhMzYwNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0MDAyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yM1QxMjoxNToxNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yM1QxMjoxNToxNi4zNTM1NzNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jNC80OC8yNzI4MGE5YTY0NTUxYWVkOWZkMGNlMTY2YWMwNDVlNDE5MmU5NTczNTgwZDc4ZTBlZjdmNDQ2MmVhZDcvZm9udC1DTEktMC45LjAudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMDM2MzczNTJlYzIyNzRhMzEwYzRmODcwMDFhMjBhN2YyMjI1ZTRiNGFjNGJmOGE0ZGVlNTk3OTQwMGZmMmE4Iiw=
ICAgICAgICAgICJtZDUiOiAiYTZiYmJjM2M1YmMxMjQxODQ3YWQxMjZlOWFmNmU0ZDQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjY2YjYyNGMzMDc4NzkzNDMwYjgwMzA4NmI3ZGYzZWYzYmQzYmNkOGQ1MmI5MzM1ZTFiZjBmNmZhMTA2Yzc3OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNmJiYmMzYzViYzEyNDE4NDdhZDEyNmU5YWY2ZTRkNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0ODY1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yNFQxODoyNDowNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yNFQxODoyNDowNy4xMTI4NDFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMC8zNi8zNzM1MmVjMjI3NGEzMTBjNGY4NzAwMWEyMGE3ZjIyMjVlNGI0YWM0YmY4YTRkZWU1OTc5NDAwZmYyYTgvZm9udC1DTEktMC45LjEudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0MDc5MDEzN2MxMGIzNDc1YTRiYjQ3MTZjMzgxNzdlM2M5Y2IyOGRjYmQ3ODQzYzg5ODYyZTYzNWMxYmMwYzljIiw=
ICAgICAgICAgICJtZDUiOiAiZjg5YTM3MzE1ZDNlZGEzNDBiNTM3YmEyYzZiY2E3NGYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTA2MWVlMTc2N2ViNjE5N2RhZGUyZmM4NmY5ZGRhZjcwZDFmZmVhOWJjMGY0ZWRkZjg2NGViNDhkNWViZDRhMyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmODlhMzczMTVkM2VkYTM0MGI1MzdiYTJjNmJjYTc0ZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2MDQ3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MC42ODMzNDlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80MC83OS8wMTM3YzEwYjM0NzVhNGJiNDcxNmMzODE3N2UzYzljYjI4ZGNiZDc4NDNjODk4NjJlNjM1YzFiYzBjOWMvZm9udF9DTEktMC45LjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyMjJjMTg1N2M4ZmY1ZTdmODExMmFjOGZhNDc1M2Y0ZTYzN2I3NzA5M2M3NjA1OTAyNWNjMzNhNGJmMjgyOTA1Iiw=
ICAgICAgICAgICJtZDUiOiAiYmI2ZDllZTA2MWMxZDQ5MjFlMTVmYjE5ZjhhZWRkZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiM2I5YjM1MDNiYmMxNTE3ZWI3NTE0ZDBhZDU1NjM1NzBmZGU1ZmIxNTU3MTMxYjZlYTNiZDIyNWFmMzhiYjlhOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEwLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiYjZkOWVlMDYxYzFkNDkyMWUxNWZiMTlmOGFlZGRlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4ODY0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wM1QwNjoyMzo1MS45OTI1NTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yMi8yYy8xODU3YzhmZjVlN2Y4MTEyYWM4ZmE0NzUzZjRlNjM3Yjc3MDkzYzc2MDU5MDI1Y2MzM2E0YmYyODI5MDUvZm9udC1DTEktMC45LjEwLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1NGE3YmE0ODMzYTVmNmY0Y2EyNTA2Nzk1OGFjZGQxYmQ0NmJiNmZiNjhkZWUxMWNkNDQzMDZkYTk2NjdjYzk2Iiw=
ICAgICAgICAgICJtZDUiOiAiNmQ2NDE1MTYwMGI5YWFjOTk2ZjlkYjJiMzA2NDBmZGMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDM3YTZhYmM3YjhkZTc0ZjA2OTU5NTU3YTY4ZjkwNjU0ZDM3MDliY2NlNzdkOTdlMjRiNjI0MzVjNTFmZGZkMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2ZDY0MTUxNjAwYjlhYWM5OTZmOWRiMmIzMDY0MGZkYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2ODI3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wNVQwNjoyNTowNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wNVQwNjoyNTowNy40NDQ3ODJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81NC9hNy9iYTQ4MzNhNWY2ZjRjYTI1MDY3OTU4YWNkZDFiZDQ2YmI2ZmI2OGRlZTExY2Q0NDMwNmRhOTY2N2NjOTYvZm9udF9DTEktMC45LjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyYzI1MzY3MTI1YmIxNDgxZDJmMDFhYzE1OGExMjkwMzcxYzk5Yjc4ZDc0YjhjYjg5YzM1M2VkYjg0MmZhZWI3Iiw=
ICAgICAgICAgICJtZDUiOiAiMTkxN2Y0MjQyOTc2NTZkODkwZWEwNjNlNzAyOGE1NjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiY2I5ZTVmYjdhYzgxZDUxY2IxMGZjNmI0NmZjODgzNzNjZDY0NDczNjNiY2U3MzlmMTIyMTZiOThiNGI3NDVmZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjExLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxOTE3ZjQyNDI5NzY1NmQ4OTBlYTA2M2U3MDI4YTU2NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk5NjQwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wNVQwNjoyNTowOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wNVQwNjoyNTowOS4zNTkxMjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yYy8yNS8zNjcxMjViYjE0ODFkMmYwMWFjMTU4YTEyOTAzNzFjOTliNzhkNzRiOGNiODljMzUzZWRiODQyZmFlYjcvZm9udC1DTEktMC45LjExLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzY2E3ZDFhYTVjMTk0OGFlMDBmMGUxODA3YTg1MmJhNmIxNTEzNGM5NjhiM2U3MjVmYzI2NWZlYjc0OGI3Yjk1Iiw=
ICAgICAgICAgICJtZDUiOiAiODhhY2JhZDczMzcwYmIwZDIyN2RlOGE0ODFlNDhhOTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWVhMDQyYzQ4YTI4MzQ3Yzg3OTYyNzczZGQ5MjRjZTJiMzEzYWU2OWFlNzdkNWRjM2Q3NmQxOTBmZGVmZGQ0ZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4OGFjYmFkNzMzNzBiYjBkMjI3ZGU4YTQ4MWU0OGE5NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg4MzU0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wOVQwNjoxODo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wOVQwNjoxODo0Ny42OTQzNjdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYy9hNy9kMWFhNWMxOTQ4YWUwMGYwZTE4MDdhODUyYmE2YjE1MTM0Yzk2OGIzZTcyNWZjMjY1ZmViNzQ4YjdiOTUvZm9udF9DTEktMC45LjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZWM1MjU1ZmVlZjY5NmE0Njg5NzQxZmQzYTlmNzkyY2IwZGE3MDY4OTEzOWY5OTk0MTJjZWNjYWJmZTBkMmExIiw=
ICAgICAgICAgICJtZDUiOiAiNDcyZWI4NWI4YTk2OWY0Y2NkMWRiMGYxNzI2NDBhZTMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTAxYmVjYzY4NmRkNDIxODIxNmU1N2Y3NjNmMTA5YjExODAzOTJiYWI2YzEwYjgyZmYzMmM4Mzk4NzM4NzYwZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEyLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0NzJlYjg1YjhhOTY5ZjRjY2QxZGIwZjE3MjY0MGFlMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTIzOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0wOVQwNjoxODo1MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0wOVQwNjoxODo1MC42NDgyMDJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZS9jNS8yNTVmZWVmNjk2YTQ2ODk3NDFmZDNhOWY3OTJjYjBkYTcwNjg5MTM5Zjk5OTQxMmNlY2NhYmZlMGQyYTEvZm9udC1DTEktMC45LjEyLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTMiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0NDUzNWEzMTBjNjM2MjQ2NjBkNTJlN2FjZmIyYWU3YWIwY2NmNGYxM2MyMmQ5MjhkYTI1Y2ZlZjJkZWVlNWU1Iiw=
ICAgICAgICAgICJtZDUiOiAiYmE5MGFkYTU0ODAzZjBkYzI5NGU1YzMyMzkzMDljYzIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTg4YWQ1YjZmM2YzZTEzODc1MThkYjllMjk3MmM2ZWFlYzNiOTRjYjU4ZTg0NTVkOTM0NzY2M2I2MTUxYjI0YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiYTkwYWRhNTQ4MDNmMGRjMjk0ZTVjMzIzOTMwOWNjMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkwNTkxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQwNjowMToyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQwNjowMToyMy42MDMzNzhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80NC81My81YTMxMGM2MzYyNDY2MGQ1MmU3YWNmYjJhZTdhYjBjY2Y0ZjEzYzIyZDkyOGRhMjVjZmVmMmRlZWU1ZTUvZm9udF9DTEktMC45LjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI3ZTA5MDVlZDI5ZTJiMGEyY2VjMGRmNmRhNjg2NjU0NDgwNjBhODdmYmVkMDliNjJlMjBlZWFjNGM1ODlhNDMyIiw=
ICAgICAgICAgICJtZDUiOiAiOTkwZWYyMDc5ZDRiZmE5ZDIwMDg4ZjhmZmM0NzY3ZDIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODFhYWRmYTcxYmQ2MTVhOGJmYmJkOTFhZWY0YTgyNTJlZWRmYWNiMDJmNTNlY2RkMDlmNWI5NjlmODk0OTA3ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjEzLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5OTBlZjIwNzlkNGJmYTlkMjAwODhmOGZmYzQ3NjdkMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTM5Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQwNjowMToyNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQwNjowMToyNS4zNzkzNzlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy83ZS8wOS8wNWVkMjllMmIwYTJjZWMwZGY2ZGE2ODY2NTQ0ODA2MGE4N2ZiZWQwOWI2MmUyMGVlYWM0YzU4OWE0MzIvZm9udC1DTEktMC45LjEzLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTQiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZGI1NzY2MjRmMzA3YzgyZGRkZjI3MGVmYjRiMjMzYmVlNmY3MDRmZGY4YjgzMjNhZjA4ZjEzOTJkY2RiZDQ4Iiw=
ICAgICAgICAgICJtZDUiOiAiY2NjY2U1MWNkMjhiYzllNDExM2U1NmE3ZmFmNTI0MGQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzhlODM5Y2QyYzY4ZDhhY2UyYjAxODAxMDMzY2FmOTZjOTk3NGZlMzIzMzFlYTI4MGIwNGUxYTQwYWI3YTU2YiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjY2NjZTUxY2QyOGJjOWU0MTEzZTU2YTdmYWY1MjQwZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkxMDMwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNC44OTc0MjFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZC9iNS83NjYyNGYzMDdjODJkZGRmMjcwZWZiNGIyMzNiZWU2ZjcwNGZkZjhiODMyM2FmMDhmMTM5MmRjZGJkNDgvZm9udF9DTEktMC45LjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1MzA0ZTMzMjAwZmY3Y2VhMzQ5ZjA0ZjRiYTJjNDk2YzdlNjE3YTNmZmZhYTUwMGJjMzQ2NWM0NGQwMDc3MTRkIiw=
ICAgICAgICAgICJtZDUiOiAiMTUzYzliYmY5NjA2Mzk3Mzg2NTI0NzczN2NhMmQyMDMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOTNmYjMxODUxYjZlY2YzNmE3OTAyNzg0NzkzNjU0NThhMjc0MTE0ZDRkNmY0YzAxZTU5Y2IyOGYwMTdkMTRlYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE0LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxNTNjOWJiZjk2MDYzOTczODY1MjQ3NzM3Y2EyZDIwMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTg2OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xNVQxMDoyNDoyNi45MjU2MjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81My8wNC9lMzMyMDBmZjdjZWEzNDlmMDRmNGJhMmM0OTZjN2U2MTdhM2ZmZmFhNTAwYmMzNDY1YzQ0ZDAwNzcxNGQvZm9udC1DTEktMC45LjE0LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTUiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkOWZhMWM1NDhiNWE4ODYxZjk4ODY2ZDRjNzVkZjZmMjg5MmVkOTg2M2MzODZiOWUxNzY0NjA2MjY2NDUzZDkzIiw=
ICAgICAgICAgICJtZDUiOiAiYTQzM2NhMzkyYjQ0OWQxMThhMGI1N2ZjNWY3M2QxNzEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzUzMjgzYWFkZjhlNTI5ZDM0ODYwYTgwMTRiODAxMDY4NjE2ZjhlMjVlNDIwZWY5ZjE2YzIxMmVjODRkMjg4YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNDMzY2EzOTJiNDQ5ZDExOGEwYjU3ZmM1ZjczZDE3MSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkxMTY4LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxMzowMTo0NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxMzowMTo0NS45Njk4MDdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kOS9mYS8xYzU0OGI1YTg4NjFmOTg4NjZkNGM3NWRmNmYyODkyZWQ5ODYzYzM4NmI5ZTE3NjQ2MDYyNjY0NTNkOTMvZm9udF9DTEktMC45LjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5ZDZkMTVkOWIxNzQxNzIyYmEzN2YzZjI3YjkwNWI4NzlkZGY1OGQ4YTI0M2FhMWY4ZWM0MmY5NTAyMTllZjVjIiw=
ICAgICAgICAgICJtZDUiOiAiOGU0OWIyOGZhNmM5NWZkZjc3YTMzNmFhYjJjMjkyZjkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWQ0ZjNlYjIxOTlhOWExYzUzNDZkOTIzMTRjOWUxNTg2NjIyMmJkZTcxYzI2M2M0NmYyZWM5NGE4NWZmMTBhOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE1LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI4ZTQ5YjI4ZmE2Yzk1ZmRmNzdhMzM2YWFiMmMyOTJmOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMTk3Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xOVQxMzowMTo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xOVQxMzowMTo0Ny44MDM3NzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85ZC82ZC8xNWQ5YjE3NDE3MjJiYTM3ZjNmMjdiOTA1Yjg3OWRkZjU4ZDhhMjQzYWExZjhlYzQyZjk1MDIxOWVmNWMvZm9udC1DTEktMC45LjE1LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTYiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI2OTZjYzNkZTllMzk3ZDg2ZTlkNWNhNDEyZWQ5ODZhMjk0ZTVmZmQ3NDJkMzg0MDcxMjUzYTNmZDczNjRkODkzIiw=
ICAgICAgICAgICJtZDUiOiAiZTI1YzlkM2U0M2QxMDAyMjZlMThkOWVjYjM4ZDFjZTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiN2ZhMWM0YmEzOTVmZjRiNDRhNjJlMzRhMjUzMGU4YWQ1NWNhYTc0ZTk1ZmMyZGNlNzhmMTZlMzc5ODc0ZjkwMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlMjVjOWQzZTQzZDEwMDIyNmUxOGQ5ZWNiMzhkMWNlNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDkyMTkyLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NS4wNTE3MDZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy82OS82Yy9jM2RlOWUzOTdkODZlOWQ1Y2E0MTJlZDk4NmEyOTRlNWZmZDc0MmQzODQwNzEyNTNhM2ZkNzM2NGQ4OTMvZm9udF9DTEktMC45LjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkZjM2MTJmMTY1MDc1ZGEyYzdjMTdkYzQ4M2E5OTI0NjQ4Nzg0OTA5M2VlOGRiMWFhOWJjZGFhZjQ4MzMxY2VmIiw=
ICAgICAgICAgICJtZDUiOiAiZWJmZjQ1ZmU2ZGM4Mzc5MTQzMzUyZTFkNzgwNWFkZDgiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDg0MzVmZTA3NTA5YWM3ZjIzYmNhNWU0YWZjYTlkNzdiMmQ0MmRjZDUwMDBmN2U3NjBkZTI2MjRlYmVmMDQ2MyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE2LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlYmZmNDVmZTZkYzgzNzkxNDMzNTJlMWQ3ODA1YWRkOCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDEwMzQ5OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yOFQxMDoyMjo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yOFQxMDoyMjo1Ni45OTQyMTlaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kZi8zNi8xMmYxNjUwNzVkYTJjN2MxN2RjNDgzYTk5MjQ2NDg3ODQ5MDkzZWU4ZGIxYWE5YmNkYWFmNDgzMzFjZWYvZm9udC1DTEktMC45LjE2LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTciOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5N2U5ZWM2NWE3YTY4MTk0NTdjYzE5YWNjYmRkY2JmOWY5YTA1NDBmMzAzNDYwOTA5YmVkYTNlMDZmNmE2NDY1Iiw=
ICAgICAgICAgICJtZDUiOiAiY2MxNmRkMDUzZDNhZDI1Njc3OGJkMTczNTAyMmI4ZGUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTlhYjQyNzllNWRkYTg0ZTA5M2JhZWY2MmE5Zjk5YWFlZmY2MWYyMTNhMzFhNDM2MjA3ZDIxYTYwOTdjZWRkOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjYzE2ZGQwNTNkM2FkMjU2Nzc4YmQxNzM1MDIyYjhkZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDkyMjI5LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoyMDoxOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoyMDoxOC45Mzk0NjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Ny9lOS9lYzY1YTdhNjgxOTQ1N2NjMTlhY2NiZGRjYmY5ZjlhMDU0MGYzMDM0NjA5MDliZWRhM2UwNmY2YTY0NjUvZm9udF9DTEktMC45LjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNjJlNzA2YjYzMTFkMDAwMWU1YTk4Nzc0ZjU5ZTkyNzE4NDdlY2M3NjUyMzBhZTllMWEwZmY0MzM1Mzc5MzMzIiw=
ICAgICAgICAgICJtZDUiOiAiYTRmNDdmZTM0YzgyMjIyNTlhMjI0ODAyOGIxZDU4YWUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGJhZGQ1NjdiODM0NjVmMDFmMDMxODcyMzBmY2MwNzkxOWNiOGY2OGZjNTljZWM3OWM1ZTdiMGFiODE2ZDdmOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE3LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNGY0N2ZlMzRjODIyMjI1OWEyMjQ4MDI4YjFkNThhZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwMzUwOCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoyMDoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoyMDoyNi4yMDkzMTVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNi8yZS83MDZiNjMxMWQwMDAxZTVhOTg3NzRmNTllOTI3MTg0N2VjYzc2NTIzMGFlOWUxYTBmZjQzMzUzNzkzMzMvZm9udC1DTEktMC45LjE3LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMTgiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJjZjg4NDcwMzQwN2RhMDA0MDE2MDcyYjZkNGFiZWY2YzY0ZjIyYzdhZWE2YWIyNjBjMmQ4NzViMDQ2NzM0MTRmIiw=
ICAgICAgICAgICJtZDUiOiAiYWE0ZmFlODcyMzFiNTkzYzY4ZmViYzUwNTZmYTIzMjkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzY4MzYzMGQ2MjYyZDgwMTcwYWIwZDFmMGZjZDAzNGYyZjkyMGIyZmU5NTRiMDNjNjViYTg2OWJhYjFjZjU5ZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhYTRmYWU4NzIzMWI1OTNjNjhmZWJjNTA1NmZhMjMyOSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDk1MjA3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNlQxMzoyMTo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNlQxMzoyMTo1My41Nzk0NjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9jZi84OC80NzAzNDA3ZGEwMDQwMTYwNzJiNmQ0YWJlZjZjNjRmMjJjN2FlYTZhYjI2MGMyZDg3NWIwNDY3MzQxNGYvZm9udF9DTEktMC45LjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogdHJ1ZSw=
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzY2E1YmU4MzNlMDdlYjVlNTU2YjFjNzQ3MWNkY2FhMTZjMmQwZjQzN2FiZDAwN2FlNWI2YzI3Zjg3NTZmMmY4Iiw=
ICAgICAgICAgICJtZDUiOiAiYzM3OTdkMTllMWU0NzFlNjMxM2QzM2E3OGI1MTQ1NmQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmJiNWNiODZlM2UwYjEwOWQ0NDc5ZjBjMjQwNzA4OWU4N2VhYTRhNTQ3OTNlOGZhYTI5YmRlYzRlNGNhNWFhYSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjE4LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjMzc5N2QxOWUxZTQ3MWU2MzEzZDMzYTc4YjUxNDU2ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My44Iiw=
ICAgICAgICAic2l6ZSI6IDEwNjQ1MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wNlQxMzoyMTo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wNlQxMzoyMTo1NS4zODM0NzdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zYy9hNS9iZTgzM2UwN2ViNWU1NTZiMWM3NDcxY2RjYWExNmMyZDBmNDM3YWJkMDA3YWU1YjZjMjdmODc1NmYyZjgvZm9udC1DTEktMC45LjE4LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogdHJ1ZSw=
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMi4xIjogWw==
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiOTNmMjVkYWI4MzIxYTYyY2NlM2NkZmViMWIyMTdlOGI1NDcwOTFjOGRlMzQ1Y2IyNzdkMTRlMjhlMmJlZTlkIiw=
ICAgICAgICAgICJtZDUiOiAiNzA4ZDRhNTgyNDljZTNiN2Q1NGMzYjIyYWRjMDc0NjQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMGQwYTVmNTYzYjhhZTA5ZDY4OTUyMmU0N2UyYzA3NjU4ODlkMzQ3NGYyNThjZjAxODUwNDA4ZjNjYmRkYzU4OCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjIuMS50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3MDhkNGE1ODI0OWNlM2I3ZDU0YzNiMjJhZGMwNzQ2NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk0NDc2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yNVQwOToyMjoyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yNVQwOToyMjoyNi42NjQ4MjNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iOS8zZi8yNWRhYjgzMjFhNjJjY2UzY2RmZWIxYjIxN2U4YjU0NzA5MWM4ZGUzNDVjYjI3N2QxNGUyOGUyYmVlOWQvZm9udC1DTEktMC45LjIuMS50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuMyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiZWMxOTJiYzE4NzM2MWRhZGU2ZTlhZTRhNDc0MzY4ZmM1MWY5NjJiMzJiOWRlYWFjODQzZjcyOTNhN2U1MmE0Iiw=
ICAgICAgICAgICJtZDUiOiAiNzk4MTA0OTYyZWVkOWE3ZWQyNTM1OGM2MzdlZmQ1ZTUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjg4ZWZkNzkyNjA1YzMyN2FmYjAwZGM1YjIzNWQ0NWI3Y2UxMzY0MWY5NTFkYjZlN2Q5YjhiNDFlNWQ5OGQwMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjMudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI3OTgxMDQ5NjJlZWQ5YTdlZDI1MzU4YzYzN2VmZDVlNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk1MjExLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yOFQxNTo1MDo1NiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yOFQxNTo1MDo1Ni42NzQ5MDhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iZS9jMS85MmJjMTg3MzYxZGFkZTZlOWFlNGE0NzQzNjhmYzUxZjk2MmIzMmI5ZGVhYWM4NDNmNzI5M2E3ZTUyYTQvZm9udC1DTEktMC45LjMudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI1Njc4OTI1Yjk4MzI2ZDhiYWEzMzMwZDdjNmEwNzBkODNiOTQyZjMyYTBlYTJiMWRkY2NkMDliZTJhY2I1N2FmIiw=
ICAgICAgICAgICJtZDUiOiAiMWU1MzgxZWFmMzI1YWRjNmQ2MThkMWMyYTE1NTQyODMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjgyMGY0YTBiYzRmMmRmM2IyODEzMTBjMDJlM2RhMzg0M2JhMTRmZTZhNzJlYTg3ZjhjODQ0N2FiNDRmODQzZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjQudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxZTUzODFlYWYzMjVhZGM2ZDYxOGQxYzJhMTU1NDI4MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk2MzYwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wMlQxMTo0NDozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wMlQxMTo0NDozNC40Mjg5OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy81Ni83OC85MjViOTgzMjZkOGJhYTMzMzBkN2M2YTA3MGQ4M2I5NDJmMzJhMGVhMmIxZGRjY2QwOWJlMmFjYjU3YWYvZm9udC1DTEktMC45LjQudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4YzQzYjBjMTI2YzhkYzI2YWE2NmIyZGQ2MWNkZjY2NTc1YmJmYTA4ZmIzM2RlMDRmOGQ1MjQ2ZTAxNTc1MzQwIiw=
ICAgICAgICAgICJtZDUiOiAiMTg0YTQ0ZWMwN2M1YTA4MjhiNzEzOWQ3MTk4MWNiOGEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYzFjYWFkOGZlODE3MGY0NmFhZDVhNzVkZDliZTUzMDY2NmVlMDA2OGRkMjdlOGFhMzc0ZGIzMTExMmZmYzg3MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjUudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxODRhNDRlYzA3YzVhMDgyOGI3MTM5ZDcxOTgxY2I4YSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk3NjU3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wM1QwOTowMDozMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wM1QwOTowMDozMS41NjI1ODFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84Yy80My9iMGMxMjZjOGRjMjZhYTY2YjJkZDYxY2RmNjY1NzViYmZhMDhmYjMzZGUwNGY4ZDUyNDZlMDE1NzUzNDAvZm9udC1DTEktMC45LjUudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZTdmODcwYzRmY2VlN2FiYzM2Y2UyNGMzNzk1NTQ1YzY3YThkMzNiMjg4ZDFiMjYyNGM5Yzg0NmI1MzA0YTUyIiw=
ICAgICAgICAgICJtZDUiOiAiZjA4MzQzMWM0YTdiY2VkMjA1OGY4YjkzOTI1NDU1M2IiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWI2YTVjMzNkODQwNzU4YTMxMDNiMjZmYWNlNDEwNTJkNzYzY2M5NTkwMGFiM2Y4MjM3YTQ1NDFkM2ViNjk1OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjYtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmMDgzNDMxYzRhN2JjZWQyMDU4ZjhiOTM5MjU0NTUzYiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg0NDA3LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wNVQwNjoxNDo1NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wNVQwNjoxNDo1Ny42Mzk2MjZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZS83Zi84NzBjNGZjZWU3YWJjMzZjZTI0YzM3OTU1NDVjNjdhOGQzM2IyODhkMWIyNjI0YzljODQ2YjUzMDRhNTIvZm9udF9DTEktMC45LjYtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkNzM1YTkxMjFmYjBmMzI1ZjhmYmEyZWZhNzlkYjRkNmZkZWExMWZhODQ1Y2IxZDhhZTU0YjkxYThmZGNjMzljIiw=
ICAgICAgICAgICJtZDUiOiAiZTRmZjRlZjU0NTZlNjIxNzlhZDBiMmMwYjU0ZGFlYTciLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZTNiMWUzODBiM2ZhYmU0NDE0OTMzZThiZWI2ODJmNGQyYjlkMWQyNGM1NTdlN2NlMzJjZmVmMTMzOGZmNDVmMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjYudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlNGZmNGVmNTQ1NmU2MjE3OWFkMGIyYzBiNTRkYWVhNyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4MzAwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wNVQwNjoxNDo1OCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wNVQwNjoxNDo1OC45MjU4NTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kNy8zNS9hOTEyMWZiMGYzMjVmOGZiYTJlZmE3OWRiNGQ2ZmRlYTExZmE4NDVjYjFkOGFlNTRiOTFhOGZkY2MzOWMvZm9udC1DTEktMC45LjYudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuNyI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxYjJmNGJkMzM4ZWIwMTQ4ZDBkNGRmY2Q1MTAwMmI1NzdjYTFiNmNlYjdhYTgwODc5YmVkNDcyODdhNzc4MDdkIiw=
ICAgICAgICAgICJtZDUiOiAiYmVmMTE4YmVhMmVhNmIwNzJmY2JjMzE2ZGM2NTQwYzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTMzY2IzNjMyN2VmOGFmZGE2MDUwOTFmOTZhOTJmNTczY2YwMWRkOWMyN2QwMmE0NDlmMGU0MWM5ZDI2OWI5YSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjctcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiZWYxMThiZWEyZWE2YjA3MmZjYmMzMTZkYzY1NDBjMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg0NDk4LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xMlQxMDo1MjozNCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xMlQxMDo1MjozNC41NDY1MTRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xYi8yZi80YmQzMzhlYjAxNDhkMGQ0ZGZjZDUxMDAyYjU3N2NhMWI2Y2ViN2FhODA4NzliZWQ0NzI4N2E3NzgwN2QvZm9udF9DTEktMC45LjctcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwMzYwMzIzM2U1ZGNhZjUwMjQ3ZTEwNDNlMzI5MTJjZTIyMjM5N2E2NGUyNzVhMzkzNjZmYzk4ZjNkYWYwN2U2Iiw=
ICAgICAgICAgICJtZDUiOiAiMTg3NzhjYTZlZDRhZWNlMDI3OTg4NWMwYjc0Yzg3NDYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjJjMzZiNTY4MzE1NWI0NWUzMTBmMTdhY2IxNDlkNzUxYjcyNzE1MGFlNGYxNzM1YmQ5ZTQyZTMxZmIzNTQ3OSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjcudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxODc3OGNhNmVkNGFlY2UwMjc5ODg1YzBiNzRjODc0NiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4MzY0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xMlQxMDo1MjozNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xMlQxMDo1MjozNS43ODM4OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wMy82MC8zMjMzZTVkY2FmNTAyNDdlMTA0M2UzMjkxMmNlMjIyMzk3YTY0ZTI3NWEzOTM2NmZjOThmM2RhZjA3ZTYvZm9udC1DTEktMC45LjcudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuOCI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI4MzQ1NTQxMjQwNGY3YjQzNmUyYzc3ZDk5ZDkyOWVmNDU1YzJkOGMxNDlkNGYyMmRjMWI4YTRjN2JkODgyODYyIiw=
ICAgICAgICAgICJtZDUiOiAiYzU3NjA0MTY0N2RiMDUyZjMxNTA5YzY3YWIzNDViZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjQ2M2JmNTA3N2Y0MDcyN2MwYzllODI3NTE3YjJjMzc5MGMwZDE5YTgwNWE0NGMzYTVlYzliOWU5Zjc4OTU3MyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjgtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjNTc2MDQxNjQ3ZGIwNTJmMzE1MDljNjdhYjM0NWJlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg1ODYxLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xN1QwNToxODoyMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xN1QwNToxODoyMS43MjMzMDRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy84My80NS81NDEyNDA0ZjdiNDM2ZTJjNzdkOTlkOTI5ZWY0NTVjMmQ4YzE0OWQ0ZjIyZGMxYjhhNGM3YmQ4ODI4NjIvZm9udF9DTEktMC45LjgtcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNjYwOWE0ZTU2Mzc5NGRhYTkzMTM0ZDhjNTQyN2RmNmJmM2EzZDRiNTJiMWQyZjY0MDczOGI2Y2Y3YjAzZWE2Iiw=
ICAgICAgICAgICJtZDUiOiAiNTlkMzI1ODlkNzk3YjRmYWY0NGQ1MmVlNjlkNmRhOTIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWRiODU2ODhkYmExMTc1ZWNlZWQzYTkwYTJjNTE0MDM4MDkwZGI1OWFmOThhODE1ZjUzMjExZjIxNjkzZDlmMCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjgudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI1OWQzMjU4OWQ3OTdiNGZhZjQ0ZDUyZWU2OWQ2ZGE5MiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4OTI0LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xN1QwNToxODoyMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xN1QwNToxODoyMy4xMDYxNjBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNi82MC85YTRlNTYzNzk0ZGFhOTMxMzRkOGM1NDI3ZGY2YmYzYTNkNGI1MmIxZDJmNjQwNzM4YjZjZjdiMDNlYTYvZm9udC1DTEktMC45LjgudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIwLjkuOSI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkZTdhOTA3MzQ0MzRkMWIxYjI0NjIxMjljMzQzMzM3ZGI4YWE1YjZjY2YyMzljODM0MGMwNDY1YzYxMjhjYTE2Iiw=
ICAgICAgICAgICJtZDUiOiAiYjRkNGJjYjA0NWM0N2JiYjNiMGU2N2Q3ZjMyNWMxOTQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNzZiZDYyMDI3YzVmNGJkZGM4YTUzNWVkODBlNmI0NzUxNTVmNGEzMjRjZWIwZWJhZWEyNzk3NTAyZTU1MmVmOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udF9DTEktMC45LjktcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiNGQ0YmNiMDQ1YzQ3YmJiM2IwZTY3ZDdmMzI1YzE5NCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDg2MDgwLA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xOVQxNjo0MDo1MyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xOVQxNjo0MDo1My4xNjk1NTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kZS83YS85MDczNDQzNGQxYjFiMjQ2MjEyOWMzNDMzMzdkYjhhYTViNmNjZjIzOWM4MzQwYzA0NjVjNjEyOGNhMTYvZm9udF9DTEktMC45LjktcHkzLW5vbmUtYW55LndobCIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzMmEyOTJkODI3OWNmMGVjNzkwZDAxZTU1YTBiMDAyNGZlNTE4MTI4ZTE3MjhkNDJkZmJiYjU1ZTE3ZjhhNGM5Iiw=
ICAgICAgICAgICJtZDUiOiAiZWYyNTE5MTUwYmY0YzU3Y2U3MWJlM2RkMjg1MzBkMDIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiODg1MmNiOGU4ZGE5YmUwNmFkYjQ4N2M5MjgwN2ZkNjlmZWZjYjVjNzkzNmM2NDQ4MWI2ZTNmNDlkNzdiMDM0ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZm9udC1DTEktMC45LjkudGFyLmd6Iiw=
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlZjI1MTkxNTBiZjRjNTdjZTcxYmUzZGQyODUzMGQwMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My43LCA8My4xMSIs
ICAgICAgICAic2l6ZSI6IDk4OTM1LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xOVQxNjo0MDo1NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xOVQxNjo0MDo1NS4zMTY1MzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zMi9hMi85MmQ4Mjc5Y2YwZWM3OTBkMDFlNTVhMGIwMDI0ZmU1MTgxMjhlMTcyOGQ0MmRmYmJiNTVlMTdmOGE0YzkvZm9udC1DTEktMC45LjkudGFyLmd6Iiw=
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOTdlOWVjNjVhN2E2ODE5NDU3Y2MxOWFjY2JkZGNiZjlmOWEwNTQwZjMwMzQ2MDkwOWJlZGEzZTA2ZjZhNjQ2NSIs
ICAgICAgICAibWQ1IjogImNjMTZkZDA1M2QzYWQyNTY3NzhiZDE3MzUwMjJiOGRlIiw=
ICAgICAgICAic2hhMjU2IjogIjE5YWI0Mjc5ZTVkZGE4NGUwOTNiYWVmNjJhOWY5OWFhZWZmNjFmMjEzYTMxYTQzNjIwN2QyMWE2MDk3Y2VkZDgi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImZvbnRfQ0xJLTAuOS4xNy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiY2MxNmRkMDUzZDNhZDI1Njc3OGJkMTczNTAyMmI4ZGUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiA5MjIyOSw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMDNUMTI6MjA6MTgiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMDNUMTI6MjA6MTguOTM5NDY2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOTcvZTkvZWM2NWE3YTY4MTk0NTdjYzE5YWNjYmRkY2JmOWY5YTA1NDBmMzAzNDYwOTA5YmVkYTNlMDZmNmE2NDY1L2ZvbnRfQ0xJLTAuOS4xNy1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMzYyZTcwNmI2MzExZDAwMDFlNWE5ODc3NGY1OWU5MjcxODQ3ZWNjNzY1MjMwYWU5ZTFhMGZmNDMzNTM3OTMzMyIs
ICAgICAgICAibWQ1IjogImE0ZjQ3ZmUzNGM4MjIyMjU5YTIyNDgwMjhiMWQ1OGFlIiw=
ICAgICAgICAic2hhMjU2IjogIjBiYWRkNTY3YjgzNDY1ZjAxZjAzMTg3MjMwZmNjMDc5MTljYjhmNjhmYzU5Y2VjNzljNWU3YjBhYjgxNmQ3Zjgi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImZvbnQtQ0xJLTAuOS4xNy50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYTRmNDdmZTM0YzgyMjIyNTlhMjI0ODAyOGIxZDU4YWUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuOCIs
ICAgICAgInNpemUiOiAxMDM1MDgs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMDNUMTI6MjA6MjYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMDNUMTI6MjA6MjYuMjA5MzE1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMzYvMmUvNzA2YjYzMTFkMDAwMWU1YTk4Nzc0ZjU5ZTkyNzE4NDdlY2M3NjUyMzBhZTllMWEwZmY0MzM1Mzc5MzMzL2ZvbnQtQ0xJLTAuOS4xNy50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
