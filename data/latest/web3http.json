ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiVG9tIENocmlzdGllIiw=
ICAgICJhdXRob3JfZW1haWwiOiAidG9tQHRvbWNocmlzdGllLmNvbSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiA0IC0gQmV0YSIs
ICAgICAgIkVudmlyb25tZW50IDo6IFdlYiBFbnZpcm9ubWVudCIs
ICAgICAgIkZyYW1ld29yayA6OiBBc3luY0lPIiw=
ICAgICAgIkZyYW1ld29yayA6OiBUcmlvIiw=
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEJTRCBMaWNlbnNlIiw=
ICAgICAgIk9wZXJhdGluZyBTeXN0ZW0gOjogT1MgSW5kZXBlbmRlbnQiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzIDo6IE9ubHkiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjYiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjkiLA==
ICAgICAgIlRvcGljIDo6IEludGVybmV0IDo6IFdXVy9IVFRQIg==
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICI8cCBhbGlnbj1cImNlbnRlclwiPlxuICA8YSBocmVmPVwiaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9cIj48aW1nIHdpZHRoPVwiMzUwXCIgaGVpZ2h0PVwiMjA4XCIgc3JjPVwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2VuY29kZS9odHRweC9tYXN0ZXIvZG9jcy9pbWcvYnV0dGVyZmx5LnBuZ1wiIGFsdD0nSFRUUFgnPjwvYT5cbjwvcD5cblxuPHAgYWxpZ249XCJjZW50ZXJcIj48c3Ryb25nPkhUVFBYPC9zdHJvbmc+IDxlbT4tIEEgbmV4dC1nZW5lcmF0aW9uIEhUVFAgY2xpZW50IGZvciBQeXRob24uPC9lbT48L3A+XG5cbjxwIGFsaWduPVwiY2VudGVyXCI+XG48YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2VuY29kZS9odHRweC9hY3Rpb25zXCI+XG4gICAgPGltZyBzcmM9XCJodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4L3dvcmtmbG93cy9UZXN0JTIwU3VpdGUvYmFkZ2Uuc3ZnXCIgYWx0PVwiVGVzdCBTdWl0ZVwiPlxuPC9hPlxuPGEgaHJlZj1cImh0dHBzOi8vcHlwaS5vcmcvcHJvamVjdC9odHRweC9cIj5cbiAgICA8aW1nIHNyYz1cImh0dHBzOi8vYmFkZ2UuZnVyeS5pby9weS9odHRweC5zdmdcIiBhbHQ9XCJQYWNrYWdlIHZlcnNpb25cIj5cbjwvYT5cbjwvcD5cblxuSFRUUFggaXMgYSBmdWxseSBmZWF0dXJlZCBIVFRQIGNsaWVudCBmb3IgUHl0aG9uIDMsIHdoaWNoIHByb3ZpZGVzIHN5bmMgYW5kIGFzeW5jIEFQSXMsIGFuZCBzdXBwb3J0IGZvciBib3RoIEhUVFAvMS4xIGFuZCBIVFRQLzIuXG5cbioqTm90ZSoqOiBfSFRUUFggc2hvdWxkIGJlIGNvbnNpZGVyZWQgaW4gYmV0YS4gV2UgYmVsaWV2ZSB3ZSd2ZSBnb3QgdGhlIHB1YmxpYyBBUEkgdG9cbmEgc3RhYmxlIHBvaW50IG5vdywgYnV0IHdvdWxkIHN0cm9uZ2x5IHJlY29tbWVuZCBwaW5uaW5nIHlvdXIgZGVwZW5kZW5jaWVzIHRvIHRoZSBgMC4xNy4qYFxucmVsZWFzZSwgc28gdGhhdCB5b3UncmUgYWJsZSB0byBwcm9wZXJseSByZXZpZXcgW0FQSSBjaGFuZ2VzIGJldHdlZW4gcGFja2FnZSB1cGRhdGVzXShodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4L2Jsb2IvbWFzdGVyL0NIQU5HRUxPRy5tZCkuIEEgMS4wIHJlbGVhc2UgaXMgZXhwZWN0ZWQgdG8gYmUgaXNzdWVkIHNvbWV0aW1lIGluIDIwMjEuX1xuXG4tLS1cblxuTGV0J3MgZ2V0IHN0YXJ0ZWQuLi5cblxuYGBgcHljb25cbj4+PiBpbXBvcnQgaHR0cHhcbj4+PiByID0gaHR0cHguZ2V0KCdodHRwczovL3d3dy5leGFtcGxlLm9yZy8nKVxuPj4+IHJcbjxSZXNwb25zZSBbMjAwIE9LXT5cbj4+PiByLnN0YXR1c19jb2RlXG4yMDBcbj4+PiByLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddXG4ndGV4dC9odG1sOyBjaGFyc2V0PVVURi04J1xuPj4+IHIudGV4dFxuJzwhZG9jdHlwZSBodG1sPlxcbjxodG1sPlxcbjxoZWFkPlxcbjx0aXRsZT5FeGFtcGxlIERvbWFpbjwvdGl0bGU+Li4uJ1xuYGBgXG5cbk9yLCB1c2luZyB0aGUgYXN5bmMgQVBJLi4uXG5cbl9Vc2UgW0lQeXRob25dKGh0dHBzOi8vaXB5dGhvbi5yZWFkdGhlZG9jcy5pby9lbi9zdGFibGUvKSBvciBQeXRob24gMy44KyB3aXRoIGBweXRob24gLW0gYXN5bmNpb2AgdG8gdHJ5IHRoaXMgY29kZSBpbnRlcmFjdGl2ZWx5Ll9cblxuYGBgcHljb25cbj4+PiBpbXBvcnQgaHR0cHhcbj4+PiBhc3luYyB3aXRoIGh0dHB4LkFzeW5jQ2xpZW50KCkgYXMgY2xpZW50OlxuLi4uICAgICByID0gYXdhaXQgY2xpZW50LmdldCgnaHR0cHM6Ly93d3cuZXhhbXBsZS5vcmcvJylcbi4uLlxuPj4+IHJcbjxSZXNwb25zZSBbMjAwIE9LXT5cbmBgYFxuXG4jIyBGZWF0dXJlc1xuXG5IVFRQWCBidWlsZHMgb24gdGhlIHdlbGwtZXN0YWJsaXNoZWQgdXNhYmlsaXR5IG9mIGByZXF1ZXN0c2AsIGFuZCBnaXZlcyB5b3U6XG5cbiogQSBicm9hZGx5IFtyZXF1ZXN0cy1jb21wYXRpYmxlIEFQSV0oaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9jb21wYXRpYmlsaXR5LykuXG4qIFN0YW5kYXJkIHN5bmNocm9ub3VzIGludGVyZmFjZSwgYnV0IHdpdGggW2FzeW5jIHN1cHBvcnQgaWYgeW91IG5lZWQgaXRdKGh0dHBzOi8vd3d3LnB5dGhvbi1odHRweC5vcmcvYXN5bmMvKS5cbiogSFRUUC8xLjEgW2FuZCBIVFRQLzIgc3VwcG9ydF0oaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9odHRwMi8pLlxuKiBBYmlsaXR5IHRvIG1ha2UgcmVxdWVzdHMgZGlyZWN0bHkgdG8gW1dTR0kgYXBwbGljYXRpb25zXShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL2FkdmFuY2VkLyNjYWxsaW5nLWludG8tcHl0aG9uLXdlYi1hcHBzKSBvciBbQVNHSSBhcHBsaWNhdGlvbnNdKGh0dHBzOi8vd3d3LnB5dGhvbi1odHRweC5vcmcvYXN5bmMvI2NhbGxpbmctaW50by1weXRob24td2ViLWFwcHMpLlxuKiBTdHJpY3QgdGltZW91dHMgZXZlcnl3aGVyZS5cbiogRnVsbHkgdHlwZSBhbm5vdGF0ZWQuXG4qIDEwMCUgdGVzdCBjb3ZlcmFnZS5cblxuUGx1cyBhbGwgdGhlIHN0YW5kYXJkIGZlYXR1cmVzIG9mIGByZXF1ZXN0c2AuLi5cblxuKiBJbnRlcm5hdGlvbmFsIERvbWFpbnMgYW5kIFVSTHNcbiogS2VlcC1BbGl2ZSAmIENvbm5lY3Rpb24gUG9vbGluZ1xuKiBTZXNzaW9ucyB3aXRoIENvb2tpZSBQZXJzaXN0ZW5jZVxuKiBCcm93c2VyLXN0eWxlIFNTTCBWZXJpZmljYXRpb25cbiogQmFzaWMvRGlnZXN0IEF1dGhlbnRpY2F0aW9uXG4qIEVsZWdhbnQgS2V5L1ZhbHVlIENvb2tpZXNcbiogQXV0b21hdGljIERlY29tcHJlc3Npb25cbiogQXV0b21hdGljIENvbnRlbnQgRGVjb2RpbmdcbiogVW5pY29kZSBSZXNwb25zZSBCb2RpZXNcbiogTXVsdGlwYXJ0IEZpbGUgVXBsb2Fkc1xuKiBIVFRQKFMpIFByb3h5IFN1cHBvcnRcbiogQ29ubmVjdGlvbiBUaW1lb3V0c1xuKiBTdHJlYW1pbmcgRG93bmxvYWRzXG4qIC5uZXRyYyBTdXBwb3J0XG4qIENodW5rZWQgUmVxdWVzdHNcblxuIyMgSW5zdGFsbGF0aW9uXG5cbkluc3RhbGwgd2l0aCBwaXA6XG5cbmBgYHNoZWxsXG4kIHBpcCBpbnN0YWxsIGh0dHB4XG5gYGBcblxuT3IsIHRvIGluY2x1ZGUgdGhlIG9wdGlvbmFsIEhUVFAvMiBzdXBwb3J0LCB1c2U6XG5cbmBgYHNoZWxsXG4kIHBpcCBpbnN0YWxsIGh0dHB4W2h0dHAyXVxuYGBgXG5cbkhUVFBYIHJlcXVpcmVzIFB5dGhvbiAzLjYrLlxuXG4jIyBEb2N1bWVudGF0aW9uXG5cblByb2plY3QgZG9jdW1lbnRhdGlvbiBpcyBhdmFpbGFibGUgYXQgW2h0dHBzOi8vd3d3LnB5dGhvbi1odHRweC5vcmcvXShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnLykuXG5cbkZvciBhIHJ1bi10aHJvdWdoIG9mIGFsbCB0aGUgYmFzaWNzLCBoZWFkIG92ZXIgdG8gdGhlIFtRdWlja1N0YXJ0XShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL3F1aWNrc3RhcnQvKS5cblxuRm9yIG1vcmUgYWR2YW5jZWQgdG9waWNzLCBzZWUgdGhlIFtBZHZhbmNlZCBVc2FnZV0oaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9hZHZhbmNlZC8pIHNlY3Rpb24sIHRoZSBbYXN5bmMgc3VwcG9ydF0oaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9hc3luYy8pIHNlY3Rpb24sIG9yIHRoZSBbSFRUUC8yXShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL2h0dHAyLykgc2VjdGlvbi5cblxuVGhlIFtEZXZlbG9wZXIgSW50ZXJmYWNlXShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL2FwaS8pIHByb3ZpZGVzIGEgY29tcHJlaGVuc2l2ZSBBUEkgcmVmZXJlbmNlLlxuXG5UbyBmaW5kIG91dCBhYm91dCB0b29scyB0aGF0IGludGVncmF0ZSB3aXRoIEhUVFBYLCBzZWUgW1RoaXJkIFBhcnR5IFBhY2thZ2VzXShodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL3RoaXJkLXBhcnR5LXBhY2thZ2VzLykuXG5cbiMjIENvbnRyaWJ1dGVcblxuSWYgeW91IHdhbnQgdG8gY29udHJpYnV0ZSB3aXRoIEhUVFBYIGNoZWNrIG91dCB0aGUgW0NvbnRyaWJ1dGluZyBHdWlkZV0oaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZy9jb250cmlidXRpbmcvKSB0byBsZWFybiBob3cgdG8gc3RhcnQuXG5cbiMjIERlcGVuZGVuY2llc1xuXG5UaGUgSFRUUFggcHJvamVjdCByZWxpZXMgb24gdGhlc2UgZXhjZWxsZW50IGxpYnJhcmllczpcblxuKiBgaHR0cGNvcmVgIC0gVGhlIHVuZGVybHlpbmcgdHJhbnNwb3J0IGltcGxlbWVudGF0aW9uIGZvciBgaHR0cHhgLlxuICAqIGBoMTFgIC0gSFRUUC8xLjEgc3VwcG9ydC5cbiAgKiBgaDJgIC0gSFRUUC8yIHN1cHBvcnQuICooT3B0aW9uYWwpKlxuKiBgY2VydGlmaWAgLSBTU0wgY2VydGlmaWNhdGVzLlxuKiBgcmZjMzk4NmAgLSBVUkwgcGFyc2luZyAmIG5vcm1hbGl6YXRpb24uXG4gICogYGlkbmFgIC0gSW50ZXJuYXRpb25hbGl6ZWQgZG9tYWluIG5hbWUgc3VwcG9ydC5cbiogYHNuaWZmaW9gIC0gQXN5bmMgbGlicmFyeSBhdXRvZGV0ZWN0aW9uLlxuKiBgYnJvdGxpcHlgIC0gRGVjb2RpbmcgZm9yIFwiYnJvdGxpXCIgY29tcHJlc3NlZCByZXNwb25zZXMuICooT3B0aW9uYWwpKlxuXG5BIGh1Z2UgYW1vdW50IG9mIGNyZWRpdCBpcyBkdWUgdG8gYHJlcXVlc3RzYCBmb3IgdGhlIEFQSSBsYXlvdXQgdGhhdFxubXVjaCBvZiB0aGlzIHdvcmsgZm9sbG93cywgYXMgd2VsbCBhcyB0byBgdXJsbGliM2AgZm9yIHBsZW50eSBvZiBkZXNpZ25cbmluc3BpcmF0aW9uIGFyb3VuZCB0aGUgbG93ZXItbGV2ZWwgbmV0d29ya2luZyBkZXRhaWxzLlxuXG48cCBhbGlnbj1cImNlbnRlclwiPiZtZGFzaDsg4q2Q77iPICZtZGFzaDs8L3A+XG48cCBhbGlnbj1cImNlbnRlclwiPjxpPkhUVFBYIGlzIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4L2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWRcIj5CU0QgbGljZW5zZWQ8L2E+IGNvZGUuIERlc2lnbmVkICYgYnVpbHQgaW4gQnJpZ2h0b24sIEVuZ2xhbmQuPC9pPjwvcD5cblxuXG4jIENoYW5nZWxvZ1xuXG5BbGwgbm90YWJsZSBjaGFuZ2VzIHRvIHRoaXMgcHJvamVjdCB3aWxsIGJlIGRvY3VtZW50ZWQgaW4gdGhpcyBmaWxlLlxuXG5UaGUgZm9ybWF0IGlzIGJhc2VkIG9uIFtLZWVwIGEgQ2hhbmdlbG9nXShodHRwczovL2tlZXBhY2hhbmdlbG9nLmNvbS9lbi8xLjAuMC8pLlxuXG4jIyAwLjE3LjBcblxuIyMjIEFkZGVkXG5cbiogQWRkIGBodHRweC5Nb2NrVHJhbnNwb3J0KClgLCBhbGxvd2luZyB0byBtb2NrIG91dCBhIHRyYW5zcG9ydCB1c2luZyBwcmUtZGV0ZXJtaW5lZCByZXNwb25zZXMuIChQdWxsICMxNDAxLCBQdWxsICMxNDQ5KVxuKiBBZGQgYGh0dHB4LkhUVFBUcmFuc3BvcnQoKWAgYW5kIGBodHRweC5Bc3luY0hUVFBUcmFuc3BvcnQoKWAgZGVmYXVsdCB0cmFuc3BvcnRzLiAoUHVsbCAjMTM5OSlcbiogQWRkIG1vdW50IEFQSSBzdXBwb3J0LCB1c2luZyBgaHR0cHguQ2xpZW50KG1vdW50cz0uLi4pYC4gKFB1bGwgIzEzNjIpXG4qIEFkZCBgY2h1bmtfc2l6ZWAgcGFyYW1ldGVyIHRvIGBpdGVyX3JhdygpYCwgYGl0ZXJfYnl0ZXMoKWAsIGBpdGVyX3RleHQoKWAuIChQdWxsICMxMjc3KVxuKiBBZGQgYGtlZXBhbGl2ZV9leHBpcnlgIHBhcmFtZXRlciB0byBgaHR0cHguTGltaXRzKClgIGNvbmZpZ3VyYXRpb24uIChQdWxsICMxMzk4KVxuKiBBZGQgcmVwciB0byBgaHR0cHguQ29va2llc2AgdG8gZGlzcGxheSBhdmFpbGFibGUgY29va2llcy4gKFB1bGwgIzE0MTEpXG4qIEFkZCBzdXBwb3J0IGZvciBgcGFyYW1zPTx0dXBsZT5gIChwcmV2aW91c2x5IG9ubHkgYHBhcmFtcz08bGlzdD5gIHdhcyBzdXBwb3J0ZWQpLiAoUHVsbCAjMTQyNilcblxuIyMjIEZpeGVkXG5cbiogQWRkIG1pc3NpbmcgYHJhd19wYXRoYCB0byBBU0dJIHNjb3BlLiAoUHVsbCAjMTM1NylcbiogVHdlYWsgYGNyZWF0ZV9zc2xfY29udGV4dGAgZGVmYXVsdHMgdG8gdXNlIGB0cnVzdF9lbnY9VHJ1ZWAuIChQdWxsICMxNDQ3KVxuKiBQcm9wZXJseSBVUkwtZXNjYXBlIFdTR0kgYFBBVEhfSU5GT2AuIChQdWxsICMxMzkxKVxuKiBQcm9wZXJseSBzZXQgZGVmYXVsdCBwb3J0cyBpbiBXU0dJIHRyYW5zcG9ydC4gKFB1bGwgIzE0NjkpXG4qIFByb3Blcmx5IGVuY29kZSBzbGFzaGVzIHdoZW4gdXNpbmcgYGJhc2VfdXJsYC4gKFB1bGwgIzE0MDcpXG4qIFByb3Blcmx5IG1hcCBleGNlcHRpb25zIGluIGByZXF1ZXN0LmFjbG9zZSgpYC4gKFB1bGwgIzE0NjUpXG5cbiMjIDAuMTYuMSAoT2N0b2JlciA4dGgsIDIwMjApXG5cbiMjIyBGaXhlZFxuXG4qIFN1cHBvcnQgbGl0ZXJhbCBJUHY2IGFkZHJlc3NlcyBpbiBVUkxzLiAoUHVsbCAjMTM0OSlcbiogRm9yY2UgbG93ZXJjYXNlIGhlYWRlcnMgaW4gQVNHSSBzY29wZSBkaWN0aW9uYXJpZXMuIChQdWxsICMxMzUxKVxuXG4jIyAwLjE2LjAgKE9jdG9iZXIgNnRoLCAyMDIwKVxuXG4jIyMgQ2hhbmdlZFxuXG4qIFByZXNlcnZlIEhUVFAgaGVhZGVyIGNhc2luZy4gKFB1bGwgIzEzMzgsIGVuY29kZS9odHRwY29yZSMyMTYsIHB5dGhvbi1oeXBlci9oMTEjMTA0KVxuKiBEcm9wIGByZXNwb25zZS5uZXh0KClgIGFuZCBgcmVzcG9uc2UuYW5leHQoKWAgbWV0aG9kcyBpbiBmYXZvdXIgb2YgYHJlc3BvbnNlLm5leHRfcmVxdWVzdGAgYXR0cmlidXRlLiAoUHVsbCAjMTMzOSlcbiogQ2xvc2VkIGNsaWVudHMgbm93IHJhaXNlIGEgcnVudGltZSBlcnJvciBpZiBhdHRlbXB0aW5nIHRvIHNlbmQgYSByZXF1ZXN0LiAoUHVsbCAjMTM0NilcblxuIyMjIEFkZGVkXG5cbiogQWRkIFB5dGhvbiAzLjkgdG8gb2ZmaWNpYWxseSBzdXBwb3J0ZWQgdmVyc2lvbnMuXG4qIFR5cGUgYW5ub3RhdGUgYF9fZW50ZXJfX2AvYF9fZXhpdF9fYC9gX19hZW50ZXJfX2AvYF9fYWV4aXRfX2AgaW4gYSB3YXkgdGhhdCBzdXBwb3J0cyBzdWJjbGFzc2VzIG9mIGBDbGllbnRgIGFuZCBgQXN5bmNDbGllbnRgLiAoUHVsbCAjMTMzNilcblxuIyMgMC4xNS41IChPY3RvYmVyIDFzdCwgMjAyMClcblxuIyMjIEFkZGVkXG5cbiogQWRkIGByZXNwb25zZS5uZXh0X3JlcXVlc3RgIChQdWxsICMxMzM0KVxuXG4jIyAwLjE1LjQgKFNlcHRlbWJlciAyNXRoLCAyMDIwKVxuXG4jIyMgQWRkZWRcblxuKiBTdXBwb3J0IGRpcmVjdCBjb21wYXJpc29ucyBiZXR3ZWVuIGBIZWFkZXJzYCBhbmQgZGljdHMgb3IgbGlzdHMgb2YgdHdvLXR1cGxlcy4gRWcuIGBhc3NlcnQgcmVzcG9uc2UuaGVhZGVycyA9PSB7XCJDb250ZW50LUxlbmd0aFwiOiAyNH1gIChQdWxsICMxMzI2KVxuXG4jIyMgRml4ZWRcblxuKiBGaXggYXV0b21hdGljIGAucmVhZCgpYCB3aGVuIGBSZXNwb25zZWAgaW5zdGFuY2VzIGFyZSBjcmVhdGVkIHdpdGggYGNvbnRlbnQ9PHN0cj5gIChQdWxsICMxMzI0KVxuXG4jIyAwLjE1LjMgKFNlcHRlbWJlciAyNHRoLCAyMDIwKVxuXG4jIyMgRml4ZWRcblxuKiBGaXhlZCBjb25uZWN0aW9uIGxlYWsgaW4gYXN5bmMgY2xpZW50IGR1ZSB0byBpbXByb3BlciBjbG9zaW5nIG9mIHJlc3BvbnNlIHN0cmVhbXMuIChQdWxsICMxMzE2KVxuXG4jIyAwLjE1LjIgKFNlcHRlbWJlciAyM25kLCAyMDIwKVxuXG4jIyMgRml4ZWRcblxuKiBGaXhlZCBgcmVzcG9uc2UuZWxhcHNlZGAgcHJvcGVydHkuIChQdWxsICMxMzEzKVxuKiBGaXhlZCBjbGllbnQgYXV0aGVudGljYXRpb24gaW50ZXJhY3Rpb24gd2l0aCBgLnN0cmVhbSgpYC4gKFB1bGwgIzEzMTIpXG5cbiMjIDAuMTUuMSAoU2VwdGVtYmVyIDIzbmQsIDIwMjApXG5cbiMjIyBGaXhlZFxuXG4qIEFTR0lUcmFuc3BvcnQgbm93IHByb3Blcmx5IGFwcGxpZXMgVVJMIGRlY29kaW5nIHRvIHRoZSBgcGF0aGAgY29tcG9uZW50LCBhcy1wZXIgdGhlIEFTR0kgc3BlYy4gKFB1bGwgIzEzMDcpXG5cbiMjIDAuMTUuMCAoU2VwdGVtYmVyIDIybmQsIDIwMjApXG5cbiMjIyBBZGRlZFxuXG4qIEFkZGVkIHN1cHBvcnQgZm9yIGN1cmlvLiAoUHVsbCBodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHBjb3JlL3B1bGwvMTY4KVxuKiBBZGRlZCBzdXBwb3J0IGZvciBldmVudCBob29rcy4gKFB1bGwgIzEyNDYpXG4qIEFkZGVkIHN1cHBvcnQgZm9yIGF1dGhlbnRpY2F0aW9uIGZsb3dzIHdoaWNoIHJlcXVpcmUgZWl0aGVyIHN5bmMgb3IgYXN5bmMgSS9PLiAoUHVsbCAjMTIxNylcbiogQWRkZWQgc3VwcG9ydCBmb3IgbW9uaXRvcmluZyBkb3dubG9hZCBwcm9ncmVzcyB3aXRoIGByZXNwb25zZS5udW1fYnl0ZXNfZG93bmxvYWRlZGAuIChQdWxsICMxMjY4KVxuKiBBZGRlZCBgUmVxdWVzdChjb250ZW50PS4uLilgIGZvciBieXRlIGNvbnRlbnQsIGluc3RlYWQgb2Ygb3ZlcmxvYWRpbmcgYFJlcXVlc3QoZGF0YT0uLi4pYCAoUHVsbCAjMTI2NilcbiogQWRkZWQgc3VwcG9ydCBmb3IgYWxsIFVSTCBjb21wb25lbnRzIGFzIHBhcmFtZXRlciBuYW1lcyB3aGVuIHVzaW5nIGB1cmwuY29weV93aXRoKC4uLilgLiAoUHVsbCAjMTI4NSlcbiogTmVhdGVyIHNwbGl0IGJldHdlZW4gYXV0b21hdGljYWxseSBwb3B1bGF0ZWQgaGVhZGVycyBvbiBgUmVxdWVzdGAgaW5zdGFuY2VzLCB2cyBkZWZhdWx0IGBjbGllbnQuaGVhZGVyc2AuIChQdWxsICMxMjQ4KVxuKiBVbmNsb3NlZCBgQXN5bmNDbGllbnRgIGluc3RhbmNlcyB3aWxsIG5vdyByYWlzZSB3YXJuaW5ncyBpZiBnYXJiYWdlIGNvbGxlY3RlZC4gKFB1bGwgIzExOTcpXG4qIFN1cHBvcnQgYFJlc3BvbnNlKGNvbnRlbnQ9Li4uLCB0ZXh0PS4uLiwgaHRtbD0uLi4sIGpzb249Li4uKWAgZm9yIGNyZWF0aW5nIHVzYWJsZSByZXNwb25zZSBpbnN0YW5jZXMgaW4gY29kZS4gKFB1bGwgIzEyNjUsICMxMjk3KVxuKiBTdXBwb3J0IGluc3RhbnRpYXRpbmcgcmVxdWVzdHMgZnJvbSB0aGUgbG93LWxldmVsIHRyYW5zcG9ydCBBUEkuIChQdWxsICMxMjkzKVxuKiBSYWlzZSBlcnJvcnMgb24gaW52YWxpZCBVUkwgdHlwZXMuIChQdWxsICMxMjU5KVxuXG4jIyMgQ2hhbmdlZFxuXG4qIENsZWFuZWQgdXAgZXhwZWN0ZWQgYmVoYXZpb3VyIGZvciBVUkwgZXNjYXBpbmcuIGB1cmwucGF0aGAgaXMgbm93IFVSTCBlc2NhcGVkLiAoUHVsbCAjMTI4NSlcbiogQ2xlYW5lZCB1cCBleHBlY3RlZCBiZWhhdmlvdXIgZm9yIGJ5dGVzIHZzIHN0ciBpbiBVUkwgY29tcG9uZW50cy4gYHVybC51c2VyaW5mb2AgYW5kIGB1cmwucXVlcnlgIGFyZSBub3QgVVJMIGVzY2FwZWQsIGFuZCBzbyByZXR1cm4gYnl0ZXMuIChQdWxsICMxMjg1KVxuKiBEcm9wIGB1cmwuYXV0aG9yaXR5YCBwcm9wZXJ0eSBpbiBmYXZvdXIgb2YgYHVybC5uZXRsb2NgLCBzaW5jZSBcImF1dGhvcml0eVwiIHdhcyBzZW1hbnRpY2FsbHkgaW5jb3JyZWN0LiAoUHVsbCAjMTI4NSlcbiogRHJvcCBgdXJsLmZ1bGxfcGF0aGAgcHJvcGVydHkgaW4gZmF2b3VyIG9mIGB1cmwucmF3X3BhdGhgLCBmb3IgYmV0dGVyIGNvbnNpc3RlbmN5IHdpdGggb3RoZXIgcGFydHMgb2YgdGhlIEFQSS4gKFB1bGwgIzEyODUpXG4qIE5vIGxvbmdlciB1c2UgdGhlIGBjaGFyZGV0YCBsaWJyYXJ5IGZvciBhdXRvLWRldGVjdGluZyBjaGFyc2V0cywgaW5zdGVhZCBkZWZhdWx0aW5nIHRvIGEgc2ltcGxlciBhcHByb2FjaCB3aGVuIG5vIGNoYXJzZXQgaXMgc3BlY2lmaWVkLiAoIzEyNjkpXG5cbiMjIyBGaXhlZFxuXG4qIFN3YXBwZWQgb3JkZXJpbmcgb2YgcmVkaXJlY3RzIGFuZCBhdXRoZW50aWNhdGlvbiBmbG93LiAoUHVsbCAjMTI2NylcbiogYC5uZXRyY2AgbG9va3VwcyBzaG91bGQgdXNlIGhvc3QsIG5vdCBob3N0K3BvcnQuIChQdWxsICMxMjk4KVxuXG4jIyMgUmVtb3ZlZFxuXG4qIFRoZSBgVVJMTGliM1RyYW5zcG9ydGAgY2xhc3Mgbm8gbG9uZ2VyIGV4aXN0cy4gV2UndmUgcHVibGlzaGVkIGl0IGluc3RlYWQgYXMgYW4gZXhhbXBsZSBvZiBbYSBjdXN0b20gdHJhbnNwb3J0IGNsYXNzXShodHRwczovL2dpc3QuZ2l0aHViLmNvbS9mbG9yaW1vbmRtYW5jYS9kNTY3NjRkNzhkNzQ4ZWI5ZjczMTY1ZGEzODhlNTQ2ZSkuIChQdWxsICMxMTgyKVxuKiBEcm9wIGByZXF1ZXN0LnRpbWVyYCBhdHRyaWJ1dGUsIHdoaWNoIHdhcyBiZWluZyB1c2VkIGludGVybmFsbHkgdG8gc2V0IGByZXNwb25zZS5lbGFwc2VkYC4gKFB1bGwgIzEyNDkpXG4qIERyb3AgYHJlc3BvbnNlLmRlY29kZXJgIGF0dHJpYnV0ZSwgd2hpY2ggd2FzIGJlaW5nIHVzZWQgaW50ZXJuYWxseS4gKFB1bGwgIzEyNzYpXG4qIGBSZXF1ZXN0LnByZXBhcmUoKWAgaXMgbm93IGEgcHJpdmF0ZSBtZXRob2QuIChQdWxsICMxMjg0KVxuKiBUaGUgYEhlYWRlcnMuZ2V0bGlzdCgpYCBtZXRob2QgaGFkIHByZXZpb3VzbHkgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgSGVhZGVycy5nZXRfbGlzdCgpYC4gSXQgaXMgbm93IGZ1bGx5IHJlbW92ZWQuXG4qIFRoZSBgUXVlcnlQYXJhbXMuZ2V0bGlzdCgpYCBtZXRob2QgaGFkIHByZXZpb3VzbHkgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgUXVlcnlQYXJhbXMuZ2V0X2xpc3QoKWAuIEl0IGlzIG5vdyBmdWxseSByZW1vdmVkLlxuKiBUaGUgYFVSTC5pc19zc2xgIHByb3BlcnR5IGhhZCBwcmV2aW91c2x5IGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgYFVSTC5zY2hlbWUgPT0gXCJodHRwc1wiYC4gSXQgaXMgbm93IGZ1bGx5IHJlbW92ZWQuXG4qIFRoZSBgaHR0cHguUG9vbExpbWl0c2AgY2xhc3MgaGFkIHByZXZpb3VzbHkgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgaHR0cHguTGltaXRzYC4gSXQgaXMgbm93IGZ1bGx5IHJlbW92ZWQuXG4qIFRoZSBgbWF4X2tlZXBhbGl2ZWAgc2V0dGluZyBoYWQgcHJldmlvdXNseSBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIHRoZSBtb3JlIGV4cGxpY2l0IGBtYXhfa2VlcGFsaXZlX2Nvbm5lY3Rpb25zYC4gSXQgaXMgbm93IGZ1bGx5IHJlbW92ZWQuXG4qIFRoZSB2ZXJib3NlIGBodHRweC5UaW1lb3V0KDUuMCwgY29ubmVjdF90aW1lb3V0PTYwLjApYCBzdHlsZSBoYWQgcHJldmlvdXNseSBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGBodHRweC5UaW1lb3V0KDUuMCwgY29ubmVjdD02MC4wKWAuIEl0IGlzIG5vdyBmdWxseSByZW1vdmVkLlxuKiBTdXBwb3J0IGZvciBpbnN0YW50aWF0aW5nIGEgdGltZW91dCBjb25maWcgbWlzc2luZyBzb21lIGRlZmF1bHRzLCBzdWNoIGFzIGBodHRweC5UaW1lb3V0KGNvbm5lY3Q9NjAuMClgLCBoYWQgcHJldmlvdXNseSBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGVuZm9yY2luZyBhIG1vcmUgZXhwbGljaXQgc3R5bGUsIHN1Y2ggYXMgYGh0dHB4LlRpbWVvdXQoNS4wLCBjb25uZWN0PTYwLjApYC4gVGhpcyBpcyBub3cgc3RyaWN0bHkgZW5mb3JjZWQuXG5cbiMjIDAuMTQuMyAoU2VwdGVtYmVyIDJuZCwgMjAyMClcblxuIyMjIEFkZGVkXG5cbiogYGh0dHAuUmVzcG9uc2UoKWAgbWF5IG5vdyBiZSBpbnN0YW50aWF0ZWQgd2l0aG91dCBhIGByZXF1ZXN0PS4uLmAgcGFyYW1ldGVyLiBVc2VmdWwgZm9yIHNvbWUgdW5pdCB0ZXN0aW5nIGNhc2VzLiAoUHVsbCAjMTIzOClcbiogQWRkIGAxMDMgRWFybHkgSGludHNgIGFuZCBgNDI1IFRvbyBFYXJseWAgc3RhdHVzIGNvZGVzLiAoUHVsbCAjMTI0NClcblxuIyMjIEZpeGVkXG5cbiogYERpZ2VzdEF1dGhgIG5vdyBoYW5kbGVzIHJlc3BvbnNlcyB0aGF0IGluY2x1ZGUgbXVsdGlwbGUgJ1dXVy1BdXRoZW50aWNhdGUnIGhlYWRlcnMuIChQdWxsICMxMjQwKVxuKiBDYWxsIGludG8gdHJhbnNwb3J0IGBfX2VudGVyX19gL2BfX2V4aXRfX2Agb3IgYF9fYWVudGVyX19gL2BfX2FleGl0X19gIHdoZW4gY2xpZW50IGlzIHVzZWQgaW4gYSBjb250ZXh0IG1hbmFnZXIgc3R5bGUuIChQdWxsICMxMjE4KVxuXG4jIyAwLjE0LjIgKEF1Z3VzdCAyNHRoLCAyMDIwKVxuXG4jIyMgQWRkZWRcblxuKiBTdXBwb3J0IGBjbGllbnQuZ2V0KC4uLiwgYXV0aD1Ob25lKWAgdG8gYnlwYXNzIHRoZSBkZWZhdWx0IGF1dGhlbnRpY2F0aW9uIG9uIGEgY2xpZW50cy4gKFB1bGwgIzExMTUpXG4qIFN1cHBvcnQgYGNsaWVudC5hdXRoID0gLi4uYCBwcm9wZXJ0eSBzZXR0ZXIuIChQdWxsICMxMTg1KVxuKiBTdXBwb3J0IGBodHRweC5nZXQoLi4uLCBwcm94aWVzPS4uLilgIG9uIHRvcC1sZXZlbCByZXF1ZXN0IGZ1bmN0aW9ucy4gKFB1bGwgIzExOTgpXG4qIERpc3BsYXkgaW5zdGFuY2VzIHdpdGggbmljZXIgaW1wb3J0IHN0eWxlcy4gKEVnLiA8aHR0cHguUmVhZFRpbWVvdXQgLi4uPikgKFB1bGwgIzExNTUpXG4qIFN1cHBvcnQgYGNvb2tpZXM9WyhrZXksIHZhbHVlKV1gIGxpc3Qtb2YtdHdvLXR1cGxlcyBzdHlsZSB1c2FnZS4gKFB1bGwgIzEyMTEpXG5cbiMjIyBGaXhlZFxuXG4qIEVuc3VyZSB0aGF0IGF1dG9tYXRpY2FsbHkgaW5jbHVkZWQgaGVhZGVycyBvbiBhIHJlcXVlc3QgbWF5IGJlIG1vZGlmaWVkLiAoUHVsbCAjMTIwNSlcbiogQWxsb3cgZXhwbGljaXQgYENvbnRlbnQtTGVuZ3RoYCBoZWFkZXIgb24gc3RyZWFtaW5nIHJlcXVlc3RzLiAoUHVsbCAjMTE3MClcbiogSGFuZGxlIFVSTCBxdW90ZWQgdXNlcm5hbWVzIGFuZCBwYXNzd29yZHMgcHJvcGVybHkuIChQdWxsICMxMTU5KVxuKiBVc2UgbW9yZSBjb25zaXN0ZW50IGRlZmF1bHQgZm9yIGBIRUFEYCByZXF1ZXN0cywgc2V0dGluZyBgYWxsb3dfcmVkaXJlY3RzPVRydWVgLiAoUHVsbCAjMTE4MylcbiogSWYgYSB0cmFuc3BvcnQgZXJyb3Igb2NjdXJzIHdoaWxlIHN0cmVhbWluZyB0aGUgcmVzcG9uc2UsIHJhaXNlIGFuIGBodHRweGAgZXhjZXB0aW9uLCBub3QgdGhlIHVuZGVybHlpbmcgYGh0dHBjb3JlYCBleGNlcHRpb24uIChQdWxsICMxMTkwKVxuKiBJbmNsdWRlIHRoZSB1bmRlcmx5aW5nIGBodHRwY29yZWAgdHJhY2ViYWNrLCB3aGVuIHRyYW5zcG9ydCBleGNlcHRpb25zIG9jY3VyLiAoUHVsbCAjMTE5OSlcblxuIyMgMC4xNC4xIChBdWd1c3QgMTF0aCwgMjAyMClcblxuIyMjIEFkZGVkXG5cbiogVGhlIGBodHRweC5VUkwoLi4uKWAgY2xhc3Mgbm93IHJhaXNlcyBgaHR0cHguSW52YWxpZFVSTGAgb24gaW52YWxpZCBVUkxzLCByYXRoZXIgdGhhbiBleHBvc2luZyB0aGUgdW5kZXJseWluZyBgcmZjMzk4NmAgZXhjZXB0aW9uLiBJZiBhIHJlZGlyZWN0IHJlc3BvbnNlIGluY2x1ZGVzIGFuIGludmFsaWQgJ0xvY2F0aW9uJyBoZWFkZXIsIHRoZW4gYSBgUmVtb3RlUHJvdG9jb2xFcnJvcmAgZXhjZXB0aW9uIGlzIHJhaXNlZCwgd2hpY2ggd2lsbCBiZSBhc3NvY2lhdGVkIHdpdGggdGhlIHJlcXVlc3QgdGhhdCBjYXVzZWQgaXQuIChQdWxsICMxMTYzKVxuXG4jIyMgRml4ZWRcblxuKiBIYW5kbGluZyBtdWx0aXBsZSBgU2V0LUNvb2tpZWAgaGVhZGVycyBiZWNhbWUgYnJva2VuIGluIHRoZSAwLjE0LjAgcmVsZWFzZSwgYW5kIGlzIG5vdyByZXNvbHZlZC4gKFB1bGwgIzExNTYpXG5cbiMjIDAuMTQuMCAoQXVndXN0IDd0aCwgMjAyMClcblxuVGhlIDAuMTQgcmVsZWFzZSBpbmNsdWRlcyBhIHJhbmdlIG9mIGltcHJvdmVtZW50cyB0byB0aGUgcHVibGljIEFQSSwgaW50ZW5kZWQgb24gcHJlcGFyaW5nIGZvciBvdXIgdXBjb21pbmcgMS4wIHJlbGVhc2UuXG5cbiogT3VyIEhUVFAvMiBzdXBwb3J0IGlzIG5vdyBmdWxseSBvcHRpb25hbC4gKipZb3Ugbm93IG5lZWQgdG8gdXNlIGBwaXAgaW5zdGFsbCBodHRweFtodHRwMl1gIGlmIHlvdSB3YW50IHRvIGluY2x1ZGUgdGhlIEhUVFAvMiBkZXBlbmRhbmNpZXMuKipcbiogT3VyIEhTVFMgc3VwcG9ydCBoYXMgbm93IGJlZW4gcmVtb3ZlZC4gUmV3cml0aW5nIFVSTHMgZnJvbSBgaHR0cGAgdG8gYGh0dHBzYCBpZiB0aGUgaG9zdCBpcyBvbiB0aGUgSFNUUyBsaXN0IGNhbiBiZSBiZW5lZmljaWFsIGluIGF2b2lkaW5nIHJvdW5kdHJpcHMgdG8gaW5jb3JyZWN0bHkgZm9ybWVkIFVSTHMsIGJ1dCBvbiBiYWxhbmNlIHdlJ3ZlIGRlY2lkZWQgdG8gcmVtb3ZlIHRoaXMgZmVhdHVyZSwgb24gdGhlIHByaW5jaXBsZSBvZiBsZWFzdCBzdXJwcmlzZS4gTW9zdCBwcm9ncmFtbWF0aWMgY2xpZW50cyBkbyBub3QgaW5jbHVkZSBIU1RTIHN1cHBvcnQsIGFuZCBmb3Igbm93IHdlJ3JlIG9wdGluZyB0byByZW1vdmUgb3VyIHN1cHBvcnQgZm9yIGl0LlxuKiBPdXIgZXhjZXB0aW9uIGhpZXJhcmNoeSBoYXMgYmVlbiBvdmVyaGF1bGVkLiBNb3N0IHVzZXJzIHdpbGwgd2FudCB0byBzdGljayB3aXRoIHRoZWlyIGV4aXN0aW5nIGBodHRweC5IVFRQRXJyb3JgIHVzYWdlLCBidXQgd2UndmUgZ290IGEgY2xlYXJlciBvdmVyYWxsIHN0cnVjdHVyZSBub3cuIFNlZSBodHRwczovL3d3dy5weXRob24taHR0cHgub3JnL2V4Y2VwdGlvbnMvIGZvciBtb3JlIGRldGFpbHMuXG5cbldoZW4gdXBncmFkaW5nIHlvdSBzaG91bGQgYmUgYXdhcmUgb2YgdGhlIGZvbGxvd2luZyBwdWJsaWMgQVBJIGNoYW5nZXMuIE5vdGUgdGhhdCBkZXByZWNhdGVkIHVzYWdlcyB3aWxsIGN1cnJlbnRseSBjb250aW51ZSB0byBmdW5jdGlvbiwgYnV0IHdpbGwgaXNzdWUgd2FybmluZ3MuXG5cbiogWW91IHNob3VsZCBub3cgdXNlIGBodHRweC5jb2Rlc2AgY29uc2lzdGVudGx5IGluc3RlYWQgb2YgYGh0dHB4LlN0YXR1c0NvZGVzYC5cbiogVXNhZ2Ugb2YgYGh0dHB4LlRpbWVvdXQoKWAgc2hvdWxkIG5vdyBhbHdheXMgaW5jbHVkZSBhbiBleHBsaWNpdCBkZWZhdWx0LiBFZy4gYGh0dHB4LlRpbWVvdXQoTm9uZSwgcG9vbD01LjApYC5cbiogV2hlbiB1c2luZyBgaHR0cHguVGltZW91dCgpYCwgd2Ugbm93IGhhdmUgbW9yZSBjb25jaXNlbHkgbmFtZWQga2V5d29yZCBhcmd1bWVudHMuIEVnLiBgcmVhZD01LjBgLCBpbnN0ZWFkIG9mIGByZWFkX3RpbWVvdXQ9NS4wYC5cbiogVXNlIGBodHRweC5MaW1pdHMoKWAgaW5zdGVhZCBvZiBgaHR0cHguUG9vbExpbWl0cygpYCwgYW5kIGBsaW1pdHM9Li4uYCBpbnN0ZWFkIG9mIGBwb29sX2xpbWl0cz0uLi5gLlxuKiBUaGUgYGh0dHB4LkxpbWl0cyhtYXhfa2VlcGFsaXZlPS4uLilgIGFyZ3VtZW50IGlzIG5vdyBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBhIG1vcmUgZXhwbGljaXQgYGh0dHB4LkxpbWl0cyhtYXhfa2VlcGFsaXZlX2Nvbm5lY3Rpb25zPS4uLilgLlxuKiBLZXlzIHVzZWQgd2l0aCBgQ2xpZW50KHByb3hpZXM9ey4uLn0pYCBzaG91bGQgbm93IGJlIGluIHRoZSBzdHlsZSBvZiBge1wiaHR0cDovL1wiOiAuLi59YCwgcmF0aGVyIHRoYW4gYHtcImh0dHBcIjogLi4ufWAuXG4qIFRoZSBtdWx0aWRpY3QgbWV0aG9kcyBgSGVhZGVycy5nZXRsaXN0KClgIGFuZCBgUXVlcnlQYXJhbXMuZ2V0bGlzdCgpYCBhcmUgZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgbW9yZSBjb25zaXN0ZW50IGAuZ2V0X2xpc3QoKWAgdmFyaWFudHMuXG4qIFRoZSBgVVJMLmlzX3NzbGAgcHJvcGVydHkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgYFVSTC5zY2hlbWUgPT0gXCJodHRwc1wiYC5cbiogVGhlIGBVUkwuam9pbihyZWxhdGl2ZV91cmw9Li4uKWAgbWV0aG9kIGlzIG5vdyBgVVJMLmpvaW4odXJsPS4uLilgLiBUaGlzIGNoYW5nZSBkb2VzIG5vdCBzdXBwb3J0IHdhcm5pbmdzIGZvciB0aGUgZGVwcmVjYXRlZCB1c2FnZSBzdHlsZS5cblxuT25lIG5vdGFibGUgYXNwZWN0IG9mIHRoZSAwLjE0LjAgcmVsZWFzZSBpcyB0aGF0IGl0IHRpZ2h0ZW5zIHVwIHRoZSBwdWJsaWMgQVBJIGZvciBgaHR0cHhgLCBieSBlbnN1cmluZyB0aGF0IHNldmVyYWwgaW50ZXJuYWwgYXR0cmlidXRlcyBhbmQgbWV0aG9kcyBoYXZlIG5vdyBiZWNvbWUgc3RyaWN0bHkgcHJpdmF0ZS5cblxuVGhlIGZvbGxvd2luZyBwcmV2aW91c2x5IGhhZCBub21pbmFsbHkgcHVibGljIG5hbWVzIG9uIHRoZSBjbGllbnQsIGJ1dCB3ZXJlIGFsbCB1bmRvY3VtZW50ZWQgYW5kIGludGVuZGVkIHNvbGVseSBmb3IgaW50ZXJuYWwgdXNhZ2UuIFRoZXkgYXJlIGFsbCBub3cgcmVwbGFjZWQgd2l0aCB1bmRlcnNjb3JlZCBuYW1lcywgYW5kIHNob3VsZCBub3QgYmUgcmVsaWVkIG9uIG9yIGFjY2Vzc2VkLlxuXG5UaGVzZSBjaGFuZ2VzIHNob3VsZCBub3QgYWZmZWN0IHVzZXJzIHdobyBoYXZlIGJlZW4gd29ya2luZyBmcm9tIHRoZSBgaHR0cHhgIGRvY3VtZW50YXRpb24uXG5cbiogYC5tZXJnZV91cmwoKWAsIGAubWVyZ2VfaGVhZGVycygpYCwgYC5tZXJnZV9jb29raWVzKClgLCBgLm1lcmdlX3F1ZXJ5cGFyYW1zKClgXG4qIGAuYnVpbGRfYXV0aCgpYCwgYC5idWlsZF9yZWRpcmVjdF9yZXF1ZXN0KClgXG4qIGAucmVkaXJlY3RfbWV0aG9kKClgLCBgLnJlZGlyZWN0X3VybCgpYCwgYC5yZWRpcmVjdF9oZWFkZXJzKClgLCBgLnJlZGlyZWN0X3N0cmVhbSgpYFxuKiBgLnNlbmRfaGFuZGxpbmdfcmVkaXJlY3RzKClgLCBgLnNlbmRfaGFuZGxpbmdfYXV0aCgpYCwgYC5zZW5kX3NpbmdsZV9yZXF1ZXN0KClgXG4qIGAuaW5pdF90cmFuc3BvcnQoKWAsIGAuaW5pdF9wcm94eV90cmFuc3BvcnQoKWBcbiogYC5wcm94aWVzYCwgYC50cmFuc3BvcnRgLCBgLm5ldHJjYCwgYC5nZXRfcHJveHlfbWFwKClgXG5cblNlZSBwdWxsIHJlcXVlc3RzICM5OTcsICMxMDY1LCAjMTA3MS5cblxuU29tZSBhcmVhcyBvZiBBUEkgd2hpY2ggd2VyZSBhbHJlYWR5IG9uIHRoZSBkZXByZWNhdGlvbiBwYXRoLCBhbmQgd2VyZSByYWlzaW5nIHdhcm5pbmdzIG9yIGVycm9ycyBpbiAwLjEzLnggaGF2ZSBub3cgYmVlbiBlc2NhbGF0ZWQgdG8gYmVpbmcgZnVsbHkgcmVtb3ZlZC5cblxuKiBEcm9wIGBBU0dJRGlzcGF0Y2hgLCBgV1NHSURpc3BhdGNoYCwgd2hpY2ggaGF2ZSBiZWVuIHJlcGxhY2VkIGJ5IGBBU0dJVHJhbnNwb3J0YCwgYFdTR0lUcmFuc3BvcnRgLlxuKiBEcm9wIGBkaXNwYXRjaD0uLi5gYCBvbiBjbGllbnQsIHdoaWNoIGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGB0cmFuc3BvcnQ9Li4uYGBcbiogRHJvcCBgc29mdF9saW1pdGAsIGBoYXJkX2xpbWl0YCwgd2hpY2ggaGF2ZSBiZWVuIHJlcGxhY2VkIGJ5IGBtYXhfa2VlcGFsaXZlYCBhbmQgYG1heF9jb25uZWN0aW9uc2AuXG4qIERyb3AgYFJlc3BvbnNlLnN0cmVhbWAgYW5kYCBgUmVzcG9uc2UucmF3YCwgd2hpY2ggaGF2ZSBiZWVuIHJlcGxhY2VkIGJ5IGBgLmFpdGVyX2J5dGVzYCBhbmQgYC5haXRlcl9yYXdgLlxuKiBEcm9wIGBwcm94aWVzPTx0cmFuc3BvcnQgaW5zdGFuY2U+YCBpbiBmYXZvciBvZiBgcHJveGllcz1odHRweC5Qcm94eSguLi4pYC5cblxuU2VlIHB1bGwgcmVxdWVzdHMgIzEwNTcsICMxMDU4LlxuXG4jIyMgQWRkZWRcblxuKiBBZGRlZCBkZWRpY2F0ZWQgZXhjZXB0aW9uIGNsYXNzIGBodHRweC5IVFRQU3RhdHVzRXJyb3JgIGZvciBgLnJhaXNlX2Zvcl9zdGF0dXMoKWAgZXhjZXB0aW9ucy4gKFB1bGwgIzEwNzIpXG4qIEFkZGVkIGBodHRweC5jcmVhdGVfc3NsX2NvbnRleHQoKWAgaGVscGVyIGZ1bmN0aW9uLiAoUHVsbCAjOTk2KVxuKiBTdXBwb3J0IGZvciBwcm94eSBleGxjdXNpb25zIGxpa2UgYHByb3hpZXM9e1wiaHR0cHM6Ly93d3cuZXhhbXBsZS5jb21cIjogTm9uZX1gLiAoUHVsbCAjMTA5OSlcbiogU3VwcG9ydCBgUXVlcnlQYXJhbXMoTm9uZSlgIGFuZCBgY2xpZW50LnBhcmFtcyA9IE5vbmVgLiAoUHVsbCAjMTA2MClcblxuIyMjIENoYW5nZWRcblxuKiBVc2UgYGh0dHB4LmNvZGVzYCBjb25zaXN0ZW50bHkgaW4gZmF2b3VyIG9mIGBodHRweC5TdGF0dXNDb2Rlc2Agd2hpY2ggaXMgcGxhY2VkIGludG8gZGVwcmVjYXRpb24uIChQdWxsICMxMDg4KVxuKiBVc2FnZSBvZiBgaHR0cHguVGltZW91dCgpYCBzaG91bGQgbm93IGFsd2F5cyBpbmNsdWRlIGFuIGV4cGxpY2l0IGRlZmF1bHQuIEVnLiBgaHR0cHguVGltZW91dChOb25lLCBwb29sPTUuMClgLiAoUHVsbCAjMTA4NSlcbiogU3dpdGNoIHRvIG1vcmUgY29uY2lzZSBgaHR0cHguVGltZW91dCgpYCBrZXl3b3JkIGFyZ3VtZW50cy4gRWcuIGByZWFkPTUuMGAsIGluc3RlYWQgb2YgYHJlYWRfdGltZW91dD01LjBgLiAoUHVsbCAjMTExMSlcbiogVXNlIGBodHRweC5MaW1pdHMoKWAgaW5zdGVhZCBvZiBgaHR0cHguUG9vbExpbWl0cygpYCwgYW5kIGBsaW1pdHM9Li4uYCBpbnN0ZWFkIG9mIGBwb29sX2xpbWl0cz0uLi5gLiAoUHVsbCAjMTExMylcbiogS2V5cyB1c2VkIHdpdGggYENsaWVudChwcm94aWVzPXsuLi59KWAgc2hvdWxkIG5vdyBiZSBpbiB0aGUgc3R5bGUgb2YgYHtcImh0dHA6Ly9cIjogLi4ufWAsIHJhdGhlciB0aGFuIGB7XCJodHRwXCI6IC4uLn1gLiAoUHVsbCAjMTEyNylcbiogVGhlIG11bHRpZGljdCBtZXRob2RzIGBIZWFkZXJzLmdldGxpc3RgIGFuZCBgUXVlcnlQYXJhbXMuZ2V0bGlzdGAgYXJlIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIG1vcmUgY29uc2lzdGVudCBgLmdldF9saXN0KClgIHZhcmlhbnRzLiAoUHVsbCAjMTA4OSlcbiogYFVSTC5wb3J0YCBiZWNvbWVzIGBPcHRpb25hbFtpbnRdYC4gTm93IG9ubHkgcmV0dXJucyBhIHBvcnQgaWYgb25lIGlzIGV4cGxpY2l0bHkgaW5jbHVkZWQgaW4gdGhlIFVSTCBzdHJpbmcuIChQdWxsICMxMDgwKVxuKiBUaGUgYFVSTCguLi4sIGFsbG93X3JlbGF0aXZlPVtib29sXSlgIHBhcmFtZXRlciBubyBsb25nZXIgZXhpc3RzLiBBbGwgVVJMIGluc3RhbmNlcyBtYXkgYmUgcmVsYXRpdmUuIChQdWxsICMxMDczKVxuKiBEcm9wIHVubmVjZXNzYXJ5IGB1cmwuZnVsbF9wYXRoID0gLi4uYCBwcm9wZXJ0eSBzZXR0ZXIuIChQdWxsICMxMDY5KVxuKiBUaGUgYFVSTC5qb2luKHJlbGF0aXZlX3VybD0uLi4pYCBtZXRob2QgaXMgbm93IGBVUkwuam9pbih1cmw9Li4uKWAuIChQdWxsICMxMTI5KVxuKiBUaGUgYFVSTC5pc19zc2xgIHByb3BlcnR5IGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGBVUkwuc2NoZW1lID09IFwiaHR0cHNcImAuIChQdWxsICMxMTI4KVxuXG4jIyMgRml4ZWRcblxuKiBBZGQgbWlzc2luZyBgUmVzcG9uc2UubmV4dCgpYCBtZXRob2QuIChQdWxsICMxMDU1KVxuKiBFbnN1cmUgYWxsIGV4Y2VwdGlvbiBjbGFzc2VzIGFyZSBleHBvc2VkIGFzIHB1YmxpYyBBUEkuIChQdWxsICMxMDQ1KVxuKiBTdXBwb3J0IG11bHRpcGxlIGl0ZW1zIHdpdGggYW4gaWRlbnRpY2FsIGZpZWxkIG5hbWUgaW4gbXVsdGlwYXJ0IGVuY29kaW5ncy4gKFB1bGwgIzc3NylcbiogU2tpcCBIU1RTIHByZWxvYWRpbmcgb24gc2luZ2xlLWxhYmVsIGRvbWFpbnMuIChQdWxsICMxMDc0KVxuKiBGaXhlcyBmb3IgYFJlc3BvbnNlLml0ZXJfbGluZXMoKWAuIChQdWxsICMxMDMzLCAjMTA3NSlcbiogSWdub3JlIHBlcm1pc3Npb24gZXJyb3JzIHdoZW4gYWNjZXNzaW5nIGAubmV0cmNgIGZpbGVzLiAoUHVsbCAjMTEwNClcbiogQWxsb3cgYmFyZSBob3N0bmFtZXMgaW4gYEhUVFBfUFJPWFlgIGV0Yy4uLiBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIChQdWxsICMxMTIwKVxuKiBTZXR0aW5ncyBgYXBwPS4uLmAgb3IgYHRyYW5zcG9ydD0uLi5gIGJ5cGFzc2VzIGFueSBlbnZpcm9ubWVudCBiYXNlZCBwcm94eSBkZWZhdWx0cy4gKFB1bGwgIzExMjIpXG4qIEZpeCBoYW5kbGluZyBvZiBgLmJhc2VfdXJsYCB3aGVuIGEgcGF0aCBjb21wb25lbnQgaXMgaW5jbHVkZWQgaW4gdGhlIGJhc2UgVVJMLiAoUHVsbCAjMTEzMClcblxuLS0tXG5cbiMjIDAuMTMuMyAoTWF5IDI5dGgsIDIwMjApXG5cbiMjIyBGaXhlZFxuXG4qIEluY2x1ZGUgbWlzc2luZyBrZWVwYWxpdmUgZXhwaXJ5IGNvbmZpZ3VyYXRpb24uIChQdWxsICMxMDA1KVxuKiBJbXByb3ZlZCBlcnJvciBtZXNzYWdlIHdoZW4gVVJMIHJlZGlyZWN0IGhhcyBhIGN1c3RvbSBzY2hlbWUuIChQdWxsICMxMDAyKVxuXG4jIyAwLjEzLjIgKE1heSAyN3RoLCAyMDIwKVxuXG4jIyMgRml4ZWRcblxuKiBJbmNsdWRlIGV4cGxpY2l0IFwiQ29udGVudC1MZW5ndGg6IDBcIiBvbiBQT1NULCBQVVQsIFBBVENIIGlmIG5vIHJlcXVlc3QgYm9keSBpcyB1c2VkLiAoUHVsbCAjOTk1KVxuKiBBZGQgYGh0dHAyYCBvcHRpb24gdG8gYGh0dHB4LkNsaWVudGAuIChQdWxsICM5ODIpXG4qIFRpZ2h0ZW4gdXAgQVBJIHR5cGluZyBpbiBwbGFjZXMuIChQdWxsICM5OTIsICM5OTkpXG5cbiMjIDAuMTMuMSAoTWF5IDIybmQsIDIwMjApXG5cbiMjIyBGaXhlZFxuXG4qIEZpeCBwb29sIG9wdGlvbnMgZGVwcmVjYXRpb24gd2FybmluZy4gKFB1bGwgIzk4MClcbiogSW5jbHVkZSBgaHR0cHguVVJMTGliM1Byb3h5VHJhbnNwb3J0YCBpbiB0b3AtbGV2ZWwgQVBJLiAoUHVsbCAjOTc5KVxuXG4jIyAwLjEzLjAgKE1heSAyMm5kLCAyMDIwKVxuXG5UaGlzIHJlbGVhc2Ugc3dpdGNoZXMgdG8gYGh0dHBjb3JlYCBmb3IgYWxsIHRoZSBpbnRlcm5hbCBuZXR3b3JraW5nLCB3aGljaCBtZWFuczpcblxuKiBXZSdyZSB1c2luZyB0aGUgc2FtZSBjb2RlYmFzZSBmb3IgYm90aCBvdXIgc3luYyBhbmQgYXN5bmMgY2xpZW50cy5cbiogSFRUUC8yIHN1cHBvcnQgaXMgbm93IGF2YWlsYWJsZSB3aXRoIHRoZSBzeW5jIGNsaWVudC5cbiogV2Ugbm8gbG9uZ2VyIGhhdmUgYSBgdXJsbGliM2AgZGVwZW5kZW5jeSBmb3Igb3VyIHN5bmMgY2xpZW50LCBhbHRob3VnaCB0aGVyZSBpcyBzdGlsbCBhbiAqb3B0aW9uYWwqIGBVUkxMaWIzVHJhbnNwb3J0YCBjbGFzcy5cblxuSXQgYWxzbyBtZWFucyB3ZSd2ZSBoYWQgdG8gcmVtb3ZlIG91ciBVRFMgc3VwcG9ydCwgc2luY2UgbWFpbnRhaW5pbmcgdGhhdCB3b3VsZCBoYXZlIG1lYW50IGhhdmluZyB0byBwdXNoIGJhY2sgb3VyIHdvcmsgdG93YXJkcyBhIDEuMCByZWxlYXNlLCB3aGljaCBpc24ndCBhIHRyYWRlLW9mZiB3ZSB3YW50ZWQgdG8gbWFrZS5cblxuV2UgYWxzbyBub3cgaGF2ZSBbYSBwdWJsaWMgXCJUcmFuc3BvcnQgQVBJXCJdKGh0dHBzOi8vd3d3LnB5dGhvbi1odHRweC5vcmcvYWR2YW5jZWQvI2N1c3RvbS10cmFuc3BvcnRzKSwgd2hpY2ggeW91IGNhbiB1c2UgdG8gaW1wbGVtZW50IGN1c3RvbSB0cmFuc3BvcnQgaW1wbGVtZW50YXRpb25zIGFnYWluc3QuIFRoaXMgZm9ybWFsaXNlcyBhbmQgcmVwbGFjZXMgb3VyIHByZXZpb3VzbHkgcHJpdmF0ZSBcIkRpc3BhdGNoIEFQSVwiLlxuXG4jIyMgQ2hhbmdlZFxuXG4qIFVzZSBgaHR0cGNvcmVgIGZvciB1bmRlcmx5aW5nIEhUVFAgdHJhbnNwb3J0LiBEcm9wIGB1cmxsaWIzYCByZXF1aXJlbWVudC4gKFB1bGwgIzgwNCwgIzk2NylcbiogUmVuYW1lIHBvb2wgbGltaXQgb3B0aW9ucyBmcm9tIGBzb2Z0X2xpbWl0YC9gaGFyZF9saW1pdGAgdG8gYG1heF9rZWVwYWxpdmVgL2BtYXhfY29ubmVjdGlvbnNgLiAoUHVsbCAjOTY4KVxuKiBUaGUgcHJldmlvdXMgcHJpdmF0ZSBcIkRpc3BhdGNoIEFQSVwiIGhhcyBub3cgYmVlbiBwcm9tb3RlZCB0byBhIHB1YmxpYyBcIlRyYW5zcG9ydCBBUElcIi4gV2hlbiBjdXN0b21pemluZyB0aGUgdHJhbnNwb3J0IHVzZSBgdHJhbnNwb3J0PS4uLmAuIFRoZSBgQVNHSURpc3BhdGNoYCBhbmQgYFdTR0lEaXNwYXRjaGAgY2xhc3MgbmFtaW5nIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGBBU0dJVHJhbnNwb3J0YCBhbmQgYFdTR0lUcmFuc3BvcnRgLiAoUHVsbCAjOTYzKVxuXG4jIyMgQWRkZWRcblxuKiBBZGRlZCBgVVJMTGliM1RyYW5zcG9ydGAgY2xhc3MgZm9yIG9wdGlvbmFsIGB1cmxsaWIzYCB0cmFuc3BvcnQgc3VwcG9ydC4gKFB1bGwgIzgwNCwgIzk2MylcbiogU3RyZWFtaW5nIG11bHRpcGFydCB1cGxvYWRzLiAoUHVsbCAjODU3KVxuKiBMb2dnaW5nIHZpYSBIVFRQQ09SRV9MT0dfTEVWRUwgYW5kIEhUVFBYX0xPR19MRVZFTCBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmFuZCBUUkFDRSBsZXZlbCBsb2dnaW5nLiAoUHVsbCBlbmNvZGUvaHR0cGNvcmUjNzkpXG5cbiMjIyBGaXhlZFxuXG4qIFBlcmZvcm1hbmNlIGltcHJvdmVtZW50IGluIGJyb3RsaSBkZWNvZGVyLiAoUHVsbCAjOTA2KVxuKiBQcm9wZXIgd2FybmluZyBsZXZlbCBvZiBkZXByZWNhdGlvbiBub3RpY2UgaW4gYFJlc3BvbnNlLnN0cmVhbWAgYW5kIGBSZXNwb25zZS5yYXdgLiAoUHVsbCAjOTA4KVxuKiBGaXggc3VwcG9ydCBmb3IgZ2VuZXJhdG9yIGJhc2VkIFdTR0kgYXBwcy4gKFB1bGwgIzg4NylcbiogUmV1c2Ugb2YgY29ubmVjdGlvbnMgb24gSFRUUC8yIGluIGNsb3NlIGNvbmN1cnJlbmN5IHNpdHVhdGlvbnMuIChQdWxsIGVuY29kZS9odHRwY29yZSM4MSlcbiogSG9ub3IgSFRUUC8yIG1heCBjb25jdXJyZW50IHN0cmVhbXMgc2V0dGluZ3MgKFB1bGwgZW5jb2RlL2h0dHBjb3JlIzg5LCBlbmNvZGUvaHR0cGNvcmUjOTApXG4qIEZpeCBieXRlcyBzdXBwb3J0IGluIG11bHRpcGFydCB1cGxvYWRzLiAoUHVsbCAjOTc0KVxuKiBJbXByb3ZlIHR5cGluZyBzdXBwb3J0IGZvciBgZmlsZXM9Li4uYC4gKFB1bGwgIzk3NilcblxuIyMjIFJlbW92ZWRcblxuKiBEcm9wcGVkIHN1cHBvcnQgZm9yIGBDbGllbnQodWRzPS4uLilgIChQdWxsICM4MDQpXG5cbiMjIDAuMTMuMC5kZXYyIChNYXkgMTJ0aCwgMjAyMClcblxuVGhlIDAuMTMuMC5kZXYyIGlzIGEgKnByZS1yZWxlYXNlKiB2ZXJzaW9uLiBUbyBpbnN0YWxsIGl0LCB1c2UgYHBpcCBpbnN0YWxsIGh0dHB4IC0tcHJlYC5cblxuIyMjIEFkZGVkXG5cbiogTG9nZ2luZyB2aWEgSFRUUENPUkVfTE9HX0xFVkVMIGFuZCBIVFRQWF9MT0dfTEVWRUwgZW52aXJvbm1lbnQgdmFyaWFibGVzXG5hbmQgVFJBQ0UgbGV2ZWwgbG9nZ2luZy4gKEhUVFBDb3JlIFB1bGwgIzc5KVxuXG4jIyMgRml4ZWRcblxuKiBSZXVzZSBvZiBjb25uZWN0aW9ucyBvbiBIVFRQLzIgaW4gY2xvc2UgY29uY3VycmVuY3kgc2l0dWF0aW9ucy4gKEhUVFBDb3JlIFB1bGwgIzgxKVxuKiBXaGVuIHVzaW5nIGFuIGBhcHA9PEFTR0kgYXBwPmAgb2JzZXJ2ZSBuZWF0ZXIgZGlzY29ubmVjdCBiZWhhdmlvdXIgaW5zdGVhZCBvZiBzZW5kaW5nIGVtcHR5IGJvZHkgbWVzc2FnZXMuIChQdWxsICM5MTkpXG5cbiMjIDAuMTMuMC5kZXYxIChNYXkgNnRoLCAyMDIwKVxuXG5UaGUgMC4xMy4wLmRldjEgaXMgYSAqcHJlLXJlbGVhc2UqIHZlcnNpb24uIFRvIGluc3RhbGwgaXQsIHVzZSBgcGlwIGluc3RhbGwgaHR0cHggLS1wcmVgLlxuXG4jIyMgRml4ZWRcblxuKiBQYXNzaW5nIGBodHRwMmAgZmxhZyB0byBwcm94eSBkaXNwYXRjaGVycy4gKFB1bGwgIzkzNClcbiogVXNlIFtgaHR0cGNvcmVgIHYwLjguM10oaHR0cHM6Ly9naXRodWIuY29tL2VuY29kZS9odHRwY29yZS9yZWxlYXNlcy90YWcvMC44LjMpXG53aGljaCBhZGRyZXNzZXMgcHJvYmxlbXMgaW4gaGFuZGxpbmcgb2YgaGVhZGVycyB3aGVuIHVzaW5nIHByb3hpZXMuXG5cbiMjIDAuMTMuMC5kZXYwIChBcHJpbCAzMHRoLCAyMDIwKVxuXG5UaGUgMC4xMy4wLmRldjAgaXMgYSAqcHJlLXJlbGVhc2UqIHZlcnNpb24uIFRvIGluc3RhbGwgaXQsIHVzZSBgcGlwIGluc3RhbGwgaHR0cHggLS1wcmVgLlxuXG5UaGlzIHJlbGVhc2Ugc3dpdGNoZXMgdG8gYGh0dHBjb3JlYCBmb3IgYWxsIHRoZSBpbnRlcm5hbCBuZXR3b3JraW5nLCB3aGljaCBtZWFuczpcblxuKiBXZSdyZSB1c2luZyB0aGUgc2FtZSBjb2RlYmFzZSBmb3IgYm90aCBvdXIgc3luYyBhbmQgYXN5bmMgY2xpZW50cy5cbiogSFRUUC8yIHN1cHBvcnQgaXMgbm93IGF2YWlsYWJsZSB3aXRoIHRoZSBzeW5jIGNsaWVudC5cbiogV2Ugbm8gbG9uZ2VyIGhhdmUgYSBgdXJsbGliM2AgZGVwZW5kZW5jeSBmb3Igb3VyIHN5bmMgY2xpZW50LCBhbHRob3VnaCB0aGVyZSBpcyBzdGlsbCBhbiAqb3B0aW9uYWwqIGBVUkxMaWIzRGlzcGF0Y2hlcmAgY2xhc3MuXG5cbkl0IGFsc28gbWVhbnMgd2UndmUgaGFkIHRvIHJlbW92ZSBvdXIgVURTIHN1cHBvcnQsIHNpbmNlIG1haW50YWluaW5nIHRoYXQgd291bGQgaGF2ZSBtZWFudCBoYXZpbmcgdG8gcHVzaCBiYWNrIG91ciB3b3JrIHRvd2FyZHMgYSAxLjAgcmVsZWFzZSwgd2hpY2ggaXNuJ3QgYSB0cmFkZS1vZmYgd2Ugd2FudGVkIHRvIG1ha2UuXG5cbiMjIyBDaGFuZ2VkXG5cbiogVXNlIGBodHRwY29yZWAgZm9yIHVuZGVybHlpbmcgSFRUUCB0cmFuc3BvcnQuIERyb3AgYHVybGxpYjNgIHJlcXVpcmVtZW50LiAoUHVsbCAjODA0KVxuXG4jIyMgQWRkZWRcblxuKiBBZGRlZCBgVVJMTGliM0Rpc3BhdGNoZXJgIGNsYXNzIGZvciBvcHRpb25hbCBgdXJsbGliM2AgdHJhbnNwb3J0IHN1cHBvcnQuIChQdWxsICM4MDQpXG4qIFN0cmVhbWluZyBtdWx0aXBhcnQgdXBsb2Fkcy4gKFB1bGwgIzg1NylcblxuIyMjIEZpeGVkXG5cbiogUGVyZm9ybWFuY2UgaW1wcm92ZW1lbnQgaW4gYnJvdGxpIGRlY29kZXIuIChQdWxsICM5MDYpXG4qIFByb3BlciB3YXJuaW5nIGxldmVsIG9mIGRlcHJlY2F0aW9uIG5vdGljZSBpbiBgUmVzcG9uc2Uuc3RyZWFtYCBhbmQgYFJlc3BvbnNlLnJhd2AuIChQdWxsICM5MDgpXG4qIEZpeCBzdXBwb3J0IGZvciBnZW5lcmF0b3IgYmFzZWQgV1NHSSBhcHBzLiAoUHVsbCAjODg3KVxuXG4jIyMgUmVtb3ZlZFxuXG4qIERyb3BwZWQgc3VwcG9ydCBmb3IgYENsaWVudCh1ZHM9Li4uKWAgKFB1bGwgIzgwNClcblxuLS0tXG5cbiMjIDAuMTIuMSAoTWFyY2ggMTl0aCwgMjAyMClcblxuIyMjIEZpeGVkXG5cbiogUmVzb2x2ZWQgcGFja2FnaW5nIGlzc3VlLCB3aGVyZSBhZGRpdGlvbmFsIGZpbGVzIHdlcmUgYmVpbmcgaW5jbHVkZWQuXG5cbiMjIDAuMTIuMCAoTWFyY2ggOXRoLCAyMDIwKVxuXG5UaGUgMC4xMiByZWxlYXNlIHRpZ2h0ZW5zIHVwIHRoZSBBUEkgZXhwZWN0YXRpb25zIGZvciBgaHR0cHhgIGJ5IHN3aXRjaGluZyB0byBwcml2YXRlIG1vZHVsZSBuYW1lcyB0byBlbmZvcmNlIGJldHRlciBjbGFyaXR5IGFyb3VuZCBwdWJsaWMgQVBJLlxuXG5BbGwgaW1wb3J0cyBvZiBgaHR0cHhgIHNob3VsZCBpbXBvcnQgZnJvbSB0aGUgdG9wLWxldmVsIHBhY2thZ2Ugb25seSwgc3VjaCBhcyBgZnJvbSBodHRweCBpbXBvcnQgUmVxdWVzdGAsIHJhdGhlciB0aGFuIGltcG9ydGluZyBmcm9tIHByaXZhdGVseSBuYW1lc3BhY2VkIG1vZHVsZXMgc3VjaCBhcyBgZnJvbSBodHRweC5fbW9kZWxzIGltcG9ydCBSZXF1ZXN0YC5cblxuIyMjIEFkZGVkXG5cbiogU3VwcG9ydCBtYWtpbmcgcmVzcG9uc2UgYm9keSBhdmFpbGFibGUgdG8gYXV0aCBjbGFzc2VzIHdpdGggYC5yZXF1aXJlc19yZXNwb25zZV9ib2R5YC4gKFB1bGwgIzgwMylcbiogRXhwb3J0IGBOZXR3b3JrRXJyb3JgIGV4Y2VwdGlvbi4gKFB1bGwgIzgxNClcbiogQWRkIHN1cHBvcnQgZm9yIGBOT19QUk9YWWAgZW52aXJvbm1lbnQgdmFyaWFibGUuIChQdWxsICM4MzUpXG5cbiMjIyBDaGFuZ2VkXG5cbiogU3dpdGNoZWQgdG8gcHJpdmF0ZSBtb2R1bGUgbmFtZXMuIChQdWxsICM3ODUpXG4qIERyb3AgcmVkaXJlY3QgbG9vcGluZyBkZXRlY3Rpb24gYW5kIHRoZSBgUmVkaXJlY3RMb29wYCBleGNlcHRpb24sIGluc3RlYWQgdXNpbmcgYFRvb01hbnlSZWRpcmVjdHNgLiAoUHVsbCAjODE5KVxuKiBEcm9wIGBiYWNrZW5kPS4uLmAgcGFyYW1ldGVyIG9uIGBBc3luY0NsaWVudGAsIGluIGZhdm91ciBvZiBhbHdheXMgYXV0b2RldGVjdGluZyBgdHJpb2AvYGFzeW5jaW9gLiAoUHVsbCAjNzkxKVxuXG4jIyMgRml4ZWRcblxuKiBTdXBwb3J0IGJhc2ljIGF1dGggY3JlZGVudGlhbHMgaW4gcHJveHkgVVJMcy4gKFB1bGwgIzc4MClcbiogRml4IGBodHRweC5Qcm94eSh1cmwsIG1vZGU9XCJGT1JXQVJEX09OTFlcIilgIGNvbmZpZ3VyYXRpb24uIChQdWxsICM3ODgpXG4qIEZhbGxiYWNrIHRvIHNldHRpbmcgaGVhZGVycyBhcyBVVEYtOCBpZiBubyBlbmNvZGluZyBpcyBzcGVjaWZpZWQuIChQdWxsICM4MjApXG4qIENsb3NlIHByb3h5IGRpc3BhdGNoZXMgY2xhc3NlcyBvbiBjbGllbnQgY2xvc2UuIChQdWxsICM4MjYpXG4qIFN1cHBvcnQgY3VzdG9tIGBjZXJ0YCBwYXJhbWV0ZXJzIGV2ZW4gaWYgYHZlcmlmeT1GYWxzZWAuIChQdWxsICM3OTYpXG4qIERvbid0IHN1cHBvcnQgaW52YWxpZCBkaWN0LW9mLWRpY3RzIGZvcm0gZGF0YSBpbiBgZGF0YT0uLi5gLiAoUHVsbCAjODExKVxuXG4tLS1cblxuIyMgMC4xMS4xIChKYW51YXJ5IDE3dGgsIDIwMjApXG5cbiMjIyBGaXhlZFxuXG4qIEZpeGVkIHVzYWdlIG9mIGBwcm94aWVzPS4uLmAgb24gYENsaWVudCgpYC4gKFB1bGwgIzc2MylcbiogU3VwcG9ydCBib3RoIGB6bGliYCBhbmQgYGRlZmxhdGVgIHN0eWxlIGVuY29kaW5ncyBvbiBgQ29udGVudC1FbmNvZGluZzogZGVmbGF0ZWAuIChQdWxsICM3NTgpXG4qIEZpeCBmb3Igc3RyZWFtaW5nIGEgcmVkaXJlY3QgcmVzcG9uc2UgYm9keSB3aXRoIGBhbGxvd19yZWRpcmVjdHM9RmFsc2VgLiAoUHVsbCAjNzY2KVxuKiBIYW5kbGUgcmVkaXJlY3Qgd2l0aCBtYWxmb3JtZWQgTG9jYXRpb24gaGVhZGVycyBtaXNzaW5nIGhvc3QuIChQdWxsICM3NzQpXG5cbiMjIDAuMTEuMCAoSmFudWFyeSA5dGgsIDIwMjApXG5cblRoZSAwLjExIHJlbGVhc2UgcmVpbnRyb2R1Y2VzIG91ciBzeW5jIHN1cHBvcnQsIHNvIHRoYXQgYGh0dHB4YCBub3cgc3VwcG9ydHMgYm90aCBhIHN0YW5kYXJkIHRocmVhZC1jb25jdXJyZW5jeSBBUEksIGFuZCBhbiBhc3luYyBBUEkuXG5cbkV4aXN0aW5nIGFzeW5jIGBodHRweGAgdXNlcnMgdGhhdCBhcmUgdXBncmFkaW5nIHRvIDAuMTEgc2hvdWxkIGVuc3VyZSB0aGF0OlxuXG4qIEFzeW5jIGNvZGViYXNlcyBzaG91bGQgYWx3YXlzIHVzZSBhIGNsaWVudCBpbnN0YW5jZSB0byBtYWtlIHJlcXVlc3RzLCBpbnN0ZWFkIG9mIHRoZSB0b3AtbGV2ZWwgQVBJLlxuKiBUaGUgYXN5bmMgY2xpZW50IGlzIG5hbWVkIGFzIGBodHRweC5Bc3luY0NsaWVudCgpYCwgaW5zdGVhZCBvZiBgaHR0cHguQ2xpZW50KClgLlxuKiBXaGVuIGluc3RhbnRpYXRpbmcgcHJveHkgY29uZmlndXJhdGlvbnMgdXNlIHRoZSBgaHR0cHguUHJveHkoKWAgY2xhc3MsIGluc3RlYWQgb2YgdGhlIHByZXZpb3VzIGBodHRweC5IVFRQUHJveHkoKWAuIFRoaXMgbmV3IGNvbmZpZ3VyYXRpb24gY2xhc3Mgd29ya3MgZm9yIGNvbmZpZ3VyaW5nIGJvdGggc3luYyBhbmQgYXN5bmMgY2xpZW50cy5cblxuV2UgYmVsaWV2ZSB0aGUgQVBJIGlzIG5vdyBwcmV0dHkgbXVjaCBzdGFibGUsIGFuZCBhcmUgYWltaW5nIGZvciBhIDEuMCByZWxlYXNlIHNvbWV0aW1lIG9uIG9yIGJlZm9yZSBBcHJpbCAyMDIwLlxuXG4jIyMgQ2hhbmdlZFxuXG4tIFRvcCBsZXZlbCBBUEkgc3VjaCBhcyBgaHR0cHguZ2V0KHVybCwgLi4uKWAsIGBodHRweC5wb3N0KHVybCwgLi4uKWAsIGBodHRweC5yZXF1ZXN0KG1ldGhvZCwgdXJsLCAuLi4pYCBiZWNvbWVzIHN5bmNocm9ub3VzLlxuLSBBZGRlZCBgaHR0cHguQ2xpZW50KClgIGZvciBzeW5jaHJvbm91cyBjbGllbnRzLCB3aXRoIGBodHRweC5Bc3luY0NsaWVudGAgYmVpbmcgdXNlZCBmb3IgYXN5bmMgY2xpZW50cy5cbi0gU3dpdGNoZWQgdG8gYHByb3hpZXM9aHR0cHguUHJveHkoLi4uKWAgZm9yIHByb3h5IGNvbmZpZ3VyYXRpb24uXG4tIE5ldHdvcmsgY29ubmVjdGlvbiBlcnJvcnMgYXJlIHdyYXBwZWQgaW4gYGh0dHB4Lk5ldHdvcmtFcnJvcmAsIHJhdGhlciB0aGFuIGV4cG9zaW5nIGxvd2VyLWxldmVsIGV4Y2VwdGlvbiB0eXBlcyBkaXJlY3RseS5cblxuIyMjIFJlbW92ZWRcblxuLSBUaGUgYHJlcXVlc3QudXJsLm9yaWdpbmAgcHJvcGVydHkgYW5kIGBodHRweC5PcmlnaW5gIGNsYXNzIGFyZSBubyBsb25nZXIgYXZhaWxhYmxlLlxuLSBUaGUgcGVyLXJlcXVlc3QgYGNlcnRgLCBgdmVyaWZ5YCwgYW5kIGB0cnVzdF9lbnZgIGFyZ3VtZW50cyBhcmUgZXNjYWxhdGVkIGZyb20gcmFpc2luZyBlcnJvcnMgaWYgdXNlZCwgdG8gbm8gbG9uZ2VyIGJlaW5nIGF2YWlsYWJsZS4gVGhlc2UgYXJndW1lbnRzIHNob3VsZCBiZSB1c2VkIG9uIGEgcGVyLWNsaWVudCBpbnN0YW5jZSBpbnN0ZWFkLCBvciBpbiB0aGUgdG9wLWxldmVsIEFQSS5cbi0gVGhlIGBzdHJlYW1gIGFyZ3VtZW50IGhhcyBlc2NhbGF0ZWQgZnJvbSByYWlzaW5nIGFuIGVycm9yIHdoZW4gdXNlZCwgdG8gbm8gbG9uZ2VyIGJlaW5nIGF2YWlsYWJsZS4gVXNlIHRoZSBgY2xpZW50LnN0cmVhbSguLi4pYCBvciBgaHR0cHguc3RyZWFtKClgIHN0cmVhbWluZyBBUEkgaW5zdGVhZC5cblxuIyMjIEZpeGVkXG5cbi0gUmVkaXJlY3QgbG9vcCBkZXRlY3Rpb24gbWF0Y2hlcyBhZ2FpbnN0IGAobWV0aG9kLCB1cmwpYCByYXRoZXIgdGhhbiBgdXJsYC4gKFB1bGwgIzczNClcblxuLS0tXG5cbiMjIDAuMTAuMSAoRGVjZW1iZXIgMzFzdCwgMjAxOSlcblxuIyMjIEZpeGVkXG5cbi0gRml4IGlzc3VlIHdpdGggY29uY3VycmVudCBjb25uZWN0aW9uIGFjcXVpcnkuIChQdWxsICM3MDApXG4tIEZpeCB3cml0ZSBlcnJvciBvbiBjbG9zaW5nIEhUVFAvMiBjb25uZWN0aW9ucy4gKFB1bGwgIzY5OSlcblxuIyMgMC4xMC4wIChEZWNlbWJlciAyOXRoLCAyMDE5KVxuXG5UaGUgMC4xMC4wIHJlbGVhc2UgbWFrZXMgc29tZSBjaGFuZ2VzIHRoYXQgd2lsbCBhbGxvdyB1cyB0byBzdXBwb3J0IGJvdGggc3luYyBhbmQgYXN5bmMgaW50ZXJmYWNlcy5cblxuSW4gcGFydGljdWxhciB3aXRoIHN0cmVhbWluZyByZXNwb25zZXMgdGhlIGByZXNwb25zZS5yZWFkKClgIG1ldGhvZCBiZWNvbWVzIGByZXNwb25zZS5hcmVhZCgpYCwgYW5kIHRoZSBgcmVzcG9uc2UuY2xvc2UoKWAgbWV0aG9kIGJlY29tZXMgYHJlc3BvbnNlLmFjbG9zZSgpYC5cblxuSWYgZm9sbG93aW5nIHJlZGlyZWN0cyBleHBsaWNpdGx5IHRoZSBgcmVzcG9uc2UubmV4dCgpYCBtZXRob2QgYmVjb21lcyBgcmVzcG9uc2UuYW5leHQoKWAuXG5cbiMjIyBGaXhlZFxuXG4tIEVuZCBIVFRQLzIgc3RyZWFtcyBpbW1lZGlhdGVseSBvbiBuby1ib2R5IHJlcXVlc3RzLCByYXRoZXIgdGhhbiBzZW5kaW5nIGFuIGVtcHR5IGJvZHkgbWVzc2FnZS4gKFB1bGwgIzY4Milcbi0gSW1wcm92ZSB0eXBpbmcgZm9yIGBSZXNwb25zZS5yZXF1ZXN0YDogc3dpdGNoIGZyb20gYE9wdGlvbmFsW1JlcXVlc3RdYCB0byBgUmVxdWVzdGAuIChQdWxsICM2NjYpXG4tIGBSZXNwb25zZS5lbGFwc2VkYCBub3cgcmVmbGVjdHMgdGhlIGVudGlyZSBkb3dubG9hZCB0aW1lLiAoUHVsbCAjNjg3LCAjNjkyKVxuXG4jIyMgQ2hhbmdlZFxuXG4tIEFkZGVkIGBBc3luY0NsaWVudGAgYXMgYSBzeW5vbnltIGZvciBgQ2xpZW50YC4gKFB1bGwgIzY4MClcbi0gU3dpdGNoIHRvIGByZXNwb25zZS5hcmVhZCgpYCBmb3IgY29uZGl0aW9uYWxseSByZWFkaW5nIHN0cmVhbWluZyByZXNwb25zZXMuIChQdWxsICM2NzQpXG4tIFN3aXRjaCB0byBgcmVzcG9uc2UuYWNsb3NlKClgIGFuZCBgY2xpZW50LmFjbG9zZSgpYCBmb3IgZXhwbGljaXQgY2xvc2luZy4gKFB1bGwgIzY3NCwgIzY3NSlcbi0gU3dpdGNoIHRvIGByZXNwb25zZS5hbmV4dCgpYCBmb3IgcmVzb2x2aW5nIHRoZSBuZXh0IHJlZGlyZWN0IHJlc3BvbnNlLiAoUHVsbCAjNjc2KVxuXG4jIyMgUmVtb3ZlZFxuXG4tIFdoZW4gdXNpbmcgYSBjbGllbnQgaW5zdGFuY2UsIHRoZSBwZXItcmVxdWVzdCB1c2FnZSBvZiBgdmVyaWZ5YCwgYGNlcnRgLCBhbmQgYHRydXN0X2VudmAgaGF2ZSBub3cgZXNjYWxhdGVkIGZyb20gcmFpc2luZyBhIHdhcm5pbmcgdG8gcmFpc2luZyBhbiBlcnJvci4gWW91IHNob3VsZCBzZXQgdGhlc2UgYXJndW1lbnRzIG9uIHRoZSBjbGllbnQgaW5zdGVhZC4gKFB1bGwgIzYxNylcbi0gUmVtb3ZlZCB0aGUgdW5kb2N1bWVudGVkIGByZXF1ZXN0LnJlYWQoKWAsIHNpbmNlIGVuZCB1c2VycyBzaG91bGQgbm90IHJlcXVpcmUgaXQuXG5cbi0tLVxuXG4jIyAwLjkuNSAoRGVjZW1iZXIgMjB0aCwgMjAxOSlcblxuIyMjIEZpeGVkXG5cbi0gRml4IEhvc3QgaGVhZGVyIGFuZCBIU1RTIHJld3JpdGVzIHdoZW4gYW4gZXhwbGljaXQgYDo4MGAgcG9ydCBpcyBpbmNsdWRlZCBpbiBVUkwuIChQdWxsICM2NDkpXG4tIFF1ZXJ5IFBhcmFtcyBvbiB0aGUgVVJMIHN0cmluZyBhcmUgbWVyZ2VkIHdpdGggYW55IGBwYXJhbXM9Li4uYCBhcmd1bWVudC4gKFB1bGwgIzY1Mylcbi0gTW9yZSByb2J1c3QgYmVoYXZpb3Igd2hlbiBjbG9zaW5nIGNvbm5lY3Rpb25zLiAoUHVsbCAjNjQwKVxuLSBNb3JlIHJvYnVzdCBiZWhhdmlvciB3aGVuIGhhbmRsaW5nIEhUVFAvMiBoZWFkZXJzIHdpdGggdHJhaWxpbmcgd2hpdGVzcGFjZS4gKFB1bGwgIzYzNylcbi0gQWxsb3cgYW55IGV4cGxpY2l0IGBDb250ZW50LVR5cGVgIGhlYWRlciB0byB0YWtlIHByZWNlZGVuY2Ugb3ZlciB0aGUgZW5jb2RpbmcgZGVmYXVsdC4gKFB1bGwgIzYzMylcblxuIyMgMC45LjQgKERlY2VtYmVyIDEydGgsIDIwMTkpXG5cbiMjIyBGaXhlZFxuXG4tIEFkZGVkIGV4cGlyeSB0byBLZWVwLUFsaXZlIGNvbm5lY3Rpb25zLCByZXNvbHZpbmcgaXNzdWVzIHdpdGggYWNxdWlyaW5nIGNvbm5lY3Rpb25zLiAoUHVsbCAjNjI3KVxuLSBJbmNyZWFzZWQgZmxvdyBjb250cm9sIHdpbmRvd3Mgb24gSFRUUC8yLCByZXNvbHZpbmcgZG93bmxvYWQgc3BlZWQgaXNzdWVzLiAoUHVsbCAjNjI5KVxuXG4jIyAwLjkuMyAoRGVjZW1iZXIgN3RoLCAyMDE5KVxuXG4jIyMgRml4ZWRcblxuLSBGaXhlZCBIVFRQLzIgd2l0aCBhdXRvZGV0ZWN0aW9uIGJhY2tlbmQuIChQdWxsICM2MTQpXG5cbiMjIDAuOS4yIChEZWNlbWJlciA3dGgsIDIwMTkpXG5cbiogUmVsZWFzZWQgZHVlIHRvIHBhY2thZ2luZyBidWlsZCBhcnRpZmFjdC5cblxuIyMgMC45LjEgKERlY2VtYmVyIDZ0aCwgMjAxOSlcblxuKiBSZWxlYXNlZCBkdWUgdG8gcGFja2FnaW5nIGJ1aWxkIGFydGlmYWN0LlxuXG4jIyAwLjkuMCAoRGVjZW1iZXIgNnRoLCAyMDE5KVxuXG5UaGUgMC45IHJlbGVhc2VzIGJyaW5ncyBzb21lIG1ham9yIG5ldyBmZWF0dXJlcywgaW5jbHVkaW5nOlxuXG4qIEEgbmV3IHN0cmVhbWluZyBBUEkuXG4qIEF1dG9kZXRlY3Rpb24gb2YgZWl0aGVyIGFzeW5jaW8gb3IgdHJpby5cbiogTmljZXIgdGltZW91dCBjb25maWd1cmF0aW9uLlxuKiBIVFRQLzIgc3VwcG9ydCBvZmYgYnkgZGVmYXVsdCwgYnV0IGNhbiBiZSBlbmFibGVkLlxuXG5XZSd2ZSBhbHNvIHJlbW92ZWQgYWxsIHByaXZhdGUgdHlwZXMgZnJvbSB0aGUgdG9wLWxldmVsIHBhY2thZ2UgZXhwb3J0LlxuXG5JbiBvcmRlciB0byBlbnN1cmUgeW91IGFyZSBvbmx5IGV2ZXIgd29ya2luZyB3aXRoIHB1YmxpYyBBUEkgeW91IHNob3VsZCBtYWtlXG5zdXJlIHRvIG9ubHkgaW1wb3J0IHRoZSB0b3AtbGV2ZWwgcGFja2FnZSBlZy4gYGltcG9ydCBodHRweGAsIHJhdGhlciB0aGFuXG5pbXBvcnRpbmcgbW9kdWxlcyB3aXRoaW4gdGhlIHBhY2thZ2UuXG5cbiMjIyBBZGRlZFxuXG4tIEFkZGVkIGNvbmN1cnJlbmN5IGJhY2tlbmQgYXV0b2RldGVjdGlvbi4gKFB1bGwgIzU4NSlcbi0gQWRkZWQgYENsaWVudChiYWNrZW5kPSd0cmlvJylgIGFuZCBgQ2xpZW50KGJhY2tlbmQ9J2FzeW5jaW8nKWAgQVBJLiAoUHVsbCAjNTg1KVxuLSBBZGRlZCBgcmVzcG9uc2Uuc3RyZWFtX2xpbmVzKClgIEFQSS4gKFB1bGwgIzU3NSlcbi0gQWRkZWQgYHJlc3BvbnNlLmlzX2Vycm9yYCBBUEkuIChQdWxsICM1NzQpXG4tIEFkZGVkIHN1cHBvcnQgZm9yIGB0aW1lb3V0PVRpbWVvdXQoNS4wLCBjb25uZWN0X3RpbWVvdXQ9NjAuMClgIHN0eWxlcy4gKFB1bGwgIzU5MylcblxuIyMjIEZpeGVkXG5cbi0gUmVxdWVzdHMgb3IgQ2xpZW50cyB3aXRoIGB0aW1lb3V0PU5vbmVgIG5vdyBjb3JyZWN0bHkgYWx3YXlzIGRpc2FibGUgdGltZW91dHMuIChQdWxsICM1OTIpXG4tIFJlcXVlc3QgJ0F1dGhvcml6YXRpb24nIGhlYWRlcnMgbm93IGhhdmUgcHJpb3JpdHkgb3ZlciBgLm5ldHJjYCBhdXRoZW50aWNhdGlvbiBpbmZvLiAoQ29tbWl0IDA5NWI2OTEpXG4tIEZpbGVzIHdpdGhvdXQgYSBmaWxlbmFtZSBubyBsb25nZXIgc2V0IGEgQ29udGVudC1UeXBlIGluIG11bHRpcGFydCBkYXRhLiAoQ29tbWl0IGVkOTQ5NTApXG5cbiMjIyBDaGFuZ2VkXG5cbi0gQWRkZWQgYGh0dHB4LnN0cmVhbSgpYCBBUEkuIFVzaW5nIGBzdHJlYW09VHJ1ZWAgbm93IHJlc3VsdHMgaW4gYSB3YXJuaW5nLiAoUHVsbCAjNjAwLCAjNjEwKVxuLSBIVFRQLzIgc3VwcG9ydCBpcyBzd2l0Y2hlZCB0byBcIm9mZiBieSBkZWZhdWx0XCIsIGJ1dCBjYW4gYmUgZW5hYmxlZCBleHBsaWNpdGx5LiAoUHVsbCAjNTg0KVxuLSBTd2l0Y2hlZCB0byBgQ2xpZW50KGh0dHAyPVRydWUpYCBBUEkgZnJvbSBgQ2xpZW50KGh0dHBfdmVyc2lvbnM9W1wiSFRUUC8xLjFcIiwgXCJIVFRQLzJcIl0pYC4gKFB1bGwgIzU4Nilcbi0gUmVtb3ZlZCBhbGwgcHJpdmF0ZSB0eXBlcyBmcm9tIHRoZSB0b3AtbGV2ZWwgcGFja2FnZSBleHBvcnQuIChQdWxsICM2MDgpXG4tIFRoZSBTU0wgY29uZmlndXJhdGlvbiBzZXR0aW5ncyBvZiBgdmVyaWZ5YCwgYGNlcnRgLCBhbmQgYHRydXN0X2VudmAgbm93IHJhaXNlIHdhcm5pbmdzIGlmIHVzZWQgcGVyLXJlcXVlc3Qgd2hlbiB1c2luZyBhIENsaWVudCBpbnN0YW5jZS4gVGhleSBzaG91bGQgYWx3YXlzIGJlIHNldCBvbiB0aGUgQ2xpZW50IGluc3RhbmNlIGl0c2VsZi4gKFB1bGwgIzU5Nylcbi0gVXNlIHBsYWluIHN0cmluZ3MgXCJUVU5ORUxfT05MWVwiIG9yIFwiRk9SV0FSRF9PTkxZXCIgb24gdGhlIEhUVFBQcm94eSBgcHJveHlfbW9kZWAgYXJndW1lbnQuIFRoZSBgSFRUUFByb3h5TW9kZWAgZW51bSBzdGlsbCBleGlzdHMsIGJ1dCBpdHMgdXNhZ2Ugd2lsbCByYWlzZSB3YXJuaW5ncy4gKCM2MTApXG4tIFBvb2wgdGltZW91dHMgYXJlIG5vdyBvbiB0aGUgdGltZW91dCBjb25maWd1cmF0aW9uLCBub3QgdGhlIHBvb2wgbGltaXRzIGNvbmZpZ3VyYXRpb24uIChQdWxsICM1NjMpXG4tIFRoZSB0aW1lb3V0IGNvbmZpZ3VyYXRpb24gaXMgbm93IG5hbWVkIGBodHRweC5UaW1lb3V0KC4uLilgLCBub3QgYGh0dHB4LlRpbWVvdXRDb25maWcoLi4uKWAuIFRoZSBvbGQgdmVyc2lvbiBjdXJyZW50bHkgcmVtYWlucyBhcyBhIHN5bm9ueW0gZm9yIGJhY2t3YXJkcyBjb21wYXRhYmlsaXR5LiAgKFB1bGwgIzU5MSlcblxuLS0tXG5cbiMjIDAuOC4wIChOb3ZlbWJlciAyNywgMjAxOSlcblxuIyMjIFJlbW92ZWRcblxuLSBUaGUgc3luY2hyb25vdXMgQVBJIGhhcyBiZWVuIHJlbW92ZWQsIGluIG9yZGVyIHRvIGFsbG93IHVzIHRvIGZ1bmRhbWVudGFsbHkgY2hhbmdlIGhvdyB3ZSBhcHByb2FjaCBzdXBwb3J0aW5nIGJvdGggc3luYyBhbmQgYXN5bmMgdmFyaWFudHMuIChTZWUgIzU4OCBmb3IgbW9yZSBkZXRhaWxzLilcblxuLS0tXG5cbiMjIDAuNy44IChOb3ZlbWJlciAxNywgMjAxOSlcblxuIyMjIEFkZGVkXG5cbi0gQWRkIHN1cHBvcnQgZm9yIHByb3h5IHR1bm5lbHMgZm9yIFB5dGhvbiAzLjYgKyBhc3luY2lvLiAoUHVsbCAjNTIxKVxuXG4jIyAwLjcuNyAoTm92ZW1iZXIgMTUsIDIwMTkpXG5cbiMjIyBGaXhlZFxuXG4tIFJlc29sdmUgYW4gaXNzdWUgd2l0aCBjb29raWVzIGJlaGF2aW9yIG9uIHJlZGlyZWN0IHJlcXVlc3RzLiAoUHVsbCAjNTI5KVxuXG4jIyMgQWRkZWRcblxuLSBBZGQgcmVxdWVzdC9yZXNwb25zZSBERUJVRyBsb2dzLiAoUHVsbCAjNTAyKVxuLSBVc2UgVFJBQ0UgbG9nIGxldmVsIGZvciBsb3cgbGV2ZWwgaW5mby4gKFB1bGwgIzUwMClcblxuIyMgMC43LjYgKE5vdmVtYmVyIDIsIDIwMTkpXG5cbiMjIyBSZW1vdmVkXG5cbi0gRHJvcCBgcHJveGllc2AgcGFyYW1ldGVyIGZyb20gdGhlIGhpZ2gtbGV2ZWwgQVBJLiAoUHVsbCAjNDg1KVxuXG4jIyMgRml4ZWRcblxuLSBUd2VhayBtdWx0aXBhcnQgZmlsZXM6IG9taXQgbnVsbCBmaWxlbmFtZXMsIGFkZCBzdXBwb3J0IGZvciBgc3RyYCBmaWxlIGNvbnRlbnRzLiAoUHVsbCAjNDgyKVxuLSBDYWNoZSBORVRSQyBhdXRoZW50aWNhdGlvbiBwZXItY2xpZW50LiAoUHVsbCAjNDAwKVxuLSBSZWx5IG9uIGBnZXRwcm94aWVzYCBmb3IgYWxsIHByb3h5IGVudmlyb25tZW50IHZhcmlhYmxlcy4gKFB1bGwgIzQ3MClcbi0gV2FpdCBmb3IgdGhlIGBhc3luY2lvYCBzdHJlYW0gdG8gY2xvc2Ugd2hlbiBjbG9zaW5nIGEgY29ubmVjdGlvbi4gKFB1bGwgIzQ5NClcblxuIyMgMC43LjUgKE9jdG9iZXIgMTAsIDIwMTkpXG5cbiMjIyBBZGRlZFxuXG4tIEFsbG93IGxpc3RzIG9mIHZhbHVlcyB0byBiZSBwYXNzZWQgdG8gYHBhcmFtc2AuIChQdWxsICMzODYpXG4tIGBBU0dJRGlzcGF0Y2hgLCBgV1NHSURpc3BhdGNoYCBhcmUgbm93IGF2YWlsYWJsZSBpbiB0aGUgYGh0dHB4LmRpc3BhdGNoYCBuYW1lc3BhY2UuIChQdWxsICM0MDcpXG4tIGBIVFRQRXJyb3JgIGlzIG5vdyBhdmFpbGFibGUgaW4gdGhlIGBodHRweGAgbmFtZXNwYWNlLiAgKFB1bGwgIzQyMSlcbi0gQWRkIHN1cHBvcnQgZm9yIGBzdGFydF90bHMoKWAgdG8gdGhlIFRyaW8gY29uY3VycmVuY3kgYmFja2VuZC4gKFB1bGwgIzQ2NylcblxuIyMjIEZpeGVkXG5cbi0gVXNlcm5hbWUgYW5kIHBhc3N3b3JkIGFyZSBubyBsb25nZXIgaW5jbHVkZWQgaW4gdGhlIGBIb3N0YCBoZWFkZXIgd2hlbiBiYXNpYyBhdXRoZW50aWNhdGlvblxuICBjcmVkZW50aWFscyBhcmUgc3VwcGxpZWQgdmlhIHRoZSBVUkwuIChQdWxsICM0MTcpXG5cbiMjIyBSZW1vdmVkXG5cbi0gVGhlIGAuZGVsZXRlKClgIGZ1bmN0aW9uIG5vIGxvbmdlciBoYXMgYGpzb25gLCBgZGF0YWAsIG9yIGBmaWxlc2AgcGFyYW1ldGVyc1xuICB0byBtYXRjaCB0aGUgZXhwZWN0ZWQgc2VtYW50aWNzIG9mIHRoZSBgREVMRVRFYCBtZXRob2QuIChQdWxsICM0MDgpXG4tIFJlbW92ZWQgdGhlIGB0cmlvYCBleHRyYS4gVHJpbyBzdXBwb3J0IGlzIGRldGVjdGVkIGF1dG9tYXRpY2FsbHkuIChQdWxsICMzOTApXG5cbiMjIDAuNy40IChTZXB0ZW1iZXIgMjUsIDIwMTkpXG5cbiMjIyBBZGRlZFxuXG4tIEFkZCBUcmlvIGNvbmN1cnJlbmN5IGJhY2tlbmQuIChQdWxsICMyNzYpXG4tIEFkZCBgcGFyYW1zYCBwYXJhbWV0ZXIgdG8gYENsaWVudGAgZm9yIHNldHRpbmcgZGVmYXVsdCBxdWVyeSBwYXJhbWV0ZXJzLiAoUHVsbCAjMzcyKVxuLSBBZGQgc3VwcG9ydCBmb3IgYFNTTF9DRVJUX0ZJTEVgIGFuZCBgU1NMX0NFUlRfRElSYCBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIChQdWxsICMzMDcpXG4tIEFkZCBkZWJ1ZyBsb2dnaW5nIHRvIGNhbGxzIGludG8gQVNHSSBhcHBzLiAoUHVsbCAjMzcxKVxuLSBBZGQgZGVidWcgbG9nZ2luZyB0byBTU0wgY29uZmlndXJhdGlvbi4gKFB1bGwgIzM3OClcblxuIyMjIEZpeGVkXG5cbi0gRml4IGEgYnVnIHdoZW4gdXNpbmcgYENsaWVudGAgd2l0aG91dCB0aW1lb3V0cyBpbiBQeXRob24gMy42LiAoUHVsbCAjMzgzKVxuLSBQcm9wYWdhdGUgYENsaWVudGAgY29uZmlndXJhdGlvbiB0byBIVFRQIHByb3hpZXMuIChQdWxsICMzNzcpXG5cbiMjIDAuNy4zIChTZXB0ZW1iZXIgMjAsIDIwMTkpXG5cbiMjIyBBZGRlZFxuXG4tIEhUVFAgUHJveHkgc3VwcG9ydC4gKFB1bGxzICMyNTksICMzNTMpXG4tIEFkZCBEaWdlc3QgYXV0aGVudGljYXRpb24uIChQdWxsICMzMzIpXG4tIEFkZCBgLmJ1aWxkX3JlcXVlc3QoKWAgbWV0aG9kIHRvIGBDbGllbnRgIGFuZCBgQXN5bmNDbGllbnRgLiAoUHVsbCAjMzE5KVxuLSBBZGQgYC5lbGFwc2VkYCBwcm9wZXJ0eSBvbiByZXNwb25zZXMuIChQdWxsICMzNTEpXG4tIEFkZCBzdXBwb3J0IGZvciBgU1NMS0VZTE9HRklMRWAgaW4gUHl0aG9uIDMuOGI0Ky4gKFB1bGwgIzMwMSlcblxuIyMjIFJlbW92ZWRcblxuLSBEcm9wIE5QTiBzdXBwb3J0IGZvciBIVFRQIHZlcnNpb24gbmVnb3RpYXRpb24uIChQdWxsICMzMTQpXG5cbiMjIyBGaXhlZFxuXG4tIEZpeCBkaXN0cmlidXRpb24gb2YgdHlwZSBhbm5vdGF0aW9ucyBmb3IgbXlweSAoUHVsbCAjMzYxKS5cbi0gU2V0IGBIb3N0YCBoZWFkZXIgd2hlbiByZWRpcmVjdGluZyBjcm9zcy1vcmlnaW4uIChQdWxsICMzMjEpXG4tIERyb3AgYENvbnRlbnQtTGVuZ3RoYCBoZWFkZXJzIG9uIGBHRVRgIHJlZGlyZWN0cy4gKFB1bGwgIzMxMClcbi0gUmFpc2UgYEtleUVycm9yYCBpZiBoZWFkZXIgaXNuJ3QgZm91bmQgaW4gYEhlYWRlcnNgLiAoUHVsbCAjMzI0KVxuLSBSYWlzZSBgTm90UmVkaXJlY3RSZXNwb25zZWAgaW4gYHJlc3BvbnNlLm5leHQoKWAgaWYgdGhlcmUgaXMgbm8gcmVkaXJlY3Rpb24gdG8gcGVyZm9ybS4gKFB1bGwgIzI5Nylcbi0gRml4IGJ1ZyBpbiBjYWxjdWxhdGluZyB0aGUgSFRUUC8yIG1heGltdW0gZnJhbWUgc2l6ZS4gKFB1bGwgIzE1MylcblxuIyMgMC43LjIgKEF1Z3VzdCAyOCwgMjAxOSlcblxuLSBFbmZvcmNlIHVzaW5nIGBodHRweC5Bc3luY2lvQmFja2VuZGAgZm9yIHRoZSBzeW5jaHJvbm91cyBjbGllbnQuIChQdWxsICMyMzIpXG4tIGBodHRweC5Db25uZWN0aW9uUG9vbGAgd2lsbCBwcm9wZXJseSByZWxlYXNlIGEgZHJvcHBlZCBjb25uZWN0aW9uLiAoUHVsbCAjMjMwKVxuLSBSZW1vdmUgdGhlIGByYWlzZV9hcHBfZXhjZXB0aW9uc2AgYXJndW1lbnQgZnJvbSBgQ2xpZW50YC4gKFB1bGwgIzIzOClcbi0gYERlY29kZUVycm9yYCB3aWxsIG5vIGxvbmdlciBiZSByYWlzZWQgZm9yIGFuIGVtcHR5IGJvZHkgZW5jb2RlZCB3aXRoIEJyb3RsaS4gKFB1bGwgIzIzNylcbi0gQWRkZWQgYGh0dHBfdmVyc2lvbnNgIHBhcmFtZXRlciB0byBgQ2xpZW50YC4gKFB1bGwgIzI1MClcbi0gT25seSB1c2UgSFRUUC8xLjEgb24gc2hvcnQtbGl2ZWQgY29ubmVjdGlvbnMgbGlrZSBgaHR0cHguZ2V0KClgLiAoUHVsbCAjMjg0KVxuLSBDb252ZXJ0IGBDbGllbnQuY29va2llc2AgYW5kIGBDbGllbnQuaGVhZGVyc2Agd2hlbiBzZXQgYXMgYSBwcm9wZXJ0eS4gKFB1bGwgIzI3NClcbi0gU2V0dGluZyBgSFRUUFhfREVCVUc9MWAgZW5hYmxlcyBkZWJ1ZyBsb2dnaW5nIG9uIGFsbCByZXF1ZXN0cy4gKFB1bGwgIzI3NylcblxuIyMgMC43LjEgKEF1Z3VzdCAxOCwgMjAxOSlcblxuLSBJbmNsdWRlIGZpbGVzIHdpdGggc291cmNlIGRpc3RyaWJ1dGlvbiB0byBiZSBpbnN0YWxsYWJsZS4gKFB1bGwgIzIzMylcblxuIyMgMC43LjAgKEF1Z3VzdCAxNywgMjAxOSlcblxuLSBBZGQgdGhlIGB0cnVzdF9lbnZgIHByb3BlcnR5IHRvIGBCYXNlQ2xpZW50YC4gKFB1bGwgIzE4Nylcbi0gQWRkIHRoZSBgbGlua3NgIHByb3BlcnR5IHRvIGBCYXNlUmVzcG9uc2VgLiAoUHVsbCAjMjExKVxuLSBBY2NlcHQgYHNzbC5TU0xDb250ZXh0YCBpbnN0YW5jZXMgaW50byBgU1NMQ29uZmlnKHZlcmlmeT0uLi4pYC4gKFB1bGwgIzIxNSlcbi0gQWRkIGBSZXNwb25zZS5zdHJlYW1fdGV4dCgpYCB3aXRoIGluY3JlbWVudGFsIGVuY29kaW5nIGRldGVjdGlvbi4gKFB1bGwgIzE4Mylcbi0gUHJvcGVybHkgdXBkYXRlZCB0aGUgYEhvc3RgIGhlYWRlciB3aGVuIGEgcmVkaXJlY3QgY2hhbmdlcyB0aGUgb3JpZ2luLiAoUHVsbCAjMTk5KVxuLSBJZ25vcmUgaW52YWxpZCBgQ29udGVudC1FbmNvZGluZ2AgaGVhZGVycy4gKFB1bGwgIzE5Nilcbi0gVXNlIGB+Ly5uZXRyY2AgYW5kIGB+L19uZXRyY2AgZmlsZXMgYnkgZGVmYXVsdCB3aGVuIGB0cnVzdF9lbnY9VHJ1ZWAuIChQdWxsICMxODkpXG4tIENyZWF0ZSBleGNlcHRpb24gYmFzZSBjbGFzcyBgSFRUUEVycm9yYCB3aXRoIGByZXF1ZXN0YCBhbmQgYHJlc3BvbnNlYCBwcm9wZXJ0aWVzLiAoUHVsbCAjMTYyKVxuLSBBZGQgSFNUUyBwcmVsb2FkIGxpc3QgY2hlY2tpbmcgd2l0aGluIGBCYXNlQ2xpZW50YCB0byB1cGdyYWRlIEhUVFAgVVJMcyB0byBIVFRQUy4gKFB1bGwgIzE4NClcbi0gU3dpdGNoIElETkEgZW5jb2RpbmcgZnJvbSBJRE5BIDIwMDMgdG8gSUROQSAyMDA4LiAoUHVsbCAjMTYxKVxuLSBFeHBvc2UgYmFzZSBjbGFzc2VzIGZvciBhbHRlcm5hdGUgY29uY3VycmVuY3kgYmFja2VuZHMuIChQdWxsICMxNzgpXG4tIEltcHJvdmUgTXVsdGlwYXJ0IHBhcmFtZXRlciBlbmNvZGluZy4gKFB1bGwgIzE2Nylcbi0gQWRkIHRoZSBgaGVhZGVyc2AgcHJvZXBydHkgdG8gYEJhc2VDbGllbnRgLiAoUHVsbCAjMTU5KVxuLSBBZGQgc3VwcG9ydCBmb3IgR29vZ2xlJ3MgYGJyb3RsaWAgbGlicmFyeS4gKFB1bGwgIzE1Nilcbi0gUmVtb3ZlIGRlcHJlY2F0ZWQgVExTIHZlcnNpb25zIChUTFN2MSBhbmQgVExTdjEuMSkgZnJvbSBkZWZhdWx0IGBTU0xDb25maWdgLiAoUHVsbCAjMTU1KVxuLSBGaXggYFVSTC5qb2luKC4uLilgIHRvIHdvcmsgc2ltaWxhcmx5IHRvIFJGQyAzOTg2IFVSTCBqb2luaW5nLiAoUHVsbCAjMTQ0KVxuXG4tLS1cblxuIyMgMC42LjggKEp1bHkgMjUsIDIwMTkpXG5cbi0gQ2hlY2sgZm9yIGRpc2Nvbm5lY3Rpb25zIHdoZW4gc2VhcmNoaW5nIGZvciBhbiBhdmFpbGFibGVcbiAgY29ubmVjdGlvbiBpbiBgQ29ubmVjdGlvblBvb2wua2VlcGFsaXZlX2Nvbm5lY3Rpb25zYCAoUHVsbCAjMTQ1KVxuLSBBbGxvdyBzdHJpbmcgY29tcGFyaXNvbiBmb3IgYFVSTGAgb2JqZWN0cyAoUHVsbCAjMTM5KVxuLSBBZGQgSFRUUCBzdGF0dXMgY29kZXMgNDE4IGFuZCA0NTEgKFB1bGwgIzEzNSlcbi0gQWRkIHN1cHBvcnQgZm9yIGNsaWVudCBjZXJ0aWZpY2F0ZSBwYXNzd29yZHMgKFB1bGwgIzExOClcbi0gRW5hYmxlIHBvc3QtaGFuZHNoYWtlIGNsaWVudCBjZXJ0IGF1dGhlbnRpY2F0aW9uIGZvciBUTFN2MS4zIChQdWxsICMxMTgpXG4tIERpc2FibGUgdXNpbmcgYGNvbW1vbk5hbWVgIGZvciBob3N0bmFtZSBjaGVja2luZyBmb3IgT3BlblNTTCAxLjEuMCsgKFB1bGwgIzExOClcbi0gRGV0ZWN0IGVuY29kaW5nIGZvciBgUmVzcG9uc2UuanNvbigpYCAoUHVsbCAjMTE2KVxuXG4jIyAwLjYuNyAoSnVseSA4LCAyMDE5KVxuXG4tIENoZWNrIGZvciBjb25uZWN0aW9uIGFsaXZlbmVzcyBvbiByZS1hY3F1aXJ5IChQdWxsICMxMTEpXG5cbiMjIDAuNi42IChKdWx5IDMsIDIwMTkpXG5cbi0gSW1wcm92ZSBgVVNFUl9BR0VOVGAgKFB1bGwgIzExMClcbi0gQWRkIGBDb25uZWN0aW9uOiBrZWVwLWFsaXZlYCBieSBkZWZhdWx0IHRvIEhUVFAvMS4xIGNvbm5lY3Rpb25zLiAoUHVsbCAjMTEwKVxuXG4jIyAwLjYuNSAoSnVuZSAyNywgMjAxOSlcblxuLSBJbmNsdWRlIGBIb3N0YCBoZWFkZXIgYnkgZGVmYXVsdC4gKFB1bGwgIzEwOSlcbi0gSW1wcm92ZSBIVFRQIHByb3RvY29sIGRldGVjdGlvbi4gKFB1bGwgIzEwNylcblxuIyMgMC42LjQgKEp1bmUgMjUsIDIwMTkpXG5cbi0gSW1wbGVtZW50IHJlYWQgYW5kIHdyaXRlIHRpbWVvdXRzIChQdWxsICMxMDQpXG5cbiMjIDAuNi4zIChKdW5lIDI0LCAyMDE5KVxuXG4tIEhhbmRsZSBlYXJseSBjb25uZWN0aW9uIGNsb3NlcyAoUHVsbCAjMTAzKVxuXG4jIyAwLjYuMiAoSnVuZSAyMywgMjAxOSlcblxuLSBVc2UgdXJsbGliMydzIGBERUZBVUxUX0NJUEhFUlNgIGZvciB0aGUgYFNTTENvbmZpZ2Agb2JqZWN0LiAoUHVsbCAjMTAwKVxuXG4jIyAwLjYuMSAoSnVuZSAyMSwgMjAxOSlcblxuLSBBZGQgc3VwcG9ydCBmb3Igc2V0dGluZyBhIGBiYXNlX3VybGAgb24gdGhlIGBDbGllbnRgLlxuXG4jIyAwLjYuMCAoSnVuZSAyMSwgMjAxOSlcblxuLSBIb25vciBgbG9jYWxfZmxvd19jb250cm9sX3dpbmRvd2AgZm9yIEhUVFAvMiBjb25uZWN0aW9ucyAoUHVsbCAjOTgpXG5cblxuIiw=
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2VuY29kZS9odHRweCIs
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIkxHUEwiLA==
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogIndlYjNodHRwIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvd2ViM2h0dHAvIiw=
ICAgICJwbGF0Zm9ybSI6ICIiLA==
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvd2ViM2h0dHAvIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkNoYW5nZWxvZyI6ICJodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4L2Jsb2IvbWFzdGVyL0NIQU5HRUxPRy5tZCIs
ICAgICAgIkRvY3VtZW50YXRpb24iOiAiaHR0cHM6Ly93d3cucHl0aG9uLWh0dHB4Lm9yZyIs
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9lbmNvZGUvaHR0cHgiLA==
ICAgICAgIlNvdXJjZSI6ICJodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4Ig==
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qvd2ViM2h0dHAvMC4xNy4wLyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImNlcnRpZmkiLA==
ICAgICAgInNuaWZmaW8iLA==
ICAgICAgInJmYzM5ODZbaWRuYTIwMDhdICg8Miw+PTEuMykiLA==
ICAgICAgImh0dHBjb3JlICg8MC4xMyw+PTAuMTIuMSkiLA==
ICAgICAgImJyb3RsaXB5ICg9PTAuNy4qKSA7IGV4dHJhID09ICdicm90bGknIiw=
ICAgICAgImgyICg9PTMuKikgOyBleHRyYSA9PSAnaHR0cDInIg==
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjYiLA==
ICAgICJzdW1tYXJ5IjogIlRoZSBuZXh0IGdlbmVyYXRpb24gSFRUUCBjbGllbnQgZm9yIFdlYjMuIiw=
ICAgICJ2ZXJzaW9uIjogIjAuMTcuMCIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiA5NjgzNDEzLA==
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjE3LjAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmNTIwOGVhNDIxZWEwNGQ3ZDMwYTVlZDE5N2IxMDFmYWMwMTgyYTE5M2I4Y2Y3MjM2MTY0NDBiZDAzNTQ4ZDQ0Iiw=
ICAgICAgICAgICJtZDUiOiAiNDNmYzRmNWVlZTRjNjRiZTM5NTliNzcxNTIyYzk1N2UiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzdhNDY1MTcxN2VhMjljOTVkYjZlNjlkMDMzYzNmYzRlODk5ZjgwOTYwYmY0MDEyNDlkMmIyZWU5YWM2ODEyOCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAid2ViM2h0dHAtMC4xNy4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI0M2ZjNGY1ZWVlNGM2NGJlMzk1OWI3NzE1MjJjOTU3ZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDk5NzM2MCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wMy0wNlQxMDo0OToyNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wMy0wNlQxMDo0OToyNi40NTY2ODVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mNS8yMC84ZWE0MjFlYTA0ZDdkMzBhNWVkMTk3YjEwMWZhYzAxODJhMTkzYjhjZjcyMzYxNjQ0MGJkMDM1NDhkNDQvd2ViM2h0dHAtMC4xNy4wLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5OGE3YjkzMTU3ZWRlNDA5NTg5NzBjYzdiYzFjMjAwODYyNDhjZjUwN2Y1OWIzM2VhZWIxMzgxZDhhYjllM2EyIiw=
ICAgICAgICAgICJtZDUiOiAiOTkxMTk2MTU1OTJlNTAxZWYzZTQ5NzMwYzgxN2E1ZWEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZDQwYzU1YjU1NDlmZjk1NTkwNjMzNTNiNmZmM2M1NTMwMjQ3YzY4MWM3NWNjYzUxNWFmNWE1YjM1YjQ4NjQ3YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAid2ViM2h0dHAtMC4xNy4wLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI5OTExOTYxNTU5MmU1MDFlZjNlNDk3MzBjODE3YTVlYSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDEwMTgxNzYs
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMS0wMy0wNlQxMDo0OToyOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMS0wMy0wNlQxMDo0OToyOC45NzkzNzBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85OC9hNy9iOTMxNTdlZGU0MDk1ODk3MGNjN2JjMWMyMDA4NjI0OGNmNTA3ZjU5YjMzZWFlYjEzODFkOGFiOWUzYTIvd2ViM2h0dHAtMC4xNy4wLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZjUyMDhlYTQyMWVhMDRkN2QzMGE1ZWQxOTdiMTAxZmFjMDE4MmExOTNiOGNmNzIzNjE2NDQwYmQwMzU0OGQ0NCIs
ICAgICAgICAibWQ1IjogIjQzZmM0ZjVlZWU0YzY0YmUzOTU5Yjc3MTUyMmM5NTdlIiw=
ICAgICAgICAic2hhMjU2IjogIjM3YTQ2NTE3MTdlYTI5Yzk1ZGI2ZTY5ZDAzM2MzZmM0ZTg5OWY4MDk2MGJmNDAxMjQ5ZDJiMmVlOWFjNjgxMjgi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIndlYjNodHRwLTAuMTcuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiNDNmYzRmNWVlZTRjNjRiZTM5NTliNzcxNTIyYzk1N2UiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiA5OTczNjAs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDMtMDZUMTA6NDk6MjYiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDMtMDZUMTA6NDk6MjYuNDU2Njg1WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZjUvMjAvOGVhNDIxZWEwNGQ3ZDMwYTVlZDE5N2IxMDFmYWMwMTgyYTE5M2I4Y2Y3MjM2MTY0NDBiZDAzNTQ4ZDQ0L3dlYjNodHRwLTAuMTcuMC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiOThhN2I5MzE1N2VkZTQwOTU4OTcwY2M3YmMxYzIwMDg2MjQ4Y2Y1MDdmNTliMzNlYWViMTM4MWQ4YWI5ZTNhMiIs
ICAgICAgICAibWQ1IjogIjk5MTE5NjE1NTkyZTUwMWVmM2U0OTczMGM4MTdhNWVhIiw=
ICAgICAgICAic2hhMjU2IjogImQ0MGM1NWI1NTQ5ZmY5NTU5MDYzMzUzYjZmZjNjNTUzMDI0N2M2ODFjNzVjY2M1MTVhZjVhNWIzNWI0ODY0N2Mi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogIndlYjNodHRwLTAuMTcuMC50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiOTkxMTk2MTU1OTJlNTAxZWYzZTQ5NzMwYzgxN2E1ZWEiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiAxMDE4MTc2LA==
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjEtMDMtMDZUMTA6NDk6MjgiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjEtMDMtMDZUMTA6NDk6MjguOTc5MzcwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvOTgvYTcvYjkzMTU3ZWRlNDA5NTg5NzBjYzdiYzFjMjAwODYyNDhjZjUwN2Y1OWIzM2VhZWIxMzgxZDhhYjllM2EyL3dlYjNodHRwLTAuMTcuMC50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
