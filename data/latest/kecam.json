ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiTGVvbmRnYXJzZSIs
ICAgICJhdXRob3JfZW1haWwiOiAibGVvbmRnYXJzZUBnb29nbGUuY29tIiw=
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFs=
ICAgICAgIkRldmVsb3BtZW50IFN0YXR1cyA6OiAzIC0gQWxwaGEiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IERldmVsb3BlcnMiLA==
ICAgICAgIkludGVuZGVkIEF1ZGllbmNlIDo6IFNjaWVuY2UvUmVzZWFyY2giLA==
ICAgICAgIkxpY2Vuc2UgOjogT1NJIEFwcHJvdmVkIDo6IEFwYWNoZSBTb2Z0d2FyZSBMaWNlbnNlIiw=
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjYiLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjciLA==
ICAgICAgIlByb2dyYW1taW5nIExhbmd1YWdlIDo6IFB5dGhvbiA6OiAzLjgiLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmciLA==
ICAgICAgIlRvcGljIDo6IFNjaWVudGlmaWMvRW5naW5lZXJpbmcgOjogQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UiLA==
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50Iiw=
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyIs
ICAgICAgIlRvcGljIDo6IFNvZnR3YXJlIERldmVsb3BtZW50IDo6IExpYnJhcmllcyA6OiBQeXRob24gTW9kdWxlcyI=
ICAgIF0s
ICAgICJkZXNjcmlwdGlvbiI6ICIjIF9fX0tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHNfX19cbioqKlxuLSAqKmNvY29fdHJhaW5fc2NyaXB0LnB5IGlzIHVuZGVyIHRlc3RpbmcuIFN0aWxsIHN0cnVnZ2xpbmcgZm9yIHRoaXMuLi4qKlxuPCEtLSBUT0MgZGVwdGhGcm9tOjEgZGVwdGhUbzo2IHdpdGhMaW5rczoxIHVwZGF0ZU9uU2F2ZToxIG9yZGVyZWRMaXN0OjAgLS0+XG5cbi0gW19fXz4+Pj4gUm9hZG1hcCBhbmQgdG9kbyBsaXN0IDw8PDxfX19dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvd2lraS9Sb2FkbWFwKVxuLSBbR2VuZXJhbCBVc2FnZV0oI2dlbmVyYWwtdXNhZ2UpXG4gIC0gW0Jhc2ljXSgjYmFzaWMpXG4gIC0gW1Q0IEluZmVyZW5jZV0oI3Q0LWluZmVyZW5jZSlcbiAgLSBbTGF5ZXJzXSgjbGF5ZXJzKVxuICAtIFtNb2RlbCBzdXJnZXJ5XSgjbW9kZWwtc3VyZ2VyeSlcbiAgLSBbSW1hZ2VOZXQgdHJhaW5pbmcgYW5kIGV2YWx1YXRpbmddKCNpbWFnZW5ldC10cmFpbmluZy1hbmQtZXZhbHVhdGluZylcbiAgLSBbQ09DTyB0cmFpbmluZyBhbmQgZXZhbHVhdGluZ10oI2NvY28tdHJhaW5pbmctYW5kLWV2YWx1YXRpbmcpXG4gIC0gW1Zpc3VhbGl6aW5nXSgjdmlzdWFsaXppbmcpXG4gIC0gW1RGTGl0ZSBDb252ZXJzaW9uXSgjdGZsaXRlLWNvbnZlcnNpb24pXG4gIC0gW1VzaW5nIFB5VG9yY2ggYXMgYmFja2VuZF0oI3VzaW5nLXB5dG9yY2gtYXMtYmFja2VuZClcbi0gW1JlY29nbml0aW9uIE1vZGVsc10oI3JlY29nbml0aW9uLW1vZGVscylcbiAgLSBbQW90TmV0XSgjYW90bmV0KVxuICAtIFtCRWlUXSgjYmVpdClcbiAgLSBbQkVpVFYyXSgjYmVpdHYyKVxuICAtIFtCb3ROZXRdKCNib3RuZXQpXG4gIC0gW0NBRm9ybWVyXSgjY2Fmb3JtZXIpXG4gIC0gW0NNVF0oI2NtdClcbiAgLSBbQ29hVF0oI2NvYXQpXG4gIC0gW0NvQXROZXRdKCNjb2F0bmV0KVxuICAtIFtDb252TmVYdF0oI2NvbnZuZXh0KVxuICAtIFtDb252TmVYdFYyXSgjY29udm5leHR2MilcbiAgLSBbQ29UTmV0XSgjY290bmV0KVxuICAtIFtEYVZpVF0oI2Rhdml0KVxuICAtIFtEaU5BVF0oI2RpbmF0KVxuICAtIFtESU5PdjJdKCNkaW5vdjIpXG4gIC0gW0VkZ2VOZVh0XSgjZWRnZW5leHQpXG4gIC0gW0VmZmljaWVudEZvcm1lcl0oI2VmZmljaWVudGZvcm1lcilcbiAgLSBbRWZmaWNpZW50Rm9ybWVyVjJdKCNlZmZpY2llbnRmb3JtZXJ2MilcbiAgLSBbRWZmaWNpZW50TmV0XSgjZWZmaWNpZW50bmV0KVxuICAtIFtFZmZpY2llbnROZXRWMl0oI2VmZmljaWVudG5ldHYyKVxuICAtIFtFZmZpY2llbnRWaVRfQl0oI2VmZmljaWVudHZpdF9iKVxuICAtIFtFZmZpY2llbnRWaVRfTV0oI2VmZmljaWVudHZpdF9tKVxuICAtIFtFVkFdKCNldmEpXG4gIC0gW0VWQTAyXSgjZXZhMDIpXG4gIC0gW0Zhc3Rlck5ldF0oI2Zhc3Rlcm5ldClcbiAgLSBbRmFzdGVyVmlUXSgjZmFzdGVydml0KVxuICAtIFtGQk5ldFYzXSgjZmJuZXR2MylcbiAgLSBbRmxleGlWaVRdKCNmbGV4aXZpdClcbiAgLSBbR0NWaVRdKCNnY3ZpdClcbiAgLSBbR2hvc3ROZXRdKCNnaG9zdG5ldClcbiAgLSBbR2hvc3ROZXRWMl0oI2dob3N0bmV0djIpXG4gIC0gW0dNTFBdKCNnbWxwKVxuICAtIFtHUFZpVF0oI2dwdml0KVxuICAtIFtIYWxvTmV0XSgjaGFsb25ldClcbiAgLSBbSGllcmFdKCNoaWVyYSlcbiAgLSBbSG9yTmV0XSgjaG9ybmV0KVxuICAtIFtJRm9ybWVyXSgjaWZvcm1lcilcbiAgLSBbSW5jZXB0aW9uTmVYdF0oI2luY2VwdGlvbm5leHQpXG4gIC0gW0xDTmV0XSgjbGNuZXQpXG4gIC0gW0xlVmlUXSgjbGV2aXQpXG4gIC0gW01heFZpVF0oI21heHZpdClcbiAgLSBbTUxQIG1peGVyXSgjbWxwLW1peGVyKVxuICAtIFtNb2JpbGVOZXRWM10oI21vYmlsZW5ldHYzKVxuICAtIFtNb2JpbGVWaVRdKCNtb2JpbGV2aXQpXG4gIC0gW01vYmlsZVZpVF9WMl0oI21vYmlsZXZpdF92MilcbiAgLSBbTW9nYU5ldF0oI21vZ2FuZXQpXG4gIC0gW05BVF0oI25hdClcbiAgLSBbTkZOZXRzXSgjbmZuZXRzKVxuICAtIFtQVlRfVjJdKCNwdnRfdjIpXG4gIC0gW1JlZ05ldFldKCNyZWduZXR5KVxuICAtIFtSZWdOZXRaXSgjcmVnbmV0eilcbiAgLSBbUmVzTUxQXSgjcmVzbWxwKVxuICAtIFtSZXNOZVN0XSgjcmVzbmVzdClcbiAgLSBbUmVzTmV0RF0oI3Jlc25ldGQpXG4gIC0gW1Jlc05ldFFdKCNyZXNuZXRxKVxuICAtIFtSZXNOZVh0XSgjcmVzbmV4dClcbiAgLSBbU3dpblRyYW5zZm9ybWVyVjJdKCNzd2ludHJhbnNmb3JtZXJ2MilcbiAgLSBbVGlueU5ldF0oI3RpbnluZXQpXG4gIC0gW1RpbnlWaVRdKCN0aW55dml0KVxuICAtIFtVbmlGb3JtZXJdKCN1bmlmb3JtZXIpXG4gIC0gW1ZhbmlsbGFOZXRdKCN2YW5pbGxhbmV0KVxuICAtIFtWT0xPXSgjdm9sbylcbiAgLSBbV2F2ZU1MUF0oI3dhdmVtbHApXG4tIFtEZXRlY3Rpb24gTW9kZWxzXSgjZGV0ZWN0aW9uLW1vZGVscylcbiAgLSBbRWZmaWNpZW50RGV0XSgjZWZmaWNpZW50ZGV0KVxuICAtIFtZT0xPX05BU10oI3lvbG9fbmFzKVxuICAtIFtZT0xPUl0oI3lvbG9yKVxuICAtIFtZT0xPVjddKCN5b2xvdjcpXG4gIC0gW1lPTE9WOF0oI3lvbG92OClcbiAgLSBbWU9MT1hdKCN5b2xveClcbi0gW0xhbmd1YWdlIE1vZGVsc10oI2xhbmd1YWdlLW1vZGVscylcbiAgLSBbR1BUMl0oI2dwdDIpXG4tIFtMaWNlbnNlc10oI2xpY2Vuc2VzKVxuLSBbQ2l0aW5nXSgjY2l0aW5nKVxuXG48IS0tIC9UT0MgLS0+XG4qKipcblxuIyBHZW5lcmFsIFVzYWdlXG4jIyBCYXNpY1xuICAtICoqQ3VycmVudGx5IHJlY29tbWVuZGVkIFRGIHZlcnNpb24gaXMgYHRlbnNvcmZsb3c9PTIuMTEuMWAuIEV4cGVjaWFsbHkgZm9yIHRyYWluaW5nIG9yIFRGTGl0ZSBjb252ZXJzaW9uKiouXG4gIC0gKipEZWZhdWx0IGltcG9ydCoqIHdpbGwgbm90IHNwZWNpZmljIHRoZXNlIHdoaWxlIHVzaW5nIHRoZW0gaW4gUkVBRE1Fcy5cbiAgICBgYGBweVxuICAgIGltcG9ydCBvc1xuICAgIGltcG9ydCBzeXNcbiAgICBpbXBvcnQgdGVuc29yZmxvdyBhcyB0ZlxuICAgIGltcG9ydCBudW1weSBhcyBucFxuICAgIGltcG9ydCBwYW5kYXMgYXMgcGRcbiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0XG4gICAgZnJvbSB0ZW5zb3JmbG93IGltcG9ydCBrZXJhc1xuICAgIGBgYFxuICAtIEluc3RhbGwgYXMgcGlwIHBhY2thZ2UuIGBrZWNhbWAgaXMgYSBzaG9ydCBhbGlhcyBuYW1lIG9mIHRoaXMgcGFja2FnZS4gKipOb3RlKio6IHRoZSBwaXAgcGFja2FnZSBga2VjYW1gIGRvZXNuJ3Qgc2V0IGFueSBiYWNrZW5kIHJlcXVpcmVtZW50LCBtYWtlIHN1cmUgZWl0aGVyIFRlbnNvcmZsb3cgb3IgUHlUb3JjaCBpbnN0YWxsZWQgYmVmb3JlIGhhbmQuIEZvciBQeVRvcmNoIGJhY2tlbmQgdXNhZ2UsIHJlZmVyIFtLZXJhcyBQeVRvcmNoIEJhY2tlbmRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcHl0b3JjaF9iYWNrZW5kKS5cbiAgICBgYGBzaFxuICAgIHBpcCBpbnN0YWxsIC1VIGtlY2FtXG4gICAgIyBPclxuICAgIHBpcCBpbnN0YWxsIC1VIGtlcmFzLWN2LWF0dGVudGlvbi1tb2RlbHNcbiAgICAjIE9yXG4gICAgcGlwIGluc3RhbGwgLVUgZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHNcbiAgICBgYGBcbiAgICBSZWZlciB0byBlYWNoIHN1YiBkaXJlY3RvcnkgZm9yIGRldGFpbCB1c2FnZS5cbiAgLSAqKkJhc2ljIG1vZGVsIHByZWRpY3Rpb24qKlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCB2b2xvXG4gICAgbW0gPSB2b2xvLlZPTE9fZDEocHJldHJhaW5lZD1cImltYWdlbmV0XCIpXG5cbiAgICBcIlwiXCIgUnVuIHByZWRpY3QgXCJcIlwiXG4gICAgaW1wb3J0IHRlbnNvcmZsb3cgYXMgdGZcbiAgICBmcm9tIHRlbnNvcmZsb3cgaW1wb3J0IGtlcmFzXG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzLnRlc3RfaW1hZ2VzIGltcG9ydCBjYXRcbiAgICBpbWcgPSBjYXQoKVxuICAgIGltbSA9IGtlcmFzLmFwcGxpY2F0aW9ucy5pbWFnZW5ldF91dGlscy5wcmVwcm9jZXNzX2lucHV0KGltZywgbW9kZT0ndG9yY2gnKVxuICAgIHByZWQgPSBtbSh0Zi5leHBhbmRfZGltcyh0Zi5pbWFnZS5yZXNpemUoaW1tLCBtbS5pbnB1dF9zaGFwZVsxOjNdKSwgMCkpLm51bXB5KClcbiAgICBwcmVkID0gdGYubm4uc29mdG1heChwcmVkKS5udW1weSgpICAjIElmIGNsYXNzaWZpZXIgYWN0aXZhdGlvbiBpcyBub3Qgc29mdG1heFxuICAgIHByaW50KGtlcmFzLmFwcGxpY2F0aW9ucy5pbWFnZW5ldF91dGlscy5kZWNvZGVfcHJlZGljdGlvbnMocHJlZClbMF0pXG4gICAgIyBbKCduMDIxMjQwNzUnLCAnRWd5cHRpYW5fY2F0JywgMC45OTY2NDg5NyksXG4gICAgIyAgKCduMDIxMjMwNDUnLCAndGFiYnknLCAwLjAwMDcyNDk2NDQpLFxuICAgICMgICgnbjAyMTIzMTU5JywgJ3RpZ2VyX2NhdCcsIDAuMDAwMjAzNDUpLFxuICAgICMgICgnbjAyMTI3MDUyJywgJ2x5bngnLCA1LjQ5NzM5MjNlLTA1KSxcbiAgICAjICAoJ24wMjEyMzU5NycsICdTaWFtZXNlX2NhdCcsIDIuNjc1MzA2ZS0wNSldXG4gICAgYGBgXG4gICAgT3IganVzdCB1c2UgbW9kZWwgcHJlc2V0IGBwcmVwcm9jZXNzX2lucHV0YCBhbmQgYGRlY29kZV9wcmVkaWN0aW9uc2BcbiAgICBgYGBweVxuICAgIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscyBpbXBvcnQgY29hdG5ldFxuICAgIG1tID0gY29hdG5ldC5Db0F0TmV0MCgpXG5cbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMudGVzdF9pbWFnZXMgaW1wb3J0IGNhdFxuICAgIHByZWRzID0gbW0obW0ucHJlcHJvY2Vzc19pbnB1dChjYXQoKSkpXG4gICAgcHJpbnQobW0uZGVjb2RlX3ByZWRpY3Rpb25zKHByZWRzKSlcbiAgICAjIFtbKCduMDIxMjQwNzUnLCAnRWd5cHRpYW5fY2F0JywgMC45OTk5ODc1KSwgKCduMDIxMjMwNDUnLCAndGFiYnknLCA1LjE5NDg4NGUtMDYpLCAuLi5dXVxuICAgIGBgYFxuICAgIFRoZSBwcmVzZXQgYHByZXByb2Nlc3NfaW5wdXRgIGFuZCBgZGVjb2RlX3ByZWRpY3Rpb25zYCBhbHNvIGNvbXBhdGlibGUgd2l0aCBQeVRvcmNoIGJhY2tlbmQuXG4gICAgYGBgcHlcbiAgICBvcy5lbnZpcm9uWydLRUNBTV9CQUNLRU5EJ10gPSAndG9yY2gnXG5cbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IGNhZm9ybWVyXG4gICAgbW0gPSBjYWZvcm1lci5DQUZvcm1lclMxOCgpXG4gICAgIyA+Pj4+IFVzaW5nIFB5VG9yY2ggYmFja2VuZFxuICAgICMgPj4+PiBBbGlnbmVkIGlucHV0X3NoYXBlOiBbMywgMjI0LCAyMjRdXG4gICAgIyA+Pj4+IExvYWQgcHJldHJhaW5lZCBmcm9tOiB+Ly5rZXJhcy9tb2RlbHMvY2Fmb3JtZXJfczE4XzIyNF9pbWFnZW5ldC5oNVxuXG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzLnRlc3RfaW1hZ2VzIGltcG9ydCBjYXRcbiAgICBwcmVkcyA9IG1tKG1tLnByZXByb2Nlc3NfaW5wdXQoY2F0KCkpKVxuICAgIHByaW50KHByZWRzLnNoYXBlKVxuICAgICMgdG9yY2guU2l6ZShbMSwgMTAwMF0pXG4gICAgcHJpbnQobW0uZGVjb2RlX3ByZWRpY3Rpb25zKHByZWRzKSlcbiAgICAjIFtbKCduMDIxMjQwNzUnLCAnRWd5cHRpYW5fY2F0JywgMC44ODE3MDk3KSwgKCduMDIxMjMwNDUnLCAndGFiYnknLCAwLjAwOTMzNTI5MiksIC4uLl1dXG4gICAgYGBgXG4gIC0gKipgbnVtX2NsYXNzZXM9MGAqKiBzZXQgZm9yIGV4Y2x1ZGluZyBtb2RlbCB0b3AgYEdsb2JhbEF2ZXJhZ2VQb29saW5nMkQgKyBEZW5zZWAgbGF5ZXJzLlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCByZXNuZXN0XG4gICAgbW0gPSByZXNuZXN0LlJlc05lc3Q1MChudW1fY2xhc3Nlcz0wKVxuICAgIHByaW50KG1tLm91dHB1dF9zaGFwZSlcbiAgICAjIChOb25lLCA3LCA3LCAyMDQ4KVxuICAgIGBgYFxuICAtICoqYG51bV9jbGFzc2VzPXtjdXN0b20gb3V0cHV0IGNsYXNzZXN9YCoqIG90aGVycyB0aGFuIGAxMDAwYCBvciBgMGAgd2lsbCBqdXN0IHNraXAgbG9hZGluZyB0aGUgaGVhZGVyIERlbnNlIGxheWVyIHdlaWdodHMuIEFzIGBtb2RlbC5sb2FkX3dlaWdodHMod2VpZ2h0X2ZpbGUsIGJ5X25hbWU9VHJ1ZSwgc2tpcF9taXNtYXRjaD1UcnVlKWAgaXMgdXNlZCBmb3IgbG9hZGluZyB3ZWlnaHRzLlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCBzd2luX3RyYW5zZm9ybWVyX3YyXG5cbiAgICBtbSA9IHN3aW5fdHJhbnNmb3JtZXJfdjIuU3dpblRyYW5zZm9ybWVyVjJUaW55X3dpbmRvdzgobnVtX2NsYXNzZXM9NjQpXG4gICAgIyA+Pj4+IExvYWQgcHJldHJhaW5lZCBmcm9tOiB+Ly5rZXJhcy9tb2RlbHMvc3dpbl90cmFuc2Zvcm1lcl92Ml90aW55X3dpbmRvdzhfMjU2X2ltYWdlbmV0Lmg1XG4gICAgIyBXQVJOSU5HOnRlbnNvcmZsb3c6U2tpcHBpbmcgbG9hZGluZyB3ZWlnaHRzIGZvciBsYXllciAjNjAxIChuYW1lZCBwcmVkaWN0aW9ucykgZHVlIHRvIG1pc21hdGNoIGluIHNoYXBlIGZvciB3ZWlnaHQgcHJlZGljdGlvbnMva2VybmVsOjAuIFdlaWdodCBleHBlY3RzIHNoYXBlICg3NjgsIDY0KS4gUmVjZWl2ZWQgc2F2ZWQgd2VpZ2h0IHdpdGggc2hhcGUgKDc2OCwgMTAwMClcbiAgICAjIFdBUk5JTkc6dGVuc29yZmxvdzpTa2lwcGluZyBsb2FkaW5nIHdlaWdodHMgZm9yIGxheWVyICM2MDEgKG5hbWVkIHByZWRpY3Rpb25zKSBkdWUgdG8gbWlzbWF0Y2ggaW4gc2hhcGUgZm9yIHdlaWdodCBwcmVkaWN0aW9ucy9iaWFzOjAuIFdlaWdodCBleHBlY3RzIHNoYXBlICg2NCwpLiBSZWNlaXZlZCBzYXZlZCB3ZWlnaHQgd2l0aCBzaGFwZSAoMTAwMCwpXG4gICAgYGBgXG4gIC0gKipSZWxvYWQgb3duIG1vZGVsIHdlaWdodHMgYnkgc2V0IGBwcmV0cmFpbmVkPVwieHh4Lmg1XCJgKiouIEJldHRlciB0aGFuIGNhbGxpbmcgYG1vZGVsLmxvYWRfd2VpZ2h0c2AgZGlyZWN0bHksIGlmIHJlbG9hZGluZyBtb2RlbCB3aXRoIGRpZmZlcmVudCBgaW5wdXRfc2hhcGVgIGFuZCB3aXRoIHdlaWdodHMgc2hhcGUgbm90IG1hdGNoaW5nLlxuICAgIGBgYHB5XG4gICAgaW1wb3J0IG9zXG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCBjb2F0bmV0XG4gICAgcHJldHJhaW5lZCA9IG9zLnBhdGguZXhwYW5kdXNlcignfi8ua2VyYXMvbW9kZWxzL2NvYXRuZXQwXzIyNF9pbWFnZW5ldC5oNScpXG4gICAgbW0gPSBjb2F0bmV0LkNvQXROZXQxKGlucHV0X3NoYXBlPSgzODQsIDM4NCwgMyksIHByZXRyYWluZWQ9cHJldHJhaW5lZCkgICMgTm8gc2Vuc2UsIGp1c3Qgc2hvd2luZyB1c2FnZVxuICAgIGBgYFxuICAtICoqQWxpYXMgbmFtZSBga2VjYW1gKiogY2FuIGJlIHVzZWQgaW5zdGVhZCBvZiBga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVsc2AuIEl0J3MgYF9faW5pdF9fLnB5YCBvbmx5IHdpdGggYGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscyBpbXBvcnQgKmAuXG4gICAgYGBgcHlcbiAgICBpbXBvcnQga2VjYW1cbiAgICBtbSA9IGtlY2FtLnlvbG9yLllPTE9SX0NTUCgpXG4gICAgaW1tID0ga2VjYW0udGVzdF9pbWFnZXMuZG9nX2NhdCgpXG4gICAgcHJlZHMgPSBtbShtbS5wcmVwcm9jZXNzX2lucHV0KGltbSkpXG4gICAgYmJveHMsIGxhYmxlcywgY29uZmlkZW5jZXMgPSBtbS5kZWNvZGVfcHJlZGljdGlvbnMocHJlZHMpWzBdXG4gICAga2VjYW0uY29jby5zaG93X2ltYWdlX3dpdGhfYmJveGVzKGltbSwgYmJveHMsIGxhYmxlcywgY29uZmlkZW5jZXMpXG4gICAgYGBgXG4gIC0gKipDYWxjdWxhdGUgZmxvcHMqKiBtZXRob2QgZnJvbSBbVEYgMi4wIEZlYXR1cmU6IEZsb3BzIGNhbGN1bGF0aW9uICMzMjgwOV0oaHR0cHM6Ly9naXRodWIuY29tL3RlbnNvcmZsb3cvdGVuc29yZmxvdy9pc3N1ZXMvMzI4MDkjaXNzdWVjb21tZW50LTg0OTQzOTI4NykuIEZvciBQeVRvcmNoIGJhY2tlbmQsIG5lZWRzIGB0aG9wYCBgcGlwIGluc3RhbGwgdGhvcGAuXG4gICAgYGBgcHlcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IGNvYXRuZXQsIHJlc25lc3QsIG1vZGVsX3N1cmdlcnlcblxuICAgIG1vZGVsX3N1cmdlcnkuZ2V0X2Zsb3BzKGNvYXRuZXQuQ29BdE5ldDAoKSlcbiAgICAjID4+Pj4gRkxPUHM6IDQsMjIxLDkwOCw1NTksIEdGTE9QczogNC4yMjE5R1xuICAgIG1vZGVsX3N1cmdlcnkuZ2V0X2Zsb3BzKHJlc25lc3QuUmVzTmVzdDUwKCkpXG4gICAgIyA+Pj4+IEZMT1BzOiA1LDM3OCwzOTksOTkyLCBHRkxPUHM6IDUuMzc4NEdcbiAgICBgYGBcbiAgLSAqKltEZXByZWNhdGVkXSBgdGVuc29yZmxvd19hZGRvbnNgKiogaXMgbm90IGltcG9ydGVkIGJ5IGRlZmF1bHQuIFdoaWxlIHJlbG9hZGluZyBtb2RlbCBkZXBlbmRpbmcgb24gYEdyb3VwTm9ybWFsaXphdGlvbmAgbGlrZSBgTW9iaWxlVmlUVjJgIGZyb20gYGg1YCBkaXJlY3RseSwgbmVlZHMgdG8gaW1wb3J0IGB0ZW5zb3JmbG93X2FkZG9uc2AgbWFudWFsbHkgZmlyc3QuXG4gICAgYGBgcHlcbiAgICBpbXBvcnQgdGVuc29yZmxvd19hZGRvbnMgYXMgdGZhXG5cbiAgICBtb2RlbF9wYXRoID0gb3MucGF0aC5leHBhbmR1c2VyKCd+Ly5rZXJhcy9tb2RlbHMvbW9iaWxldml0X3YyXzA1MF8yNTZfaW1hZ2VuZXQuaDUnKVxuICAgIG1tID0ga2VyYXMubW9kZWxzLmxvYWRfbW9kZWwobW9kZWxfcGF0aClcbiAgICBgYGBcbiAgLSAqKkV4cG9ydCBURiBtb2RlbCB0byBvbm54KiouIE5lZWRzIGB0ZjJvbm54YCBmb3IgVEYsIGBwaXAgaW5zdGFsbCBvbm54IHRmMm9ubnggb25ueHNpbSBvbm54cnVudGltZWAuIEZvciB1c2luZyBQeVRvcmNoIGJhY2tlbmQsIGV4cG9ydGluZyBvbm54IGlzIHN1cHBvcnRlZCBieSBQeVRvcmNoLlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCB2b2xvLCBuYXQsIG1vZGVsX3N1cmdlcnlcbiAgICBtbSA9IG5hdC5EaU5BVF9TbWFsbChwcmV0cmFpbmVkPVRydWUpXG4gICAgbW9kZWxfc3VyZ2VyeS5leHBvcnRfb25ueChtbSwgZnVzZV9jb252X2JuPVRydWUsIGJhdGNoX3NpemU9MSwgc2ltcGxpZnk9VHJ1ZSlcbiAgICAjIEV4cG9ydGVkIHNpbXBsaWZpZWQgb25ueDogZGluYXRfc21hbGwub25ueFxuXG4gICAgIyBSdW4gdGVzdFxuICAgIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy5pbWFnZW5ldCBpbXBvcnQgZXZhbF9mdW5jXG4gICAgYWEgPSBldmFsX2Z1bmMuT05OWE1vZGVsSW50ZXJmKG1tLm5hbWUgKyAnLm9ubngnKVxuICAgIGlucHV0cyA9IG5wLnJhbmRvbS51bmlmb3JtKHNpemU9WzEsICptbS5pbnB1dF9zaGFwZVsxOl1dKS5hc3R5cGUoJ2Zsb2F0MzInKVxuICAgIHByaW50KGZcIntucC5hbGxjbG9zZShhYShpbnB1dHMpLCBtbShpbnB1dHMpLCBhdG9sPTFlLTUpID0gfVwiKVxuICAgICMgbnAuYWxsY2xvc2UoYWEoaW5wdXRzKSwgbW0oaW5wdXRzKSwgYXRvbD0xZS01KSA9IFRydWVcbiAgICBgYGBcbiAgLSAqKk1vZGVsIHN1bW1hcnkqKiBgbW9kZWxfc3VtbWFyeS5jc3ZgIGNvbnRhaW5zIGdhdGhlcmVkIG1vZGVsIGluZm8uXG4gICAgLSBgcGFyYW1zYCBmb3IgbW9kZWwgcGFyYW1zIGNvdW50IGluIGBNYFxuICAgIC0gYGZsb3BzYCBmb3IgRkxPUHMgaW4gYEdgXG4gICAgLSBgaW5wdXRgIGZvciBtb2RlbCBpbnB1dCBzaGFwZVxuICAgIC0gYGFjY19tZXRyaWNzYCBtZWFucyBgSW1hZ2VuZXQgVG9wMSBBY2N1cmFjeWAgZm9yIHJlY29nbml0aW9uIG1vZGVscywgYENPQ08gdmFsIEFQYCBmb3IgZGV0ZWN0aW9uIG1vZGVsc1xuICAgIC0gYGluZmVyZW5jZV9xcHNgIGZvciBgVDQgaW5mZXJlbmNlIHF1ZXJ5IHBlciBzZWNvbmRgIHdpdGggYGJhdGNoX3NpemU9MSArIHRydGV4ZWNgXG4gICAgLSBgZXh0cmFgIG1lYW5zIGlmIGFueSBleHRyYSB0cmFpbmluZyBpbmZvLlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCBwbG90X2Z1bmNcbiAgICBwbG90X3NlcmllcyA9IFtcImVmZmljaWVudHZpdF9iXCIsIFwiZWZmaWNpZW50dml0X21cIiwgXCJlZmZpY2llbnRuZXRcIiwgXCJlZmZpY2llbnRuZXR2MlwiXVxuICAgIHBsb3Rfc2VyaWVzID0gW1xuICAgICAgICBcImVmZmljaWVudG5ldHYyXCIsICd0aW55bmV0JywgJ2xjbmV0JywgJ21vYmlsZW5ldHYzJywgJ2Zhc3Rlcm5ldCcsICdmYXN0ZXJ2aXQnLFxuICAgICAgICAnaW5jZXB0aW9ubmV4dCcsICdlZmZpY2llbnR2aXRfbScsICdtb2JpbGV2aXQnLCAnY29udm5leHR2MicsXG4gICAgXVxuICAgIHBsb3RfZnVuYy5wbG90X21vZGVsX3N1bW1hcnkocGxvdF9zZXJpZXMsIHhfbGFiZWw9J2luZmVyZW5jZV9xcHMnLCBtb2RlbF90YWJsZT1cIm1vZGVsX3N1bW1hcnkuY3N2XCIpXG4gICAgYGBgXG4gICAgIVttb2RlbF9zdW1tYXJ5XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Fzc2V0cy81NzQ0NTI0LzdiYzY3OWEyLWYwMTMtNDA5Ni1iYjFkLWU0ZmM3NzIzZmYyNClcbiAgLSAqKkNvZGUgZm9ybWF0KiogaXMgdXNpbmcgYGxpbmUtbGVuZ3RoPTE2MGA6XG4gICAgYGBgc2hcbiAgICBmaW5kIC4vKiAtbmFtZSBcIioucHlcIiB8IGdyZXAgLXYgX19pbml0X18gfCB4YXJncyAtSSB7fSBibGFjayAtbCAxNjAge31cbiAgICBgYGBcbiMjIFQ0IEluZmVyZW5jZVxuICAtIFtDb2xhYiB0cnRleGVjLmlweW5iXShodHRwczovL2NvbGFiLnJlc2VhcmNoLmdvb2dsZS5jb20vZHJpdmUvMXhMd2Z2YlpOcWFka2RBWnU5YjBVek9yRVRMbzY1N29jP3VzcD1kcml2ZV9saW5rKS5cbiAgLSAqKlQ0IEluZmVyZW5jZSoqIGluIHRoZSBtb2RlbCB0YWJsZXMgYXJlIHRlc3RlZCB1c2luZyBgdHJ0ZXhlY2Agb24gYFRlc2xhIFQ0YCB3aXRoIGBDVURBPTEyLjAuMS0xLCBEcml2ZXI9NTI1LjYwLjEzYC4gQWxsIG1vZGVscyBhcmUgZXhwb3J0ZWQgYXMgT05OWCB1c2luZyBQeVRvcmNoIGJhY2tlbmQsIHVzaW5nIGBiYXRjaF9zemllPTFgIG9ubHkuICoqTm90ZTogdGhpcyBkYXRhIGlzIGZvciByZWZlcmVuY2Ugb25seSwgYW5kIHZhcnkgaW4gZGlmZmVyZW50IGJhdGNoIHNpemVzIG9yIGJlbmNobWFyayB0b29scyBvciBwbGF0Zm9ybXMgb3IgaW1wbGVtZW50YXRpb25zKiouXG4gIGBgYHNoXG4gICMgQmFzaWMgdHJ0ZXhlYyBjb21tYW5kXG4gIHRydGV4ZWMgLS1vbm54PUNvbnZGb3JtZXJTMTgub25ueCAtLWZwMTYgLS1hbGxvd0dQVUZhbGxiYWNrIC0tdXNlU3BpbldhaXQgIyAtLXVzZUN1ZGFHcmFwaFxuICBgYGBcbiMjIExheWVyc1xuICAtIFthdHRlbnRpb25fbGF5ZXJzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2F0dGVudGlvbl9sYXllcnMpIGlzIGBfX2luaXRfXy5weWAgb25seSwgd2hpY2ggaW1wb3J0cyBjb3JlIGxheWVycyBkZWZpbmVkIGluIG1vZGVsIGFyY2hpdGVjdHVyZXMuIExpa2UgYFJlbGF0aXZlUG9zaXRpb25hbEVtYmVkZGluZ2AgZnJvbSBgYm90bmV0YCwgYG91dGxvb2tfYXR0ZW50aW9uYCBmcm9tIGB2b2xvYCwgYW5kIG1hbnkgb3RoZXIgYFBvc2l0aW9uYWwgRW1iZWRkaW5nIExheWVyc2AgLyBgQXR0ZW50aW9uIEJsb2Nrc2AuXG4gIGBgYHB5XG4gIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscyBpbXBvcnQgYXR0ZW50aW9uX2xheWVyc1xuICBhYSA9IGF0dGVudGlvbl9sYXllcnMuUmVsYXRpdmVQb3NpdGlvbmFsRW1iZWRkaW5nKClcbiAgcHJpbnQoZlwie2FhKHRmLm9uZXMoWzEsIDQsIDE0LCAxNiwgMjU2XSkpLnNoYXBlID0gfVwiKVxuICAjIGFhKHRmLm9uZXMoWzEsIDQsIDE0LCAxNiwgMjU2XSkpLnNoYXBlID0gVGVuc29yU2hhcGUoWzEsIDQsIDE0LCAxNiwgMTQsIDE2XSlcbiAgYGBgXG4jIyBNb2RlbCBzdXJnZXJ5XG4gIC0gW21vZGVsX3N1cmdlcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbW9kZWxfc3VyZ2VyeSkgaW5jbHVkaW5nIGZ1bmN0aW9ucyB1c2VkIHRvIGNoYW5nZSBtb2RlbCBwYXJhbWV0ZXJzIGFmdGVyIGJ1aWx0LlxuICBgYGBweVxuICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IG1vZGVsX3N1cmdlcnlcbiAgbW0gPSBrZXJhcy5hcHBsaWNhdGlvbnMuUmVzTmV0NTAoKSAgIyBUcmFpbmFibGUgcGFyYW1zOiAyNSw1ODMsNTkyXG5cbiAgIyBSZXBsYWNlIGFsbCBSZUxVIHdpdGggUFJlTFUuIFRyYWluYWJsZSBwYXJhbXM6IDI1LDYwNiwzMTJcbiAgbW0gPSBtb2RlbF9zdXJnZXJ5LnJlcGxhY2VfUmVMVShtbSwgdGFyZ2V0X2FjdGl2YXRpb249J1BSZUxVJylcblxuICAjIEZ1c2UgY29udiBhbmQgYmF0Y2hfbm9ybSBsYXllcnMuIFRyYWluYWJsZSBwYXJhbXM6IDI1LDU1MywxOTJcbiAgbW0gPSBtb2RlbF9zdXJnZXJ5LmNvbnZlcnRfdG9fZnVzZWRfY29udl9ibl9tb2RlbChtbSlcbiAgYGBgXG4jIyBJbWFnZU5ldCB0cmFpbmluZyBhbmQgZXZhbHVhdGluZ1xuICAtIFtJbWFnZU5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9pbWFnZW5ldCkgY29udGFpbnMgbW9yZSBkZXRhaWwgdXNhZ2UgYW5kIHNvbWUgY29tcGFyaW5nIHJlc3VsdHMuXG4gIC0gW0luaXQgSW1hZ2VuZXQgZGF0YXNldCB1c2luZyB0ZW5zb3JmbG93X2RhdGFzZXRzICM5XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rpc2N1c3Npb25zLzkpLlxuICAtIEZvciBjdXN0b20gZGF0YXNldCwgYGN1c3RvbV9kYXRhc2V0X3NjcmlwdC5weWAgY2FuIGJlIHVzZWQgY3JlYXRpbmcgYSBganNvbmAgZm9ybWF0IGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIGFzIGAtLWRhdGFfbmFtZSB4eHguanNvbmAgZm9yIHRyYWluaW5nLCBkZXRhaWwgdXNhZ2UgY2FuIGJlIGZvdW5kIGluIFtDdXN0b20gcmVjb2duaXRpb24gZGF0YXNldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9kaXNjdXNzaW9ucy81MiNkaXNjdXNzaW9uLTM5NzE1MTMpLlxuICAtIEFub3RoZXIgbWV0aG9kIGNyZWF0aW5nIGN1c3RvbSBkYXRhc2V0IGlzIHVzaW5nIGB0ZmRzLmxvYWRgLCByZWZlciBbV3JpdGluZyBjdXN0b20gZGF0YXNldHNdKGh0dHBzOi8vd3d3LnRlbnNvcmZsb3cub3JnL2RhdGFzZXRzL2FkZF9kYXRhc2V0KSBhbmQgW0NyZWF0aW5nIHByaXZhdGUgdGVuc29yZmxvd19kYXRhc2V0cyBmcm9tIHRmZHMgIzQ4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rpc2N1c3Npb25zLzQ4KSBieSBATWVkaWNtaW5kLlxuICAtIFJ1bm5pbmcgYW4gQVdTIFNhZ2VtYWtlciBlc3RpbWF0b3Igam9iIHVzaW5nIGBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzYCBjYW4gYmUgZm91bmQgaW4gW0FXUyBTYWdlbWFrZXIgc2NyaXB0IGV4YW1wbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZGlzY3Vzc2lvbnMvMTA3KSBieSBATWVkaWNtaW5kLlxuICAtIGBhb3RuZXQuQW90TmV0NTBgIGRlZmF1bHQgcGFyYW1ldGVycyBzZXQgaXMgYSB0eXBpY2FsIGBSZXNOZXQ1MGAgYXJjaGl0ZWN0dXJlIHdpdGggYENvbnYyRCB1c2VfYmlhcz1GYWxzZWAgYW5kIGBwYWRkaW5nYCBsaWtlIGBQeVRvcmNoYC5cbiAgLSBEZWZhdWx0IHBhcmFtZXRlcnMgZm9yIGB0cmFpbl9zY3JpcHQucHlgIGlzIGxpa2UgYEEzYCBjb25maWd1cmF0aW9uIGZyb20gW1Jlc05ldCBzdHJpa2VzIGJhY2s6IEFuIGltcHJvdmVkIHRyYWluaW5nIHByb2NlZHVyZSBpbiB0aW1tXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjExMC4wMDQ3Ni5wZGYpIHdpdGggYGJhdGNoX3NpemU9MjU2LCBpbnB1dF9zaGFwZT0oMTYwLCAxNjApYC5cbiAgICBgYGBzaFxuICAgICMgYGFudGlhbGlhc2AgaXMgZGVmYXVsdCBlbmFibGVkIGZvciByZXNpemUsIGNhbiBiZSB0dXJuZWQgb2ZmIGJlIHNldCBgLS1kaXNhYmxlX2FudGlhbGlhc2AuXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzAnIFRGX1hMQV9GTEFHUz1cIi0tdGZfeGxhX2F1dG9faml0PTJcIiAuL3RyYWluX3NjcmlwdC5weSAtLXNlZWQgMCAtcyBhb3RuZXQ1MFxuICAgIGBgYFxuICAgIGBgYHNoXG4gICAgIyBFdmFsdWF0aW9uIHVzaW5nIGlucHV0X3NoYXBlICgyMjQsIDIyNCkuXG4gICAgIyBgYW50aWFsaWFzYCB1c2FnZSBzaG91bGQgYmUgc2FtZSB3aXRoIHRyYWluaW5nLlxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScxJyAuL2V2YWxfc2NyaXB0LnB5IC1tIGFvdG5ldDUwX2Vwb2NoXzEwM192YWxfYWNjXzAuNzY3NC5oNSAtaSAyMjQgLS1jZW50cmFsX2Nyb3AgMC45NVxuICAgICMgPj4+PiBBY2N1cmFjeSB0b3AxOiAwLjc4NDY2IHRvcDU6IDAuOTQwODhcbiAgICBgYGBcbiAgICAhW2FvdG5ldDUwX2ltYWdlbmV0XShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS81NzQ0NTI0LzE2Mzc5NTExNC1iMjQ0MWU1ZC05NGQ1LTQzMTAtODI2YS05NTg0MjZmMTM0M2UucG5nKVxuICAtICoqUmVzdG9yZSBmcm9tIGJyZWFrIHBvaW50KiogYnkgc2V0dGluZyBgLS1yZXN0b3JlX3BhdGhgIGFuZCBgLS1pbml0aWFsX2Vwb2NoYCwgYW5kIGtlZXAgb3RoZXIgcGFyYW1ldGVycyBzYW1lLiBgcmVzdG9yZV9wYXRoYCBpcyBoaWdoZXIgcHJpb3JpdHkgdGhhbiBgbW9kZWxgIGFuZCBgYWRkaXRpb25hbF9tb2RlbF9rd2FyZ3NgLCBhbHNvIHJlc3RvcmUgYG9wdGltaXplcmAgYW5kIGBsb3NzYC4gYGluaXRpYWxfZXBvY2hgIGlzIG1haW5seSBmb3IgbGVhcm5pbmcgcmF0ZSBzY2hlZHVsZXIuIElmIG5vdCBzdXJlIHdoZXJlIGl0IHN0b3BwZWQsIGNoZWNrIGBjaGVja3BvaW50cy97c2F2ZV9uYW1lfV9oaXN0Lmpzb25gLlxuICAgIGBgYHB5XG4gICAgaW1wb3J0IGpzb25cbiAgICB3aXRoIG9wZW4oXCJjaGVja3BvaW50cy9hb3RuZXQ1MF9oaXN0Lmpzb25cIiwgXCJyXCIpIGFzIGZmOlxuICAgICAgICBhYSA9IGpzb24ubG9hZChmZilcbiAgICBsZW4oYWFbJ2xyJ10pXG4gICAgIyA0MSA9PT4gNDEgZXBvY2hzIGFyZSBmaW5pc2hlZCwgaW5pdGlhbF9lcG9jaCBpcyA0MSB0aGVuLCByZXN0YXJ0IGZyb20gZXBvY2ggNDJcbiAgICBgYGBcbiAgICBgYGBzaFxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyBURl9YTEFfRkxBR1M9XCItLXRmX3hsYV9hdXRvX2ppdD0yXCIgLi90cmFpbl9zY3JpcHQucHkgLS1zZWVkIDAgLXIgY2hlY2twb2ludHMvYW90bmV0NTBfbGF0ZXN0Lmg1IC1JIDQxXG4gICAgIyA+Pj4+IFJlc3RvcmUgbW9kZWwgZnJvbTogY2hlY2twb2ludHMvYW90bmV0NTBfbGF0ZXN0Lmg1XG4gICAgIyBFcG9jaCA0Mi8xMDVcbiAgICBgYGBcbiAgLSAqKmBldmFsX3NjcmlwdC5weWAqKiBpcyB1c2VkIGZvciBldmFsdWF0aW5nIG1vZGVsIGFjY3VyYWN5LiBbRWZmaWNpZW50TmV0VjIgc2VsZiB0ZXN0ZWQgaW1hZ2VuZXQgYWNjdXJhY3kgIzE5XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rpc2N1c3Npb25zLzE5KSBqdXN0IHNob3dpbmcgaG93IGRpZmZlcmVudCBwYXJhbWV0ZXJzIGFmZmVjdGluZyBtb2RlbCBhY2N1cmFjeS5cbiAgICBgYGBzaFxuICAgICMgZXZhbHVhdGluZyBwcmV0cmFpbmVkIGJ1aWx0aW4gbW9kZWxcbiAgICBDVURBX1ZJU0lCTEVfREVWSUNFUz0nMScgLi9ldmFsX3NjcmlwdC5weSAtbSByZWduZXQuUmVnTmV0WkQ4XG4gICAgIyBldmFsdWF0aW5nIHByZXRyYWluZWQgdGltbSBtb2RlbFxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScxJyAuL2V2YWxfc2NyaXB0LnB5IC1tIHRpbW0ubW9kZWxzLnJlc21scF8xMl8yMjQgLS1pbnB1dF9zaGFwZSAyMjRcblxuICAgICMgZXZhbHVhdGluZyBzcGVjaWZpYyBoNSBtb2RlbFxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScxJyAuL2V2YWxfc2NyaXB0LnB5IC1tIGNoZWNrcG9pbnRzL3h4eC5oNVxuICAgICMgZXZhbHVhdGluZyBzcGVjaWZpYyB0ZmxpdGUgbW9kZWxcbiAgICBDVURBX1ZJU0lCTEVfREVWSUNFUz0nMScgLi9ldmFsX3NjcmlwdC5weSAtbSB4eHgudGZsaXRlXG4gICAgYGBgXG4gIC0gKipQcm9ncmVzc2l2ZSB0cmFpbmluZyoqIHJlZmVyIHRvIFtQREYgMjEwNC4wMDI5OCBFZmZpY2llbnROZXRWMjogU21hbGxlciBNb2RlbHMgYW5kIEZhc3RlciBUcmFpbmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDQuMDAyOTgucGRmKS4gQW90TmV0NTAgQTMgcHJvZ3Jlc3NpdmUgaW5wdXQgc2hhcGVzIGA5NiAxMjggMTYwYDpcbiAgICBgYGBzaFxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScxJyBURl9YTEFfRkxBR1M9XCItLXRmX3hsYV9hdXRvX2ppdD0yXCIgLi9wcm9ncmVzc2l2ZV90cmFpbl9zY3JpcHQucHkgXFxcbiAgICAtLXByb2dyZXNzaXZlX2Vwb2NocyAzMyA2NiAtMSBcXFxuICAgIC0tcHJvZ3Jlc3NpdmVfaW5wdXRfc2hhcGVzIDk2IDEyOCAxNjAgXFxcbiAgICAtLXByb2dyZXNzaXZlX21hZ25pdHVkZXMgMiA0IDYgXFxcbiAgICAtcyBhb3RuZXQ1MF9wcm9ncmVzc2l2ZV8zX2xyX3N0ZXBzXzEwMCAtLXNlZWQgMFxuICAgIGBgYFxuICAgICFbYW90bmV0NTBfcHJvZ3Jlc3NpdmVfMTYwXShodHRwczovL3VzZXItaW1hZ2VzLmdpdGh1YnVzZXJjb250ZW50LmNvbS81NzQ0NTI0LzE1MTI4Njg1MS0yMjFmZjhlYi05ZmU5LTQ2ODUtYWE2MC00YTNiYTk4YzY1NGUucG5nKVxuICAtIFRyYW5zZmVyIGxlYXJuaW5nIHdpdGggYGZyZWV6ZV9iYWNrYm9uZWAgb3IgYGZyZWV6ZV9ub3JtX2xheWVyc2A6IFtFZmZpY2llbnROZXRWMkIwIHRyYW5zZmVyIGxlYXJuaW5nIG9uIGNpZmFyMTAgdGVzdGluZyBmcmVlemluZyBiYWNrYm9uZSAjNTVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZGlzY3Vzc2lvbnMvNTUpLlxuICAtIFtUb2tlbiBsYWJlbCB0cmFpbiB0ZXN0IG9uIENJRkFSMTAgIzU3XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rpc2N1c3Npb25zLzU3KS4gKipDdXJyZW50bHkgbm90IHdvcmtpbmcgYXMgd2VsbCBhcyBleHBlY3RlZCoqLiBgVG9rZW4gbGFiZWxgIGlzIGltcGxlbWVudGF0aW9uIG9mIFtHaXRodWIgemloYW5nSmlhbmcvVG9rZW5MYWJlbGluZ10oaHR0cHM6Ly9naXRodWIuY29tL3ppaGFuZ0ppYW5nL1Rva2VuTGFiZWxpbmcpLCBwYXBlciBbUERGIDIxMDQuMTA4NTggQWxsIFRva2VucyBNYXR0ZXI6IFRva2VuIExhYmVsaW5nIGZvciBUcmFpbmluZyBCZXR0ZXIgVmlzaW9uIFRyYW5zZm9ybWVyc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDQuMTA4NTgucGRmKS5cbiMjIENPQ08gdHJhaW5pbmcgYW5kIGV2YWx1YXRpbmdcbiAgLSAqKkN1cnJlbnRseSBzdGlsbCB1bmRlciB0ZXN0aW5nKiouXG4gIC0gW0NPQ09dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvY29jbykgY29udGFpbnMgbW9yZSBkZXRhaWwgdXNhZ2UuXG4gIC0gYGN1c3RvbV9kYXRhc2V0X3NjcmlwdC5weWAgY2FuIGJlIHVzZWQgY3JlYXRpbmcgYSBganNvbmAgZm9ybWF0IGZpbGUsIHdoaWNoIGNhbiBiZSB1c2VkIGFzIGAtLWRhdGFfbmFtZSB4eHguanNvbmAgZm9yIHRyYWluaW5nLCBkZXRhaWwgdXNhZ2UgY2FuIGJlIGZvdW5kIGluIFtDdXN0b20gZGV0ZWN0aW9uIGRhdGFzZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZGlzY3Vzc2lvbnMvNTIjZGlzY3Vzc2lvbmNvbW1lbnQtMjQ2MDY2NCkuXG4gIC0gRGVmYXVsdCBwYXJhbWV0ZXJzIGZvciBgY29jb190cmFpbl9zY3JpcHQucHlgIGlzIGBFZmZpY2llbnREZXREMGAgd2l0aCBgaW5wdXRfc2hhcGU9KDI1NiwgMjU2LCAzKSwgYmF0Y2hfc2l6ZT02NCwgbW9zYWljX21peF9wcm9iPTAuNSwgZnJlZXplX2JhY2tib25lX2Vwb2Nocz0zMiwgdG90YWxfZXBvY2hzPTEwNWAuIFRlY2huaWNhbGx5LCBpdCdzIGFueSBgcHlyYW1pZCBzdHJ1Y3R1cmUgYmFja2JvbmVgICsgYEVmZmljaWVudERldCAvIFlPTE9YIGhlYWRlciAvIFlPTE9SIGhlYWRlcmAgKyBgYW5jaG9yX2ZyZWUgLyB5b2xvciAvIGVmZmljaWVudGRldCBhbmNob3JzYCBjb21iaW5hdGlvbiBzdXBwb3J0ZWQuXG4gIC0gQ3VycmVudGx5IDQgdHlwZXMgYW5jaG9ycyBzdXBwb3J0ZWQsIHBhcmFtZXRlciAqKmBhbmNob3JzX21vZGVgKiogY29udHJvbHMgd2hpY2ggYW5jaG9yIHRvIHVzZSwgdmFsdWUgaW4gYFtcImVmZmljaWVudGRldFwiLCBcImFuY2hvcl9mcmVlXCIsIFwieW9sb3JcIiwgXCJ5b2xvdjhcIl1gLiBEZWZhdWx0IGBOb25lYCBmb3IgYGRldF9oZWFkZXJgIHByZXNldHMuXG4gIC0gKipOT1RFOiBgWU9MT1Y4YCBoYXMgYSBkZWZhdWx0IGByZWdyZXNzaW9uX2xlbj02NGAgZm9yIGJib3ggb3V0cHV0IGxlbmd0aC4gVHlwaWNhbGx5IGl0J3MgYDRgIGZvciBvdGhlciBkZXRlY3Rpb24gbW9kZWxzLCBmb3IgeW9sb3Y4IGl0J3MgYHJlZ19tYXg9MTYgLT4gcmVncmVzc2lvbl9sZW4gPSAxNiAqIDQgPT0gNjRgLioqXG5cbiAgICB8IGFuY2hvcnNfbW9kZSB8IHVzZV9vYmplY3Rfc2NvcmVzIHwgbnVtX2FuY2hvcnMgfCBhbmNob3Jfc2NhbGUgfCBhc3BlY3RfcmF0aW9zIHwgbnVtX3NjYWxlcyB8IGdyaWRfemVyb19zdGFydCB8XG4gICAgfCAtLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0gfFxuICAgIHwgZWZmaWNpZW50ZGV0IHwgRmFsc2UgICAgICAgICAgICAgfCA5ICAgICAgICAgICB8IDQgICAgICAgICAgICB8IFsxLCAyLCAwLjVdICAgfCAzICAgICAgICAgIHwgRmFsc2UgICAgICAgICAgIHxcbiAgICB8IGFuY2hvcl9mcmVlICB8IFRydWUgICAgICAgICAgICAgIHwgMSAgICAgICAgICAgfCAxICAgICAgICAgICAgfCBbMV0gICAgICAgICAgIHwgMSAgICAgICAgICB8IFRydWUgICAgICAgICAgICB8XG4gICAgfCB5b2xvciAgICAgICAgfCBUcnVlICAgICAgICAgICAgICB8IDMgICAgICAgICAgIHwgTm9uZSAgICAgICAgIHwgcHJlc2V0cyAgICAgICB8IE5vbmUgICAgICAgfCBvZmZzZXQ9MC41ICAgICAgfFxuICAgIHwgeW9sb3Y4ICAgICAgIHwgRmFsc2UgICAgICAgICAgICAgfCAxICAgICAgICAgICB8IDEgICAgICAgICAgICB8IFsxXSAgICAgICAgICAgfCAxICAgICAgICAgIHwgRmFsc2UgICAgICAgICAgIHxcblxuICAgIGBgYHNoXG4gICAgIyBEZWZhdWx0IEVmZmljaWVudERldEQwXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzAnIC4vY29jb190cmFpbl9zY3JpcHQucHlcbiAgICAjIERlZmF1bHQgRWZmaWNpZW50RGV0RDAgdXNpbmcgaW5wdXRfc2hhcGUgNTEyLCBvcHRpbWl6ZXIgYWRhbXcsIGZyZWV6aW5nIGJhY2tib25lIDE2IGVwb2NocywgdG90YWwgNTAgKyA1IGVwb2Noc1xuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyAuL2NvY29fdHJhaW5fc2NyaXB0LnB5IC1pIDUxMiAtcCBhZGFtdyAtLWZyZWV6ZV9iYWNrYm9uZV9lcG9jaHMgMTYgLS1scl9kZWNheV9zdGVwcyA1MFxuXG4gICAgIyBFZmZpY2llbnROZXRWMkIwIGJhY2tib25lICsgRWZmaWNpZW50RGV0RDAgZGV0ZWN0aW9uIGhlYWRlclxuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyAuL2NvY29fdHJhaW5fc2NyaXB0LnB5IC0tYmFja2JvbmUgZWZmaWNpZW50bmV0LkVmZmljaWVudE5ldFYyQjAgLS1kZXRfaGVhZGVyIGVmZmljaWVudGRldC5FZmZpY2llbnREZXREMFxuICAgICMgUmVzTmVzdDUwIGJhY2tib25lICsgRWZmaWNpZW50RGV0RDAgaGVhZGVyIHVzaW5nIHlvbG94IGxpa2UgYW5jaG9yX2ZyZWUgYW5jaG9yc1xuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyAuL2NvY29fdHJhaW5fc2NyaXB0LnB5IC0tYmFja2JvbmUgcmVzbmVzdC5SZXNOZXN0NTAgLS1hbmNob3JzX21vZGUgYW5jaG9yX2ZyZWVcbiAgICAjIFVuaWZvcm1lclNtYWxsMzIgYmFja2JvbmUgKyBFZmZpY2llbnREZXREMCBoZWFkZXIgdXNpbmcgeW9sb3IgYW5jaG9yc1xuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyAuL2NvY29fdHJhaW5fc2NyaXB0LnB5IC0tYmFja2JvbmUgdW5pZm9ybWVyLlVuaWZvcm1lclNtYWxsMzIgLS1hbmNob3JzX21vZGUgeW9sb3JcblxuICAgICMgVHlwaWNhbCBZT0xPWFMgd2l0aCBhbmNob3JfZnJlZSBhbmNob3JzXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzAnIC4vY29jb190cmFpbl9zY3JpcHQucHkgLS1kZXRfaGVhZGVyIHlvbG94LllPTE9YUyAtLWZyZWV6ZV9iYWNrYm9uZV9lcG9jaHMgMFxuICAgICMgWU9MT1hTIHdpdGggZWZmaWNpZW50ZGV0IGFuY2hvcnNcbiAgICBDVURBX1ZJU0lCTEVfREVWSUNFUz0nMCcgLi9jb2NvX3RyYWluX3NjcmlwdC5weSAtLWRldF9oZWFkZXIgeW9sb3guWU9MT1hTIC0tYW5jaG9yc19tb2RlIGVmZmljaWVudGRldCAtLWZyZWV6ZV9iYWNrYm9uZV9lcG9jaHMgMFxuICAgICMgQ29BdE5ldDAgYmFja2JvbmUgKyBZT0xPWCBoZWFkZXIgd2l0aCB5b2xvciBhbmNob3JzXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzAnIC4vY29jb190cmFpbl9zY3JpcHQucHkgLS1iYWNrYm9uZSBjb2F0bmV0LkNvQXROZXQwIC0tZGV0X2hlYWRlciB5b2xveC5ZT0xPWCAtLWFuY2hvcnNfbW9kZSB5b2xvclxuXG4gICAgIyBUeXBpY2FsIFlPTE9SX1A2IHdpdGggeW9sb3IgYW5jaG9yc1xuICAgIENVREFfVklTSUJMRV9ERVZJQ0VTPScwJyAuL2NvY29fdHJhaW5fc2NyaXB0LnB5IC0tZGV0X2hlYWRlciB5b2xvci5ZT0xPUl9QNiAtLWZyZWV6ZV9iYWNrYm9uZV9lcG9jaHMgMFxuICAgICMgWU9MT1JfUDYgd2l0aCBhbmNob3JfZnJlZSBhbmNob3JzXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzAnIC4vY29jb190cmFpbl9zY3JpcHQucHkgLS1kZXRfaGVhZGVyIHlvbG9yLllPTE9SX1A2IC0tYW5jaG9yc19tb2RlIGFuY2hvcl9mcmVlICAtLWZyZWV6ZV9iYWNrYm9uZV9lcG9jaHMgMFxuICAgICMgQ29udk5lWHRUaW55IGJhY2tib25lICsgWU9MT1IgaGVhZGVyIHdpdGggZWZmaWNpZW50ZGV0IGFuY2hvcnNcbiAgICBDVURBX1ZJU0lCTEVfREVWSUNFUz0nMCcgLi9jb2NvX3RyYWluX3NjcmlwdC5weSAtLWJhY2tib25lIGNvbnZuZXh0LkNvbnZOZVh0VGlueSAtLWRldF9oZWFkZXIgeW9sb3IuWU9MT1IgLS1hbmNob3JzX21vZGUgeW9sb3JcbiAgICBgYGBcbiAgICAqKk5vdGU6IENPQ08gdHJhaW5pbmcgc3RpbGwgdW5kZXIgdGVzdGluZywgbWF5IGNoYW5nZSBwYXJhbWV0ZXJzIGFuZCBkZWZhdWx0IGJlaGF2aW9ycy4gVGFrZSB0aGUgcmlzayBpZiB3b3VsZCBsaWtlIGhlbHAgZGV2ZWxvcGluZy4qKlxuICAtICoqYGNvY29fZXZhbF9zY3JpcHQucHlgKiogaXMgdXNlZCBmb3IgZXZhbHVhdGluZyBtb2RlbCBBUCAvIEFSIG9uIENPQ08gdmFsaWRhdGlvbiBzZXQuIEl0IGhhcyBhIGRlcGVuZGVuY3kgYHBpcCBpbnN0YWxsIHB5Y29jb3Rvb2xzYCB3aGljaCBpcyBub3QgaW4gcGFja2FnZSByZXF1aXJlbWVudHMuIE1vcmUgdXNhZ2UgY2FuIGJlIGZvdW5kIGluIFtDT0NPIEV2YWx1YXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvY29jbyNldmFsdWF0aW9uKS5cbiAgICBgYGBzaFxuICAgICMgRWZmaWNpZW50RGV0RDAgdXNpbmcgcmVzaXplIG1ldGhvZCBiaWxpbmVhciB3L28gYW50aWFsaWFzXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzEnIC4vY29jb19ldmFsX3NjcmlwdC5weSAtbSBlZmZpY2llbnRkZXQuRWZmaWNpZW50RGV0RDAgLS1yZXNpemVfbWV0aG9kIGJpbGluZWFyIC0tZGlzYWJsZV9hbnRpYWxpYXNcbiAgICAjID4+Pj4gW0NPQ09FdmFsQ2FsbGJhY2tdIGlucHV0X3NoYXBlOiAoNTEyLCA1MTIpLCBweXJhbWlkX2xldmVsczogWzMsIDddLCBhbmNob3JzX21vZGU6IGVmZmljaWVudGRldFxuXG4gICAgIyBZT0xPWCB1c2luZyBCR1IgaW5wdXQgZm9ybWF0XG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzEnIC4vY29jb19ldmFsX3NjcmlwdC5weSAtbSB5b2xveC5ZT0xPWFRpbnkgLS11c2VfYmdyX2lucHV0IC0tbm1zX21ldGhvZCBoYXJkIC0tbm1zX2lvdV9vcl9zaWdtYSAwLjY1XG4gICAgIyA+Pj4+IFtDT0NPRXZhbENhbGxiYWNrXSBpbnB1dF9zaGFwZTogKDQxNiwgNDE2KSwgcHlyYW1pZF9sZXZlbHM6IFszLCA1XSwgYW5jaG9yc19tb2RlOiBhbmNob3JfZnJlZVxuXG4gICAgIyBZT0xPUiAvIFlPTE9WNyB1c2luZyBsZXR0ZXJib3hfcGFkIGFuZCBvdGhlciB0cmlja3MuXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzEnIC4vY29jb19ldmFsX3NjcmlwdC5weSAtbSB5b2xvci5ZT0xPUl9DU1AgLS1ubXNfbWV0aG9kIGhhcmQgLS1ubXNfaW91X29yX3NpZ21hIDAuNjUgXFxcbiAgICAtLW5tc19tYXhfb3V0cHV0X3NpemUgMzAwIC0tbm1zX3RvcGsgLTEgLS1sZXR0ZXJib3hfcGFkIDY0IC0taW5wdXRfc2hhcGUgNzA0XG4gICAgIyA+Pj4+IFtDT0NPRXZhbENhbGxiYWNrXSBpbnB1dF9zaGFwZTogKDcwNCwgNzA0KSwgcHlyYW1pZF9sZXZlbHM6IFszLCA1XSwgYW5jaG9yc19tb2RlOiB5b2xvclxuXG4gICAgIyBTcGVjaWZ5IGg1IG1vZGVsXG4gICAgQ1VEQV9WSVNJQkxFX0RFVklDRVM9JzEnIC4vY29jb19ldmFsX3NjcmlwdC5weSAtbSBjaGVja3BvaW50cy95b2xveHRpbnlfeW9sb3JfYW5jaG9yLmg1XG4gICAgIyA+Pj4+IFtDT0NPRXZhbENhbGxiYWNrXSBpbnB1dF9zaGFwZTogKDQxNiwgNDE2KSwgcHlyYW1pZF9sZXZlbHM6IFszLCA1XSwgYW5jaG9yc19tb2RlOiB5b2xvclxuICAgIGBgYFxuICAtICoqW0V4cGVyaW1lbnRhbF0gVHJhaW5pbmcgdXNpbmcgUHlUb3JjaCBiYWNrZW5kKiosIGN1cnJlbnRseSB1c2luZyBgdWx0cmFseXRpY3NgIGRhdGFzZXQgYW5kIHZhbGlkYXRvciBwcm9jZXNzLiBUaGUgcGFyYW1ldGVyIGByZWN0X3ZhbD1GYWxzZWAgbWVhbnMgdXNpbmcgZml4ZWQgZGF0YSBzaGFwZSBgWzY0MCwgNjQwXWAgZm9yIHZhbGlkYXRvciwgb3Igd2lsbCBieSBkeW5hbWljLlxuICAgIGBgYHB5XG4gICAgaW1wb3J0IG9zLCBzeXNcbiAgICBvcy5lbnZpcm9uW1wiS0VDQU1fQkFDS0VORFwiXSA9IFwidG9yY2hcIlxuICAgIHN5cy5wYXRoLmFwcGVuZChvcy5wYXRoLmV4cGFuZHVzZXIoXCJ+L3dvcmtzcGFjZS91bHRyYWx5dGljcy9cIikpXG5cbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMueW9sb3Y4IGltcG9ydCB0cmFpbiwgeW9sb3Y4LCB0b3JjaF93cmFwcGVyXG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCBlZmZpY2llbnRuZXRcblxuICAgICMgbW9kZWwgVHJhaW5hYmxlIHBhcmFtczogNywwMjMsOTA0LCBHRkxPUHM6IDguMTgxNUdcbiAgICBiYiA9IGVmZmljaWVudG5ldC5FZmZpY2llbnROZXRWMkIwKGlucHV0X3NoYXBlPSgzLCA2NDAsIDY0MCksIG51bV9jbGFzc2VzPTApXG4gICAgbW9kZWwgPSB5b2xvdjguWU9MT1Y4X04oYmFja2JvbmU9YmIsIGNsYXNzaWZpZXJfYWN0aXZhdGlvbj1Ob25lLCBwcmV0cmFpbmVkPU5vbmUpLmN1ZGEoKVxuICAgICMgbW9kZWwgPSB5b2xvdjguWU9MT1Y4X04oaW5wdXRfc2hhcGU9KDMsIE5vbmUsIE5vbmUpLCBjbGFzc2lmaWVyX2FjdGl2YXRpb249Tm9uZSwgcHJldHJhaW5lZD1Ob25lKS5jdWRhKClcbiAgICBtb2RlbCA9IHRvcmNoX3dyYXBwZXIuRGV0ZWN0KG1vZGVsKVxuICAgIGVtYSA9IHRyYWluLnRyYWluKG1vZGVsLCBkYXRhc2V0X3BhdGg9XCJjb2NvLnlhbWxcIiwgcmVjdF92YWw9RmFsc2UpXG4gICAgYGBgXG4gICAgIVt5b2xvdjhfdHJhaW5pbmddKGh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzU3NDQ1MjQvMjM1MTQyMjg5LWNiNmE0ZGEwLTFlYTctNDI2MS1hZmRkLTAzYTNjMzYyNzhiOC5wbmcpXG4jIyBWaXN1YWxpemluZ1xuICAtIFtWaXN1YWxpemluZ10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy92aXN1YWxpemluZykgaXMgZm9yIHZpc3VhbGl6aW5nIGNvbnZuZXQgZmlsdGVycyBvciBhdHRlbnRpb24gbWFwIHNjb3Jlcy5cbiAgLSAqKm1ha2VfYW5kX2FwcGx5X2dyYWRjYW1faGVhdG1hcCoqIGlzIGZvciBHcmFkLUNBTSBjbGFzcyBhY3RpdmF0aW9uIHZpc3VhbGl6YXRpb24uXG4gICAgYGBgcHlcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IHZpc3VhbGl6aW5nLCB0ZXN0X2ltYWdlcywgcmVzbmVzdFxuICAgIG1tID0gcmVzbmVzdC5SZXNOZXN0NTAoKVxuICAgIGltZyA9IHRlc3RfaW1hZ2VzLmRvZygpXG4gICAgc3VwZXJpbXBvc2VkX2ltZywgaGVhdG1hcCwgcHJlZHMgPSB2aXN1YWxpemluZy5tYWtlX2FuZF9hcHBseV9ncmFkY2FtX2hlYXRtYXAobW0sIGltZywgbGF5ZXJfbmFtZT1cImF1dG9cIilcbiAgICBgYGBcbiAgICAhW10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vNTc0NDUyNC8xNDgxOTkzNzQtNDk0NDgwMGUtYTFmYi00ZGYyLWI5YmEtNDNjZTNkZGU4OGYyLnBuZylcbiAgLSAqKnBsb3RfYXR0ZW50aW9uX3Njb3JlX21hcHMqKiBpcyBtb2RlbCBhdHRlbnRpb24gc2NvcmUgbWFwcyB2aXN1YWxpemF0aW9uLlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCB2aXN1YWxpemluZywgdGVzdF9pbWFnZXMsIGJvdG5ldFxuICAgIGltZyA9IHRlc3RfaW1hZ2VzLmRvZygpXG4gICAgXyA9IHZpc3VhbGl6aW5nLnBsb3RfYXR0ZW50aW9uX3Njb3JlX21hcHMoYm90bmV0LkJvdE5ldFNFMzNUKCksIGltZylcbiAgICBgYGBcbiAgICAhW10oaHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vNTc0NDUyNC8xNDcyMDk1MTEtZjUxOTRkNzMtOWU0Yy00NTdlLWE3NjMtNDVhNDAyNWY0NTJiLnBuZylcbiMjIFRGTGl0ZSBDb252ZXJzaW9uXG4gIC0gQ3VycmVudGx5IGBURkxpdGVgIG5vdCBzdXBwb3J0aW5nIGBDb252MkQgd2l0aCBncm91cHM+MWAgLyBgZ2VsdWAgLyBgdGYuaW1hZ2UuZXh0cmFjdF9wYXRjaGVzYCAvIGB0Zi50cmFuc3Bvc2Ugd2l0aCBsZW4ocGVybSkgPiA0YC4gU29tZSBvcGVyYXRpb25zIGNvdWxkIGJlIHN1cHBvcnRlZCBpbiBgdGYtbmlnaHRseWAgdmVyc2lvbi4gTWF5IHRyeSBpZiBlbmNvdW50ZXJpbmcgaXNzdWUuIE1vcmUgZGlzY3Vzc2lvbiBjYW4gYmUgZm91bmQgW0NvbnZlcnRpbmcgYSB0cmFpbmVkIGtlcmFzIENWIGF0dGVudGlvbiBtb2RlbCB0byBURkxpdGUgIzE3XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rpc2N1c3Npb25zLzE3KS4gU29tZSBzcGVlZCB0ZXN0aW5nIHJlc3VsdHMgY2FuIGJlIGZvdW5kIFtIb3cgdG8gc3BlZWQgdXAgaW5mZXJlbmNlIG9uIGEgcXVhbnRpemVkIG1vZGVsICM0NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9kaXNjdXNzaW9ucy80NCNkaXNjdXNzaW9uY29tbWVudC0yMzQ4OTEwKS5cbiAgLSBgdGYubm4uZ2VsdShpbnB1dHMsIGFwcHJveGltYXRlPVRydWUpYCBhY3RpdmF0aW9uIHdvcmtzIGZvciBURkxpdGUuIERlZmluZSBtb2RlbCB3aXRoIGBhY3RpdmF0aW9uPVwiZ2VsdS9hcHByb3hpbWF0ZVwiYCBvciBgYWN0aXZhdGlvbj1cImdlbHUvYXBwXCJgIHdpbGwgc2V0IGBhcHByb3hpbWF0ZT1UcnVlYCBmb3IgYGdlbHVgLiAqKlNob3VsZCBiZXR0ZXIgZGVjaWRlIGJlZm9yZSB0cmFpbmluZywgb3IgdGhlcmUgbWF5IGJlIGFjY3VyYWN5IGxvc3MqKi5cbiAgLSBOb3Qgc3VwcG9ydGluZyBgVk9MT2AgLyBgSGFsb05ldGAgbW9kZWxzIGNvbnZlcnRpbmcsIGNhdXNlIHRoZXkgbmVlZCBhIGxvbmdlciBgdGYudHJhbnNwb3NlYCBgcGVybWAuXG4gIC0gKiptb2RlbF9zdXJnZXJ5LmNvbnZlcnRfZ3JvdXBzX2NvbnYyZF8yX3NwbGl0X2NvbnYyZCoqIGNvbnZlcnRzIG1vZGVsIGBDb252MkQgd2l0aCBncm91cHM+MWAgbGF5ZXJzIHRvIGBTcGxpdENvbnZgIHVzaW5nIGBzcGxpdCAtPiBjb252IC0+IGNvbmNhdGA6XG4gICAgYGBgcHlcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IHJlZ25ldCwgbW9kZWxfc3VyZ2VyeVxuICAgIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy5pbWFnZW5ldCBpbXBvcnQgZXZhbF9mdW5jXG5cbiAgICBiYiA9IHJlZ25ldC5SZWdOZXRaRDMyKClcbiAgICBtbSA9IG1vZGVsX3N1cmdlcnkuY29udmVydF9ncm91cHNfY29udjJkXzJfc3BsaXRfY29udjJkKGJiKSAgIyBjb252ZXJ0cyBhbGwgYENvbnYyRGAgdXNpbmcgYGdyb3Vwc2AgdG8gYFNwbGl0Q29udjJEYFxuICAgIHRlc3RfaW5wdXRzID0gbnAucmFuZG9tLnVuaWZvcm0oc2l6ZT1bMSwgKm1tLmlucHV0X3NoYXBlWzE6XV0pXG4gICAgcHJpbnQobnAuYWxsY2xvc2UobW0odGVzdF9pbnB1dHMpLCBiYih0ZXN0X2lucHV0cykpKVxuICAgICMgVHJ1ZVxuXG4gICAgY29udmVydGVyID0gdGYubGl0ZS5URkxpdGVDb252ZXJ0ZXIuZnJvbV9rZXJhc19tb2RlbChtbSlcbiAgICBvcGVuKG1tLm5hbWUgKyBcIi50ZmxpdGVcIiwgXCJ3YlwiKS53cml0ZShjb252ZXJ0ZXIuY29udmVydCgpKVxuICAgIHByaW50KG5wLmFsbGNsb3NlKG1tKHRlc3RfaW5wdXRzKSwgZXZhbF9mdW5jLlRGTGl0ZU1vZGVsSW50ZXJmKG1tLm5hbWUgKyAnLnRmbGl0ZScpKHRlc3RfaW5wdXRzKSwgYXRvbD0xZS03KSlcbiAgICAjIFRydWVcbiAgICBgYGBcbiAgLSAqKm1vZGVsX3N1cmdlcnkuY29udmVydF9nZWx1X2FuZF9leHRyYWN0X3BhdGNoZXNfZm9yX3RmbGl0ZSoqIGNvbnZlcnRzIG1vZGVsIGBnZWx1YCBhY3RpdmF0aW9uIHRvIGBnZWx1IGFwcHJveGltYXRlPVRydWVgLCBhbmQgYHRmLmltYWdlLmV4dHJhY3RfcGF0Y2hlc2AgdG8gYSBgQ29udjJEYCB2ZXJzaW9uOlxuICAgIGBgYHB5XG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIGltcG9ydCBjb3RuZXQsIG1vZGVsX3N1cmdlcnlcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMuaW1hZ2VuZXQgaW1wb3J0IGV2YWxfZnVuY1xuXG4gICAgbW0gPSBjb3RuZXQuQ290TmV0U0U1MEQoKVxuICAgIG1tID0gbW9kZWxfc3VyZ2VyeS5jb252ZXJ0X2dyb3Vwc19jb252MmRfMl9zcGxpdF9jb252MmQobW0pXG4gICAgbW0gPSBtb2RlbF9zdXJnZXJ5LmNvbnZlcnRfZ2VsdV9hbmRfZXh0cmFjdF9wYXRjaGVzX2Zvcl90ZmxpdGUobW0pXG4gICAgY29udmVydGVyID0gdGYubGl0ZS5URkxpdGVDb252ZXJ0ZXIuZnJvbV9rZXJhc19tb2RlbChtbSlcbiAgICBvcGVuKG1tLm5hbWUgKyBcIi50ZmxpdGVcIiwgXCJ3YlwiKS53cml0ZShjb252ZXJ0ZXIuY29udmVydCgpKVxuICAgIHRlc3RfaW5wdXRzID0gbnAucmFuZG9tLnVuaWZvcm0oc2l6ZT1bMSwgKm1tLmlucHV0X3NoYXBlWzE6XV0pXG4gICAgcHJpbnQobnAuYWxsY2xvc2UobW0odGVzdF9pbnB1dHMpLCBldmFsX2Z1bmMuVEZMaXRlTW9kZWxJbnRlcmYobW0ubmFtZSArICcudGZsaXRlJykodGVzdF9pbnB1dHMpLCBhdG9sPTFlLTcpKVxuICAgICMgVHJ1ZVxuICAgIGBgYFxuICAtICoqbW9kZWxfc3VyZ2VyeS5wcmVwYXJlX2Zvcl90ZmxpdGUqKiBpcyBqdXN0IGEgY29tYmluYXRpb24gb2YgYWJvdmUgMiBmdW5jdGlvbnM6XG4gICAgYGBgcHlcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IGJlaXQsIG1vZGVsX3N1cmdlcnlcblxuICAgIG1tID0gYmVpdC5CZWl0QmFzZVBhdGNoMTYoKVxuICAgIG1tID0gbW9kZWxfc3VyZ2VyeS5wcmVwYXJlX2Zvcl90ZmxpdGUobW0pXG4gICAgY29udmVydGVyID0gdGYubGl0ZS5URkxpdGVDb252ZXJ0ZXIuZnJvbV9rZXJhc19tb2RlbChtbSlcbiAgICBvcGVuKG1tLm5hbWUgKyBcIi50ZmxpdGVcIiwgXCJ3YlwiKS53cml0ZShjb252ZXJ0ZXIuY29udmVydCgpKVxuICAgIGBgYFxuICAtICoqRGV0ZWN0aW9uIG1vZGVscyoqIGluY2x1ZGluZyBgZWZmaWNpbmV0ZGV0YCAvIGB5b2xveGAgLyBgeW9sb3JgLCBtb2RlbCBjYW4gYmUgY29udmVydGVkIGEgVEZMaXRlIGZvcm1hdCBkaXJlY3RseS4gSWYgbmVlZCBbRGVjb2RlUHJlZGljdGlvbnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvYmxvYi9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvY29jby9ldmFsX2Z1bmMucHkjTDgpIGFsc28gaW5jbHVkZWQgaW4gVEZMaXRlIG1vZGVsLCBuZWVkIHRvIHNldCBgdXNlX3N0YXRpY19vdXRwdXQ9VHJ1ZWAgZm9yIGBEZWNvZGVQcmVkaWN0aW9uc2AsIGFzIFRGTGl0ZSByZXF1aXJlcyBhIG1vcmUgc3RhdGljIG91dHB1dCBzaGFwZS4gTW9kZWwgb3V0cHV0IHNoYXBlIHdpbGwgYmUgZml4ZWQgYXMgYFtiYXRjaCwgbWF4X291dHB1dF9zaXplLCA2XWAuIFRoZSBsYXN0IGRpbWVuc2lvbiBgNmAgbWVhbnMgYFtiYm94X3RvcCwgYmJveF9sZWZ0LCBiYm94X2JvdHRvbSwgYmJveF9yaWdodCwgbGFiZWxfaW5kZXgsIGNvbmZpZGVuY2VdYCwgYW5kIHRob3NlIHZhbGlkIG9uZXMgYXJlIHdoZXJlIGBjb25maWRlbmNlID4gMGAuXG4gICAgYGBgcHlcbiAgICBcIlwiXCIgSW5pdCBtb2RlbCBcIlwiXCJcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IGVmZmljaWVudGRldFxuICAgIG1vZGVsID0gZWZmaWNpZW50ZGV0LkVmZmljaWVudERldEQwKHByZXRyYWluZWQ9XCJjb2NvXCIpXG5cbiAgICBcIlwiXCIgQ3JlYXRlIGEgbW9kZWwgd2l0aCBEZWNvZGVQcmVkaWN0aW9ucyB1c2luZyBgdXNlX3N0YXRpY19vdXRwdXQ9VHJ1ZWAgXCJcIlwiXG4gICAgbW9kZWwuZGVjb2RlX3ByZWRpY3Rpb25zLnVzZV9zdGF0aWNfb3V0cHV0ID0gVHJ1ZVxuICAgICMgcGFyYW1ldGVycyBsaWtlIHNjb3JlX3RocmVzaG9sZCAvIGlvdV9vcl9zaWdtYSBjYW4gYmUgc2V0IGFub3RoZXIgdmFsdWUgaWYgbmVlZGVkLlxuICAgIG5uID0gbW9kZWwuZGVjb2RlX3ByZWRpY3Rpb25zKG1vZGVsLm91dHB1dHNbMF0sIHNjb3JlX3RocmVzaG9sZD0wLjUpXG4gICAgYmIgPSBrZXJhcy5tb2RlbHMuTW9kZWwobW9kZWwuaW5wdXRzWzBdLCBubilcblxuICAgIFwiXCJcIiBDb252ZXJ0IFRGTGl0ZSBcIlwiXCJcbiAgICBjb252ZXJ0ZXIgPSB0Zi5saXRlLlRGTGl0ZUNvbnZlcnRlci5mcm9tX2tlcmFzX21vZGVsKGJiKVxuICAgIG9wZW4oYmIubmFtZSArIFwiLnRmbGl0ZVwiLCBcIndiXCIpLndyaXRlKGNvbnZlcnRlci5jb252ZXJ0KCkpXG5cbiAgICBcIlwiXCIgSW5mZXJlbmNlIHRlc3QgXCJcIlwiXG4gICAgZnJvbSBrZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzLmltYWdlbmV0IGltcG9ydCBldmFsX2Z1bmNcbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IHRlc3RfaW1hZ2VzXG5cbiAgICBkZCA9IGV2YWxfZnVuYy5URkxpdGVNb2RlbEludGVyZihiYi5uYW1lICsgXCIudGZsaXRlXCIpXG4gICAgaW1tID0gdGVzdF9pbWFnZXMuY2F0KClcbiAgICBpbnB1dHMgPSB0Zi5leHBhbmRfZGltcyh0Zi5pbWFnZS5yZXNpemUoaW1tLCBkZC5pbnB1dF9zaGFwZVsxOi0xXSksIDApXG4gICAgaW5wdXRzID0ga2VyYXMuYXBwbGljYXRpb25zLmltYWdlbmV0X3V0aWxzLnByZXByb2Nlc3NfaW5wdXQoaW5wdXRzLCBtb2RlPSd0b3JjaCcpXG4gICAgcHJlZHMgPSBkZChpbnB1dHMpWzBdXG4gICAgcHJpbnQoZlwie3ByZWRzLnNoYXBlID0gfVwiKVxuICAgICMgcHJlZHMuc2hhcGUgPSAoMTAwLCA2KVxuXG4gICAgcHJlZCA9IHByZWRzW3ByZWRzWzosIC0xXSA+IDBdXG4gICAgYmJveGVzLCBsYWJlbHMsIGNvbmZpZGVuY2VzID0gcHJlZFs6LCA6NF0sIHByZWRbOiwgNF0sIHByZWRbOiwgLTFdXG4gICAgcHJpbnQoZlwie2Jib3hlcyA9IH0sIHtsYWJlbHMgPSB9LCB7Y29uZmlkZW5jZXMgPSB9XCIpXG4gICAgIyBiYm94ZXMgPSBhcnJheShbWzAuMjI4MjU0OTQsIDAuNDcyMzg2NzIsIDAuODE2MjYyICAsIDAuODcwMDc0NSBdXSwgZHR5cGU9ZmxvYXQzMiksXG4gICAgIyBsYWJlbHMgPSBhcnJheShbMTYuXSwgZHR5cGU9ZmxvYXQzMiksXG4gICAgIyBjb25maWRlbmNlcyA9IGFycmF5KFswLjgzMDk3MDddLCBkdHlwZT1mbG9hdDMyKVxuXG4gICAgXCJcIlwiIFNob3cgcmVzdWx0IFwiXCJcIlxuICAgIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy5jb2NvIGltcG9ydCBkYXRhXG4gICAgZGF0YS5zaG93X2ltYWdlX3dpdGhfYmJveGVzKGltbSwgYmJveGVzLCBsYWJlbHMsIGNvbmZpZGVuY2VzLCBudW1fY2xhc3Nlcz05MClcbiAgICBgYGBcbiMjIFVzaW5nIFB5VG9yY2ggYXMgYmFja2VuZFxuICAtICoqRXhwZXJpbWVudGFsKiogW0tlcmFzIFB5VG9yY2ggQmFja2VuZF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9weXRvcmNoX2JhY2tlbmQpLlxuICAtICoqU2V0IG9zIGVudmlyb25tZW50IGBleHBvcnQgS0VDQU1fQkFDS0VORD0ndG9yY2gnYCB0byBlbmFibGUgdGhpcyBQeVRvcmNoIGJhY2tlbmQuKipcbiAgLSBDdXJyZW50bHkgc3VwcG9ydHMgbW9zdCByZWNvZ25pdGlvbiBhbmQgZGV0ZWN0aW9uIG1vZGVscyBleGNlcHQgaG9ybmV0KmdmIC8gbmZuZXRzIC8gdm9sby4gRm9yIGRldGVjdGlvbiBtb2RlbHMsIHVzaW5nIGB0b3JjaHZpc2lvbi5vcHMubm1zYCB3aGlsZSBydW5uaW5nIHByZWRpY3Rpb24uXG4gIC0gKipCYXNpYyBtb2RlbCBidWlsZCBhbmQgcHJlZGljdGlvbioqLlxuICAgIC0gV2lsbCBsb2FkIHNhbWUgYGg1YCB3ZWlnaHRzIGFzIFRGIG9uZSBpZiBhdmFpbGFibGUuXG4gICAgLSBOb3RlOiBgaW5wdXRfc2hhcGVgIHdpbGwgYXV0byBmaXQgaW1hZ2UgZGF0YSBmb3JtYXQuIEdpdmVuIGBpbnB1dF9zaGFwZT0oMjI0LCAyMjQsIDMpYCBvciBgaW5wdXRfc2hhcGU9KDMsIDIyNCwgMjI0KWAsIHdpbGwgYm90aCBzZXQgdG8gYCgzLCAyMjQsIDIyNClgIGlmIGBjaGFubmVsc19maXJzdGAuXG4gICAgLSBOb3RlOiBtb2RlbCBpcyBkZWZhdWx0IHNldCB0byBgZXZhbGAgbW9kZS5cbiAgICBgYGBweVxuICAgIGZyb20ga2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscyBpbXBvcnQgcmVzX21scFxuICAgIG1tID0gcmVzX21scC5SZXNNTFAxMigpXG4gICAgIyA+Pj4+IExvYWQgcHJldHJhaW5lZCBmcm9tOiB+Ly5rZXJhcy9tb2RlbHMvcmVzbWxwMTJfaW1hZ2VuZXQuaDVcbiAgICBwcmludChmXCJ7bW0uaW5wdXRfc2hhcGUgPSB9XCIpXG4gICAgIyBtbS5pbnB1dF9zaGFwZSA9IFtOb25lLCAzLCAyMjQsIDIyNF1cblxuICAgIGltcG9ydCB0b3JjaFxuICAgIHByaW50KGZcIntpc2luc3RhbmNlKG1tLCB0b3JjaC5ubi5Nb2R1bGUpID0gfVwiKVxuICAgICMgaXNpbnN0YW5jZShtbSwgdG9yY2gubm4uTW9kdWxlKSA9IFRydWVcblxuICAgICMgUnVuIHByZWRpY3Rpb25cbiAgICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMudGVzdF9pbWFnZXMgaW1wb3J0IGNhdFxuICAgIHByaW50KG1tLmRlY29kZV9wcmVkaWN0aW9ucyhtbShtbS5wcmVwcm9jZXNzX2lucHV0KGNhdCgpKSkpWzBdKVxuICAgICMgWygnbjAyMTI0MDc1JywgJ0VneXB0aWFuX2NhdCcsIDAuOTU5Nzg5NiksICgnbjAyMTIzMDQ1JywgJ3RhYmJ5JywgMC4wMTI4MDk0NzEpLCAuLi5dXG4gICAgYGBgXG4gIC0gKipFeHBvcnQgdHlwaWNhbCBQeVRvcmNoIG9ubnggLyBwdGgqKi5cbiAgICBgYGBweVxuICAgIGltcG9ydCB0b3JjaFxuICAgIHRvcmNoLm9ubnguZXhwb3J0KG1tLCB0b3JjaC5yYW5kbigxLCAzLCAqbW0uaW5wdXRfc2hhcGVbMjpdKSwgbW0ubmFtZSArIFwiLm9ubnhcIilcblxuICAgICMgT3IgYnkgZXhwb3J0X29ubnhcbiAgICBtbS5leHBvcnRfb25ueCgpXG4gICAgIyBFeHBvcnRlZCBvbm54OiByZXNtbHAxMi5vbm54XG5cbiAgICBtbS5leHBvcnRfcHRoKClcbiAgICAjIEV4cG9ydGVkIHB0aDogcmVzbWxwMTIucHRoXG4gICAgYGBgXG4gIC0gKipTYXZlIHdlaWdodHMgYXMgaDUqKi4gVGhpcyBgaDVgIGNhbiBhbHNvIGJlIGxvYWRlZCBpbiB0eXBpY2FsIFRGIGJhY2tlbmQgbW9kZWwuIEN1cnJlbnRseSBpdCdzIG9ubHkgd2VpZ2h0cyB3aXRob3V0IG1vZGVsIHN0cnVjdHVyZSBzdXBwb3J0ZWQuXG4gICAgYGBgcHlcbiAgICBtbS5zYXZlX3dlaWdodHMoXCJmb28uaDVcIilcbiAgICBgYGBcbioqKlxuXG4jIFJlY29nbml0aW9uIE1vZGVsc1xuIyMgQW90TmV0XG4gIC0gW0tlcmFzIEFvdE5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9hb3RuZXQpIGlzIGp1c3QgYSBgUmVzTmV0YCAvIGBSZXNOZXRWMmAgbGlrZSBmcmFtZXdvcmssIHRoYXQgc2V0IHBhcmFtZXRlcnMgbGlrZSBgYXR0bl90eXBlc2AgYW5kIGBzZV9yYXRpb2AgYW5kIG90aGVycywgd2hpY2ggaXMgdXNlZCB0byBhcHBseSBkaWZmZXJlbnQgdHlwZXMgYXR0ZW50aW9uIGxheWVyLiBXb3JrcyBsaWtlIGBieW9hbmV0YCAvIGBieW9ibmV0YCBmcm9tIGB0aW1tYC5cbiAgLSBEZWZhdWx0IHBhcmFtZXRlcnMgc2V0IGlzIGEgdHlwaWNhbCBgUmVzTmV0YCBhcmNoaXRlY3R1cmUgd2l0aCBgQ29udjJEIHVzZV9iaWFzPUZhbHNlYCBhbmQgYHBhZGRpbmdgIGxpa2UgYFB5VG9yY2hgLlxuICBgYGBweVxuICBmcm9tIGtlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMgaW1wb3J0IGFvdG5ldFxuICAjIE1peGluZyBzZSBhbmQgb3V0bG9vayBhbmQgaGFsbyBhbmQgbWhzYSBhbmQgY290X2F0dGVudGlvbiwgMjFNIHBhcmFtZXRlcnMuXG4gICMgNTAgaXMganVzdCBhIHBpY2tlZCBudW1iZXIgdGhhdCBsYXJnZXIgdGhhbiB0aGUgcmVsYXRpdmUgYG51bV9ibG9ja2AuXG4gIGF0dG5fdHlwZXMgPSBbTm9uZSwgXCJvdXRsb29rXCIsIFtcImJvdFwiLCBcImhhbG9cIl0gKiA1MCwgXCJjb3RcIl0sXG4gIHNlX3JhdGlvID0gWzAuMjUsIDAsIDAsIDBdLFxuICBtb2RlbCA9IGFvdG5ldC5Bb3ROZXQ1MFYyKGF0dG5fdHlwZXM9YXR0bl90eXBlcywgc2VfcmF0aW89c2VfcmF0aW8sIHN0ZW1fdHlwZT1cImRlZXBcIiwgc3RyaWRlcz0xKVxuICBtb2RlbC5zdW1tYXJ5KClcbiAgYGBgXG4jIyBCRWlUXG4gIC0gW0tlcmFzIEJFaVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvYmVpdCkgaW5jbHVkZXMgbW9kZWxzIGZyb20gW1BERiAyMTA2LjA4MjU0IEJFaVQ6IEJFUlQgUHJlLVRyYWluaW5nIG9mIEltYWdlIFRyYW5zZm9ybWVyc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDgyNTQucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zICB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0JlaXRCYXNlUGF0Y2gxNiwgMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9iZWl0X2Jhc2VfcGF0Y2gxNl8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgIHwgODYuNTNNICB8IDE3LjYxRyAgfCAyMjQgICB8IDg1LjI0MCAgIHwgMzIxLjIyNiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvYmVpdF9iYXNlX3BhdGNoMTZfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgICAgfCA4Ni43NE0gIHwgNTUuNzBHICB8IDM4NCAgIHwgODYuODA4ICAgfCAxNjQuNzA1IHFwcyAgfFxuICB8IFtCZWl0TGFyZ2VQYXRjaDE2LCAyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2JlaXRfbGFyZ2VfcGF0Y2gxNl8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAzMDQuNDNNIHwgNjEuNjhHICB8IDIyNCAgIHwgODcuNDc2ICAgfCAxMDUuOTk4IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9iZWl0X2xhcmdlX3BhdGNoMTZfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgICAgfCAzMDUuMDBNIHwgMTkxLjY1RyB8IDM4NCAgIHwgODguMzgyICAgfCA0NS43MzA3IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCA1MTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9iZWl0X2xhcmdlX3BhdGNoMTZfNTEyX2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgICAgfCAzMDUuNjdNIHwgMzYzLjQ2RyB8IDUxMiAgIHwgODguNTg0ICAgfCAyMS4zMDk3IHFwcyAgfFxuIyMgQkVpVFYyXG4gIC0gW0tlcmFzIEJFaVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvYmVpdCkgaW5jbHVkZXMgbW9kZWxzIGZyb20gQmVpdFYyIFBhcGVyIFtQREYgMjIwOC4wNjM2NiBCRWlUIHYyOiBNYXNrZWQgSW1hZ2UgTW9kZWxpbmcgd2l0aCBWZWN0b3ItUXVhbnRpemVkIFZpc3VhbCBUb2tlbml6ZXJzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwOC4wNjM2Ni5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgIHwgUGFyYW1zICB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBCZWl0VjJCYXNlUGF0Y2gxNiAgfCA4Ni41M00gIHwgMTcuNjFHIHwgMjI0ICAgfCA4NS41ICAgICB8IDMyMi41MiBxcHMgICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9iZWl0X3YyX2Jhc2VfcGF0Y2gxNl8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCA4Ni41M00gICAgICAgICAgfCAxNy42MUcgfCAyMjQgICB8IDg2LjUgICAgIHwgMzIyLjUyIHFwcyAgIHxcbiAgfCBCZWl0VjJMYXJnZVBhdGNoMTYgfCAzMDQuNDNNIHwgNjEuNjhHIHwgMjI0ICAgfCA4Ny4zICAgICB8IDEwNS43MzQgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9iZWl0X3YyX2xhcmdlX3BhdGNoMTZfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgfCAzMDQuNDNNIHwgNjEuNjhHIHwgMjI0ICAgfCA4OC40ICAgICB8IDEwNS43MzQgcXBzICB8XG4jIyBCb3ROZXRcbiAgLSBbS2VyYXMgQm90TmV0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2JvdG5ldCkgaXMgZm9yIFtQREYgMjEwMS4xMTYwNSBCb3R0bGVuZWNrIFRyYW5zZm9ybWVycyBmb3IgVmlzdWFsIFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwMS4xMTYwNS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBCb3ROZXQ1MCAgICAgIHwgMjFNICAgIHwgNS40MkcgIHwgMjI0ICAgfCAgICAgICAgICB8IDc0Ni40NTQgcXBzICB8XG4gIHwgQm90TmV0MTAxICAgICB8IDQxTSAgICB8IDkuMTNHICB8IDIyNCAgIHwgICAgICAgICAgfCA0NDguMTAyIHFwcyAgfFxuICB8IEJvdE5ldDE1MiAgICAgfCA1Nk0gICAgfCAxMi44NEcgfCAyMjQgICB8ICAgICAgICAgIHwgMzE2LjY3MSBxcHMgIHxcbiAgfCBbQm90TmV0MjZUXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JvdG5ldC9ib3RuZXQyNnRfMjU2X2ltYWdlbmV0Lmg1KSAgICAgfCAxMi41TSAgfCAzLjMwRyAgfCAyNTYgICB8IDc5LjI0NiAgIHwgMTE4OC44NCBxcHMgIHxcbiAgfCBbQm90TmV4dEVDQTI2VF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ib3RuZXQvYm90bmV4dF9lY2EyNnRfMjU2X2ltYWdlbmV0Lmg1KSB8IDEwLjU5TSB8IDIuNDVHICB8IDI1NiAgIHwgNzkuMjcwICAgfCAxMDM4LjE5IHFwcyAgfFxuICB8IFtCb3ROZXRTRTMzVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ib3RuZXQvYm90bmV0X3NlMzN0XzI1Nl9pbWFnZW5ldC5oNSkgICB8IDEzLjdNICB8IDMuODlHICB8IDI1NiAgIHwgODEuMiAgICAgfCA2MTAuNDI5IHFwcyAgfFxuIyMgQ0FGb3JtZXJcbiAgLSBbS2VyYXMgQ0FGb3JtZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvY2Fmb3JtZXIpIGlzIGZvciBbUERGIDIyMTAuMTM0NTIgTWV0YUZvcm1lciBCYXNlbGluZXMgZm9yIFZpc2lvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMTAuMTM0NTIucGRmKS4gYENBRm9ybWVyYCBpcyB1c2luZyAyIHRyYW5zZm9ybWVyIHN0YWNrcywgd2hpbGUgYENvbnZGb3JtZXJgIGlzIGFsbCBjb252IGJsb2Nrcy5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0NBRm9ybWVyUzE4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX3MxOF8yMjRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgIHwgMjZNICAgIHwgNC4xRyAgfCAyMjQgICB8IDgzLjYgICAgIHwgMzIzLjAxNyBxcHMgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY2Fmb3JtZXJfczE4XzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgfCAyNk0gICAgfCAxMy40RyB8IDM4NCAgIHwgODUuMCAgICAgfCAxNjYuMTY0IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX3MxOF8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDI2TSAgICB8IDQuMUcgIHwgMjI0ICAgfCA4NC4xICAgICB8IDMyMy4wMTcgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jYWZvcm1lcl9zMThfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgMjZNICAgIHwgMTMuNEcgfCAzODQgICB8IDg1LjQgICAgIHwgMTY2LjE2NCBxcHMgIHxcbiAgfCBbQ0FGb3JtZXJTMzZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY2Fmb3JtZXJfczM2XzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgfCAzOU0gICAgfCA4LjBHICB8IDIyNCAgIHwgODQuNSAgICAgfCAxODkuNTg5IHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jYWZvcm1lcl9zMzZfMzg0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICB8IDM5TSAgICB8IDI2LjBHIHwgMzg0ICAgfCA4NS43ICAgICB8IDkzLjU4NSBxcHMgICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY2Fmb3JtZXJfczM2XzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgMzlNICAgIHwgOC4wRyAgfCAyMjQgICB8IDg1LjggICAgIHwgMTg5LjU4OSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX3MzNl8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAzOU0gICAgfCAyNi4wRyB8IDM4NCAgIHwgODYuOSAgICAgfCA5My41ODUgcXBzICAgfFxuICB8IFtDQUZvcm1lck0zNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jYWZvcm1lcl9tMzZfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICB8IDU2TSAgICB8IDEzLjJHIHwgMjI0ICAgfCA4NS4yICAgICB8IDEzOC45OTUgcXBzICB8XG4gIHwgLSBbMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX20zNl8zODRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgIHwgNTZNICAgIHwgNDIuMEcgfCAzODQgICB8IDg2LjIgICAgIHwgNjQuMDcwMiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jYWZvcm1lcl9tMzZfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgfCA1Nk0gICAgfCAxMy4yRyB8IDIyNCAgIHwgODYuNiAgICAgfCAxMzguOTk1IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY2Fmb3JtZXJfbTM2XzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDU2TSAgICB8IDQyLjBHIHwgMzg0ICAgfCA4Ny41ICAgICB8IDY0LjA3MDIgcXBzICB8XG4gIHwgW0NBRm9ybWVyQjM2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX2IzNl8yMjRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgIHwgOTlNICAgIHwgMjMuMkcgfCAyMjQgICB8IDg1LjUgICAgIHwgMTAzLjY4IHFwcyAgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY2Fmb3JtZXJfYjM2XzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgfCA5OU0gICAgfCA3Mi4yRyB8IDM4NCAgIHwgODYuNCAgICAgfCA0My4zOTI5IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NhZm9ybWVyX2IzNl8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDk5TSAgICB8IDIzLjJHIHwgMjI0ICAgfCA4Ny40ICAgICB8IDEwMy42OCBxcHMgICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jYWZvcm1lcl9iMzZfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgOTlNICAgIHwgNzIuMkcgfCAzODQgICB8IDg4LjEgICAgIHwgNDMuMzkyOSBxcHMgIHxcblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0NvbnZGb3JtZXJTMThdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY29udmZvcm1lcl9zMThfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgfCAyN00gICAgfCAzLjlHICB8IDIyNCAgIHwgODMuMCAgICAgfCAyOTUuMTE0IHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX3MxOF8zODRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgIHwgMjdNICAgIHwgMTEuNkcgfCAzODQgICB8IDg0LjQgICAgIHwgMTQ1LjkyMyBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX3MxOF8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDI3TSAgICB8IDMuOUcgIHwgMjI0ICAgfCA4My43ICAgICB8IDI5NS4xMTQgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX3MzNl8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAyN00gICAgfCAxMS42RyB8IDM4NCAgIHwgODUuMCAgICAgfCAxNDUuOTIzIHFwcyAgfFxuICB8IFtDb252Rm9ybWVyUzM2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NvbnZmb3JtZXJfczM2XzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgIHwgNDBNICAgIHwgNy42RyAgfCAyMjQgICB8IDg0LjEgICAgIHwgMTYxLjYwOSBxcHMgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY29udmZvcm1lcl9zMzZfMzg0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICB8IDQwTSAgICB8IDIyLjRHIHwgMzg0ICAgfCA4NS40ICAgICB8IDgwLjIxMDEgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY29udmZvcm1lcl9zMzZfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgfCA0ME0gICAgfCA3LjZHICB8IDIyNCAgIHwgODUuNCAgICAgfCAxNjEuNjA5IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY29udmZvcm1lcl9zMzZfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgNDBNICAgIHwgMjIuNEcgfCAzODQgICB8IDg2LjQgICAgIHwgODAuMjEwMSBxcHMgIHxcbiAgfCBbQ29udkZvcm1lck0zNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX20zNl8yMjRfaW1hZ2VuZXQuaDUpICAgICAgICAgICB8IDU3TSAgICB8IDEyLjhHIHwgMjI0ICAgfCA4NC41ICAgICB8IDEzMC4xNjEgcXBzICB8XG4gIHwgLSBbMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NvbnZmb3JtZXJfbTM2XzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgfCA1N00gICAgfCAzNy43RyB8IDM4NCAgIHwgODUuNiAgICAgfCA2My45NzEyIHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NvbnZmb3JtZXJfbTM2XzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgNTdNICAgIHwgMTIuOEcgfCAyMjQgICB8IDg2LjEgICAgIHwgMTMwLjE2MSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NhZm9ybWVyL2NvbnZmb3JtZXJfbTM2XzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDU3TSAgICB8IDM3LjdHIHwgMzg0ICAgfCA4Ni45ICAgICB8IDYzLjk3MTIgcXBzICB8XG4gIHwgW0NvbnZGb3JtZXJCMzZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY2Fmb3JtZXIvY29udmZvcm1lcl9iMzZfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgfCAxMDBNICAgfCAyMi42RyB8IDIyNCAgIHwgODQuOCAgICAgfCA5OC4wNzUxIHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX2IzNl8zODRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgIHwgMTAwTSAgIHwgNjYuNUcgfCAzODQgICB8IDg1LjcgICAgIHwgNDguNTg5NyBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX2IzNl8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDEwME0gICB8IDIyLjZHIHwgMjI0ICAgfCA4Ny4wICAgICB8IDk4LjA3NTEgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jYWZvcm1lci9jb252Zm9ybWVyX2IzNl8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAxMDBNICAgfCA2Ni41RyB8IDM4NCAgIHwgODcuNiAgICAgfCA0OC41ODk3IHFwcyAgfFxuIyMgQ01UXG4gIC0gW0tlcmFzIENNVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9jbXQpIGlzIGZvciBbUERGIDIxMDcuMDYyNjMgQ01UOiBDb252b2x1dGlvbmFsIE5ldXJhbCBOZXR3b3JrcyBNZWV0IFZpc2lvbiBUcmFuc2Zvcm1lcnNdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMTA3LjA2MjYzLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBDTVRUaW55LCAoU2VsZiB0cmFpbmVkIDEwNSBlcG9jaHMpIHwgOS41TSAgIHwgMC42NUcgfCAxNjAgICB8IDc3LjQgICAgIHwgMzE1LjU2NiBxcHMgIHxcbiAgfCAtIFsoMzA1IGVwb2NocyldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY210L2NtdF90aW55XzE2MF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgICB8IDkuNU0gICB8IDAuNjVHIHwgMTYwICAgfCA3OC45NCAgICB8IDMxNS41NjYgcXBzICB8XG4gIHwgLSBbMjI0LCAoZmluZS10dW5lZCA2OSBlcG9jaHMpXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NtdC9jbXRfdGlueV8yMjRfaW1hZ2VuZXQuaDUpICAgICAgfCA5LjVNICAgfCAxLjMyRyB8IDIyNCAgIHwgODAuNzMgICAgfCAyNTQuODcgcXBzICAgfFxuICB8IFtDTVRUaW55X3RvcmNoLCAoMTAwMCBlcG9jaHMpXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NtdC9jbXRfdGlueV90b3JjaF8xNjBfaW1hZ2VuZXQuaDUpICAgICAgIHwgOS41TSAgIHwgMC42NUcgfCAxNjAgICB8IDc5LjIgICAgIHwgMzM4LjIwNyBxcHMgIHxcbiAgfCBbQ01UWFNfdG9yY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY210L2NtdF94c190b3JjaF8xOTJfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgICAgICAgfCAxNS4yTSAgfCAxLjU4RyB8IDE5MiAgIHwgODEuOCAgICAgfCAyNDEuMjg4IHFwcyAgfFxuICB8IFtDTVRTbWFsbF90b3JjaF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jbXQvY210X3NtYWxsX3RvcmNoXzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgICB8IDI1LjFNICB8IDQuMDlHIHwgMjI0ICAgfCA4My41ICAgICB8IDE3MS4xMDkgcXBzICB8XG4gIHwgW0NNVEJhc2VfdG9yY2hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY210L2NtdF9iYXNlX3RvcmNoXzI1Nl9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgICAgfCA0NS43TSAgfCA5LjQyRyB8IDI1NiAgIHwgODQuNSAgICAgfCAxMDMuMzQgcXBzICAgfFxuIyMgQ29hVFxuICAtIFtLZXJhcyBDb2FUXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2NvYXQpIGlzIGZvciBbUERGIDIxMDQuMDYzOTkgQ29hVDogQ28tU2NhbGUgQ29udi1BdHRlbnRpb25hbCBJbWFnZSBUcmFuc2Zvcm1lcnNdKGh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDQuMDYzOTkpLlxuXG4gIHwgTW9kZWwgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0NvYVRMaXRlVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb2F0L2NvYXRfbGl0ZV90aW55X2ltYWdlbmV0Lmg1KSAgfCA1LjdNICAgfCAxLjYwRyB8IDIyNCAgIHwgNzcuNSAgICAgfCA0NTAuMjcgcXBzICAgfFxuICB8IFtDb2FUTGl0ZU1pbmldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29hdC9jb2F0X2xpdGVfbWluaV9pbWFnZW5ldC5oNSkgIHwgMTFNICAgIHwgMi4wMEcgfCAyMjQgICB8IDc5LjEgICAgIHwgNDUyLjg4NCBxcHMgIHxcbiAgfCBbQ29hVExpdGVTbWFsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb2F0L2NvYXRfbGl0ZV9zbWFsbF9pbWFnZW5ldC5oNSkgfCAyME0gICAgfCAzLjk3RyB8IDIyNCAgIHwgODEuOSAgICAgfCAyNDguODQ2IHFwcyAgfFxuICB8IFtDb2FUVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb2F0L2NvYXRfdGlueV9pbWFnZW5ldC5oNSkgICAgICB8IDUuNU0gICB8IDQuMzNHIHwgMjI0ICAgfCA3OC4zICAgICB8IDE1Mi40OTUgcXBzICB8XG4gIHwgW0NvYVRNaW5pXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvYXQvY29hdF9taW5pX2ltYWdlbmV0Lmg1KSAgICAgIHwgMTBNICAgIHwgNi43OEcgfCAyMjQgICB8IDgxLjAgICAgIHwgMTI0Ljg0NSBxcHMgIHxcbiMjIENvQXROZXRcbiAgLSBbS2VyYXMgQ29BdE5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9jb2F0bmV0KSBpcyBmb3IgW1BERiAyMTA2LjA0ODAzIENvQXROZXQ6IE1hcnJ5aW5nIENvbnZvbHV0aW9uIGFuZCBBdHRlbnRpb24gZm9yIEFsbCBEYXRhIFNpemVzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wNDgwMy5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtDb0F0TmV0MCwgMTYwLCAoMTA1IGVwb2NocyldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29hdG5ldC9jb2F0bmV0MF8xNjBfaW1hZ2VuZXQuaDUpIHwgMjMuM00gIHwgMi4wOUcgIHwgMTYwICAgfCA4MC40OCAgICB8IDU4NC4wNTkgcXBzICB8XG4gIHwgW0NvQXROZXQwLCAoMzA1IGVwb2NocyldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29hdG5ldC9jb2F0bmV0MF8yMjRfaW1hZ2VuZXQuaDUpIHwgMjMuOE0gIHwgNC4yMkcgIHwgMjI0ICAgfCA4Mi43OSAgICB8IDQwMC4zMzMgcXBzICB8XG4gIHwgQ29BdE5ldDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAyNU0gICAgfCA0LjZHICAgfCAyMjQgICB8IDgyLjAgICAgIHwgNDAwLjMzMyBxcHMgIHxcbiAgfCAtIHVzZV9kd19zdHJpZGVzPUZhbHNlICAgICAgICAgICAgICB8IDI1TSAgICB8IDQuMkcgICB8IDIyNCAgIHwgODEuNiAgICAgfCA0NjEuMTk3IHFwcyAgfFxuICB8IENvQXROZXQxICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgNDJNICAgIHwgOC44RyAgIHwgMjI0ICAgfCA4My41ICAgICB8IDIwNi45NTQgcXBzICB8XG4gIHwgLSB1c2VfZHdfc3RyaWRlcz1GYWxzZSAgICAgICAgICAgICAgfCA0Mk0gICAgfCA4LjRHICAgfCAyMjQgICB8IDgzLjMgICAgIHwgMjI4LjkzOCBxcHMgIHxcbiAgfCBDb0F0TmV0MiAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDc1TSAgICB8IDE2LjZHICB8IDIyNCAgIHwgODQuMSAgICAgfCAxNTYuMzU5IHFwcyAgfFxuICB8IC0gdXNlX2R3X3N0cmlkZXM9RmFsc2UgICAgICAgICAgICAgIHwgNzVNICAgIHwgMTUuN0cgIHwgMjI0ICAgfCA4NC4xICAgICB8IDE2NS44NDYgcXBzICB8XG4gIHwgQ29BdE5ldDIsIDIxa19mdDFrICAgICAgICAgICAgICAgICAgfCA3NU0gICAgfCAxNi42RyAgfCAyMjQgICB8IDg3LjEgICAgIHwgMTU2LjM1OSBxcHMgIHxcbiAgfCBDb0F0TmV0MyAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDE2OE0gICB8IDM0LjdHICB8IDIyNCAgIHwgODQuNSAgICAgfCA5NS4wNzAzIHFwcyAgfFxuICB8IENvQXROZXQzLCAyMWtfZnQxayAgICAgICAgICAgICAgICAgIHwgMTY4TSAgIHwgMzQuN0cgIHwgMjI0ICAgfCA4Ny42ICAgICB8IDk1LjA3MDMgcXBzICB8XG4gIHwgQ29BdE5ldDMsIDIxa19mdDFrICAgICAgICAgICAgICAgICAgfCAxNjhNICAgfCAyMDMuMUcgfCA1MTIgICB8IDg3LjkgICAgIHwgOTUuMDcwMyBxcHMgIHxcbiAgfCBDb0F0TmV0NCwgMjFrX2Z0MWsgICAgICAgICAgICAgICAgICB8IDI3NU0gICB8IDM2MC45RyB8IDUxMiAgIHwgODguMSAgICAgfCA3NC42MDIyIHFwcyAgfFxuICB8IENvQXROZXQ0LCAyMWtfZnQxaywgUFQtUkEtRTE1MCAgICAgIHwgMjc1TSAgIHwgMzYwLjlHIHwgNTEyICAgfCA4OC41NiAgICB8IDc0LjYwMjIgcXBzICB8XG4jIyBDb252TmVYdFxuICAtIFtLZXJhcyBDb252TmVYdF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9jb252bmV4dCkgaXMgZm9yIFtQREYgMjIwMS4wMzU0NSBBIENvbnZOZXQgZm9yIHRoZSAyMDIwc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDEuMDM1NDUucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtDb252TmVYdFRpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdGlueV9pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDI4TSAgICB8IDQuNDlHICAgfCAyMjQgICB8IDgyLjEgICAgIHwgMzYxLjU4IHFwcyAgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF90aW55XzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgMjhNICAgIHwgNC40OUcgICB8IDIyNCAgIHwgODIuOSAgICAgfCAzNjEuNTggcXBzICAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdGlueV8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAyOE0gICAgfCAxMy4xOUcgIHwgMzg0ICAgfCA4NC4xICAgICB8IDE4Mi4xMzQgcXBzICB8XG4gIHwgW0NvbnZOZVh0U21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfc21hbGxfaW1hZ2VuZXQuaDUpICAgICAgICAgICB8IDUwTSAgICB8IDguNzNHICAgfCAyMjQgICB8IDgzLjEgICAgIHwgMjAyLjAwNyBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF9zbWFsbF8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDUwTSAgICB8IDguNzNHICAgfCAyMjQgICB8IDg0LjYgICAgIHwgMjAyLjAwNyBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3NtYWxsXzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDUwTSAgICB8IDI1LjY3RyAgfCAzODQgICB8IDg1LjggICAgIHwgMTA4LjEyNSBxcHMgIHxcbiAgfCBbQ29udk5lWHRCYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X2Jhc2VfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgIHwgODlNICAgIHwgMTUuNDJHICB8IDIyNCAgIHwgODMuOCAgICAgfCAxNjAuMDM2IHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF9iYXNlXzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgfCA4OU0gICAgfCA0NS4zMkcgIHwgMzg0ICAgfCA4NS4xICAgICB8IDgzLjMwOTUgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfYmFzZV8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDg5TSAgICB8IDE1LjQyRyAgfCAyMjQgICB8IDg1LjggICAgIHwgMTYwLjAzNiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X2Jhc2VfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgODlNICAgIHwgNDUuMzJHICB8IDM4NCAgIHwgODYuOCAgICAgfCA4My4zMDk1IHFwcyAgfFxuICB8IFtDb252TmVYdExhcmdlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X2xhcmdlXzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgIHwgMTk4TSAgIHwgMzQuNDZHICB8IDIyNCAgIHwgODQuMyAgICAgfCAxMDIuMjcgcXBzICAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF9sYXJnZV8zODRfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgIHwgMTk4TSAgIHwgMTAxLjI4RyB8IDM4NCAgIHwgODUuNSAgICAgfCA0Ny4yMDg2IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X2xhcmdlXzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgMTk4TSAgIHwgMzQuNDZHICB8IDIyNCAgIHwgODYuNiAgICAgfCAxMDIuMjcgcXBzICAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfbGFyZ2VfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgMTk4TSAgIHwgMTAxLjI4RyB8IDM4NCAgIHwgODcuNSAgICAgfCA0Ny4yMDg2IHFwcyAgfFxuICB8IFtDb252TmVYdFhsYXJnZSwgMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfeGxhcmdlXzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgfCAzNTBNICAgfCA2MS4wNkcgIHwgMjI0ICAgfCA4Ny4wICAgICB8IDQwLjU3NzYgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF94bGFyZ2VfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgICAgICB8IDM1ME0gICB8IDE3OS40M0cgfCAzODQgICB8IDg3LjggICAgIHwgMjEuNzk3IHFwcyAgIHxcbiAgfCBbQ29udk5lWHRYWExhcmdlLCBjbGlwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3h4bGFyZ2VfY2xpcC1mdDFrLmg1KSAgIHwgODQ2TSAgIHwgMTk4LjA5RyB8IDI1NiAgIHwgODguNiAgICAgfCAgICAgICAgICAgICAgfFxuIyMgQ29udk5lWHRWMlxuICAtIFtLZXJhcyBDb252TmVYdF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9jb252bmV4dCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMzAxLjAwODA4IENvbnZOZVh0IFYyOiBDby1kZXNpZ25pbmcgYW5kIFNjYWxpbmcgQ29udk5ldHMgd2l0aCBNYXNrZWQgQXV0b2VuY29kZXJzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjMwMS4wMDgwOC5wZGYpLiAqKlBsZWFzZSBub3RlIHRoZSBDQy1CWS1OQyA0LjAgbGljZW5zZSBvbiB0aGVzZXMgd2VpZ2h0cywgbm9uLWNvbW1lcmNpYWwgdXNlIG9ubHkqKi5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbQ29udk5lWHRWMkF0dG9dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdjJfYXR0b19pbWFnZW5ldC5oNSkgICAgICAgICAgfCAzLjdNICAgfCAwLjU1RyAgfCAyMjQgICB8IDc2LjcgICAgIHwgNzA1LjgyMiBxcHMgIHxcbiAgfCBbQ29udk5lWHRWMkZlbXRvXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX2ZlbXRvX2ltYWdlbmV0Lmg1KSAgICAgICAgIHwgNS4yTSAgIHwgMC43OEcgIHwgMjI0ICAgfCA3OC41ICAgICB8IDcyOC4wMiBxcHMgICB8XG4gIHwgW0NvbnZOZVh0VjJQaWNvXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX3BpY29faW1hZ2VuZXQuaDUpICAgICAgICAgIHwgOS4xTSAgIHwgMS4zN0cgIHwgMjI0ICAgfCA4MC4zICAgICB8IDU5MS41MDIgcXBzICB8XG4gIHwgW0NvbnZOZVh0VjJOYW5vXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX25hbm9faW1hZ2VuZXQuaDUpICAgICAgICAgIHwgMTUuNk0gIHwgMi40NUcgIHwgMjI0ICAgfCA4MS45ICAgICB8IDQ3MS45MTggcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdjJfbmFub18yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICB8IDE1LjZNICB8IDIuNDVHICB8IDIyNCAgIHwgODIuMSAgICAgfCA0NzEuOTE4IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdjJfbmFub18zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAxNS42TSAgfCA3LjIxRyAgfCAzODQgICB8IDgzLjQgICAgIHwgMjEzLjgwMiBxcHMgIHxcbiAgfCBbQ29udk5lWHRWMlRpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdjJfdGlueV9pbWFnZW5ldC5oNSkgICAgICAgICAgfCAyOC42TSAgfCA0LjQ3RyAgfCAyMjQgICB8IDgzLjAgICAgIHwgMzAxLjk4MiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml90aW55XzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgMjguNk0gIHwgNC40N0cgIHwgMjI0ICAgfCA4My45ICAgICB8IDMwMS45ODIgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml90aW55XzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDI4LjZNICB8IDEzLjFHICB8IDM4NCAgIHwgODUuMSAgICAgfCAxMzkuNTc4IHFwcyAgfFxuICB8IFtDb252TmVYdFYyQmFzZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml9iYXNlX2ltYWdlbmV0Lmg1KSAgICAgICAgICB8IDg5TSAgICB8IDE1LjRHICB8IDIyNCAgIHwgODQuOSAgICAgfCAxMzIuNTc1IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX2Jhc2VfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgfCA4OU0gICAgfCAxNS40RyAgfCAyMjQgICB8IDg2LjggICAgIHwgMTMyLjU3NSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX2Jhc2VfMzg0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgODlNICAgIHwgNDUuMkcgIHwgMzg0ICAgfCA4Ny43ICAgICB8IDY2LjU3MjkgcXBzICB8XG4gIHwgW0NvbnZOZVh0VjJMYXJnZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml9sYXJnZV9pbWFnZW5ldC5oNSkgICAgICAgICB8IDE5OE0gICB8IDM0LjRHICB8IDIyNCAgIHwgODUuOCAgICAgfCA4Ni44ODQ2IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvbnZuZXh0L2NvbnZuZXh0X3YyX2xhcmdlXzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgMTk4TSAgIHwgMzQuNEcgIHwgMjI0ICAgfCA4Ny4zICAgICB8IDg2Ljg4NDYgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml9sYXJnZV8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgfCAxOThNICAgfCAxMDEuMUcgfCAzODQgICB8IDg4LjIgICAgIHwgMjQuNDU0MiBxcHMgIHxcbiAgfCBbQ29udk5lWHRWMkh1Z2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvY29udm5leHQvY29udm5leHRfdjJfaHVnZV9pbWFnZW5ldC5oNSkgICAgICAgICAgfCA2NjBNICAgfCAxMTVHICAgfCAyMjQgICB8IDg2LjMgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml9odWdlXzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgIHwgNjYwTSAgIHwgMzM3LjlHIHwgMzg0ICAgfCA4OC43ICAgICB8ICAgICAgICAgICAgICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb252bmV4dC9jb252bmV4dF92Ml9odWdlXzUxMl9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDY2ME0gICB8IDYwMC44RyB8IDUxMiAgIHwgODguOSAgICAgfCAgICAgICAgICAgICAgfFxuIyMgQ29UTmV0XG4gIC0gW0tlcmFzIENvVE5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9jb3RuZXQpIGlzIGZvciBbUERGIDIxMDcuMTIyOTIgQ29udGV4dHVhbCBUcmFuc2Zvcm1lciBOZXR3b3JrcyBmb3IgVmlzdWFsIFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNy4xMjI5Mi5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tIHw6LS0tLS0tOnwgLS0tLS0tIHwgLS0tLS0gfDotLS0tLS0tLTp8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0NvdE5ldDUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvdG5ldC9jb3RuZXQ1MF8yMjRfaW1hZ2VuZXQuaDUpICAgICB8IDIyLjJNICB8IDMuMjVHICB8IDIyNCAgIHwgICA4MS4zICAgfCAzMjQuOTEzIHFwcyAgfFxuICB8IFtDb3ROZXRTRTUwRF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb3RuZXQvY290bmV0X3NlNTBkXzIyNF9pbWFnZW5ldC5oNSkgIHwgMjMuMU0gIHwgNC4wNUcgIHwgMjI0ICAgfCAgIDgxLjYgICB8IDUxMy4wNzcgcXBzICB8XG4gIHwgW0NvdE5ldDEwMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9jb3RuZXQvY290bmV0MTAxXzIyNF9pbWFnZW5ldC5oNSkgICAgfCAzOC4zTSAgfCA2LjA3RyAgfCAyMjQgICB8ICAgODIuOCAgIHwgMTgzLjgyNCBxcHMgIHxcbiAgfCBbQ290TmV0U0UxMDFEXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvdG5ldC9jb3RuZXRfc2UxMDFkXzIyNF9pbWFnZW5ldC5oNSkgfCA0MC45TSAgfCA4LjQ0RyAgfCAyMjQgICB8ICAgODMuMiAgIHwgMjUxLjQ4NyBxcHMgIHxcbiAgfCBbQ290TmV0U0UxNTJEXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvdG5ldC9jb3RuZXRfc2UxNTJkXzIyNF9pbWFnZW5ldC5oNSkgfCA1NS44TSAgfCAxMi4yMkcgfCAyMjQgICB8ICAgODQuMCAgIHwgMTc1LjQ2OSBxcHMgIHxcbiAgfCBbQ290TmV0U0UxNTJEXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2NvdG5ldC9jb3RuZXRfc2UxNTJkXzMyMF9pbWFnZW5ldC5oNSkgfCA1NS44TSAgfCAyNC45MkcgfCAzMjAgICB8ICAgODQuNiAgIHwgMTc1LjQ2OSBxcHMgIHxcbiMjIERhVmlUXG4gIC0gW0tlcmFzIERhVmlUXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2Rhdml0KSBpcyBmb3IgW1BERiAyMjA0LjAzNjQ1IERhVmlUOiBEdWFsIEF0dGVudGlvbiBWaXNpb24gVHJhbnNmb3JtZXJzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwNC4wMzY0NS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0RhVmlUX1RdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZGF2aXQvZGF2aXRfdF9pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDI4LjM2TSB8IDQuNTZHICB8IDIyNCAgIHwgODIuOCAgICAgfCAyMjQuNTYzIHFwcyAgfFxuICB8IFtEYVZpVF9TXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2Rhdml0L2Rhdml0X3NfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgfCA0OS43NU0gfCA4LjgzRyAgfCAyMjQgICB8IDg0LjIgICAgIHwgMTQ1LjgzOCBxcHMgIHxcbiAgfCBbRGFWaVRfQl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9kYXZpdC9kYXZpdF9iX2ltYWdlbmV0Lmg1KSAgICAgICAgICAgIHwgODcuOTVNIHwgMTUuNTVHIHwgMjI0ICAgfCA4NC42ICAgICB8IDExNC41MjcgcXBzICB8XG4gIHwgRGFWaVRfTCwgMjFrX2Z0MWsgIHwgMTk2LjhNIHwgMTAzLjJHIHwgMzg0ICAgfCA4Ny41ICAgICB8IDM0LjcwMTUgcXBzICB8XG4gIHwgRGFWaVRfSCwgMS41QiAgICAgIHwgMzQ4LjlNIHwgMzI3LjNHIHwgNTEyICAgfCA5MC4yICAgICB8IDEyLjM2MyBxcHMgICB8XG4gIHwgRGFWaVRfRywgMS41QiAgICAgIHwgMS40MDZCIHwgMS4wMjJUIHwgNTEyICAgfCA5MC40ICAgICB8ICAgICAgICAgICAgICB8XG4jIyBEaU5BVFxuICAtIFtLZXJhcyBEaU5BVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9uYXQpIGlzIGZvciBbUERGIDIyMDkuMTUwMDEgRGlsYXRlZCBOZWlnaGJvcmhvb2QgQXR0ZW50aW9uIFRyYW5zZm9ybWVyXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwOS4xNTAwMS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRGlOQVRfTWluaV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvZGluYXRfbWluaV9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgfCAyMC4wTSAgfCAyLjczRyAgfCAyMjQgICB8IDgxLjggICAgIHwgODMuOTk0MyBxcHMgIHxcbiAgfCBbRGlOQVRfVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvZGluYXRfdGlueV9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgfCAyNy45TSAgfCA0LjM0RyAgfCAyMjQgICB8IDgyLjcgICAgIHwgNjEuMTkwMiBxcHMgIHxcbiAgfCBbRGlOQVRfU21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmF0L2RpbmF0X3NtYWxsX2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgIHwgNTAuN00gIHwgNy44NEcgIHwgMjI0ICAgfCA4My44ICAgICB8IDQxLjAzNDMgcXBzICB8XG4gIHwgW0RpTkFUX0Jhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmF0L2RpbmF0X2Jhc2VfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgIHwgODkuOE0gIHwgMTMuNzZHIHwgMjI0ICAgfCA4NC40ICAgICB8IDMwLjEzMzIgcXBzICB8XG4gIHwgW0RpTkFUX0xhcmdlLCAyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvZGluYXRfbGFyZ2VfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICB8IDIwMC45TSB8IDMwLjU4RyB8IDIyNCAgIHwgODYuNiAgICAgfCAxOC40OTM2IHFwcyAgfFxuICB8IC0gWzIxaywgKG51bV9jbGFzc2VzPTIxODQxKV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvZGluYXRfbGFyZ2VfaW1hZ2VuZXQyMWsuaDUpICAgfCAyMDAuOU0gfCAzMC41OEcgfCAyMjQgICB8ICAgICAgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL25hdC9kaW5hdF9sYXJnZV8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICAgICAgIHwgMjAwLjlNIHwgODkuODZHIHwgMzg0ICAgfCA4Ny40ICAgICB8ICAgICAgICAgICAgICB8XG4gIHwgW0RpTkFUX0xhcmdlX0sxMSwgMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmF0L2RpbmF0X2xhcmdlX2sxMV9pbWFnZW5ldDIxay1mdDFrLmg1KSB8IDIwMS4xTSB8IDkyLjU3RyB8IDM4NCAgIHwgODcuNSAgICAgfCAgICAgICAgICAgICAgfFxuIyMgRElOT3YyXG4gIC0gW0tlcmFzIERJTk92Ml0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9iZWl0KSBpbmNsdWRlcyBtb2RlbHMgZnJvbSBbUERGIDIzMDQuMDcxOTMgRElOT3YyOiBMZWFybmluZyBSb2J1c3QgVmlzdWFsIEZlYXR1cmVzIHdpdGhvdXQgU3VwZXJ2aXNpb25dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMzA0LjA3MTkzLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgfCBQYXJhbXMgIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0RJTk92Ml9WaVRfU21hbGwxNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2Rpbm92Ml92aXRfc21hbGwxNF81MThfaW1hZ2VuZXQuaDUpIHwgMjIuODNNICB8IDQ3LjIzRyAgfCA1MTggICB8IDgxLjEgICAgIHwgMTY1LjI3MSBxcHMgIHxcbiAgfCBbRElOT3YyX1ZpVF9CYXNlMTRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9kaW5vdjJfdml0X2Jhc2UxNF81MThfaW1hZ2VuZXQuaDUpICB8IDg4LjEyTSAgfCAxNTIuNkcgIHwgNTE4ICAgfCA4NC41ICAgICB8IDU0Ljk3NjkgcXBzICB8XG4gIHwgW0RJTk92Ml9WaVRfTGFyZ2UxNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2Rpbm92Ml92aXRfbGFyZ2UxNF81MThfaW1hZ2VuZXQuaDUpIHwgMzA2LjRNICB8IDUwOS42RyAgfCA1MTggICB8IDg2LjMgICAgIHwgMTcuNDEwOCBxcHMgIHxcbiAgfCBbRElOT3YyX1ZpVF9HaWFudDE0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZGlub3YyX3ZpdF9naWFudDE0XzUxOF9pbWFnZW5ldC5oNSkgfCAxMTM5LjZNIHwgMTc5MC4zRyB8IDUxOCAgIHwgODYuNSAgICAgfCAgICAgICAgICAgICAgfFxuIyMgRWRnZU5lWHRcbiAgLSBbS2VyYXMgRWRnZU5lWHRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZWRnZW5leHQpIGlzIGZvciBbUERGIDIyMDYuMTA1ODkgRWRnZU5lWHQ6IEVmZmljaWVudGx5IEFtYWxnYW1hdGVkIENOTi1UcmFuc2Zvcm1lciBBcmNoaXRlY3R1cmUgZm9yIE1vYmlsZSBWaXNpb24gQXBwbGljYXRpb25zXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwNi4xMDU4OS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtFZGdlTmVYdF9YWF9TbWFsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZGdlbmV4dC9lZGdlbmV4dF94eF9zbWFsbF8yNTZfaW1hZ2VuZXQuaDUpIHwgMS4zM00gIHwgMjY2TSAgIHwgMjU2ICAgfCA3MS4yMyAgICB8IDg5Ny45NjYgcXBzICB8XG4gIHwgW0VkZ2VOZVh0X1hfU21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWRnZW5leHQvZWRnZW5leHRfeF9zbWFsbF8yNTZfaW1hZ2VuZXQuaDUpICB8IDIuMzRNICB8IDU0N00gICB8IDI1NiAgIHwgNzQuOTYgICAgfCA2MTQuNjU3IHFwcyAgfFxuICB8IFtFZGdlTmVYdF9TbWFsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZGdlbmV4dC9lZGdlbmV4dF9zbWFsbF8yNTZfaW1hZ2VuZXQuaDUpICAgIHwgNS41OU0gIHwgMS4yN0cgIHwgMjU2ICAgfCA3OS40MSAgICB8IDU2NC40MjUgcXBzICB8XG4gIHwgLSBbdXNpXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VkZ2VuZXh0L2VkZ2VuZXh0X3NtYWxsXzI1Nl91c2kuaDUpICAgICAgICAgICAgIHwgNS41OU0gIHwgMS4yN0cgIHwgMjU2ICAgfCA4MS4wNyAgICB8IDU2NC40MjUgcXBzICB8XG4jIyBFZmZpY2llbnRGb3JtZXJcbiAgLSBbS2VyYXMgRWZmaWNpZW50Rm9ybWVyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2VmZmljaWVudGZvcm1lcikgaXMgZm9yIFtQREYgMjIwNi4wMTE5MSBFZmZpY2llbnRGb3JtZXI6IFZpc2lvbiBUcmFuc2Zvcm1lcnMgYXQgTW9iaWxlTmV0IFNwZWVkXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwNi4wMTE5MS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRWZmaWNpZW50Rm9ybWVyTDEsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbGV2aXQvZWZmaWNpZW50Zm9ybWVyX2wxXzIyNF9pbWFnZW5ldC5oNSkgfCAxMi4zTSAgfCAxLjMxRyB8IDIyNCAgIHwgNzkuMiAgICAgfCAxMTUzLjA5IHFwcyAgfFxuICB8IFtFZmZpY2llbnRGb3JtZXJMMywgZGlzdGlsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9sZXZpdC9lZmZpY2llbnRmb3JtZXJfbDNfMjI0X2ltYWdlbmV0Lmg1KSB8IDMxLjRNICB8IDMuOTVHIHwgMjI0ICAgfCA4Mi40ICAgICB8IDQ4OC40MTkgcXBzICB8XG4gIHwgW0VmZmljaWVudEZvcm1lckw3LCBkaXN0aWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2xldml0L2VmZmljaWVudGZvcm1lcl9sN18yMjRfaW1hZ2VuZXQuaDUpIHwgNzQuNE0gIHwgOS43OUcgfCAyMjQgICB8IDgzLjMgICAgIHwgMjAyLjMyOSBxcHMgIHxcbiMjIEVmZmljaWVudEZvcm1lclYyXG4gIC0gW0tlcmFzIEVmZmljaWVudEZvcm1lcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9lZmZpY2llbnRmb3JtZXIpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMjIxMi4wODA1OSBSZXRoaW5raW5nIFZpc2lvbiBUcmFuc2Zvcm1lcnMgZm9yIE1vYmlsZU5ldCBTaXplIGFuZCBTcGVlZF0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMTIuMDgwNTkucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0VmZmljaWVudEZvcm1lclYyUzAsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50Zm9ybWVyL2VmZmljaWVudGZvcm1lcl92Ml9zMF8yMjRfaW1hZ2VuZXQuaDUpIHwgMy42ME0gIHwgNDA1LjJNIHwgMjI0ICAgfCA3Ni4yICAgICB8IDExMTQuMzggcXBzICB8XG4gIHwgW0VmZmljaWVudEZvcm1lclYyUzEsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50Zm9ybWVyL2VmZmljaWVudGZvcm1lcl92Ml9zMV8yMjRfaW1hZ2VuZXQuaDUpIHwgNi4xOU0gIHwgNjY1LjZNIHwgMjI0ICAgfCA3OS43ICAgICB8IDg0MS4xODYgcXBzICB8XG4gIHwgW0VmZmljaWVudEZvcm1lclYyUzIsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50Zm9ybWVyL2VmZmljaWVudGZvcm1lcl92Ml9zMl8yMjRfaW1hZ2VuZXQuaDUpIHwgMTIuN00gIHwgMS4yN0cgIHwgMjI0ICAgfCA4Mi4wICAgICB8IDU3My45IHFwcyAgICB8XG4gIHwgW0VmZmljaWVudEZvcm1lclYyTCwgZGlzdGlsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnRmb3JtZXIvZWZmaWNpZW50Zm9ybWVyX3YyX2xfMjI0X2ltYWdlbmV0Lmg1KSAgfCAyNi4zTSAgfCAyLjU5RyAgfCAyMjQgICB8IDgzLjUgICAgIHwgMzc3LjIyNCBxcHMgIHxcbiMjIEVmZmljaWVudE5ldFxuICAtIFtLZXJhcyBFZmZpY2llbnROZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZWZmaWNpZW50bmV0KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDE5MTEuMDQyNTIgU2VsZi10cmFpbmluZyB3aXRoIE5vaXN5IFN0dWRlbnQgaW1wcm92ZXMgSW1hZ2VOZXQgY2xhc3NpZmljYXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xOTExLjA0MjUyLnBkZikuXG5cbiAgfCBWMSBNb2RlbCAgICAgICAgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtFZmZpY2llbnROZXRWMUIwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iMC1pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICB8IDUuM00gICB8IDAuMzlHICAgfCAyMjQgICB8IDc3LjYgICAgIHwgMTEyOS45MyBxcHMgIHxcbiAgfCAtIFtOb2lzeVN0dWRlbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2MV9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYxLWIwLW5vaXN5X3N0dWRlbnQuaDUpICAgICAgICAgICAgICAgICB8IDUuM00gICB8IDAuMzlHICAgfCAyMjQgICB8IDc4LjggICAgIHwgMTEyOS45MyBxcHMgIHxcbiAgfCBbRWZmaWNpZW50TmV0VjFCMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtYjEtaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgfCA3LjhNICAgfCAwLjcwRyAgIHwgMjQwICAgfCA3OS42ICAgICB8IDc1OC42MzkgcXBzICB8XG4gIHwgLSBbTm9pc3lTdHVkZW50XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iMS1ub2lzeV9zdHVkZW50Lmg1KSAgICAgICAgICAgICAgICAgfCA3LjhNICAgfCAwLjcwRyAgIHwgMjQwICAgfCA4MS41ICAgICB8IDc1OC42MzkgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYxQjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2MV9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYxLWIyLWltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgIHwgOS4xTSAgIHwgMS4wMUcgICB8IDI2MCAgIHwgODAuNSAgICAgfCA2NjguOTU5IHFwcyAgfFxuICB8IC0gW05vaXN5U3R1ZGVudF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtYjItbm9pc3lfc3R1ZGVudC5oNSkgICAgICAgICAgICAgICAgIHwgOS4xTSAgIHwgMS4wMUcgICB8IDI2MCAgIHwgODIuNCAgICAgfCA2NjguOTU5IHFwcyAgfFxuICB8IFtFZmZpY2llbnROZXRWMUIzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iMy1pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICB8IDEyLjJNICB8IDEuODZHICAgfCAzMDAgICB8IDgxLjkgICAgIHwgNDczLjYwNyBxcHMgIHxcbiAgfCAtIFtOb2lzeVN0dWRlbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2MV9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYxLWIzLW5vaXN5X3N0dWRlbnQuaDUpICAgICAgICAgICAgICAgICB8IDEyLjJNICB8IDEuODZHICAgfCAzMDAgICB8IDg0LjEgICAgIHwgNDczLjYwNyBxcHMgIHxcbiAgfCBbRWZmaWNpZW50TmV0VjFCNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtYjQtaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgfCAxOS4zTSAgfCA0LjQ2RyAgIHwgMzgwICAgfCA4My4zICAgICB8IDI2NS4yNDQgcXBzICB8XG4gIHwgLSBbTm9pc3lTdHVkZW50XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iNC1ub2lzeV9zdHVkZW50Lmg1KSAgICAgICAgICAgICAgICAgfCAxOS4zTSAgfCA0LjQ2RyAgIHwgMzgwICAgfCA4NS4zICAgICB8IDI2NS4yNDQgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYxQjVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2MV9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYxLWI1LWltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgIHwgMzAuNE0gIHwgMTAuNDBHICB8IDQ1NiAgIHwgODQuMyAgICAgfCAxNDYuNzU4IHFwcyAgfFxuICB8IC0gW05vaXN5U3R1ZGVudF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtYjUtbm9pc3lfc3R1ZGVudC5oNSkgICAgICAgICAgICAgICAgIHwgMzAuNE0gIHwgMTAuNDBHICB8IDQ1NiAgIHwgODYuMSAgICAgfCAxNDYuNzU4IHFwcyAgfFxuICB8IFtFZmZpY2llbnROZXRWMUI2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iNi1pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICB8IDQzLjBNICB8IDE5LjI5RyAgfCA1MjggICB8IDg0LjggICAgIHwgODguMDM2OSBxcHMgIHxcbiAgfCAtIFtOb2lzeVN0dWRlbnRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2MV9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYxLWI2LW5vaXN5X3N0dWRlbnQuaDUpICAgICAgICAgICAgICAgICB8IDQzLjBNICB8IDE5LjI5RyAgfCA1MjggICB8IDg2LjQgICAgIHwgODguMDM2OSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50TmV0VjFCN10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtYjctaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgfCA2Ni4zTSAgfCAzOC4xM0cgIHwgNjAwICAgfCA4NS4yICAgICB8IDUyLjY2MTYgcXBzICB8XG4gIHwgLSBbTm9pc3lTdHVkZW50XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djFfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2MS1iNy1ub2lzeV9zdHVkZW50Lmg1KSAgICAgICAgICAgICAgICAgfCA2Ni4zTSAgfCAzOC4xM0cgIHwgNjAwICAgfCA4Ni45ICAgICB8IDUyLjY2MTYgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYxTDIsIE5vaXN5U3R1ZGVudF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYxX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djEtbDItbm9pc3lfc3R1ZGVudC5oNSkgfCA0ODAuM00gfCA0NzcuOThHIHwgODAwICAgfCA4OC40ICAgICB8ICAgICAgICAgICAgICB8XG4jIyBFZmZpY2llbnROZXRWMlxuICAtIFtLZXJhcyBFZmZpY2llbnROZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZWZmaWNpZW50bmV0KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDIxMDQuMDAyOTggRWZmaWNpZW50TmV0VjI6IFNtYWxsZXIgTW9kZWxzIGFuZCBGYXN0ZXIgVHJhaW5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8yMTA0LjAwMjk4KS5cblxuICB8IFYyIE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRWZmaWNpZW50TmV0VjJCMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItYjAtaW1hZ2VuZXQuaDUpICAgICAgICAgICB8IDcuMU0gICB8IDAuNzJHICB8IDIyNCAgIHwgNzguNyAgICAgfCAxMTA5Ljg0IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1iMC0yMWstZnQxay5oNSkgICAgICAgICB8IDcuMU0gICB8IDAuNzJHICB8IDIyNCAgIHwgNzcuNTU/ICAgfCAxMTA5Ljg0IHFwcyAgfFxuICB8IFtFZmZpY2llbnROZXRWMkIxXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1iMS1pbWFnZW5ldC5oNSkgICAgICAgICAgIHwgOC4xTSAgIHwgMS4yMUcgIHwgMjQwICAgfCA3OS44ICAgICB8IDg0Mi4zNzIgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2Ml9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYyLWIxLTIxay1mdDFrLmg1KSAgICAgICAgIHwgOC4xTSAgIHwgMS4yMUcgIHwgMjQwICAgfCA3OS4wMz8gICB8IDg0Mi4zNzIgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYyQjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2Ml9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYyLWIyLWltYWdlbmV0Lmg1KSAgICAgICAgICAgfCAxMC4xTSAgfCAxLjcxRyAgfCAyNjAgICB8IDgwLjUgICAgIHwgNzYyLjg2NSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItYjItMjFrLWZ0MWsuaDUpICAgICAgICAgfCAxMC4xTSAgfCAxLjcxRyAgfCAyNjAgICB8IDc5LjQ4PyAgIHwgNzYyLjg2NSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50TmV0VjJCM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItYjMtaW1hZ2VuZXQuaDUpICAgICAgICAgICB8IDE0LjRNICB8IDMuMDNHICB8IDMwMCAgIHwgODIuMSAgICAgfCA1NDguNTAxIHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1iMy0yMWstZnQxay5oNSkgICAgICAgICB8IDE0LjRNICB8IDMuMDNHICB8IDMwMCAgIHwgODIuNDY/ICAgfCA1NDguNTAxIHFwcyAgfFxuICB8IFtFZmZpY2llbnROZXRWMlRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2VmZmljaWVudG5ldF92Mi9yZWxlYXNlcy9kb3dubG9hZC9lZmZuZXR2Ml9wcmV0cmFpbmVkL2VmZmljaWVudG5ldHYyLXQtaW1hZ2VuZXQuaDUpICAgICAgICAgICAgfCAxMy42TSAgfCAzLjE4RyAgfCAyODggICB8IDgyLjM0ICAgIHwgNDk2LjQ4MyBxcHMgIHxcbiAgfCBbRWZmaWNpZW50TmV0VjJUX0dDXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi10LWdjLWltYWdlbmV0Lmg1KSAgICAgICAgIHwgMTMuN00gIHwgMy4xOUcgIHwgMjg4ICAgfCA4Mi40NiAgICB8IDM2OC43NjMgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYyU10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItcy1pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDIxLjVNICB8IDguNDFHICB8IDM4NCAgIHwgODMuOSAgICAgfCAzNDQuMTA5IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1zLTIxay1mdDFrLmg1KSAgICAgICAgIHwgMjEuNU0gIHwgOC40MUcgIHwgMzg0ICAgfCA4NC45ICAgICB8IDM0NC4xMDkgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYyTV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItbS1pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDU0LjFNICB8IDI0LjY5RyB8IDQ4MCAgIHwgODUuMiAgICAgfCAxNDUuMzQ2IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1tLTIxay1mdDFrLmg1KSAgICAgICAgIHwgNTQuMU0gIHwgMjQuNjlHIHwgNDgwICAgfCA4Ni4yICAgICB8IDE0NS4zNDYgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYyTF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfZWZmaWNpZW50bmV0X3YyL3JlbGVhc2VzL2Rvd25sb2FkL2VmZm5ldHYyX3ByZXRyYWluZWQvZWZmaWNpZW50bmV0djItbC1pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDExOS41TSB8IDU2LjI3RyB8IDQ4MCAgIHwgODUuNyAgICAgfCA4NS42NTE0IHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi1sLTIxay1mdDFrLmg1KSAgICAgICAgIHwgMTE5LjVNIHwgNTYuMjdHIHwgNDgwICAgfCA4Ni45ICAgICB8IDg1LjY1MTQgcXBzICB8XG4gIHwgW0VmZmljaWVudE5ldFYyWEwsIDIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19lZmZpY2llbnRuZXRfdjIvcmVsZWFzZXMvZG93bmxvYWQvZWZmbmV0djJfcHJldHJhaW5lZC9lZmZpY2llbnRuZXR2Mi14bC0yMWstZnQxay5oNSkgfCAyMDYuOE0gfCA5My42NkcgfCA1MTIgICB8IDg3LjIgICAgIHwgNTUuMTQxIHFwcyAgIHxcbiMjIEVmZmljaWVudFZpVF9CXG4gIC0gW0tlcmFzIEVmZmljaWVudFZpVF9CXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2VmZmljaWVudHZpdCkgaXMgZm9yIFBhcGVyIFtQREYgMjIwNS4xNDc1NiBFZmZpY2llbnRWaVQ6IExpZ2h0d2VpZ2h0IE11bHRpLVNjYWxlIEF0dGVudGlvbiBmb3IgT24tRGV2aWNlIFNlbWFudGljIFNlZ21lbnRhdGlvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDUuMTQ3NTYucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRWZmaWNpZW50VmlUX0IxXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfYjFfMjI0X2ltYWdlbmV0Lmg1KSB8IDkuMTBNICB8IDAuNThHIHwgMjI0ICAgfCA3OS40ICAgICB8IDk0My41ODcgcXBzICB8XG4gIHwgLSBbMjU2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfYjFfMjU2X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgfCA5LjEwTSAgfCAwLjc4RyB8IDI1NiAgIHwgNzkuOSAgICAgfCA4NDAuODQ0IHFwcyAgfFxuICB8IC0gWzI4OF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnR2aXQvZWZmaWNpZW50dml0X2IxXzI4OF9pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDkuMTBNICB8IDEuMDNHIHwgMjg4ICAgfCA4MC40ICAgICB8IDk0My41ODcgcXBzICB8XG4gIHwgW0VmZmljaWVudFZpVF9CMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnR2aXQvZWZmaWNpZW50dml0X2IyXzIyNF9pbWFnZW5ldC5oNSkgfCAyNC4zM00gfCAxLjY4RyB8IDIyNCAgIHwgODIuMSAgICAgfCA1ODMuMjk1IHFwcyAgfFxuICB8IC0gWzI1Nl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnR2aXQvZWZmaWNpZW50dml0X2IyXzI1Nl9pbWFnZW5ldC5oNSkgICAgICAgICAgICB8IDI0LjMzTSB8IDIuMjVHIHwgMjU2ICAgfCA4Mi43ICAgICB8IDUwNy4xODcgcXBzICB8XG4gIHwgLSBbMjg4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfYjJfMjg4X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgIHwgMjQuMzNNIHwgMi45MkcgfCAyODggICB8IDgzLjEgICAgIHwgNTgzLjI5NSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50VmlUX0IzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfYjNfMjI0X2ltYWdlbmV0Lmg1KSB8IDQ4LjY1TSB8IDQuMTRHIHwgMjI0ICAgfCA4My41ICAgICB8IDMyOS43NjQgcXBzICB8XG4gIHwgLSBbMjU2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfYjNfMjU2X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgIHwgNDguNjVNIHwgNS41MUcgfCAyNTYgICB8IDgzLjggICAgIHwgMjg4LjYwNSBxcHMgIHxcbiAgfCAtIFsyODhdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50dml0L2VmZmljaWVudHZpdF9iM18yODhfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgfCA0OC42NU0gfCA3LjE0RyB8IDI4OCAgIHwgODQuMiAgICAgfCAzMjkuNzY0IHFwcyAgfFxuIyMgRWZmaWNpZW50VmlUX01cbiAgLSBbS2VyYXMgRWZmaWNpZW50VmlUX01dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZWZmaWNpZW50dml0KSBpcyBmb3IgUGFwZXIgW1BERiAyMzA1LjA3MDI3IEVmZmljaWVudFZpVDogTWVtb3J5IEVmZmljaWVudCBWaXNpb24gVHJhbnNmb3JtZXIgd2l0aCBDYXNjYWRlZCBHcm91cCBBdHRlbnRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMzA1LjA3MDI3LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0VmZmljaWVudFZpVF9NMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnR2aXQvZWZmaWNpZW50dml0X20wXzIyNF9pbWFnZW5ldC5oNSkgfCAyLjM1TSAgfCA3OS40TSB8IDIyNCAgIHwgNjMuMiAgICAgfCA3NDkuODg4IHFwcyAgfFxuICB8IFtFZmZpY2llbnRWaVRfTTFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50dml0L2VmZmljaWVudHZpdF9tMV8yMjRfaW1hZ2VuZXQuaDUpIHwgMi45OE0gIHwgMTY3TSAgfCAyMjQgICB8IDY4LjQgICAgIHwgOTQ4LjA0MSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50VmlUX00yXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfbTJfMjI0X2ltYWdlbmV0Lmg1KSB8IDQuMTlNICB8IDIwMU0gIHwgMjI0ICAgfCA3MC44ICAgICB8IDkwNi4yODYgcXBzICB8XG4gIHwgW0VmZmljaWVudFZpVF9NM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnR2aXQvZWZmaWNpZW50dml0X20zXzIyNF9pbWFnZW5ldC5oNSkgfCA2LjkwTSAgfCAyNjNNICB8IDIyNCAgIHwgNzMuNCAgICAgfCA3NTguMDg2IHFwcyAgfFxuICB8IFtFZmZpY2llbnRWaVRfTTRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50dml0L2VmZmljaWVudHZpdF9tNF8yMjRfaW1hZ2VuZXQuaDUpIHwgOC44ME0gIHwgMjk5TSAgfCAyMjQgICB8IDc0LjMgICAgIHwgNjcyLjg5MSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50VmlUX001XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudHZpdC9lZmZpY2llbnR2aXRfbTVfMjI0X2ltYWdlbmV0Lmg1KSB8IDEyLjQ3TSB8IDUyMk0gIHwgMjI0ICAgfCA3Ny4xICAgICB8IDU3Ny4yNTQgcXBzICB8XG4jIyBFVkFcbiAgLSBbS2VyYXMgRVZBXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2JlaXQpIGluY2x1ZGVzIG1vZGVscyBmcm9tIFtQREYgMjIxMS4wNzYzNiBFVkE6IEV4cGxvcmluZyB0aGUgTGltaXRzIG9mIE1hc2tlZCBWaXN1YWwgUmVwcmVzZW50YXRpb24gTGVhcm5pbmcgYXQgU2NhbGVdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMjExLjA3NjM2LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgICAgfCBQYXJhbXMgIHwgRkxPUHMgICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRXZhTGFyZ2VQYXRjaDE0LCAyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2V2YV9sYXJnZV9wYXRjaDE0XzE5Nl9pbWFnZW5ldDIxay1mdDFrLmg1KSAgfCAzMDQuMTRNIHwgNjEuNjVHICAgfCAxOTYgICB8IDg4LjU5ICAgIHwgMTE1LjUzMiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzM2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZXZhX2xhcmdlX3BhdGNoMTRfMzM2X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICAgICAgICAgfCAzMDQuNTNNIHwgMTkxLjU1RyAgfCAzMzYgICB8IDg5LjIwICAgIHwgNTMuMzQ2NyBxcHMgIHxcbiAgfCBbRXZhR2lhbnRQYXRjaDE0LCBjbGlwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZXZhX2dpYW50X3BhdGNoMTRfMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpIHwgMTAxMi42TSB8IDI2Ny40MEcgIHwgMjI0ICAgfCA4OS4xMCAgICB8ICAgICAgICAgICAgICB8XG4gIHwgLSBbbTMwbV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2V2YV9naWFudF9wYXRjaDE0XzMzNl9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgICAgICAgICAgICB8IDEwMTMuME0gfCA2MjEuNDVHICB8IDMzNiAgIHwgODkuNTcgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gW20zMG1dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9ldmFfZ2lhbnRfcGF0Y2gxNF81NjBfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICAgICAgICAgICAgfCAxMDE0LjRNIHwgMTkxMS42MUcgfCA1NjAgICB8IDg5LjgwICAgIHwgICAgICAgICAgICAgIHxcbiMjIEVWQTAyXG4gIC0gW0tlcmFzIEVWQTAyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2JlaXQpIGluY2x1ZGVzIG1vZGVscyBmcm9tIFtQREYgMjMwMy4xMTMzMSBFVkE6IEVWQS0wMjogQSBWaXN1YWwgUmVwcmVzZW50YXRpb24gZm9yIE5lb24gR2VuZXNpc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIzMDMuMTEzMzEucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zICB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0VWQTAyVGlueVBhdGNoMTQsIG1pbV9pbjIya19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZXZhMDJfdGlueV9wYXRjaDE0XzMzNl9taW1faW4yMmtfZnQxay5oNSkgICAgICAgfCA1Ljc2TSAgIHwgNC43MkcgICB8IDMzNiAgIHwgODAuNjU4ICAgfCAzMjAuMTIzIHFwcyAgfFxuICB8IFtFVkEwMlNtYWxsUGF0Y2gxNCwgbWltX2luMjJrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvYmVpdC9ldmEwMl9zbWFsbF9wYXRjaDE0XzMzNl9taW1faW4yMmtfZnQxay5oNSkgICAgICB8IDIyLjEzTSAgfCAxNS41N0cgIHwgMzM2ICAgfCA4NS43NCAgICB8IDE2MS43NzQgcXBzICB8XG4gIHwgW0VWQTAyQmFzZVBhdGNoMTQsIG1pbV9pbjIya19mdDIya19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZXZhMDJfYmFzZV9wYXRjaDE0XzQ0OF9taW1faW4yMmtfZnQyMmtfZnQxay5oNSkgfCA4Ny4xMk0gIHwgMTA3LjZHICB8IDQ0OCAgIHwgODguNjkyICAgfCAzNC4zOTYyIHFwcyAgfFxuICB8IFtFVkEwMkxhcmdlUGF0Y2gxNCwgbWltX20zOG1fZnQyMmtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2V2YTAyX2xhcmdlX3BhdGNoMTRfNDQ4X21pbV9tMzhtX2Z0MjJrX2Z0MWsuaDUpIHwgMzA1LjA4TSB8IDM2My42OEcgfCA0NDggICB8IDkwLjA1NCAgIHwgICAgICAgICAgICAgIHxcbiMjIEZhc3Rlck5ldFxuICAtIFtLZXJhcyBGYXN0ZXJOZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZmFzdGVybmV0KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDIzMDMuMDM2NjcgUnVuLCBEb27igJl0IFdhbGs6IENoYXNpbmcgSGlnaGVyIEZMT1BTIGZvciBGYXN0ZXIgTmV1cmFsIE5ldHdvcmtzIF0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIzMDMuMDM2NjcucGRmKS5cblxuICB8IE1vZGVsICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRmFzdGVyTmV0VDBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVybmV0L2Zhc3Rlcm5ldF90MF9pbWFnZW5ldC5oNSkgfCAzLjlNICAgfCAwLjM0RyAgfCAyMjQgICB8IDcxLjkgICAgIHwgMTg5MC44MyBxcHMgIHxcbiAgfCBbRmFzdGVyTmV0VDFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVybmV0L2Zhc3Rlcm5ldF90MV9pbWFnZW5ldC5oNSkgfCA3LjZNICAgfCAwLjg1RyAgfCAyMjQgICB8IDc2LjIgICAgIHwgMTc4OC4xNiBxcHMgIHxcbiAgfCBbRmFzdGVyTmV0VDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVybmV0L2Zhc3Rlcm5ldF90Ml9pbWFnZW5ldC5oNSkgfCAxNS4wTSAgfCAxLjkwRyAgfCAyMjQgICB8IDc4LjkgICAgIHwgMTM1My4xMiBxcHMgIHxcbiAgfCBbRmFzdGVyTmV0U10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9mYXN0ZXJuZXQvZmFzdGVybmV0X3NfaW1hZ2VuZXQuaDUpICB8IDMxLjFNICB8IDQuNTVHICB8IDIyNCAgIHwgODEuMyAgICAgfCA4MTguODE0IHFwcyAgfFxuICB8IFtGYXN0ZXJOZXRNXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2Zhc3Rlcm5ldC9mYXN0ZXJuZXRfbV9pbWFnZW5ldC5oNSkgIHwgNTMuNU0gIHwgOC43MkcgIHwgMjI0ICAgfCA4My4wICAgICB8IDQzNi4zODMgcXBzICB8XG4gIHwgW0Zhc3Rlck5ldExdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVybmV0L2Zhc3Rlcm5ldF9sX2ltYWdlbmV0Lmg1KSAgfCA5My40TSAgfCAxNS40OUcgfCAyMjQgICB8IDgzLjUgICAgIHwgMzE5LjgwOSBxcHMgIHxcbiMjIEZhc3RlclZpVFxuICAtIFtLZXJhcyBGYXN0ZXJWaVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZmFzdGVydml0KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDIzMDYuMDYxODkgRmFzdGVyVmlUOiBGYXN0IFZpc2lvbiBUcmFuc2Zvcm1lcnMgd2l0aCBIaWVyYXJjaGljYWwgQXR0ZW50aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjMwNi4wNjE4OS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICB8IFBhcmFtcyAgIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbRmFzdGVyVmlUMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9mYXN0ZXJ2aXQvZmFzdGVydml0XzBfMjI0X2ltYWdlbmV0Lmg1KSB8IDMxLjQwTSAgIHwgMy41MUcgICB8IDIyNCAgIHwgODIuMSAgICAgfCA3MTYuODA5IHFwcyAgfFxuICB8IFtGYXN0ZXJWaVQxXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2Zhc3RlcnZpdC9mYXN0ZXJ2aXRfMV8yMjRfaW1hZ2VuZXQuaDUpIHwgNTMuMzdNICAgfCA1LjUyRyAgIHwgMjI0ICAgfCA4My4yICAgICB8IDQ5MS45NzEgcXBzICB8XG4gIHwgW0Zhc3RlclZpVDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVydml0L2Zhc3RlcnZpdF8yXzIyNF9pbWFnZW5ldC5oNSkgfCA3NS45Mk0gICB8IDkuMDBHICAgfCAyMjQgICB8IDg0LjIgICAgIHwgMzc3LjAwNiBxcHMgIHxcbiAgfCBbRmFzdGVyVmlUM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9mYXN0ZXJ2aXQvZmFzdGVydml0XzNfMjI0X2ltYWdlbmV0Lmg1KSB8IDE1OS41NU0gIHwgMTguNzVHICB8IDIyNCAgIHwgODQuOSAgICAgfCAyMTYuNDgxIHFwcyAgfFxuICB8IFtGYXN0ZXJWaVQ0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2Zhc3RlcnZpdC9mYXN0ZXJ2aXRfNF8yMjRfaW1hZ2VuZXQuaDUpIHwgMzUxLjEyTSAgfCA0MS41N0cgIHwgMjI0ICAgfCA4NS40ICAgICB8IDcxLjYzMDMgcXBzICB8XG4gIHwgW0Zhc3RlclZpVDVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZmFzdGVydml0L2Zhc3RlcnZpdF81XzIyNF9pbWFnZW5ldC5oNSkgfCA5NTcuNTJNICB8IDExNC4wOEcgfCAyMjQgICB8IDg1LjYgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbRmFzdGVyVmlUNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9mYXN0ZXJ2aXQvZmFzdGVydml0XzZfMjI0X2ltYWdlbmV0LjEuaDUpLCBbKy4yXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2Zhc3RlcnZpdC9mYXN0ZXJ2aXRfNl8yMjRfaW1hZ2VuZXQuMi5oNSkgfCAxMzYwLjMzTSB8IDE0NC4xM0cgfCAyMjQgICB8IDg1LjggICAgIHwgICAgICAgICAgICAgIHxcbiMjIEZCTmV0VjNcbiAgLSBbS2VyYXMgRkJOZXRWM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tb2JpbGVuZXR2M19mYW1pbHkjZmJuZXR2MykgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMDA2LjAyMDQ5IEZCTmV0VjM6IEpvaW50IEFyY2hpdGVjdHVyZS1SZWNpcGUgU2VhcmNoIHVzaW5nIFByZWRpY3RvciBQcmV0cmFpbmluZ10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIwMDYuMDIwNDkucGRmKS5cblxuICB8IE1vZGVsICAgIHwgUGFyYW1zIHwgRkxPUHMgICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0ZCTmV0VjNCXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9mYm5ldHYzX2JfaW1hZ2VuZXQuaDUpIHwgNS41N00gIHwgNTM5LjgyTSAgfCAyNTYgICB8IDc5LjE1ICAgIHwgNzEzLjg4MiBxcHMgIHxcbiAgfCBbRkJOZXRWM0RdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L2ZibmV0djNfZF9pbWFnZW5ldC5oNSkgfCAxMC4zMU0gfCA2NjUuMDJNICB8IDI1NiAgIHwgNzkuNjggICAgfCA2MzUuOTYzIHFwcyAgfFxuICB8IFtGQk5ldFYzR10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGVuZXR2M19mYW1pbHkvZmJuZXR2M19nX2ltYWdlbmV0Lmg1KSB8IDE2LjYyTSB8IDEzNzkuMzBNIHwgMjU2ICAgfCA4Mi4wNSAgICB8IDQ3OC44MzUgcXBzICB8XG4jIyBGbGV4aVZpVFxuICAtIFtLZXJhcyBGbGV4aVZpVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9iZWl0KSBpbmNsdWRlcyBtb2RlbHMgZnJvbSBbUERGIDIyMTIuMDgwMTMgRmxleGlWaVQ6IE9uZSBNb2RlbCBmb3IgQWxsIFBhdGNoIFNpemVzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIxMi4wODAxMy5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICB8IFBhcmFtcyAgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtGbGV4aVZpVFNtYWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZmxleGl2aXRfc21hbGxfMjQwX2ltYWdlbmV0Lmg1KSB8IDIyLjA2TSAgfCA1LjM2RyAgfCAyNDAgICB8IDgyLjUzICAgIHwgNzQ0LjU3OCBxcHMgIHxcbiAgfCBbRmxleGlWaVRCYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2JlaXQvZmxleGl2aXRfYmFzZV8yNDBfaW1hZ2VuZXQuaDUpICB8IDg2LjU5TSAgfCAyMC4zM0cgfCAyNDAgICB8IDg0LjY2ICAgIHwgMzAxLjk0OCBxcHMgIHxcbiAgfCBbRmxleGlWaVRMYXJnZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9iZWl0L2ZsZXhpdml0X2xhcmdlXzI0MF9pbWFnZW5ldC5oNSkgfCAzMDQuNDdNIHwgNzEuMDlHIHwgMjQwICAgfCA4NS42NCAgICB8IDEwNS4xODcgcXBzICB8XG4jIyBHQ1ZpVFxuICAtIFtLZXJhcyBHQ1ZpVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9nY3ZpdCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMjA2LjA5OTU5IEdsb2JhbCBDb250ZXh0IFZpc2lvbiBUcmFuc2Zvcm1lcnNdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMjA2LjA5OTU5LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0dDVmlUX1hYVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9nY3ZpdC9nY3ZpdF94eF90aW55XzIyNF9pbWFnZW5ldC5oNSkgfCAxMi4wTSAgfCAyLjE1RyB8IDIyNCAgIHwgNzkuOCAgICAgfCAzMzcuNyBxcHMgICAgfFxuICB8IFtHQ1ZpVF9YVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9nY3ZpdC9nY3ZpdF94X3RpbnlfMjI0X2ltYWdlbmV0Lmg1KSAgfCAyMC4wTSAgfCAyLjk2RyB8IDIyNCAgIHwgODIuMDQgICAgfCAyNTUuNjI1IHFwcyAgfFxuICB8IFtHQ1ZpVF9UaW55XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2djdml0L2djdml0X3RpbnlfMjI0X2ltYWdlbmV0Lmg1KSAgIHwgMjguMk0gIHwgNC44M0cgfCAyMjQgICB8IDgzLjQgICAgIHwgMTc0LjU1MyBxcHMgIHxcbiAgfCBbR0NWaVRfU21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ2N2aXQvZ2N2aXRfc21hbGxfMjI0X2ltYWdlbmV0Lmg1KSAgfCA1MS4xTSAgfCA4LjYzRyB8IDIyNCAgIHwgODMuOTUgICAgfCAxMzEuNTc3IHFwcyAgfFxuICB8IFtHQ1ZpVF9CYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2djdml0L2djdml0X2Jhc2VfMjI0X2ltYWdlbmV0Lmg1KSAgIHwgOTAuM00gIHwgMTQuOUcgfCAyMjQgICB8IDg0LjQ3ICAgIHwgMTA1Ljg0NSBxcHMgIHxcbiMjIEdob3N0TmV0XG4gIC0gW0tlcmFzIEdob3N0TmV0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2dob3N0bmV0KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDE5MTEuMTE5MDcgR2hvc3ROZXQ6IE1vcmUgRmVhdHVyZXMgZnJvbSBDaGVhcCBPcGVyYXRpb25zXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTkxMS4xMTkwNy5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0dob3N0TmV0XzA1MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9naG9zdG5ldHYyL2dob3N0bmV0XzA1MF9pbWFnZW5ldC5oNSkgfCAyLjU5TSAgfCA0Mi42TSAgfCAyMjQgICB8IDY2Ljg4ICAgIHwgMTI3Mi4yNSBxcHMgIHxcbiAgfCBbR2hvc3ROZXRfMTAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2dob3N0bmV0djIvZ2hvc3RuZXRfMTAwX2ltYWdlbmV0Lmg1KSB8IDUuMThNICB8IDE0MS43TSB8IDIyNCAgIHwgNzQuMTYgICAgfCAxMTY3LjQgcXBzICAgfFxuICB8IFtHaG9zdE5ldF8xMzBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ2hvc3RuZXR2Mi9naG9zdG5ldF8xMzBfaW1hZ2VuZXQuaDUpIHwgNy4zNk0gIHwgMjI3LjdNIHwgMjI0ICAgfCA3NS43OSAgICB8IDEwMjQuNDkgcXBzICB8XG4gIHwgLSBbc3NsZF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9naG9zdG5ldHYyL2dob3N0bmV0XzEzMF9zc2xkLmg1KSAgICAgICB8IDcuMzZNICB8IDIyNy43TSB8IDIyNCAgIHwgNzkuMzggICAgfCAxMDI0LjQ5IHFwcyAgfFxuIyMgR2hvc3ROZXRWMlxuICAtIFtLZXJhcyBHaG9zdE5ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9naG9zdG5ldCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiBHaG9zdE5ldFYyOiBFbmhhbmNlIENoZWFwIE9wZXJhdGlvbiB3aXRoIExvbmctUmFuZ2UgQXR0ZW50aW9uXShodHRwczovL29wZW5yZXZpZXcubmV0L3BkZi82ZGI1NDRjNjViYmQwZmE3ZDczNDk1MDg0NTRhNDMzYzExMjQ3MGUyLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0dob3N0TmV0VjJfMTAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2dob3N0bmV0djIvZ2hvc3RuZXR2Ml8xMDBfaW1hZ2VuZXQuaDUpICAgIHwgNi4xMk0gIHwgMTY4LjVNIHwgMjI0ICAgfCA3NS4zICAgICB8IDc5Ny4wODggcXBzICB8XG4gIHwgW0dob3N0TmV0VjJfMTMwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2dob3N0bmV0djIvZ2hvc3RuZXR2Ml8xMzBfaW1hZ2VuZXQuaDUpICAgIHwgOC45Nk0gIHwgMjcxLjFNIHwgMjI0ICAgfCA3Ni45ICAgICB8IDcyMi42NjggcXBzICB8XG4gIHwgW0dob3N0TmV0VjJfMTYwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2dob3N0bmV0djIvZ2hvc3RuZXR2Ml8xNjBfaW1hZ2VuZXQuaDUpICAgIHwgMTIuMzlNIHwgNDAwLjlNIHwgMjI0ICAgfCA3Ny44ICAgICB8IDU3Mi4yNjggcXBzICB8XG4jIyBHTUxQXG4gIC0gW0tlcmFzIEdNTFBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbWxwX2ZhbWlseSNnbWxwKSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDIxMDUuMDgwNTAgUGF5IEF0dGVudGlvbiB0byBNTFBzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNS4wODA1MC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBHTUxQVGlueTE2IHwgNk0gICAgIHwgMS4zNUcgIHwgMjI0ICAgfCA3Mi4zICAgICB8IDIzNC4xODcgcXBzICB8XG4gIHwgW0dNTFBTMTZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS9nbWxwX3MxNl9pbWFnZW5ldC5oNSkgICAgfCAyME0gICAgfCA0LjQ0RyAgfCAyMjQgICB8IDc5LjYgICAgIHwgMTM4LjM2MyBxcHMgIHxcbiAgfCBHTUxQQjE2ICAgIHwgNzNNICAgIHwgMTUuODJHIHwgMjI0ICAgfCA4MS42ICAgICB8IDc3LjgxNiBxcHMgICB8XG4jIyBHUFZpVFxuICAtIFtLZXJhcyBHUFZpVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9ncHZpdCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMjEyLjA2Nzk1IEdQVklUOiBBIEhJR0ggUkVTT0xVVElPTiBOT04tSElFUkFSQ0hJQ0FMIFZJU0lPTiBUUkFOU0ZPUk1FUiBXSVRIIEdST1VQIFBST1BBR0FUSU9OXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIxMi4wNjc5NS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtHUFZpVF9MMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ncHZpdC9ncHZpdF9sMV8yMjRfaW1hZ2VuZXQuaDUpIHwgOS41OU0gIHwgNi4xNUcgIHwgMjI0ICAgfCA4MC41ICAgICB8IDIxMC4xNjYgcXBzICB8XG4gIHwgW0dQVmlUX0wyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2dwdml0L2dwdml0X2wyXzIyNF9pbWFnZW5ldC5oNSkgfCAyNC4yTSAgfCAxNS43NEcgfCAyMjQgICB8IDgzLjQgICAgIHwgMTM5LjY1NiBxcHMgIHxcbiAgfCBbR1BWaVRfTDNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ3B2aXQvZ3B2aXRfbDNfMjI0X2ltYWdlbmV0Lmg1KSB8IDM2LjdNICB8IDIzLjU0RyB8IDIyNCAgIHwgODQuMSAgICAgfCAxMzEuMjg0IHFwcyAgfFxuICB8IFtHUFZpVF9MNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ncHZpdC9ncHZpdF9sNF8yMjRfaW1hZ2VuZXQuaDUpIHwgNzUuNU0gIHwgNDguMjlHIHwgMjI0ICAgfCA4NC4zICAgICB8IDk0LjE4OTkgcXBzICB8XG4jIyBIYWxvTmV0XG4gIC0gW0tlcmFzIEhhbG9OZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvaGFsb25ldCkgaXMgZm9yIFtQREYgMjEwMy4xMjczMSBTY2FsaW5nIExvY2FsIFNlbGYtQXR0ZW50aW9uIGZvciBQYXJhbWV0ZXIgRWZmaWNpZW50IFZpc3VhbCBCYWNrYm9uZXNdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMTAzLjEyNzMxLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbSGFsb05leHRFQ0EyNlRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGFsb25ldC9oYWxvbmV4dF9lY2EyNnRfMjU2X2ltYWdlbmV0Lmg1KSB8IDEwLjdNICB8IDIuNDNHICAgfCAyNTYgICB8IDc5LjUwICAgIHwgMTAyOC45MyBxcHMgIHxcbiAgfCBbSGFsb05ldDI2VF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9oYWxvbmV0L2hhbG9uZXQyNnRfMjU2X2ltYWdlbmV0Lmg1KSAgICAgfCAxMi41TSAgfCAzLjE4RyAgIHwgMjU2ICAgfCA3OS4xMyAgICB8IDEwOTYuNzkgcXBzICB8XG4gIHwgW0hhbG9OZXRTRTMzVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9oYWxvbmV0L2hhbG9uZXRfc2UzM3RfMjU2X2ltYWdlbmV0Lmg1KSAgIHwgMTMuN00gIHwgMy41NUcgICB8IDI1NiAgIHwgODAuOTkgICAgfCA1ODIuMDA4IHFwcyAgfFxuICB8IFtIYWxvUmVnTmV0WkJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGFsb25ldC9oYWxvcmVnbmV0el9iXzIyNF9pbWFnZW5ldC5oNSkgICB8IDExLjY4TSB8IDEuOTdHICAgfCAyMjQgICB8IDgxLjA0MiAgIHwgNTc1Ljk2MSBxcHMgIHxcbiAgfCBbSGFsb05ldDUwVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9oYWxvbmV0L2hhbG9uZXQ1MHRfMjU2X2ltYWdlbmV0Lmg1KSAgICAgfCAyMi43TSAgfCA1LjI5RyAgIHwgMjU2ICAgfCA4MS43MCAgICB8IDUxMi42NzcgcXBzICB8XG4gIHwgW0hhbG9Cb3ROZXQ1MFRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGFsb25ldC9oYWxvYm90bmV0NTB0XzI1Nl9pbWFnZW5ldC5oNSkgIHwgMjIuNk0gIHwgNS4wMkcgICB8IDI1NiAgIHwgODIuMCAgICAgfCA0MzEuNjE2IHFwcyAgfFxuIyMgSGllcmFcbiAgLSBbS2VyYXMgSGllcmFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvaGllcmEpIGlzIGZvciBbUERGIDIzMDYuMDA5ODkgSGllcmE6IEEgSGllcmFyY2hpY2FsIFZpc2lvbiBUcmFuc2Zvcm1lciB3aXRob3V0IHRoZSBCZWxscy1hbmQtV2hpc3RsZXNdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMzA2LjAwOTg5LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zICB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbSGllcmFUaW55LCBtYWVfaW4xa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hpZXJhL2hpZXJhX3RpbnlfMjI0X21hZV9pbjFrX2Z0MWsuaDUpICAgICB8IDI3LjkxTSAgfCA0LjkzRyAgIHwgMjI0ICAgfCA4Mi44ICAgICB8IDY0NC4zNTYgcXBzICB8XG4gIHwgW0hpZXJhU21hbGwsIG1hZV9pbjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGllcmEvaGllcmFfc21hbGxfMjI0X21hZV9pbjFrX2Z0MWsuaDUpICAgIHwgMzUuMDFNICB8IDYuNDRHICAgfCAyMjQgICB8IDgzLjggICAgIHwgNDkxLjY2OSBxcHMgIHxcbiAgfCBbSGllcmFCYXNlLCBtYWVfaW4xa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hpZXJhL2hpZXJhX2Jhc2VfMjI0X21hZV9pbjFrX2Z0MWsuaDUpICAgICB8IDUxLjUyTSAgfCA5LjQzRyAgIHwgMjI0ICAgfCA4NC41ICAgICB8IDM1MS41NDIgcXBzICB8XG4gIHwgW0hpZXJhQmFzZVBsdXMsIG1hZV9pbjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGllcmEvaGllcmFfYmFzZV9wbHVzXzIyNF9tYWVfaW4xa19mdDFrLmg1KSB8IDY5LjkwTSAgfCAxMi43MUcgIHwgMjI0ICAgfCA4NS4yICAgICB8IDI5MS40NDYgcXBzICB8XG4gIHwgW0hpZXJhTGFyZ2UsIG1hZV9pbjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaGllcmEvaGllcmFfbGFyZ2VfMjI0X21hZV9pbjFrX2Z0MWsuaDUpICAgIHwgMjEzLjc0TSB8IDQwLjQzRyAgfCAyMjQgICB8IDg2LjEgICAgIHwgMTExLjA0MiBxcHMgIHxcbiAgfCBbSGllcmFIdWdlLCBtYWVfaW4xa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hpZXJhL2hpZXJhX2h1Z2VfMjI0X21hZV9pbjFrX2Z0MWsuaDUpICAgICB8IDY3Mi43OE0gfCAxMjUuMDNHIHwgMjI0ICAgfCA4Ni45ICAgICB8ICAgICAgICAgICAgICB8XG4jIyBIb3JOZXRcbiAgLSBbS2VyYXMgSG9yTmV0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2hvcm5ldCkgaXMgZm9yIFtQREYgMjIwNy4xNDI4NCBIb3JOZXQ6IEVmZmljaWVudCBIaWdoLU9yZGVyIFNwYXRpYWwgSW50ZXJhY3Rpb25zIHdpdGggUmVjdXJzaXZlIEdhdGVkIENvbnZvbHV0aW9uc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDcuMTQyODQucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0hvck5ldFRpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaG9ybmV0L2hvcm5ldF90aW55XzIyNF9pbWFnZW5ldC5oNSkgICAgfCAyMi40TSAgfCA0LjAxRyAgfCAyMjQgICB8IDgyLjggICAgIHwgMjIyLjY2NSBxcHMgIHxcbiAgfCBbSG9yTmV0VGlueUdGXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hvcm5ldC9ob3JuZXRfdGlueV9nZl8yMjRfaW1hZ2VuZXQuaDUpICB8IDIzLjBNICB8IDMuOTRHICB8IDIyNCAgIHwgODMuMCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtIb3JOZXRTbWFsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ob3JuZXQvaG9ybmV0X3NtYWxsXzIyNF9pbWFnZW5ldC5oNSkgICB8IDQ5LjVNICB8IDguODdHICB8IDIyNCAgIHwgODMuOCAgICAgfCAxNjYuOTk4IHFwcyAgfFxuICB8IFtIb3JOZXRTbWFsbEdGXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hvcm5ldC9ob3JuZXRfc21hbGxfZ2ZfMjI0X2ltYWdlbmV0Lmg1KSB8IDUwLjRNICB8IDguNzdHICB8IDIyNCAgIHwgODQuMCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtIb3JOZXRCYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2hvcm5ldC9ob3JuZXRfYmFzZV8yMjRfaW1hZ2VuZXQuaDUpICAgIHwgODcuM00gIHwgMTUuNjVHIHwgMjI0ICAgfCA4NC4yICAgICB8IDEzMy44NDIgcXBzICB8XG4gIHwgW0hvck5ldEJhc2VHRl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ob3JuZXQvaG9ybmV0X2Jhc2VfZ2ZfMjI0X2ltYWdlbmV0Lmg1KSAgfCA4OC40TSAgfCAxNS41MUcgfCAyMjQgICB8IDg0LjMgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbSG9yTmV0TGFyZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaG9ybmV0L2hvcm5ldF9sYXJnZV8yMjRfaW1hZ2VuZXQyMmsuaDUpICAgfCAxOTQuNU0gfCAzNC45MUcgfCAyMjQgICB8IDg2LjggICAgIHwgODkuODI1NCBxcHMgIHxcbiAgfCBbSG9yTmV0TGFyZ2VHRl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ob3JuZXQvaG9ybmV0X2xhcmdlX2dmXzIyNF9pbWFnZW5ldDIyay5oNSkgfCAxOTYuM00gfCAzNC43MkcgfCAyMjQgICB8IDg3LjAgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbSG9yTmV0TGFyZ2VHRl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ob3JuZXQvaG9ybmV0X2xhcmdlX2dmXzM4NF9pbWFnZW5ldDIyay5oNSkgfCAyMDEuOE0gfCAxMDIuMEcgfCAzODQgICB8IDg3LjcgICAgIHwgICAgICAgICAgICAgIHxcbiMjIElGb3JtZXJcbiAgLSBbS2VyYXMgSUZvcm1lcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9pZm9ybWVyKSBpcyBmb3IgW1BERiAyMjA1LjEyOTU2IEluY2VwdGlvbiBUcmFuc2Zvcm1lcl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDUuMTI5NTYucGRmKS5cblxuICB8IE1vZGVsICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtJRm9ybWVyU21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaWZvcm1lci9pZm9ybWVyX3NtYWxsXzIyNF9pbWFnZW5ldC5oNSkgfCAxOS45TSAgfCA0Ljg4RyAgfCAyMjQgICB8IDgzLjQgICAgIHwgMjU0LjM5MiBxcHMgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaWZvcm1lci9pZm9ybWVyX3NtYWxsXzM4NF9pbWFnZW5ldC5oNSkgICAgICAgIHwgMjAuOU0gIHwgMTYuMjlHIHwgMzg0ICAgfCA4NC42ICAgICB8IDEyOC45OCBxcHMgICB8XG4gIHwgW0lGb3JtZXJCYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2lmb3JtZXIvaWZvcm1lcl9iYXNlXzIyNF9pbWFnZW5ldC5oNSkgIHwgNDcuOU0gIHwgOS40NEcgIHwgMjI0ICAgfCA4NC42ICAgICB8IDE0Ny44NjggcXBzICB8XG4gIHwgLSBbMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2lmb3JtZXIvaWZvcm1lcl9iYXNlXzM4NF9pbWFnZW5ldC5oNSkgICAgICAgIHwgNDguOU0gIHwgMzAuODZHIHwgMzg0ICAgfCA4NS43ICAgICB8IDc3LjgzOTEgcXBzICB8XG4gIHwgW0lGb3JtZXJMYXJnZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9pZm9ybWVyL2lmb3JtZXJfbGFyZ2VsXzIyNF9pbWFnZW5ldC5oNSkgfCA4Ni42TSAgfCAxNC4xMkcgfCAyMjQgICB8IDg0LjYgICAgIHwgMTEzLjQzNCBxcHMgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvaWZvcm1lci9pZm9ybWVyX2xhcmdlbF8zODRfaW1hZ2VuZXQuaDUpICAgICAgICB8IDg3LjdNICB8IDQ1Ljc0RyB8IDM4NCAgIHwgODUuOCAgICAgfCA2MC4wMjkyIHFwcyAgfFxuIyMgSW5jZXB0aW9uTmVYdFxuICAtIFtLZXJhcyBJbmNlcHRpb25OZVh0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2luY2VwdGlvbm5leHQpIGlzIGZvciBbUERGIDIzMDMuMTY5MDAgSW5jZXB0aW9uTmVYdDogV2hlbiBJbmNlcHRpb24gTWVldHMgQ29udk5lWHRdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMzAzLjE2OTAwLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtJbmNlcHRpb25OZVh0VGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9pbmNlcHRpb25uZXh0L2luY2VwdGlvbm5leHRfdGlueV9pbWFnZW5ldC5oNSkgIHwgMjguMDVNIHwgNC4yMUcgIHwgMjI0ICAgfCA4Mi4zICAgICB8IDYwNi41MjcgcXBzICB8XG4gIHwgW0luY2VwdGlvbk5lWHRTbWFsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9pbmNlcHRpb25uZXh0L2luY2VwdGlvbm5leHRfc21hbGxfaW1hZ2VuZXQuaDUpIHwgNDkuMzdNIHwgOC4zOUcgIHwgMjI0ICAgfCA4My41ICAgICB8IDMyOS4wMSBxcHMgICB8XG4gIHwgW0luY2VwdGlvbk5lWHRCYXNlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2luY2VwdGlvbm5leHQvaW5jZXB0aW9ubmV4dF9iYXNlXzIyNF9pbWFnZW5ldC5oNSkgIHwgODYuNjdNIHwgMTQuODhHIHwgMjI0ICAgfCA4NC4wICAgICB8IDI2MC42MzkgcXBzICB8XG4gIHwgLSBbMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2luY2VwdGlvbm5leHQvaW5jZXB0aW9ubmV4dF9iYXNlXzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgIHwgODYuNjdNIHwgNDMuNzNHIHwgMzg0ICAgfCA4NS4yICAgICB8IDE0Mi44ODggcXBzICB8XG4jIyBMQ05ldFxuICAtIFtLZXJhcyBMQ05ldF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tb2JpbGVuZXR2M19mYW1pbHkjbGNuZXQpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMjEwOS4xNTA5OSBQUC1MQ05ldDogQSBMaWdodHdlaWdodCBDUFUgQ29udm9sdXRpb25hbCBOZXVyYWwgTmV0d29ya10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDkuMTUwOTkucGRmKS5cblxuICB8IE1vZGVsICAgIHwgUGFyYW1zIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtMQ05ldDA1MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGVuZXR2M19mYW1pbHkvbGNuZXRfMDUwX2ltYWdlbmV0Lmg1KSB8IDEuODhNICB8IDQ2LjAyTSAgfCAyMjQgICB8IDYzLjEwICAgIHwgMzEwNy44OSBxcHMgIHxcbiAgfCAtIFtzc2xkXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9sY25ldF8wNTBfc3NsZC5oNSkgICB8IDEuODhNICB8IDQ2LjAyTSAgfCAyMjQgICB8IDY2LjEwICAgIHwgMzEwNy44OSBxcHMgIHxcbiAgfCBbTENOZXQwNzVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L2xjbmV0XzA3NV9pbWFnZW5ldC5oNSkgfCAyLjM2TSAgfCA5Ni44Mk0gIHwgMjI0ICAgfCA2OC44MiAgICB8IDMwODMuNTUgcXBzICB8XG4gIHwgW0xDTmV0MTAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9sY25ldF8xMDBfaW1hZ2VuZXQuaDUpIHwgMi45NU0gIHwgMTU4LjI4TSB8IDIyNCAgIHwgNzIuMTAgICAgfCAyNzUyLjYgcXBzICAgfFxuICB8IC0gW3NzbGRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L2xjbmV0XzEwMF9zc2xkLmg1KSAgIHwgMi45NU0gIHwgMTU4LjI4TSB8IDIyNCAgIHwgNzQuMzkgICAgfCAyNzUyLjYgcXBzICAgfFxuICB8IFtMQ05ldDE1MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGVuZXR2M19mYW1pbHkvbGNuZXRfMTUwX2ltYWdlbmV0Lmg1KSB8IDQuNTJNICB8IDMzOC4wNU0gfCAyMjQgICB8IDczLjcxICAgIHwgMjI1MC42OSBxcHMgIHxcbiAgfCBbTENOZXQyMDBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L2xjbmV0XzIwMF9pbWFnZW5ldC5oNSkgfCA2LjU0TSAgfCA1ODUuMzVNIHwgMjI0ICAgfCA3NS4xOCAgICB8IDIwMjguMzEgcXBzICB8XG4gIHwgW0xDTmV0MjUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9sY25ldF8yNTBfaW1hZ2VuZXQuaDUpIHwgOS4wNE0gIHwgOTAwLjE2TSB8IDIyNCAgIHwgNzYuNjAgICAgfCAxNjg2LjcgcXBzICAgfFxuICB8IC0gW3NzbGRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L2xjbmV0XzI1MF9zc2xkLmg1KSAgIHwgOS4wNE0gIHwgOTAwLjE2TSB8IDIyNCAgIHwgODAuODIgICAgfCAxNjg2LjcgcXBzICAgfFxuIyMgTGVWaVRcbiAgLSBbS2VyYXMgTGVWaVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbGV2aXQpIGlzIGZvciBbUERGIDIxMDQuMDExMzYgTGVWaVQ6IGEgVmlzaW9uIFRyYW5zZm9ybWVyIGluIENvbnZOZXTigJlzIENsb3RoaW5nIGZvciBGYXN0ZXIgSW5mZXJlbmNlXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNC4wMTEzNi5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtMZVZpVDEyOFMsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbGV2aXQvbGV2aXQxMjhzX2ltYWdlbmV0Lmg1KSB8IDcuOE0gICB8IDAuMzFHIHwgMjI0ICAgfCA3Ni42ICAgICB8IDgwMC41MyBxcHMgICB8XG4gIHwgW0xlVmlUMTI4LCBkaXN0aWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2xldml0L2xldml0MTI4X2ltYWdlbmV0Lmg1KSAgfCA5LjJNICAgfCAwLjQxRyB8IDIyNCAgIHwgNzguNiAgICAgfCA2MjguNzE0IHFwcyAgfFxuICB8IFtMZVZpVDE5MiwgZGlzdGlsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9sZXZpdC9sZXZpdDE5Ml9pbWFnZW5ldC5oNSkgIHwgMTFNICAgIHwgMC42NkcgfCAyMjQgICB8IDgwLjAgICAgIHwgNTk3LjI5OSBxcHMgIHxcbiAgfCBbTGVWaVQyNTYsIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbGV2aXQvbGV2aXQyNTZfaW1hZ2VuZXQuaDUpICB8IDE5TSAgICB8IDEuMTNHIHwgMjI0ICAgfCA4MS42ICAgICB8IDUzOC44ODUgcXBzICB8XG4gIHwgW0xlVmlUMzg0LCBkaXN0aWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2xldml0L2xldml0Mzg0X2ltYWdlbmV0Lmg1KSAgfCAzOU0gICAgfCAyLjM2RyB8IDIyNCAgIHwgODIuNiAgICAgfCA0NjAuMTM5IHFwcyAgfFxuIyMgTWF4VmlUXG4gIC0gW0tlcmFzIE1heFZpVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tYXh2aXQpIGlzIGZvciBbUERGIDIyMDQuMDE2OTcgTWF4VmlUOiBNdWx0aS1BeGlzIFZpc2lvbiBUcmFuc2Zvcm1lcl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDQuMDE2OTcucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbTWF4VmlUX1RpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWF4dml0L21heHZpdF90aW55XzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgfCAzMU0gICAgfCA1LjZHICAgfCAyMjQgICB8IDgzLjYyICAgIHwgMTk1LjI4MyBxcHMgIHxcbiAgfCAtIFszODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWF4dml0L21heHZpdF90aW55XzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgICAgfCAzMU0gICAgfCAxNy43RyAgfCAzODQgICB8IDg1LjI0ICAgIHwgOTIuNTcyNSBxcHMgIHxcbiAgfCAtIFs1MTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWF4dml0L21heHZpdF90aW55XzUxMl9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgICAgfCAzMU0gICAgfCAzMy43RyAgfCA1MTIgICB8IDg1LjcyICAgIHwgNTIuNjQ4NSBxcHMgIHxcbiAgfCBbTWF4VmlUX1NtYWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfc21hbGxfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgIHwgNjlNICAgIHwgMTEuN0cgIHwgMjI0ICAgfCA4NC40NSAgICB8IDE0OS4yODYgcXBzICB8XG4gIHwgLSBbMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfc21hbGxfMzg0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICAgfCA2OU0gICAgfCAzNi4xRyAgfCAzODQgICB8IDg1Ljc0ICAgIHwgNjEuNTc1NyBxcHMgIHxcbiAgfCAtIFs1MTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWF4dml0L21heHZpdF9zbWFsbF81MTJfaW1hZ2VuZXQuaDUpICAgICAgICAgICAgICAgICAgICB8IDY5TSAgICB8IDY3LjZHICB8IDUxMiAgIHwgODYuMTkgICAgfCAzNC43MDAyIHFwcyAgfFxuICB8IFtNYXhWaVRfQmFzZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2Jhc2VfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICB8IDExOU0gICB8IDI0LjJHICB8IDIyNCAgIHwgODQuOTUgICAgfCA3NC43MzUxIHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2Jhc2VfMzg0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICAgICB8IDExOU0gICB8IDc0LjJHICB8IDM4NCAgIHwgODYuMzQgICAgfCAzMS45MDI4IHFwcyAgfFxuICB8IC0gWzUxMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2Jhc2VfNTEyX2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICAgICB8IDExOU0gICB8IDEzOC41RyB8IDUxMiAgIHwgODYuNjYgICAgfCAxNy44MTM5IHFwcyAgfFxuICB8IC0gW2ltYWdlbmV0MjFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfYmFzZV8yMjRfaW1hZ2VuZXQyMWsuaDUpICAgICAgICAgICAgICB8IDEzNU0gICB8IDI0LjJHICB8IDIyNCAgIHwgICAgICAgICAgfCA3NC43MzUxIHFwcyAgfFxuICB8IC0gWzIxa19mdDFrLCAzODRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWF4dml0L21heHZpdF9iYXNlXzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgfCAxMTlNICAgfCA3NC4yRyAgfCAzODQgICB8IDg4LjI0ICAgIHwgMzEuOTAyOCBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgNTEyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfYmFzZV81MTJfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgIHwgMTE5TSAgIHwgMTM4LjVHIHwgNTEyICAgfCA4OC4zOCAgICB8IDE3LjgxMzkgcXBzICB8XG4gIHwgW01heFZpVF9MYXJnZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2xhcmdlXzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICB8IDIxMk0gICB8IDQzLjlHICB8IDIyNCAgIHwgODUuMTcgICAgfCA1OC4wOTY3IHFwcyAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2xhcmdlXzM4NF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgICAgICAgIHwgMjEyTSAgIHwgMTMzLjFHIHwgMzg0ICAgfCA4Ni40MCAgICB8IDI0LjEzODggcXBzICB8XG4gIHwgLSBbNTEyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfbGFyZ2VfNTEyX2ltYWdlbmV0Lmg1KSAgICAgICAgICAgICAgICAgICAgfCAyMTJNICAgfCAyNDUuNEcgfCA1MTIgICB8IDg2LjcwICAgIHwgMTMuMDYzIHFwcyAgIHxcbiAgfCAtIFtpbWFnZW5ldDIxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2xhcmdlXzIyNF9pbWFnZW5ldDIxay5oNSkgICAgICAgICAgICAgIHwgMjMzTSAgIHwgNDMuOUcgIHwgMjI0ICAgfCAgICAgICAgICB8IDU4LjA5NjcgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X2xhcmdlXzM4NF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgfCAyMTJNICAgfCAxMzMuMUcgfCAzODQgICB8IDg4LjMyICAgIHwgMjQuMTM4OCBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgNTEyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfbGFyZ2VfNTEyX2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgICB8IDIxMk0gICB8IDI0NS40RyB8IDUxMiAgIHwgODguNDYgICAgfCAxMy4wNjMgcXBzICAgfFxuICB8IFtNYXhWaVRfWExhcmdlLCBpbWFnZW5ldDIxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X3hsYXJnZV8yMjRfaW1hZ2VuZXQyMWsuaDUpIHwgNTA3TSAgIHwgOTcuN0cgIHwgMjI0ICAgfCAgICAgICAgICB8ICAgICAgICAgICAgICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tYXh2aXQvbWF4dml0X3hsYXJnZV8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgfCA0NzVNICAgfCAyOTMuN0cgfCAzODQgICB8IDg4LjUxICAgIHwgICAgICAgICAgICAgIHxcbiAgfCAtIFsyMWtfZnQxaywgNTEyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21heHZpdC9tYXh2aXRfeGxhcmdlXzUxMl9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICB8IDQ3NU0gICB8IDUzNS4yRyB8IDUxMiAgIHwgODguNzAgICAgfCAgICAgICAgICAgICAgfFxuIyMgTUxQIG1peGVyXG4gIC0gW0tlcmFzIE1MUCBtaXhlcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tbHBfZmFtaWx5I21scC1taXhlcikgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMTA1LjAxNjAxIE1MUC1NaXhlcjogQW4gYWxsLU1MUCBBcmNoaXRlY3R1cmUgZm9yIFZpc2lvbl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDUuMDE2MDEucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBNTFBNaXhlclMzMiwgSkZUIHwgMTkuMU0gIHwgMS4wMUcgICB8IDIyNCAgIHwgNjguNzAgICAgfCA0ODguODM5IHFwcyAgfFxuICB8IE1MUE1peGVyUzE2LCBKRlQgfCAxOC41TSAgfCAzLjc5RyAgIHwgMjI0ICAgfCA3My44MyAgICB8IDQ1MS45NjIgcXBzICB8XG4gIHwgTUxQTWl4ZXJCMzIsIEpGVCB8IDYwLjNNICB8IDMuMjVHICAgfCAyMjQgICB8IDc1LjUzICAgIHwgMjQ3LjYyOSBxcHMgIHxcbiAgfCAtIFtzYW1dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS9tbHBfbWl4ZXJfYjMyX2ltYWdlbmV0X3NhbS5oNSkgICB8IDYwLjNNICB8IDMuMjVHICAgfCAyMjQgICB8IDcyLjQ3ICAgIHwgMjQ3LjYyOSBxcHMgIHxcbiAgfCBbTUxQTWl4ZXJCMTZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS9tbHBfbWl4ZXJfYjE2X2ltYWdlbmV0Lmg1KSAgICAgIHwgNTkuOU0gIHwgMTIuNjRHICB8IDIyNCAgIHwgNzYuNDQgICAgfCAyMDcuNDIzIHFwcyAgfFxuICB8IC0gWzIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21scF9mYW1pbHkvbWxwX21peGVyX2IxNl9pbWFnZW5ldDIxay5oNSkgICAgfCA1OS45TSAgfCAxMi42NEcgIHwgMjI0ICAgfCA4MC42NCAgICB8IDIwNy40MjMgcXBzICB8XG4gIHwgLSBbc2FtXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21scF9mYW1pbHkvbWxwX21peGVyX2IxNl9pbWFnZW5ldF9zYW0uaDUpICAgfCA1OS45TSAgfCAxMi42NEcgIHwgMjI0ICAgfCA3Ny4zNiAgICB8IDIwNy40MjMgcXBzICB8XG4gIHwgLSBKRlQgICAgICAgICAgICB8IDU5LjlNICB8IDEyLjY0RyAgfCAyMjQgICB8IDgwLjAwICAgIHwgMjA3LjQyMyBxcHMgIHxcbiAgfCBNTFBNaXhlckwzMiwgSkZUIHwgMjA2LjlNIHwgMTEuMzBHICB8IDIyNCAgIHwgODAuNjcgICAgfCA5NS4xODY1IHFwcyAgfFxuICB8IFtNTFBNaXhlckwxNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tbHBfZmFtaWx5L21scF9taXhlcl9sMTZfaW1hZ2VuZXQuaDUpICAgICAgfCAyMDguMk0gfCA0NC42NkcgIHwgMjI0ICAgfCA3MS43NiAgICB8IDc3Ljk5MjggcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS9tbHBfbWl4ZXJfbDE2X2ltYWdlbmV0MjFrLmg1KSAgICB8IDIwOC4yTSB8IDQ0LjY2RyAgfCAyMjQgICB8IDgyLjg5ICAgIHwgNzcuOTkyOCBxcHMgIHxcbiAgfCAtIEpGVCAgICAgICAgICAgIHwgMjA4LjJNIHwgNDQuNjZHICB8IDIyNCAgIHwgODQuODIgICAgfCA3Ny45OTI4IHFwcyAgfFxuICB8IC0gNDQ4ICAgICAgICAgICAgfCAyMDguMk0gfCAxNzguNTRHIHwgNDQ4ICAgfCA4My45MSAgICB8ICAgICAgICAgICAgICB8XG4gIHwgLSA0NDgsIEpGVCAgICAgICB8IDIwOC4yTSB8IDE3OC41NEcgfCA0NDggICB8IDg2Ljc4ICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBNTFBNaXhlckgxNCwgSkZUIHwgNDMyLjNNIHwgMTIxLjIyRyB8IDIyNCAgIHwgODYuMzIgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gNDQ4LCBKRlQgICAgICAgfCA0MzIuM00gfCA0ODQuNzNHIHwgNDQ4ICAgfCA4Ny45NCAgICB8ICAgICAgICAgICAgICB8XG4jIyBNb2JpbGVOZXRWM1xuICAtIFtLZXJhcyBNb2JpbGVOZXRWM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tb2JpbGVuZXR2M19mYW1pbHkjbW9iaWxlbmV0djMpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMTkwNS4wMjI0NCBTZWFyY2hpbmcgZm9yIE1vYmlsZU5ldFYzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMTkwNS4wMjI0NC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtNb2JpbGVOZXRWM1NtYWxsMDUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9tb2JpbGVuZXR2M19zbWFsbF8wNTBfaW1hZ2VuZXQuaDUpIHwgMS4yOU0gIHwgMjQuOTJNICB8IDIyNCAgIHwgNTcuODkgICAgfCAyMjk5LjUyIHFwcyAgfFxuICB8IFtNb2JpbGVOZXRWM1NtYWxsMDc1XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9tb2JpbGVuZXR2M19zbWFsbF8wNzVfaW1hZ2VuZXQuaDUpIHwgMi4wNE0gIHwgNDQuMzVNICB8IDIyNCAgIHwgNjUuMjQgICAgfCAyMjEzLjc1IHFwcyAgfFxuICB8IFtNb2JpbGVOZXRWM1NtYWxsMTAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9tb2JpbGVuZXR2M19zbWFsbF8xMDBfaW1hZ2VuZXQuaDUpIHwgMi41NE0gIHwgNTcuNjJNICB8IDIyNCAgIHwgNjcuNjYgICAgfCAyNDI1LjY3IHFwcyAgfFxuICB8IFtNb2JpbGVOZXRWM0xhcmdlMDc1XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9tb2JpbGVuZXR2M19sYXJnZV8wNzVfaW1hZ2VuZXQuaDUpIHwgMy45OU0gIHwgMTU2LjMwTSB8IDIyNCAgIHwgNzMuNDQgICAgfCAxNjkyLjg3IHFwcyAgfFxuICB8IFtNb2JpbGVOZXRWM0xhcmdlMTAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS9tb2JpbGVuZXR2M19sYXJnZV8xMDBfaW1hZ2VuZXQuaDUpIHwgNS40OE0gIHwgMjE4LjczTSB8IDIyNCAgIHwgNzUuNzcgICAgfCAxNjE2LjQ0IHFwcyAgfFxuICB8IC0gW21paWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L21vYmlsZW5ldHYzX2xhcmdlXzEwMF9taWxsLmg1KSAgICAgICAgICAgICAgfCA1LjQ4TSAgfCAyMTguNzNNIHwgMjI0ICAgfCA3Ny45MiAgICB8IDE2MTYuNDQgcXBzICB8XG4jIyBNb2JpbGVWaVRcbiAgLSBbS2VyYXMgTW9iaWxlVmlUXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL21vYmlsZXZpdCkgaXMgZm9yIFtQREYgMjExMC4wMjE3OCBNT0JJTEVWSVQ6IExJR0hULVdFSUdIVCwgR0VORVJBTC1QVVJQT1NFLCBBTkQgTU9CSUxFLUZSSUVORExZIFZJU0lPTiBUUkFOU0ZPUk1FUl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMTAuMDIxNzgucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtNb2JpbGVWaVRfWFhTXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfeHhzX2ltYWdlbmV0Lmg1KSB8IDEuM00gICB8IDAuNDJHIHwgMjU2ICAgfCA2OS4wICAgICB8IDEyNzUuNTkgcXBzICB8XG4gIHwgW01vYmlsZVZpVF9YU10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGV2aXQvbW9iaWxldml0X3hzX2ltYWdlbmV0Lmg1KSAgfCAyLjNNICAgfCAxLjA1RyB8IDI1NiAgIHwgNzQuNyAgICAgfCA5MDcuMDc1IHFwcyAgfFxuICB8IFtNb2JpbGVWaVRfU10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGV2aXQvbW9iaWxldml0X3NfaW1hZ2VuZXQuaDUpICAgfCA1LjZNICAgfCAyLjAzRyB8IDI1NiAgIHwgNzguMyAgICAgfCA2MzguNDg0IHFwcyAgfFxuIyMgTW9iaWxlVmlUX1YyXG4gIC0gW0tlcmFzIE1vYmlsZVZpVF9WMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9tb2JpbGV2aXQpIGlzIGZvciBbUERGIDIyMDYuMDI2ODAgU2VwYXJhYmxlIFNlbGYtYXR0ZW50aW9uIGZvciBNb2JpbGUgVmlzaW9uIFRyYW5zZm9ybWVyc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDYuMDI2ODAucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbTW9iaWxlVmlUX1YyXzA1MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGV2aXQvbW9iaWxldml0X3YyXzA1MF8yNTZfaW1hZ2VuZXQuaDUpICAgfCAxLjM3TSAgfCAwLjQ3RyB8IDI1NiAgIHwgNzAuMTggICAgfCA3MTguMzM3IHFwcyAgfFxuICB8IFtNb2JpbGVWaVRfVjJfMDc1XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMDc1XzI1Nl9pbWFnZW5ldC5oNSkgICB8IDIuODdNICB8IDEuMDRHIHwgMjU2ICAgfCA3NS41NiAgICB8IDY0Mi4zMjMgcXBzICB8XG4gIHwgW01vYmlsZVZpVF9WMl8xMDBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxldml0L21vYmlsZXZpdF92Ml8xMDBfMjU2X2ltYWdlbmV0Lmg1KSAgIHwgNC45ME0gIHwgMS44M0cgfCAyNTYgICB8IDc4LjA5ICAgIHwgNTkxLjIxNyBxcHMgIHxcbiAgfCBbTW9iaWxlVmlUX1YyXzEyNV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGV2aXQvbW9iaWxldml0X3YyXzEyNV8yNTZfaW1hZ2VuZXQuaDUpICAgfCA3LjQ4TSAgfCAyLjg0RyB8IDI1NiAgIHwgNzkuNjUgICAgfCA1MTAuMjUgcXBzICAgfFxuICB8IFtNb2JpbGVWaVRfVjJfMTUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMTUwXzI1Nl9pbWFnZW5ldC5oNSkgICB8IDEwLjZNICB8IDQuMDdHIHwgMjU2ICAgfCA4MC4zOCAgICB8IDQ2Ni40ODIgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxldml0L21vYmlsZXZpdF92Ml8xNTBfMjU2X2ltYWdlbmV0MjJrLmg1KSAgICAgIHwgMTAuNk0gIHwgNC4wN0cgfCAyNTYgICB8IDgxLjQ2ICAgIHwgNDY2LjQ4MiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMTUwXzM4NF9pbWFnZW5ldDIyay5oNSkgfCAxMC42TSAgfCA5LjE1RyB8IDM4NCAgIHwgODIuNjAgICAgfCAyNzguODM0IHFwcyAgfFxuICB8IFtNb2JpbGVWaVRfVjJfMTc1XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMTc1XzI1Nl9pbWFnZW5ldC5oNSkgICB8IDE0LjNNICB8IDUuNTJHIHwgMjU2ICAgfCA4MC44NCAgICB8IDQxMi43NTkgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxldml0L21vYmlsZXZpdF92Ml8xNzVfMjU2X2ltYWdlbmV0MjJrLmg1KSAgICAgIHwgMTQuM00gIHwgNS41MkcgfCAyNTYgICB8IDgxLjk0ICAgIHwgNDEyLjc1OSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMTc1XzM4NF9pbWFnZW5ldDIyay5oNSkgfCAxNC4zTSAgfCAxMi40RyB8IDM4NCAgIHwgODIuOTMgICAgfCAyNDcuMTA4IHFwcyAgfFxuICB8IFtNb2JpbGVWaVRfVjJfMjAwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMjAwXzI1Nl9pbWFnZW5ldC5oNSkgICB8IDE4LjRNICB8IDcuMTJHIHwgMjU2ICAgfCA4MS4xNyAgICB8IDM5NC4zMjUgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxldml0L21vYmlsZXZpdF92Ml8yMDBfMjU2X2ltYWdlbmV0MjJrLmg1KSAgICAgIHwgMTguNE0gIHwgNy4xMkcgfCAyNTYgICB8IDgyLjM2ICAgIHwgMzk0LjMyNSBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZXZpdC9tb2JpbGV2aXRfdjJfMjAwXzM4NF9pbWFnZW5ldDIyay5oNSkgfCAxOC40TSAgfCAxNi4yRyB8IDM4NCAgIHwgODMuNDEgICAgfCAyMjkuMzk5IHFwcyAgfFxuIyMgTW9nYU5ldFxuICAtIFtLZXJhcyBNb2dhTmV0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL21vZ2FuZXQpIGlzIGZvciBbUERGIDIyMTEuMDMyOTUgRWZmaWNpZW50IE11bHRpLW9yZGVyIEdhdGVkIEFnZ3JlZ2F0aW9uIE5ldHdvcmtdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMjExLjAzMjk1LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbTW9nYU5ldFh0aW55XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vZ2FuZXQvbW9nYW5ldF94dGlueV9pbWFnZW5ldC5oNSkgfCAyLjk2TSAgfCA4MDZNICAgfCAyMjQgICB8IDc2LjUgICAgIHwgMzk4LjQ4OCBxcHMgIHxcbiAgfCBbTW9nYU5ldFRpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9nYW5ldC9tb2dhbmV0X3RpbnlfMjI0X2ltYWdlbmV0Lmg1KSAgfCA1LjIwTSAgfCAxLjExRyAgfCAyMjQgICB8IDc5LjAgICAgIHwgMzYyLjQwOSBxcHMgIHxcbiAgfCAtIFsyNTZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9nYW5ldC9tb2dhbmV0X3RpbnlfMjU2X2ltYWdlbmV0Lmg1KSAgICAgICAgfCA1LjIwTSAgfCAxLjQ1RyAgfCAyNTYgICB8IDc5LjYgICAgIHwgMzM1LjM3MiBxcHMgIHxcbiAgfCBbTW9nYU5ldFNtYWxsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vZ2FuZXQvbW9nYW5ldF9zbWFsbF9pbWFnZW5ldC5oNSkgfCAyNS4zTSAgfCA0Ljk4RyAgfCAyMjQgICB8IDgzLjQgICAgIHwgMjQ5LjgwNyBxcHMgIHxcbiAgfCBbTW9nYU5ldEJhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9nYW5ldC9tb2dhbmV0X2Jhc2VfaW1hZ2VuZXQuaDUpICB8IDQzLjdNICB8IDkuOTZHICB8IDIyNCAgIHwgODQuMiAgICAgfCAxMzMuMDcxIHFwcyAgfFxuICB8IFtNb2dhTmV0TGFyZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9nYW5ldC9tb2dhbmV0X2xhcmdlX2ltYWdlbmV0Lmg1KSB8IDgyLjVNICB8IDE1Ljk2RyB8IDIyNCAgIHwgODQuNiAgICAgfCA4NC4yMDQ1IHFwcyAgfFxuIyMgTkFUXG4gIC0gW0tlcmFzIE5BVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9uYXQpIGlzIGZvciBbUERGIDIyMDQuMDcxNDMgTmVpZ2hib3Job29kIEF0dGVudGlvbiBUcmFuc2Zvcm1lcl0oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIyMDQuMDcxNDMucGRmKS5cblxuICB8IE1vZGVsICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtOQVRfTWluaV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvbmF0X21pbmlfaW1hZ2VuZXQuaDUpICB8IDIwLjBNICB8IDIuNzNHICB8IDIyNCAgIHwgODEuOCAgICAgfCA4NS4yMzI0IHFwcyAgfFxuICB8IFtOQVRfVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uYXQvbmF0X3RpbnlfaW1hZ2VuZXQuaDUpICB8IDI3LjlNICB8IDQuMzRHICB8IDIyNCAgIHwgODMuMiAgICAgfCA2Mi42MTQ3IHFwcyAgfFxuICB8IFtOQVRfU21hbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmF0L25hdF9zbWFsbF9pbWFnZW5ldC5oNSkgfCA1MC43TSAgfCA3Ljg0RyAgfCAyMjQgICB8IDgzLjcgICAgIHwgNDEuMTU0NSBxcHMgIHxcbiAgfCBbTkFUX0Jhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmF0L25hdF9iYXNlX2ltYWdlbmV0Lmg1KSAgfCA4OS44TSAgfCAxMy43NkcgfCAyMjQgICB8IDg0LjMgICAgIHwgMzAuODk4OSBxcHMgIHxcbiMjIE5GTmV0c1xuICAtIFtLZXJhcyBORk5ldHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbmZuZXRzKSBpcyBmb3IgW1BERiAyMTAyLjA2MTcxIEhpZ2gtUGVyZm9ybWFuY2UgTGFyZ2UtU2NhbGUgSW1hZ2UgUmVjb2duaXRpb24gV2l0aG91dCBOb3JtYWxpemF0aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwMi4wNjE3MS5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbTkZOZXRMMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRsMF9pbWFnZW5ldC5oNSkgICAgICB8IDM1LjA3TSB8IDcuMTNHICAgfCAyODggICB8IDgyLjc1ICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmMF9pbWFnZW5ldC5oNSkgICAgICB8IDcxLjVNICB8IDEyLjU4RyAgfCAyNTYgICB8IDgzLjYgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmMV9pbWFnZW5ldC5oNSkgICAgICB8IDEzMi42TSB8IDM1Ljk1RyAgfCAzMjAgICB8IDg0LjcgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmMl9pbWFnZW5ldC5oNSkgICAgICB8IDE5My44TSB8IDYzLjI0RyAgfCAzNTIgICB8IDg1LjEgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGM10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmM19pbWFnZW5ldC5oNSkgICAgICB8IDI1NC45TSB8IDExNS43NUcgfCA0MTYgICB8IDg1LjcgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmNF9pbWFnZW5ldC5oNSkgICAgICB8IDMxNi4xTSB8IDIxNi43OEcgfCA1MTIgICB8IDg1LjkgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGNV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvbmZuZXRmNV9pbWFnZW5ldC5oNSkgICAgICB8IDM3Ny4yTSB8IDI5MS43M0cgfCA1NDQgICB8IDg2LjAgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbTkZOZXRGNiwgc2FtXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL25mbmV0cy9uZm5ldGY2X2ltYWdlbmV0Lmg1KSB8IDQzOC40TSB8IDM3OS43NUcgfCA1NzYgICB8IDg2LjUgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBORk5ldEY3ICAgICAgfCA0OTkuNU0gfCA0ODEuODBHIHwgNjA4ICAgfCAgICAgICAgICB8ICAgICAgICAgICAgICB8XG4gIHwgW0VDQV9ORk5ldEwwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL25mbmV0cy9lY2FfbmZuZXRsMF9pbWFnZW5ldC5oNSkgIHwgMjQuMTRNIHwgNy4xMkcgICB8IDI4OCAgIHwgODIuNTggICAgfCAgICAgICAgICAgICAgfFxuICB8IFtFQ0FfTkZOZXRMMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9uZm5ldHMvZWNhX25mbmV0bDFfaW1hZ2VuZXQuaDUpICB8IDQxLjQxTSB8IDE0LjkzRyAgfCAzMjAgICB8IDg0LjAxICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbRUNBX05GTmV0TDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbmZuZXRzL2VjYV9uZm5ldGwyX2ltYWdlbmV0Lmg1KSAgfCA1Ni43Mk0gfCAzMC4xMkcgIHwgMzg0ICAgfCA4NC43MCAgICB8ICAgICAgICAgICAgICB8XG4gIHwgRUNBX05GTmV0TDMgIHwgNzIuMDRNIHwgNTIuNzNHICB8IDQ0OCAgIHwgICAgICAgICAgfCAgICAgICAgICAgICAgfFxuIyMgUFZUX1YyXG4gIC0gW0tlcmFzIFBWVF9WMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9wdnQpIGlzIGZvciBbUERGIDIxMDYuMTM3OTcgUFZUdjI6IEltcHJvdmVkIEJhc2VsaW5lcyB3aXRoIFB5cmFtaWQgVmlzaW9uIFRyYW5zZm9ybWVyXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNi4xMzc5Ny5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW1BWVF9WMkIwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3B2dC9wdnRfdjJfYjBfaW1hZ2VuZXQuaDUpICAgICAgICB8IDMuN00gICB8IDU4MC4zTSB8IDIyNCAgIHwgNzAuNSAgICAgfCA1NjEuNTkzIHFwcyAgfFxuICB8IFtQVlRfVjJCMV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9wdnQvcHZ0X3YyX2IxX2ltYWdlbmV0Lmg1KSAgICAgICAgfCAxNC4wTSAgfCAyLjE0RyAgfCAyMjQgICB8IDc4LjcgICAgIHwgMzkyLjQwOCBxcHMgIHxcbiAgfCBbUFZUX1YyQjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcHZ0L3B2dF92Ml9iMl9pbWFnZW5ldC5oNSkgICAgICAgIHwgMjUuNE0gIHwgNC4wN0cgIHwgMjI0ICAgfCA4Mi4wICAgICB8IDIxMC40NzYgcXBzICB8XG4gIHwgW1BWVF9WMkIyX2xpbmVhcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9wdnQvcHZ0X3YyX2IyX2xpbmVhcl9pbWFnZW5ldC5oNSkgfCAyMi42TSAgfCAzLjk0RyAgfCAyMjQgICB8IDgyLjEgICAgIHwgMjI2Ljc5MSBxcHMgIHxcbiAgfCBbUFZUX1YyQjNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcHZ0L3B2dF92Ml9iM19pbWFnZW5ldC5oNSkgICAgICAgIHwgNDUuMk0gIHwgNi45NkcgIHwgMjI0ICAgfCA4My4xICAgICB8IDEzNS41MSBxcHMgICB8XG4gIHwgW1BWVF9WMkI0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3B2dC9wdnRfdjJfYjRfaW1hZ2VuZXQuaDUpICAgICAgICB8IDYyLjZNICB8IDEwLjE5RyB8IDIyNCAgIHwgODMuNiAgICAgfCA5Ny42NjYgcXBzICAgfFxuICB8IFtQVlRfVjJCNV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9wdnQvcHZ0X3YyX2I1X2ltYWdlbmV0Lmg1KSAgICAgICAgfCA4Mi4wTSAgfCAxMS44MUcgfCAyMjQgICB8IDgzLjggICAgIHwgODEuNDc5OCBxcHMgIHxcbiMjIFJlZ05ldFlcbiAgLSBbS2VyYXMgUmVnTmV0WV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZXNuZXRfZmFtaWx5I3JlZ25ldHkpIGlzIGZvciBbUERGIDIwMDMuMTM2NzggRGVzaWduaW5nIE5ldHdvcmsgRGVzaWduIFNwYWNlc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIwMDMuMTM2NzgucGRmKS5cblxuICB8IE1vZGVsICAgICAgfCBQYXJhbXMgIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbUmVnTmV0WTA0MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHlfMDQwX2ltYWdlbmV0Lmg1KSB8IDIwLjY1TSAgfCAzLjk4RyAgfCAyMjQgICB8IDgyLjMgICAgIHwgNzQ5LjI3NyBxcHMgIHxcbiAgfCBbUmVnTmV0WTA2NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHlfMDY0X2ltYWdlbmV0Lmg1KSB8IDMwLjU4TSAgfCA2LjM2RyAgfCAyMjQgICB8IDgzLjAgICAgIHwgNDM2Ljk0NiBxcHMgIHxcbiAgfCBbUmVnTmV0WTA4MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHlfMDgwX2ltYWdlbmV0Lmg1KSB8IDM5LjE4TSAgfCA3Ljk3RyAgfCAyMjQgICB8IDgzLjE3ICAgIHwgNTEzLjQzIHFwcyAgIHxcbiAgfCBbUmVnTmV0WTE2MF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHlfMTYwX2ltYWdlbmV0Lmg1KSB8IDgzLjU5TSAgfCAxNS45MkcgfCAyMjQgICB8IDgyLjAgICAgIHwgMzM4LjA0NiBxcHMgIHxcbiAgfCBbUmVnTmV0WTMyMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHlfMzIwX2ltYWdlbmV0Lmg1KSB8IDE0NS4wNU0gfCAzMi4yOUcgfCAyMjQgICB8IDgyLjUgICAgIHwgMTg4LjUwOCBxcHMgIHxcbiMjIFJlZ05ldFpcbiAgLSBbS2VyYXMgUmVnTmV0Wl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZXNuZXRfZmFtaWx5I3JlZ25ldHopIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtHaXRodWIgdGltbS9tb2RlbHMvYnlvYm5ldC5weV0oaHR0cHM6Ly9naXRodWIuY29tL3J3aWdodG1hbi9weXRvcmNoLWltYWdlLW1vZGVscy9ibG9iL21hc3Rlci90aW1tL21vZGVscy9ieW9ibmV0LnB5KS5cbiAgLSBSZWxhdGVkIHBhcGVyIFtQREYgMjAwNC4wMjk2NyBFdm9sdmluZyBOb3JtYWxpemF0aW9uLUFjdGl2YXRpb24gTGF5ZXJzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjAwNC4wMjk2Ny5wZGYpXG5cbiAgfCBNb2RlbCAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtSZWdOZXRaQjE2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVnbmV0el9iMTZfaW1hZ2VuZXQuaDUpICAgICB8IDkuNzJNICB8IDEuNDRHIHwgMjI0ICAgfCA3OS44NjggICB8IDc1MS4wMzUgcXBzICB8XG4gIHwgW1JlZ05ldFpDMTZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZWduZXR6X2MxNl9pbWFnZW5ldC5oNSkgICAgIHwgMTMuNDZNIHwgMi41MEcgfCAyNTYgICB8IDgyLjE2NCAgIHwgNjM2LjU0OSBxcHMgIHxcbiAgfCBbUmVnTmV0WkMxNl9FVk9dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZWduZXR6X2MxNl9ldm9faW1hZ2VuZXQuaDUpIHwgMTMuNDlNIHwgMi41NUcgfCAyNTYgICB8IDgxLjkgICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbUmVnTmV0WkQzMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHpfZDMyX2ltYWdlbmV0Lmg1KSAgICAgfCAyNy41OE0gfCA1Ljk2RyB8IDI1NiAgIHwgODMuNDIyICAgfCA0NTkuMjA0IHFwcyAgfFxuICB8IFtSZWdOZXRaRDhdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZWduZXR6X2Q4X2ltYWdlbmV0Lmg1KSAgICAgIHwgMjMuMzdNIHwgMy45NUcgfCAyNTYgICB8IDgzLjUgICAgIHwgNDYwLjAyMSBxcHMgIHxcbiAgfCBbUmVnTmV0WkQ4X0VWT10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3JlZ25ldHpfZDhfZXZvX2ltYWdlbmV0Lmg1KSAgfCAyMy40Nk0gfCA0LjYxRyB8IDI1NiAgIHwgODMuNDIgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtSZWdOZXRaRThdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZWduZXR6X2U4X2ltYWdlbmV0Lmg1KSAgICAgIHwgNTcuNzBNIHwgOS44OEcgfCAyNTYgICB8IDg0LjUgICAgIHwgMjc0Ljk3IHFwcyAgIHxcbiMjIFJlc01MUFxuICAtIFtLZXJhcyBSZXNNTFBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbWxwX2ZhbWlseSNyZXNtbHApIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMjEwNS4wMzQwNCBSZXNNTFA6IEZlZWRmb3J3YXJkIG5ldHdvcmtzIGZvciBpbWFnZSBjbGFzc2lmaWNhdGlvbiB3aXRoIGRhdGEtZWZmaWNpZW50IHRyYWluaW5nXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNS4wMzQwNC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtSZXNNTFAxMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tbHBfZmFtaWx5L3Jlc21scDEyX2ltYWdlbmV0Lmg1KSAgICAgIHwgMTVNICAgIHwgMy4wMkcgICB8IDIyNCAgIHwgNzcuOCAgICAgfCA5MjguNDAyIHFwcyAgfFxuICB8IFtSZXNNTFAyNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tbHBfZmFtaWx5L3Jlc21scDI0X2ltYWdlbmV0Lmg1KSAgICAgIHwgMzBNICAgIHwgNS45OEcgICB8IDIyNCAgIHwgODAuOCAgICAgfCA0MjAuNzA5IHFwcyAgfFxuICB8IFtSZXNNTFAzNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tbHBfZmFtaWx5L3Jlc21scDM2X2ltYWdlbmV0Lmg1KSAgICAgIHwgMTE2TSAgIHwgOC45NEcgICB8IDIyNCAgIHwgODEuMSAgICAgfCAzMDkuNTEzIHFwcyAgfFxuICB8IFtSZXNNTFBfQjI0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21scF9mYW1pbHkvcmVzbWxwX2IyNF9pbWFnZW5ldC5oNSkgICAgfCAxMjlNICAgfCAxMDAuMzlHIHwgMjI0ICAgfCA4My42ICAgICB8IDc4LjMwMTUgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS9yZXNtbHBfYjI0X2ltYWdlbmV0MjJrLmg1KSB8IDEyOU0gICB8IDEwMC4zOUcgfCAyMjQgICB8IDg0LjQgICAgIHwgNzguMzAxNSBxcHMgIHxcbiMjIFJlc05lU3RcbiAgLSBbS2VyYXMgUmVzTmVTdF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZXNuZXN0KSBpcyBmb3IgW1BERiAyMDA0LjA4OTU1IFJlc05lU3Q6IFNwbGl0LUF0dGVudGlvbiBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIwMDQuMDg5NTUucGRmKS5cblxuICB8IE1vZGVsICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbUmVzTmVzdDUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25lc3QvcmVzbmVzdDUwX2ltYWdlbmV0Lmg1KSAgICAgIHwgMjhNICAgIHwgNS4zOEcgIHwgMjI0ICAgfCA4MS4wMyAgICB8IDUzNC42MjcgcXBzICB8XG4gIHwgW1Jlc05lc3QxMDFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmVzdC9yZXNuZXN0MTAxX2ltYWdlbmV0Lmg1KSAgICAgfCA0OU0gICAgfCAxMy4zM0cgfCAyNTYgICB8IDgyLjgzICAgIHwgMjU3LjA3NCBxcHMgIHxcbiAgfCBbUmVzTmVzdDIwMF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXN0L3Jlc25lc3QyMDBfaW1hZ2VuZXQuaDUpICAgICB8IDcxTSAgICB8IDM1LjU1RyB8IDMyMCAgIHwgODMuODQgICAgfCAxMTguMTgzIHFwcyAgfFxuICB8IFtSZXNOZXN0MjY5XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25lc3QvcmVzbmVzdDI2OV9pbWFnZW5ldC5oNSkgICAgIHwgMTExTSAgIHwgNzcuNDJHIHwgNDE2ICAgfCA4NC41NCAgICB8IDYxLjE2NyBxcHMgICB8XG4jIyBSZXNOZXREXG4gIC0gW0tlcmFzIFJlc05ldERdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVzbmV0X2ZhbWlseSNyZXNuZXRkKSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUERGIDE4MTIuMDExODcgQmFnIG9mIFRyaWNrcyBmb3IgSW1hZ2UgQ2xhc3NpZmljYXRpb24gd2l0aCBDb252b2x1dGlvbmFsIE5ldXJhbCBOZXR3b3Jrc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzE4MTIuMDExODcucGRmKVxuXG4gIHwgTW9kZWwgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbUmVzTmV0NTBEXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV0NTBkX2ltYWdlbmV0Lmg1KSAgfCAyNS41OE0gfCA0LjMzRyAgfCAyMjQgICB8IDgwLjUzMCAgIHwgOTMwLjIxNCBxcHMgIHxcbiAgfCBbUmVzTmV0MTAxRF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3Jlc25ldDEwMWRfaW1hZ2VuZXQuaDUpIHwgNDQuNTdNIHwgOC4wNEcgIHwgMjI0ICAgfCA4My4wMjIgICB8IDUwMi4yNjggcXBzICB8XG4gIHwgW1Jlc05ldDE1MkRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZXNuZXQxNTJkX2ltYWdlbmV0Lmg1KSB8IDYwLjIxTSB8IDExLjc1RyB8IDIyNCAgIHwgODMuNjgwICAgfCAzNTMuMjc5IHFwcyAgfFxuICB8IFtSZXNOZXQyMDBEXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV0MjAwZF9pbWFnZW5ldC5oNSkgfCA2NC42OU0gfCAxNS4yNUcgfCAyMjQgICB8IDgzLjk2MiAgIHwgMjg3LjczIHFwcyAgIHxcbiMjIFJlc05ldFFcbiAgLSBbS2VyYXMgUmVzTmV0UV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZXNuZXRfZmFtaWx5I3Jlc25ldHEpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtHaXRodWIgdGltbS9tb2RlbHMvcmVzbmV0LnB5XShodHRwczovL2dpdGh1Yi5jb20vcndpZ2h0bWFuL3B5dG9yY2gtaW1hZ2UtbW9kZWxzL2Jsb2IvbWFzdGVyL3RpbW0vbW9kZWxzL3Jlc25ldC5weSlcblxuICB8IE1vZGVsICAgICB8IFBhcmFtcyB8IEZMT1BzIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbUmVzTmV0NTFRXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV0NTFxX2ltYWdlbmV0Lmg1KSB8IDM1LjdNICB8IDQuODdHIHwgMjI0ICAgfCA4Mi4zNiAgICB8IDgzOC43NTQgcXBzICB8XG4gIHwgUmVzTmV0NjFRIHwgMzYuOE0gIHwgNS45NkcgfCAyMjQgICB8ICAgICAgICAgIHwgNzMwLjI0NSBxcHMgIHxcbiMjIFJlc05lWHRcbiAgLSBbS2VyYXMgUmVzTmVYdF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZXNuZXRfZmFtaWx5I3Jlc25leHQpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMTYxMS4wNTQzMSBBZ2dyZWdhdGVkIFJlc2lkdWFsIFRyYW5zZm9ybWF0aW9ucyBmb3IgRGVlcCBOZXVyYWwgTmV0d29ya3NdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xNjExLjA1NDMxLnBkZikuXG4gIC0gYFNXU0xgIG1lYW5zIGBTZW1pLVdlYWtseSBTdXBlcnZpc2VkIFJlc05lKnRgIGZyb20gW0dpdGh1YiBmYWNlYm9va3Jlc2VhcmNoL3NlbWktc3VwZXJ2aXNlZC1JbWFnZU5ldDFLLW1vZGVsc10oaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rcmVzZWFyY2gvc2VtaS1zdXBlcnZpc2VkLUltYWdlTmV0MUstbW9kZWxzKS4gKipQbGVhc2Ugbm90ZSB0aGUgQ0MtQlktTkMgNC4wIGxpY2Vuc2Ugb24gdGhlc2VzIHdlaWdodHMsIG5vbi1jb21tZXJjaWFsIHVzZSBvbmx5KiouXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW1Jlc05lWHQ1MCwgKDMyeDRkKV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3Jlc25leHQ1MF9pbWFnZW5ldC5oNSkgICAgICAgICB8IDI1TSAgICB8IDQuMjNHICB8IDIyNCAgIHwgNzkuNzY4ICAgfCAxMDQxLjQ2IHFwcyAgfFxuICB8IC0gW1NXU0xdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZXNuZXh0NTBfc3dzbC5oNSkgICAgICAgICAgICAgICAgICAgICB8IDI1TSAgICB8IDQuMjNHICB8IDIyNCAgIHwgODIuMTgyICAgfCAxMDQxLjQ2IHFwcyAgfFxuICB8IFtSZXNOZVh0NTBELCAoMzJ4NGQgKyBkZWVwKV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3Jlc25leHQ1MGRfaW1hZ2VuZXQuaDUpIHwgMjVNICAgIHwgNC40N0cgIHwgMjI0ICAgfCA3OS42NzYgICB8IDEwMTAuOTQgcXBzICB8XG4gIHwgW1Jlc05lWHQxMDEsICgzMng0ZCldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvcmVzbmV0X2ZhbWlseS9yZXNuZXh0MTAxX2ltYWdlbmV0Lmg1KSAgICAgICAgfCA0Mk0gICAgfCA3Ljk3RyAgfCAyMjQgICB8IDgwLjMzNCAgIHwgNTcxLjY1MiBxcHMgIHxcbiAgfCAtIFtTV1NMXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV4dDEwMV9zd3NsLmg1KSAgICAgICAgICAgICAgICAgICAgIHwgNDJNICAgIHwgNy45N0cgIHwgMjI0ICAgfCA4My4yMzAgICB8IDU3MS42NTIgcXBzICB8XG4gIHwgW1Jlc05lWHQxMDFXLCAoMzJ4OGQpXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV4dDEwMV9pbWFnZW5ldC5oNSkgICAgICAgfCA4OU0gICAgfCAxNi40MUcgfCAyMjQgICB8IDc5LjMwOCAgIHwgMzY3LjQzMSBxcHMgIHxcbiAgfCAtIFtTV1NMXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Jlc25ldF9mYW1pbHkvcmVzbmV4dDEwMXdfc3dzbC5oNSkgICAgICAgICAgICAgICAgICAgICB8IDg5TSAgICB8IDE2LjQxRyB8IDIyNCAgIHwgODQuMjg0ICAgfCAzNjcuNDMxIHFwcyAgfFxuICB8IFtSZXNOZVh0MTAxV182NCwgKDY0eDRkKV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9yZXNuZXRfZmFtaWx5L3Jlc25leHQxMDF3XzY0X2ltYWdlbmV0Lmg1KSAgICB8IDgzLjQ2TSB8IDE1LjQ2RyB8IDIyNCAgIHwgODIuNDYgICAgfCAzNzcuODMgcXBzICAgfFxuIyMgU3dpblRyYW5zZm9ybWVyVjJcbiAgLSBbS2VyYXMgU3dpblRyYW5zZm9ybWVyVjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvc3dpbl90cmFuc2Zvcm1lcl92MikgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMTExLjA5ODgzIFN3aW4gVHJhbnNmb3JtZXIgVjI6IFNjYWxpbmcgVXAgQ2FwYWNpdHkgYW5kIFJlc29sdXRpb25dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMTExLjA5ODgzLnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJUaW55X25zXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml90aW55X25zXzIyNF9pbWFnZW5ldC5oNSkgICAgICAgICAgICAgfCAyOC4zTSAgfCA0LjY5RyAgfCAyMjQgICB8IDgxLjggICAgIHwgMjg5LjIwNSBxcHMgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJTbWFsbF9uc10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9zd2luX3RyYW5zZm9ybWVyX3YyL3N3aW5fdHJhbnNmb3JtZXJfdjJfc21hbGxfbnNfMjI0X2ltYWdlbmV0Lmg1KSAgICAgICAgICAgIHwgNDkuN00gIHwgOS4xMkcgIHwgMjI0ICAgfCA4My41ICAgICB8IDE2OS42NDUgcXBzICB8XG4gIHwgW1N3aW5UcmFuc2Zvcm1lclYyVGlueV93aW5kb3c4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml90aW55X3dpbmRvdzhfMjU2X2ltYWdlbmV0Lmg1KSAgICAgICAgfCAyOC4zTSAgfCA1Ljk5RyAgfCAyNTYgICB8IDgxLjggICAgIHwgMjc1LjU0NyBxcHMgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJUaW55X3dpbmRvdzE2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml90aW55X3dpbmRvdzE2XzI1Nl9pbWFnZW5ldC5oNSkgICAgICAgfCAyOC4zTSAgfCA2Ljc1RyAgfCAyNTYgICB8IDgyLjggICAgIHwgMjE3LjIwNyBxcHMgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJTbWFsbF93aW5kb3c4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9zbWFsbF93aW5kb3c4XzI1Nl9pbWFnZW5ldC5oNSkgICAgICAgfCA0OS43TSAgfCAxMS42M0cgfCAyNTYgICB8IDgzLjcgICAgIHwgMTU3LjU1OSBxcHMgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJTbWFsbF93aW5kb3cxNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9zd2luX3RyYW5zZm9ybWVyX3YyL3N3aW5fdHJhbnNmb3JtZXJfdjJfc21hbGxfd2luZG93MTZfMjU2X2ltYWdlbmV0Lmg1KSAgICAgIHwgNDkuN00gIHwgMTIuOTNHIHwgMjU2ICAgfCA4NC4xICAgICB8IDEyOS45NTMgcXBzICB8XG4gIHwgW1N3aW5UcmFuc2Zvcm1lclYyQmFzZV93aW5kb3c4XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9iYXNlX3dpbmRvdzhfMjU2X2ltYWdlbmV0Lmg1KSAgICAgICAgfCA4Ny45TSAgfCAyMC40NEcgfCAyNTYgICB8IDg0LjIgICAgIHwgMTI2LjI5NCBxcHMgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJCYXNlX3dpbmRvdzE2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9iYXNlX3dpbmRvdzE2XzI1Nl9pbWFnZW5ldC5oNSkgICAgICAgfCA4Ny45TSAgfCAyMi4xN0cgfCAyNTYgICB8IDg0LjYgICAgIHwgOTkuNjM0IHFwcyAgIHxcbiAgfCBbU3dpblRyYW5zZm9ybWVyVjJCYXNlX3dpbmRvdzE2LCAyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9zd2luX3RyYW5zZm9ybWVyX3YyL3N3aW5fdHJhbnNmb3JtZXJfdjJfYmFzZV93aW5kb3cxNl8yNTZfaW1hZ2VuZXQyMmsuaDUpICB8IDg3LjlNICB8IDIyLjE3RyB8IDI1NiAgIHwgODYuMiAgICAgfCA5OS42MzQgcXBzICAgfFxuICB8IFtTd2luVHJhbnNmb3JtZXJWMkJhc2Vfd2luZG93MjQsIDIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9iYXNlX3dpbmRvdzI0XzM4NF9pbWFnZW5ldDIyay5oNSkgIHwgODcuOU0gIHwgNTUuODlHIHwgMzg0ICAgfCA4Ny4xICAgICB8IDM1LjA1MDggcXBzICB8XG4gIHwgW1N3aW5UcmFuc2Zvcm1lclYyTGFyZ2Vfd2luZG93MTYsIDIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9sYXJnZV93aW5kb3cxNl8yNTZfaW1hZ2VuZXQyMmsuaDUpIHwgMTk2LjdNIHwgNDguMDNHIHwgMjU2ICAgfCA4Ni45ICAgICB8ICAgICAgICAgICAgICB8XG4gIHwgW1N3aW5UcmFuc2Zvcm1lclYyTGFyZ2Vfd2luZG93MjQsIDIxa19mdDFrXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3N3aW5fdHJhbnNmb3JtZXJfdjIvc3dpbl90cmFuc2Zvcm1lcl92Ml9sYXJnZV93aW5kb3cyNF8zODRfaW1hZ2VuZXQyMmsuaDUpIHwgMTk2LjdNIHwgMTE3LjFHIHwgMzg0ICAgfCA4Ny42ICAgICB8ICAgICAgICAgICAgICB8XG4jIyBUaW55TmV0XG4gIC0gW0tlcmFzIFRpbnlOZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvbW9iaWxlbmV0djNfZmFtaWx5I3RpbnluZXQpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMjAxMC4xNDgxOSBNb2RlbCBSdWJpa+KAmXMgQ3ViZTogVHdpc3RpbmcgUmVzb2x1dGlvbiwgRGVwdGggYW5kIFdpZHRoIGZvciBUaW55TmV0c10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIwMTAuMTQ4MTkucGRmKS5cblxuICB8IE1vZGVsICAgIHwgUGFyYW1zIHwgRkxPUHMgICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtUaW55TmV0RV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGVuZXR2M19mYW1pbHkvdGlueW5ldF9lX2ltYWdlbmV0Lmg1KSB8IDIuMDRNICB8IDI1LjIyTSAgfCAxMDYgICB8IDU5Ljg2ICAgIHwgMjE1Mi4zNiBxcHMgIHxcbiAgfCBbVGlueU5ldERdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L3RpbnluZXRfZF9pbWFnZW5ldC5oNSkgfCAyLjM0TSAgfCA1My4zNU0gIHwgMTUyICAgfCA2Ni45NiAgICB8IDE5MDUuNTYgcXBzICB8XG4gIHwgW1RpbnlOZXRDXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21vYmlsZW5ldHYzX2ZhbWlseS90aW55bmV0X2NfaW1hZ2VuZXQuaDUpIHwgMi40Nk0gIHwgMTAzLjIyTSB8IDE4NCAgIHwgNzEuMjMgICAgfCAxMzUzLjQ0IHFwcyAgfFxuICB8IFtUaW55TmV0Ql0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tb2JpbGVuZXR2M19mYW1pbHkvdGlueW5ldF9iX2ltYWdlbmV0Lmg1KSB8IDMuNzNNICB8IDIwNi4yOE0gfCAxODggICB8IDc0Ljk4ICAgIHwgMTE5Ni4wNiBxcHMgIHxcbiAgfCBbVGlueU5ldEFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbW9iaWxlbmV0djNfZmFtaWx5L3RpbnluZXRfYV9pbWFnZW5ldC5oNSkgfCA2LjE5TSAgfCAzNDMuNzRNIHwgMTkyICAgfCA3Ny42NSAgICB8IDk4MS45NzYgcXBzICB8XG4jIyBUaW55VmlUXG4gIC0gW0tlcmFzIFRpbnlWaVRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdGlueXZpdCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMjA3LjEwNjY2IFRpbnlWaVQ6IEZhc3QgUHJldHJhaW5pbmcgRGlzdGlsbGF0aW9uIGZvciBTbWFsbCBWaXNpb24gVHJhbnNmb3JtZXJzXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwNy4xMDY2Ni5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbVGlueVZpVF81TSwgZGlzdGlsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC90aW55dml0L3Rpbnlfdml0XzVtXzIyNF9pbWFnZW5ldC5oNSkgIHwgNS40TSAgIHwgMS4zRyAgfCAyMjQgICB8IDc5LjEgICAgIHwgNjMxLjQxNCBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC90aW55dml0L3Rpbnlfdml0XzVtXzIyNF9pbWFnZW5ldDIxay1mdDFrLmg1KSAgIHwgNS40TSAgIHwgMS4zRyAgfCAyMjQgICB8IDgwLjcgICAgIHwgNjMxLjQxNCBxcHMgIHxcbiAgfCBbVGlueVZpVF8xMU0sIGRpc3RpbGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdGlueXZpdC90aW55X3ZpdF8xMW1fMjI0X2ltYWdlbmV0Lmg1KSB8IDExTSAgICB8IDIuMEcgIHwgMjI0ICAgfCA4MS41ICAgICB8IDUwOS44MTggcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdGlueXZpdC90aW55X3ZpdF8xMW1fMjI0X2ltYWdlbmV0MjFrLWZ0MWsuaDUpICAgfCAxMU0gICAgfCAyLjBHICB8IDIyNCAgIHwgODMuMiAgICAgfCA1MDkuODE4IHFwcyAgfFxuICB8IFtUaW55VmlUXzIxTSwgZGlzdGlsbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC90aW55dml0L3Rpbnlfdml0XzIxbV8yMjRfaW1hZ2VuZXQuaDUpIHwgMjFNICAgIHwgNC4zRyAgfCAyMjQgICB8IDgzLjEgICAgIHwgNDEwLjY3NiBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxa10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC90aW55dml0L3Rpbnlfdml0XzIxbV8yMjRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICB8IDIxTSAgICB8IDQuM0cgIHwgMjI0ICAgfCA4NC44ICAgICB8IDQxMC42NzYgcXBzICB8XG4gIHwgLSBbMjFrX2Z0MWssIDM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC90aW55dml0L3Rpbnlfdml0XzIxbV8zODRfaW1hZ2VuZXQyMWstZnQxay5oNSkgICAgICAgICAgIHwgMjFNICAgIHwgMTMuOEcgfCAzODQgICB8IDg2LjIgICAgIHwgMTk5LjQ1OCBxcHMgIHxcbiAgfCAtIFsyMWtfZnQxaywgNTEyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3Rpbnl2aXQvdGlueV92aXRfMjFtXzUxMl9pbWFnZW5ldDIxay1mdDFrLmg1KSAgICAgICAgICAgfCAyMU0gICAgfCAyNy4wRyB8IDUxMiAgIHwgODYuNSAgICAgfCAxMjIuODQ2IHFwcyAgfFxuIyMgVW5pRm9ybWVyXG4gIC0gW0tlcmFzIFVuaUZvcm1lcl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy91bmlmb3JtZXIpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQREYgMjIwMS4wOTQ1MCBVbmlGb3JtZXI6IFVuaWZ5aW5nIENvbnZvbHV0aW9uIGFuZCBTZWxmLWF0dGVudGlvbiBmb3IgVmlzdWFsIFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjIwMS4wOTQ1MC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtVbmlmb3JtZXJTbWFsbDMyLCB0b2tlbl9sYWJlbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC91bmlmb3JtZXIvdW5pZm9ybWVyX3NtYWxsXzMyXzIyNF90b2tlbl9sYWJlbC5oNSkgfCAyMk0gICAgfCAzLjY2RyAgfCAyMjQgICB8IDgzLjQgICAgIHwgMzg2LjE3NCBxcHMgIHxcbiAgfCBbVW5pZm9ybWVyU21hbGw2NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC91bmlmb3JtZXIvdW5pZm9ybWVyX3NtYWxsXzY0XzIyNF9pbWFnZW5ldC5oNSkgICAgIHwgMjJNICAgIHwgMy42NkcgIHwgMjI0ICAgfCA4Mi45ICAgICB8IDM4My45MDUgcXBzICB8XG4gIHwgLSBbdG9rZW5fbGFiZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdW5pZm9ybWVyL3VuaWZvcm1lcl9zbWFsbF82NF8yMjRfdG9rZW5fbGFiZWwuaDUpICAgICB8IDIyTSAgICB8IDMuNjZHICB8IDIyNCAgIHwgODMuNCAgICAgfCAzODMuOTA1IHFwcyAgfFxuICB8IFtVbmlmb3JtZXJTbWFsbFBsdXMzMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC91bmlmb3JtZXIvdW5pZm9ybWVyX3NtYWxsX3BsdXNfMzJfMjI0X2ltYWdlbmV0Lmg1KSB8IDI0TSAgICB8IDQuMjRHICB8IDIyNCAgIHwgODMuNCAgICAgfCAzNjUuOTc3IHFwcyAgfFxuICB8IC0gW3Rva2VuX2xhYmVsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3VuaWZvcm1lci91bmlmb3JtZXJfc21hbGxfcGx1c18zMl8yMjRfdG9rZW5fbGFiZWwuaDUpICAgICB8IDI0TSAgICB8IDQuMjRHICB8IDIyNCAgIHwgODMuOSAgICAgfCAzNjUuOTc3IHFwcyAgfFxuICB8IFtVbmlmb3JtZXJTbWFsbFBsdXM2NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC91bmlmb3JtZXIvdW5pZm9ybWVyX3NtYWxsX3BsdXNfNjRfMjI0X2ltYWdlbmV0Lmg1KSB8IDI0TSAgICB8IDQuMjNHICB8IDIyNCAgIHwgODMuNCAgICAgfCAzNjMuMjgyIHFwcyAgfFxuICB8IC0gW3Rva2VuX2xhYmVsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3VuaWZvcm1lci91bmlmb3JtZXJfc21hbGxfcGx1c182NF8yMjRfdG9rZW5fbGFiZWwuaDUpICAgICB8IDI0TSAgICB8IDQuMjNHICB8IDIyNCAgIHwgODMuNiAgICAgfCAzNjMuMjgyIHFwcyAgfFxuICB8IFtVbmlmb3JtZXJCYXNlMzIsIHRva2VuX2xhYmVsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3VuaWZvcm1lci91bmlmb3JtZXJfYmFzZV8zMl8yMjRfdG9rZW5fbGFiZWwuaDUpICB8IDUwTSAgICB8IDguMzJHICB8IDIyNCAgIHwgODUuMSAgICAgfCAxNzAuMDcxIHFwcyAgfFxuICB8IFtVbmlmb3JtZXJCYXNlNjRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdW5pZm9ybWVyL3VuaWZvcm1lcl9iYXNlXzY0XzIyNF9pbWFnZW5ldC5oNSkgICAgICB8IDUwTSAgICB8IDguMzFHICB8IDIyNCAgIHwgODMuOCAgICAgfCAxNjguNzM2IHFwcyAgfFxuICB8IC0gW3Rva2VuX2xhYmVsXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3VuaWZvcm1lci91bmlmb3JtZXJfYmFzZV82NF8yMjRfdG9rZW5fbGFiZWwuaDUpICAgICB8IDUwTSAgICB8IDguMzFHICB8IDIyNCAgIHwgODQuOCAgICAgfCAxNjguNzM2IHFwcyAgfFxuICB8IFtVbmlmb3JtZXJMYXJnZTY0LCB0b2tlbl9sYWJlbF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC91bmlmb3JtZXIvdW5pZm9ybWVyX2xhcmdlXzY0XzIyNF90b2tlbl9sYWJlbC5oNSkgfCAxMDBNICAgfCAxOS43OUcgfCAyMjQgICB8IDg1LjYgICAgIHwgOTUuNTUxNyBxcHMgIHxcbiAgfCAtIFt0b2tlbl9sYWJlbCwgMzg0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3VuaWZvcm1lci91bmlmb3JtZXJfbGFyZ2VfNjRfMzg0X3Rva2VuX2xhYmVsLmg1KSAgICAgICAgICAgIHwgMTAwTSAgIHwgNjMuMTFHIHwgMzg0ICAgfCA4Ni4zICAgICB8IDUwLjA0NTUgcXBzICB8XG4jIyBWYW5pbGxhTmV0XG4gIC0gW0tlcmFzIFZhbmlsbGFOZXRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdmFuaWxsYW5ldCkgaXMgZm9yIFtQREYgMjMwNS4xMjk3MiBWYW5pbGxhTmV0OiB0aGUgUG93ZXIgb2YgTWluaW1hbGlzbSBpbiBEZWVwIExlYXJuaW5nXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjMwNS4xMjk3Mi5wZGYpLlxuXG4gIHwgTW9kZWwgICAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgVG9wMSBBY2MgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbVmFuaWxsYU5ldDVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdmFuaWxsYW5ldC92YW5pbGxhbmV0XzVfaW1hZ2VuZXQuaDUpICAgfCAyMi4zM00gfCA4LjQ2RyAgfCAyMjQgICB8IDcyLjQ5ICAgIHwgNTk4Ljk2NCBxcHMgIHxcbiAgfCAtIFtkZXBsb3k9VHJ1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92YW5pbGxhbmV0L3ZhbmlsbGFuZXRfNV9kZXBsb3lfaW1hZ2VuZXQuaDUpIHwgMTUuNTJNIHwgNS4xN0cgIHwgMjI0ICAgfCA3Mi40OSAgICB8IDc5OC4xOTkgcXBzICB8XG4gIHwgW1ZhbmlsbGFOZXQ2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZhbmlsbGFuZXQvdmFuaWxsYW5ldF82X2ltYWdlbmV0Lmg1KSAgIHwgNTYuMTJNIHwgMTAuMTFHIHwgMjI0ICAgfCA3Ni4zNiAgICB8IDQ2NS4wMzEgcXBzICB8XG4gIHwgLSBbZGVwbG95PVRydWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdmFuaWxsYW5ldC92YW5pbGxhbmV0XzZfZGVwbG95X2ltYWdlbmV0Lmg1KSB8IDMyLjUxTSB8IDYuMDBHICB8IDIyNCAgIHwgNzYuMzYgICAgfCA2NTUuOTQ0IHFwcyAgfFxuICB8IFtWYW5pbGxhTmV0N10oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92YW5pbGxhbmV0L3ZhbmlsbGFuZXRfN19pbWFnZW5ldC5oNSkgICB8IDU2LjY3TSB8IDExLjg0RyB8IDIyNCAgIHwgNzcuOTggICAgfCAzNzUuNDc5IHFwcyAgfFxuICB8IC0gW2RlcGxveT1UcnVlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZhbmlsbGFuZXQvdmFuaWxsYW5ldF83X2RlcGxveV9pbWFnZW5ldC5oNSkgfCAzMi44ME0gfCA2LjkwRyAgfCAyMjQgICB8IDc3Ljk4ICAgIHwgNTI3LjcyMyBxcHMgIHxcbiAgfCBbVmFuaWxsYU5ldDhdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdmFuaWxsYW5ldC92YW5pbGxhbmV0XzhfaW1hZ2VuZXQuaDUpICAgfCA2NS4xOE0gfCAxMy41MEcgfCAyMjQgICB8IDc5LjEzICAgIHwgMzQxLjE1NyBxcHMgIHxcbiAgfCAtIFtkZXBsb3k9VHJ1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92YW5pbGxhbmV0L3ZhbmlsbGFuZXRfOF9kZXBsb3lfaW1hZ2VuZXQuaDUpIHwgMzcuMTBNIHwgNy43NUcgIHwgMjI0ICAgfCA3OS4xMyAgICB8IDQ3OS4zMjggcXBzICB8XG4gIHwgW1ZhbmlsbGFOZXQ5XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZhbmlsbGFuZXQvdmFuaWxsYW5ldF85X2ltYWdlbmV0Lmg1KSAgIHwgNzMuNjhNIHwgMTUuMTdHIHwgMjI0ICAgfCA3OS44NyAgICB8IDMxMi44MTUgcXBzICB8XG4gIHwgLSBbZGVwbG95PVRydWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdmFuaWxsYW5ldC92YW5pbGxhbmV0XzlfZGVwbG95X2ltYWdlbmV0Lmg1KSB8IDQxLjQwTSB8IDguNTlHICB8IDIyNCAgIHwgNzkuODcgICAgfCA0NDMuNDY0IHFwcyAgfFxuICB8IFtWYW5pbGxhTmV0MTBdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvdmFuaWxsYW5ldC92YW5pbGxhbmV0XzEwX2ltYWdlbmV0Lmg1KSAgfCA4Mi4xOU0gfCAxNi44M0cgfCAyMjQgICB8IDgwLjU3ICAgIHwgMjc3Ljg3MSBxcHMgIHxcbiAgfCAtIFtkZXBsb3k9VHJ1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92YW5pbGxhbmV0L3ZhbmlsbGFuZXRfMTBfZGVwbG95X2ltYWdlbmV0Lmg1KSB8IDQ1LjY5TSB8IDkuNDNHICB8IDIyNCAgIHwgODAuNTcgICAgfCA0MDguMDgyIHFwcyAgfFxuICB8IFZhbmlsbGFOZXQxMSAgfCA5MC42OU0gfCAxOC40OUcgfCAyMjQgICB8IDgxLjA4ICAgIHwgMjY3LjAyNiBxcHMgIHxcbiAgfCAtIGRlcGxveT1UcnVlIHwgNTAuMDBNIHwgMTAuMjdHIHwgMjI0ICAgfCA4MS4wOCAgICB8IDM3Ny4yMzkgcXBzICB8XG4gIHwgVmFuaWxsYU5ldDEyICB8IDk5LjIwTSB8IDIwLjE2RyB8IDIyNCAgIHwgODEuNTUgICAgfCAyMjkuOTg3IHFwcyAgfFxuICB8IC0gZGVwbG95PVRydWUgfCA1NC4yOU0gfCAxMS4xMUcgfCAyMjQgICB8IDgxLjU1ICAgIHwgMzU4LjA3NiBxcHMgIHxcbiAgfCBWYW5pbGxhTmV0MTMgIHwgMTA3LjdNIHwgMjEuODJHIHwgMjI0ICAgfCA4Mi4wNSAgICB8IDIxOC4yNTYgcXBzICB8XG4gIHwgLSBkZXBsb3k9VHJ1ZSB8IDU4LjU5TSB8IDExLjk2RyB8IDIyNCAgIHwgODIuMDUgICAgfCAzMzQuMjQ0IHFwcyAgfFxuIyMgVk9MT1xuICAtIFtLZXJhcyBWT0xPXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3ZvbG8pIGlzIGZvciBbUERGIDIxMDYuMTMxMTIgVk9MTzogVmlzaW9uIE91dGxvb2tlciBmb3IgVmlzdWFsIFJlY29nbml0aW9uXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNi4xMzExMi5wZGYpLlxuXG4gIHwgTW9kZWwgICB8IFBhcmFtcyB8IEZMT1BzICAgfCBJbnB1dCB8IFRvcDEgQWNjIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtWT0xPX2QxXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZvbG8vdm9sb19kMV8yMjRfaW1hZ2VuZXQuaDUpIHwgMjdNICAgIHwgNC44MkcgICB8IDIyNCAgIHwgODQuMiAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDFfMzg0X2ltYWdlbmV0Lmg1KSAgIHwgMjdNICAgIHwgMTQuMjJHICB8IDM4NCAgIHwgODUuMiAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtWT0xPX2QyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZvbG8vdm9sb19kMl8yMjRfaW1hZ2VuZXQuaDUpIHwgNTlNICAgIHwgOS43OEcgICB8IDIyNCAgIHwgODUuMiAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzM4NF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDJfMzg0X2ltYWdlbmV0Lmg1KSAgIHwgNTlNICAgIHwgMjguODRHICB8IDM4NCAgIHwgODYuMCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtWT0xPX2QzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZvbG8vdm9sb19kM18yMjRfaW1hZ2VuZXQuaDUpIHwgODZNICAgIHwgMTMuODBHICB8IDIyNCAgIHwgODUuNCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzQ0OF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDNfNDQ4X2ltYWdlbmV0Lmg1KSAgIHwgODZNICAgIHwgNTUuNTBHICB8IDQ0OCAgIHwgODYuMyAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtWT0xPX2Q0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZvbG8vdm9sb19kNF8yMjRfaW1hZ2VuZXQuaDUpIHwgMTkzTSAgIHwgMjkuMzlHICB8IDIyNCAgIHwgODUuNyAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzQ0OF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDRfNDQ4X2ltYWdlbmV0Lmg1KSAgIHwgMTkzTSAgIHwgMTE3LjgxRyB8IDQ0OCAgIHwgODYuOCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtWT0xPX2Q1XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3ZvbG8vdm9sb19kNV8yMjRfaW1hZ2VuZXQuaDUpIHwgMjk2TSAgIHwgNTMuMzRHICB8IDIyNCAgIHwgODYuMSAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzQ0OF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDVfNDQ4X2ltYWdlbmV0Lmg1KSAgIHwgMjk2TSAgIHwgMjEzLjcyRyB8IDQ0OCAgIHwgODcuMCAgICAgfCAgICAgICAgICAgICAgfFxuICB8IC0gWzUxMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC92b2xvL3ZvbG9fZDVfNTEyX2ltYWdlbmV0Lmg1KSAgIHwgMjk2TSAgIHwgMjc5LjM2RyB8IDUxMiAgIHwgODcuMSAgICAgfCAgICAgICAgICAgICAgfFxuIyMgV2F2ZU1MUFxuICAtIFtLZXJhcyBXYXZlTUxQXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL21scF9mYW1pbHkjd2F2ZW1scCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BERiAyMTExLjEyMjk0IEFuIEltYWdlIFBhdGNoIGlzIGEgV2F2ZTogUXVhbnR1bSBJbnNwaXJlZCBWaXNpb24gTUxQXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjExMS4xMjI5NC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBUb3AxIEFjYyB8IFQ0IEluZmVyZW5jZSB8XG4gIHwgLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW1dhdmVNTFBfVF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9tbHBfZmFtaWx5L3dhdmVtbHBfdF9pbWFnZW5ldC5oNSkgfCAxN00gICAgfCAyLjQ3RyAgfCAyMjQgICB8IDgwLjkgICAgIHwgNTIzLjQgcXBzICAgIHxcbiAgfCBbV2F2ZU1MUF9TXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL21scF9mYW1pbHkvd2F2ZW1scF9zX2ltYWdlbmV0Lmg1KSB8IDMwTSAgICB8IDQuNTVHICB8IDIyNCAgIHwgODIuOSAgICAgfCAyMDMuNDQ1IHFwcyAgfFxuICB8IFtXYXZlTUxQX01dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvbWxwX2ZhbWlseS93YXZlbWxwX21faW1hZ2VuZXQuaDUpIHwgNDRNICAgIHwgNy45MkcgIHwgMjI0ICAgfCA4My4zICAgICB8IDE0Ny4xNTUgcXBzICB8XG4gIHwgV2F2ZU1MUF9CIHwgNjNNICAgIHwgMTAuMjZHIHwgMjI0ICAgfCA4My42ICAgICB8ICAgICAgICAgICAgICB8XG4qKipcblxuIyBEZXRlY3Rpb24gTW9kZWxzXG4jIyBFZmZpY2llbnREZXRcbiAgLSBbS2VyYXMgRWZmaWNpZW50RGV0XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3RyZWUvbWFpbi9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL2VmZmljaWVudGRldCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BhcGVyIDE5MTEuMDkwNzAgRWZmaWNpZW50RGV0OiBTY2FsYWJsZSBhbmQgRWZmaWNpZW50IE9iamVjdCBEZXRlY3Rpb25dKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8xOTExLjA5MDcwLnBkZikuXG4gIC0gYERldC1BZHZQcm9wICsgQXV0b0F1Z21lbnRgIFtQYXBlciAyMTAzLjEzODg2IFJvYnVzdCBhbmQgQWNjdXJhdGUgT2JqZWN0IERldGVjdGlvbiB2aWEgQWR2ZXJzYXJpYWwgTGVhcm5pbmddKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMTAzLjEzODg2LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICAgICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgIHwgSW5wdXQgfCBDT0NPIHZhbCBBUCB8IHRlc3QgQVAgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLSB8IC0tLS0tLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tLS0tLS0tLSB8XG4gIHwgW0VmZmljaWVudERldEQwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfZDBfNTEyX2NvY28uaDUpICAgICB8IDMuOU0gICB8IDIuNTVHICAgfCA1MTIgICB8IDM0LjMgICAgICAgIHwgMzQuNiAgICB8IDI0OC4wMDkgcXBzICB8XG4gIHwgLSBEZXQtQWR2UHJvcCAgICAgIHwgMy45TSAgIHwgMi41NUcgICB8IDUxMiAgIHwgMzUuMSAgICAgICAgfCAzNS4zICAgIHwgMjQ4LjAwOSBxcHMgIHxcbiAgfCBbRWZmaWNpZW50RGV0RDFdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50ZGV0L2VmZmljaWVudGRldF9kMV82NDBfY29jby5oNSkgICAgIHwgNi42TSAgIHwgNi4xM0cgICB8IDY0MCAgIHwgNDAuMiAgICAgICAgfCA0MC41ICAgIHwgMTMzLjEzOSBxcHMgIHxcbiAgfCAtIERldC1BZHZQcm9wICAgICAgfCA2LjZNICAgfCA2LjEzRyAgIHwgNjQwICAgfCA0MC44ICAgICAgICB8IDQwLjkgICAgfCAxMzMuMTM5IHFwcyAgfFxuICB8IFtFZmZpY2llbnREZXREMl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnRkZXQvZWZmaWNpZW50ZGV0X2QyXzc2OF9jb2NvLmg1KSAgICAgfCA4LjFNICAgfCAxMS4wM0cgIHwgNzY4ICAgfCA0My41ICAgICAgICB8IDQzLjkgICAgfCA4OS4wNTIzIHFwcyAgfFxuICB8IC0gRGV0LUFkdlByb3AgICAgICB8IDguMU0gICB8IDExLjAzRyAgfCA3NjggICB8IDQ0LjMgICAgICAgIHwgNDQuMyAgICB8IDg5LjA1MjMgcXBzICB8XG4gIHwgW0VmZmljaWVudERldEQzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfZDNfODk2X2NvY28uaDUpICAgICB8IDEyLjBNICB8IDI0Ljk1RyAgfCA4OTYgICB8IDQ2LjggICAgICAgIHwgNDcuMiAgICB8IDUwLjA0OTggcXBzICB8XG4gIHwgLSBEZXQtQWR2UHJvcCAgICAgIHwgMTIuME0gIHwgMjQuOTVHICB8IDg5NiAgIHwgNDcuNyAgICAgICAgfCA0OC4wICAgIHwgNTAuMDQ5OCBxcHMgIHxcbiAgfCBbRWZmaWNpZW50RGV0RDRdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50ZGV0L2VmZmljaWVudGRldF9kNF8xMDI0X2NvY28uaDUpICAgICB8IDIwLjdNICB8IDU1LjI5RyAgfCAxMDI0ICB8IDQ5LjMgICAgICAgIHwgNDkuNyAgICB8IDI4LjAwODYgcXBzICB8XG4gIHwgLSBEZXQtQWR2UHJvcCAgICAgIHwgMjAuN00gIHwgNTUuMjlHICB8IDEwMjQgIHwgNTAuNCAgICAgICAgfCA1MC40ICAgIHwgMjguMDA4NiBxcHMgIHxcbiAgfCBbRWZmaWNpZW50RGV0RDVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50ZGV0L2VmZmljaWVudGRldF9kNV8xMjgwX2NvY28uaDUpICAgICB8IDMzLjdNICB8IDEzNS42MkcgfCAxMjgwICB8IDUxLjIgICAgICAgIHwgNTEuNSAgICB8ICAgICAgICAgICAgICB8XG4gIHwgLSBEZXQtQWR2UHJvcCAgICAgIHwgMzMuN00gIHwgMTM1LjYyRyB8IDEyODAgIHwgNTIuMiAgICAgICAgfCA1Mi41ICAgIHwgICAgICAgICAgICAgIHxcbiAgfCBbRWZmaWNpZW50RGV0RDZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50ZGV0L2VmZmljaWVudGRldF9kNl8xMjgwX2NvY28uaDUpICAgICB8IDUxLjlNICB8IDIyNS45M0cgfCAxMjgwICB8IDUyLjEgICAgICAgIHwgNTIuNiAgICB8ICAgICAgICAgICAgICB8XG4gIHwgW0VmZmljaWVudERldEQ3XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfZDdfMTUzNl9jb2NvLmg1KSAgICAgfCA1MS45TSAgfCAzMjUuMzRHIHwgMTUzNiAgfCA1My40ICAgICAgICB8IDUzLjcgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtFZmZpY2llbnREZXREN1hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZWZmaWNpZW50ZGV0L2VmZmljaWVudGRldF9kN3hfMTUzNl9jb2NvLmg1KSAgICB8IDc3LjBNICB8IDQxMC44N0cgfCAxNTM2ICB8IDU0LjQgICAgICAgIHwgNTUuMSAgICB8ICAgICAgICAgICAgICB8XG4gIHwgW0VmZmljaWVudERldExpdGUwXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfbGl0ZTBfMzIwX2NvY28uaDUpICB8IDMuMk0gICB8IDAuOThHICAgfCAzMjAgICB8IDI3LjUgICAgICAgIHwgMjYuNDEgICB8IDU5OS42MTYgcXBzICB8XG4gIHwgW0VmZmljaWVudERldExpdGUxXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfbGl0ZTFfMzg0X2NvY28uaDUpICB8IDQuMk0gICB8IDEuOTdHICAgfCAzODQgICB8IDMyLjYgICAgICAgIHwgMzEuNTAgICB8IDM2OS4yNzMgcXBzICB8XG4gIHwgW0VmZmljaWVudERldExpdGUyXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfbGl0ZTJfNDQ4X2NvY28uaDUpICB8IDUuM00gICB8IDMuMzhHICAgfCA0NDggICB8IDM2LjIgICAgICAgIHwgMzUuMDYgICB8IDI3OC4yNjMgcXBzICB8XG4gIHwgW0VmZmljaWVudERldExpdGUzXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL2VmZmljaWVudGRldC9lZmZpY2llbnRkZXRfbGl0ZTNfNTEyX2NvY28uaDUpICB8IDguNE0gICB8IDcuNTBHICAgfCA1MTIgICB8IDM5LjkgICAgICAgIHwgMzguNzcgICB8IDE4MC44NzEgcXBzICB8XG4gIHwgW0VmZmljaWVudERldExpdGUzWF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnRkZXQvZWZmaWNpZW50ZGV0X2xpdGUzeF82NDBfY29jby5oNSkgfCA5LjNNICAgfCAxNC4wMUcgIHwgNjQwICAgfCA0NC4wICAgICAgICB8IDQyLjY0ICAgfCAxMTUuMjcxIHFwcyAgfFxuICB8IFtFZmZpY2llbnREZXRMaXRlNF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9lZmZpY2llbnRkZXQvZWZmaWNpZW50ZGV0X2xpdGU0XzY0MF9jb2NvLmg1KSAgfCAxNS4xTSAgfCAyMC4yMEcgIHwgNjQwICAgfCA0NC40ICAgICAgICB8IDQzLjE4ICAgfCA5NS40MTIyIHFwcyAgfFxuIyMgWU9MT19OQVNcbiAgLSBbS2VyYXMgWU9MT19OQVNdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMveW9sb3Y4KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbR2l0aHViIERlY2ktQUkvc3VwZXItZ3JhZGllbnRzXShodHRwczovL2dpdGh1Yi5jb20vRGVjaS1BSS9zdXBlci1ncmFkaWVudHMpIFlPTE8tTkFTIG1vZGVscy5cblxuICB8IE1vZGVsICAgICAgICAgICAgICAgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBDT0NPIHZhbCBBUCB8IHRlc3QgQVAgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtZT0xPX05BU19TXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG92OC95b2xvX25hc19zX2NvY28uaDUpICAgICAgICAgICAgICB8IDEyLjE4TSB8IDE1LjkyRyB8IDY0MCAgIHwgNDcuNSAgICAgICAgfCAgICAgICAgIHwgMzQ1LjU5NSBxcHMgIHxcbiAgfCAtIFt1c2VfcmVwYXJhbV9jb252PVRydWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG9fbmFzX3NfYmVmb3JlX3JlcGFyYW1fY29jby5oNSkgfCAxMi44OE0gfCAxNi45NkcgfCA2NDAgICB8IDQ3LjUgICAgICAgIHwgICAgICAgICB8IDI0MC4wODcgcXBzICB8XG4gIHwgW1lPTE9fTkFTX01dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG9fbmFzX21fY29jby5oNSkgICAgICAgICAgICAgIHwgMzEuOTJNIHwgNDMuOTFHIHwgNjQwICAgfCA1MS41NSAgICAgICB8ICAgICAgICAgfCAxNjcuOTM1IHFwcyAgfFxuICB8IC0gW3VzZV9yZXBhcmFtX2NvbnY9VHJ1ZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xvdjgveW9sb19uYXNfbV9iZWZvcmVfcmVwYXJhbV9jb2NvLmg1KSB8IDMzLjg2TSB8IDQ3LjEyRyB8IDY0MCAgIHwgNTEuNTUgICAgICAgfCAgICAgICAgIHwgMTI4Ljk2IHFwcyAgIHxcbiAgfCBbWU9MT19OQVNfTF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xvdjgveW9sb19uYXNfbF9jb2NvLmg1KSAgICAgICAgICAgICAgfCA0Mi4wMk0gfCA1OS45NUcgfCA2NDAgICB8IDUyLjIyICAgICAgIHwgICAgICAgICB8IDEzMS4xMSBxcHMgICB8XG4gIHwgLSBbdXNlX3JlcGFyYW1fY29udj1UcnVlXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG92OC95b2xvX25hc19sX2JlZm9yZV9yZXBhcmFtX2NvY28uaDUpIHwgNDQuNTNNIHwgNjQuNTNHIHwgNjQwICAgfCA1Mi4yMiAgICAgICB8ICAgICAgICAgfCA5OC42MDY5IHFwcyAgfFxuIyMgWU9MT1JcbiAgLSBbS2VyYXMgWU9MT1JdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMveW9sb3IpIGluY2x1ZGVzIGltcGxlbWVudGF0aW9uIG9mIFtQYXBlciAyMTA1LjA0MjA2IFlvdSBPbmx5IExlYXJuIE9uZSBSZXByZXNlbnRhdGlvbjogVW5pZmllZCBOZXR3b3JrIGZvciBNdWx0aXBsZSBUYXNrc10oaHR0cHM6Ly9hcnhpdi5vcmcvcGRmLzIxMDUuMDQyMDYucGRmKS5cblxuICB8IE1vZGVsICAgICAgfCBQYXJhbXMgfCBGTE9QcyAgIHwgSW5wdXQgfCBDT0NPIHZhbCBBUCB8IHRlc3QgQVAgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtZT0xPUl9DU1BdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3IveW9sb3JfY3NwX2NvY28uaDUpICB8IDUyLjlNICB8IDYwLjI1RyAgfCA2NDAgICB8IDUwLjAgICAgICAgIHwgNTIuOCAgICB8IDExOC43NDYgcXBzICB8XG4gIHwgW1lPTE9SX0NTUFhdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3IveW9sb3JfY3NwX3hfY29jby5oNSkgfCA5OS44TSAgfCAxMTEuMTFHIHwgNjQwICAgfCA1MS41ICAgICAgICB8IDU0LjggICAgfCA2Ny45NDQ0IHFwcyAgfFxuICB8IFtZT0xPUl9QNl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xvci95b2xvcl9wNl9jb2NvLmg1KSAgIHwgMzcuM00gIHwgMTYyLjg3RyB8IDEyODAgIHwgNTIuNSAgICAgICAgfCA1NS43ICAgIHwgNDkuMzEyOCBxcHMgIHxcbiAgfCBbWU9MT1JfVzZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3IveW9sb3JfdzZfY29jby5oNSkgICB8IDc5LjlNICB8IDIyNi42N0cgfCAxMjgwICB8IDUzLjYgPyAgICAgIHwgNTYuOSAgICB8IDQwLjIzNTUgcXBzICB8XG4gIHwgW1lPTE9SX0U2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG9yL3lvbG9yX2U2X2NvY28uaDUpICAgfCAxMTUuOU0gfCAzNDEuNjJHIHwgMTI4MCAgfCA1MC4zID8gICAgICB8IDU3LjYgICAgfCAyMS41NzE5IHFwcyAgfFxuICB8IFtZT0xPUl9ENl0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xvci95b2xvcl9kNl9jb2NvLmg1KSAgIHwgMTUxLjhNIHwgNDY3Ljg4RyB8IDEyODAgIHwgNTAuOCA/ICAgICAgfCA1OC4yICAgIHwgMTYuNjA2MSBxcHMgIHxcbiMjIFlPTE9WN1xuICAtIFtLZXJhcyBZT0xPVjddKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMveW9sb3Y3KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbUGFwZXIgMjIwNy4wMjY5NiBZT0xPdjc6IFRyYWluYWJsZSBiYWctb2YtZnJlZWJpZXMgc2V0cyBuZXcgc3RhdGUtb2YtdGhlLWFydCBmb3IgcmVhbC10aW1lIG9iamVjdCBkZXRlY3RvcnNdKGh0dHBzOi8vYXJ4aXYub3JnL3BkZi8yMjA3LjAyNjk2LnBkZikuXG5cbiAgfCBNb2RlbCAgICAgICB8IFBhcmFtcyB8IEZMT1BzICB8IElucHV0IHwgQ09DTyB2YWwgQVAgfCB0ZXN0IEFQIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbWU9MT1Y3X1RpbnldKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y3L3lvbG92N190aW55X2NvY28uaDUpIHwgNi4yM00gIHwgMi45MEcgIHwgNDE2ICAgfCAzMy4zICAgICAgICB8ICAgICAgICAgfCA4NDUuOTAzIHFwcyAgfFxuICB8IFtZT0xPVjdfQ1NQXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG92Ny95b2xvdjdfY3NwX2NvY28uaDUpICB8IDM3LjY3TSB8IDUzLjBHICB8IDY0MCAgIHwgNTEuNCAgICAgICAgfCAgICAgICAgIHwgMTM3LjQ0MSBxcHMgIHxcbiAgfCBbWU9MT1Y3X1hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y3L3lvbG92N194X2NvY28uaDUpICAgIHwgNzEuNDFNIHwgOTUuMEcgIHwgNjQwICAgfCA1My4xICAgICAgICB8ICAgICAgICAgfCA4Mi4wNTM0IHFwcyAgfFxuICB8IFtZT0xPVjdfVzZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y3L3lvbG92N193Nl9jb2NvLmg1KSAgIHwgNzAuNDlNIHwgMTgwLjFHIHwgMTI4MCAgfCA1NC45ICAgICAgICB8ICAgICAgICAgfCA0OS45ODQxIHFwcyAgfFxuICB8IFtZT0xPVjdfRTZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y3L3lvbG92N19lNl9jb2NvLmg1KSAgIHwgOTcuMzNNIHwgMjU3LjZHIHwgMTI4MCAgfCA1Ni4wICAgICAgICB8ICAgICAgICAgfCAzMS4zODUyIHFwcyAgfFxuICB8IFtZT0xPVjdfRDZdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y3L3lvbG92N19kNl9jb2NvLmg1KSAgIHwgMTMzLjlNIHwgMzUxLjRHIHwgMTI4MCAgfCA1Ni42ICAgICAgICB8ICAgICAgICAgfCAyNi4xMzQ2IHFwcyAgfFxuICB8IFtZT0xPVjdfRTZFXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG92Ny95b2xvdjdfZTZlX2NvY28uaDUpICB8IDE1MS45TSB8IDQyMS43RyB8IDEyODAgIHwgNTYuOCAgICAgICAgfCAgICAgICAgIHwgMjAuMTMzMSBxcHMgIHxcbiMjIFlPTE9WOFxuICAtIFtLZXJhcyBZT0xPVjhdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMveW9sb3Y4KSBpbmNsdWRlcyBpbXBsZW1lbnRhdGlvbiBvZiBbR2l0aHViIHVsdHJhbHl0aWNzL3VsdHJhbHl0aWNzXShodHRwczovL2dpdGh1Yi5jb20vdWx0cmFseXRpY3MvdWx0cmFseXRpY3MpIGRldGVjdGlvbiBhbmQgY2xhc3NpZmljYXRpb24gbW9kZWxzLlxuXG4gIHwgTW9kZWwgICAgIHwgUGFyYW1zIHwgRkxPUHMgIHwgSW5wdXQgfCBDT0NPIHZhbCBBUCB8IHRlc3QgQVAgfCBUNCBJbmZlcmVuY2UgfFxuICB8IC0tLS0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tLSB8IC0tLS0tIHwgLS0tLS0tLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0tLS0tLS0tIHxcbiAgfCBbWU9MT1Y4X05dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG92OF9uX2NvY28uaDUpICB8IDMuMTZNICB8IDQuMzlHICB8IDY0MCAgIHwgMzcuMyAgICAgICAgfCAgICAgICAgIHwgNjE0LjA0MiBxcHMgIHxcbiAgfCBbWU9MT1Y4X1NdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG92OF9zX2NvY28uaDUpICB8IDExLjE3TSB8IDE0LjMzRyB8IDY0MCAgIHwgNDQuOSAgICAgICAgfCAgICAgICAgIHwgMzQ5LjUyOCBxcHMgIHxcbiAgfCBbWU9MT1Y4X01dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG92OF9tX2NvY28uaDUpICB8IDI1LjkwTSB8IDM5LjUyRyB8IDY0MCAgIHwgNTAuMiAgICAgICAgfCAgICAgICAgIHwgMTYwLjIxMiBxcHMgIHxcbiAgfCBbWU9MT1Y4X0xdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG92OF9sX2NvY28uaDUpICB8IDQzLjY5TSB8IDgyLjY1RyB8IDY0MCAgIHwgNTIuOSAgICAgICAgfCAgICAgICAgIHwgMTA0LjQ1MiBxcHMgIHxcbiAgfCBbWU9MT1Y4X1hdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3Y4L3lvbG92OF94X2NvY28uaDUpICB8IDY4LjIzTSB8IDEyOS4wRyB8IDY0MCAgIHwgNTMuOSAgICAgICAgfCAgICAgICAgIHwgNjYuMDQyOCBxcHMgIHxcbiAgfCBbWU9MT1Y4X1g2XShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG92OC95b2xvdjhfeDZfY29jby5oNSkgfCA5Ny40Mk0gfCA1MjIuNkcgfCAxMjgwICB8IDU2LjcgPyAgICAgIHwgICAgICAgICB8IDE3LjQzNjggcXBzICB8XG4jIyBZT0xPWFxuICAtIFtLZXJhcyBZT0xPWF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy90cmVlL21haW4va2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy95b2xveCkgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW1BhcGVyIDIxMDcuMDg0MzAgWU9MT1g6IEV4Y2VlZGluZyBZT0xPIFNlcmllcyBpbiAyMDIxXShodHRwczovL2FyeGl2Lm9yZy9wZGYvMjEwNy4wODQzMC5wZGYpLlxuXG4gIHwgTW9kZWwgICAgIHwgUGFyYW1zIHwgRkxPUHMgICB8IElucHV0IHwgQ09DTyB2YWwgQVAgfCB0ZXN0IEFQIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0tIHwgLS0tLS0gfCAtLS0tLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtZT0xPWE5hbm9dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3gveW9sb3hfbmFub19jb2NvLmg1KSB8IDAuOTFNICB8IDAuNTNHICAgfCA0MTYgICB8IDI1LjggICAgICAgIHwgICAgICAgICB8IDkzMC41NyBxcHMgICB8XG4gIHwgW1lPTE9YVGlueV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xveC95b2xveF90aW55X2NvY28uaDUpIHwgNS4wNk0gIHwgMy4yMkcgICB8IDQxNiAgIHwgMzIuOCAgICAgICAgfCAgICAgICAgIHwgNzQ1LjIgcXBzICAgIHxcbiAgfCBbWU9MT1hTXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG94L3lvbG94X3NfY29jby5oNSkgICAgfCA5LjBNICAgfCAxMy4zOUcgIHwgNjQwICAgfCA0MC41ICAgICAgICB8IDQwLjUgICAgfCAzODAuMzggcXBzICAgfFxuICB8IFtZT0xPWE1dKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQveW9sb3gveW9sb3hfbV9jb2NvLmg1KSAgICB8IDI1LjNNICB8IDM2Ljg0RyAgfCA2NDAgICB8IDQ2LjkgICAgICAgIHwgNDcuMiAgICB8IDE4MS4wODQgcXBzICB8XG4gIHwgW1lPTE9YTF0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC95b2xveC95b2xveF9sX2NvY28uaDUpICAgIHwgNTQuMk0gIHwgNzcuNzZHICB8IDY0MCAgIHwgNDkuNyAgICAgICAgfCA1MC4xICAgIHwgMTExLjUxNyBxcHMgIHxcbiAgfCBbWU9MT1hYXShodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzL3JlbGVhc2VzL2Rvd25sb2FkL3lvbG94L3lvbG94X3hfY29jby5oNSkgICAgfCA5OS4xTSAgfCAxNDAuODdHIHwgNjQwICAgfCA1MS41ICAgICAgICB8IDUxLjUgICAgfCA2Mi4zMTg5IHFwcyAgfFxuKioqXG5cbiMgTGFuZ3VhZ2UgTW9kZWxzXG4jIyBHUFQyXG4gIC0gW0tlcmFzIEdQVDJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvdHJlZS9tYWluL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvZ3B0MikgaW5jbHVkZXMgaW1wbGVtZW50YXRpb24gb2YgW0xhbmd1YWdlIE1vZGVscyBhcmUgVW5zdXBlcnZpc2VkIE11bHRpdGFzayBMZWFybmVyc10oaHR0cHM6Ly9kNG11Y2Zwa3N5d3YuY2xvdWRmcm9udC5uZXQvYmV0dGVyLWxhbmd1YWdlLW1vZGVscy9sYW5ndWFnZS1tb2RlbHMucGRmKS4gYFQ0IEluZmVyZW5jZWAgaXMgdGVzdGVkIHVzaW5nIGBpbnB1dF9zaGFwZT1bMSwgMTAyNF1gLlxuXG4gIHwgTW9kZWwgICAgICAgICAgICB8IFBhcmFtcyAgfCBGTE9QcyAgIHwgdm9jYWJfc2l6ZSB8IExBTUJBREEgUFBMIHwgVDQgSW5mZXJlbmNlIHxcbiAgfCAtLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tLS0gfCAtLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0gfFxuICB8IFtHUFQyX0Jhc2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ3B0Mi9ncHQyX2Jhc2Vfd2VidGV4dC5oNSkgICAgICAgIHwgMTYzLjA0TSB8IDE0Ni40MkcgfCA1MDI1NyAgICAgIHwgMzUuMTMgICAgICAgfCAzMC42ODcxIHFwcyAgfFxuICB8IFtHUFQyX01lZGl1bV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ncHQyL2dwdDJfbWVkaXVtX3dlYnRleHQuaDUpICAgICAgfCA0MDYuMjlNIHwgNDE1LjA3RyB8IDUwMjU3ICAgICAgfCAxNS42MCAgICAgICB8IDE3LjIwNzMgcXBzICB8XG4gIHwgW0dQVDJfTGFyZ2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ3B0Mi9ncHQyX2xhcmdlX3dlYnRleHQuaDUpICAgICAgIHwgODM4LjM2TSB8IDg5MC4yOEcgfCA1MDI1NyAgICAgIHwgMTAuODcgICAgICAgfCAgICAgICAgICAgICAgfFxuICB8IFtHUFQyX1hMYXJnZV0oaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscy9yZWxlYXNlcy9kb3dubG9hZC9ncHQyL2dwdDJfeGxhcmdlX3dlYnRleHQuMS5oNSksIFsrLjJdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMvcmVsZWFzZXMvZG93bmxvYWQvZ3B0Mi9ncHQyX3hsYXJnZV93ZWJ0ZXh0LjIuaDUpIHwgMS42MzhCICB8IDE3NTguM0cgfCA1MDI1NyAgICAgIHwgOC42MyAgICAgICAgfCAgICAgICAgICAgICAgfFxuKioqXG5cbiMgTGljZW5zZXNcbiAgLSBUaGlzIHBhcnQgaXMgY29waWVkIGFuZCBtb2RpZmllZCBhY2NvcmRpbmcgdG8gW0dpdGh1YiByd2lnaHRtYW4vcHl0b3JjaC1pbWFnZS1tb2RlbHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yd2lnaHRtYW4vcHl0b3JjaC1pbWFnZS1tb2RlbHMpLlxuICAtICoqQ29kZSoqLiBUaGUgY29kZSBoZXJlIGlzIGxpY2Vuc2VkIE1JVC4gSXQgaXMgeW91ciByZXNwb25zaWJpbGl0eSB0byBlbnN1cmUgeW91IGNvbXBseSB3aXRoIGxpY2Vuc2VzIGhlcmUgYW5kIGNvbmRpdGlvbnMgb2YgYW55IGRlcGVuZGVudCBsaWNlbnNlcy4gV2hlcmUgYXBwbGljYWJsZSwgSSd2ZSBsaW5rZWQgdGhlIHNvdXJjZXMvcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBjb21wb25lbnRzIGluIGRvY3N0cmluZ3MuIElmIHlvdSB0aGluayBJJ3ZlIG1pc3NlZCBhbnl0aGluZyBwbGVhc2UgY3JlYXRlIGFuIGlzc3VlLiBTbyBmYXIgYWxsIG9mIHRoZSBwcmV0cmFpbmVkIHdlaWdodHMgYXZhaWxhYmxlIGhlcmUgYXJlIHByZXRyYWluZWQgb24gSW1hZ2VOZXQgYW5kIENPQ08gd2l0aCBhIHNlbGVjdCBmZXcgdGhhdCBoYXZlIHNvbWUgYWRkaXRpb25hbCBwcmV0cmFpbmluZy5cbiAgLSAqKkltYWdlTmV0IFByZXRyYWluZWQgV2VpZ2h0cyoqLiBJbWFnZU5ldCB3YXMgcmVsZWFzZWQgZm9yIG5vbi1jb21tZXJjaWFsIHJlc2VhcmNoIHB1cnBvc2VzIG9ubHkgKGh0dHBzOi8vaW1hZ2UtbmV0Lm9yZy9kb3dubG9hZCkuIEl0J3Mgbm90IGNsZWFyIHdoYXQgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGF0IGFyZSBmb3IgdGhlIHVzZSBvZiBwcmV0cmFpbmVkIHdlaWdodHMgZnJvbSB0aGF0IGRhdGFzZXQuIEFueSBtb2RlbHMgSSBoYXZlIHRyYWluZWQgd2l0aCBJbWFnZU5ldCBhcmUgZG9uZSBmb3IgcmVzZWFyY2ggcHVycG9zZXMgYW5kIG9uZSBzaG91bGQgYXNzdW1lIHRoYXQgdGhlIG9yaWdpbmFsIGRhdGFzZXQgbGljZW5zZSBhcHBsaWVzIHRvIHRoZSB3ZWlnaHRzLiBJdCdzIGJlc3QgdG8gc2VlayBsZWdhbCBhZHZpY2UgaWYgeW91IGludGVuZCB0byB1c2UgdGhlIHByZXRyYWluZWQgd2VpZ2h0cyBpbiBhIGNvbW1lcmNpYWwgcHJvZHVjdC5cbiAgLSAqKkNPQ08gUHJldHJhaW5lZCBXZWlnaHRzKiouIFNob3VsZCBmb2xsb3cgW2NvY29kYXRhc2V0IHRlcm1zb2Z1c2VdKGh0dHBzOi8vY29jb2RhdGFzZXQub3JnLyN0ZXJtc29mdXNlKS4gVGhlIGFubm90YXRpb25zIGluIENPQ08gZGF0YXNldCBiZWxvbmcgdG8gdGhlIENPQ08gQ29uc29ydGl1bSBhbmQgYXJlIGxpY2Vuc2VkIHVuZGVyIGEgW0NyZWF0aXZlIENvbW1vbnMgQXR0cmlidXRpb24gNC4wIExpY2Vuc2VdKGh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlKS4gVGhlIENPQ08gQ29uc29ydGl1bSBkb2VzIG5vdCBvd24gdGhlIGNvcHlyaWdodCBvZiB0aGUgaW1hZ2VzLiBVc2Ugb2YgdGhlIGltYWdlcyBtdXN0IGFiaWRlIGJ5IHRoZSBbRmxpY2tyIFRlcm1zIG9mIFVzZV0oaHR0cHM6Ly93d3cuZmxpY2tyLmNvbS9jcmVhdGl2ZWNvbW1vbnMvKS4gVGhlIHVzZXJzIG9mIHRoZSBpbWFnZXMgYWNjZXB0IGZ1bGwgcmVzcG9uc2liaWxpdHkgZm9yIHRoZSB1c2Ugb2YgdGhlIGRhdGFzZXQsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gdGhlIHVzZSBvZiBhbnkgY29waWVzIG9mIGNvcHlyaWdodGVkIGltYWdlcyB0aGF0IHRoZXkgbWF5IGNyZWF0ZSBmcm9tIHRoZSBkYXRhc2V0LlxuICAtICoqUHJldHJhaW5lZCBvbiBtb3JlIHRoYW4gSW1hZ2VOZXQgYW5kIENPQ08qKi4gU2V2ZXJhbCB3ZWlnaHRzIGluY2x1ZGVkIG9yIHJlZmVyZW5jZXMgaGVyZSB3ZXJlIHByZXRyYWluZWQgd2l0aCBwcm9wcmlldGFyeSBkYXRhc2V0cyB0aGF0IEkgZG8gbm90IGhhdmUgYWNjZXNzIHRvLiBUaGVzZSBpbmNsdWRlIHRoZSBGYWNlYm9vayBXU0wsIFNTTCwgU1dTTCBSZXNOZShYdCkgYW5kIHRoZSBHb29nbGUgTm9pc3kgU3R1ZGVudCBFZmZpY2llbnROZXQgbW9kZWxzLiBUaGUgRmFjZWJvb2sgbW9kZWxzIGhhdmUgYW4gZXhwbGljaXQgbm9uLWNvbW1lcmNpYWwgbGljZW5zZSAoQ0MtQlktTkMgNC4wLCBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tyZXNlYXJjaC9zZW1pLXN1cGVydmlzZWQtSW1hZ2VOZXQxSy1tb2RlbHMsIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9va3Jlc2VhcmNoL1dTTC1JbWFnZXMpLiBUaGUgR29vZ2xlIG1vZGVscyBkbyBub3QgYXBwZWFyIHRvIGhhdmUgYW55IHJlc3RyaWN0aW9uIGJleW9uZCB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIChhbmQgSW1hZ2VOZXQgY29uY2VybnMpLiBJbiBlaXRoZXIgY2FzZSwgeW91IHNob3VsZCBjb250YWN0IEZhY2Vib29rIG9yIEdvb2dsZSB3aXRoIGFueSBxdWVzdGlvbnMuXG4qKipcblxuIyBDaXRpbmdcbiAgLSAqKkJpYlRlWCoqXG4gICAgYGBgYmlidGV4XG4gICAgQG1pc2N7bGVvbmRnYXJzZSxcbiAgICAgIGF1dGhvciA9IHtMZW9uZGdhcnNlfSxcbiAgICAgIHRpdGxlID0ge0tlcmFzIENWIEF0dGVudGlvbiBNb2RlbHN9LFxuICAgICAgeWVhciA9IHsyMDIyfSxcbiAgICAgIHB1Ymxpc2hlciA9IHtHaXRIdWJ9LFxuICAgICAgam91cm5hbCA9IHtHaXRIdWIgcmVwb3NpdG9yeX0sXG4gICAgICBkb2kgPSB7MTAuNTI4MS96ZW5vZG8uNjUwNjk0N30sXG4gICAgICBob3dwdWJsaXNoZWQgPSB7XFx1cmx7aHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVsc319XG4gICAgfVxuICAgIGBgYFxuICAtICoqTGF0ZXN0IERPSSoqOiBbIVtET0ldKGh0dHBzOi8vemVub2RvLm9yZy9iYWRnZS8zOTE3Nzc5NjUuc3ZnKV0oaHR0cHM6Ly96ZW5vZG8ub3JnL2JhZGdlL2xhdGVzdGRvaS8zOTE3Nzc5NjUpXG4qKipcblxuXG4iLA==
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiAidGV4dC9tYXJrZG93biIs
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cHM6Ly9naXRodWIuY29tL2xlb25kZ2Fyc2Uva2VyYXNfY3ZfYXR0ZW50aW9uX21vZGVscyIs
ICAgICJrZXl3b3JkcyI6ICJ0ZW5zb3JmbG93IGtlcmFzIGN2IGF0dGVudGlvbiBwcmV0cmFpbmVkIG1vZGVscyBrZWNhbSIs
ICAgICJsaWNlbnNlIjogIkFwYWNoZSAyLjAiLA==
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImtlY2FtIiw=
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva2VjYW0vIiw=
ICAgICJwbGF0Zm9ybSI6IG51bGws
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva2VjYW0vIiw=
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9sZW9uZGdhcnNlL2tlcmFzX2N2X2F0dGVudGlvbl9tb2RlbHMi
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3Qva2VjYW0vMS4zLjE4LyIs
ICAgICJyZXF1aXJlc19kaXN0IjogWw==
ICAgICAgImg1cHkiLA==
ICAgICAgInBpbGxvdyIs
ICAgICAgInRxZG0i
ICAgIF0s
ICAgICJyZXF1aXJlc19weXRob24iOiAiPj0zLjYiLA==
ICAgICJzdW1tYXJ5IjogIlRlbnNvcmZsb3cga2VyYXMgY29tcHV0ZXIgdmlzaW9uIGF0dGVudGlvbiBtb2RlbHMuIEFsaWFzIGtlY2FtLiBodHRwczovL2dpdGh1Yi5jb20vbGVvbmRnYXJzZS9rZXJhc19jdl9hdHRlbnRpb25fbW9kZWxzIiw=
ICAgICJ2ZXJzaW9uIjogIjEuMy4xOCIs
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAxODY4MDM5NSw=
ICAicmVsZWFzZXMiOiB7
ICAgICIxLjMuMTAiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkNWE3YjViYTBlOTAzOTUwMjk1NjUzYTQ5Mzk2NTJmMDgwYTQzZjZhMzBlZGQ0MWIyNjRiNjdhYjVjYjQ5NjE0Iiw=
ICAgICAgICAgICJtZDUiOiAiMjUwZmNmN2UwYmZlNWE0YmMxNDIzZGY3ZGEzMTMxYjAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWUzOTYyMjRlYWE3OTViZjlhYjAwM2NmN2JkMTVlMGFiNTI4ZDM0YTNhYTg2YzQ0YzRiYzg4ZjkyMDI2MjcwYyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyNTBmY2Y3ZTBiZmU1YTRiYzE0MjNkZjdkYTMxMzFiMCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU5Mjg5OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0wOFQwOToxODoyNyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0wOFQwOToxODoyNy44NzgyNzVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kNS9hNy9iNWJhMGU5MDM5NTAyOTU2NTNhNDkzOTY1MmYwODBhNDNmNmEzMGVkZDQxYjI2NGI2N2FiNWNiNDk2MTQva2VjYW0tMS4zLjEwLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJlYmE3MzJiZTJjYWNhNzllMjI0ZWU2MmE0MGQ2MjkzMDMxODExMDY5MTVmZGQyY2Y0MjBkNWM5ZjczMzFhM2M3Iiw=
ICAgICAgICAgICJtZDUiOiAiYmY5NzFkNDQxMWM5YmJlZmE5ZjNhZmNmZWIxY2Y5MGMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMzE1ZjZiNzk0MjY1MTEyMGMzYWJkZmRjMDFiNTdjYzU5Y2Y2ZjVkOTQ3MmRmZWUyNGIyZmE0MGY4NGYwYjEyZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEwLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJiZjk3MWQ0NDExYzliYmVmYTlmM2FmY2ZlYjFjZjkwYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU0MDQ2OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0wOFQwOToxODozMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0wOFQwOToxODozMy4zODExMzRaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9lYi9hNy8zMmJlMmNhY2E3OWUyMjRlZTYyYTQwZDYyOTMwMzE4MTEwNjkxNWZkZDJjZjQyMGQ1YzlmNzMzMWEzYzcva2VjYW0tMS4zLjEwLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTEiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0ZWJhNThhZjQ5NzYxYjNkOTJlNzI0MDgxZWJiMjk1ODg3YWRmMDZjNDA1MWI2ZDZkM2U1MzQwOGJmNTRiNWZjIiw=
ICAgICAgICAgICJtZDUiOiAiMzQ2YjkyZGMxNGVkYTJjNDg0OWQyMzYzODM2ZDViYTMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOGIxNmJkNDc4ZDAxZDY0NDQyYmE2YzM5NzNkYjcwN2FkZjAxNjNkZGJlYWIzMzFiNGM2NDg1Njk1MDU1MDZlMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzNDZiOTJkYzE0ZWRhMmM0ODQ5ZDIzNjM4MzZkNWJhMyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYxMzIwOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0wOFQxMTo0MTowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0wOFQxMTo0MTowMS40MTAzNzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80ZS9iYS81OGFmNDk3NjFiM2Q5MmU3MjQwODFlYmIyOTU4ODdhZGYwNmM0MDUxYjZkNmQzZTUzNDA4YmY1NGI1ZmMva2VjYW0tMS4zLjExLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJiNmM4ZDg2NjYzYzA1N2YxMzQ2Mzk0YTQ5YWY0YTgxZjM0NWRmZjBkZjVlMDllZTI1ZWNiMzRhNWY3ZDFlNWFhIiw=
ICAgICAgICAgICJtZDUiOiAiYzBmNGJmYjBlNmIyODAwNTI1NjFlODJiMGJiMGVjYmEiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWExMWUwY2JlYzBkMmFlZTFhYzhjNmUzZmFlMjM5ZjAwYTM1NjMwYTc1YzczOGU0OWNkYzIxYjEyMDI4M2I2ZiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjExLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJjMGY0YmZiMGU2YjI4MDA1MjU2MWU4MmIwYmIwZWNiYSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU1ODYyMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0wOFQxMTo0MTowNSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0wOFQxMTo0MTowNS44OTUyNzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9iNi9jOC9kODY2NjNjMDU3ZjEzNDYzOTRhNDlhZjRhODFmMzQ1ZGZmMGRmNWUwOWVlMjVlY2IzNGE1ZjdkMWU1YWEva2VjYW0tMS4zLjExLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTIiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxN2IwNTA0MDgyNzA0NTRmMDBiNWJlOTc3YTU1NzY2MTQ1NWEwM2FjMDE3YjZiMTVhMGJmMTIwNDE1OGM2Mjk2Iiw=
ICAgICAgICAgICJtZDUiOiAiNmI2YWE3ZmZhNGY3N2VmNWYzMzcwMGU0MzU5NmVhN2IiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjNhODdjZDQ1MjYzZjQxYmJmYzI1MDdmMDcwZTk2N2MxNzAxN2MyNTRkYWEyYjA1ZTczNmNjNTI1MWZlZmIyZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICI2YjZhYTdmZmE0Zjc3ZWY1ZjMzNzAwZTQzNTk2ZWE3YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYxNzA4Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yM1QxNToxMzozOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yM1QxNToxMzozOS4wMjA4MDVaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xNy9iMC81MDQwODI3MDQ1NGYwMGI1YmU5NzdhNTU3NjYxNDU1YTAzYWMwMTdiNmIxNWEwYmYxMjA0MTU4YzYyOTYva2VjYW0tMS4zLjEyLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyZDU4YzQyOGRmNmZlMzUzMTFhOTU0ZDEyOWZkOGI2OTkyNGZkOTk5YjcwYTYwODkwMDhlYjM1ZTI2OTgxM2JmIiw=
ICAgICAgICAgICJtZDUiOiAiMzc1MjQzOWM4MTkzODdkNzU1YzY4MTZkNzg0MWM4OTkiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNWQ4ZDYwMjkwZGM4NGVmYTQ5MDc1MWIxMGY4Y2NiMzI0MDNhNDZhM2U4NWM2MDcwZWEwY2MxODAwMmY3OWRmNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEyLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIzNzUyNDM5YzgxOTM4N2Q3NTVjNjgxNmQ3ODQxYzg5OSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU2MDg4Miw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wMy0yM1QxNToxMzo0NCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wMy0yM1QxNToxMzo0NC4yNjcxODdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yZC81OC9jNDI4ZGY2ZmUzNTMxMWE5NTRkMTI5ZmQ4YjY5OTI0ZmQ5OTliNzBhNjA4OTAwOGViMzVlMjY5ODEzYmYva2VjYW0tMS4zLjEyLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTMiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI5YjdhNjkwZmNjMzA3NGUzOTc5N2VjMzc5ODBkZWRlY2EwODgwZmJmNGZiZGEzMWRlNzMzNjlmOTc1ZTdhNDYwIiw=
ICAgICAgICAgICJtZDUiOiAiMTRiN2E0ODgyYmM1Y2M2NzNjMzhhNzViNDEzNzU2NWIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDQzZjk3MTQ4YjU5OTAzYWRiMmE2ZjBlZTgyNWU1MDgxYmI4M2IwNTQ3NWM0ZjAzODAxNTM5M2UzNjk5MGNiZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxNGI3YTQ4ODJiYzVjYzY3M2MzOGE3NWI0MTM3NTY1YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYxODA3MSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wMlQwMzo1NTowMSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wMlQwMzo1NTowMS44ODAxNTNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy85Yi83YS82OTBmY2MzMDc0ZTM5Nzk3ZWMzNzk4MGRlZGVjYTA4ODBmYmY0ZmJkYTMxZGU3MzM2OWY5NzVlN2E0NjAva2VjYW0tMS4zLjEzLXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICI0Mzg0NTI2YTkwM2IyMWM1MDRhOTc2MjAyNTgxZjQ5ODlkM2I5ZDhkYzY1ODhlMDFkNDdlYmFhODNjZGIwY2M4Iiw=
ICAgICAgICAgICJtZDUiOiAiMWJjOTJhOGNjMjliZTY4MGYxYzc1ZTRkOGVlNmQyNzMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNDkwZGIxZjE5NGJlNGZhN2Y2MWY5OGI5ZjYwYmM4MzA5ZTdiMTlhN2Q5MDMyNTkzMGMwYTk4Y2Y3ZmExODI0ZSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjEzLnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxYmM5MmE4Y2MyOWJlNjgwZjFjNzVlNGQ4ZWU2ZDI3MyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU2MTk5NCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0wMlQwMzo1NTowNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0wMlQwMzo1NTowNi4zNjE0NTFaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy80My84NC81MjZhOTAzYjIxYzUwNGE5NzYyMDI1ODFmNDk4OWQzYjlkOGRjNjU4OGUwMWQ0N2ViYWE4M2NkYjBjYzgva2VjYW0tMS4zLjEzLnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTQiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwOGJhMzk3MWM3Mjk1ZTdmODZmYzMyZGQ5YzI3MDk2OTRkZmI1MTcyN2RlZWQ4ZDM1OWE2YTkyMmFlMDFkMmE0Iiw=
ICAgICAgICAgICJtZDUiOiAiMDk4YzFjOTRhNzI4ZWY2MTFhNzVhMzU3YjcwM2NhZTYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmE4YjMwMTM2NjQ5MzNmZTQxZjVmMzIxZjVlZThhMmI3ZDA4ODI0N2U4MDQ0YWZmYWFiZjM4YzMwZTg0ZGFmOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwOThjMWM5NGE3MjhlZjYxMWE3NWEzNTdiNzAzY2FlNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYzNTUyMCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xNVQwNzoyNjo0NSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xNVQwNzoyNjo0NS41MDg4MThaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wOC9iYS8zOTcxYzcyOTVlN2Y4NmZjMzJkZDljMjcwOTY5NGRmYjUxNzI3ZGVlZDhkMzU5YTZhOTIyYWUwMWQyYTQva2VjYW0tMS4zLjE0LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIxMmY5ODJjYTIyNTU5N2ZjNzFhOTJjYzYxMmE1YzQyODY4N2NlZTA5MTM0OGM2OTQ3MTNlMTYxNjZkNGNmZGJiIiw=
ICAgICAgICAgICJtZDUiOiAiZjc4OGEzNzc1MDNjMTIxNjQ2MGQxMzhjOTE2MjAxYWMiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOWM3ZmI2YTkwYWFmYjVjMzJkM2Q5YTdjZjZiN2E4ZGQ2Zjg3ZTQ3ODFjNTU5NTAwNWYxOTA5OTRiYmFkNzkyOSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE0LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJmNzg4YTM3NzUwM2MxMjE2NDYwZDEzOGM5MTYyMDFhYyIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU3NjUxMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNC0xNVQwNzoyNjo1MSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNC0xNVQwNzoyNjo1MS4yNTg4NzNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8xMi9mOS84MmNhMjI1NTk3ZmM3MWE5MmNjNjEyYTVjNDI4Njg3Y2VlMDkxMzQ4YzY5NDcxM2UxNjE2NmQ0Y2ZkYmIva2VjYW0tMS4zLjE0LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTUiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmZTg5MmIzMDM2NDcxOGM1YzhmYjVkYmE2OTE2Y2EzYjRkMTFkMjBiOWYwOTcxZTdiZWFlZjVhYjgzYWExMDhlIiw=
ICAgICAgICAgICJtZDUiOiAiMjc1NGZiOGExODgyOWU0ZjIzOGVhZDI3NDU4YWM5ZjIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMjg5ZmE0ZWNmMGZhZTEwMzMzYzlkMmM1ZDQ1ZjhlNDY0M2QxODkxNzQxZDlmYjllYzM2MGJhMzRkNjI1MWM0MiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIyNzU0ZmI4YTE4ODI5ZTRmMjM4ZWFkMjc0NThhYzlmMiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDY1NjU4OSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQxMjoyNjozOCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQxMjoyNjozOC42MjI2NTdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mZS84OS8yYjMwMzY0NzE4YzVjOGZiNWRiYTY5MTZjYTNiNGQxMWQyMGI5ZjA5NzFlN2JlYWVmNWFiODNhYTEwOGUva2VjYW0tMS4zLjE1LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkNGU3ZmNkYmNmZmNlZDQwNmNjZTg4NDgzZDgwZjQ1OTQzMTFhYjhhOTcyNTg5NjM5MGFiOWUyODc2ZGZlY2VjIiw=
ICAgICAgICAgICJtZDUiOiAiMGE4N2Q3NGM2YWU3YjYyMmYyZDc0YWFmMzMxOThjY2UiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMmI2MGMzZTE1ZGJlMWMwMTYzNjY1N2ZhMGE0MjA4NGE3NWJkMzI2NGIyYWFiMDE1OTBjMWYwNjY0Y2E4YzQ2YyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE1LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIwYTg3ZDc0YzZhZTdiNjIyZjJkNzRhYWYzMzE5OGNjZSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDU5ODA2OCw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0xMFQxMjoyNjo0NyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0xMFQxMjoyNjo0Ny4zNjU4OTBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kNC9lNy9mY2RiY2ZmY2VkNDA2Y2NlODg0ODNkODBmNDU5NDMxMWFiOGE5NzI1ODk2MzkwYWI5ZTI4NzZkZmVjZWMva2VjYW0tMS4zLjE1LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTYiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZDc5NzJmMzIxZGI3MDcyMzJiNjg0OGQ0NTMzYjJkZmUxOWEwMzBiNTcxN2UzNjA0OTA2MjRlNzA5Zjk2ZjVmIiw=
ICAgICAgICAgICJtZDUiOiAiZDYwNDhiNGE2ZGRjM2IyNmMwZWY5MWE5NGJhMWQxYTAiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiNTRkMGRlOTlmMzg4YTA3MDQ5NWU1ODRlM2M1ZDZkNjIyMmEwNGU5OGUxNzg4OWRjOWNjZDRmZWJiOGJmNzhiZCI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkNjA0OGI0YTZkZGMzYjI2YzBlZjkxYTk0YmExZDFhMCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDY2OTAyMSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yNFQwNDowMzo0MiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yNFQwNDowMzo0Mi42OTkwMjdaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZC83OS83MmYzMjFkYjcwNzIzMmI2ODQ4ZDQ1MzNiMmRmZTE5YTAzMGI1NzE3ZTM2MDQ5MDYyNGU3MDlmOTZmNWYva2VjYW0tMS4zLjE2LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJhZmNhOWU1MzhkNjI3OGFkMTZmMjBiNGU3OWVkNzY3ZDBmZjEyNGM4YzI2OTVlMDYxM2FlNjgxMDdjZmRmNWViIiw=
ICAgICAgICAgICJtZDUiOiAiMTY0MjE0NjVlNDRlMDdmNDU0M2I5MjExYTMxOTY1YzQiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiYjI4ODgyMDFlMTZmYzc0ZjE0MDgzNDQwMzAzMmFhYmU4MmYyNGE4MzI4ZjE2OTRlNzkyMjA3YTgzM2I2MWYxMiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE2LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICIxNjQyMTQ2NWU0NGUwN2Y0NTQzYjkyMTFhMzE5NjVjNCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYwNzU4Nyw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNS0yNFQwNDowMzo1MCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNS0yNFQwNDowMzo1MC4wNTI0OTZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9hZi9jYS85ZTUzOGQ2Mjc4YWQxNmYyMGI0ZTc5ZWQ3NjdkMGZmMTI0YzhjMjY5NWUwNjEzYWU2ODEwN2NmZGY1ZWIva2VjYW0tMS4zLjE2LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTciOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIyOTYwMDE5OGMxYmY5MTQ3NzE2YWM4NWI5NGJjNTQ2ZDViMjE4YjcwNmQxYmRkMTcyMDIxZmUwMmFlODkxMjcwIiw=
ICAgICAgICAgICJtZDUiOiAiZTI5ZGFkMTE1NTgxMjY2NGJmYWVhZTdkMGJmZjEzZWYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMTg5MTEyNjFkMWRmZmVjZTQ2ZDYzODIxOGM5NWU3M2MwMGViN2ZiYzA1NTdjY2VjYzE5NmUzMTBlNDk1MDFiNiI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlMjlkYWQxMTU1ODEyNjY0YmZhZWFlN2QwYmZmMTNlZiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDY4ODMxNSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoxMTozNiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoxMTozNi40Mzg3ODhaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8yOS82MC8wMTk4YzFiZjkxNDc3MTZhYzg1Yjk0YmM1NDZkNWIyMThiNzA2ZDFiZGQxNzIwMjFmZTAyYWU4OTEyNzAva2VjYW0tMS4zLjE3LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJmOTc5ZDAzMWNjZGRjNWQ3YzQ1YzA4NzBjODZmZjBhZGJlMTBhYzhkZmRkYzE5YjM0ZmZkZjY5MjhiNWZlYzg0Iiw=
ICAgICAgICAgICJtZDUiOiAiZWNmYjZjNDJlYWI0N2FiNzdiNWMwY2NlZjYyOTIwMjYiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiOGEzM2Y0YjBmZDYyMzQ4OTMzODYwMTgyYzljMTk1ZWY3MDJjNDJiMzJhYTFhMzExNjM3MzI0ZGEyYzdjZDViMSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE3LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJlY2ZiNmM0MmVhYjQ3YWI3N2I1YzBjY2VmNjI5MjAyNiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYyNjYxMiw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0wM1QxMjoxMTo0NCIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0wM1QxMjoxMTo0NC4xMzc4MzJaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9mOS83OS9kMDMxY2NkZGM1ZDdjNDVjMDg3MGM4NmZmMGFkYmUxMGFjOGRmZGRjMTliMzRmZmRmNjkyOGI1ZmVjODQva2VjYW0tMS4zLjE3LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0s
ICAgICIxLjMuMTgiOiBb
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIwNWZlMGFmYjhlMjNmMTAwYjExNTI3ODcxYzhjNTQ2NzE0MTZkNTMwODZmMzgzMzMwYzYxMmE4ZGRkYTIyYzVmIiw=
ICAgICAgICAgICJtZDUiOiAiYTY0ZGRjY2UxMjJiNWE4NjFlNmY2ZDU0YmFiYzdjNGIiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiMDU5NTBhMTJjOTZiZWE4ZGJhZDAxYmEwMzA1YTIwZmMxNDgxNDQ5NzJhMjczOTE3Njk3NGEzZjRjODI3MTJlNSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJhNjRkZGNjZTEyMmI1YTg2MWU2ZjZkNTRiYWJjN2M0YiIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAiYmRpc3Rfd2hlZWwiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAicHkzIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDcwMjgxOSw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0yOFQxNDowODoxMyIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0yOFQxNDowODoxMy4wMzgyMTNaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8wNS9mZS8wYWZiOGUyM2YxMDBiMTE1Mjc4NzFjOGM1NDY3MTQxNmQ1MzA4NmYzODMzMzBjNjEyYThkZGRhMjJjNWYva2VjYW0tMS4zLjE4LXB5My1ub25lLWFueS53aGwiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfSw=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICIzNWYzMzFjM2YxMDRmZjBlNjVmODk2NThkNjNlNzQzZTA1OGRhYTkwYTlhNDk4MWU1M2U2NmUzNDQyZTIzZDk3Iiw=
ICAgICAgICAgICJtZDUiOiAiZDI2NDM0NGU2ZWQwOWE2ZDE1MmI1ZWY1YThlOTBhN2QiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZWMwYWEyNmFhMjJmZjFmNTRlYTNlZTM5NmI4ZGE1ZWRhMzRiMzIyNDcxNDI4ODU2ZDI4YTY5YWY4MzgyODFiMyI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAia2VjYW0tMS4zLjE4LnRhci5neiIs
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkMjY0MzQ0ZTZlZDA5YTZkMTUyYjVlZjVhOGU5MGE3ZCIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogIj49My42Iiw=
ICAgICAgICAic2l6ZSI6IDYzOTQ3Niw=
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAyMy0wNi0yOFQxNDowODoxOSIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAyMy0wNi0yOFQxNDowODoxOS4yMTU0NzBaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy8zNS9mMy8zMWMzZjEwNGZmMGU2NWY4OTY1OGQ2M2U3NDNlMDU4ZGFhOTBhOWE0OTgxZTUzZTY2ZTM0NDJlMjNkOTcva2VjYW0tMS4zLjE4LnRhci5neiIs
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMDVmZTBhZmI4ZTIzZjEwMGIxMTUyNzg3MWM4YzU0NjcxNDE2ZDUzMDg2ZjM4MzMzMGM2MTJhOGRkZGEyMmM1ZiIs
ICAgICAgICAibWQ1IjogImE2NGRkY2NlMTIyYjVhODYxZTZmNmQ1NGJhYmM3YzRiIiw=
ICAgICAgICAic2hhMjU2IjogIjA1OTUwYTEyYzk2YmVhOGRiYWQwMWJhMDMwNWEyMGZjMTQ4MTQ0OTcyYTI3MzkxNzY5NzRhM2Y0YzgyNzEyZTUi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImtlY2FtLTEuMy4xOC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiYTY0ZGRjY2UxMjJiNWE4NjFlNmY2ZDU0YmFiYzdjNGIiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogImJkaXN0X3doZWVsIiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInB5MyIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiA3MDI4MTks
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMjhUMTQ6MDg6MTMiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMjhUMTQ6MDg6MTMuMDM4MjEzWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMDUvZmUvMGFmYjhlMjNmMTAwYjExNTI3ODcxYzhjNTQ2NzE0MTZkNTMwODZmMzgzMzMwYzYxMmE4ZGRkYTIyYzVmL2tlY2FtLTEuMy4xOC1weTMtbm9uZS1hbnkud2hsIiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0s
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiMzVmMzMxYzNmMTA0ZmYwZTY1Zjg5NjU4ZDYzZTc0M2UwNThkYWE5MGE5YTQ5ODFlNTNlNjZlMzQ0MmUyM2Q5NyIs
ICAgICAgICAibWQ1IjogImQyNjQzNDRlNmVkMDlhNmQxNTJiNWVmNWE4ZTkwYTdkIiw=
ICAgICAgICAic2hhMjU2IjogImVjMGFhMjZhYTIyZmYxZjU0ZWEzZWUzOTZiOGRhNWVkYTM0YjMyMjQ3MTQyODg1NmQyOGE2OWFmODM4MjgxYjMi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImtlY2FtLTEuMy4xOC50YXIuZ3oiLA==
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZDI2NDM0NGU2ZWQwOWE2ZDE1MmI1ZWY1YThlOTBhN2QiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6ICI+PTMuNiIs
ICAgICAgInNpemUiOiA2Mzk0NzYs
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMjMtMDYtMjhUMTQ6MDg6MTkiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMjMtMDYtMjhUMTQ6MDg6MTkuMjE1NDcwWiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvMzUvZjMvMzFjM2YxMDRmZjBlNjVmODk2NThkNjNlNzQzZTA1OGRhYTkwYTlhNDk4MWU1M2U2NmUzNDQyZTIzZDk3L2tlY2FtLTEuMy4xOC50YXIuZ3oiLA==
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
