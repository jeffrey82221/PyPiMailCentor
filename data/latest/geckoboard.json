ew==
ICAiaW5mbyI6IHs=
ICAgICJhdXRob3IiOiAiU2VlIENvbnRyaWJ1dG9ycyIs
ICAgICJhdXRob3JfZW1haWwiOiAibmFwYWxtMjU1QGdtYWlsLmNvbSIs
ICAgICJidWd0cmFja191cmwiOiBudWxsLA==
ICAgICJjbGFzc2lmaWVycyI6IFtdLA==
ICAgICJkZXNjcmlwdGlvbiI6ICJIZWxwIG9uIG1vZHVsZSBnZWNrb2JvYXJkOlxuXG5OQU1FXG4gICAgZ2Vja29ib2FyZCAtIEdlY2tvYm9hcmQgQVBJIEludGVyZmFjZSAoVW5vZmZpY2lhbCkuXG5cbkZJTEVcbiAgICBnZWNrb2JvYXJkL2dlY2tvYm9hcmQucHlcblxuREVTQ1JJUFRJT05cbiAgICBUaGlzIG1vZHVsZS9jbGFzcyBpcyBkZXNpZ25lZCB0byB3b3JrIHdpdGggdGhlIEdlY2tvYm9hcmQgQVBJLlxuICAgIFxuICAgIEdlY2tvYm9hcmQgY2FuIGJlIGZvdW5kIGhlcmU6XG4gICAgICAgIGh0dHBzOi8vd3d3LmdlY2tvYm9hcmQuY29tL1xuICAgIFxuICAgIEdlY2tvYm9hcmQgQVBJIGRvY3VtZW50YXRpb24gY2FuIGJlIGZvdW5kIGhlcmU6XG4gICAgICAgIGh0dHBzOi8vZGV2ZWxvcGVyLmdlY2tvYm9hcmQuY29tLyNpbnRyb2R1Y3Rpb25cbiAgICBcbiAgICBFeGFtcGxlczpcbiAgICAgICAgPj4+IGltcG9ydCBvc1xuICAgICAgICA+Pj4gZnJvbSBnZWNrb2JvYXJkIGltcG9ydCBHZWNrb1xuICAgICAgICA+Pj4gZ2Vja28gPSBHZWNrbyhvcy5lbnZpcm9uWydHRUNLT0FQSSddKVxuXG5DTEFTU0VTXG4gICAgX19idWlsdGluX18ub2JqZWN0XG4gICAgICAgIEdlY2tvXG4gICAgXG4gICAgY2xhc3MgR2Vja28oX19idWlsdGluX18ub2JqZWN0KVxuICAgICB8ICBHZWNrb2JvYXJkIEFQSSBJbnRlcmZhY2UuXG4gICAgIHwgIFxuICAgICB8ICBBdHRyaWJ1dGVzOlxuICAgICB8ICAgICAgYXBpX2tleSAoc3RyKTogR2Vja29ib2FyZCBBUEkgS2V5LlxuICAgICB8ICAgICAgdXJsIChzdHIpOiBHZWNrb2JvYXJkIEFQSSBVcmwuXG4gICAgIHwgIFxuICAgICB8ICBNZXRob2RzIGRlZmluZWQgaGVyZTpcbiAgICAgfCAgXG4gICAgIHwgIF9faW5pdF9fKHNlbGYsIGFwaV9rZXkpXG4gICAgIHwgICAgICBJbml0aWFsaXplIEdlY2tvIG9iamVjdC5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgQXJnczpcbiAgICAgfCAgICAgICAgICBhcGlfa2V5IChzdHIpOiBHZWNrb2JvYXJkIEFQSSBLZXkuXG4gICAgIHwgIFxuICAgICB8ICBsZWFkZXJib2FyZChzZWxmLCB3aWRnZXRfa2V5LCBpdGVtcywgKiprd2FyZ3MpXG4gICAgIHwgICAgICBQdXNoIHRvIGxlYWRlcmJvYXJkIHdpZGdldC5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgQXJnczpcbiAgICAgfCAgICAgICAgICB3aWRnZXRfa2V5IChzdHIpOiBVbmlxdWUgR2Vja29ib2FyZCB3aWRnZXQga2V5LlxuICAgICB8ICAgICAgICAgIGl0ZW1zIChMaXN0W2xpc3RdKTogU2VyaWVzIG9mIGRhdGEgdG8gcHVibGlzaCB0byB0aGUgbGVhZGVyYm9hcmRcbiAgICAgfCAgICAgICAgICAqKmt3YXJnczogQWRkaXRpb25hbCBwYXJhbWV0ZXJzLlxuICAgICB8ICAgICAgICAgICAgICBmb3JtYXQgKHN0cik6IE9wdGlvbmFsIHBvc3NpYmxlIHZhbHVlcyBhcmUgXCJkZWNpbWFsXCIsIFwicGVyY2VudFwiXG4gICAgIHwgICAgICAgICAgICAgICAgICBhbmQgXCJjdXJyZW5jeVwiLiBUaGUgZGVmYXVsdCBpcyBcImRlY2ltYWxcIi5cbiAgICAgfCAgICAgICAgICAgICAgdW5pdCAoc3RyKTogT3B0aW9uYWwgV2hlbiB0aGUgZm9ybWF0IGlzIGN1cnJlbmN5IHRoaXMgbXVzdCBiZVxuICAgICB8ICAgICAgICAgICAgICAgICAgYW4gSVNPIDQyMTcgY3VycmVuY3kgY29kZS4gRS5nLiBcIkdCUFwiLCBcIlVTRFwiLCBcIkVVUlwiLlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBFeGFtcGxlczpcbiAgICAgfCAgICAgICAgICA+Pj4gaW1wb3J0IG9zXG4gICAgIHwgICAgICAgICAgPj4+IGZyb20gZ2Vja29ib2FyZCBpbXBvcnQgR2Vja29cbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28gPSBHZWNrbyhvcy5lbnZpcm9uWydHRUNLT0FQSSddKVxuICAgICB8ICAgICAgICAgID4+PiB3aWRnZXRfa2V5PScxODYyODUtMGJhOWNkNjMtZWZkMC00YTllLWIzN2EtOGJhMGNmMjc2OTRjJ1xuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxlYWRlcmJvYXJkKHdpZGdldF9rZXksIFtbJ1BldGVyJywgMjM0LjRdLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWydQYXRyaWNrJywgMjMyXV0pXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxlYWRlcmJvYXJkKHdpZGdldF9rZXksIFtbJ1BldGVyJywgMjM0LjQsIDJdLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWydQYXRyaWNrJywgMjMyLCAxXV0pXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxlYWRlcmJvYXJkKHdpZGdldF9rZXksIFtbJ1BldGVyJywgMzRdLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWydQYXRyaWNrJywgMzJdXSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdD0ncGVyY2VudCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxlYWRlcmJvYXJkKHdpZGdldF9rZXksIFtbJ1BldGVyJywgMzQuNCwgMl0sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ1BhdHJpY2snLCAzMiwgMV1dLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjdXJyZW5jeScsIHVuaXQ9J3VzZCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBSZXR1cm5zOlxuICAgICB8ICAgICAgICAgIE5vbmUgb3Igb2JqZWN0OiBOb25lIGlmIGVycm9yLCByZXF1ZXN0cy5yZXNwb25zZSBpZiBzdWNjZXNzZnVsLlxuICAgICB8ICBcbiAgICAgfCAgbGluZShzZWxmLCB3aWRnZXRfa2V5LCBzZXJpZXMsICoqa3dhcmdzKVxuICAgICB8ICAgICAgUHVzaCB0byBsaW5lIGdyYXBoIHdpZGdldC5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgQXJnczpcbiAgICAgfCAgICAgICAgICB3aWRnZXRfa2V5IChzdHIpOiBVbmlxdWUgR2Vja29ib2FyZCB3aWRnZXQga2V5LlxuICAgICB8ICAgICAgICAgIHNlcmllcyAoTGlzdFtkaWN0XSk6IFNlcmllcyBvZiBkYXRhIHRvIHB1Ymxpc2ggdG8gdGhlIHdpZGdldC5cbiAgICAgfCAgICAgICAgICAqKmt3YXJnczogQWRkaXRpb25hbCBwYXJhbWV0ZXJzLlxuICAgICB8ICAgICAgICAgICAgICB0eXBlIChzdHIpOiBTZXQgeC1heGlzIHR5cGUuIERlZmF1bHRzIHRvICdzdGFuZGFyZCcuXG4gICAgIHwgICAgICAgICAgICAgICAgICBTcGVjaWZ5aW5nIHRoZSBzdHJpbmcgXCJkYXRldGltZVwiIHdpbGwgY2F1c2UgYWxsIFggYXhpc1xuICAgICB8ICAgICAgICAgICAgICAgICAgdmFsdWVzIHRvIGJlIGludGVycHJldGVkIGFzIGFuIElTTyA4NjAxIGRhdGUvdGltZS5cbiAgICAgfCAgICAgICAgICAgICAgICAgIFBhcnRpYWwgZGF0ZXMgKGUuZy4gMjAxNC0xMCBmb3IgT2N0b2JlciAyMDE0KSBhcmVcbiAgICAgfCAgICAgICAgICAgICAgICAgIHN1cHBvcnRlZC4gU2VlIGJlbG93IGZvciBkZXRhaWxzIG9uIGhvdyBkYXRldGltZXMgYXJlXG4gICAgIHwgICAgICAgICAgICAgICAgICByZW5kZXJlZCBvbiB0aGUgY2hhcnQuIExlYXZpbmcgdHlwZSBlbXB0eSBvciBzZXR0aW5nXG4gICAgIHwgICAgICAgICAgICAgICAgICBpdCB0byBzdGFuZGFyZCB3aWxsIGNhdXNlIFggdmFsdWVzIHRvIGJlIGludGVycHJldGVkXG4gICAgIHwgICAgICAgICAgICAgICAgICB0aGUgdXN1YWwgd2F5LlxuICAgICB8ICAgICAgICAgICAgICBmb3JtYXQgKHN0cik6IFNldCB5LWF4aXMgZm9ybWF0LiBEZWZhdWx0cyB0byAnZGVjaW1hbCcuXG4gICAgIHwgICAgICAgICAgICAgICAgICBJZiBnaXZlbiwgdGhpcyBzdHJpbmcgd2lsbCByZXByZXNlbnQgdGhlIGZvcm1hdCBvZlxuICAgICB8ICAgICAgICAgICAgICAgICAgdGhlIFkgYXhpcyBhbmQgd2lsbCBiZSBkaXNwbGF5ZWQgYWNjb3JkaW5nbHkuXG4gICAgIHwgICAgICAgICAgICAgICAgICBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwiZGVjaW1hbFwiLCBcInBlcmNlbnRcIiBhbmQgXCJjdXJyZW5jeVwiLlxuICAgICB8ICAgICAgICAgICAgICB1bml0IChzdHIpOiBTZXQgeS1heGlzIHVuaXQgdHlwZSBmb3IgdGhlICdjdXJyZW5jeScgZm9ybWF0LlxuICAgICB8ICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gJ1VTRCcuXG4gICAgIHwgICAgICAgICAgICAgICAgICBXaGVuIHRoZSBmb3JtYXQgaXMgY3VycmVuY3kgdGhpcyBtdXN0IGJlXG4gICAgIHwgICAgICAgICAgICAgICAgICBhbiBJU08gNDIxNyBjdXJyZW5jeSBjb2RlLiBFLmcuIFwiR0JQXCIsIFwiVVNEXCIsIFwiRVVSXCJcbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgRXhhbXBsZXM6XG4gICAgIHwgICAgICAgICAgPj4+IGltcG9ydCBvc1xuICAgICB8ICAgICAgICAgID4+PiBmcm9tIGdlY2tvYm9hcmQgaW1wb3J0IEdlY2tvXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvID0gR2Vja28ob3MuZW52aXJvblsnR0VDS09BUEknXSlcbiAgICAgfCAgICAgICAgICA+Pj4gd2lkZ2V0X2tleSA9ICcxODYyODUtNGI0NzIzODEtY2Y0Ny00MjJlLTllNmEtZTAzZmVlMTIzYWU3J1xuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxpbmUod2lkZ2V0X2tleSwgICAgICAgICAgICAgICAgICAgICAgICAgICBbeyduYW1lJzogJ0JyYWQnLCAnZGF0YSc6IFsxLCAyLCAzLCA0XX0sICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnbmFtZSc6ICdSaWNoJywgJ2RhdGEnOiBbNCwgMywgMiwgMV19LCAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J25hbWUnOiAnQm9iJywgJ2RhdGEnOiBbMSwgMywgMiwgNF19XSlcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28ubGluZSh3aWRnZXRfa2V5LCAgICAgICAgICAgICAgICAgICAgICAgICAgIFt7J25hbWUnOiAnQnJhZCcsICdkYXRhJzogWzEsIDIsIDMsIDRdfSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyduYW1lJzogJ1JpY2gnLCAnZGF0YSc6IFs0LCAzLCAyLCAxXX1dLCAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9J3NlY29uZGFyeScpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLmxpbmUod2lkZ2V0X2tleSwgICAgICAgICAgICAgICAgICAgICAgICAgICBbeyduYW1lJzogJ0JyYWQnLCAnZGF0YSc6IFsxLCAyLCAzLCA0XX0sICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnbmFtZSc6ICdSaWNoJywgJ2RhdGEnOiBbNCwgMywgMiwgMV19LCAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J25hbWUnOiAnQm9iJywgJ2RhdGEnOiBbMSwgMywgMiwgNF19XSwgICAgICAgICAgICAgICAgICAgICAgICAgIHhfYXhpcz1bJzIwMTYtMDEnLCAnMjAxNi0wMicsICcyMDE2LTAzJywgJzIwMTYtMDQnXSlcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28ubGluZSh3aWRnZXRfa2V5LCAgICAgICAgICAgICAgICAgICAgICAgICAgIFt7J25hbWUnOiAnQnJhZCcsICdkYXRhJzogWzEsIDIsIDMsIDRdfSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyduYW1lJzogJ1JpY2gnLCAnZGF0YSc6IFs0LCAzLCAyLCAxXX0sICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnbmFtZSc6ICdCb2InLCAnZGF0YSc6IFsxLCAzLCAyLCA0XX1dLCAgICAgICAgICAgICAgICAgICAgICAgICAgeF9heGlzPVsnMjAxNi0wMScsICcyMDE2LTAyJywgJzIwMTYtMDMnLCAnMjAxNi0wNCddLCAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0PSdjdXJyZW5jeScsIHVuaXQ9J1VTRCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBSZXR1cm5zOlxuICAgICB8ICAgICAgICAgIE5vbmUgb3Igb2JqZWN0OiBOb25lIGlmIGVycm9yLCByZXF1ZXN0cy5yZXNwb25zZSBpZiBzdWNjZXNzZnVsLlxuICAgICB8ICBcbiAgICAgfCAgbWV0ZXIoc2VsZiwgd2lkZ2V0X2tleSwgdmFsdWUsIG1pbl92YWx1ZT0wLCBtYXhfdmFsdWU9MTAwKVxuICAgICB8ICAgICAgUHVzaCB0byBnZWNrby1vLW1ldGVyIHdpZGdldC5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgQXJnczpcbiAgICAgfCAgICAgICAgICB3aWRnZXRfa2V5IChzdHIpOiBVbmlxdWUgR2Vja29ib2FyZCB3aWRnZXQga2V5LlxuICAgICB8ICAgICAgICAgIHZhbHVlIChpbnQpOiBQcmltYXJ5IHZhbHVlIG9mIHRoZSB3aWRnZXQuXG4gICAgIHwgICAgICAgICAgbWluX3ZhbHVlIChpbnQpOiBNaW5pbXVtIHZhbHVlIGZvciB0aGUgd2lkZ2V0IHNjYWxlLlxuICAgICB8ICAgICAgICAgICAgICBEZWZhdWx0cyB0byAwXG4gICAgIHwgICAgICAgICAgbWF4X3ZhbHVlIChpbnQpOiBNYXhpbXVtIHZhbHVlIGZvciB0aGUgd2lkZ2V0IHNjYWxlLlxuICAgICB8ICAgICAgICAgICAgICBEZWZhdWx0cyB0byAxMDBcbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgRXhhbXBsZXM6XG4gICAgIHwgICAgICAgICAgPj4+IGltcG9ydCBvc1xuICAgICB8ICAgICAgICAgID4+PiBmcm9tIGdlY2tvYm9hcmQgaW1wb3J0IEdlY2tvXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvID0gR2Vja28ob3MuZW52aXJvblsnR0VDS09BUEknXSlcbiAgICAgfCAgICAgICAgICA+Pj4gd2lkZ2V0X2tleSA9ICcxODYyODUtY2Y0YWZiZjktZTcwZi00MGY2LWE5NjUtZWQ5ODE3Y2VhNDI4J1xuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLm1ldGVyKHdpZGdldF9rZXksIDY5KVxuICAgICB8ICAgICAgICAgIDxSZXNwb25zZSBbMjAwXT5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgICAgID4+PiBnZWNrby5tZXRlcih3aWRnZXRfa2V5LCA2OTAsIDAsIDEwMDApXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBSZXR1cm5zOlxuICAgICB8ICAgICAgICAgIE5vbmUgb3Igb2JqZWN0OiBOb25lIGlmIGVycm9yLCByZXF1ZXN0cy5yZXNwb25zZSBpZiBzdWNjZXNzZnVsLlxuICAgICB8ICBcbiAgICAgfCAgbnVtYmVyKHNlbGYsIHdpZGdldF9rZXksIHZhbHVlMSwgdmFsdWUyPU5vbmUsICoqa3dhcmdzKVxuICAgICB8ICAgICAgUHVzaCB0byBudW1iZXIgd2lkZ2V0LlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBBcmdzOlxuICAgICB8ICAgICAgICAgIHdpZGdldF9rZXkgKHN0cik6IFVuaXF1ZSBHZWNrb2JvYXJkIHdpZGdldCBrZXkuXG4gICAgIHwgICAgICAgICAgdmFsdWUxIChpbnQpOiBudW1iZXIgdG8gcHVibGlzaCB0byBHZWNrb2JvYXJkLlxuICAgICB8ICAgICAgICAgIHZhbHVlMiAoaW50fGxpc3QpOiBudW1iZXIgb3IgdHJlbmRsaW5lIHRvIHB1Ymxpc2ggdG8gR2Vja29ib2FyZC5cbiAgICAgfCAgICAgICAgICAgICAgQW4gKGludCkgaXMgdXNlZCBmb3IgY29tcGFyaXNvbiB0byB2YWx1ZTEuXG4gICAgIHwgICAgICAgICAgICAgIEEgKGxpc3QpIGlzIHVzZWQgdG8gcGxvdCBhIHRyZW5kbGluZS5cbiAgICAgfCAgICAgICAgICAqKmt3YXJnczogQWRkaXRpb25hbCBwYXJhbWV0ZXJzLlxuICAgICB8ICAgICAgICAgICAgICB0ZXh0IChzdHIpOiBMYWJlbCB0byBhcHBlYXIgYWZ0ZXIgdGhlIHByaW1hcnkgdmFsdWUuXG4gICAgIHwgICAgICAgICAgICAgIHByZWZpeCAoc3RyKTogTGFiZWwgdG8gYXBwZWFyIGJlZm9yZSB0aGUgcHJpbWFyeSB2YWx1ZS5cbiAgICAgfCAgICAgICAgICAgICAgYWJzb2x1dGUgKGJvb2wpOiBDb21wYXJpc29uIHVzaW5nIGFic29sdXRlIHZhbHVlcy5cbiAgICAgfCAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIEZhbHNlLlxuICAgICB8ICAgICAgICAgICAgICAgICAgSWYgVHJ1ZSwgdXNlIGFic29sdXRlIHZhbHVlcyBmb3IgY29tcGFyaXNvbi5cbiAgICAgfCAgICAgICAgICAgICAgICAgIElmIEZhbHNlLCB1c2UgcGVyY2VudGFnZXMgZm9yIGNvbXBhcmlzb25cbiAgICAgfCAgICAgICAgICAgICAgcmV2ZXJzZSAoYm9vbCk6IFJldmVyc2UgY29tcGFyaXNvbi4gRGVmYXVsdHMgdG8gRmFsc2UuXG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgIEV4YW1wbGVzOlxuICAgICB8ICAgICAgICAgID4+PiBpbXBvcnQgb3NcbiAgICAgfCAgICAgICAgICA+Pj4gZnJvbSBnZWNrb2JvYXJkIGltcG9ydCBHZWNrb1xuICAgICB8ICAgICAgICAgID4+PiBnZWNrbyA9IEdlY2tvKG9zLmVudmlyb25bJ0dFQ0tPQVBJJ10pXG4gICAgIHwgICAgICAgICAgPj4+IHdpZGdldF9rZXkgPSAnMTg2Mjg1LTg2YWI1OWZmLTU2NjItNDg2Ny1hOGZmLTBkODhhM2VmYzk2NidcbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgICAgID4+PiBnZWNrby5udW1iZXIod2lkZ2V0X2tleSwgMTAwKVxuICAgICB8ICAgICAgICAgIDxSZXNwb25zZSBbMjAwXT5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgICAgID4+PiBnZWNrby5udW1iZXIod2lkZ2V0X2tleSwgMTAwLCAyMDApXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLm51bWJlcih3aWRnZXRfa2V5LCAxMDAsIFsxMCwgNSwgMTUsIDhdLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD0nTWlsbGlvbicsIHByZWZpeD0nJCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLm51bWJlcih3aWRnZXRfa2V5LCAxMDAsIDIwMCwgYWJzb2x1dGU9VHJ1ZSlcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28ubnVtYmVyKHdpZGdldF9rZXksIDEwMCwgMjAwLCBhYnNvbHV0ZT1UcnVlLCByZXZlcnNlPVRydWUpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLm51bWJlcih3aWRnZXRfa2V5LCAxMDAsIDIwMCwgdGV4dD0nTWlsbGlvbicsIHByZWZpeD0nJCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBSZXR1cm5zOlxuICAgICB8ICAgICAgICAgIE5vbmUgb3Igb2JqZWN0OiBOb25lIGlmIGVycm9yLCByZXF1ZXN0cy5yZXNwb25zZSBpZiBzdWNjZXNzZnVsLlxuICAgICB8ICBcbiAgICAgfCAgcGllKHNlbGYsIHdpZGdldF9rZXksIGl0ZW1zLCBjb2xvcj0nJylcbiAgICAgfCAgICAgIFB1c2ggdG8gcGllIGdyYXBoIHdpZGdldC5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgQXJnczpcbiAgICAgfCAgICAgICAgICB3aWRnZXRfa2V5IChzdHIpOiBVbmlxdWUgR2Vja29ib2FyZCB3aWRnZXQga2V5LlxuICAgICB8ICAgICAgICAgIGl0ZW1zIChMaXN0W2RpY3RdKTogSXRlbXMgdG8gcHVzaCB0byB0aGUgd2lkZ2V0LlxuICAgICB8ICAgICAgICAgIGNvbG9yIChzdHIpOiBQaWUgc2xpY2UgY29sb3IgZm9yIGFsbCBpdGVtcy5cbiAgICAgfCAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gJycuXG4gICAgIHwgICAgICAgICAgICAgIE1heSBiZSBvdmVycmlkZGVuIHBlciBpdGVtLCB2aWEgdGhlIGl0ZW1zIGlucHV0LlxuICAgICB8ICAgICAgICAgICAgICBNdXN0IGJlIHZhbGlkIGhleCBjb2xvciBjb2RlcyBsaWtlICdjMGMwYzAnLlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBFeGFtcGxlczpcbiAgICAgfCAgICAgICAgICA+Pj4gaW1wb3J0IG9zXG4gICAgIHwgICAgICAgICAgPj4+IGZyb20gZ2Vja29ib2FyZCBpbXBvcnQgR2Vja29cbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28gPSBHZWNrbyhvcy5lbnZpcm9uWydHRUNLT0FQSSddKVxuICAgICB8ICAgICAgICAgID4+PiB3aWRnZXRfa2V5ID0gJzE4NjI4NS0xMjVkYzk3ZC1kZmEwLTQ4OGItYTNiYS05Yzk4YTI1NDllOGInXG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28ucGllKHdpZGdldF9rZXksIFt7J0JyYWQnOiAyNTV9LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnUmljaCc6IDEwNTB9LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnQm9iJzogMTg3fV0pXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnBpZSh3aWRnZXRfa2V5LCBbeydCcmFkJzogeyd2YWx1ZSc6IDI1NSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogJ2ZmMDAwMCd9fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J1JpY2gnOiB7J3ZhbHVlJzogMTA1MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogJzAwMDBmZid9fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J0JvYic6IHsndmFsdWUnOiAxODcsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogJzAwZmYwMCd9fV0pXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnBpZSh3aWRnZXRfa2V5LCBbeydCcmFkJzogeyd2YWx1ZSc6IDI1NSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogJ2ZmMDAwMCd9fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J1JpY2gnOiB7J3ZhbHVlJzogMTA1MCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogJzAwMDBmZid9fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J0JvYic6IDE4N31dLCAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9J2MwYzBjMCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBSZXR1cm5zOlxuICAgICB8ICAgICAgICAgIE5vbmUgb3Igb2JqZWN0OiBOb25lIGlmIGVycm9yLCByZXF1ZXN0cy5yZXNwb25zZSBpZiBzdWNjZXNzZnVsLlxuICAgICB8ICBcbiAgICAgfCAgcHVzaChzZWxmLCB3aWRnZXRfa2V5LCBkYXRhKVxuICAgICB8ICAgICAgUHVzaCBkYXRhIHRvIEdlY2tvYm9hcmQuXG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgIEFyZ3M6XG4gICAgIHwgICAgICAgICAgd2lkZ2V0X2tleSAoc3RyKTogVW5pcXVlIEdlY2tvYm9hcmQgd2lkZ2V0IGtleS5cbiAgICAgfCAgICAgICAgICBkYXRhIChkaWN0KTogRGF0YSB0byBwb3N0IHRvIEdlY2tvYm9hcmQuXG4gICAgIHwgICAgICAgICAgU2hvdWxkIGJlIGluIHRoZSBmb3JtIG9mOlxuICAgICB8ICAgICAgICAgICAgICB7J2l0ZW0nOiBbXX1cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgUmV0dXJuczpcbiAgICAgfCAgICAgICAgICBOb25lIG9yIG9iamVjdDogTm9uZSBpZiBlcnJvciwgcmVxdWVzdHMucmVzcG9uc2UgaWYgc3VjY2Vzc2Z1bC5cbiAgICAgfCAgXG4gICAgIHwgIHJhZyhzZWxmLCB3aWRnZXRfa2V5LCBpdGVtcywgcHJlZml4PScnLCByZXZlcnNlPUZhbHNlKVxuICAgICB8ICAgICAgUHVzaCB0byBSQUcgKFJlZCBBbWJlciBHcmVlbikgdmlzdWFsaXphdGlvbiB3aWRnZXQuXG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgIEFyZ3M6XG4gICAgIHwgICAgICAgICAgd2lkZ2V0X2tleSAoc3RyKTogVW5pcXVlIEdlY2tvYm9hcmQgd2lkZ2V0IGtleS5cbiAgICAgfCAgICAgICAgICBpdGVtcyAoTGlzdFtkaWN0XSk6IEl0ZW1zIHRvIHB1c2ggdG8gdGhlIHdpZGdldC5cbiAgICAgfCAgICAgICAgICBwcmVmaXggKHN0cik6IFByZWZpeCB0byBhcHBlbmQgdG8gYWxsIGl0ZW1zLlxuICAgICB8ICAgICAgICAgICAgICBEZWZhdWx0cyB0byAnJy5cbiAgICAgfCAgICAgICAgICAgICAgTWF5IGJlIG92ZXJyaWRkZW4gcGVyIGl0ZW0sIHZpYSB0aGUgaXRlbXMgaW5wdXQuXG4gICAgIHwgICAgICAgICAgICAgIFBlcmNlbnQgc3ltYm9sICglKSBpcyB0cmVhdGVkIGFzIGEgc3VmZml4LlxuICAgICB8ICAgICAgICAgIHJldmVyc2UgKGJvb2wpOiBSZXZlcnNlIHRoZSBsaXN0IG9yZGVyLiBEZWZhdWx0cyB0byBGYWxzZS5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgRXhhbXBsZXM6XG4gICAgIHwgICAgICAgICAgPj4+IGltcG9ydCBvc1xuICAgICB8ICAgICAgICAgID4+PiBmcm9tIGdlY2tvYm9hcmQgaW1wb3J0IEdlY2tvXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvID0gR2Vja28ob3MuZW52aXJvblsnR0VDS09BUEknXSlcbiAgICAgfCAgICAgICAgICA+Pj4gd2lkZ2V0X2tleSA9ICcxODYyODUtNjQ5MjEzYzctYzVhYy00ZDU4LWEzZTUtNmQ5MDY2YWVlMjg4J1xuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnJhZyh3aWRnZXRfa2V5LCBbeydCcmFkJzogMjU1fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J1JpY2gnOiAxMDUwfSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J0JvYic6IDE4N31dKVxuICAgICB8ICAgICAgICAgIDxSZXNwb25zZSBbMjAwXT5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgICAgID4+PiBnZWNrby5yYWcod2lkZ2V0X2tleSwgW3snQnJhZCc6IDI1NX0sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeydSaWNoJzogMTA1MH0sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeydCb2InOiAxODd9XSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZpeD0nJCcpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnJhZyh3aWRnZXRfa2V5LCBbeydCcmFkJzogMjU1fSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J1JpY2gnOiAxMDUwfSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7J0JvYic6IDE4N31dLCAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZml4PSclJylcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28ucmFnKHdpZGdldF9rZXksICAgICAgICAgICAgICAgICAgICAgICAgICBbeydCcmFkJzogeyd2YWx1ZSc6IDI1NSwgJ3ByZWZpeCc6ICclJ319LCAgICAgICAgICAgICAgICAgICAgICAgICAgIHsnUmljaCc6IHsndmFsdWUnOiAxMDUwLCAncHJlZml4JzogJyUnfX0sICAgICAgICAgICAgICAgICAgICAgICAgICAgeydCb2InOiAxODd9XSlcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgIFJldHVybnM6XG4gICAgIHwgICAgICAgICAgTm9uZSBvciBvYmplY3Q6IE5vbmUgaWYgZXJyb3IsIHJlcXVlc3RzLnJlc3BvbnNlIGlmIHN1Y2Nlc3NmdWwuXG4gICAgIHwgIFxuICAgICB8ICB0ZXh0KHNlbGYsIHdpZGdldF9rZXksICp0ZXh0cywgKiprd2FyZ3MpXG4gICAgIHwgICAgICBQdXNoIHRvIHRleHQgd2lkZ2V0LlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICBBcmdzOlxuICAgICB8ICAgICAgICAgIHdpZGdldF9rZXkgKHN0cik6IFVuaXF1ZSBHZWNrb2JvYXJkIHdpZGdldCBrZXkuXG4gICAgIHwgICAgICAgICAgKnRleHRzIChzdHJ8ZGljdCk6IFRleHQgdG8gcHVibGlzaCB0byB0aGUgd2lkZ2V0LlxuICAgICB8ICAgICAgICAgICAgICBFYWNoIGFyZ3VtZW50IGlzIHB1Ymxpc2hlZCBhcyBhbiBhZGRpdGlvbmFsIHBhZ2Ugb24gdGhlIHdpZGdldC5cbiAgICAgfCAgICAgICAgICAqKmt3YXJnczogQWRkaXRpb25hbCBwYXJhbWV0ZXJzLlxuICAgICB8ICAgICAgICAgICAgICBmbGFnIChzdHIpOiBBZGQgZXh0cmEgdmlzdWFsIGNsdWUgdG8gZWFjaCBwYWdlIG9mIHRoZSB3aWRnZXQuXG4gICAgIHwgICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byAnbm9uZScuXG4gICAgIHwgICAgICAgICAgICAgICAgICBXaGVuIGl0J3Mgbm90IGdpdmVuIG9yIHNldCB0byAnbm9uZScgKDApLCBubyBpY29uIHdpbGwgYmVcbiAgICAgfCAgICAgICAgICAgICAgICAgIGFkZGVkLiBXaGVuIHR5cGUgaXMgc2V0IHRvICdhbGVydCcgKDEpIGFuIGV4Y2xhbWF0aW9uIHBvaW50XG4gICAgIHwgICAgICAgICAgICAgICAgICBvbiB5ZWxsb3cgYmFja2dyb3VuZCB3aWxsIGFwcGVhciBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lci5cbiAgICAgfCAgICAgICAgICAgICAgICAgIFdoZW4gdHlwZSBpcyBzZXQgdG8gJ2luZm8nICgyKSwgYW4gJ2knIGljb24gb24gZ3JleVxuICAgICB8ICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZCB3aWxsIGJlIGRpc3BsYXllZCBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lci5cbiAgICAgfCAgICAgIFxuICAgICB8ICAgICAgRXhhbXBsZXM6XG4gICAgIHwgICAgICAgICAgPj4+IGltcG9ydCBvc1xuICAgICB8ICAgICAgICAgID4+PiBmcm9tIGdlY2tvYm9hcmQgaW1wb3J0IEdlY2tvXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvID0gR2Vja28ob3MuZW52aXJvblsnR0VDS09BUEknXSlcbiAgICAgfCAgICAgICAgICA+Pj4gd2lkZ2V0X2tleSA9ICcxODYyODUtYWRhZjRhNWEtZGQ4OS00MzU2LThmNDMtNzViZmFmNmI5NTc2J1xuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnRleHQod2lkZ2V0X2tleSwgJ0hlbGxvIFdvcmxkIScpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnRleHQod2lkZ2V0X2tleSwgJ0hlbGxvJywgJ1dvcmxkIScpXG4gICAgIHwgICAgICAgICAgPFJlc3BvbnNlIFsyMDBdPlxuICAgICB8ICAgICAgXG4gICAgIHwgICAgICAgICAgPj4+IGdlY2tvLnRleHQod2lkZ2V0X2tleSwgJ0hlbGxvJywgJ1dvcmxkIScsIGZsYWc9J2FsZXJ0JylcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgICAgICA+Pj4gZ2Vja28udGV4dCh3aWRnZXRfa2V5LCAgICAgICAgICAgICAgICAgICAgICAgICAgIHsndGV4dCc6ICdIZWxsbycsICd0eXBlJzogMH0sICAgICAgICAgICAgICAgICAgICAgICAgICAgeyd0ZXh0JzogJ1dvcmxkJywgJ3R5cGUnOiAxfSlcbiAgICAgfCAgICAgICAgICA8UmVzcG9uc2UgWzIwMF0+XG4gICAgIHwgICAgICBcbiAgICAgfCAgICAgIFJldHVybnM6XG4gICAgIHwgICAgICAgICAgTm9uZSBvciBvYmplY3Q6IE5vbmUgaWYgZXJyb3IsIHJlcXVlc3RzLnJlc3BvbnNlIGlmIHN1Y2Nlc3NmdWwuXG4gICAgIHwgIFxuICAgICB8ICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgIHwgIERhdGEgZGVzY3JpcHRvcnMgZGVmaW5lZCBoZXJlOlxuICAgICB8ICBcbiAgICAgfCAgX19kaWN0X19cbiAgICAgfCAgICAgIGRpY3Rpb25hcnkgZm9yIGluc3RhbmNlIHZhcmlhYmxlcyAoaWYgZGVmaW5lZClcbiAgICAgfCAgXG4gICAgIHwgIF9fd2Vha3JlZl9fXG4gICAgIHwgICAgICBsaXN0IG9mIHdlYWsgcmVmZXJlbmNlcyB0byB0aGUgb2JqZWN0IChpZiBkZWZpbmVkKSIs
ICAgICJkZXNjcmlwdGlvbl9jb250ZW50X3R5cGUiOiBudWxsLA==
ICAgICJkb2NzX3VybCI6IG51bGws
ICAgICJkb3dubG9hZF91cmwiOiAiIiw=
ICAgICJkb3dubG9hZHMiOiB7
ICAgICAgImxhc3RfZGF5IjogLTEs
ICAgICAgImxhc3RfbW9udGgiOiAtMSw=
ICAgICAgImxhc3Rfd2VlayI6IC0x
ICAgIH0s
ICAgICJob21lX3BhZ2UiOiAiaHR0cDovL3B5cGkucHl0aG9uLm9yZy9weXBpL2dlY2tvYm9hcmQvIiw=
ICAgICJrZXl3b3JkcyI6ICIiLA==
ICAgICJsaWNlbnNlIjogIkFwYWNoZSBMaWNlbnNlIDIuMCIs
ICAgICJtYWludGFpbmVyIjogIiIs
ICAgICJtYWludGFpbmVyX2VtYWlsIjogIiIs
ICAgICJuYW1lIjogImdlY2tvYm9hcmQiLA==
ICAgICJwYWNrYWdlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZ2Vja29ib2FyZC8iLA==
ICAgICJwbGF0Zm9ybSI6ICJVTktOT1dOIiw=
ICAgICJwcm9qZWN0X3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZ2Vja29ib2FyZC8iLA==
ICAgICJwcm9qZWN0X3VybHMiOiB7
ICAgICAgIkhvbWVwYWdlIjogImh0dHA6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaS9nZWNrb2JvYXJkLyI=
ICAgIH0s
ICAgICJyZWxlYXNlX3VybCI6ICJodHRwczovL3B5cGkub3JnL3Byb2plY3QvZ2Vja29ib2FyZC8wLjguNi8iLA==
ICAgICJyZXF1aXJlc19kaXN0IjogbnVsbCw=
ICAgICJyZXF1aXJlc19weXRob24iOiAiIiw=
ICAgICJzdW1tYXJ5IjogIkdlY2tvYm9hcmQgQVBJIEludGVyZmFjZSAoVW5vZmZpY2lhbCkiLA==
ICAgICJ2ZXJzaW9uIjogIjAuOC42Iiw=
ICAgICJ5YW5rZWQiOiBmYWxzZSw=
ICAgICJ5YW5rZWRfcmVhc29uIjogbnVsbA==
ICB9LA==
ICAibGFzdF9zZXJpYWwiOiAyMTI0NzQxLA==
ICAicmVsZWFzZXMiOiB7
ICAgICIwLjguNiI6IFs=
ICAgICAgew==
ICAgICAgICAiY29tbWVudF90ZXh0IjogIiIs
ICAgICAgICAiZGlnZXN0cyI6IHs=
ICAgICAgICAgICJibGFrZTJiXzI1NiI6ICJkY2ZlNWYzNjhlYjMyNzEzOThjMmMwZmIxZWMyNjRmYmM4OTkzNzdkMmJkNGVlODA1OWI4MzJiNThhNDg5MDdmIiw=
ICAgICAgICAgICJtZDUiOiAiZDY0NzY2ZTkyNjMyZGQxMGM2Y2Q0MmMxMjkwNWFmMzUiLA==
ICAgICAgICAgICJzaGEyNTYiOiAiZjMxYzQzYWQ0YmI5OWJkOWJkMThkYTc3YjZkNTcwMjQ1ZWUyOTY2NzU4NGEyYmNlNTZlNjUxNzg5NWQ2NjI2MSI=
ICAgICAgICB9LA==
ICAgICAgICAiZG93bmxvYWRzIjogLTEs
ICAgICAgICAiZmlsZW5hbWUiOiAiZ2Vja29ib2FyZC0wLjguNi50YXIuZ3oiLA==
ICAgICAgICAiaGFzX3NpZyI6IGZhbHNlLA==
ICAgICAgICAibWQ1X2RpZ2VzdCI6ICJkNjQ3NjZlOTI2MzJkZDEwYzZjZDQyYzEyOTA1YWYzNSIs
ICAgICAgICAicGFja2FnZXR5cGUiOiAic2Rpc3QiLA==
ICAgICAgICAicHl0aG9uX3ZlcnNpb24iOiAic291cmNlIiw=
ICAgICAgICAicmVxdWlyZXNfcHl0aG9uIjogbnVsbCw=
ICAgICAgICAic2l6ZSI6IDEyMTY2LA==
ICAgICAgICAidXBsb2FkX3RpbWUiOiAiMjAxNi0wNS0xOVQyMzoxMzozMiIs
ICAgICAgICAidXBsb2FkX3RpbWVfaXNvXzg2MDEiOiAiMjAxNi0wNS0xOVQyMzoxMzozMi4yMzAzMzZaIiw=
ICAgICAgICAidXJsIjogImh0dHBzOi8vZmlsZXMucHl0aG9uaG9zdGVkLm9yZy9wYWNrYWdlcy9kYy9mZS81ZjM2OGViMzI3MTM5OGMyYzBmYjFlYzI2NGZiYzg5OTM3N2QyYmQ0ZWU4MDU5YjgzMmI1OGE0ODkwN2YvZ2Vja29ib2FyZC0wLjguNi50YXIuZ3oiLA==
ICAgICAgICAieWFua2VkIjogZmFsc2Us
ICAgICAgICAieWFua2VkX3JlYXNvbiI6IG51bGw=
ICAgICAgfQ==
ICAgIF0=
ICB9LA==
ICAidXJscyI6IFs=
ICAgIHs=
ICAgICAgImNvbW1lbnRfdGV4dCI6ICIiLA==
ICAgICAgImRpZ2VzdHMiOiB7
ICAgICAgICAiYmxha2UyYl8yNTYiOiAiZGNmZTVmMzY4ZWIzMjcxMzk4YzJjMGZiMWVjMjY0ZmJjODk5Mzc3ZDJiZDRlZTgwNTliODMyYjU4YTQ4OTA3ZiIs
ICAgICAgICAibWQ1IjogImQ2NDc2NmU5MjYzMmRkMTBjNmNkNDJjMTI5MDVhZjM1Iiw=
ICAgICAgICAic2hhMjU2IjogImYzMWM0M2FkNGJiOTliZDliZDE4ZGE3N2I2ZDU3MDI0NWVlMjk2Njc1ODRhMmJjZTU2ZTY1MTc4OTVkNjYyNjEi
ICAgICAgfSw=
ICAgICAgImRvd25sb2FkcyI6IC0xLA==
ICAgICAgImZpbGVuYW1lIjogImdlY2tvYm9hcmQtMC44LjYudGFyLmd6Iiw=
ICAgICAgImhhc19zaWciOiBmYWxzZSw=
ICAgICAgIm1kNV9kaWdlc3QiOiAiZDY0NzY2ZTkyNjMyZGQxMGM2Y2Q0MmMxMjkwNWFmMzUiLA==
ICAgICAgInBhY2thZ2V0eXBlIjogInNkaXN0Iiw=
ICAgICAgInB5dGhvbl92ZXJzaW9uIjogInNvdXJjZSIs
ICAgICAgInJlcXVpcmVzX3B5dGhvbiI6IG51bGws
ICAgICAgInNpemUiOiAxMjE2Niw=
ICAgICAgInVwbG9hZF90aW1lIjogIjIwMTYtMDUtMTlUMjM6MTM6MzIiLA==
ICAgICAgInVwbG9hZF90aW1lX2lzb184NjAxIjogIjIwMTYtMDUtMTlUMjM6MTM6MzIuMjMwMzM2WiIs
ICAgICAgInVybCI6ICJodHRwczovL2ZpbGVzLnB5dGhvbmhvc3RlZC5vcmcvcGFja2FnZXMvZGMvZmUvNWYzNjhlYjMyNzEzOThjMmMwZmIxZWMyNjRmYmM4OTkzNzdkMmJkNGVlODA1OWI4MzJiNThhNDg5MDdmL2dlY2tvYm9hcmQtMC44LjYudGFyLmd6Iiw=
ICAgICAgInlhbmtlZCI6IGZhbHNlLA==
ICAgICAgInlhbmtlZF9yZWFzb24iOiBudWxs
ICAgIH0=
ICBdLA==
ICAidnVsbmVyYWJpbGl0aWVzIjogW10=
fQ==
