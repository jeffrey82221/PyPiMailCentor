Record(
    {
        "allow_forking": Atomic(Bool()),
        "archive_url": Atomic(Str()),
        "archived": Atomic(Bool()),
        "assignees_url": Atomic(Str()),
        "blobs_url": Atomic(Str()),
        "branches_url": Atomic(Str()),
        "clone_url": Atomic(Str()),
        "collaborators_url": Atomic(Str()),
        "comments_url": Atomic(Str()),
        "commits_url": Atomic(Str()),
        "compare_url": Atomic(Str()),
        "contents_url": Atomic(Str()),
        "contributors_url": Atomic(Str()),
        "created_at": Atomic(Str()),
        "default_branch": Atomic(Str()),
        "deployments_url": Atomic(Str()),
        "description": Optional(Atomic(Str())),
        "disabled": Atomic(Bool()),
        "downloads_url": Atomic(Str()),
        "events_url": Atomic(Str()),
        "fork": Atomic(Bool()),
        "forks": Atomic(Int()),
        "forks_count": Atomic(Int()),
        "forks_url": Atomic(Str()),
        "full_name": Atomic(Str()),
        "git_commits_url": Atomic(Str()),
        "git_refs_url": Atomic(Str()),
        "git_tags_url": Atomic(Str()),
        "git_url": Atomic(Str()),
        "has_discussions": Atomic(Bool()),
        "has_downloads": Atomic(Bool()),
        "has_issues": Atomic(Bool()),
        "has_pages": Atomic(Bool()),
        "has_projects": Atomic(Bool()),
        "has_wiki": Atomic(Bool()),
        "homepage": Optional(Atomic(Str())),
        "hooks_url": Atomic(Str()),
        "html_url": Atomic(Str()),
        "id": Atomic(Int()),
        "is_template": Atomic(Bool()),
        "issue_comment_url": Atomic(Str()),
        "issue_events_url": Atomic(Str()),
        "issues_url": Atomic(Str()),
        "keys_url": Atomic(Str()),
        "labels_url": Atomic(Str()),
        "language": Optional(Atomic(Str())),
        "languages_url": Atomic(Str()),
        "license": Optional(
            Record(
                {
                    "key": Atomic(Str()),
                    "name": Atomic(Str()),
                    "node_id": Atomic(Str()),
                    "spdx_id": Atomic(Str()),
                    "url": Optional(Atomic(Str())),
                }
            )
        ),
        "merges_url": Atomic(Str()),
        "milestones_url": Atomic(Str()),
        "mirror_url": Atomic(Non()),
        "name": Atomic(Str()),
        "network_count": Atomic(Int()),
        "node_id": Atomic(Str()),
        "notifications_url": Atomic(Str()),
        "open_issues": Atomic(Int()),
        "open_issues_count": Atomic(Int()),
        "organization": Record(
            {
                "avatar_url": Atomic(Str()),
                "events_url": Atomic(Str()),
                "followers_url": Atomic(Str()),
                "following_url": Atomic(Str()),
                "gists_url": Atomic(Str()),
                "gravatar_id": Atomic(Str()),
                "html_url": Atomic(Str()),
                "id": Atomic(Int()),
                "login": Atomic(Str()),
                "node_id": Atomic(Str()),
                "organizations_url": Atomic(Str()),
                "received_events_url": Atomic(Str()),
                "repos_url": Atomic(Str()),
                "site_admin": Atomic(Bool()),
                "starred_url": Atomic(Str()),
                "subscriptions_url": Atomic(Str()),
                "type": Atomic(Str()),
                "url": Atomic(Str()),
            }
        ),
        "owner": Record(
            {
                "avatar_url": Atomic(Str()),
                "events_url": Atomic(Str()),
                "followers_url": Atomic(Str()),
                "following_url": Atomic(Str()),
                "gists_url": Atomic(Str()),
                "gravatar_id": Atomic(Str()),
                "html_url": Atomic(Str()),
                "id": Atomic(Int()),
                "login": Atomic(Str()),
                "node_id": Atomic(Str()),
                "organizations_url": Atomic(Str()),
                "received_events_url": Atomic(Str()),
                "repos_url": Atomic(Str()),
                "site_admin": Atomic(Bool()),
                "starred_url": Atomic(Str()),
                "subscriptions_url": Atomic(Str()),
                "type": Atomic(Str()),
                "url": Atomic(Str()),
            }
        ),
        "parent": Record(
            {
                "allow_forking": Atomic(Bool()),
                "archive_url": Atomic(Str()),
                "archived": Atomic(Bool()),
                "assignees_url": Atomic(Str()),
                "blobs_url": Atomic(Str()),
                "branches_url": Atomic(Str()),
                "clone_url": Atomic(Str()),
                "collaborators_url": Atomic(Str()),
                "comments_url": Atomic(Str()),
                "commits_url": Atomic(Str()),
                "compare_url": Atomic(Str()),
                "contents_url": Atomic(Str()),
                "contributors_url": Atomic(Str()),
                "created_at": Atomic(Str()),
                "default_branch": Atomic(Str()),
                "deployments_url": Atomic(Str()),
                "description": Optional(Atomic(Str())),
                "disabled": Atomic(Bool()),
                "downloads_url": Atomic(Str()),
                "events_url": Atomic(Str()),
                "fork": Atomic(Bool()),
                "forks": Atomic(Int()),
                "forks_count": Atomic(Int()),
                "forks_url": Atomic(Str()),
                "full_name": Atomic(Str()),
                "git_commits_url": Atomic(Str()),
                "git_refs_url": Atomic(Str()),
                "git_tags_url": Atomic(Str()),
                "git_url": Atomic(Str()),
                "has_discussions": Atomic(Bool()),
                "has_downloads": Atomic(Bool()),
                "has_issues": Atomic(Bool()),
                "has_pages": Atomic(Bool()),
                "has_projects": Atomic(Bool()),
                "has_wiki": Atomic(Bool()),
                "homepage": Optional(Atomic(Str())),
                "hooks_url": Atomic(Str()),
                "html_url": Atomic(Str()),
                "id": Atomic(Int()),
                "is_template": Atomic(Bool()),
                "issue_comment_url": Atomic(Str()),
                "issue_events_url": Atomic(Str()),
                "issues_url": Atomic(Str()),
                "keys_url": Atomic(Str()),
                "labels_url": Atomic(Str()),
                "language": Atomic(Str()),
                "languages_url": Atomic(Str()),
                "license": Optional(
                    Record(
                        {
                            "key": Atomic(Str()),
                            "name": Atomic(Str()),
                            "node_id": Atomic(Str()),
                            "spdx_id": Atomic(Str()),
                            "url": Optional(Atomic(Str())),
                        }
                    )
                ),
                "merges_url": Atomic(Str()),
                "milestones_url": Atomic(Str()),
                "mirror_url": Atomic(Non()),
                "name": Atomic(Str()),
                "node_id": Atomic(Str()),
                "notifications_url": Atomic(Str()),
                "open_issues": Atomic(Int()),
                "open_issues_count": Atomic(Int()),
                "owner": Record(
                    {
                        "avatar_url": Atomic(Str()),
                        "events_url": Atomic(Str()),
                        "followers_url": Atomic(Str()),
                        "following_url": Atomic(Str()),
                        "gists_url": Atomic(Str()),
                        "gravatar_id": Atomic(Str()),
                        "html_url": Atomic(Str()),
                        "id": Atomic(Int()),
                        "login": Atomic(Str()),
                        "node_id": Atomic(Str()),
                        "organizations_url": Atomic(Str()),
                        "received_events_url": Atomic(Str()),
                        "repos_url": Atomic(Str()),
                        "site_admin": Atomic(Bool()),
                        "starred_url": Atomic(Str()),
                        "subscriptions_url": Atomic(Str()),
                        "type": Atomic(Str()),
                        "url": Atomic(Str()),
                    }
                ),
                "private": Atomic(Bool()),
                "pulls_url": Atomic(Str()),
                "pushed_at": Atomic(Str()),
                "releases_url": Atomic(Str()),
                "size": Atomic(Int()),
                "ssh_url": Atomic(Str()),
                "stargazers_count": Atomic(Int()),
                "stargazers_url": Atomic(Str()),
                "statuses_url": Atomic(Str()),
                "subscribers_url": Atomic(Str()),
                "subscription_url": Atomic(Str()),
                "svn_url": Atomic(Str()),
                "tags_url": Atomic(Str()),
                "teams_url": Atomic(Str()),
                "topics": Array(Atomic(Str())),
                "trees_url": Atomic(Str()),
                "updated_at": Atomic(Str()),
                "url": Atomic(Str()),
                "visibility": Atomic(Str()),
                "watchers": Atomic(Int()),
                "watchers_count": Atomic(Int()),
                "web_commit_signoff_required": Atomic(Bool()),
            }
        ),
        "permissions": UniformRecord(
            FieldSet({"admin", "maintain", "pull", "push", "triage"}), Atomic(Bool())
        ),
        "private": Atomic(Bool()),
        "pulls_url": Atomic(Str()),
        "pushed_at": Atomic(Str()),
        "releases_url": Atomic(Str()),
        "size": Atomic(Int()),
        "source": Record(
            {
                "allow_forking": Atomic(Bool()),
                "archive_url": Atomic(Str()),
                "archived": Atomic(Bool()),
                "assignees_url": Atomic(Str()),
                "blobs_url": Atomic(Str()),
                "branches_url": Atomic(Str()),
                "clone_url": Atomic(Str()),
                "collaborators_url": Atomic(Str()),
                "comments_url": Atomic(Str()),
                "commits_url": Atomic(Str()),
                "compare_url": Atomic(Str()),
                "contents_url": Atomic(Str()),
                "contributors_url": Atomic(Str()),
                "created_at": Atomic(Str()),
                "default_branch": Atomic(Str()),
                "deployments_url": Atomic(Str()),
                "description": Optional(Atomic(Str())),
                "disabled": Atomic(Bool()),
                "downloads_url": Atomic(Str()),
                "events_url": Atomic(Str()),
                "fork": Atomic(Bool()),
                "forks": Atomic(Int()),
                "forks_count": Atomic(Int()),
                "forks_url": Atomic(Str()),
                "full_name": Atomic(Str()),
                "git_commits_url": Atomic(Str()),
                "git_refs_url": Atomic(Str()),
                "git_tags_url": Atomic(Str()),
                "git_url": Atomic(Str()),
                "has_discussions": Atomic(Bool()),
                "has_downloads": Atomic(Bool()),
                "has_issues": Atomic(Bool()),
                "has_pages": Atomic(Bool()),
                "has_projects": Atomic(Bool()),
                "has_wiki": Atomic(Bool()),
                "homepage": Optional(Atomic(Str())),
                "hooks_url": Atomic(Str()),
                "html_url": Atomic(Str()),
                "id": Atomic(Int()),
                "is_template": Atomic(Bool()),
                "issue_comment_url": Atomic(Str()),
                "issue_events_url": Atomic(Str()),
                "issues_url": Atomic(Str()),
                "keys_url": Atomic(Str()),
                "labels_url": Atomic(Str()),
                "language": Atomic(Str()),
                "languages_url": Atomic(Str()),
                "license": Optional(
                    Record(
                        {
                            "key": Atomic(Str()),
                            "name": Atomic(Str()),
                            "node_id": Atomic(Str()),
                            "spdx_id": Atomic(Str()),
                            "url": Optional(Atomic(Str())),
                        }
                    )
                ),
                "merges_url": Atomic(Str()),
                "milestones_url": Atomic(Str()),
                "mirror_url": Atomic(Non()),
                "name": Atomic(Str()),
                "node_id": Atomic(Str()),
                "notifications_url": Atomic(Str()),
                "open_issues": Atomic(Int()),
                "open_issues_count": Atomic(Int()),
                "owner": Record(
                    {
                        "avatar_url": Atomic(Str()),
                        "events_url": Atomic(Str()),
                        "followers_url": Atomic(Str()),
                        "following_url": Atomic(Str()),
                        "gists_url": Atomic(Str()),
                        "gravatar_id": Atomic(Str()),
                        "html_url": Atomic(Str()),
                        "id": Atomic(Int()),
                        "login": Atomic(Str()),
                        "node_id": Atomic(Str()),
                        "organizations_url": Atomic(Str()),
                        "received_events_url": Atomic(Str()),
                        "repos_url": Atomic(Str()),
                        "site_admin": Atomic(Bool()),
                        "starred_url": Atomic(Str()),
                        "subscriptions_url": Atomic(Str()),
                        "type": Atomic(Str()),
                        "url": Atomic(Str()),
                    }
                ),
                "private": Atomic(Bool()),
                "pulls_url": Atomic(Str()),
                "pushed_at": Atomic(Str()),
                "releases_url": Atomic(Str()),
                "size": Atomic(Int()),
                "ssh_url": Atomic(Str()),
                "stargazers_count": Atomic(Int()),
                "stargazers_url": Atomic(Str()),
                "statuses_url": Atomic(Str()),
                "subscribers_url": Atomic(Str()),
                "subscription_url": Atomic(Str()),
                "svn_url": Atomic(Str()),
                "tags_url": Atomic(Str()),
                "teams_url": Atomic(Str()),
                "topics": Array(Atomic(Str())),
                "trees_url": Atomic(Str()),
                "updated_at": Atomic(Str()),
                "url": Atomic(Str()),
                "visibility": Atomic(Str()),
                "watchers": Atomic(Int()),
                "watchers_count": Atomic(Int()),
                "web_commit_signoff_required": Atomic(Bool()),
            }
        ),
        "ssh_url": Atomic(Str()),
        "stargazers_count": Atomic(Int()),
        "stargazers_url": Atomic(Str()),
        "statuses_url": Atomic(Str()),
        "subscribers_count": Atomic(Int()),
        "subscribers_url": Atomic(Str()),
        "subscription_url": Atomic(Str()),
        "svn_url": Atomic(Str()),
        "tags_url": Atomic(Str()),
        "teams_url": Atomic(Str()),
        "temp_clone_token": Atomic(Str()),
        "template_repository": Record(
            {
                "allow_forking": Atomic(Bool()),
                "archive_url": Atomic(Str()),
                "archived": Atomic(Bool()),
                "assignees_url": Atomic(Str()),
                "blobs_url": Atomic(Str()),
                "branches_url": Atomic(Str()),
                "clone_url": Atomic(Str()),
                "collaborators_url": Atomic(Str()),
                "comments_url": Atomic(Str()),
                "commits_url": Atomic(Str()),
                "compare_url": Atomic(Str()),
                "contents_url": Atomic(Str()),
                "contributors_url": Atomic(Str()),
                "created_at": Atomic(Str()),
                "default_branch": Atomic(Str()),
                "deployments_url": Atomic(Str()),
                "description": Optional(Atomic(Str())),
                "disabled": Atomic(Bool()),
                "downloads_url": Atomic(Str()),
                "events_url": Atomic(Str()),
                "fork": Atomic(Bool()),
                "forks": Atomic(Int()),
                "forks_count": Atomic(Int()),
                "forks_url": Atomic(Str()),
                "full_name": Atomic(Str()),
                "git_commits_url": Atomic(Str()),
                "git_refs_url": Atomic(Str()),
                "git_tags_url": Atomic(Str()),
                "git_url": Atomic(Str()),
                "has_discussions": Atomic(Bool()),
                "has_downloads": Atomic(Bool()),
                "has_issues": Atomic(Bool()),
                "has_pages": Atomic(Bool()),
                "has_projects": Atomic(Bool()),
                "has_wiki": Atomic(Bool()),
                "homepage": Optional(Atomic(Str())),
                "hooks_url": Atomic(Str()),
                "html_url": Atomic(Str()),
                "id": Atomic(Int()),
                "is_template": Atomic(Bool()),
                "issue_comment_url": Atomic(Str()),
                "issue_events_url": Atomic(Str()),
                "issues_url": Atomic(Str()),
                "keys_url": Atomic(Str()),
                "labels_url": Atomic(Str()),
                "language": Optional(Atomic(Str())),
                "languages_url": Atomic(Str()),
                "license": Optional(
                    Record(
                        {
                            "key": Atomic(Str()),
                            "name": Atomic(Str()),
                            "node_id": Atomic(Str()),
                            "spdx_id": Atomic(Str()),
                            "url": Optional(Atomic(Str())),
                        }
                    )
                ),
                "merges_url": Atomic(Str()),
                "milestones_url": Atomic(Str()),
                "mirror_url": Atomic(Non()),
                "name": Atomic(Str()),
                "node_id": Atomic(Str()),
                "notifications_url": Atomic(Str()),
                "open_issues": Atomic(Int()),
                "open_issues_count": Atomic(Int()),
                "owner": Record(
                    {
                        "avatar_url": Atomic(Str()),
                        "events_url": Atomic(Str()),
                        "followers_url": Atomic(Str()),
                        "following_url": Atomic(Str()),
                        "gists_url": Atomic(Str()),
                        "gravatar_id": Atomic(Str()),
                        "html_url": Atomic(Str()),
                        "id": Atomic(Int()),
                        "login": Atomic(Str()),
                        "node_id": Atomic(Str()),
                        "organizations_url": Atomic(Str()),
                        "received_events_url": Atomic(Str()),
                        "repos_url": Atomic(Str()),
                        "site_admin": Atomic(Bool()),
                        "starred_url": Atomic(Str()),
                        "subscriptions_url": Atomic(Str()),
                        "type": Atomic(Str()),
                        "url": Atomic(Str()),
                    }
                ),
                "permissions": UniformRecord(
                    FieldSet({"admin", "maintain", "pull", "push", "triage"}),
                    Atomic(Bool()),
                ),
                "private": Atomic(Bool()),
                "pulls_url": Atomic(Str()),
                "pushed_at": Atomic(Str()),
                "releases_url": Atomic(Str()),
                "size": Atomic(Int()),
                "ssh_url": Atomic(Str()),
                "stargazers_count": Atomic(Int()),
                "stargazers_url": Atomic(Str()),
                "statuses_url": Atomic(Str()),
                "subscribers_url": Atomic(Str()),
                "subscription_url": Atomic(Str()),
                "svn_url": Atomic(Str()),
                "tags_url": Atomic(Str()),
                "teams_url": Atomic(Str()),
                "temp_clone_token": Atomic(Str()),
                "topics": Array(Atomic(Str())),
                "trees_url": Atomic(Str()),
                "updated_at": Atomic(Str()),
                "url": Atomic(Str()),
                "visibility": Atomic(Str()),
                "watchers": Atomic(Int()),
                "watchers_count": Atomic(Int()),
                "web_commit_signoff_required": Atomic(Bool()),
            }
        ),
        "topics": Array(Atomic(Str())),
        "trees_url": Atomic(Str()),
        "updated_at": Atomic(Str()),
        "url": Atomic(Str()),
        "visibility": Atomic(Str()),
        "watchers": Atomic(Int()),
        "watchers_count": Atomic(Int()),
        "web_commit_signoff_required": Atomic(Bool()),
    }
)
